uint64_t sub_100170D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015AC38(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_100170D78()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170D84(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_100170D90(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100170DE0()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170DEC()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170DF8()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170E04(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_100170E10(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100170E60()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170E6C()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170E78()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170E84(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_100170E90(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100170EE0()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100170EEC()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

int *sub_100170EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10015BCFC(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, a1);
}

uint64_t sub_100170F04@<X0>(uint64_t a1@<X8>)
{
  return sub_100170F20(&qword_1003756C8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_100170F20@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v9 = sub_1000039AC(a1);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2(0);
  sub_10000E660(v4 + *(int *)(v12 + 20), (uint64_t)v11, a1);
  v13 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
    return sub_100003E08((uint64_t)v11, a4, a3);
  UnknownStorage.init()();
  v14 = a4 + *(int *)(v13 + 20);
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a4 + *(int *)(v13 + 24);
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  return sub_100015704((uint64_t)v11, a1);
}

uint64_t sub_100171020(uint64_t a1)
{
  return sub_100033E58(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, &qword_1003756C8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

void (*sub_10017103C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756C8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 20);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756C8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    sub_100015704((uint64_t)v5, &qword_1003756C8);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
  }
  return sub_10017117C;
}

void sub_10017117C(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756C8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

BOOL sub_100171190()
{
  return sub_100031310(&qword_1003756C8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001711AC()
{
  return sub_1000313E8(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, &qword_1003756C8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001711C8()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001711D4(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t (*sub_1001711E0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100171230()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_10017123C()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_100171248()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_100171254(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t (*sub_100171260(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001712B0()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001712BC()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001712C8@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v3 = a1 + v2[5];
  v4 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v6 = a1 + v2[6];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + v2[7];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_10017134C@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_100171358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_1000039AC(&qword_1003756D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_10000E660(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1003756D0);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + v7[7];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return sub_100015704((uint64_t)v5, &qword_1003756D0);
}

uint64_t sub_100171468(uint64_t a1)
{
  return sub_100033E58(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1003756D0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

void (*sub_100171484(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756D0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 20);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756D0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = &v9[v6[7]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    sub_100015704((uint64_t)v5, &qword_1003756D0);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
  }
  return sub_1001715D4;
}

void sub_1001715D4(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756D0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

BOOL sub_1001715E8()
{
  return sub_100031310(&qword_1003756D0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100171604()
{
  return sub_1000313E8(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1003756D0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_100171620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_1000039AC(&qword_1003756D8);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_10000E660(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1003756D8);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + v7[6];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[7];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  return sub_100015704((uint64_t)v5, &qword_1003756D8);
}

uint64_t sub_100171754(uint64_t a1)
{
  return sub_100030888(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1003756D8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

void (*sub_100171770(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756D8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756D8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = &v9[v6[6]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[7]];
    *(_DWORD *)v14 = 0;
    v14[4] = 1;
    sub_100015704((uint64_t)v5, &qword_1003756D8);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  }
  return sub_1001718DC;
}

void sub_1001718DC(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756D8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

BOOL sub_1001718F0()
{
  return sub_1000198C8(&qword_1003756D8, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_10017190C()
{
  return sub_1000199A0(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1003756D8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_100171928@<X0>(uint64_t a1@<X8>)
{
  return sub_100171944(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, a1);
}

uint64_t sub_100171944@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  v8 = a1(0);
  v9 = a4 + *(int *)(v8 + 20);
  v10 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a4 + *(int *)(v8 + 24);
  v12 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

uint64_t sub_1001719E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, a1);
}

uint64_t sub_1001719EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, a1);
}

uint64_t sub_1001719F8()
{
  return sub_10015B6F4(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t sub_100171A04(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_100171A30(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100171A7C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 20)) != 6;
}

uint64_t sub_100171AA4()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_100171AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_1000039AC(&qword_1003756E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  sub_10000E660(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1003756E0);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + *(int *)(v7 + 24);
  v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_100015704((uint64_t)v5, &qword_1003756E0);
}

uint64_t sub_100171BFC(uint64_t a1)
{
  return sub_100030888(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, &qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

void (*sub_100171C18(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756E0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    v12 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = &v9[*(int *)(v6 + 24)];
    v14 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_100015704((uint64_t)v5, &qword_1003756E0);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  }
  return sub_100171D8C;
}

void sub_100171D8C(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

BOOL sub_100171DA0()
{
  return sub_1000198C8(&qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_100171DBC()
{
  return sub_1000199A0(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, &qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_100171DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_10015F4E0(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, 6, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, a1);
}

uint64_t sub_100171DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, a1);
}

uint64_t sub_100171DFC()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171E08(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_100171E14(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100171E64()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171E70()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171E7C()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171E88(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_100171E94(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100171EE4()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171EF0()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171EFC()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171F08(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_100171F14(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100171F64()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171F70()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171F7C()
{
  return sub_1000A9E40(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171F88(int a1)
{
  return sub_1000A9E80(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_100171F94(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100171FE4()
{
  return sub_1000278D8(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171FF0()
{
  return sub_100027914(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100171FFC()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100172008(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_100172014(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172064()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_100172070()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

int *sub_10017207C@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + result[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_1001720F8()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172104(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172110(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172160()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_10017216C()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172178()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172184(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172190(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001721E0()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001721EC()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001721F8()
{
  return sub_1000A9E40(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172204(int a1)
{
  return sub_1000A9E80(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172210(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172260()
{
  return sub_1000278D8(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_10017226C()
{
  return sub_100027914(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172278()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172284(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172290(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001722E0()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001722EC()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001722F8()
{
  return sub_1001514C4(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172304(int a1)
{
  return sub_100151504(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172310(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172360()
{
  return sub_1000336EC(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_10017236C()
{
  return sub_100033728(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172378()
{
  return sub_100172384(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_100172384(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 44));
  if (v2 == 6)
    return 0;
  else
    return v2;
}

uint64_t sub_1001723B0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1001723DC(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 44);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100172428()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 44)) != 6;
}

uint64_t sub_100172450()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(_BYTE *)(v0 + *(int *)(result + 44)) = 6;
  return result;
}

uint64_t sub_100172474()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48));
  if (v1 == 7)
    return 0;
  else
    return v1;
}

uint64_t sub_10017249C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_1001724C8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100172514()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48)) != 7;
}

uint64_t sub_10017253C()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(_BYTE *)(v0 + *(int *)(result + 48)) = 7;
  return result;
}

uint64_t sub_100172560()
{
  return sub_10015DA70(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_10017256C(int a1)
{
  return sub_10015DAB0(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_100172578(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 52);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001725C8()
{
  return sub_10015DB40(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001725D4()
{
  return sub_10015DB7C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001725E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000053C4(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, a1);
}

uint64_t sub_1001725EC(uint64_t a1)
{
  return sub_10000541C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001725F8())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100172620@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  uint64_t result;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;

  *a1 = &_swiftEmptyArrayStorage;
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  result = UnknownStorage.init()();
  v4 = (char *)a1 + v2[6];
  *(_DWORD *)v4 = 0;
  v4[4] = 1;
  v5 = (char *)a1 + v2[7];
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  v6 = (char *)a1 + v2[8];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a1 + v2[9];
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)a1 + v2[10];
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  *((_BYTE *)a1 + v2[11]) = 6;
  *((_BYTE *)a1 + v2[12]) = 7;
  v9 = (char *)a1 + v2[13];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  return result;
}

uint64_t sub_1001726DC()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001726E8(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001726F4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172744()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172750()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_10017275C()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172768(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172774(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001727C4()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001727D0()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001727DC()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001727E8(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001727F4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172844()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172850()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_10017285C()
{
  return sub_1000A9E40(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172868(int a1)
{
  return sub_1000A9E80(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172874(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001728C4()
{
  return sub_1000278D8(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001728D0()
{
  return sub_100027914(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001728DC()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001728E8(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001728F4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172944()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172950()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_10017295C()
{
  return sub_1001514C4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172968(int a1)
{
  return sub_100151504(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172974(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_1001729C4()
{
  return sub_1000336EC(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001729D0()
{
  return sub_100033728(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001729DC()
{
  return sub_1000A6D84(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001729E8(int a1)
{
  return sub_1000A6DC4(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001729F4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172A44()
{
  return sub_100033824(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172A50()
{
  return sub_100033860(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172A5C()
{
  return sub_100151698(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172A68(int a1)
{
  return sub_1001516D8(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172A74(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 48);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172AC4()
{
  return sub_1000B3C00(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172AD0()
{
  return sub_1000B3C3C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172ADC()
{
  return sub_10015DA70(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172AE8(int a1)
{
  return sub_10015DAB0(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172AF4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 52);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172B44()
{
  return sub_10015DB40(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172B50()
{
  return sub_10015DB7C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172B5C()
{
  return sub_10015DBB8(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172B68(int a1)
{
  return sub_10015DBF8(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_100172B74(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 56);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172BC4()
{
  return sub_10015DC88(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172BD0()
{
  return sub_10015DCC4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172BDC()
{
  return sub_100172BE8(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172BE8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _BYTE *v2;

  v2 = (_BYTE *)(v1 + *(int *)(a1(0) + 60));
  if (v2[4])
    return 0;
  else
    return *(unsigned int *)v2;
}

uint64_t sub_100172C1C(int a1)
{
  return sub_100172C28(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172C28(int a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a2(0);
  v5 = v2 + *(int *)(result + 60);
  *(_DWORD *)v5 = a1;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_100172C5C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 60);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172CAC()
{
  return sub_100172CB8(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

BOOL sub_100172CB8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return (*(_BYTE *)(v1 + *(int *)(a1(0) + 60) + 4) & 1) == 0;
}

uint64_t sub_100172CE8()
{
  return sub_100172CF4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172CF4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = a1(0);
  v3 = v1 + *(int *)(result + 60);
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_100172D24()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t sub_100172D4C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*sub_100172D78(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100172DC4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64)) != 6;
}

uint64_t sub_100172DEC()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(_BYTE *)(v0 + *(int *)(result + 64)) = 6;
  return result;
}

uint64_t sub_100172E10()
{
  return sub_10017BC98(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100172E1C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_100172E48(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 68);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100172E94()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 68)) != 7;
}

uint64_t sub_100172EBC()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(_BYTE *)(v0 + *(int *)(result + 68)) = 7;
  return result;
}

uint64_t sub_100172EE0()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t sub_100172F10(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v4 = v1 + *(int *)(result + 72);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100172F44(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_100172F94()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72) + 4) & 1) == 0;
}

uint64_t sub_100172FC0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v2 = v0 + *(int *)(result + 72);
  *(_DWORD *)v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

int *sub_100172FEC@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + result[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1 + result[10];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + result[11];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + result[12];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + result[13];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a1 + result[14];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1 + result[15];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  *(_BYTE *)(a1 + result[16]) = 6;
  *(_BYTE *)(a1 + result[17]) = 7;
  v14 = a1 + result[18];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  return result;
}

uint64_t sub_1001730F0()
{
  return sub_100159148(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001730FC(int a1)
{
  return sub_10017311C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_10017311C(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 16, v18, 1, 0);
  *(_DWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 20) = 0;
  return result;
}

void (*sub_1001731D0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 16);
  if (*(_BYTE *)(v5 + 20))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100173250;
}

void sub_100173250(uint64_t *a1, char a2)
{
  sub_100173268(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100173268(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 16, v12, 1, 0);
  *(_DWORD *)(v19 + 16) = v10;
  *(_BYTE *)(v19 + 20) = 0;
  free((void *)v9);
}

BOOL sub_100173344()
{
  return sub_10002EDC0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100173350()
{
  return sub_100173370(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100173370(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 16, v16, 1, 0);
  *(_DWORD *)(v14 + 16) = 0;
  *(_BYTE *)(v14 + 20) = 1;
  return result;
}

uint64_t sub_100173420()
{
  return sub_10016912C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_10017342C(int a1)
{
  return sub_10017344C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_10017344C(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 24, v18, 1, 0);
  *(_DWORD *)(v16 + 24) = a1;
  *(_BYTE *)(v16 + 28) = 0;
  return result;
}

void (*sub_100173500(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 24, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 24);
  if (*(_BYTE *)(v5 + 28))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100173580;
}

void sub_100173580(uint64_t *a1, char a2)
{
  sub_100173598(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100173598(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 24, v12, 1, 0);
  *(_DWORD *)(v19 + 24) = v10;
  *(_BYTE *)(v19 + 28) = 0;
  free((void *)v9);
}

BOOL sub_100173674()
{
  return sub_10016938C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100173680()
{
  return sub_1001736A0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001736A0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 24, v16, 1, 0);
  *(_DWORD *)(v14 + 24) = 0;
  *(_BYTE *)(v14 + 28) = 1;
  return result;
}

uint64_t sub_100173750()
{
  return sub_10016948C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_10017375C(int a1)
{
  return sub_10017377C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_10017377C(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 32, v18, 1, 0);
  *(_DWORD *)(v16 + 32) = a1;
  *(_BYTE *)(v16 + 36) = 0;
  return result;
}

void (*sub_100173830(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 32, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 32);
  if (*(_BYTE *)(v5 + 36))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001738B0;
}

void sub_1001738B0(uint64_t *a1, char a2)
{
  sub_1001738C8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_1001738C8(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 32, v12, 1, 0);
  *(_DWORD *)(v19 + 32) = v10;
  *(_BYTE *)(v19 + 36) = 0;
  free((void *)v9);
}

BOOL sub_1001739A4()
{
  return sub_1001696EC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001739B0()
{
  return sub_1001739D0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001739D0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 32, v16, 1, 0);
  *(_DWORD *)(v14 + 32) = 0;
  *(_BYTE *)(v14 + 36) = 1;
  return result;
}

uint64_t sub_100173A80()
{
  return sub_1001697EC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100173A8C(int a1)
{
  return sub_100173AAC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100173AAC(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 40, v18, 1, 0);
  *(_DWORD *)(v16 + 40) = a1;
  *(_BYTE *)(v16 + 44) = 0;
  return result;
}

void (*sub_100173B60(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 40, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 40);
  if (*(_BYTE *)(v5 + 44))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100173BE0;
}

void sub_100173BE0(uint64_t *a1, char a2)
{
  sub_100173BF8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100173BF8(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 40, v12, 1, 0);
  *(_DWORD *)(v19 + 40) = v10;
  *(_BYTE *)(v19 + 44) = 0;
  free((void *)v9);
}

BOOL sub_100173CD4()
{
  return sub_100169A4C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100173CE0()
{
  return sub_100173D00(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100173D00(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 40, v16, 1, 0);
  *(_DWORD *)(v14 + 40) = 0;
  *(_BYTE *)(v14 + 44) = 1;
  return result;
}

uint64_t sub_100173DB0()
{
  return sub_100173DBC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100173DBC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 48, v4, 0, 0);
  if (*(_BYTE *)(v2 + 52))
    return 0;
  else
    return *(unsigned int *)(v2 + 48);
}

uint64_t sub_100173E14(int a1)
{
  return sub_100173E34(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100173E34(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 48, v18, 1, 0);
  *(_DWORD *)(v16 + 48) = a1;
  *(_BYTE *)(v16 + 52) = 0;
  return result;
}

void (*sub_100173EE8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 48, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 48);
  if (*(_BYTE *)(v5 + 52))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100173F68;
}

void sub_100173F68(uint64_t *a1, char a2)
{
  sub_100173F80(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100173F80(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 48, v12, 1, 0);
  *(_DWORD *)(v19 + 48) = v10;
  *(_BYTE *)(v19 + 52) = 0;
  free((void *)v9);
}

BOOL sub_10017405C()
{
  return sub_100174068(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100174068(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 48, v4, 0, 0);
  return (*(_BYTE *)(v2 + 52) & 1) == 0;
}

uint64_t sub_1001740BC()
{
  return sub_1001740DC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001740DC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 48, v16, 1, 0);
  *(_DWORD *)(v14 + 48) = 0;
  *(_BYTE *)(v14 + 52) = 1;
  return result;
}

uint64_t sub_10017418C()
{
  return sub_100174198(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100174198(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 56, v4, 0, 0);
  if (*(_BYTE *)(v2 + 60))
    return 0;
  else
    return *(unsigned int *)(v2 + 56);
}

uint64_t sub_1001741F0(int a1)
{
  return sub_100174210(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100174210(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 56, v18, 1, 0);
  *(_DWORD *)(v16 + 56) = a1;
  *(_BYTE *)(v16 + 60) = 0;
  return result;
}

void (*sub_1001742C4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 56, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 56);
  if (*(_BYTE *)(v5 + 60))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100174344;
}

void sub_100174344(uint64_t *a1, char a2)
{
  sub_10017435C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_10017435C(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 56, v12, 1, 0);
  *(_DWORD *)(v19 + 56) = v10;
  *(_BYTE *)(v19 + 60) = 0;
  free((void *)v9);
}

BOOL sub_100174438()
{
  return sub_100174444(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100174444(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 56, v4, 0, 0);
  return (*(_BYTE *)(v2 + 60) & 1) == 0;
}

uint64_t sub_100174498()
{
  return sub_1001744B8(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001744B8(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 56, v16, 1, 0);
  *(_DWORD *)(v14 + 56) = 0;
  *(_BYTE *)(v14 + 60) = 1;
  return result;
}

uint64_t sub_100174568()
{
  return sub_100174574(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100174574(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 64, v4, 0, 0);
  if (*(_BYTE *)(v2 + 68))
    return 0;
  else
    return *(unsigned int *)(v2 + 64);
}

uint64_t sub_1001745CC(int a1)
{
  return sub_1001745EC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001745EC(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 64, v18, 1, 0);
  *(_DWORD *)(v16 + 64) = a1;
  *(_BYTE *)(v16 + 68) = 0;
  return result;
}

void (*sub_1001746A0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 64, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 64);
  if (*(_BYTE *)(v5 + 68))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100174720;
}

void sub_100174720(uint64_t *a1, char a2)
{
  sub_100174738(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100174738(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 64, v12, 1, 0);
  *(_DWORD *)(v19 + 64) = v10;
  *(_BYTE *)(v19 + 68) = 0;
  free((void *)v9);
}

BOOL sub_100174814()
{
  return sub_100174820(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100174820(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 64, v4, 0, 0);
  return (*(_BYTE *)(v2 + 68) & 1) == 0;
}

uint64_t sub_100174874()
{
  return sub_100174894(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100174894(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 64, v16, 1, 0);
  *(_DWORD *)(v14 + 64) = 0;
  *(_BYTE *)(v14 + 68) = 1;
  return result;
}

uint64_t sub_100174944()
{
  return sub_100174950(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100174950(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 72, v4, 0, 0);
  if (*(_BYTE *)(v2 + 76))
    return 0;
  else
    return *(unsigned int *)(v2 + 72);
}

uint64_t sub_1001749A8(int a1)
{
  return sub_1001749C8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001749C8(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 72, v18, 1, 0);
  *(_DWORD *)(v16 + 72) = a1;
  *(_BYTE *)(v16 + 76) = 0;
  return result;
}

void (*sub_100174A7C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 72, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 72);
  if (*(_BYTE *)(v5 + 76))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100174AFC;
}

void sub_100174AFC(uint64_t *a1, char a2)
{
  sub_100174B14(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100174B14(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 72, v12, 1, 0);
  *(_DWORD *)(v19 + 72) = v10;
  *(_BYTE *)(v19 + 76) = 0;
  free((void *)v9);
}

BOOL sub_100174BF0()
{
  return sub_100174BFC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100174BFC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 72, v4, 0, 0);
  return (*(_BYTE *)(v2 + 76) & 1) == 0;
}

uint64_t sub_100174C50()
{
  return sub_100174C70(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100174C70(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 72, v16, 1, 0);
  *(_DWORD *)(v14 + 72) = 0;
  *(_BYTE *)(v14 + 76) = 1;
  return result;
}

uint64_t sub_100174D20()
{
  return sub_100174D2C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100174D2C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 80, v4, 0, 0);
  if (*(_BYTE *)(v2 + 84))
    return 0;
  else
    return *(unsigned int *)(v2 + 80);
}

uint64_t sub_100174D84(int a1)
{
  return sub_100174DA4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100174DA4(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 80, v18, 1, 0);
  *(_DWORD *)(v16 + 80) = a1;
  *(_BYTE *)(v16 + 84) = 0;
  return result;
}

void (*sub_100174E58(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 80, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_BYTE *)(v5 + 84))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100174ED8;
}

void sub_100174ED8(uint64_t *a1, char a2)
{
  sub_100174EF0(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100174EF0(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 80, v12, 1, 0);
  *(_DWORD *)(v19 + 80) = v10;
  *(_BYTE *)(v19 + 84) = 0;
  free((void *)v9);
}

BOOL sub_100174FCC()
{
  return sub_100174FD8(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100174FD8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 80, v4, 0, 0);
  return (*(_BYTE *)(v2 + 84) & 1) == 0;
}

uint64_t sub_10017502C()
{
  return sub_10017504C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_10017504C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 80, v16, 1, 0);
  *(_DWORD *)(v14 + 80) = 0;
  *(_BYTE *)(v14 + 84) = 1;
  return result;
}

uint64_t sub_1001750FC()
{
  return sub_100175108(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100175108(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 88, v4, 0, 0);
  if (*(_BYTE *)(v2 + 92))
    return 0;
  else
    return *(unsigned int *)(v2 + 88);
}

uint64_t sub_100175160(int a1)
{
  return sub_100175180(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175180(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 88, v18, 1, 0);
  *(_DWORD *)(v16 + 88) = a1;
  *(_BYTE *)(v16 + 92) = 0;
  return result;
}

void (*sub_100175234(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 88, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 88);
  if (*(_BYTE *)(v5 + 92))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001752B4;
}

void sub_1001752B4(uint64_t *a1, char a2)
{
  sub_1001752CC(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_1001752CC(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 88, v12, 1, 0);
  *(_DWORD *)(v19 + 88) = v10;
  *(_BYTE *)(v19 + 92) = 0;
  free((void *)v9);
}

BOOL sub_1001753A8()
{
  return sub_1001753B4(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_1001753B4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 88, v4, 0, 0);
  return (*(_BYTE *)(v2 + 92) & 1) == 0;
}

uint64_t sub_100175408()
{
  return sub_100175428(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175428(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 88, v16, 1, 0);
  *(_DWORD *)(v14 + 88) = 0;
  *(_BYTE *)(v14 + 92) = 1;
  return result;
}

uint64_t sub_1001754D8()
{
  return sub_1001754E4(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001754E4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 96, v4, 0, 0);
  if (*(_BYTE *)(v2 + 100))
    return 0;
  else
    return *(unsigned int *)(v2 + 96);
}

uint64_t sub_10017553C(int a1)
{
  return sub_10017555C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_10017555C(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 96, v18, 1, 0);
  *(_DWORD *)(v16 + 96) = a1;
  *(_BYTE *)(v16 + 100) = 0;
  return result;
}

void (*sub_100175610(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 96, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 96);
  if (*(_BYTE *)(v5 + 100))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100175690;
}

void sub_100175690(uint64_t *a1, char a2)
{
  sub_1001756A8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_1001756A8(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 96, v12, 1, 0);
  *(_DWORD *)(v19 + 96) = v10;
  *(_BYTE *)(v19 + 100) = 0;
  free((void *)v9);
}

BOOL sub_100175784()
{
  return sub_100175790(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100175790(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 96, v4, 0, 0);
  return (*(_BYTE *)(v2 + 100) & 1) == 0;
}

uint64_t sub_1001757E4()
{
  return sub_100175804(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175804(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 96, v16, 1, 0);
  *(_DWORD *)(v14 + 96) = 0;
  *(_BYTE *)(v14 + 100) = 1;
  return result;
}

uint64_t sub_1001758B4()
{
  return sub_1001758C0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001758C0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 104, v4, 0, 0);
  if (*(_BYTE *)(v2 + 108))
    return 0;
  else
    return *(unsigned int *)(v2 + 104);
}

uint64_t sub_100175918(int a1)
{
  return sub_100175938(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175938(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 104, v18, 1, 0);
  *(_DWORD *)(v16 + 104) = a1;
  *(_BYTE *)(v16 + 108) = 0;
  return result;
}

void (*sub_1001759EC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 104, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 104);
  if (*(_BYTE *)(v5 + 108))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100175A6C;
}

void sub_100175A6C(uint64_t *a1, char a2)
{
  sub_100175A84(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100175A84(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 104, v12, 1, 0);
  *(_DWORD *)(v19 + 104) = v10;
  *(_BYTE *)(v19 + 108) = 0;
  free((void *)v9);
}

BOOL sub_100175B60()
{
  return sub_100175B6C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100175B6C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 104, v4, 0, 0);
  return (*(_BYTE *)(v2 + 108) & 1) == 0;
}

uint64_t sub_100175BC0()
{
  return sub_100175BE0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175BE0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 104, v16, 1, 0);
  *(_DWORD *)(v14 + 104) = 0;
  *(_BYTE *)(v14 + 108) = 1;
  return result;
}

uint64_t sub_100175C90()
{
  return sub_100175C9C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100175C9C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 112, v4, 0, 0);
  if (*(_BYTE *)(v2 + 116))
    return 0;
  else
    return *(unsigned int *)(v2 + 112);
}

uint64_t sub_100175CF4(int a1)
{
  return sub_100175D14(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175D14(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 112, v18, 1, 0);
  *(_DWORD *)(v16 + 112) = a1;
  *(_BYTE *)(v16 + 116) = 0;
  return result;
}

void (*sub_100175DC8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 112, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 112);
  if (*(_BYTE *)(v5 + 116))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100175E48;
}

void sub_100175E48(uint64_t *a1, char a2)
{
  sub_100175E60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100175E60(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 112, v12, 1, 0);
  *(_DWORD *)(v19 + 112) = v10;
  *(_BYTE *)(v19 + 116) = 0;
  free((void *)v9);
}

BOOL sub_100175F3C()
{
  return sub_100175F48(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100175F48(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 112, v4, 0, 0);
  return (*(_BYTE *)(v2 + 116) & 1) == 0;
}

uint64_t sub_100175F9C()
{
  return sub_100175FBC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100175FBC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 112, v16, 1, 0);
  *(_DWORD *)(v14 + 112) = 0;
  *(_BYTE *)(v14 + 116) = 1;
  return result;
}

uint64_t sub_10017606C()
{
  return sub_100176078(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100176078(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 120, v4, 0, 0);
  if (*(_BYTE *)(v2 + 124))
    return 0;
  else
    return *(unsigned int *)(v2 + 120);
}

uint64_t sub_1001760D0(int a1)
{
  return sub_1001760F0(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001760F0(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 120, v18, 1, 0);
  *(_DWORD *)(v16 + 120) = a1;
  *(_BYTE *)(v16 + 124) = 0;
  return result;
}

void (*sub_1001761A4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 120, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 120);
  if (*(_BYTE *)(v5 + 124))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100176224;
}

void sub_100176224(uint64_t *a1, char a2)
{
  sub_10017623C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_10017623C(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 120, v12, 1, 0);
  *(_DWORD *)(v19 + 120) = v10;
  *(_BYTE *)(v19 + 124) = 0;
  free((void *)v9);
}

BOOL sub_100176318()
{
  return sub_100176324(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100176324(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 120, v4, 0, 0);
  return (*(_BYTE *)(v2 + 124) & 1) == 0;
}

uint64_t sub_100176378()
{
  return sub_100176398(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100176398(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 120, v16, 1, 0);
  *(_DWORD *)(v14 + 120) = 0;
  *(_BYTE *)(v14 + 124) = 1;
  return result;
}

uint64_t sub_100176448()
{
  return sub_100176454(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_100176454(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 128, v4, 0, 0);
  if (*(_BYTE *)(v2 + 132))
    return 0;
  else
    return *(unsigned int *)(v2 + 128);
}

uint64_t sub_1001764AC(int a1)
{
  return sub_1001764CC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_1001764CC(int a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[24];

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + v11)) & 1) == 0)
  {
    v12 = *(_QWORD *)(v5 + v11);
    v13 = a3();
    v14 = swift_allocObject(v13, a4, 7);
    a5(v12);
    v15 = *(_QWORD *)(v9 + v11);
    *(_QWORD *)(v9 + v11) = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v9 + v11);
  result = swift_beginAccess(v16 + 128, v18, 1, 0);
  *(_DWORD *)(v16 + 128) = a1;
  *(_BYTE *)(v16 + 132) = 0;
  return result;
}

void (*sub_100176580(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 128, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 128);
  if (*(_BYTE *)(v5 + 132))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100176600;
}

void sub_100176600(uint64_t *a1, char a2)
{
  sub_100176618(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

void sub_100176618(uint64_t *a1, char a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v12 = v9 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v12 = v9 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v14 + v13);
    v16 = a3();
    v17 = swift_allocObject(v16, a4, 7);
    a5(v15);
    v18 = *(_QWORD *)(v14 + v13);
    *(_QWORD *)(v14 + v13) = v17;
    swift_release(v18);
  }
LABEL_4:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84));
  swift_beginAccess(v19 + 128, v12, 1, 0);
  *(_DWORD *)(v19 + 128) = v10;
  *(_BYTE *)(v19 + 132) = 0;
  free((void *)v9);
}

BOOL sub_1001766F4()
{
  return sub_100176700(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_100176700(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess(v2 + 128, v4, 0, 0);
  return (*(_BYTE *)(v2 + 132) & 1) == 0;
}

uint64_t sub_100176754()
{
  return sub_100176774(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_1001C46B4);
}

uint64_t sub_100176774(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2();
    v12 = swift_allocObject(v11, a3, 7);
    a4(v10);
    v13 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v8 + v9);
  result = swift_beginAccess(v14 + 128, v16, 1, 0);
  *(_DWORD *)(v14 + 128) = 0;
  *(_BYTE *)(v14 + 132) = 1;
  return result;
}

uint64_t sub_100176824()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 136, v3, 0, 0);
  if (*(_BYTE *)(v1 + 140))
    return 0;
  else
    return *(unsigned int *)(v1 + 136);
}

uint64_t sub_100176878(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 136, v11, 1, 0);
  *(_DWORD *)(v9 + 136) = a1;
  *(_BYTE *)(v9 + 140) = 0;
  return result;
}

void (*sub_100176918(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 136, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 136);
  if (*(_BYTE *)(v5 + 140))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100176998;
}

void sub_100176998(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 136, v6, 1, 0);
  *(_DWORD *)(v13 + 136) = v4;
  *(_BYTE *)(v13 + 140) = 0;
  free((void *)v3);
}

BOOL sub_100176A64()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 136, v3, 0, 0);
  return (*(_BYTE *)(v1 + 140) & 1) == 0;
}

uint64_t sub_100176AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 136, v9, 1, 0);
  *(_DWORD *)(v7 + 136) = 0;
  *(_BYTE *)(v7 + 140) = 1;
  return result;
}

uint64_t sub_100176B4C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 144, v3, 0, 0);
  if (*(_BYTE *)(v1 + 148))
    return 0;
  else
    return *(unsigned int *)(v1 + 144);
}

uint64_t sub_100176BA0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 144, v11, 1, 0);
  *(_DWORD *)(v9 + 144) = a1;
  *(_BYTE *)(v9 + 148) = 0;
  return result;
}

void (*sub_100176C40(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 144, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 144);
  if (*(_BYTE *)(v5 + 148))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100176CC0;
}

void sub_100176CC0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 144, v6, 1, 0);
  *(_DWORD *)(v13 + 144) = v4;
  *(_BYTE *)(v13 + 148) = 0;
  free((void *)v3);
}

BOOL sub_100176D8C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 144, v3, 0, 0);
  return (*(_BYTE *)(v1 + 148) & 1) == 0;
}

uint64_t sub_100176DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 144, v9, 1, 0);
  *(_DWORD *)(v7 + 144) = 0;
  *(_BYTE *)(v7 + 148) = 1;
  return result;
}

uint64_t sub_100176E74()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 152, v3, 0, 0);
  if (*(_BYTE *)(v1 + 156))
    return 0;
  else
    return *(unsigned int *)(v1 + 152);
}

uint64_t sub_100176EC8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 152, v11, 1, 0);
  *(_DWORD *)(v9 + 152) = a1;
  *(_BYTE *)(v9 + 156) = 0;
  return result;
}

void (*sub_100176F68(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 152, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 152);
  if (*(_BYTE *)(v5 + 156))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100176FE8;
}

void sub_100176FE8(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 152, v6, 1, 0);
  *(_DWORD *)(v13 + 152) = v4;
  *(_BYTE *)(v13 + 156) = 0;
  free((void *)v3);
}

BOOL sub_1001770B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 152, v3, 0, 0);
  return (*(_BYTE *)(v1 + 156) & 1) == 0;
}

uint64_t sub_100177104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 152, v9, 1, 0);
  *(_DWORD *)(v7 + 152) = 0;
  *(_BYTE *)(v7 + 156) = 1;
  return result;
}

uint64_t sub_10017719C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 160, v3, 0, 0);
  if (*(_BYTE *)(v1 + 164))
    return 0;
  else
    return *(unsigned int *)(v1 + 160);
}

uint64_t sub_1001771F0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 160, v11, 1, 0);
  *(_DWORD *)(v9 + 160) = a1;
  *(_BYTE *)(v9 + 164) = 0;
  return result;
}

void (*sub_100177290(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 160, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 160);
  if (*(_BYTE *)(v5 + 164))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100177310;
}

void sub_100177310(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 160, v6, 1, 0);
  *(_DWORD *)(v13 + 160) = v4;
  *(_BYTE *)(v13 + 164) = 0;
  free((void *)v3);
}

BOOL sub_1001773DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 160, v3, 0, 0);
  return (*(_BYTE *)(v1 + 164) & 1) == 0;
}

uint64_t sub_10017742C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 160, v9, 1, 0);
  *(_DWORD *)(v7 + 160) = 0;
  *(_BYTE *)(v7 + 164) = 1;
  return result;
}

uint64_t sub_1001774C4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 168, v3, 0, 0);
  if (*(_BYTE *)(v1 + 172))
    return 0;
  else
    return *(unsigned int *)(v1 + 168);
}

uint64_t sub_100177518(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 168, v11, 1, 0);
  *(_DWORD *)(v9 + 168) = a1;
  *(_BYTE *)(v9 + 172) = 0;
  return result;
}

void (*sub_1001775B8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 168, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 168);
  if (*(_BYTE *)(v5 + 172))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100177638;
}

void sub_100177638(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 168, v6, 1, 0);
  *(_DWORD *)(v13 + 168) = v4;
  *(_BYTE *)(v13 + 172) = 0;
  free((void *)v3);
}

BOOL sub_100177704()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 168, v3, 0, 0);
  return (*(_BYTE *)(v1 + 172) & 1) == 0;
}

uint64_t sub_100177754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 168, v9, 1, 0);
  *(_DWORD *)(v7 + 168) = 0;
  *(_BYTE *)(v7 + 172) = 1;
  return result;
}

uint64_t sub_1001777EC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 176, v3, 0, 0);
  if (*(_BYTE *)(v1 + 180))
    return 0;
  else
    return *(unsigned int *)(v1 + 176);
}

uint64_t sub_100177840(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 176, v11, 1, 0);
  *(_DWORD *)(v9 + 176) = a1;
  *(_BYTE *)(v9 + 180) = 0;
  return result;
}

void (*sub_1001778E0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 176, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 176);
  if (*(_BYTE *)(v5 + 180))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100177960;
}

void sub_100177960(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 176, v6, 1, 0);
  *(_DWORD *)(v13 + 176) = v4;
  *(_BYTE *)(v13 + 180) = 0;
  free((void *)v3);
}

BOOL sub_100177A2C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 176, v3, 0, 0);
  return (*(_BYTE *)(v1 + 180) & 1) == 0;
}

uint64_t sub_100177A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 176, v9, 1, 0);
  *(_DWORD *)(v7 + 176) = 0;
  *(_BYTE *)(v7 + 180) = 1;
  return result;
}

uint64_t sub_100177B14()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 184, v3, 0, 0);
  if (*(_BYTE *)(v1 + 188))
    return 0;
  else
    return *(unsigned int *)(v1 + 184);
}

uint64_t sub_100177B68(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 184, v11, 1, 0);
  *(_DWORD *)(v9 + 184) = a1;
  *(_BYTE *)(v9 + 188) = 0;
  return result;
}

void (*sub_100177C08(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 184, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 184);
  if (*(_BYTE *)(v5 + 188))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100177C88;
}

void sub_100177C88(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 184, v6, 1, 0);
  *(_DWORD *)(v13 + 184) = v4;
  *(_BYTE *)(v13 + 188) = 0;
  free((void *)v3);
}

BOOL sub_100177D54()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 184, v3, 0, 0);
  return (*(_BYTE *)(v1 + 188) & 1) == 0;
}

uint64_t sub_100177DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 184, v9, 1, 0);
  *(_DWORD *)(v7 + 184) = 0;
  *(_BYTE *)(v7 + 188) = 1;
  return result;
}

uint64_t sub_100177E3C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 192, v3, 0, 0);
  if (*(_BYTE *)(v1 + 196))
    return 0;
  else
    return *(unsigned int *)(v1 + 192);
}

uint64_t sub_100177E90(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 192, v11, 1, 0);
  *(_DWORD *)(v9 + 192) = a1;
  *(_BYTE *)(v9 + 196) = 0;
  return result;
}

void (*sub_100177F30(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 192, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 192);
  if (*(_BYTE *)(v5 + 196))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100177FB0;
}

void sub_100177FB0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 192, v6, 1, 0);
  *(_DWORD *)(v13 + 192) = v4;
  *(_BYTE *)(v13 + 196) = 0;
  free((void *)v3);
}

BOOL sub_10017807C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 192, v3, 0, 0);
  return (*(_BYTE *)(v1 + 196) & 1) == 0;
}

uint64_t sub_1001780CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 192, v9, 1, 0);
  *(_DWORD *)(v7 + 192) = 0;
  *(_BYTE *)(v7 + 196) = 1;
  return result;
}

uint64_t sub_100178164()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 200, v3, 0, 0);
  if (*(_BYTE *)(v1 + 204))
    return 0;
  else
    return *(unsigned int *)(v1 + 200);
}

uint64_t sub_1001781B8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 200, v11, 1, 0);
  *(_DWORD *)(v9 + 200) = a1;
  *(_BYTE *)(v9 + 204) = 0;
  return result;
}

void (*sub_100178258(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 200, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 200);
  if (*(_BYTE *)(v5 + 204))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001782D8;
}

void sub_1001782D8(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 200, v6, 1, 0);
  *(_DWORD *)(v13 + 200) = v4;
  *(_BYTE *)(v13 + 204) = 0;
  free((void *)v3);
}

BOOL sub_1001783A4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 200, v3, 0, 0);
  return (*(_BYTE *)(v1 + 204) & 1) == 0;
}

uint64_t sub_1001783F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 200, v9, 1, 0);
  *(_DWORD *)(v7 + 200) = 0;
  *(_BYTE *)(v7 + 204) = 1;
  return result;
}

uint64_t sub_10017848C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 208, v3, 0, 0);
  if (*(_BYTE *)(v1 + 212))
    return 0;
  else
    return *(unsigned int *)(v1 + 208);
}

uint64_t sub_1001784E0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 208, v11, 1, 0);
  *(_DWORD *)(v9 + 208) = a1;
  *(_BYTE *)(v9 + 212) = 0;
  return result;
}

void (*sub_100178580(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 208, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 208);
  if (*(_BYTE *)(v5 + 212))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100178600;
}

void sub_100178600(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 208, v6, 1, 0);
  *(_DWORD *)(v13 + 208) = v4;
  *(_BYTE *)(v13 + 212) = 0;
  free((void *)v3);
}

BOOL sub_1001786CC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 208, v3, 0, 0);
  return (*(_BYTE *)(v1 + 212) & 1) == 0;
}

uint64_t sub_10017871C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 208, v9, 1, 0);
  *(_DWORD *)(v7 + 208) = 0;
  *(_BYTE *)(v7 + 212) = 1;
  return result;
}

uint64_t sub_1001787B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 216, v3, 0, 0);
  if (*(_BYTE *)(v1 + 220))
    return 0;
  else
    return *(unsigned int *)(v1 + 216);
}

uint64_t sub_100178808(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 216, v11, 1, 0);
  *(_DWORD *)(v9 + 216) = a1;
  *(_BYTE *)(v9 + 220) = 0;
  return result;
}

void (*sub_1001788A8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 216, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 216);
  if (*(_BYTE *)(v5 + 220))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100178928;
}

void sub_100178928(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 216, v6, 1, 0);
  *(_DWORD *)(v13 + 216) = v4;
  *(_BYTE *)(v13 + 220) = 0;
  free((void *)v3);
}

BOOL sub_1001789F4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 216, v3, 0, 0);
  return (*(_BYTE *)(v1 + 220) & 1) == 0;
}

uint64_t sub_100178A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 216, v9, 1, 0);
  *(_DWORD *)(v7 + 216) = 0;
  *(_BYTE *)(v7 + 220) = 1;
  return result;
}

uint64_t sub_100178ADC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 224, v3, 0, 0);
  if (*(_BYTE *)(v1 + 228))
    return 0;
  else
    return *(unsigned int *)(v1 + 224);
}

uint64_t sub_100178B30(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 224, v11, 1, 0);
  *(_DWORD *)(v9 + 224) = a1;
  *(_BYTE *)(v9 + 228) = 0;
  return result;
}

void (*sub_100178BD0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 224, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 224);
  if (*(_BYTE *)(v5 + 228))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100178C50;
}

void sub_100178C50(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 224, v6, 1, 0);
  *(_DWORD *)(v13 + 224) = v4;
  *(_BYTE *)(v13 + 228) = 0;
  free((void *)v3);
}

BOOL sub_100178D1C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 224, v3, 0, 0);
  return (*(_BYTE *)(v1 + 228) & 1) == 0;
}

uint64_t sub_100178D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 224, v9, 1, 0);
  *(_DWORD *)(v7 + 224) = 0;
  *(_BYTE *)(v7 + 228) = 1;
  return result;
}

uint64_t sub_100178E04()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 232, v3, 0, 0);
  if (*(_BYTE *)(v1 + 236))
    return 0;
  else
    return *(unsigned int *)(v1 + 232);
}

uint64_t sub_100178E58(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 232, v11, 1, 0);
  *(_DWORD *)(v9 + 232) = a1;
  *(_BYTE *)(v9 + 236) = 0;
  return result;
}

void (*sub_100178EF8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 232, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 232);
  if (*(_BYTE *)(v5 + 236))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100178F78;
}

void sub_100178F78(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 232, v6, 1, 0);
  *(_DWORD *)(v13 + 232) = v4;
  *(_BYTE *)(v13 + 236) = 0;
  free((void *)v3);
}

BOOL sub_100179044()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 232, v3, 0, 0);
  return (*(_BYTE *)(v1 + 236) & 1) == 0;
}

uint64_t sub_100179094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 232, v9, 1, 0);
  *(_DWORD *)(v7 + 232) = 0;
  *(_BYTE *)(v7 + 236) = 1;
  return result;
}

uint64_t sub_10017912C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 240, v3, 0, 0);
  if (*(_BYTE *)(v1 + 244))
    return 0;
  else
    return *(unsigned int *)(v1 + 240);
}

uint64_t sub_100179180(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 240, v11, 1, 0);
  *(_DWORD *)(v9 + 240) = a1;
  *(_BYTE *)(v9 + 244) = 0;
  return result;
}

void (*sub_100179220(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 240, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 240);
  if (*(_BYTE *)(v5 + 244))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001792A0;
}

void sub_1001792A0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 240, v6, 1, 0);
  *(_DWORD *)(v13 + 240) = v4;
  *(_BYTE *)(v13 + 244) = 0;
  free((void *)v3);
}

BOOL sub_10017936C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 240, v3, 0, 0);
  return (*(_BYTE *)(v1 + 244) & 1) == 0;
}

uint64_t sub_1001793BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 240, v9, 1, 0);
  *(_DWORD *)(v7 + 240) = 0;
  *(_BYTE *)(v7 + 244) = 1;
  return result;
}

uint64_t sub_100179454()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 248, v3, 0, 0);
  if (*(_BYTE *)(v1 + 252))
    return 0;
  else
    return *(unsigned int *)(v1 + 248);
}

uint64_t sub_1001794A8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 248, v11, 1, 0);
  *(_DWORD *)(v9 + 248) = a1;
  *(_BYTE *)(v9 + 252) = 0;
  return result;
}

void (*sub_100179548(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 248, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 248);
  if (*(_BYTE *)(v5 + 252))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001795C8;
}

void sub_1001795C8(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 248, v6, 1, 0);
  *(_DWORD *)(v13 + 248) = v4;
  *(_BYTE *)(v13 + 252) = 0;
  free((void *)v3);
}

BOOL sub_100179694()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 248, v3, 0, 0);
  return (*(_BYTE *)(v1 + 252) & 1) == 0;
}

uint64_t sub_1001796E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 248, v9, 1, 0);
  *(_DWORD *)(v7 + 248) = 0;
  *(_BYTE *)(v7 + 252) = 1;
  return result;
}

uint64_t sub_10017977C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 256, v3, 0, 0);
  if (*(_BYTE *)(v1 + 260))
    return 0;
  else
    return *(unsigned int *)(v1 + 256);
}

uint64_t sub_1001797D4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 256, v11, 1, 0);
  *(_DWORD *)(v9 + 256) = a1;
  *(_BYTE *)(v9 + 260) = 0;
  return result;
}

void (*sub_100179874(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 256, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 256);
  if (*(_BYTE *)(v5 + 260))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001798F8;
}

void sub_1001798F8(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 256, v6, 1, 0);
  *(_DWORD *)(v13 + 256) = v4;
  *(_BYTE *)(v13 + 260) = 0;
  free((void *)v3);
}

BOOL sub_1001799C4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20)) + 256;
  swift_beginAccess(v1, v3, 0, 0);
  return (*(_BYTE *)(v1 + 4) & 1) == 0;
}

uint64_t sub_100179A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 256, v9, 1, 0);
  *(_DWORD *)(v7 + 256) = 0;
  *(_BYTE *)(v7 + 260) = 1;
  return result;
}

uint64_t sub_100179AB0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 264, v3, 0, 0);
  if (*(_BYTE *)(v1 + 268))
    return 0;
  else
    return *(unsigned int *)(v1 + 264);
}

uint64_t sub_100179B08(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 264, v11, 1, 0);
  *(_DWORD *)(v9 + 264) = a1;
  *(_BYTE *)(v9 + 268) = 0;
  return result;
}

void (*sub_100179BA8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 264, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 264);
  if (*(_BYTE *)(v5 + 268))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100179C2C;
}

void sub_100179C2C(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 264, v6, 1, 0);
  *(_DWORD *)(v13 + 264) = v4;
  *(_BYTE *)(v13 + 268) = 0;
  free((void *)v3);
}

BOOL sub_100179CF8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20)) + 264;
  swift_beginAccess(v1, v3, 0, 0);
  return (*(_BYTE *)(v1 + 4) & 1) == 0;
}

uint64_t sub_100179D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 264, v9, 1, 0);
  *(_DWORD *)(v7 + 264) = 0;
  *(_BYTE *)(v7 + 268) = 1;
  return result;
}

uint64_t sub_100179DE4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 272, v3, 0, 0);
  if (*(_BYTE *)(v1 + 276))
    return 0;
  else
    return *(unsigned int *)(v1 + 272);
}

uint64_t sub_100179E3C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 272, v11, 1, 0);
  *(_DWORD *)(v9 + 272) = a1;
  *(_BYTE *)(v9 + 276) = 0;
  return result;
}

void (*sub_100179EDC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 272, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 272);
  if (*(_BYTE *)(v5 + 276))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_100179F60;
}

void sub_100179F60(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 272, v6, 1, 0);
  *(_DWORD *)(v13 + 272) = v4;
  *(_BYTE *)(v13 + 276) = 0;
  free((void *)v3);
}

BOOL sub_10017A02C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20)) + 272;
  swift_beginAccess(v1, v3, 0, 0);
  return (*(_BYTE *)(v1 + 4) & 1) == 0;
}

uint64_t sub_10017A080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 272, v9, 1, 0);
  *(_DWORD *)(v7 + 272) = 0;
  *(_BYTE *)(v7 + 276) = 1;
  return result;
}

uint64_t sub_10017A118()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_beginAccess(v1 + 280, v3, 0, 0);
  if (*(_BYTE *)(v1 + 284))
    return 0;
  else
    return *(unsigned int *)(v1 + 280);
}

uint64_t sub_10017A170(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v7 = swift_allocObject(v6, 285, 7);
    sub_1001C46B4(v5);
    v8 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v8);
  }
  v9 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess(v9 + 280, v11, 1, 0);
  *(_DWORD *)(v9 + 280) = a1;
  *(_BYTE *)(v9 + 284) = 0;
  return result;
}

void (*sub_10017A210(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 280, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 280);
  if (*(_BYTE *)(v5 + 284))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_10017A294;
}

void sub_10017A294(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v12);
  }
LABEL_4:
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess(v13 + 280, v6, 1, 0);
  *(_DWORD *)(v13 + 280) = v4;
  *(_BYTE *)(v13 + 284) = 0;
  free((void *)v3);
}

BOOL sub_10017A360()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20)) + 280;
  swift_beginAccess(v1, v3, 0, 0);
  return (*(_BYTE *)(v1 + 4) & 1) == 0;
}

uint64_t sub_10017A3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v5 = swift_allocObject(v4, 285, 7);
    sub_1001C46B4(v3);
    v6 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v6);
  }
  v7 = *(_QWORD *)(v1 + v2);
  result = swift_beginAccess(v7 + 280, v9, 1, 0);
  *(_DWORD *)(v7 + 280) = 0;
  *(_BYTE *)(v7 + 284) = 1;
  return result;
}

uint64_t sub_10017A44C@<X0>(uint64_t a1@<X8>)
{
  return sub_100023FF4(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, &qword_1003B0C88, &qword_1003B0C90, (uint64_t)sub_1001B7A58, a1);
}

uint64_t sub_10017A470()
{
  return sub_100036594(&qword_1003B0C88, &qword_1003B0C90, (uint64_t)sub_1001B7A58);
}

uint64_t sub_10017A48C()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A498(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t (*sub_10017A4A4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017A4F4()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A500()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A50C()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 28));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t sub_10017A534(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_10017A560(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 28);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017A5AC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 28)) != 6;
}

uint64_t sub_10017A5D4()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 6;
  return result;
}

uint64_t sub_10017A5F8()
{
  return sub_10017A604(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A604(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 32));
  if (v2 == 7)
    return 0;
  else
    return v2;
}

uint64_t sub_10017A630(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_10017A65C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 32);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017A6A8()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 32)) != 7;
}

uint64_t sub_10017A6D0()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 7;
  return result;
}

uint64_t sub_10017A6F4()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A700(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t (*sub_10017A70C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017A75C()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A768()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_10017A774@<X0>(uint64_t a1@<X8>)
{
  return sub_1000053C4(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, a1);
}

uint64_t sub_10017A780(uint64_t a1)
{
  return sub_10000541C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t (*sub_10017A78C())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10017A7B4@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  uint64_t result;
  char *v4;
  char *v5;

  *a1 = &_swiftEmptyArrayStorage;
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  result = UnknownStorage.init()();
  v4 = (char *)a1 + v2[6];
  *(_DWORD *)v4 = 0;
  v4[4] = 1;
  *((_BYTE *)a1 + v2[7]) = 6;
  *((_BYTE *)a1 + v2[8]) = 7;
  v5 = (char *)a1 + v2[9];
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t sub_10017A830()
{
  return sub_10001A638(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t sub_10017A83C(char a1)
{
  return sub_10001A66C(a1, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t (*sub_10017A848(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017A890()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0) + 20)) != 2;
}

uint64_t sub_10017A8B8()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_10017A8DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C724(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, 2, a1);
}

uint64_t sub_10017A8EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1000039AC(&qword_100375560);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  sub_10000E660(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100375560);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  v8 = a1 + v7[7];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return sub_100015704((uint64_t)v5, &qword_100375560);
}

uint64_t sub_10017A9F0(uint64_t a1)
{
  return sub_100033E58(a1, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, &qword_100375560, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

void (*sub_10017AA0C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_100375560);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0) + 20);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_100375560);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v11 = &v9[v6[7]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    sub_100015704((uint64_t)v5, &qword_100375560);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  }
  return sub_100154ACC;
}

BOOL sub_10017AB50()
{
  return sub_100031310(&qword_100375560, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_10017AB6C()
{
  return sub_1000313E8(type metadata accessor for Proto_Gnss_Emergency_CplaneContext, &qword_100375560, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_10017AB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v9;

  v3 = sub_1000039AC(&qword_1003756E8);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  sub_10000E660(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1003756E8);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  return sub_100015704((uint64_t)v5, &qword_1003756E8);
}

int *sub_10017AC88@<X0>(uint64_t a1@<X8>)
{
  int *result;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  return result;
}

uint64_t sub_10017ACD4(uint64_t a1)
{
  return sub_100030888(a1, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, &qword_1003756E8, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

void (*sub_10017ACF0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756E8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756E8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    sub_100015704((uint64_t)v5, &qword_1003756E8);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  }
  return sub_10017AE30;
}

void sub_10017AE30(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756E8, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

BOOL sub_10017AE44()
{
  return sub_1000198C8(&qword_1003756E8, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_10017AE60()
{
  return sub_1000199A0(type metadata accessor for Proto_Gnss_Emergency_CplaneContext, &qword_1003756E8, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_10017AE7C@<X0>(uint64_t a1@<X8>)
{
  return sub_100171944(type metadata accessor for Proto_Gnss_Emergency_CplaneContext, type metadata accessor for Proto_Gnss_Emergency_Configuration, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, a1);
}

uint64_t sub_10017AE98@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, a1);
}

uint64_t sub_10017AEA4()
{
  return sub_10001A638(type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_10017AEB0(char a1)
{
  return sub_10001A66C(a1, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t (*sub_10017AEBC(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017AF04()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 20)) != 2;
}

uint64_t sub_10017AF2C()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_10017AF50()
{
  return sub_10009E7A8(type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_10017AF5C(uint64_t a1, uint64_t a2)
{
  return sub_10009E808(a1, a2, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t (*sub_10017AF68(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B34;
}

BOOL sub_10017AFD0()
{
  return sub_10009E8C0(type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_10017AFDC()
{
  return sub_10009E8FC(type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_10017AFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1000039AC(&qword_1003756F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  sub_10000E660(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1003756F0);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 2;
  return sub_100015704((uint64_t)v5, &qword_1003756F0);
}

uint64_t sub_10017B0D0(uint64_t a1)
{
  return sub_100030BCC(a1, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, &qword_1003756F0, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

void (*sub_10017B0EC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756F0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756F0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    sub_100015704((uint64_t)v5, &qword_1003756F0);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
  }
  return sub_10017B214;
}

void sub_10017B214(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756F0, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

BOOL sub_10017B228()
{
  return sub_10002D31C(&qword_1003756F0, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t sub_10017B244()
{
  return sub_10002D3F4(type metadata accessor for Proto_Gnss_Emergency_EmergConfig, &qword_1003756F0, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t sub_10017B260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = sub_1000039AC(&qword_1003756F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  sub_10000E660(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_1003756F8);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = (_QWORD *)(a1 + v7[6]);
  *v9 = 0;
  v9[1] = 0;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  *(_BYTE *)(a1 + v7[10]) = 2;
  return sub_100015704((uint64_t)v5, &qword_1003756F8);
}

uint64_t sub_10017B380(uint64_t a1)
{
  return sub_100034398(a1, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, &qword_1003756F8, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

void (*sub_10017B39C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756F8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 32);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756F8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *v12 = 0;
    v12[1] = 0;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    v9[v6[10]] = 2;
    sub_100015704((uint64_t)v5, &qword_1003756F8);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
  }
  return sub_10017B4FC;
}

void sub_10017B4FC(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_1003756F8, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

BOOL sub_10017B510()
{
  return sub_10002E3A0(&qword_1003756F8, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_10017B52C()
{
  return sub_10002E478(type metadata accessor for Proto_Gnss_Emergency_EmergConfig, &qword_1003756F8, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_10017B548@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  *(_BYTE *)(a1 + v2[5]) = 2;
  v3 = (_QWORD *)(a1 + v2[6]);
  *v3 = 0;
  v3[1] = 0;
  v4 = a1 + v2[7];
  v5 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + v2[8];
  v7 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t sub_10017B5E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, a1);
}

uint64_t sub_10017B5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_SuplConfig, a1);
}

uint64_t sub_10017B600()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B60C(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B618(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B668()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B674()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B680()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B68C(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B698(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B6E8()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B6F4()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B700()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B70C(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B718(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B768()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B774()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B780()
{
  return sub_1000A9E40(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B78C(int a1)
{
  return sub_1000A9E80(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B798(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B7E8()
{
  return sub_1000278D8(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B7F4()
{
  return sub_100027914(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B800()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B80C(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B818(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B868()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B874()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B880()
{
  return sub_1001514C4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B88C(int a1)
{
  return sub_100151504(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B898(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B8E8()
{
  return sub_1000336EC(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B8F4()
{
  return sub_100033728(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B900()
{
  return sub_1000A6D84(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B90C(int a1)
{
  return sub_1000A6DC4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B918(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B968()
{
  return sub_100033824(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B974()
{
  return sub_100033860(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B980()
{
  return sub_100151698(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B98C(int a1)
{
  return sub_1001516D8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017B998(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 48);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017B9E8()
{
  return sub_1000B3C00(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017B9F4()
{
  return sub_1000B3C3C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BA00()
{
  return sub_10015DA70(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BA0C(int a1)
{
  return sub_10015DAB0(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017BA18(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 52);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BA68()
{
  return sub_10015DB40(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BA74()
{
  return sub_10015DB7C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BA80()
{
  return sub_10015DBB8(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BA8C(int a1)
{
  return sub_10015DBF8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017BA98(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 56);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BAE8()
{
  return sub_10015DC88(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BAF4()
{
  return sub_10015DCC4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BB00()
{
  return sub_100172BE8(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BB0C(int a1)
{
  return sub_100172C28(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t (*sub_10017BB18(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 60);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BB68()
{
  return sub_100172CB8(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BB74()
{
  return sub_100172CF4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BB80()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 64));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t sub_10017BBB0(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v4 = v1 + *(int *)(result + 64);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_10017BBE4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 64);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BC34()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 64) + 4) & 1) == 0;
}

uint64_t sub_10017BC60()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v2 = v0 + *(int *)(result + 64);
  *(_DWORD *)v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_10017BC8C()
{
  return sub_10017BC98(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t sub_10017BC98(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 68));
  if (v2 == 7)
    return 0;
  else
    return v2;
}

uint64_t sub_10017BCC4(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_10017BCF0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 68);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017BD3C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 68)) != 7;
}

uint64_t sub_10017BD64()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  *(_BYTE *)(v0 + *(int *)(result + 68)) = 7;
  return result;
}

int *sub_10017BD88@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + result[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1 + result[10];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + result[11];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + result[12];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + result[13];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a1 + result[14];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1 + result[15];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a1 + result[16];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  *(_BYTE *)(a1 + result[17]) = 7;
  return result;
}

uint64_t sub_10017BE80()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BE8C(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t (*sub_10017BE98(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BEE8()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BEF4()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BF00()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BF0C(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t (*sub_10017BF18(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017BF68()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BF74()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017BF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1000039AC(&qword_100375700);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  sub_10000E660(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_100375700);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 6;
  v8 = a1 + *(int *)(v7 + 24);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_100015704((uint64_t)v5, &qword_100375700);
}

uint64_t sub_10017C094(uint64_t a1)
{
  return sub_100034398(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, &qword_100375700, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

void (*sub_10017C0B0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_100375700);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 32);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_100375700);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 6;
    v11 = &v9[*(int *)(v6 + 24)];
    v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_100015704((uint64_t)v5, &qword_100375700);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  }
  return sub_10017C204;
}

void sub_10017C204(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_100375700, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

BOOL sub_10017C218()
{
  return sub_10002E3A0(&qword_100375700, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t sub_10017C234()
{
  return sub_10002E478(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, &qword_100375700, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t sub_10017C250()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C25C(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t (*sub_10017C268(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017C2B8()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C2C4()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C2D0()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 40));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t sub_10017C2F8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_10017C324(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 40);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017C370()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 40)) != 6;
}

uint64_t sub_10017C398()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  *(_BYTE *)(v0 + *(int *)(result + 40)) = 6;
  return result;
}

uint64_t sub_10017C3BC()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 44));
  if (v1 == 7)
    return 0;
  else
    return v1;
}

uint64_t sub_10017C3E4(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_10017C410(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 44);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017C45C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 44)) != 7;
}

uint64_t sub_10017C484()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  *(_BYTE *)(v0 + *(int *)(result + 44)) = 7;
  return result;
}

uint64_t sub_10017C4A8()
{
  return sub_100151698(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C4B4(int a1)
{
  return sub_1001516D8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t (*sub_10017C4C0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 48);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017C510()
{
  return sub_1000B3C00(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C51C()
{
  return sub_1000B3C3C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10017C528@<X0>(uint64_t a1@<X8>)
{
  return sub_1000053C4(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, a1);
}

uint64_t sub_10017C534(uint64_t a1)
{
  return sub_10000541C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t (*sub_10017C540())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10017C568@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  char *v8;
  char *v9;

  *a1 = &_swiftEmptyArrayStorage;
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  UnknownStorage.init()();
  v3 = (char *)a1 + v2[6];
  *(_DWORD *)v3 = 0;
  v3[4] = 1;
  v4 = (char *)a1 + v2[7];
  *(_DWORD *)v4 = 0;
  v4[4] = 1;
  v5 = (char *)a1 + v2[8];
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = (char *)a1 + v2[9];
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  *((_BYTE *)a1 + v2[10]) = 6;
  *((_BYTE *)a1 + v2[11]) = 7;
  v9 = (char *)a1 + v2[12];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  return result;
}

uint64_t sub_10017C638@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, a1);
}

uint64_t sub_10017C644()
{
  return sub_10015B6F4(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

uint64_t sub_10017C650(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_10017C67C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017C6C8()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0) + 20)) != 6;
}

uint64_t sub_10017C6F0()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_10017C714@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C724(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, 6, a1);
}

uint64_t sub_10017C724@<X0>(uint64_t (*a1)(_QWORD)@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  UnknownStorage.init()();
  result = a1(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_10017C764()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 20));
  if (v1 == 10)
    return 0;
  else
    return v1;
}

uint64_t sub_10017C78C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_10017C7B8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 10)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017C804()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 20)) != 10;
}

uint64_t sub_10017C82C()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 10;
  return result;
}

uint64_t sub_10017C850()
{
  return sub_10017C85C(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

uint64_t sub_10017C85C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 24));
  if (v2 == 6)
    return 0;
  else
    return v2;
}

uint64_t sub_10017C888(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_10017C8B4(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 24);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017C900()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 24)) != 6;
}

uint64_t sub_10017C928()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 6;
  return result;
}

uint64_t sub_10017C94C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_1000039AC(&qword_1003756E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  sub_10000E660(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1003756E0);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + *(int *)(v7 + 24);
  v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_100015704((uint64_t)v5, &qword_1003756E0);
}

uint64_t sub_10017CA80(uint64_t a1)
{
  return sub_100030BCC(a1, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, &qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

void (*sub_10017CA9C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_1003756E0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_1003756E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    v12 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = &v9[*(int *)(v6 + 24)];
    v14 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_100015704((uint64_t)v5, &qword_1003756E0);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  }
  return sub_100171D8C;
}

BOOL sub_10017CC10()
{
  return sub_10002D31C(&qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_10017CC2C()
{
  return sub_10002D3F4(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, &qword_1003756E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_10017CC48@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  *(_BYTE *)(a1 + v2[5]) = 10;
  *(_BYTE *)(a1 + v2[6]) = 6;
  v3 = a1 + v2[7];
  v4 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

double sub_10017CCB0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 20);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t sub_10017CCE4(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v4 = v1 + *(int *)(result + 20);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10017CD18(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017CD70()
{
  return sub_10001FCA0(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017CD7C()
{
  return sub_10001FCDC(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

double sub_10017CD88()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 24);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t sub_10017CDBC(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v4 = v1 + *(int *)(result + 24);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10017CDF0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017CE48()
{
  uint64_t v0;

  return (*(_BYTE *)(v0
                   + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 24)
                   + 8) & 1) == 0;
}

uint64_t sub_10017CE74()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v2 = v0 + *(int *)(result + 24);
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

double sub_10017CEA0()
{
  return sub_100027B84(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017CEAC(double a1)
{
  return sub_100027BC8(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, a1);
}

uint64_t (*sub_10017CEB8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017CF10()
{
  return sub_100027C64(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017CF1C()
{
  return sub_100027CA0(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

double sub_10017CF28()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 32);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t sub_10017CF5C(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v4 = v1 + *(int *)(result + 32);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10017CF90(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017CFE8()
{
  uint64_t v0;

  return (*(_BYTE *)(v0
                   + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 32)
                   + 8) & 1) == 0;
}

uint64_t sub_10017D014()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v2 = v0 + *(int *)(result + 32);
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

double sub_10017D040()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 36);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t sub_10017D074(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v4 = v1 + *(int *)(result + 36);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10017D0A8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017D100()
{
  uint64_t v0;

  return (*(_BYTE *)(v0
                   + *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 36)
                   + 8) & 1) == 0;
}

uint64_t sub_10017D12C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v2 = v0 + *(int *)(result + 36);
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

uint64_t sub_10017D158()
{
  return sub_1001514C4(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D164(int a1)
{
  return sub_100151504(a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t (*sub_10017D170(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D1C0()
{
  return sub_1000336EC(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D1CC()
{
  return sub_100033728(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D1D8()
{
  return sub_1000A6D84(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D1E4(int a1)
{
  return sub_1000A6DC4(a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t (*sub_10017D1F0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D240()
{
  return sub_100033824(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D24C()
{
  return sub_100033860(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_10017D258()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D264(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t (*sub_10017D270(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D2C0()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D2CC()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D2D8()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D2E4(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t (*sub_10017D2F0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D340()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D34C()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

double sub_10017D358()
{
  return sub_100027B84(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D364(double a1)
{
  return sub_100027BC8(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, a1);
}

uint64_t (*sub_10017D370(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_100003420;
}

BOOL sub_10017D3C8()
{
  return sub_100027C64(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D3D4()
{
  return sub_100027CA0(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10017D3E0()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D3EC(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t (*sub_10017D3F8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D448()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D454()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D460()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D46C(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t (*sub_10017D478(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D4C8()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D4D4()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D4E0()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D4EC(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t (*sub_10017D4F8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D548()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017D554()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

int *sub_10017D560@<X0>(uint64_t a1@<X8>)
{
  return sub_10015BCFC(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, a1);
}

uint64_t sub_10017D56C()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D578(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t (*sub_10017D584(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D5D4()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D5E0()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D5EC()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D5F8(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t (*sub_10017D604(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D654()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D660()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_10017D66C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015AC38(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, a1);
}

uint64_t sub_10017D678()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D684(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t (*sub_10017D690(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D6E0()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D6EC()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D6F8()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D704(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t (*sub_10017D710(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D760()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D76C()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t sub_10017D778@<X0>(uint64_t a1@<X8>)
{
  return sub_10015AC38(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, a1);
}

uint64_t sub_10017D784()
{
  return sub_100019188(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D790(int a1)
{
  return sub_1000191C8(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017D79C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D7EC()
{
  return sub_100019258(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D7F8()
{
  return sub_100019294(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D804()
{
  return sub_10002DF3C(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D810(int a1)
{
  return sub_10002DF7C(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017D81C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D86C()
{
  return sub_100027768(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D878()
{
  return sub_1000277A4(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D884()
{
  return sub_1000B8DB4(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D890(int a1)
{
  return sub_1000B8DF4(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017D89C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D8EC()
{
  return sub_100020B70(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D8F8()
{
  return sub_100020BAC(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D904()
{
  return sub_1000A9E40(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D910(int a1)
{
  return sub_1000A9E80(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017D91C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D96C()
{
  return sub_1000278D8(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D978()
{
  return sub_100027914(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D984()
{
  return sub_1000B4FE0(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D990(int a1)
{
  return sub_1000B5020(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017D99C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003530;
}

BOOL sub_10017D9EC()
{
  return sub_10002822C(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017D9F8()
{
  return sub_100028268(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017DA04()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 40));
  if (v1 == 4)
    return 0;
  else
    return v1;
}

uint64_t sub_10017DA2C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_10017DA58(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 40);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017DAA4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 40)) != 4;
}

uint64_t sub_10017DACC()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v0 + *(int *)(result + 40)) = 4;
  return result;
}

uint64_t sub_10017DAF0()
{
  return sub_1000A3B24(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017DAFC(char a1)
{
  return sub_1000A3B58(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t (*sub_10017DB08(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 44);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017DB50()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 44)) != 2;
}

uint64_t sub_10017DB78()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v0 + *(int *)(result + 44)) = 2;
  return result;
}

uint64_t sub_10017DB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_1000039AC(&qword_100375708);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(v1 + *(int *)(v6 + 48), (uint64_t)v5, &qword_100375708);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + v7[7];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return sub_100015704((uint64_t)v5, &qword_100375708);
}

uint64_t sub_10017DCAC(uint64_t a1)
{
  return sub_10017DCC8(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, &qword_100375708, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017DCC8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = v4 + *(int *)(a2(0) + 48);
  sub_100015704(v8, a3);
  sub_100003E08(a1, v8, a4);
  v9 = a4(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
}

void (*sub_10017DD40(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_100375708);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 48);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_100375708);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = &v9[v6[7]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    sub_100015704((uint64_t)v5, &qword_100375708);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
  }
  return sub_10017DE90;
}

void sub_10017DE90(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_100375708, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

BOOL sub_10017DEA4()
{
  return sub_10017DEC0(&qword_100375708, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

BOOL sub_10017DEC0(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v7 = sub_1000039AC(a1);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2(0);
  sub_10000E660(v3 + *(int *)(v10 + 48), (uint64_t)v9, a1);
  v11 = a3(0);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_100015704((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_10017DF7C()
{
  return sub_10017DF98(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, &qword_100375708, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_10017DF98(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 48);
  sub_100015704(v6, a2);
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t sub_10017E000()
{
  return sub_10017E00C(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017E00C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(a1(0) + 52)) & 1;
}

uint64_t sub_10017E034(char a1)
{
  return sub_10017E040(a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017E040(char a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  result = a2(0);
  *(_BYTE *)(v2 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_10017E06C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 52);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017E0B4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 52)) != 2;
}

uint64_t sub_10017E0DC()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v0 + *(int *)(result + 52)) = 2;
  return result;
}

uint64_t sub_10017E100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1000039AC(&qword_100375710);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(v1 + *(int *)(v6 + 56), (uint64_t)v5, &qword_100375710);
  v7 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return sub_100015704((uint64_t)v5, &qword_100375710);
}

uint64_t sub_10017E200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 56);
  sub_100015704(v3, &qword_100375710);
  sub_100003E08(a1, v3, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
  v4 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*sub_10017E270(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_100375710);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 56);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_100375710);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    sub_100015704((uint64_t)v5, &qword_100375710);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
  }
  return sub_10017E3B0;
}

void sub_10017E3B0(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_100375710, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

BOOL sub_10017E3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = sub_1000039AC(&qword_100375710);
  __chkstk_darwin(v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(v0 + *(int *)(v4 + 56), (uint64_t)v3, &qword_100375710);
  v5 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_100015704((uint64_t)v3, &qword_100375710);
  return v6;
}

uint64_t sub_10017E478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 56);
  sub_100015704(v1, &qword_100375710);
  v2 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_10017E4D0()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 60)) & 1;
}

uint64_t sub_10017E4F4(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*sub_10017E520(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 60);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10017E568()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 60)) != 2;
}

uint64_t sub_10017E590()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  *(_BYTE *)(v0 + *(int *)(result + 60)) = 2;
  return result;
}

uint64_t sub_10017E5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1000039AC(&qword_100375718);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(v1 + *(int *)(v6 + 64), (uint64_t)v5, &qword_100375718);
  v7 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return sub_100015704((uint64_t)v5, &qword_100375718);
}

uint64_t sub_10017E6B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 64);
  sub_100015704(v3, &qword_100375718);
  sub_100003E08(a1, v3, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
  v4 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*sub_10017E724(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1000039AC(&qword_100375718);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 64);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E660(v1 + v10, (uint64_t)v5, &qword_100375718);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    sub_100015704((uint64_t)v5, &qword_100375718);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
  }
  return sub_10017E864;
}

void sub_10017E864(uint64_t a1, char a2)
{
  sub_100007B94(a1, a2, &qword_100375718, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

BOOL sub_10017E878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = sub_1000039AC(&qword_100375718);
  __chkstk_darwin(v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(v0 + *(int *)(v4 + 64), (uint64_t)v3, &qword_100375718);
  v5 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_100015704((uint64_t)v3, &qword_100375718);
  return v6;
}

uint64_t sub_10017E92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 64);
  sub_100015704(v1, &qword_100375718);
  v2 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_10017E984@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v3 = a1 + v2[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + v2[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + v2[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + v2[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + v2[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  *(_BYTE *)(a1 + v2[10]) = 4;
  *(_BYTE *)(a1 + v2[11]) = 2;
  v8 = a1 + v2[12];
  v9 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_BYTE *)(a1 + v2[13]) = 2;
  v10 = a1 + v2[14];
  v11 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_BYTE *)(a1 + v2[15]) = 2;
  v12 = a1 + v2[16];
  v13 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
}

uint64_t sub_10017EAB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, a1);
}

uint64_t sub_10017EAC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, a1);
}

uint64_t sub_10017EACC@<X0>(uint64_t a1@<X8>)
{
  return sub_100004CB8(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, a1);
}

uint64_t sub_10017EAD8()
{
  return sub_10016AD64(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_10017EAE4(char a1)
{
  return sub_10016ADD4(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

void (*sub_10017EB00(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0, 0);
  v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 9)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return sub_10017EB7C;
}

void sub_10017EB7C(uint64_t *a1, char a2)
{
  sub_10016AF1C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

BOOL sub_10017EB90()
{
  return sub_10016B008(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_10017EB9C()
{
  return sub_10016B078(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

uint64_t sub_10017EBB8()
{
  return sub_10016B138(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_10017EBC4(int a1)
{
  return sub_10016B1AC(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

void (*sub_10017EBE0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v5 + 20, v3, 0, 0);
  v6 = *(_DWORD *)(v5 + 20);
  if (*(_BYTE *)(v5 + 24))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return sub_10017EC60;
}

void sub_10017EC60(uint64_t *a1, char a2)
{
  sub_10016B2FC(a1, a2, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

BOOL sub_10017EC74()
{
  return sub_10016B3E8(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_10017EC80()
{
  return sub_10016B458(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200);
}

uint64_t sub_10017EC9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10017ECB0(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, a1);
}

uint64_t sub_10017ECB0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE v15[24];

  v7 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess(v10, v15, 0, 0);
  sub_10000E660(v10, (uint64_t)v9, &qword_100375648);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v9, 1, v11) != 1)
    return sub_100003E08((uint64_t)v9, a3, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  UnknownStorage.init()();
  *(_BYTE *)(a3 + v11[5]) = 6;
  *(_BYTE *)(a3 + v11[6]) = 7;
  v12 = a3 + v11[7];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  return sub_100015704((uint64_t)v9, &qword_100375648);
}

uint64_t sub_10017EDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375648);
  v5 = __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v21[-v8 - 8];
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v10)) & 1) == 0)
  {
    v11 = *(_QWORD *)(v1 + v10);
    v12 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v14 = swift_retain(v11);
    sub_1001C5200(v14);
    swift_release(v11);
    v15 = *(_QWORD *)(v2 + v10);
    *(_QWORD *)(v2 + v10) = v13;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v2 + v10);
  sub_100003E08(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  v17 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  sub_10000E530((uint64_t)v9, (uint64_t)v7, &qword_100375648);
  v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v16+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v21, 33, 0);
  swift_retain(v16);
  sub_10000E574((uint64_t)v7, v18, &qword_100375648);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10017EF70(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1000039AC(&qword_100375648);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v10, v3, 0, 0);
  sub_10000E660(v10, (uint64_t)v5, &qword_100375648);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    v9[v6[6]] = 7;
    v11 = &v9[v6[7]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    sub_100015704((uint64_t)v5, &qword_100375648);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  }
  return sub_10017F0D0;
}

void sub_10017F0D0(uint64_t a1, char a2)
{
  sub_10001CF3C(a1, a2, (void (*)(void *))sub_10017EDEC, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

BOOL sub_10017F0E4()
{
  return sub_10001CFF4(&qword_100375648, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_10017F108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v5)) & 1) == 0)
  {
    v6 = *(_QWORD *)(v0 + v5);
    v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v9 = swift_retain(v6);
    sub_1001C5200(v9);
    swift_release(v6);
    v10 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    swift_release(v10);
  }
  v11 = *(_QWORD *)(v1 + v5);
  v12 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v11+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v16, 33, 0);
  swift_retain(v11);
  sub_10000E574((uint64_t)v4, v13, &qword_100375648);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10017F23C@<X0>(uint64_t a1@<X8>)
{
  return sub_10017F250(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, a1);
}

uint64_t sub_10017F250@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v7 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess(v10, v16, 0, 0);
  sub_10000E660(v10, (uint64_t)v9, &qword_100375690);
  v11 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1)
    return sub_100003E08((uint64_t)v9, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  UnknownStorage.init()();
  v12 = *(int *)(v11 + 20);
  if (qword_1003B0BA0 != -1)
    swift_once(&qword_1003B0BA0, sub_1001A974C);
  v13 = qword_1003B0BA8;
  *(_QWORD *)(a3 + v12) = qword_1003B0BA8;
  swift_retain(v13);
  return sub_100015704((uint64_t)v9, &qword_100375690);
}

uint64_t sub_10017F39C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375690);
  v5 = __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v21[-v8 - 8];
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v10)) & 1) == 0)
  {
    v11 = *(_QWORD *)(v1 + v10);
    v12 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v14 = swift_retain(v11);
    sub_1001C5200(v14);
    swift_release(v11);
    v15 = *(_QWORD *)(v2 + v10);
    *(_QWORD *)(v2 + v10) = v13;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v2 + v10);
  sub_100003E08(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  v17 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  sub_10000E530((uint64_t)v9, (uint64_t)v7, &qword_100375690);
  v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(v16+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v21, 33, 0);
  swift_retain(v16);
  sub_10000E574((uint64_t)v7, v18, &qword_100375690);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10017F520(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1000039AC(&qword_100375690);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(v10, v3, 0, 0);
  sub_10000E660(v10, (uint64_t)v5, &qword_100375690);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = *(int *)(v6 + 20);
    if (qword_1003B0BA0 != -1)
      swift_once(&qword_1003B0BA0, sub_1001A974C);
    v12 = qword_1003B0BA8;
    *(_QWORD *)&v9[v11] = qword_1003B0BA8;
    swift_retain(v12);
    sub_100015704((uint64_t)v5, &qword_100375690);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  }
  return sub_10017F690;
}

void sub_10017F690(uint64_t a1, char a2)
{
  sub_10001CF3C(a1, a2, (void (*)(void *))sub_10017F39C, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

BOOL sub_10017F6A4()
{
  return sub_10001CFF4(&qword_100375690, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_10017F6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v5)) & 1) == 0)
  {
    v6 = *(_QWORD *)(v0 + v5);
    v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v9 = swift_retain(v6);
    sub_1001C5200(v9);
    swift_release(v6);
    v10 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    swift_release(v10);
  }
  v11 = *(_QWORD *)(v1 + v5);
  v12 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(v11+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v16, 33, 0);
  swift_retain(v11);
  sub_10000E574((uint64_t)v4, v13, &qword_100375690);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10017F7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v3 = sub_1000039AC(&qword_100375720);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(v6, v21, 0, 0);
  sub_10000E660(v6, (uint64_t)v5, &qword_100375720);
  v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_100003E08((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + v7[7];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a1 + v7[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  *(_BYTE *)(a1 + v7[10]) = 4;
  *(_BYTE *)(a1 + v7[11]) = 2;
  v13 = a1 + v7[12];
  v14 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_BYTE *)(a1 + v7[13]) = 2;
  v15 = a1 + v7[14];
  v16 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_BYTE *)(a1 + v7[15]) = 2;
  v17 = a1 + v7[16];
  v18 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  return sub_100015704((uint64_t)v5, &qword_100375720);
}

uint64_t sub_10017FA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375720);
  v5 = __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v21[-v8 - 8];
  v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v10)) & 1) == 0)
  {
    v11 = *(_QWORD *)(v1 + v10);
    v12 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v14 = swift_retain(v11);
    sub_1001C5200(v14);
    swift_release(v11);
    v15 = *(_QWORD *)(v2 + v10);
    *(_QWORD *)(v2 + v10) = v13;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v2 + v10);
  sub_100003E08(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
  v17 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  sub_10000E530((uint64_t)v9, (uint64_t)v7, &qword_100375720);
  v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(v16+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, v21, 33, 0);
  swift_retain(v16);
  sub_10000E574((uint64_t)v7, v18, &qword_100375720);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10017FB8C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1000039AC(&qword_100375720);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(v10, v3, 0, 0);
  sub_10000E660(v10, (uint64_t)v5, &qword_100375720);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = &v9[v6[7]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[8]];
    *(_DWORD *)v14 = 0;
    v14[4] = 1;
    v15 = &v9[v6[9]];
    *(_DWORD *)v15 = 0;
    v15[4] = 1;
    v9[v6[10]] = 4;
    v9[v6[11]] = 2;
    v16 = &v9[v6[12]];
    v17 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v9[v6[13]] = 2;
    v18 = &v9[v6[14]];
    v19 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    v9[v6[15]] = 2;
    v20 = &v9[v6[16]];
    v21 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    sub_100015704((uint64_t)v5, &qword_100375720);
  }
  else
  {
    sub_100003E08((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
  }
  return sub_10017FDC0;
}

void sub_10017FDC0(uint64_t a1, char a2)
{
  sub_10001CF3C(a1, a2, (void (*)(void *))sub_10017FA08, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

BOOL sub_10017FDD4()
{
  return sub_10001CFF4(&qword_100375720, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_10017FDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_1000039AC(&qword_100375720);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v5)) & 1) == 0)
  {
    v6 = *(_QWORD *)(v0 + v5);
    v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v9 = swift_retain(v6);
    sub_1001C5200(v9);
    swift_release(v6);
    v10 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    swift_release(v10);
  }
  v11 = *(_QWORD *)(v1 + v5);
  v12 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(v11+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, v16, 33, 0);
  swift_retain(v11);
  sub_10000E574((uint64_t)v4, v13, &qword_100375720);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10017FF2C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0
                                     + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0)
                                              + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(v1, v3, 0, 0);
  if (*v1 == 4)
    return 0;
  else
    return *v1;
}

uint64_t sub_10017FF88(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  _BYTE v12[24];

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + v4)) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + v4);
    v6 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v8 = swift_retain(v5);
    sub_1001C5200(v8);
    swift_release(v5);
    v9 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v7;
    swift_release(v9);
  }
  v10 = (_BYTE *)(*(_QWORD *)(v2 + v4)
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  result = swift_beginAccess(v10, v12, 1, 0);
  *v10 = a1;
  return result;
}

void (*sub_10018003C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v1 + v4)
                         + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(v5, v3, 0, 0);
  v6 = *v5;
  if (v6 == 4)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return sub_1001800C4;
}

void sub_1001800C4(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(*(_QWORD *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 80);
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + v7);
    v10 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    v12 = swift_retain(v9);
    sub_1001C5200(v12);
    swift_release(v9);
    v13 = *(_QWORD *)(v8 + v7);
    *(_QWORD *)(v8 + v7) = v11;
    swift_release(v13);
  }
LABEL_4:
  v14 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(v14, v6, 1, 0);
  *v14 = v4;
  free((void *)v3);
}

BOOL sub_1001801A4()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0
                                     + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0)
                                              + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(v1, v3, 0, 0);
  return *v1 != 4;
}

uint64_t sub_100180200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  _BYTE v10[24];

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + v2)) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + v2);
    v4 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v6 = swift_retain(v3);
    sub_1001C5200(v6);
    swift_release(v3);
    v7 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    swift_release(v7);
  }
  v8 = (_BYTE *)(*(_QWORD *)(v1 + v2)
               + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  result = swift_beginAccess(v8, v10, 1, 0);
  *v8 = 4;
  return result;
}

uint64_t sub_1001802AC()
{
  return sub_100091180(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_1001802C0(char a1)
{
  return sub_100091200(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200, OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

void (*sub_1001802E4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0]);
  swift_beginAccess(v5, v3, 0, 0);
  *((_BYTE *)v3 + 84) = *v5 & 1;
  return sub_100180368;
}

void sub_100180368(uint64_t *a1, char a2)
{
  sub_100091368(a1, a2, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200, OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

BOOL sub_100180384()
{
  return sub_100091468(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_100180398()
{
  return sub_1001803BC(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass, (void (*)(uint64_t))sub_1001C5200, OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_1001803BC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), void (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  _BYTE v17[24];

  v8 = v4;
  v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v4 + v9);
    v11 = a2(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    a3(v13);
    swift_release(v10);
    v14 = *(_QWORD *)(v8 + v9);
    *(_QWORD *)(v8 + v9) = v12;
    swift_release(v14);
  }
  v15 = (_BYTE *)(*(_QWORD *)(v8 + v9) + *a4);
  result = swift_beginAccess(v15, v17, 1, 0);
  *v15 = 2;
  return result;
}

uint64_t sub_100180484@<X0>(uint64_t a1@<X8>)
{
  return sub_100023FF4(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &qword_1003B0D10, &qword_1003B0D18, (uint64_t)sub_1001BFF48, a1);
}

uint64_t sub_1001804A8()
{
  return sub_100036594(&qword_1003B0D10, &qword_1003B0D18, (uint64_t)sub_1001BFF48);
}

uint64_t sub_1001804C4()
{
  return sub_10001A638(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_1001804D0(char a1)
{
  return sub_10001A66C(a1, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t (*sub_1001804DC(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100180524()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 20)) != 2;
}

uint64_t sub_10018054C()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100180570()
{
  return sub_10001A738(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_10018057C(char a1)
{
  return sub_10001A76C(a1, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t (*sub_100180588(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_1001805D0()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 24)) != 2;
}

uint64_t sub_1001805F8()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_10018061C()
{
  return sub_10001A838(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_100180628(char a1)
{
  return sub_1000052EC(a1, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t (*sub_100180634(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_10018067C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 28)) != 2;
}

uint64_t sub_1001806A4()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_1001806C8()
{
  return sub_10001A90C(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t sub_1001806D4(char a1)
{
  return sub_10001A940(a1, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t (*sub_1001806E0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004330;
}

BOOL sub_100180728()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 32)) != 2;
}

uint64_t sub_100180750()
{
  uint64_t v0;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_100180774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384358);
  sub_10000E6A4(v0, (uint64_t)qword_100384358);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 18 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002D9470;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "PositionMethod_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 31;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "PositionMethod_kNoPosition";
  *(_QWORD *)(v13 + 8) = 26;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v7 + v6 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "PositionMethod_kAgps_SetAssisted";
  *((_QWORD *)v15 + 1) = 32;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v7 + v6 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "PositionMethod_kAgps_SetBased";
  *((_QWORD *)v17 + 1) = 29;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v7 + v6 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "PositionMethod_kAgps_SetAssistedPreferred";
  *((_QWORD *)v19 + 1) = 41;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v7 + v6 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "PositionMethod_kAgps_SetBasedPreferred";
  *((_QWORD *)v21 + 1) = 38;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v7 + v6 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "PositionMethod_kAGnss_SetAssisted";
  *((_QWORD *)v23 + 1) = 33;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v7 + v6 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 7;
  *(_QWORD *)v25 = "PositionMethod_kAGnss_SetBased";
  *((_QWORD *)v25 + 1) = 30;
  v25[16] = 2;
  v12();
  v26 = v7 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 8 * v4) = 8;
  *(_QWORD *)v26 = "PositionMethod_kAGnss_SetAssistedPreferred";
  *(_QWORD *)(v26 + 8) = 42;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  v27 = (_QWORD *)(v7 + v6 + 9 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 9;
  *(_QWORD *)v28 = "PositionMethod_kAGnss_SetBasedPreferred";
  *((_QWORD *)v28 + 1) = 39;
  v28[16] = 2;
  v12();
  v29 = (_QWORD *)(v7 + v6 + 10 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 10;
  *(_QWORD *)v30 = "PositionMethod_kAutonomousGps";
  *((_QWORD *)v30 + 1) = 29;
  v30[16] = 2;
  v12();
  v31 = (_QWORD *)(v7 + v6 + 11 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 11;
  *(_QWORD *)v32 = "PositionMethod_kAutonomousGnss";
  *((_QWORD *)v32 + 1) = 30;
  v32[16] = 2;
  v12();
  v33 = (_QWORD *)(v7 + v6 + 12 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 12;
  *(_QWORD *)v34 = "PositionMethod_kAflt";
  *((_QWORD *)v34 + 1) = 20;
  v34[16] = 2;
  v12();
  v35 = (_QWORD *)(v7 + v6 + 13 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 13;
  *(_QWORD *)v36 = "PositionMethod_kEcid";
  *((_QWORD *)v36 + 1) = 20;
  v36[16] = 2;
  v12();
  v37 = (_QWORD *)(v7 + v6 + 14 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 14;
  *(_QWORD *)v38 = "PositionMethod_kEotd";
  *((_QWORD *)v38 + 1) = 20;
  v38[16] = 2;
  v12();
  v39 = (_QWORD *)(v7 + v6 + 15 * v4);
  v40 = (char *)v39 + *(int *)(v2 + 48);
  *v39 = 15;
  *(_QWORD *)v40 = "PositionMethod_kOtdoa";
  *((_QWORD *)v40 + 1) = 21;
  v40[16] = 2;
  v12();
  v41 = v7 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 16 * v4) = 16;
  *(_QWORD *)v41 = "PositionMethod_kHistoricalDataRetrieval";
  *(_QWORD *)(v41 + 8) = 39;
  *(_BYTE *)(v41 + 16) = 2;
  v12();
  v42 = (_QWORD *)(v7 + v6 + 17 * v4);
  v43 = (char *)v42 + *(int *)(v2 + 48);
  *v42 = 17;
  *(_QWORD *)v43 = "PositionMethod_kSessionInfoQuery";
  *((_QWORD *)v43 + 1) = 32;
  v43[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100180C24()
{
  return sub_100008BD0(&qword_1003B0820, (uint64_t)qword_100384358, (uint64_t)sub_100180774);
}

uint64_t sub_100180C40@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0820, (uint64_t)qword_100384358, (uint64_t)sub_100180774, a1);
}

uint64_t sub_100180C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0820, (uint64_t)qword_100384358, (uint64_t)sub_100180774, a1);
}

uint64_t sub_100180C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384370);
  sub_10000E6A4(v0, (uint64_t)qword_100384370);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "PositionReqType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 32;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "PositionReqType_kUnknown";
  *(_QWORD *)(v13 + 8) = 24;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "PositionReqType_kCpSingleshot";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "PositionReqType_kCpPeriodic";
  *((_QWORD *)v17 + 1) = 27;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "PositionReqType_kSuplPosSingleShot";
  *((_QWORD *)v19 + 1) = 34;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "PositionReqType_kSuplPosPeriodic";
  *((_QWORD *)v21 + 1) = 32;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "PositionReqType_kSuplTriggerPeriodic";
  *((_QWORD *)v23 + 1) = 36;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 7;
  *(_QWORD *)v25 = "PositionReqType_kSuplTriggerAreaEvent";
  *((_QWORD *)v25 + 1) = 37;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100180F1C()
{
  return sub_100008BD0(&qword_1003B0828, (uint64_t)qword_100384370, (uint64_t)sub_100180C78);
}

uint64_t sub_100180F38@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0828, (uint64_t)qword_100384370, (uint64_t)sub_100180C78, a1);
}

uint64_t sub_100180F54@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0828, (uint64_t)qword_100384370, (uint64_t)sub_100180C78, a1);
}

uint64_t sub_100180F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384388);
  sub_10000E6A4(v0, (uint64_t)qword_100384388);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "PositionSession_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 32;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "PositionSession_kUnknown";
  *(_QWORD *)(v13 + 8) = 24;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "PositionSession_kControlPlane";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "PositionSession_kUserPlane";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018112C()
{
  return sub_100008BD0(&qword_1003B0830, (uint64_t)qword_100384388, (uint64_t)sub_100180F70);
}

uint64_t sub_100181148@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0830, (uint64_t)qword_100384388, (uint64_t)sub_100180F70, a1);
}

uint64_t sub_100181164@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0830, (uint64_t)qword_100384388, (uint64_t)sub_100180F70, a1);
}

uint64_t sub_100181180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003843A0);
  sub_10000E6A4(v0, (uint64_t)qword_1003843A0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "PositionProtocol_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 33;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "PositionProtocol_kUnknown";
  *(_QWORD *)(v13 + 8) = 25;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "PositionProtocol_kRRLP";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "PositionProtocol_kRRC";
  *((_QWORD *)v17 + 1) = 21;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "PositionProtocol_kLPP";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "PositionProtocol_kCdma";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "PositionProtocol_kNrLPP";
  *((_QWORD *)v23 + 1) = 23;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001813E8()
{
  return sub_100008BD0(&qword_1003B0838, (uint64_t)qword_1003843A0, (uint64_t)sub_100181180);
}

uint64_t sub_100181404@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0838, (uint64_t)qword_1003843A0, (uint64_t)sub_100181180, a1);
}

uint64_t sub_100181420@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0838, (uint64_t)qword_1003843A0, (uint64_t)sub_100181180, a1);
}

uint64_t sub_10018143C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003843B8);
  sub_10000E6A4(v0, (uint64_t)qword_1003843B8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v42 = swift_allocObject(v1, v6 + 17 * v4, v5 | 7);
  *(_OWORD *)(v42 + 16) = xmmword_1002CAB80;
  v7 = v42 + v6;
  v8 = v42 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v42 + v6) = 0;
  *(_QWORD *)v8 = "SessionErrorCode_PROTOBUF_DEFAULT";
  *(_QWORD *)(v8 + 8) = 33;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "SessionErrorCode_kUnknown";
  *(_QWORD *)(v12 + 8) = 25;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "SessionErrorCode_kSuccess";
  *((_QWORD *)v14 + 1) = 25;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "SessionErrorCode_kUeAbort";
  *((_QWORD *)v16 + 1) = 25;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "SessionErrorCode_kNetworkAbort";
  *((_QWORD *)v18 + 1) = 30;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "SessionErrorCode_kSuplSocketErr";
  *((_QWORD *)v20 + 1) = 31;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "SessionErrorCode_kSuplInputErr";
  *((_QWORD *)v22 + 1) = 30;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 7;
  *(_QWORD *)v24 = "SessionErrorCode_kSuplSSLFailed";
  *((_QWORD *)v24 + 1) = 31;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 8;
  *(_QWORD *)v25 = "SessionErrorCode_kSuplConnReadFail";
  *(_QWORD *)(v25 + 8) = 34;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 9;
  *(_QWORD *)v27 = "SessionErrorCode_kSuplConnWriteFail";
  *((_QWORD *)v27 + 1) = 35;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 10;
  *(_QWORD *)v29 = "SessionErrorCode_kSuplSessionTimeout";
  *((_QWORD *)v29 + 1) = 36;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 11;
  *(_QWORD *)v31 = "SessionErrorCode_kNotEnoughSats";
  *((_QWORD *)v31 + 1) = 31;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "SessionErrorCode_kAssistanceDataMissing";
  *((_QWORD *)v33 + 1) = 39;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 13;
  *(_QWORD *)v35 = "SessionErrorCode_kMethodNotSupported";
  *((_QWORD *)v35 + 1) = 36;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 14;
  *(_QWORD *)v37 = "SessionErrorCode_kNotAccomplishedGpsTimingCell";
  *((_QWORD *)v37 + 1) = 46;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 15;
  *(_QWORD *)v39 = "SessionErrorCode_kNotEnoughGanssSats";
  *((_QWORD *)v39 + 1) = 36;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 16;
  *(_QWORD *)v40 = "SessionErrorCode_kGanssAssistanceDataMissing";
  *(_QWORD *)(v40 + 8) = 44;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v42);
}

uint64_t sub_1001818AC()
{
  return sub_100008BD0(&qword_1003B0840, (uint64_t)qword_1003843B8, (uint64_t)sub_10018143C);
}

uint64_t sub_1001818C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0840, (uint64_t)qword_1003843B8, (uint64_t)sub_10018143C, a1);
}

uint64_t sub_1001818E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0840, (uint64_t)qword_1003843B8, (uint64_t)sub_10018143C, a1);
}

uint64_t sub_100181900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003843D0);
  sub_10000E6A4(v0, (uint64_t)qword_1003843D0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "TriggerType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 28;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "TriggerType_kUnknown";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "TriggerType_kPeriodic";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "TriggerType_kAreaEvent";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100181ABC()
{
  return sub_100008BD0(&qword_1003B0848, (uint64_t)qword_1003843D0, (uint64_t)sub_100181900);
}

uint64_t sub_100181AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0848, (uint64_t)qword_1003843D0, (uint64_t)sub_100181900, a1);
}

uint64_t sub_100181AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0848, (uint64_t)qword_1003843D0, (uint64_t)sub_100181900, a1);
}

uint64_t sub_100181B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v73;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003843E8);
  sub_10000E6A4(v0, (uint64_t)qword_1003843E8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v73 = swift_allocObject(v1, v6 + 33 * v4, v5 | 7);
  *(_OWORD *)(v73 + 16) = xmmword_1002D9480;
  v7 = v73 + v6;
  v8 = v73 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v73 + v6) = 0;
  *(_QWORD *)v8 = "Status_PROTOBUF_DEFAULT";
  *(_QWORD *)(v8 + 8) = 23;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "Status_kNone";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "Status_kSuplInitAccepted";
  *((_QWORD *)v14 + 1) = 24;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "Status_kConnSuccess";
  *((_QWORD *)v16 + 1) = 19;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "Status_kConnSocketErr";
  *((_QWORD *)v18 + 1) = 21;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "Status_kConnInputErr";
  *((_QWORD *)v20 + 1) = 20;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "Status_kConnSslFailed";
  *((_QWORD *)v22 + 1) = 21;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 7;
  *(_QWORD *)v24 = "Status_kReadSocketErr";
  *((_QWORD *)v24 + 1) = 21;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 8;
  *(_QWORD *)v25 = "Status_kReadInputErr";
  *(_QWORD *)(v25 + 8) = 20;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 9;
  *(_QWORD *)v27 = "Status_kWriteSocketErr";
  *((_QWORD *)v27 + 1) = 22;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 10;
  *(_QWORD *)v29 = "Status_kWriteInputErr";
  *((_QWORD *)v29 + 1) = 21;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 11;
  *(_QWORD *)v31 = "Status_kConnClose";
  *((_QWORD *)v31 + 1) = 17;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "Status_kConnCloseFailed";
  *((_QWORD *)v33 + 1) = 23;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 13;
  *(_QWORD *)v35 = "Status_kGetFdSocketErr";
  *((_QWORD *)v35 + 1) = 22;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 14;
  *(_QWORD *)v37 = "Status_kSuplPosInitSent";
  *((_QWORD *)v37 + 1) = 23;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 15;
  *(_QWORD *)v39 = "Status_kNwAsstTimeReceived";
  *((_QWORD *)v39 + 1) = 26;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 16;
  *(_QWORD *)v40 = "Status_kNwAsstPositionReceived";
  *(_QWORD *)(v40 + 8) = 30;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  v41 = (_QWORD *)(v7 + 17 * v4);
  v42 = (char *)v41 + *(int *)(v2 + 48);
  *v41 = 17;
  *(_QWORD *)v42 = "Status_kNwAsstEphemerisReceived";
  *((_QWORD *)v42 + 1) = 31;
  v42[16] = 2;
  v11();
  v43 = (_QWORD *)(v7 + 18 * v4);
  v44 = (char *)v43 + *(int *)(v2 + 48);
  *v43 = 18;
  *(_QWORD *)v44 = "Status_kPositionRequestReceived";
  *((_QWORD *)v44 + 1) = 31;
  v44[16] = 2;
  v11();
  v45 = (_QWORD *)(v7 + 19 * v4);
  v46 = (char *)v45 + *(int *)(v2 + 48);
  *v45 = 19;
  *(_QWORD *)v46 = "Status_kPositionResponseSuccess";
  *((_QWORD *)v46 + 1) = 31;
  v46[16] = 2;
  v11();
  v47 = (_QWORD *)(v7 + 20 * v4);
  v48 = (char *)v47 + *(int *)(v2 + 48);
  *v47 = 20;
  *(_QWORD *)v48 = "Status_kPositionResponseUndefined";
  *((_QWORD *)v48 + 1) = 33;
  v48[16] = 2;
  v11();
  v49 = (_QWORD *)(v7 + 21 * v4);
  v50 = (char *)v49 + *(int *)(v2 + 48);
  *v49 = 21;
  *(_QWORD *)v50 = "Status_kPositionResponseNotEnoughSats";
  *((_QWORD *)v50 + 1) = 37;
  v50[16] = 2;
  v11();
  v51 = (_QWORD *)(v7 + 22 * v4);
  v52 = (char *)v51 + *(int *)(v2 + 48);
  *v51 = 22;
  *(_QWORD *)v52 = "Status_kPositionResponseAssdataMissing";
  *((_QWORD *)v52 + 1) = 38;
  v52[16] = 2;
  v11();
  v53 = (_QWORD *)(v7 + 23 * v4);
  v54 = (char *)v53 + *(int *)(v2 + 48);
  *v53 = 23;
  *(_QWORD *)v54 = "Status_kPositionResponseMethodNotSupported";
  *((_QWORD *)v54 + 1) = 42;
  v54[16] = 2;
  v11();
  v55 = (_QWORD *)(v7 + 24 * v4);
  v56 = (char *)v55 + *(int *)(v2 + 48);
  *v55 = 24;
  *(_QWORD *)v56 = "Status_kMeasurementRequestReceived";
  *((_QWORD *)v56 + 1) = 34;
  v56[16] = 2;
  v11();
  v57 = (_QWORD *)(v7 + 25 * v4);
  v58 = (char *)v57 + *(int *)(v2 + 48);
  *v57 = 25;
  *(_QWORD *)v58 = "Status_kMeasurementResponseSuccess";
  *((_QWORD *)v58 + 1) = 34;
  v58[16] = 2;
  v11();
  v59 = (_QWORD *)(v7 + 26 * v4);
  v60 = (char *)v59 + *(int *)(v2 + 48);
  *v59 = 26;
  *(_QWORD *)v60 = "Status_kMeasurementResponseUndefined";
  *((_QWORD *)v60 + 1) = 36;
  v60[16] = 2;
  v11();
  v61 = (_QWORD *)(v7 + 27 * v4);
  v62 = (char *)v61 + *(int *)(v2 + 48);
  *v61 = 27;
  *(_QWORD *)v62 = "Status_kMeasurementResponseNotEnoughSats";
  *((_QWORD *)v62 + 1) = 40;
  v62[16] = 2;
  v11();
  v63 = (_QWORD *)(v7 + 28 * v4);
  v64 = (char *)v63 + *(int *)(v2 + 48);
  *v63 = 28;
  *(_QWORD *)v64 = "Status_kMeasurementResponseAssdataMissing";
  *((_QWORD *)v64 + 1) = 41;
  v64[16] = 2;
  v11();
  v65 = (_QWORD *)(v7 + 29 * v4);
  v66 = (char *)v65 + *(int *)(v2 + 48);
  *v65 = 29;
  *(_QWORD *)v66 = "Status_kMeasurementResponseMethodNotSupported";
  *((_QWORD *)v66 + 1) = 45;
  v66[16] = 2;
  v11();
  v67 = (_QWORD *)(v7 + 30 * v4);
  v68 = (char *)v67 + *(int *)(v2 + 48);
  *v67 = 30;
  *(_QWORD *)v68 = "Status_kSuplEndSent";
  *((_QWORD *)v68 + 1) = 19;
  v68[16] = 2;
  v11();
  v69 = (_QWORD *)(v7 + 31 * v4);
  v70 = (char *)v69 + *(int *)(v2 + 48);
  *v69 = 31;
  *(_QWORD *)v70 = "Status_kSuplEndReceived";
  *((_QWORD *)v70 + 1) = 23;
  v70[16] = 2;
  v11();
  v71 = v7 + 32 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 32 * v4) = 32;
  *(_QWORD *)v71 = "Status_kWlanMeasurementAborted";
  *(_QWORD *)(v71 + 8) = 30;
  *(_BYTE *)(v71 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v73);
}

uint64_t sub_1001822C8()
{
  return sub_100008BD0(&qword_1003B0850, (uint64_t)qword_1003843E8, (uint64_t)sub_100181B10);
}

uint64_t sub_1001822E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0850, (uint64_t)qword_1003843E8, (uint64_t)sub_100181B10, a1);
}

uint64_t sub_100182300@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0850, (uint64_t)qword_1003843E8, (uint64_t)sub_100181B10, a1);
}

uint64_t sub_10018231C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v56;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384400);
  sub_10000E6A4(v0, (uint64_t)qword_100384400);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v56 = swift_allocObject(v1, v6 + 24 * v4, v5 | 7);
  *(_OWORD *)(v56 + 16) = xmmword_1002CAB60;
  v7 = v56 + v6;
  v8 = v56 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v56 + v6) = 0;
  *(_QWORD *)v8 = "EndCause_PROTOBUF_DEFAULT";
  *(_QWORD *)(v8 + 8) = 25;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "EndCause_kNone";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "EndCause_kUnspecified";
  *((_QWORD *)v14 + 1) = 21;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "EndCause_kSystemFailure";
  *((_QWORD *)v16 + 1) = 23;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "EndCause_kProtocolError";
  *((_QWORD *)v18 + 1) = 23;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "EndCause_kDataMissing";
  *((_QWORD *)v20 + 1) = 21;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "EndCause_kUnexpectedDataValue";
  *((_QWORD *)v22 + 1) = 29;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 7;
  *(_QWORD *)v24 = "EndCause_kPosMethodFailure";
  *((_QWORD *)v24 + 1) = 26;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 8;
  *(_QWORD *)v25 = "EndCause_kPosMethodMismatch";
  *(_QWORD *)(v25 + 8) = 27;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 9;
  *(_QWORD *)v27 = "EndCause_kPosProtocolMismatch";
  *((_QWORD *)v27 + 1) = 29;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 10;
  *(_QWORD *)v29 = "EndCause_kTargetSETnotReachable";
  *((_QWORD *)v29 + 1) = 31;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 11;
  *(_QWORD *)v31 = "EndCause_kVersionNotSupported";
  *((_QWORD *)v31 + 1) = 29;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "EndCause_kResourceShortage";
  *((_QWORD *)v33 + 1) = 26;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 13;
  *(_QWORD *)v35 = "EndCause_kInvalidSessionId";
  *((_QWORD *)v35 + 1) = 26;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 14;
  *(_QWORD *)v37 = "EndCause_kUnexpectedMessage";
  *((_QWORD *)v37 + 1) = 27;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 15;
  *(_QWORD *)v39 = "EndCause_kNonProxyModeNotSupported";
  *((_QWORD *)v39 + 1) = 34;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 16;
  *(_QWORD *)v40 = "EndCause_kProxyModeNotSupported";
  *(_QWORD *)(v40 + 8) = 31;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  v41 = (_QWORD *)(v7 + 17 * v4);
  v42 = (char *)v41 + *(int *)(v2 + 48);
  *v41 = 17;
  *(_QWORD *)v42 = "EndCause_kPositioningNotPermitted";
  *((_QWORD *)v42 + 1) = 33;
  v42[16] = 2;
  v11();
  v43 = (_QWORD *)(v7 + 18 * v4);
  v44 = (char *)v43 + *(int *)(v2 + 48);
  *v43 = 18;
  *(_QWORD *)v44 = "EndCause_kAuthNetFailure";
  *((_QWORD *)v44 + 1) = 24;
  v44[16] = 2;
  v11();
  v45 = (_QWORD *)(v7 + 19 * v4);
  v46 = (char *)v45 + *(int *)(v2 + 48);
  *v45 = 19;
  *(_QWORD *)v46 = "EndCause_kAuthSuplinitFailure";
  *((_QWORD *)v46 + 1) = 29;
  v46[16] = 2;
  v11();
  v47 = (_QWORD *)(v7 + 20 * v4);
  v48 = (char *)v47 + *(int *)(v2 + 48);
  *v47 = 20;
  *(_QWORD *)v48 = "EndCause_kServiceNotSupported";
  *((_QWORD *)v48 + 1) = 29;
  v48[16] = 2;
  v11();
  v49 = (_QWORD *)(v7 + 21 * v4);
  v50 = (char *)v49 + *(int *)(v2 + 48);
  *v49 = 21;
  *(_QWORD *)v50 = "EndCause_kIncompatibleProtectionLevel";
  *((_QWORD *)v50 + 1) = 37;
  v50[16] = 2;
  v11();
  v51 = (_QWORD *)(v7 + 22 * v4);
  v52 = (char *)v51 + *(int *)(v2 + 48);
  *v51 = 22;
  *(_QWORD *)v52 = "EndCause_kInsufficientInterval";
  *((_QWORD *)v52 + 1) = 30;
  v52[16] = 2;
  v11();
  v53 = (_QWORD *)(v7 + 23 * v4);
  v54 = (char *)v53 + *(int *)(v2 + 48);
  *v53 = 23;
  *(_QWORD *)v54 = "EndCause_kNoSUPLCoverage";
  *((_QWORD *)v54 + 1) = 24;
  v54[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v56);
}

uint64_t sub_1001828F8()
{
  return sub_100008BD0(&qword_1003B0858, (uint64_t)qword_100384400, (uint64_t)sub_10018231C);
}

uint64_t sub_100182914@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0858, (uint64_t)qword_100384400, (uint64_t)sub_10018231C, a1);
}

uint64_t sub_100182930@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0858, (uint64_t)qword_100384400, (uint64_t)sub_10018231C, a1);
}

uint64_t sub_10018294C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384418);
  sub_10000E6A4(v0, (uint64_t)qword_100384418);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "ConnectionStatus_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 33;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "ConnectionStatus_kNone";
  *(_QWORD *)(v13 + 8) = 22;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "ConnectionStatus_kConnSuccess";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "ConnectionStatus_kSocketErr";
  *((_QWORD *)v17 + 1) = 27;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "ConnectionStatus_kInputErr";
  *((_QWORD *)v19 + 1) = 26;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "ConnectionStatus_kSslFailed";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100182B80()
{
  return sub_100008BD0(&qword_1003B0860, (uint64_t)qword_100384418, (uint64_t)sub_10018294C);
}

uint64_t sub_100182B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0860, (uint64_t)qword_100384418, (uint64_t)sub_10018294C, a1);
}

uint64_t sub_100182BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0860, (uint64_t)qword_100384418, (uint64_t)sub_10018294C, a1);
}

uint64_t sub_100182BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384430);
  sub_10000E6A4(v0, (uint64_t)qword_100384430);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "CellType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 25;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "CellType_kUnavailable";
  *(_QWORD *)(v13 + 8) = 21;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "CellType_kGSM";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "CellType_kWCDMA";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "CellType_kCDMA";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "CellType_kHRPD";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "CellType_kLTE";
  *((_QWORD *)v23 + 1) = 13;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100182E3C()
{
  return sub_100008BD0(&qword_1003B0868, (uint64_t)qword_100384430, (uint64_t)sub_100182BD4);
}

uint64_t sub_100182E58@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0868, (uint64_t)qword_100384430, (uint64_t)sub_100182BD4, a1);
}

uint64_t sub_100182E74@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0868, (uint64_t)qword_100384430, (uint64_t)sub_100182BD4, a1);
}

uint64_t sub_100182E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384448);
  sub_10000E6A4(v0, (uint64_t)qword_100384448);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "FreqMode_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 25;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "FreqMode_kUnknown";
  *(_QWORD *)(v13 + 8) = 17;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "FreqMode_kFDD";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "FreqMode_kTDD";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100183050()
{
  return sub_100008BD0(&qword_1003B0870, (uint64_t)qword_100384448, (uint64_t)sub_100182E90);
}

uint64_t sub_10018306C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0870, (uint64_t)qword_100384448, (uint64_t)sub_100182E90, a1);
}

uint64_t sub_100183088@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0870, (uint64_t)qword_100384448, (uint64_t)sub_100182E90, a1);
}

uint64_t sub_1001830A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384460);
  sub_10000E6A4(v0, (uint64_t)qword_100384460);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "SLPAddressType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 31;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "SLPAddressType_kUnknown";
  *(_QWORD *)(v13 + 8) = 23;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "SLPAddressType_kIpV4";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "SLPAddressType_kIpV6";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 4;
  *(_QWORD *)v18 = "SLPAddressType_kFQDN";
  *(_QWORD *)(v18 + 8) = 20;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001832A4()
{
  return sub_100008BD0(&qword_1003B0878, (uint64_t)qword_100384460, (uint64_t)sub_1001830A4);
}

uint64_t sub_1001832C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0878, (uint64_t)qword_100384460, (uint64_t)sub_1001830A4, a1);
}

uint64_t sub_1001832DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0878, (uint64_t)qword_100384460, (uint64_t)sub_1001830A4, a1);
}

uint64_t sub_1001832F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384478);
  sub_10000E6A4(v0, (uint64_t)qword_100384478);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3130;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "ErrorCodes_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "ErrorCodes_kSuccess";
  *(_QWORD *)(v13 + 8) = 19;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "ErrorCodes_kErrorUndefined";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "ErrorCodes_kErrorNotEnoughSats";
  *((_QWORD *)v17 + 1) = 30;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "ErrorCodes_kErrorAssdataMissing";
  *((_QWORD *)v19 + 1) = 31;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "ErrorCodes_kErrorMethodNotSupported";
  *((_QWORD *)v21 + 1) = 35;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "ErrorCodes_kErrorNotAccomplishedGpsTimingCell";
  *((_QWORD *)v23 + 1) = 45;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 7;
  *(_QWORD *)v25 = "ErrorCodes_kErrorNotEnoughGanssSats";
  *((_QWORD *)v25 + 1) = 35;
  v25[16] = 2;
  v12();
  v26 = v8 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 8 * v4) = 8;
  *(_QWORD *)v26 = "ErrorCodes_kErrorGanssAssdataMissing";
  *(_QWORD *)(v26 + 8) = 36;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001835D0()
{
  return sub_100008BD0(&qword_1003B0880, (uint64_t)qword_100384478, (uint64_t)sub_1001832F8);
}

uint64_t sub_1001835EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0880, (uint64_t)qword_100384478, (uint64_t)sub_1001832F8, a1);
}

uint64_t sub_100183608@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0880, (uint64_t)qword_100384478, (uint64_t)sub_1001832F8, a1);
}

uint64_t sub_100183624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384490);
  sub_10000E6A4(v0, (uint64_t)qword_100384490);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "ClsModemState_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 30;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "ClsModemState_kUnknown";
  *(_QWORD *)(v13 + 8) = 22;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v7 + v6 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "ClsModemState_kClsCellDch";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v7 + v6 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "ClsModemState_kClsCellFach";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v12();
  v18 = v7 + v6 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 4;
  *(_QWORD *)v18 = "ClsModemState_kClsInvalidState";
  *(_QWORD *)(v18 + 8) = 30;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100183824()
{
  return sub_100008BD0(&qword_1003B0888, (uint64_t)qword_100384490, (uint64_t)sub_100183624);
}

uint64_t sub_100183840@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0888, (uint64_t)qword_100384490, (uint64_t)sub_100183624, a1);
}

uint64_t sub_10018385C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0888, (uint64_t)qword_100384490, (uint64_t)sub_100183624, a1);
}

uint64_t sub_100183878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003844A8);
  sub_10000E6A4(v0, (uint64_t)qword_1003844A8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "SessionProtocol_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 32;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "SessionProtocol_kUnknown";
  *(_QWORD *)(v13 + 8) = 24;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "SessionProtocol_kSessionCplane";
  *((_QWORD *)v15 + 1) = 30;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "SessionProtocol_kSessionUplane";
  *((_QWORD *)v17 + 1) = 30;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "SessionProtocol_kSessionUser";
  *((_QWORD *)v19 + 1) = 28;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "SessionProtocol_kSessionModem";
  *((_QWORD *)v21 + 1) = 29;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100183AAC()
{
  return sub_100008BD0(&qword_1003B0890, (uint64_t)qword_1003844A8, (uint64_t)sub_100183878);
}

uint64_t sub_100183AC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0890, (uint64_t)qword_1003844A8, (uint64_t)sub_100183878, a1);
}

uint64_t sub_100183AE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0890, (uint64_t)qword_1003844A8, (uint64_t)sub_100183878, a1);
}

uint64_t sub_100183B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003844C0);
  sub_10000E6A4(v0, (uint64_t)qword_1003844C0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "PosProtocol_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 28;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "PosProtocol_kUnknown";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "PosProtocol_kRrlp";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "PosProtocol_kRrc";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "PosProtocol_kLpp";
  *((_QWORD *)v19 + 1) = 16;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "PosProtocol_kCdma";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "PosProtocol_kNrLpp";
  *((_QWORD *)v23 + 1) = 18;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100183D68()
{
  return sub_100008BD0(&qword_1003B0898, (uint64_t)qword_1003844C0, (uint64_t)sub_100183B00);
}

uint64_t sub_100183D84@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0898, (uint64_t)qword_1003844C0, (uint64_t)sub_100183B00, a1);
}

uint64_t sub_100183DA0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0898, (uint64_t)qword_1003844C0, (uint64_t)sub_100183B00, a1);
}

uint64_t sub_100183DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003844D8);
  sub_10000E6A4(v0, (uint64_t)qword_1003844D8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "MethodType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "MethodType_kUnknown";
  *(_QWORD *)(v13 + 8) = 19;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "MethodType_kMethodMsassisted";
  *((_QWORD *)v15 + 1) = 28;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "MethodType_kMethodMsbased";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 4;
  *(_QWORD *)v18 = "MethodType_kMethodStandalone";
  *(_QWORD *)(v18 + 8) = 28;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100183FBC()
{
  return sub_100008BD0(&qword_1003B08A0, (uint64_t)qword_1003844D8, (uint64_t)sub_100183DBC);
}

uint64_t sub_100183FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08A0, (uint64_t)qword_1003844D8, (uint64_t)sub_100183DBC, a1);
}

uint64_t sub_100183FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08A0, (uint64_t)qword_1003844D8, (uint64_t)sub_100183DBC, a1);
}

uint64_t sub_100184010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003844F0);
  sub_10000E6A4(v0, (uint64_t)qword_1003844F0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "Environment_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 28;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "Environment_kBadArea";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "Environment_kNotBadArea";
  *((_QWORD *)v15 + 1) = 23;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "Environment_kMixedArea";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 4;
  *(_QWORD *)v18 = "Environment_kEnvInvalid";
  *(_QWORD *)(v18 + 8) = 23;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100184210()
{
  return sub_100008BD0(&qword_1003B08A8, (uint64_t)qword_1003844F0, (uint64_t)sub_100184010);
}

uint64_t sub_10018422C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08A8, (uint64_t)qword_1003844F0, (uint64_t)sub_100184010, a1);
}

uint64_t sub_100184248@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08A8, (uint64_t)qword_1003844F0, (uint64_t)sub_100184010, a1);
}

uint64_t sub_100184264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384508);
  sub_10000E6A4(v0, (uint64_t)qword_100384508);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "AdditionalInfo_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 31;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "AdditionalInfo_kOnlyReturnInfoRequested";
  *(_QWORD *)(v13 + 8) = 39;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "AdditionalInfo_kMayReturnAdditionalInfo";
  *((_QWORD *)v15 + 1) = 39;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "AdditionalInfo_kAdditionalInfoInvalid";
  *((_QWORD *)v17 + 1) = 37;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100184424()
{
  return sub_100008BD0(&qword_1003B08B0, (uint64_t)qword_100384508, (uint64_t)sub_100184264);
}

uint64_t sub_100184440@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08B0, (uint64_t)qword_100384508, (uint64_t)sub_100184264, a1);
}

uint64_t sub_10018445C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08B0, (uint64_t)qword_100384508, (uint64_t)sub_100184264, a1);
}

uint64_t sub_100184478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384520);
  sub_10000E6A4(v0, (uint64_t)qword_100384520);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GnssId_kGnssInvalid";
  *(_QWORD *)(v9 + 8) = 19;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GnssId_kGnssGps";
  *(_QWORD *)(v13 + 8) = 15;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GnssId_kGnssGalileo";
  *((_QWORD *)v15 + 1) = 19;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "GnssId_kGnssSbs";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "GnssId_kGnssModGps";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 16;
  *(_QWORD *)v21 = "GnssId_kGnssQzss";
  *((_QWORD *)v21 + 1) = 16;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 32;
  *(_QWORD *)v23 = "GnssId_kGnssGlonass";
  *((_QWORD *)v23 + 1) = 19;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001846E0()
{
  return sub_100008BD0(&qword_1003B08B8, (uint64_t)qword_100384520, (uint64_t)sub_100184478);
}

uint64_t sub_1001846FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08B8, (uint64_t)qword_100384520, (uint64_t)sub_100184478, a1);
}

uint64_t sub_100184718@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08B8, (uint64_t)qword_100384520, (uint64_t)sub_100184478, a1);
}

uint64_t sub_100184734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384538);
  sub_10000E6A4(v0, (uint64_t)qword_100384538);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "SupportedGADShapes_kSupportGadShapesNoLocation";
  *(_QWORD *)(v9 + 8) = 46;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "SupportedGADShapes_kSupportGadShapesEllipsoidPoint";
  *(_QWORD *)(v13 + 8) = 50;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "SupportedGADShapes_kSupportGadShapesPointUncertainCircle";
  *((_QWORD *)v15 + 1) = 56;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "SupportedGADShapes_kSupportGadShapesPointUncertainEllipse";
  *((_QWORD *)v17 + 1) = 57;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "SupportedGADShapes_kSupportGadShapesPolygon";
  *((_QWORD *)v19 + 1) = 43;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 16;
  *(_QWORD *)v21 = "SupportedGADShapes_kSupportGadShapesPointAltitude";
  *((_QWORD *)v21 + 1) = 49;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 32;
  *(_QWORD *)v23 = "SupportedGADShapes_kSupportGadShapesPointAltitudeUncertainEllipsoid";
  *((_QWORD *)v23 + 1) = 67;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 64;
  *(_QWORD *)v25 = "SupportedGADShapes_kSupportGadShapesEllipsoidArc";
  *((_QWORD *)v25 + 1) = 48;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001849DC()
{
  return sub_100008BD0(&qword_1003B08C0, (uint64_t)qword_100384538, (uint64_t)sub_100184734);
}

uint64_t sub_1001849F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08C0, (uint64_t)qword_100384538, (uint64_t)sub_100184734, a1);
}

uint64_t sub_100184A14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08C0, (uint64_t)qword_100384538, (uint64_t)sub_100184734, a1);
}

uint64_t sub_100184A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384550);
  sub_10000E6A4(v0, (uint64_t)qword_100384550);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "FixType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 24;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "FixType_kUnknown";
  *(_QWORD *)(v13 + 8) = 16;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "FixType_kFixType2d";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "FixType_kFixType3d";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100184BF0()
{
  return sub_100008BD0(&qword_1003B08C8, (uint64_t)qword_100384550, (uint64_t)sub_100184A30);
}

uint64_t sub_100184C0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08C8, (uint64_t)qword_100384550, (uint64_t)sub_100184A30, a1);
}

uint64_t sub_100184C28@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08C8, (uint64_t)qword_100384550, (uint64_t)sub_100184A30, a1);
}

uint64_t sub_100184C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384568);
  sub_10000E6A4(v0, (uint64_t)qword_100384568);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "ClsNetworkType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 31;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "ClsNetworkType_kClsGeranNetwork";
  *(_QWORD *)(v13 + 8) = 31;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "ClsNetworkType_kClsUtranNetwork";
  *((_QWORD *)v15 + 1) = 31;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "ClsNetworkType_kClsEutranNetwork";
  *((_QWORD *)v17 + 1) = 32;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "ClsNetworkType_kClsInvalidNetwork";
  *((_QWORD *)v19 + 1) = 33;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "ClsNetworkType_kClsCdmaNetwork";
  *((_QWORD *)v21 + 1) = 30;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100184E74()
{
  return sub_100008BD0(&qword_1003B08D0, (uint64_t)qword_100384568, (uint64_t)sub_100184C44);
}

uint64_t sub_100184E90@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08D0, (uint64_t)qword_100384568, (uint64_t)sub_100184C44, a1);
}

uint64_t sub_100184EAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08D0, (uint64_t)qword_100384568, (uint64_t)sub_100184C44, a1);
}

uint64_t sub_100184EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384580);
  sub_10000E6A4(v0, (uint64_t)qword_100384580);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GnssTimeId_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GnssTimeId_kGnssTimeIdGps";
  *(_QWORD *)(v13 + 8) = 25;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GnssTimeId_kGnssTimeIdQzss";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "GnssTimeId_kGnssTimeIdGlonass";
  *((_QWORD *)v17 + 1) = 29;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "GnssTimeId_kGnssTimeIdGalileo";
  *((_QWORD *)v19 + 1) = 29;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "GnssTimeId_kGnssTimeInvalid";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001850FC()
{
  return sub_100008BD0(&qword_1003B08D8, (uint64_t)qword_100384580, (uint64_t)sub_100184EC8);
}

uint64_t sub_100185118@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08D8, (uint64_t)qword_100384580, (uint64_t)sub_100184EC8, a1);
}

uint64_t sub_100185134@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08D8, (uint64_t)qword_100384580, (uint64_t)sub_100184EC8, a1);
}

uint64_t sub_100185150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384598);
  sub_10000E6A4(v0, (uint64_t)qword_100384598);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3130;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "ShapeType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 26;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "ShapeType_kShapeTypeEllipsoidPoint";
  *(_QWORD *)(v13 + 8) = 34;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "ShapeType_kShapeTypePointUncertainCircle";
  *((_QWORD *)v15 + 1) = 40;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "ShapeType_kShapeTypePointUncertainEllipse";
  *((_QWORD *)v17 + 1) = 41;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "ShapeType_kShapeTypePolygon";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "ShapeType_kShapeTypePointAltitude";
  *((_QWORD *)v21 + 1) = 33;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "ShapeType_kShapeTypePointAltitudeUncertainEllipsoid";
  *((_QWORD *)v23 + 1) = 51;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 7;
  *(_QWORD *)v25 = "ShapeType_kShapeTypeEllipsoidArc";
  *((_QWORD *)v25 + 1) = 32;
  v25[16] = 2;
  v12();
  v26 = v8 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 8 * v4) = 8;
  *(_QWORD *)v26 = "ShapeType_kShapeTypeNoLocation";
  *(_QWORD *)(v26 + 8) = 30;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018542C()
{
  return sub_100008BD0(&qword_1003B08E0, (uint64_t)qword_100384598, (uint64_t)sub_100185150);
}

uint64_t sub_100185448@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08E0, (uint64_t)qword_100384598, (uint64_t)sub_100185150, a1);
}

uint64_t sub_100185464@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08E0, (uint64_t)qword_100384598, (uint64_t)sub_100185150, a1);
}

uint64_t sub_100185480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003845B0);
  sub_10000E6A4(v0, (uint64_t)qword_1003845B0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "VelocityType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 29;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "VelocityType_kVelocityTypeHorizontalVelocity";
  *(_QWORD *)(v13 + 8) = 44;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "VelocityType_kVelocityTypeHorizontalWithVerticalVelocity";
  *((_QWORD *)v15 + 1) = 56;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "VelocityType_kVelocityTypeHorizontalVelocityWithUncertainty";
  *((_QWORD *)v17 + 1) = 59;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "VelocityType_kVelocityTypeHorizontalWithVerticalVelocityAndUncertainty";
  *((_QWORD *)v19 + 1) = 70;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "VelocityType_kVelocityTypeInvalid";
  *((_QWORD *)v21 + 1) = 33;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001856B0()
{
  return sub_100008BD0(&qword_1003B08E8, (uint64_t)qword_1003845B0, (uint64_t)sub_100185480);
}

uint64_t sub_1001856CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08E8, (uint64_t)qword_1003845B0, (uint64_t)sub_100185480, a1);
}

uint64_t sub_1001856E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08E8, (uint64_t)qword_1003845B0, (uint64_t)sub_100185480, a1);
}

uint64_t sub_100185704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003845C8);
  sub_10000E6A4(v0, (uint64_t)qword_1003845C8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v8 = "MultipathIndicator_PROTOBUF_DEFAULT";
  *(_QWORD *)(v8 + 8) = 35;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 1;
  *(_QWORD *)v12 = "MultipathIndicator_kMultiPathNotMeasured";
  *(_QWORD *)(v12 + 8) = 40;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "MultipathIndicator_kMultiPathLow";
  *((_QWORD *)v14 + 1) = 32;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "MultipathIndicator_kMultiPathMedium";
  *((_QWORD *)v16 + 1) = 35;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "MultipathIndicator_kMultiPathHigh";
  *((_QWORD *)v18 + 1) = 33;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "MultipathIndicator_kMultiPathInvalid";
  *((_QWORD *)v20 + 1) = 36;
  v20[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100185938()
{
  return sub_100008BD0(&qword_1003B08F0, (uint64_t)qword_1003845C8, (uint64_t)sub_100185704);
}

uint64_t sub_100185954@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08F0, (uint64_t)qword_1003845C8, (uint64_t)sub_100185704, a1);
}

uint64_t sub_100185970@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08F0, (uint64_t)qword_1003845C8, (uint64_t)sub_100185704, a1);
}

uint64_t sub_10018598C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003845E0);
  sub_10000E6A4(v0, (uint64_t)qword_1003845E0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GanssId_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 24;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GanssId_kGanssIdSbas";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GanssId_kGanssIdModernisedGps";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "GanssId_kGanssIdQzss";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "GanssId_kGanssIdGlonass";
  *((_QWORD *)v19 + 1) = 23;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "GanssId_kGanssIdGalileo";
  *((_QWORD *)v21 + 1) = 23;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "GanssId_kGanssIdInvalid";
  *((_QWORD *)v23 + 1) = 23;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100185BEC()
{
  return sub_100008BD0(&qword_1003B08F8, (uint64_t)qword_1003845E0, (uint64_t)sub_10018598C);
}

uint64_t sub_100185C08@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B08F8, (uint64_t)qword_1003845E0, (uint64_t)sub_10018598C, a1);
}

uint64_t sub_100185C24@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B08F8, (uint64_t)qword_1003845E0, (uint64_t)sub_10018598C, a1);
}

uint64_t sub_100185C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003845F8);
  sub_10000E6A4(v0, (uint64_t)qword_1003845F8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "MeasurementsResult_kMeasurementsResultNone";
  *(_QWORD *)(v9 + 8) = 42;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "MeasurementsResult_kMeasurementsResultGps";
  *(_QWORD *)(v13 + 8) = 41;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "MeasurementsResult_kMeasurementsResultGanss";
  *((_QWORD *)v15 + 1) = 43;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "MeasurementsResult_kMeasurementsResultError";
  *((_QWORD *)v17 + 1) = 43;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100185E00()
{
  return sub_100008BD0(&qword_1003B0900, (uint64_t)qword_1003845F8, (uint64_t)sub_100185C40);
}

uint64_t sub_100185E1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0900, (uint64_t)qword_1003845F8, (uint64_t)sub_100185C40, a1);
}

uint64_t sub_100185E38@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0900, (uint64_t)qword_1003845F8, (uint64_t)sub_100185C40, a1);
}

uint64_t sub_100185E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384610);
  sub_10000E6A4(v0, (uint64_t)qword_100384610);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "LcsGanssId_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "LcsGanssId_kLcsGanssIdGalileo";
  *(_QWORD *)(v13 + 8) = 29;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "LcsGanssId_kLcsGanssIdSbas";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "LcsGanssId_kLcsGanssIdModGps";
  *((_QWORD *)v17 + 1) = 28;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "LcsGanssId_kLcsGanssIdQzss";
  *((_QWORD *)v19 + 1) = 26;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "LcsGanssId_kLcsGanssIdGlonass";
  *((_QWORD *)v21 + 1) = 29;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "LcsGanssId_kLcsGanssIdInvalid";
  *((_QWORD *)v23 + 1) = 29;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001860B8()
{
  return sub_100008BD0(&qword_1003B0908, (uint64_t)qword_100384610, (uint64_t)sub_100185E54);
}

uint64_t sub_1001860D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0908, (uint64_t)qword_100384610, (uint64_t)sub_100185E54, a1);
}

uint64_t sub_1001860F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0908, (uint64_t)qword_100384610, (uint64_t)sub_100185E54, a1);
}

uint64_t sub_10018610C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384628);
  sub_10000E6A4(v0, (uint64_t)qword_100384628);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 10 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3110;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "AidMask_kAidmaskNone";
  *(_QWORD *)(v9 + 8) = 20;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "AidMask_kAidmaskAlmanac";
  *(_QWORD *)(v13 + 8) = 23;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "AidMask_kAidmaskUtcmodel";
  *((_QWORD *)v15 + 1) = 24;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "AidMask_kAidmaskIonosmodel";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "AidMask_kAidmaskNavigation";
  *((_QWORD *)v19 + 1) = 26;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 16;
  *(_QWORD *)v21 = "AidMask_kAidmaskDgpsCorrections";
  *((_QWORD *)v21 + 1) = 31;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 32;
  *(_QWORD *)v23 = "AidMask_kAidmaskRefloc";
  *((_QWORD *)v23 + 1) = 22;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 64;
  *(_QWORD *)v25 = "AidMask_kAidmaskReftime";
  *((_QWORD *)v25 + 1) = 23;
  v25[16] = 2;
  v12();
  v26 = v8 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 8 * v4) = 128;
  *(_QWORD *)v26 = "AidMask_kAidmaskAcqassistance";
  *(_QWORD *)(v26 + 8) = 29;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  v27 = (_QWORD *)(v8 + 9 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 256;
  *(_QWORD *)v28 = "AidMask_kAidmaskTimeintegrity";
  *((_QWORD *)v28 + 1) = 29;
  v28[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018641C()
{
  return sub_100008BD0(&qword_1003B0910, (uint64_t)qword_100384628, (uint64_t)sub_10018610C);
}

uint64_t sub_100186438@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0910, (uint64_t)qword_100384628, (uint64_t)sub_10018610C, a1);
}

uint64_t sub_100186454@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0910, (uint64_t)qword_100384628, (uint64_t)sub_10018610C, a1);
}

uint64_t sub_100186470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384640);
  sub_10000E6A4(v0, (uint64_t)qword_100384640);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GanssCommonAidMask_kNone";
  *(_QWORD *)(v9 + 8) = 24;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GanssCommonAidMask_kRefTime";
  *(_QWORD *)(v13 + 8) = 27;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GanssCommonAidMask_kRefLocation";
  *((_QWORD *)v15 + 1) = 31;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "GanssCommonAidMask_kAddIonosModel";
  *((_QWORD *)v17 + 1) = 33;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018662C()
{
  return sub_100008BD0(&qword_1003B0918, (uint64_t)qword_100384640, (uint64_t)sub_100186470);
}

uint64_t sub_100186648@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0918, (uint64_t)qword_100384640, (uint64_t)sub_100186470, a1);
}

uint64_t sub_100186664@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0918, (uint64_t)qword_100384640, (uint64_t)sub_100186470, a1);
}

uint64_t sub_100186680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384658);
  sub_10000E6A4(v0, (uint64_t)qword_100384658);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 10 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3110;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GanssGenericAidMask_kNone";
  *(_QWORD *)(v9 + 8) = 25;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GanssGenericAidMask_kRealTimeIntegrity";
  *(_QWORD *)(v13 + 8) = 38;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GanssGenericAidMask_kAlmanac";
  *((_QWORD *)v15 + 1) = 28;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "GanssGenericAidMask_kNavigationModel";
  *((_QWORD *)v17 + 1) = 36;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "GanssGenericAidMask_kRefMeasInfo";
  *((_QWORD *)v19 + 1) = 32;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 16;
  *(_QWORD *)v21 = "GanssGenericAidMask_kUtcModel";
  *((_QWORD *)v21 + 1) = 29;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 32;
  *(_QWORD *)v23 = "GanssGenericAidMask_kTimeModelGnss";
  *((_QWORD *)v23 + 1) = 34;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 64;
  *(_QWORD *)v25 = "GanssGenericAidMask_kDataBitAssist";
  *((_QWORD *)v25 + 1) = 34;
  v25[16] = 2;
  v12();
  v26 = v8 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 8 * v4) = 128;
  *(_QWORD *)v26 = "GanssGenericAidMask_kAuxillaryInfo";
  *(_QWORD *)(v26 + 8) = 34;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  v27 = (_QWORD *)(v8 + 9 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 256;
  *(_QWORD *)v28 = "GanssGenericAidMask_kAddAssistDataChoices";
  *((_QWORD *)v28 + 1) = 41;
  v28[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018698C()
{
  return sub_100008BD0(&qword_1003B0920, (uint64_t)qword_100384658, (uint64_t)sub_100186680);
}

uint64_t sub_1001869A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0920, (uint64_t)qword_100384658, (uint64_t)sub_100186680, a1);
}

uint64_t sub_1001869C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0920, (uint64_t)qword_100384658, (uint64_t)sub_100186680, a1);
}

uint64_t sub_1001869E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384670);
  sub_10000E6A4(v0, (uint64_t)qword_100384670);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GanssSignalIdMask_kGanssSignalIdNone";
  *(_QWORD *)(v9 + 8) = 36;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GanssSignalIdMask_kGanssSignalId1";
  *(_QWORD *)(v13 + 8) = 33;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GanssSignalIdMask_kGanssSignalId2";
  *((_QWORD *)v15 + 1) = 33;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "GanssSignalIdMask_kGanssSignalId3";
  *((_QWORD *)v17 + 1) = 33;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100186B9C()
{
  return sub_100008BD0(&qword_1003B0928, (uint64_t)qword_100384670, (uint64_t)sub_1001869E0);
}

uint64_t sub_100186BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0928, (uint64_t)qword_100384670, (uint64_t)sub_1001869E0, a1);
}

uint64_t sub_100186BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0928, (uint64_t)qword_100384670, (uint64_t)sub_1001869E0, a1);
}

uint64_t sub_100186BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384688);
  sub_10000E6A4(v0, (uint64_t)qword_100384688);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 0;
  *(_QWORD *)v9 = "AssistanceRequest_kAssistanceRequestNone";
  *(_QWORD *)(v9 + 8) = 40;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 1;
  *(_QWORD *)v13 = "AssistanceRequest_kAssistanceRequestGps";
  *((_QWORD *)v13 + 1) = 39;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 2;
  *(_QWORD *)v14 = "AssistanceRequest_kAssistanceRequestGanss";
  *(_QWORD *)(v14 + 8) = 41;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100186D80()
{
  return sub_100008BD0(&qword_1003B0930, (uint64_t)qword_100384688, (uint64_t)sub_100186BF0);
}

uint64_t sub_100186D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0930, (uint64_t)qword_100384688, (uint64_t)sub_100186BF0, a1);
}

uint64_t sub_100186DB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0930, (uint64_t)qword_100384688, (uint64_t)sub_100186BF0, a1);
}

uint64_t sub_100186DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003846A0);
  sub_10000E6A4(v0, (uint64_t)qword_1003846A0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "UtranSfnGpsUncertainty_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 39;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "UtranSfnGpsUncertainty_kUtranSfnGpsUncertaintyLessThan10ms";
  *(_QWORD *)(v13 + 8) = 58;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "UtranSfnGpsUncertainty_kUtranSfnGpsUncertaintyMoreThan10ms";
  *((_QWORD *)v15 + 1) = 58;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "UtranSfnGpsUncertainty_kUtranSfnGpsUncertaintyNotPresent";
  *((_QWORD *)v17 + 1) = 56;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100186F94()
{
  return sub_100008BD0(&qword_1003B0938, (uint64_t)qword_1003846A0, (uint64_t)sub_100186DD4);
}

uint64_t sub_100186FB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0938, (uint64_t)qword_1003846A0, (uint64_t)sub_100186DD4, a1);
}

uint64_t sub_100186FCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0938, (uint64_t)qword_1003846A0, (uint64_t)sub_100186DD4, a1);
}

uint64_t sub_100186FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003846B8);
  sub_10000E6A4(v0, (uint64_t)qword_1003846B8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "GpsDopplerUncMpsExt_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 36;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "GpsDopplerUncMpsExt_k60";
  *(_QWORD *)(v13 + 8) = 23;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "GpsDopplerUncMpsExt_k80";
  *((_QWORD *)v15 + 1) = 23;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "GpsDopplerUncMpsExt_k100";
  *((_QWORD *)v17 + 1) = 24;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "GpsDopplerUncMpsExt_k120";
  *((_QWORD *)v19 + 1) = 24;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "GpsDopplerUncMpsExt_kNoInfo";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "GpsDopplerUncMpsExt_kNotPresent";
  *((_QWORD *)v23 + 1) = 31;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018724C()
{
  return sub_100008BD0(&qword_1003B0940, (uint64_t)qword_1003846B8, (uint64_t)sub_100186FE8);
}

uint64_t sub_100187268@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0940, (uint64_t)qword_1003846B8, (uint64_t)sub_100186FE8, a1);
}

uint64_t sub_100187284@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0940, (uint64_t)qword_1003846B8, (uint64_t)sub_100186FE8, a1);
}

uint64_t sub_1001872A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003846D0);
  sub_10000E6A4(v0, (uint64_t)qword_1003846D0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "MeasurementAndEstimateResponseType_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 51;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "MeasurementAndEstimateResponseType_kInvalid";
  *(_QWORD *)(v13 + 8) = 43;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "MeasurementAndEstimateResponseType_kGpsMeasAvailable";
  *((_QWORD *)v15 + 1) = 52;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "MeasurementAndEstimateResponseType_kLocationEstimateAvailable";
  *((_QWORD *)v17 + 1) = 61;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018745C()
{
  return sub_100008BD0(&qword_1003B0948, (uint64_t)qword_1003846D0, (uint64_t)sub_1001872A0);
}

uint64_t sub_100187478@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0948, (uint64_t)qword_1003846D0, (uint64_t)sub_1001872A0, a1);
}

uint64_t sub_100187494@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0948, (uint64_t)qword_1003846D0, (uint64_t)sub_1001872A0, a1);
}

uint64_t sub_1001874B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003846E8);
  sub_10000E6A4(v0, (uint64_t)qword_1003846E8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "AfltAction_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "AfltAction_kInvalid";
  *(_QWORD *)(v13 + 8) = 19;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "AfltAction_kDoNotSend";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "AfltAction_kSend";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018766C()
{
  return sub_100008BD0(&qword_1003B0950, (uint64_t)qword_1003846E8, (uint64_t)sub_1001874B0);
}

uint64_t sub_100187688@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0950, (uint64_t)qword_1003846E8, (uint64_t)sub_1001874B0, a1);
}

uint64_t sub_1001876A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0950, (uint64_t)qword_1003846E8, (uint64_t)sub_1001874B0, a1);
}

uint64_t sub_1001876C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384700);
  sub_10000E6A4(v0, (uint64_t)qword_100384700);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "WlanMeasurementResult_PROTOBUF_DEFAULT";
  *(_QWORD *)(v9 + 8) = 38;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "WlanMeasurementResult_kUnknown";
  *(_QWORD *)(v13 + 8) = 30;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "WlanMeasurementResult_kSuccess";
  *((_QWORD *)v15 + 1) = 30;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "WlanMeasurementResult_kRequestInvalid";
  *((_QWORD *)v17 + 1) = 37;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "WlanMeasurementResult_kRequestTimeout";
  *((_QWORD *)v19 + 1) = 37;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "WlanMeasurementResult_kRequestFailed";
  *((_QWORD *)v21 + 1) = 36;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001878F0()
{
  return sub_100008BD0(&qword_1003B0958, (uint64_t)qword_100384700, (uint64_t)sub_1001876C0);
}

uint64_t sub_10018790C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0958, (uint64_t)qword_100384700, (uint64_t)sub_1001876C0, a1);
}

uint64_t sub_100187928@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0958, (uint64_t)qword_100384700, (uint64_t)sub_1001876C0, a1);
}

void *sub_100187944()
{
  return &unk_100356A00;
}

unint64_t sub_100187950()
{
  return 0xD000000000000022;
}

uint64_t sub_10018796C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384718);
  sub_10000E6A4(v0, (uint64_t)qword_100384718);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "helo_enabled";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "early_return_enabled";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "target_vertical_uncertainty_m";
  *(_QWORD *)(v14 + 8) = 29;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100187B00()
{
  return sub_100008BD0(&qword_1003B0960, (uint64_t)qword_100384718, (uint64_t)sub_10018796C);
}

uint64_t sub_100187B1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0960, (uint64_t)qword_100384718, (uint64_t)sub_10018796C, a1);
}

uint64_t sub_100187B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        v12 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + *(int *)(v12 + 28), a2, a3);
        break;
      case 2:
        v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 24);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
        break;
      case 1:
        v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 20);
        goto LABEL_3;
    }
    v4 = 0;
    v7 = a2;
  }
  return result;
}

uint64_t sub_100187C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v10 = result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2, a2, a3);
    v13 = v5 + *(int *)(v10 + 28);
    if ((*(_BYTE *)(v13 + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3, a2, a3, *(double *)v13);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_100187D18()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Configuration, &qword_100375728, (uint64_t)&unk_1002DCBB0);
}

uint64_t sub_100187D34@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  v6 = a2 + a1[7];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  return result;
}

uint64_t sub_100187D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100187B38(a1, a2, a3);
}

uint64_t sub_100187D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C1C(a1, a2, a3);
}

uint64_t sub_100187DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BD10, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCB28);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100187DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0960, (uint64_t)qword_100384718, (uint64_t)sub_10018796C, a1);
}

uint64_t sub_100187E10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100187E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100187EA4()
{
  return &unk_100356A10;
}

unint64_t sub_100187EB0()
{
  return 0xD000000000000022;
}

uint64_t sub_100187ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v46;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384730);
  sub_10000E6A4(v0, (uint64_t)qword_100384730);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v46 = swift_allocObject(v1, v6 + 19 * v4, v5 | 7);
  *(_OWORD *)(v46 + 16) = xmmword_1002CAB40;
  v7 = v46 + v6;
  v8 = v46 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v46 + v6) = 1;
  *(_QWORD *)v8 = "latitude_degrees";
  *(_QWORD *)(v8 + 8) = 16;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v46 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "longitude_degrees";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v46 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "altitude_meters";
  *((_QWORD *)v14 + 1) = 15;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v46 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "achieved_horizontal_uncertainty_meters";
  *((_QWORD *)v16 + 1) = 38;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v46 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "achieved_vertical_uncertainty_meters";
  *((_QWORD *)v18 + 1) = 36;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v46 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ttff_seconds";
  *((_QWORD *)v20 + 1) = 12;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v46 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "technology_source";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v46 + v6 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "method_type";
  *((_QWORD *)v24 + 1) = 11;
  v24[16] = 2;
  v11();
  v25 = v46 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "session_type";
  *(_QWORD *)(v25 + 8) = 12;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v46 + v6 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "protocol_type";
  *((_QWORD *)v27 + 1) = 13;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v46 + v6 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "requested_response_timeout_seconds";
  *((_QWORD *)v29 + 1) = 34;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v46 + v6 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "requested_horizontal_accuracy_meters";
  *((_QWORD *)v31 + 1) = 36;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v46 + v6 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "requested_vertical_accuracy_meters";
  *((_QWORD *)v33 + 1) = 34;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v46 + v6 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "pos_req_type";
  *((_QWORD *)v35 + 1) = 12;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v46 + v6 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "error_code";
  *((_QWORD *)v37 + 1) = 10;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v46 + v6 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "helo_enabled";
  *((_QWORD *)v39 + 1) = 12;
  v39[16] = 2;
  v11();
  v40 = v46 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 17;
  *(_QWORD *)v40 = "helo_injected";
  *(_QWORD *)(v40 + 8) = 13;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  v41 = (_QWORD *)(v46 + v6 + 17 * v4);
  v42 = (char *)v41 + *(int *)(v2 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "assistance_used";
  *((_QWORD *)v42 + 1) = 15;
  v42[16] = 2;
  v11();
  v43 = (_QWORD *)(v46 + v6 + 18 * v4);
  v44 = (char *)v43 + *(int *)(v2 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "session_id";
  *((_QWORD *)v44 + 1) = 10;
  v44[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v46);
}

uint64_t sub_1001883B4()
{
  return sub_100008BD0(&qword_1003B0968, (uint64_t)qword_100384730, (uint64_t)sub_100187ECC);
}

uint64_t sub_1001883D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0968, (uint64_t)qword_100384730, (uint64_t)sub_100187ECC, a1);
}

double sub_1001883EC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
  v1 = swift_allocObject(v0, 185, 7);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 1;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  *(_DWORD *)(v1 + 108) = 0;
  *(_BYTE *)(v1 + 112) = 1;
  *(_WORD *)(v1 + 113) = 1042;
  *(_BYTE *)(v1 + 115) = 7;
  *(_QWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  *(_QWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 144) = 1;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 1;
  *(_QWORD *)&result = 33689864;
  *(_DWORD *)(v1 + 161) = 33689864;
  *(_QWORD *)(v1 + 168) = 0;
  *(_BYTE *)(v1 + 176) = 1;
  *(_DWORD *)(v1 + 180) = 0;
  *(_BYTE *)(v1 + 184) = 1;
  qword_1003B0978 = v1;
  return result;
}

uint64_t sub_10018849C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 185, 7);
}

uint64_t sub_1001884AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    v12 = swift_allocObject(v11, 185, 7);
    sub_1001C2530(v10);
    v13 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v6 + v9);
  swift_retain(v14);
  v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v27 = v14 + 180;
    v29 = v14 + 168;
    v26 = v14 + 108;
    while ((v16 & 1) == 0)
    {
      switch(v15)
      {
        case 1:
          swift_beginAccess(v14 + 16, v28, 33, 0);
          v18 = v14 + 16;
          goto LABEL_22;
        case 2:
          swift_beginAccess(v14 + 32, v28, 33, 0);
          v18 = v14 + 32;
          goto LABEL_22;
        case 3:
          v19 = v14 + 48;
          goto LABEL_21;
        case 4:
          v19 = v14 + 64;
          goto LABEL_21;
        case 5:
          v19 = v14 + 80;
          goto LABEL_21;
        case 6:
          v19 = v14 + 96;
          goto LABEL_21;
        case 7:
          swift_beginAccess(v26, v28, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v26, a2, a3);
          goto LABEL_31;
        case 8:
          swift_beginAccess(v14 + 113, v28, 33, 0);
          v21 = sub_10020C90C();
          v22 = v14 + 113;
          v23 = &type metadata for Proto_Gnss_Emergency_PositionMethod;
          goto LABEL_25;
        case 9:
          swift_beginAccess(v14 + 114, v28, 33, 0);
          v21 = sub_10020C884();
          v22 = v14 + 114;
          v23 = &type metadata for Proto_Gnss_Emergency_PositionSession;
          goto LABEL_25;
        case 10:
          swift_beginAccess(v14 + 115, v28, 33, 0);
          v21 = sub_10020C840();
          v22 = v14 + 115;
          v23 = &type metadata for Proto_Gnss_Emergency_PositionProtocol;
          goto LABEL_25;
        case 11:
          v19 = v14 + 120;
          goto LABEL_21;
        case 12:
          v19 = v14 + 136;
          goto LABEL_21;
        case 13:
          v19 = v14 + 152;
LABEL_21:
          swift_beginAccess(v19, v28, 33, 0);
          v18 = v19;
LABEL_22:
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v18, a2, a3);
          goto LABEL_31;
        case 14:
          swift_beginAccess(v14 + 161, v28, 33, 0);
          v21 = sub_10020C8C8();
          v22 = v14 + 161;
          v23 = &type metadata for Proto_Gnss_Emergency_PositionReqType;
          goto LABEL_25;
        case 15:
          swift_beginAccess(v14 + 162, v28, 33, 0);
          v21 = sub_10020C7FC();
          v22 = v14 + 162;
          v23 = &type metadata for Proto_Gnss_Emergency_SessionErrorCode;
LABEL_25:
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v22, v23, v21, a2, a3);
          goto LABEL_31;
        case 16:
          v24 = v14 + 163;
          goto LABEL_28;
        case 17:
          v24 = v14 + 164;
LABEL_28:
          swift_beginAccess(v24, v28, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v24, a2, a3);
          goto LABEL_31;
        case 18:
          v25 = v29;
          swift_beginAccess(v29, v28, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v25, a2, a3);
          goto LABEL_31;
        case 19:
          swift_beginAccess(v27, v28, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v27, a2, a3);
LABEL_31:
          v5 = v20;
          swift_endAccess(v28);
          break;
        default:
          break;
      }
      v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v14);
}

uint64_t sub_1001888DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v18, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1, a2, a3, *(double *)(v9 + 16));
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 32, v19, 0, 0);
  if ((*(_BYTE *)(v9 + 40) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2, a2, a3, *(double *)(v9 + 32));
  swift_beginAccess(v9 + 48, v20, 0, 0);
  if ((*(_BYTE *)(v9 + 56) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3, a2, a3, *(double *)(v9 + 48));
  swift_beginAccess(v9 + 64, v21, 0, 0);
  if ((*(_BYTE *)(v9 + 72) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4, a2, a3, *(double *)(v9 + 64));
  swift_beginAccess(v9 + 80, v36, 0, 0);
  if ((*(_BYTE *)(v9 + 88) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(5, a2, a3, *(double *)(v9 + 80));
  swift_beginAccess(v9 + 96, v35, 0, 0);
  if ((*(_BYTE *)(v9 + 104) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(6, a2, a3, *(double *)(v9 + 96));
  swift_beginAccess(v9 + 108, v34, 0, 0);
  if ((*(_BYTE *)(v9 + 112) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 108), 7, a2, a3);
  swift_beginAccess(v9 + 113, v33, 0, 0);
  if (*(_BYTE *)(v9 + 113) != 18)
  {
    v32[0] = *(_BYTE *)(v9 + 113);
    v11 = sub_10020C90C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v32, 8, &type metadata for Proto_Gnss_Emergency_PositionMethod, v11, a2, a3);
  }
  swift_beginAccess(v9 + 114, v32, 0, 0);
  if (*(_BYTE *)(v9 + 114) != 4)
  {
    v31[0] = *(_BYTE *)(v9 + 114);
    v12 = sub_10020C884();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v31, 9, &type metadata for Proto_Gnss_Emergency_PositionSession, v12, a2, a3);
  }
  swift_beginAccess(v9 + 115, v31, 0, 0);
  if (*(_BYTE *)(v9 + 115) != 7)
  {
    v30[0] = *(_BYTE *)(v9 + 115);
    v13 = sub_10020C840();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v30, 10, &type metadata for Proto_Gnss_Emergency_PositionProtocol, v13, a2, a3);
  }
  swift_beginAccess(v9 + 120, v30, 0, 0);
  if ((*(_BYTE *)(v9 + 128) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(11, a2, a3, *(double *)(v9 + 120));
  swift_beginAccess(v9 + 136, v29, 0, 0);
  if ((*(_BYTE *)(v9 + 144) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(12, a2, a3, *(double *)(v9 + 136));
  swift_beginAccess(v9 + 152, v28, 0, 0);
  if ((*(_BYTE *)(v9 + 160) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(13, a2, a3, *(double *)(v9 + 152));
  swift_beginAccess(v9 + 161, v27, 0, 0);
  if (*(_BYTE *)(v9 + 161) != 8)
  {
    v26[0] = *(_BYTE *)(v9 + 161);
    v14 = sub_10020C8C8();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v26, 14, &type metadata for Proto_Gnss_Emergency_PositionReqType, v14, a2, a3);
  }
  swift_beginAccess(v9 + 162, v26, 0, 0);
  if (*(_BYTE *)(v9 + 162) != 17)
  {
    v25[0] = *(_BYTE *)(v9 + 162);
    v15 = sub_10020C7FC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v25, 15, &type metadata for Proto_Gnss_Emergency_SessionErrorCode, v15, a2, a3);
  }
  swift_beginAccess(v9 + 163, v25, 0, 0);
  v16 = *(unsigned __int8 *)(v9 + 163);
  if (v16 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v16 & 1, 16, a2, a3);
  swift_beginAccess(v9 + 164, v24, 0, 0);
  v17 = *(unsigned __int8 *)(v9 + 164);
  if (v17 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v17 & 1, 17, a2, a3);
  swift_beginAccess(v9 + 168, v23, 0, 0);
  if ((*(_BYTE *)(v9 + 176) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(_QWORD *)(v9 + 168), 18, a2, a3);
  swift_beginAccess(v9 + 180, v22, 0, 0);
  if ((*(_BYTE *)(v9 + 184) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 180), 19, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

Swift::Int sub_100188E9C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SummaryReport, &qword_100375730, (uint64_t)&unk_1002DCD18);
}

uint64_t sub_100188EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0970, &qword_1003B0978, (uint64_t)sub_1001883EC, a2);
}

uint64_t sub_100188ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001884AC(a1, a2, a3);
}

uint64_t sub_100188EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001888DC(a1, a2, a3);
}

uint64_t sub_100188EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BD08, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCC90);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100188F4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0968, (uint64_t)qword_100384730, (uint64_t)sub_100187ECC, a1);
}

uint64_t sub_100188F68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003760E8, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCC18);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100188FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003760E8, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCC18);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100188FF8()
{
  return &unk_100356A20;
}

unint64_t sub_100189004()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_100189020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384748);
  sub_10000E6A4(v0, (uint64_t)qword_100384748);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "supl_port";
  *(_QWORD *)(v9 + 8) = 9;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "supl_server";
  *(_QWORD *)(v13 + 8) = 11;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "enable_msa";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "enable_lpp_rel13_wlan_meas";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "supports_lpp_rel13_wlan_meas_type_rssi";
  *((_QWORD *)v19 + 1) = 38;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "supports_lpp_rel13_location_source";
  *((_QWORD *)v21 + 1) = 34;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100189254()
{
  return sub_100008BD0(&qword_1003B0980, (uint64_t)qword_100384748, (uint64_t)sub_100189020);
}

uint64_t sub_100189270@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0980, (uint64_t)qword_100384748, (uint64_t)sub_100189020, a1);
}

uint64_t sub_10018928C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v12 + 20), a2, a3);
          goto LABEL_6;
        case 2:
          v13 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + *(int *)(v13 + 24), a2, a3);
          goto LABEL_6;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 28);
          goto LABEL_5;
        case 4:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 32);
          goto LABEL_5;
        case 5:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 36);
          goto LABEL_5;
        case 6:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 40);
LABEL_5:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v10, a2, a3);
LABEL_6:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001893C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  int v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (_QWORD *)(v5 + v10[6]);
    v13 = v12[1];
    if (v13)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v12, v13, 2, a2, a3);
    v14 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v14 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 3, a2, a3);
    v15 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v15 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 4, a2, a3);
    sub_10018952C(v5, a1, a2, a3);
    sub_1001895A0(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10018952C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 36));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 5, a3, a4);
  return result;
}

uint64_t sub_1001895A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 6, a3, a4);
  return result;
}

Swift::Int sub_100189618()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SuplConfig, &qword_100375738, (uint64_t)&unk_1002DCE80);
}

uint64_t sub_100189634@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v8) = 2;
  v9 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 2;
  *(_BYTE *)(a2 + v9) = 2;
  return result;
}

uint64_t sub_100189690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018928C(a1, a2, a3);
}

uint64_t sub_1001896A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001893C0(a1, a2, a3);
}

uint64_t sub_1001896B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BD00, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCDF8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100189708@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0980, (uint64_t)qword_100384748, (uint64_t)sub_100189020, a1);
}

uint64_t sub_100189724(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376100, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCD80);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100189764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376100, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCD80);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001897B4()
{
  return &unk_100356A30;
}

unint64_t sub_1001897C0()
{
  return 0xD000000000000020;
}

uint64_t sub_1001897DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v29;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384760);
  sub_10000E6A4(v0, (uint64_t)qword_100384760);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v29 = swift_allocObject(v1, v6 + 10 * v4, v5 | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1002C3110;
  v7 = v29 + v6;
  v8 = v29 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v29 + v6) = 1;
  *(_QWORD *)v8 = "is_serving_cell";
  *(_QWORD *)(v8 + 8) = 15;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v29 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "mcc";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v29 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "mnc";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v29 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "tac";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v29 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "cellid";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v29 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "pci";
  *((_QWORD *)v20 + 1) = 3;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v29 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "rsrp";
  *((_QWORD *)v22 + 1) = 4;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v29 + v6 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "rsrq";
  *((_QWORD *)v24 + 1) = 4;
  v24[16] = 2;
  v11();
  v25 = v29 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "ta";
  *(_QWORD *)(v25 + 8) = 2;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v29 + v6 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "dlearfcn";
  *((_QWORD *)v27 + 1) = 8;
  v27[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v29);
}

uint64_t sub_100189ADC()
{
  return sub_100008BD0(&qword_1003B0988, (uint64_t)qword_100384760, (uint64_t)sub_1001897DC);
}

uint64_t sub_100189AF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0988, (uint64_t)qword_100384760, (uint64_t)sub_1001897DC, a1);
}

uint64_t sub_100189B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_16;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 24);
          goto LABEL_15;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 28);
          goto LABEL_15;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 32);
          goto LABEL_15;
        case 5:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 36);
          goto LABEL_15;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 40);
          goto LABEL_15;
        case 7:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 44);
          goto LABEL_15;
        case 8:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 48);
          goto LABEL_15;
        case 9:
          v13 = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v13 + 52), a2, a3);
          goto LABEL_16;
        case 10:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 56);
LABEL_15:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
LABEL_16:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100189C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
  v10 = (int *)result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, 7);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:));
    sub_100199EC0(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_100189EBC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, &qword_100375740, (uint64_t)&unk_1002DCFE8);
}

uint64_t sub_100189ED8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1[12];
  v14 = a2 + a1[11];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v13;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a1[14];
  v17 = a2 + a1[13];
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  v18 = a2 + v16;
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  return result;
}

uint64_t sub_100189F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100189B14(a1, a2, a3);
}

uint64_t sub_100189F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100189C88(a1, a2, a3);
}

uint64_t sub_100189FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCF8, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCF60);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018A000@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0988, (uint64_t)qword_100384760, (uint64_t)sub_1001897DC, a1);
}

uint64_t sub_10018A01C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375758, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCEE8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018A05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375758, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCEE8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018A0B0()
{
  return &unk_100356A40;
}

unint64_t sub_10018A0BC()
{
  return 0xD000000000000020;
}

uint64_t sub_10018A0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384778);
  sub_10000E6A4(v0, (uint64_t)qword_100384778);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "is_serving_cell";
  *(_QWORD *)(v9 + 8) = 15;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "mcc";
  *(_QWORD *)(v13 + 8) = 3;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "mnc";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "lac";
  *((_QWORD *)v17 + 1) = 3;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "cellid";
  *(_QWORD *)(v18 + 8) = 6;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018A2E4()
{
  return sub_100008BD0(&qword_1003B0990, (uint64_t)qword_100384778, (uint64_t)sub_10018A0D8);
}

uint64_t sub_10018A300@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0990, (uint64_t)qword_100384778, (uint64_t)sub_10018A0D8, a1);
}

uint64_t sub_10018A31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018C980(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_10018A338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018CAC0(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_10018A354(uint64_t a1, uint64_t a2)
{
  return sub_1001D4B4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo) & 1;
}

Swift::Int sub_10018A374()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, &qword_100375748, (uint64_t)&unk_1002DD150);
}

uint64_t sub_10018A394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCF0, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD0C8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018A3E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0990, (uint64_t)qword_100384778, (uint64_t)sub_10018A0D8, a1);
}

uint64_t sub_10018A400(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375760, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD050);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018A440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375760, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD050);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018A490()
{
  return &unk_100356A50;
}

unint64_t sub_10018A49C()
{
  return 0xD000000000000022;
}

uint64_t sub_10018A4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v26;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384790);
  sub_10000E6A4(v0, (uint64_t)qword_100384790);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v26 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_1002C40B0;
  v7 = v26 + v6;
  v8 = v26 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v26 + v6) = 1;
  *(_QWORD *)v8 = "is_serving_cell";
  *(_QWORD *)(v8 + 8) = 15;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "mcc";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "mnc";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "lac";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "cellid";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "psc";
  *((_QWORD *)v20 + 1) = 3;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "freq_mode";
  *((_QWORD *)v22 + 1) = 9;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "dluarfcn";
  *((_QWORD *)v24 + 1) = 8;
  v24[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v26);
}

uint64_t sub_10018A75C()
{
  return sub_100008BD0(&qword_1003B0998, (uint64_t)qword_100384790, (uint64_t)sub_10018A4B8);
}

uint64_t sub_10018A778@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0998, (uint64_t)qword_100384790, (uint64_t)sub_10018A4B8, a1);
}

uint64_t sub_10018A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_14;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 24);
          goto LABEL_13;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 28);
          goto LABEL_13;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 32);
          goto LABEL_13;
        case 5:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 36);
          goto LABEL_13;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 40);
          goto LABEL_13;
        case 7:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 44);
          v14 = sub_10020C664();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v13, &type metadata for Proto_Gnss_Emergency_FreqMode, v14, a2, a3);
          goto LABEL_14;
        case 8:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 48);
LABEL_13:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
LABEL_14:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  v10 = (int *)result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
    sub_10018ABC0(v5, a1, a2, a3);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10018AAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  unsigned int *v11;

  result = a5(0);
  v11 = (unsigned int *)(a1 + *(int *)(result + 36));
  if ((v11[1] & 1) == 0)
    return a6(*v11, 5, a3, a4);
  return result;
}

uint64_t sub_10018AB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  unsigned int *v9;

  result = a5(0);
  v9 = (unsigned int *)(a1 + *(int *)(result + 40));
  if ((v9[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v9, 6, a3, a4);
  return result;
}

uint64_t sub_10018ABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 44)) != 4)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 44));
    v8 = sub_10020C664();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 7, &type metadata for Proto_Gnss_Emergency_FreqMode, v8, a3, a4);
  }
  return result;
}

uint64_t sub_10018AC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  unsigned int *v9;

  result = a5(0);
  v9 = (unsigned int *)(a1 + *(int *)(result + 48));
  if ((v9[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v9, 8, a3, a4);
  return result;
}

Swift::Int sub_10018ACC0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, &qword_100375750, (uint64_t)&unk_1002DD2B8);
}

uint64_t sub_10018ACDC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1[12];
  *(_BYTE *)(a2 + a1[11]) = 4;
  v14 = a2 + v13;
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  return result;
}

uint64_t sub_10018AD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018A794(a1, a2, a3);
}

uint64_t sub_10018AD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018A908(a1, a2, a3);
}

uint64_t sub_10018AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCE8, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD230);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018ADE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0998, (uint64_t)qword_100384790, (uint64_t)sub_10018A4B8, a1);
}

uint64_t sub_10018AE00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375768, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD1B8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018AE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375768, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD1B8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018AE90()
{
  return &unk_100356A60;
}

unint64_t sub_10018AE9C()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10018AEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003847A8);
  sub_10000E6A4(v0, (uint64_t)qword_1003847A8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "cell_type";
  *(_QWORD *)(v9 + 8) = 9;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "lte_cell_info_vect";
  *(_QWORD *)(v13 + 8) = 18;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "gsm_cell_info_vect";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "wcdma_cell_info_vect";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018B07C()
{
  return sub_100008BD0(&qword_1003B09A0, (uint64_t)qword_1003847A8, (uint64_t)sub_10018AEB8);
}

uint64_t sub_10018B098@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09A0, (uint64_t)qword_1003847A8, (uint64_t)sub_10018AEB8, a1);
}

uint64_t sub_10018B0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationId(0) + 32);
          v13 = sub_10020C6A8();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_CellType, v13, a2, a3);
          break;
        case 2:
          v9 = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
          v10 = sub_10000FD38(&qword_100375758, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCEE8);
          v11 = v3;
          goto LABEL_5;
        case 3:
          v9 = type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0);
          v10 = sub_10000FD38(&qword_100375760, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD050);
          v11 = v3 + 8;
          goto LABEL_5;
        case 4:
          v9 = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
          v10 = sub_10000FD38(&qword_100375768, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD1B8);
          v11 = v3 + 16;
LABEL_5:
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v11, v9, v10, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  result = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  if (*((_BYTE *)v3 + *(int *)(result + 32)) != 7)
  {
    v19 = *((_BYTE *)v3 + *(int *)(result + 32));
    v9 = sub_10020C6A8();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v19, 1, &type metadata for Proto_Gnss_Emergency_CellType, v9, a2, a3);
  }
  if (!v4)
  {
    v10 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v11 = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
      v12 = sub_10000FD38(&qword_100375758, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCEE8);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v10, 2, v11, v12, a2, a3);
    }
    v13 = v3[1];
    if (*(_QWORD *)(v13 + 16))
    {
      v14 = type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0);
      v15 = sub_10000FD38(&qword_100375760, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD050);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v13, 3, v14, v15, a2, a3);
    }
    v16 = v3[2];
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
      v18 = sub_10000FD38(&qword_100375768, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD1B8);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v16, 4, v17, v18, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018B444()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_LocationId, &qword_100375770, (uint64_t)&unk_1002DD420);
}

uint64_t sub_10018B460@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  *a2 = &_swiftEmptyArrayStorage;
  a2[1] = &_swiftEmptyArrayStorage;
  a2[2] = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  *((_BYTE *)a2 + *(int *)(a1 + 32)) = 7;
  return result;
}

uint64_t sub_10018B4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B0B4(a1, a2, a3);
}

uint64_t sub_10018B4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B258(a1, a2, a3);
}

uint64_t sub_10018B4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCE0, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD398);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018B520@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09A0, (uint64_t)qword_1003847A8, (uint64_t)sub_10018AEB8, a1);
}

uint64_t sub_10018B53C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376148, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD320);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018B57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376148, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD320);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018B5CC()
{
  return &unk_100356A70;
}

unint64_t sub_10018B5D8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_10018B5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003847C0);
  sub_10000E6A4(v0, (uint64_t)qword_1003847C0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "response_time_seconds";
  *(_QWORD *)(v9 + 8) = 21;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "is_rssi_requested";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018B744()
{
  return sub_100008BD0(&qword_1003B09A8, (uint64_t)qword_1003847C0, (uint64_t)sub_10018B5F4);
}

uint64_t sub_10018B760@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09A8, (uint64_t)qword_1003847C0, (uint64_t)sub_10018B5F4, a1);
}

uint64_t sub_10018B77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0)
      break;
    if (result == 2)
    {
      v9 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v9 + 24), a2, a3);
    }
    else if (result == 1)
    {
      v12 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v12 + 20), a2, a3);
    }
    v4 = 0;
    v7 = a2;
  }
  return result;
}

uint64_t sub_10018B848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unsigned int *v11;
  int v12;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  v10 = result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018B914()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, &qword_100375778, (uint64_t)&unk_1002DD588);
}

uint64_t sub_10018B930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  return result;
}

uint64_t sub_10018B970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B77C(a1, a2, a3);
}

uint64_t sub_10018B984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B848(a1, a2, a3);
}

uint64_t sub_10018B998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCD8, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD500);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018B9E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09A8, (uint64_t)qword_1003847C0, (uint64_t)sub_10018B5F4, a1);
}

uint64_t sub_10018BA04(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376160, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD488);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018BA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376160, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD488);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018BA94()
{
  return &unk_100356A80;
}

unint64_t sub_10018BAA0()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_10018BABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003847D8);
  sub_10000E6A4(v0, (uint64_t)qword_1003847D8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "bssid";
  *(_QWORD *)(v9 + 8) = 5;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "is_serving_flag_present";
  *(_QWORD *)(v13 + 8) = 23;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "serving_flag";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ap_channel_frequency_number";
  *((_QWORD *)v17 + 1) = 27;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "rssi_dbm";
  *(_QWORD *)(v18 + 8) = 8;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018BCCC()
{
  return sub_100008BD0(&qword_1003B09B0, (uint64_t)qword_1003847D8, (uint64_t)sub_10018BABC);
}

uint64_t sub_10018BCE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09B0, (uint64_t)qword_1003847D8, (uint64_t)sub_10018BABC, a1);
}

uint64_t sub_10018BD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBytesField(value:)(v3 + *(int *)(v12 + 20), a2, a3);
          goto LABEL_6;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 24);
          goto LABEL_5;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 28);
LABEL_5:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 4:
          v13 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v13 + 32), a2, a3);
          goto LABEL_6;
        case 5:
          v14 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v14 + 36), a2, a3);
LABEL_6:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int *v16;
  unsigned int *v17;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
  v10 = (int *)result;
  v11 = v5 + *(int *)(result + 20);
  v12 = *(_QWORD *)(v11 + 8);
  if (v12 >> 60 != 15)
  {
    v13 = *(_QWORD *)v11;
    sub_100017EF8(*(_QWORD *)v11, *(_QWORD *)(v11 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(v13, v12, 1, a2, a3);
    result = sub_10005F2AC(v13, v12);
  }
  if (!v4)
  {
    v14 = *(unsigned __int8 *)(v5 + v10[6]);
    if (v14 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 2, a2, a3);
    v15 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v15 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 3, a2, a3);
    v16 = (unsigned int *)(v5 + v10[8]);
    if ((v16[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v16, 4, a2, a3);
    v17 = (unsigned int *)(v5 + v10[9]);
    if ((v17[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v17, 5, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018BFCC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, &qword_100375780, (uint64_t)&unk_1002DD6F0);
}

double sub_10018BFE8@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  UnknownStorage.init()();
  result = 0.0;
  v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1002C40A0;
  *(_BYTE *)(a2 + v5) = 2;
  v6 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  v7 = a2 + v6;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a2 + a1[9];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_10018C04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018BD04(a1, a2, a3);
}

uint64_t sub_10018C060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018BE3C(a1, a2, a3);
}

uint64_t sub_10018C074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCD0, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD668);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018C0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09B0, (uint64_t)qword_1003847D8, (uint64_t)sub_10018BABC, a1);
}

uint64_t sub_10018C0E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375788, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD5F0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018C120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375788, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD5F0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018C174()
{
  return &unk_100356A90;
}

unint64_t sub_10018C180()
{
  return 0xD000000000000028;
}

uint64_t sub_10018C19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003847F0);
  sub_10000E6A4(v0, (uint64_t)qword_1003847F0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "result";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "meas";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018C2EC()
{
  return sub_100008BD0(&qword_1003B09B8, (uint64_t)qword_1003847F0, (uint64_t)sub_10018C19C);
}

uint64_t sub_10018C308@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09B8, (uint64_t)qword_1003847F0, (uint64_t)sub_10018C19C, a1);
}

uint64_t sub_10018C324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
        v10 = sub_10000FD38(&qword_100375788, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD5F0);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v9, v10, a2, a3);
      }
      else if (result == 1)
      {
        v11 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0) + 24);
        v12 = sub_10020BEF4();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v11, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult, v12, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018C450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  if (*((_BYTE *)v3 + *(int *)(result + 24)) != 6)
  {
    v13 = *((_BYTE *)v3 + *(int *)(result + 24));
    v9 = sub_10020BEF4();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v13, 1, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult, v9, a2, a3);
  }
  if (!v4)
  {
    v10 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v11 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
      v12 = sub_10000FD38(&qword_100375788, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD5F0);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v10, 2, v11, v12, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018C578()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, &qword_100375790, (uint64_t)&unk_1002DD858);
}

uint64_t sub_10018C594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  *((_BYTE *)a2 + *(int *)(a1 + 24)) = 6;
  return result;
}

uint64_t sub_10018C5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018C324(a1, a2, a3);
}

uint64_t sub_10018C5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018C450(a1, a2, a3);
}

uint64_t sub_10018C600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCC8, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD7D0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018C650@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09B8, (uint64_t)qword_1003847F0, (uint64_t)sub_10018C19C, a1);
}

uint64_t sub_10018C66C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376188, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD758);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018C6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376188, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD758);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018C6FC()
{
  return &unk_100356AA0;
}

unint64_t sub_10018C708()
{
  return 0xD000000000000018;
}

uint64_t sub_10018C724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384808);
  sub_10000E6A4(v0, (uint64_t)qword_100384808);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "is_valid";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "horizontal_accuracy";
  *(_QWORD *)(v13 + 8) = 19;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "vertical_accuracy";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "max_location_age";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "delay";
  *(_QWORD *)(v18 + 8) = 5;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018C92C()
{
  return sub_100008BD0(&qword_1003B09C0, (uint64_t)qword_100384808, (uint64_t)sub_10018C724);
}

uint64_t sub_10018C948@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09C0, (uint64_t)qword_100384808, (uint64_t)sub_10018C724, a1);
}

uint64_t sub_10018C964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018C980(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_10018C980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = a4(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v4 + *(int *)(v12 + 20), a2, a3);
          break;
        case 2:
          v11 = *(int *)(a4(0) + 24);
          goto LABEL_5;
        case 3:
          v11 = *(int *)(a4(0) + 28);
          goto LABEL_5;
        case 4:
          v11 = *(int *)(a4(0) + 32);
          goto LABEL_5;
        case 5:
          v11 = *(int *)(a4(0) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v4 + v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018CAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018CAC0(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_10018CAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int *v11;
  int v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int *v16;

  v6 = v4;
  result = a4(0);
  v11 = (int *)result;
  v12 = *(unsigned __int8 *)(v6 + *(int *)(result + 20));
  if (v12 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 1, a2, a3);
  if (!v5)
  {
    v13 = (unsigned int *)(v6 + v11[6]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 2, a2, a3);
    v14 = (unsigned int *)(v6 + v11[7]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 3, a2, a3);
    v15 = (unsigned int *)(v6 + v11[8]);
    if ((v15[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 4, a2, a3);
    v16 = (unsigned int *)(v6 + v11[9]);
    if ((v16[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v16, 5, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10018CC1C(uint64_t a1, uint64_t a2)
{
  return sub_1001D4B4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_QoP) & 1;
}

Swift::Int sub_10018CC3C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_QoP, &qword_100375798, (uint64_t)&unk_1002DD9C0);
}

uint64_t sub_10018CC58@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + a1[9];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_10018CCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCC0, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD938);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018CD14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09C0, (uint64_t)qword_100384808, (uint64_t)sub_10018C724, a1);
}

uint64_t sub_10018CD30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003761A0, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD8C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018CD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003761A0, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD8C0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018CDC0()
{
  return &unk_100356AB0;
}

unint64_t sub_10018CDCC()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10018CDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384820);
  sub_10000E6A4(v0, (uint64_t)qword_100384820);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "is_valid";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "slp_address_type";
  *(_QWORD *)(v13 + 8) = 16;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "f_qdn";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "_ipaddress";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018CFA8()
{
  return sub_100008BD0(&qword_1003B09C8, (uint64_t)qword_100384820, (uint64_t)sub_10018CDE8);
}

uint64_t sub_10018CFC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09C8, (uint64_t)qword_100384820, (uint64_t)sub_10018CDE8, a1);
}

uint64_t sub_10018CFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v10 + 24), a2, a3);
          goto LABEL_5;
        case 2:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 28);
          v13 = sub_10020C620();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_SLPAddressType, v13, a2, a3);
          goto LABEL_5;
        case 3:
          v14 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + *(int *)(v14 + 32), a2, a3);
          goto LABEL_5;
        case 4:
          v11 = v9;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v3, a2, a3);
LABEL_5:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  int v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  result = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v9 = result;
  v10 = *(unsigned __int8 *)(v3 + *(int *)(result + 24));
  if (v10 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v10 & 1, 1, a2, a3);
  if (!v4)
  {
    if (*(_BYTE *)(v3 + *(int *)(v9 + 28)) != 5)
    {
      v14 = *(_BYTE *)(v3 + *(int *)(v9 + 28));
      v11 = sub_10020C620();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v14, 2, &type metadata for Proto_Gnss_Emergency_SLPAddressType, v11, a2, a3);
    }
    v12 = (_QWORD *)(v3 + *(int *)(v9 + 32));
    v13 = v12[1];
    if (v13)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v12, v13, 3, a2, a3);
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018D274()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SLPAddress, &qword_1003757A0, (uint64_t)&unk_1002DDB28);
}

uint64_t sub_10018D290@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  *((_BYTE *)a2 + a1[6]) = 2;
  *((_BYTE *)a2 + v5) = 5;
  v6 = (_QWORD *)((char *)a2 + a1[8]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t sub_10018D2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018CFE0(a1, a2, a3);
}

uint64_t sub_10018D2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018D11C(a1, a2, a3);
}

uint64_t sub_10018D310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCB8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDAA0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018D360@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09C8, (uint64_t)qword_100384820, (uint64_t)sub_10018CDE8, a1);
}

uint64_t sub_10018D37C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018D3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018D410()
{
  return &unk_100356AC0;
}

unint64_t sub_10018D41C()
{
  return 0xD000000000000021;
}

uint64_t sub_10018D438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384838);
  sub_10000E6A4(v0, (uint64_t)qword_100384838);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "is_valid";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "emergency_call_location_present";
  *((_QWORD *)v13 + 1) = 31;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018D588()
{
  return sub_100008BD0(&qword_1003B09D0, (uint64_t)qword_100384838, (uint64_t)sub_10018D438);
}

uint64_t sub_10018D5A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09D0, (uint64_t)qword_100384838, (uint64_t)sub_10018D438, a1);
}

uint64_t sub_10018D5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t result;
  char v11;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0)
      break;
    if (result == 2)
    {
      v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 24);
LABEL_3:
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
      goto LABEL_4;
    }
    if (result == 1)
    {
      v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 20);
      goto LABEL_3;
    }
LABEL_4:
    v4 = 0;
    v7 = a2;
  }
  return result;
}

uint64_t sub_10018D66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  int v11;
  int v12;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  v10 = result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10018D738()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Notification, &qword_1003757A8, (uint64_t)&unk_1002DDC90);
}

uint64_t sub_10018D754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  return result;
}

uint64_t sub_10018D788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018D5C0(a1, a2, a3);
}

uint64_t sub_10018D79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018D66C(a1, a2, a3);
}

uint64_t sub_10018D7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCB0, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDC08);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018D800@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09D0, (uint64_t)qword_100384838, (uint64_t)sub_10018D438, a1);
}

uint64_t sub_10018D81C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003761D0, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDB90);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018D85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003761D0, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDB90);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018D8AC()
{
  return &unk_100356AD0;
}

unint64_t sub_10018D8B8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_10018D8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384850);
  sub_10000E6A4(v0, (uint64_t)qword_100384850);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "e_slpaddress";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "trigger_type";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10018DA28()
{
  return sub_100008BD0(&qword_1003B09D8, (uint64_t)qword_100384850, (uint64_t)sub_10018D8D4);
}

uint64_t sub_10018DA44@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09D8, (uint64_t)qword_100384850, (uint64_t)sub_10018D8D4, a1);
}

uint64_t sub_10018DA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 24);
        v10 = sub_10020C7B8();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v9, &type metadata for Proto_Gnss_Emergency_TriggerType, v10, a2, a3);
      }
      else if (result == 1)
      {
        v11 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 20);
        v12 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
        v13 = sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v11, v12, v13, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t inited;
  unint64_t v11;
  char v12;

  v5 = v3;
  result = sub_10018DC58(v5, a1, a2, a3);
  if (!v4)
  {
    inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
    if (*(_BYTE *)(v5 + *(int *)(inited + 24)) != 4)
    {
      v12 = *(_BYTE *)(v5 + *(int *)(inited + 24));
      v11 = sub_10020C7B8();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v12, 2, &type metadata for Proto_Gnss_Emergency_TriggerType, v11, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10018DC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375540);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  sub_10000E660(a1 + *(int *)(inited + 20), (uint64_t)v8, &qword_100375540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375540);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  v15 = sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

Swift::Int sub_10018DDD0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, &qword_1003757B0, (uint64_t)&unk_1002DDDF8);
}

uint64_t sub_10018DDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  UnknownStorage.init()();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_BYTE *)(a2 + *(int *)(a1 + 24)) = 4;
  return result;
}

uint64_t sub_10018DE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018DA60(a1, a2, a3);
}

uint64_t sub_10018DE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018DB98(a1, a2, a3);
}

uint64_t sub_10018DE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCA8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDD70);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018DEC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09D8, (uint64_t)qword_100384850, (uint64_t)sub_10018D8D4, a1);
}

uint64_t sub_10018DEE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003761E8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDCF8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003761E8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDCF8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018DF74()
{
  return &unk_100356AE0;
}

unint64_t sub_10018DF80()
{
  return 0xD000000000000019;
}

uint64_t sub_10018DF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384868);
  sub_10000E6A4(v0, (uint64_t)qword_100384868);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v19 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v19 + 16) = xmmword_1002C3100;
  v7 = v19 + v6;
  v8 = v19 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v19 + v6) = 1;
  *(_QWORD *)v8 = "pos_method";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "qop";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "slp_address";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "notification";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "supl_initv2_extension";
  *(_QWORD *)(v17 + 8) = 21;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v19);
}

uint64_t sub_10018E1AC()
{
  return sub_100008BD0(&qword_1003B09E0, (uint64_t)qword_100384868, (uint64_t)sub_10018DF9C);
}

uint64_t sub_10018E1C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09E0, (uint64_t)qword_100384868, (uint64_t)sub_10018DF9C, a1);
}

uint64_t sub_10018E1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 18;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  v3 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  v5 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  v7 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(inited - 8) + 56))(v8, 1, 1, inited);
  qword_1003B09F0 = v1;
  return result;
}

uint64_t sub_10018E2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375558);
  __chkstk_darwin(v4);
  v32 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375550);
  __chkstk_darwin(v6);
  v31 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375540);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_100375548);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 18;
  v14 = (_BYTE *)(v1 + 16);
  v15 = v2
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  v16 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v2
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  v18 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v2
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  v20 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = v2
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(inited - 8) + 56))(v21, 1, 1, inited);
  swift_beginAccess(a1 + 16, v39, 0, 0);
  v23 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v14, v38, 1, 0);
  *v14 = v23;
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop, v37, 0, 0);
  sub_10000E660(v24, (uint64_t)v13, &qword_100375548);
  swift_beginAccess(v15, v36, 33, 0);
  sub_10000E574((uint64_t)v13, v15, &qword_100375548);
  swift_endAccess(v36);
  v25 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, v36, 0, 0);
  sub_10000E660(v25, (uint64_t)v10, &qword_100375540);
  swift_beginAccess(v17, v35, 33, 0);
  sub_10000E574((uint64_t)v10, v17, &qword_100375540);
  swift_endAccess(v35);
  v26 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification, v35, 0, 0);
  v27 = v31;
  sub_10000E660(v26, v31, &qword_100375550);
  swift_beginAccess(v19, v34, 33, 0);
  sub_10000E574(v27, v19, &qword_100375550);
  swift_endAccess(v34);
  v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, v34, 0, 0);
  v29 = v32;
  sub_10000E660(v28, v32, &qword_100375558);
  swift_release(a1);
  swift_beginAccess(v21, v33, 33, 0);
  sub_10000E574(v29, v21, &qword_100375558);
  swift_endAccess(v33);
  return v2;
}

uint64_t sub_10018E6C0()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop, &qword_100375548);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, &qword_100375540);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification, &qword_100375550);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, &qword_100375558);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10018E740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t inited;
  unint64_t *v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE v27[24];

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_10018E2E4(v13);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v27, 33, 0);
          v26 = sub_10020C90C();
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15 + 16, &type metadata for Proto_Gnss_Emergency_PositionMethod, v26, a2, a3);
          goto LABEL_8;
        case 2:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop, v27, 33, 0);
          inited = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
          v21 = &qword_1003761A0;
          v22 = type metadata accessor for Proto_Gnss_Emergency_QoP;
          v23 = &unk_1002DD8C0;
          goto LABEL_7;
        case 3:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, v27, 33, 0);
          inited = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
          v21 = &qword_1003761B8;
          v22 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress;
          v23 = &unk_1002DDA28;
          goto LABEL_7;
        case 4:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification, v27, 33, 0);
          inited = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
          v21 = &qword_1003761D0;
          v22 = type metadata accessor for Proto_Gnss_Emergency_Notification;
          v23 = &unk_1002DDB90;
          goto LABEL_7;
        case 5:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, v27, 33, 0);
          inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
          v21 = &qword_1003761E8;
          v22 = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension;
          v23 = &unk_1002DDCF8;
LABEL_7:
          v24 = sub_10000FD38(v21, v22, (uint64_t)v23);
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v19, inited, v24, a2, a3);
LABEL_8:
          v5 = v25;
          swift_endAccess(v27);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_10018E9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  char v12;
  _BYTE v13[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v13, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 18)
  {
    v12 = *(_BYTE *)(v9 + 16);
    v10 = sub_10020C90C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v12, 1, &type metadata for Proto_Gnss_Emergency_PositionMethod, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  sub_10018EB58(v9, a1, a2, a3);
  sub_10018ECE4(v9, a1, a2, a3);
  sub_10018EE70(v9, a1, a2, a3);
  sub_10018EFFC(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10018EB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375548);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375548);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_QoP);
  v15 = sub_10000FD38(&qword_1003761A0, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD8C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_10018ECE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375540);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375540);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  v15 = sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_10018EE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375550);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375550);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375550);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Notification);
  v15 = sub_10000FD38(&qword_1003761D0, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDB90);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t sub_10018EFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375558);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  v10 = *(_QWORD *)(inited - 8);
  __chkstk_darwin(inited);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375558);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, inited) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375558);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
  v15 = sub_10000FD38(&qword_1003761E8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDCF8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, inited, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
}

uint64_t sub_10018F188(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t (*)(uint64_t, uint64_t))sub_10018F1B0) & 1;
}

BOOL sub_10018F1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  _BOOL8 result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  int v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t inited;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[24];
  _BYTE v108[24];
  _BYTE v109[24];
  _BYTE v110[8];
  _BYTE v111[8];
  _BYTE v112[8];
  _BYTE v113[8];
  _BYTE v114[8];
  _BYTE v115[8];
  _BYTE v116[8];

  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  v89 = *(_QWORD *)(inited - 8);
  __chkstk_darwin(inited);
  v85 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000039AC(&qword_10037C018);
  __chkstk_darwin(v88);
  v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000039AC(&qword_100375558);
  v8 = __chkstk_darwin(v7);
  v86 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v93 = (char *)&v84 - v10;
  v97 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v87 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1000039AC(&qword_10037C020);
  __chkstk_darwin(v94);
  v98 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_100375550);
  v14 = __chkstk_darwin(v13);
  v91 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v96 = (uint64_t)&v84 - v16;
  v104 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v92 = (uint64_t *)((char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = sub_1000039AC(&qword_10037C028);
  __chkstk_darwin(v101);
  v105 = (uint64_t)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000039AC(&qword_100375540);
  v20 = __chkstk_darwin(v19);
  v99 = (uint64_t *)((char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v103 = (uint64_t)&v84 - v22;
  v23 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v100 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000039AC(&qword_10037C030);
  __chkstk_darwin(v26);
  v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000039AC(&qword_100375548);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v34 = (char *)&v84 - v33;
  swift_beginAccess(a1 + 16, v116, 0, 0);
  v35 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v115, 0, 0);
  v36 = *(unsigned __int8 *)(a2 + 16);
  if (v35 == 18)
  {
    if (v36 != 18)
      return 0;
LABEL_6:
    v84 = v6;
    v106 = a2;
    v38 = a1;
    v39 = a1
        + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
    swift_beginAccess(v39, v114, 0, 0);
    sub_10000E660(v39, (uint64_t)v34, &qword_100375548);
    v40 = v106;
    v41 = v106
        + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
    swift_beginAccess(v106+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop, v113, 0, 0);
    v42 = (uint64_t)&v28[*(int *)(v26 + 48)];
    sub_10000E660((uint64_t)v34, (uint64_t)v28, &qword_100375548);
    sub_10000E660(v41, v42, &qword_100375548);
    v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v43((uint64_t)v28, 1, v23) == 1)
    {
      swift_retain(v38);
      swift_retain(v40);
      sub_100015704((uint64_t)v34, &qword_100375548);
      v44 = v43(v42, 1, v23);
      v45 = v38;
      if (v44 == 1)
      {
        sub_100015704((uint64_t)v28, &qword_100375548);
LABEL_13:
        v50 = v45
            + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
        swift_beginAccess(v45+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, v112, 0, 0);
        v51 = v103;
        sub_10000E660(v50, v103, &qword_100375540);
        v40 = v106;
        v52 = v106
            + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
        swift_beginAccess(v106+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, v111, 0, 0);
        v53 = v105;
        v54 = v105 + *(int *)(v101 + 48);
        sub_10000E660(v51, v105, &qword_100375540);
        sub_10000E660(v52, v54, &qword_100375540);
        v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
        v56 = v104;
        if (v55(v53, 1, v104) == 1)
        {
          sub_100015704(v51, &qword_100375540);
          if (v55(v54, 1, v56) == 1)
          {
            sub_100015704(v53, &qword_100375540);
            goto LABEL_25;
          }
          goto LABEL_18;
        }
        v57 = v99;
        sub_10000E660(v53, (uint64_t)v99, &qword_100375540);
        if (v55(v54, 1, v56) == 1)
        {
          sub_100015704(v51, &qword_100375540);
          sub_100004030((uint64_t)v57, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
LABEL_18:
          v46 = &qword_10037C028;
          v47 = v53;
          goto LABEL_19;
        }
        v59 = v92;
        sub_100003E08(v54, (uint64_t)v92, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
        v60 = sub_1001D496C(v57, v59);
        sub_100004030((uint64_t)v59, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
        sub_100015704(v51, &qword_100375540);
        sub_100004030((uint64_t)v57, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
        sub_100015704(v53, &qword_100375540);
        if ((v60 & 1) != 0)
        {
LABEL_25:
          v61 = v45
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
          swift_beginAccess(v45+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification, v110, 0, 0);
          v62 = v96;
          sub_10000E660(v61, v96, &qword_100375550);
          v63 = v40
              + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
          swift_beginAccess(v63, v109, 0, 0);
          v64 = v98;
          v65 = v98 + *(int *)(v94 + 48);
          sub_10000E660(v62, v98, &qword_100375550);
          sub_10000E660(v63, v65, &qword_100375550);
          v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
          v67 = v97;
          if (v66(v64, 1, v97) == 1)
          {
            sub_100015704(v62, &qword_100375550);
            v68 = v66(v65, 1, v67);
            v69 = (uint64_t)v84;
            v70 = (uint64_t)v93;
            if (v68 == 1)
            {
              sub_100015704(v64, &qword_100375550);
LABEL_33:
              v75 = v45
                  + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
              swift_beginAccess(v45+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, v108, 0, 0);
              sub_10000E660(v75, v70, &qword_100375558);
              v76 = v106;
              v77 = v106
                  + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
              swift_beginAccess(v106+ OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, v107, 0, 0);
              v78 = v69 + *(int *)(v88 + 48);
              sub_10000E660(v70, v69, &qword_100375558);
              sub_10000E660(v77, v78, &qword_100375558);
              v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
              v80 = inited;
              if (v79(v69, 1, inited) == 1)
              {
                swift_release(v45);
                swift_release(v76);
                sub_100015704(v70, &qword_100375558);
                if (v79(v78, 1, v80) == 1)
                {
                  sub_100015704(v69, &qword_100375558);
                  return 1;
                }
                goto LABEL_38;
              }
              v81 = v86;
              sub_10000E660(v69, v86, &qword_100375558);
              if (v79(v78, 1, v80) == 1)
              {
                swift_release(v45);
                swift_release(v106);
                sub_100015704(v70, &qword_100375558);
                sub_100004030(v81, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
LABEL_38:
                sub_100015704(v69, &qword_10037C018);
                return 0;
              }
              v82 = v85;
              sub_100003E08(v78, v85, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
              v83 = sub_1001C66CC(v81, v82);
              swift_release(v45);
              swift_release(v106);
              sub_100004030(v82, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
              sub_100015704(v70, &qword_100375558);
              sub_100004030(v81, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
              sub_100015704(v69, &qword_100375558);
              return (v83 & 1) != 0;
            }
          }
          else
          {
            v71 = v91;
            sub_10000E660(v64, v91, &qword_100375550);
            v72 = v66(v65, 1, v67);
            v69 = (uint64_t)v84;
            v70 = (uint64_t)v93;
            if (v72 != 1)
            {
              v73 = v87;
              sub_100003E08(v65, v87, type metadata accessor for Proto_Gnss_Emergency_Notification);
              v74 = sub_1001D0BF4(v71, v73);
              sub_100004030(v73, type metadata accessor for Proto_Gnss_Emergency_Notification);
              sub_100015704(v62, &qword_100375550);
              sub_100004030(v71, type metadata accessor for Proto_Gnss_Emergency_Notification);
              sub_100015704(v64, &qword_100375550);
              if ((v74 & 1) != 0)
                goto LABEL_33;
              goto LABEL_31;
            }
            sub_100015704(v62, &qword_100375550);
            sub_100004030(v71, type metadata accessor for Proto_Gnss_Emergency_Notification);
          }
          sub_100015704(v64, &qword_10037C020);
LABEL_31:
          swift_release(v45);
          v58 = v106;
          goto LABEL_21;
        }
LABEL_20:
        swift_release(v45);
        v58 = v40;
LABEL_21:
        swift_release(v58);
        return 0;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v28, (uint64_t)v32, &qword_100375548);
      if (v43(v42, 1, v23) != 1)
      {
        v48 = v100;
        sub_100003E08(v42, v100, type metadata accessor for Proto_Gnss_Emergency_QoP);
        v45 = v38;
        swift_retain(v38);
        swift_retain(v40);
        v49 = sub_1001D4B4C((uint64_t)v32, v48, type metadata accessor for Proto_Gnss_Emergency_QoP);
        sub_100004030(v48, type metadata accessor for Proto_Gnss_Emergency_QoP);
        sub_100015704((uint64_t)v34, &qword_100375548);
        sub_100004030((uint64_t)v32, type metadata accessor for Proto_Gnss_Emergency_QoP);
        sub_100015704((uint64_t)v28, &qword_100375548);
        if ((v49 & 1) == 0)
          goto LABEL_20;
        goto LABEL_13;
      }
      v45 = v38;
      swift_retain(v38);
      swift_retain(v40);
      sub_100015704((uint64_t)v34, &qword_100375548);
      sub_100004030((uint64_t)v32, type metadata accessor for Proto_Gnss_Emergency_QoP);
    }
    v46 = &qword_10037C030;
    v47 = (uint64_t)v28;
LABEL_19:
    sub_100015704(v47, v46);
    goto LABEL_20;
  }
  result = 0;
  if (v36 != 18 && v35 == v36)
    goto LABEL_6;
  return result;
}

Swift::Int sub_10018FDEC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Init, &qword_1003757B8, (uint64_t)&unk_1002DDF60);
}

uint64_t sub_10018FE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B09E8, &qword_1003B09F0, (uint64_t)sub_10018E1E4, a2);
}

uint64_t sub_10018FE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018E740(a1, a2, a3);
}

uint64_t sub_10018FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018E9F4(a1, a2, a3);
}

uint64_t sub_10018FE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BCA0, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDED8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10018FE9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09E0, (uint64_t)qword_100384868, (uint64_t)sub_10018DF9C, a1);
}

uint64_t sub_10018FEB8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376200, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDE60);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10018FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376200, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDE60);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10018FF48()
{
  return &unk_100356AF0;
}

unint64_t sub_10018FF54()
{
  return 0xD000000000000020;
}

uint64_t sub_10018FF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384880);
  sub_10000E6A4(v0, (uint64_t)qword_100384880);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002C3130;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "supl_port";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "supl_server";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "enable_msa";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "imsi";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "config";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "nsuuid";
  *((_QWORD *)v20 + 1) = 6;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "enable_lpp_rel13_wlan_meas";
  *((_QWORD *)v22 + 1) = 26;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "supports_lpp_rel13_wlan_meas_type_rssi";
  *((_QWORD *)v24 + 1) = 38;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "supports_lpp_rel13_location_source";
  *(_QWORD *)(v25 + 8) = 34;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_100190254()
{
  return sub_100008BD0(&qword_1003B09F8, (uint64_t)qword_100384880, (uint64_t)sub_10018FF70);
}

uint64_t sub_100190270@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B09F8, (uint64_t)qword_100384880, (uint64_t)sub_10018FF70, a1);
}

uint64_t sub_10019028C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_16;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 24);
          goto LABEL_11;
        case 3:
          v13 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 28);
          goto LABEL_15;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 32);
          goto LABEL_11;
        case 5:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 36);
          v15 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
          v16 = sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v14, v15, v16, a2, a3);
          goto LABEL_16;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40);
LABEL_11:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + v12, a2, a3);
          goto LABEL_16;
        case 7:
          v13 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 44);
          goto LABEL_15;
        case 8:
          v13 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 48);
          goto LABEL_15;
        case 9:
          v13 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 52);
LABEL_15:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v13, a2, a3);
LABEL_16:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019044C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (_QWORD *)(v5 + v10[6]);
    v13 = v12[1];
    if (v13)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v12, v13, 2, a2, a3);
    v14 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v14 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 3, a2, a3);
    v15 = (_QWORD *)(v5 + v10[8]);
    v16 = v15[1];
    if (v16)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v15, v16, 4, a2, a3);
    sub_100190628(v5, a1, a2, a3);
    sub_10019079C(v5, a1, a2, a3);
    sub_1000E4E8C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
    sub_100190810(v5, a1, a2, a3);
    sub_1001BF64C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100190628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375560);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  sub_10000E660(a1 + *(int *)(v13 + 36), (uint64_t)v8, &qword_100375560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375560);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  v15 = sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_10019079C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v8 = (_QWORD *)(a1 + *(int *)(result + 40));
  v9 = v8[1];
  if (v9)
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v8, v9, 6, a3, a4);
  return result;
}

uint64_t sub_100190810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 48));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 8, a3, a4);
  return result;
}

Swift::Int sub_100190888()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SuplContext, &qword_1003757C0, (uint64_t)&unk_1002DE0C8);
}

uint64_t sub_1001908A4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  v8 = (_QWORD *)(a2 + v7);
  *v8 = 0;
  v8[1] = 0;
  v9 = a2 + a1[9];
  v10 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v12 = a1[11];
  v13 = (_QWORD *)(a2 + a1[10]);
  *v13 = 0;
  v13[1] = 0;
  *(_BYTE *)(a2 + v12) = 2;
  v14 = a1[13];
  *(_BYTE *)(a2 + a1[12]) = 2;
  *(_BYTE *)(a2 + v14) = 2;
  return result;
}

uint64_t sub_100190948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019028C(a1, a2, a3);
}

uint64_t sub_10019095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019044C(a1, a2, a3);
}

uint64_t sub_100190970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC98, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DE040);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001909C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B09F8, (uint64_t)qword_100384880, (uint64_t)sub_10018FF70, a1);
}

uint64_t sub_1001909DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376218, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DDFC8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100190A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376218, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DDFC8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100190A6C()
{
  return &unk_100356B00;
}

unint64_t sub_100190A78()
{
  return 0xD000000000000022;
}

uint64_t sub_100190A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v41;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384898);
  sub_10000E6A4(v0, (uint64_t)qword_100384898);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v41 = swift_allocObject(v1, v6 + 16 * v4, v5 | 7);
  *(_OWORD *)(v41 + 16) = xmmword_1002C40F0;
  v7 = v41 + v6;
  v8 = v41 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v41 + v6) = 1;
  *(_QWORD *)v8 = "session_id";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "pos_method";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "status";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "end_cause";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "horz_accuracy_requested";
  *((_QWORD *)v18 + 1) = 23;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "lat";
  *((_QWORD *)v20 + 1) = 3;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "lon";
  *((_QWORD *)v22 + 1) = 3;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "alt";
  *((_QWORD *)v24 + 1) = 3;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "unc_semi_major";
  *(_QWORD *)(v25 + 8) = 14;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "unc_semi_minor";
  *((_QWORD *)v27 + 1) = 14;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "unc_alt";
  *((_QWORD *)v29 + 1) = 7;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "eph_provided";
  *((_QWORD *)v31 + 1) = 12;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "reference_time_provided";
  *((_QWORD *)v33 + 1) = 23;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "reference_location_provided";
  *((_QWORD *)v35 + 1) = 27;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "nw_ref_location";
  *((_QWORD *)v37 + 1) = 15;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "nw_ref_time";
  *((_QWORD *)v39 + 1) = 11;
  v39[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v41);
}

uint64_t sub_100190EDC()
{
  return sub_100008BD0(&qword_1003B0A00, (uint64_t)qword_100384898, (uint64_t)sub_100190A94);
}

uint64_t sub_100190EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A00, (uint64_t)qword_100384898, (uint64_t)sub_100190A94, a1);
}

uint64_t sub_100190F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_DWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 20) = 1;
  *(_WORD *)(v1 + 21) = 8466;
  *(_BYTE *)(v1 + 23) = 24;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  *(_QWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 96) = 1;
  *(_QWORD *)(v1 + 104) = 0;
  *(_BYTE *)(v1 + 112) = 1;
  *(_QWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  *(_WORD *)(v1 + 129) = 514;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  *(_BYTE *)(v1 + 131) = 2;
  v3 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  v5 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  qword_1003B0A10 = v1;
  return result;
}

uint64_t sub_100191010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[24];
  _BYTE v58[24];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[24];
  _BYTE v82[24];
  _BYTE v83[24];
  _BYTE v84[24];
  _BYTE v85[24];
  _BYTE v86[24];
  _BYTE v87[32];

  v3 = sub_1000039AC(&qword_100375570);
  __chkstk_darwin(v3);
  v56 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000039AC(&qword_100375568);
  __chkstk_darwin(v5);
  v55 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 21) = 8466;
  *(_BYTE *)(v1 + 23) = 24;
  *(_BYTE *)(v1 + 20) = 1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  v45 = (_QWORD *)(v1 + 56);
  v44 = v1 + 22;
  *(_BYTE *)(v1 + 48) = 1;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 72) = 0;
  v46 = (_QWORD *)(v1 + 72);
  *(_BYTE *)(v1 + 80) = 1;
  *(_QWORD *)(v1 + 88) = 0;
  v47 = (_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 104) = 0;
  v48 = (_QWORD *)(v1 + 104);
  *(_BYTE *)(v1 + 96) = 1;
  *(_BYTE *)(v1 + 112) = 1;
  *(_BYTE *)(v1 + 128) = 1;
  *(_WORD *)(v1 + 129) = 514;
  *(_BYTE *)(v1 + 131) = 2;
  v50 = (_BYTE *)(v1 + 129);
  v51 = v1 + 130;
  v7 = v1
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  v52 = (_BYTE *)(v1 + 131);
  v53 = v1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  *(_QWORD *)(v1 + 120) = 0;
  v49 = (_QWORD *)(v1 + 120);
  v8 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  v54 = v1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  v10 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_beginAccess(a1 + 16, v87, 0, 0);
  LODWORD(v9) = *(_DWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 20);
  swift_beginAccess(v1 + 16, v86, 1, 0);
  *(_DWORD *)(v1 + 16) = v9;
  *(_BYTE *)(v1 + 20) = v11;
  swift_beginAccess(a1 + 21, v85, 0, 0);
  v12 = *(_BYTE *)(a1 + 21);
  swift_beginAccess(v1 + 21, v84, 1, 0);
  *(_BYTE *)(v1 + 21) = v12;
  swift_beginAccess(a1 + 22, v83, 0, 0);
  v13 = *(_BYTE *)(a1 + 22);
  swift_beginAccess(v44, v82, 1, 0);
  *(_BYTE *)(v1 + 22) = v13;
  swift_beginAccess(a1 + 23, v81, 0, 0);
  v14 = *(_BYTE *)(a1 + 23);
  swift_beginAccess(v1 + 23, &v80, 1, 0);
  *(_BYTE *)(v1 + 23) = v14;
  swift_beginAccess(a1 + 24, &v79, 0, 0);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_BYTE *)(a1 + 32);
  swift_beginAccess(v1 + 24, &v78, 1, 0);
  *(_QWORD *)(v1 + 24) = v15;
  *(_BYTE *)(v1 + 32) = v16;
  swift_beginAccess(a1 + 40, &v77, 0, 0);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_BYTE *)(a1 + 48);
  swift_beginAccess(v1 + 40, &v76, 1, 0);
  *(_QWORD *)(v1 + 40) = v17;
  *(_BYTE *)(v1 + 48) = v18;
  swift_beginAccess(a1 + 56, &v75, 0, 0);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  v21 = v45;
  swift_beginAccess(v45, &v74, 1, 0);
  *v21 = v19;
  *(_BYTE *)(v1 + 64) = v20;
  swift_beginAccess(a1 + 72, &v73, 0, 0);
  v22 = *(_QWORD *)(a1 + 72);
  v23 = *(_BYTE *)(a1 + 80);
  v24 = v46;
  swift_beginAccess(v46, &v72, 1, 0);
  *v24 = v22;
  *(_BYTE *)(v1 + 80) = v23;
  swift_beginAccess(a1 + 88, &v71, 0, 0);
  v25 = *(_QWORD *)(a1 + 88);
  v26 = *(_BYTE *)(a1 + 96);
  v27 = v47;
  swift_beginAccess(v47, &v70, 1, 0);
  *v27 = v25;
  *(_BYTE *)(v1 + 96) = v26;
  swift_beginAccess(a1 + 104, &v69, 0, 0);
  v28 = *(_QWORD *)(a1 + 104);
  v29 = *(_BYTE *)(a1 + 112);
  v30 = v48;
  swift_beginAccess(v48, &v68, 1, 0);
  *v30 = v28;
  *(_BYTE *)(v1 + 112) = v29;
  swift_beginAccess(a1 + 120, &v67, 0, 0);
  v31 = *(_QWORD *)(a1 + 120);
  v32 = *(_BYTE *)(a1 + 128);
  v33 = v49;
  swift_beginAccess(v49, &v66, 1, 0);
  *v33 = v31;
  *(_BYTE *)(v1 + 128) = v32;
  swift_beginAccess(a1 + 129, &v65, 0, 0);
  LOBYTE(v31) = *(_BYTE *)(a1 + 129);
  v34 = v50;
  swift_beginAccess(v50, &v64, 1, 0);
  *v34 = v31;
  swift_beginAccess(a1 + 130, &v63, 0, 0);
  LOBYTE(v31) = *(_BYTE *)(a1 + 130);
  swift_beginAccess(v51, &v62, 1, 0);
  *(_BYTE *)(v1 + 130) = v31;
  swift_beginAccess(a1 + 131, &v61, 0, 0);
  LOBYTE(v31) = *(_BYTE *)(a1 + 131);
  v35 = v52;
  swift_beginAccess(v52, &v60, 1, 0);
  *v35 = v31;
  v36 = a1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, &v59, 0, 0);
  v37 = v55;
  sub_10000E660(v36, v55, &qword_100375568);
  v38 = v53;
  swift_beginAccess(v53, v58, 33, 0);
  sub_10000E574(v37, v38, &qword_100375568);
  swift_endAccess(v58);
  v39 = a1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, v58, 0, 0);
  v40 = v56;
  sub_10000E660(v39, v56, &qword_100375570);
  swift_release(a1);
  v41 = v54;
  swift_beginAccess(v54, v57, 33, 0);
  sub_10000E574(v40, v41, &qword_100375570);
  swift_endAccess(v57);
  return v1;
}

uint64_t sub_1001915D0()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, &qword_100375568);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, &qword_100375570);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100191620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  ValueMetadata *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_100191010(v13);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v32 = v15 + 131;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v31, 33, 0);
          v19 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v15 + 16, a2, a3);
          goto LABEL_28;
        case 2:
          swift_beginAccess(v15 + 21, v31, 33, 0);
          v20 = sub_10020C90C();
          v21 = v15 + 21;
          v22 = &type metadata for Proto_Gnss_Emergency_PositionMethod;
          goto LABEL_12;
        case 3:
          swift_beginAccess(v15 + 22, v31, 33, 0);
          v20 = sub_10020C774();
          v21 = v15 + 22;
          v22 = &type metadata for Proto_Gnss_Emergency_Status;
          goto LABEL_12;
        case 4:
          swift_beginAccess(v15 + 23, v31, 33, 0);
          v20 = sub_10020C730();
          v21 = v15 + 23;
          v22 = &type metadata for Proto_Gnss_Emergency_EndCause;
LABEL_12:
          v19 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v21, v22, v20, a2, a3);
          goto LABEL_28;
        case 5:
          v23 = v15 + 24;
          goto LABEL_20;
        case 6:
          v23 = v15 + 40;
          goto LABEL_20;
        case 7:
          v23 = v15 + 56;
          goto LABEL_20;
        case 8:
          v23 = v15 + 72;
          goto LABEL_20;
        case 9:
          v23 = v15 + 88;
          goto LABEL_20;
        case 10:
          v23 = v15 + 104;
          goto LABEL_20;
        case 11:
          v23 = v15 + 120;
LABEL_20:
          swift_beginAccess(v23, v31, 33, 0);
          v19 = v5;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v23, a2, a3);
          goto LABEL_28;
        case 12:
          v24 = v15 + 129;
          goto LABEL_24;
        case 13:
          v24 = v15 + 130;
          goto LABEL_24;
        case 14:
          v24 = v32;
LABEL_24:
          swift_beginAccess(v24, v31, 33, 0);
          v19 = v5;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v24, a2, a3);
          goto LABEL_28;
        case 15:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, v31, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
          v27 = (unint64_t *)&unk_100376898;
          v28 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation;
          v29 = &unk_1002E4508;
          goto LABEL_27;
        case 16:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, v31, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
          v27 = (unint64_t *)&unk_1003768B0;
          v28 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime;
          v29 = &unk_1002E4670;
LABEL_27:
          v30 = sub_10000FD38(v27, v28, (uint64_t)v29);
          v19 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v25, v26, v30, a2, a3);
LABEL_28:
          v5 = v19;
          swift_endAccess(v31);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001919F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v17, 0, 0);
  if ((*(_BYTE *)(v9 + 20) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 16), 1, a2, a3);
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 21, v18, 0, 0);
  if (*(_BYTE *)(v9 + 21) != 18)
  {
    v30[0] = *(_BYTE *)(v9 + 21);
    v11 = sub_10020C90C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v30, 2, &type metadata for Proto_Gnss_Emergency_PositionMethod, v11, a2, a3);
  }
  swift_beginAccess(v9 + 22, v19, 0, 0);
  if (*(_BYTE *)(v9 + 22) != 33)
  {
    v30[0] = *(_BYTE *)(v9 + 22);
    v12 = sub_10020C774();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v30, 3, &type metadata for Proto_Gnss_Emergency_Status, v12, a2, a3);
  }
  swift_beginAccess(v9 + 23, v20, 0, 0);
  if (*(_BYTE *)(v9 + 23) != 24)
  {
    v30[0] = *(_BYTE *)(v9 + 23);
    v13 = sub_10020C730();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v30, 4, &type metadata for Proto_Gnss_Emergency_EndCause, v13, a2, a3);
  }
  swift_beginAccess(v9 + 24, v30, 0, 0);
  if ((*(_BYTE *)(v9 + 32) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(5, a2, a3, *(double *)(v9 + 24));
  swift_beginAccess(v9 + 40, v29, 0, 0);
  if ((*(_BYTE *)(v9 + 48) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(6, a2, a3, *(double *)(v9 + 40));
  swift_beginAccess(v9 + 56, v28, 0, 0);
  if ((*(_BYTE *)(v9 + 64) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(7, a2, a3, *(double *)(v9 + 56));
  swift_beginAccess(v9 + 72, v27, 0, 0);
  if ((*(_BYTE *)(v9 + 80) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(8, a2, a3, *(double *)(v9 + 72));
  swift_beginAccess(v9 + 88, v26, 0, 0);
  if ((*(_BYTE *)(v9 + 96) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(9, a2, a3, *(double *)(v9 + 88));
  swift_beginAccess(v9 + 104, v25, 0, 0);
  if ((*(_BYTE *)(v9 + 112) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(10, a2, a3, *(double *)(v9 + 104));
  swift_beginAccess(v9 + 120, v24, 0, 0);
  if ((*(_BYTE *)(v9 + 128) & 1) == 0)
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(11, a2, a3, *(double *)(v9 + 120));
  swift_beginAccess(v9 + 129, v23, 0, 0);
  v14 = *(unsigned __int8 *)(v9 + 129);
  if (v14 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 12, a2, a3);
  swift_beginAccess(v9 + 130, v22, 0, 0);
  v15 = *(unsigned __int8 *)(v9 + 130);
  if (v15 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 13, a2, a3);
  swift_beginAccess(v9 + 131, v21, 0, 0);
  v16 = *(unsigned __int8 *)(v9 + 131);
  if (v16 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v16 & 1, 14, a2, a3);
  sub_100191E84(v9, a1, a2, a3);
  sub_100192010(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100191E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375568);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375568);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375568);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  v15 = sub_10000FD38(&qword_100376898, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4508);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 15, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_100192010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375570);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375570);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
  v15 = sub_10000FD38(&qword_1003768B0, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4670);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 16, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_10019219C(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t (*)(uint64_t, uint64_t))sub_1001921C4) & 1;
}

BOOL sub_1001921C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  char v21;
  char v22;
  int v23;
  int v24;
  _BOOL8 result;
  int v26;
  int v27;
  int v28;
  int v29;
  double v30;
  char v31;
  char v32;
  double v33;
  char v34;
  char v35;
  double v36;
  char v37;
  char v38;
  double v39;
  char v40;
  char v41;
  double v42;
  char v43;
  char v44;
  double v45;
  char v46;
  char v47;
  double v48;
  char v49;
  char v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[24];
  _BYTE v111[24];
  _BYTE v112[24];
  _BYTE v113[24];
  _BYTE v114[24];
  _BYTE v115[32];

  v80 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v74 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1000039AC(&qword_10037C008);
  __chkstk_darwin(v77);
  v81 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375570);
  v7 = __chkstk_darwin(v6);
  v76 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v79 = (uint64_t)&v73 - v9;
  v82 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v10 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v75 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_10037C010);
  __chkstk_darwin(v12);
  v83 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375568);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v73 - v18;
  swift_beginAccess(a1 + 16, v115, 0, 0);
  v20 = *(_DWORD *)(a1 + 16);
  v21 = *(_BYTE *)(a1 + 20);
  swift_beginAccess(a2 + 16, v114, 0, 0);
  v22 = *(_BYTE *)(a2 + 20);
  if ((v21 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else
  {
    if (v20 != *(_DWORD *)(a2 + 16))
      v22 = 1;
    if ((v22 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 21, v113, 0, 0);
  v23 = *(unsigned __int8 *)(a1 + 21);
  swift_beginAccess(a2 + 21, v112, 0, 0);
  v24 = *(unsigned __int8 *)(a2 + 21);
  if (v23 == 18)
  {
    if (v24 != 18)
      return 0;
  }
  else
  {
    result = 0;
    if (v24 == 18 || v23 != v24)
      return result;
  }
  swift_beginAccess(a1 + 22, v111, 0, 0);
  v26 = *(unsigned __int8 *)(a1 + 22);
  swift_beginAccess(a2 + 22, v110, 0, 0);
  v27 = *(unsigned __int8 *)(a2 + 22);
  if (v26 == 33)
  {
    if (v27 != 33)
      return 0;
  }
  else
  {
    result = 0;
    if (v27 == 33 || v26 != v27)
      return result;
  }
  swift_beginAccess(a1 + 23, &v109, 0, 0);
  v28 = *(unsigned __int8 *)(a1 + 23);
  swift_beginAccess(a2 + 23, &v108, 0, 0);
  v29 = *(unsigned __int8 *)(a2 + 23);
  if (v28 == 24)
  {
    if (v29 != 24)
      return 0;
LABEL_22:
    swift_beginAccess(a1 + 24, &v107, 0, 0);
    v30 = *(double *)(a1 + 24);
    v31 = *(_BYTE *)(a1 + 32);
    swift_beginAccess(a2 + 24, &v106, 0, 0);
    v32 = *(_BYTE *)(a2 + 32);
    if ((v31 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 32))
        return 0;
    }
    else
    {
      if (v30 != *(double *)(a2 + 24))
        v32 = 1;
      if ((v32 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 40, &v105, 0, 0);
    v33 = *(double *)(a1 + 40);
    v34 = *(_BYTE *)(a1 + 48);
    swift_beginAccess(a2 + 40, &v104, 0, 0);
    v35 = *(_BYTE *)(a2 + 48);
    if ((v34 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 48))
        return 0;
    }
    else
    {
      if (v33 != *(double *)(a2 + 40))
        v35 = 1;
      if ((v35 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 56, &v103, 0, 0);
    v36 = *(double *)(a1 + 56);
    v37 = *(_BYTE *)(a1 + 64);
    swift_beginAccess(a2 + 56, &v102, 0, 0);
    v38 = *(_BYTE *)(a2 + 64);
    if ((v37 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 64))
        return 0;
    }
    else
    {
      if (v36 != *(double *)(a2 + 56))
        v38 = 1;
      if ((v38 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 72, &v101, 0, 0);
    v39 = *(double *)(a1 + 72);
    v40 = *(_BYTE *)(a1 + 80);
    swift_beginAccess(a2 + 72, &v100, 0, 0);
    v41 = *(_BYTE *)(a2 + 80);
    if ((v40 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 80))
        return 0;
    }
    else
    {
      if (v39 != *(double *)(a2 + 72))
        v41 = 1;
      if ((v41 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 88, &v99, 0, 0);
    v42 = *(double *)(a1 + 88);
    v43 = *(_BYTE *)(a1 + 96);
    swift_beginAccess(a2 + 88, &v98, 0, 0);
    v44 = *(_BYTE *)(a2 + 96);
    if ((v43 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 96))
        return 0;
    }
    else
    {
      if (v42 != *(double *)(a2 + 88))
        v44 = 1;
      if ((v44 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 104, &v97, 0, 0);
    v45 = *(double *)(a1 + 104);
    v46 = *(_BYTE *)(a1 + 112);
    swift_beginAccess(a2 + 104, &v96, 0, 0);
    v47 = *(_BYTE *)(a2 + 112);
    if ((v46 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 112))
        return 0;
    }
    else
    {
      if (v45 != *(double *)(a2 + 104))
        v47 = 1;
      if ((v47 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 120, &v95, 0, 0);
    v48 = *(double *)(a1 + 120);
    v49 = *(_BYTE *)(a1 + 128);
    swift_beginAccess(a2 + 120, &v94, 0, 0);
    v50 = *(_BYTE *)(a2 + 128);
    if ((v49 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 128))
        return 0;
    }
    else
    {
      if (v48 != *(double *)(a2 + 120))
        v50 = 1;
      if ((v50 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 129, &v93, 0, 0);
    v51 = *(unsigned __int8 *)(a1 + 129);
    swift_beginAccess(a2 + 129, &v92, 0, 0);
    v52 = *(unsigned __int8 *)(a2 + 129);
    if (v51 == 2)
    {
      if (v52 != 2)
        return 0;
    }
    else if (v52 == 2 || ((((v52 & 1) == 0) ^ v51) & 1) == 0)
    {
      return 0;
    }
    swift_beginAccess(a1 + 130, &v91, 0, 0);
    v53 = *(unsigned __int8 *)(a1 + 130);
    swift_beginAccess(a2 + 130, &v90, 0, 0);
    v54 = *(unsigned __int8 *)(a2 + 130);
    if (v53 == 2)
    {
      if (v54 != 2)
        return 0;
    }
    else if (v54 == 2 || ((((v54 & 1) == 0) ^ v53) & 1) == 0)
    {
      return 0;
    }
    swift_beginAccess(a1 + 131, &v89, 0, 0);
    v55 = *(unsigned __int8 *)(a1 + 131);
    swift_beginAccess(a2 + 131, &v88, 0, 0);
    v56 = *(unsigned __int8 *)(a2 + 131);
    if (v55 == 2)
    {
      if (v56 != 2)
        return 0;
    }
    else if (v56 == 2 || ((((v56 & 1) == 0) ^ v55) & 1) == 0)
    {
      return 0;
    }
    v57 = a1
        + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
    swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, &v87, 0, 0);
    sub_10000E660(v57, (uint64_t)v19, &qword_100375568);
    v58 = a2
        + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
    swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, &v86, 0, 0);
    v59 = v83;
    v60 = v83 + *(int *)(v12 + 48);
    sub_10000E660((uint64_t)v19, v83, &qword_100375568);
    sub_10000E660(v58, v60, &qword_100375568);
    v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (v61(v59, 1, v82) == 1)
    {
      swift_retain(a1);
      swift_retain(a2);
      sub_100015704((uint64_t)v19, &qword_100375568);
      if (v61(v60, 1, v82) == 1)
      {
        sub_100015704(v83, &qword_100375568);
LABEL_87:
        v64 = a1
            + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
        swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, &v85, 0, 0);
        v65 = v79;
        sub_10000E660(v64, v79, &qword_100375570);
        v66 = a2
            + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
        swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, &v84, 0, 0);
        v67 = v81;
        v68 = v81 + *(int *)(v77 + 48);
        sub_10000E660(v65, v81, &qword_100375570);
        sub_10000E660(v66, v68, &qword_100375570);
        v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
        if (v69(v67, 1, v80) == 1)
        {
          swift_release(a1);
          swift_release(a2);
          sub_100015704(v79, &qword_100375570);
          if (v69(v68, 1, v80) == 1)
          {
            sub_100015704(v81, &qword_100375570);
            return 1;
          }
          goto LABEL_92;
        }
        sub_10000E660(v81, v76, &qword_100375570);
        if (v69(v68, 1, v80) == 1)
        {
          swift_release(a1);
          swift_release(a2);
          sub_100015704(v79, &qword_100375570);
          sub_100004030(v76, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
LABEL_92:
          sub_100015704(v81, &qword_10037C008);
          return 0;
        }
        v70 = v74;
        sub_100003E08(v68, v74, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
        v71 = v76;
        v72 = sub_1001C7550(v76, v70);
        swift_release(a1);
        swift_release(a2);
        sub_100004030(v70, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
        sub_100015704(v79, &qword_100375570);
        sub_100004030(v71, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
        sub_100015704(v81, &qword_100375570);
        return (v72 & 1) != 0;
      }
    }
    else
    {
      sub_10000E660(v83, (uint64_t)v17, &qword_100375568);
      if (v61(v60, 1, v82) != 1)
      {
        v62 = v75;
        sub_100003E08(v60, v75, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
        swift_retain(a1);
        swift_retain(a2);
        v63 = sub_1001CEB0C((uint64_t)v17, v62);
        sub_100004030(v62, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
        sub_100015704((uint64_t)v19, &qword_100375568);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
        sub_100015704(v83, &qword_100375568);
        if ((v63 & 1) != 0)
          goto LABEL_87;
LABEL_85:
        swift_release(a1);
        swift_release(a2);
        return 0;
      }
      swift_retain(a1);
      swift_retain(a2);
      sub_100015704((uint64_t)v19, &qword_100375568);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
    }
    sub_100015704(v83, &qword_10037C010);
    goto LABEL_85;
  }
  result = 0;
  if (v29 != 24 && v28 == v29)
    goto LABEL_22;
  return result;
}

Swift::Int sub_100192C48()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SessionStatus, &qword_1003757C8, (uint64_t)&unk_1002DE230);
}

uint64_t sub_100192C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0A08, &qword_1003B0A10, (uint64_t)sub_100190F14, a2);
}

uint64_t sub_100192C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100191620(a1, a2, a3);
}

uint64_t sub_100192C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001919F0(a1, a2, a3);
}

uint64_t sub_100192CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC90, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE1A8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100192CF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A00, (uint64_t)qword_100384898, (uint64_t)sub_100190A94, a1);
}

uint64_t sub_100192D14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376230, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE130);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100192D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376230, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE130);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100192DA4()
{
  return &unk_100356B10;
}

unint64_t sub_100192DB0()
{
  return 0xD000000000000023;
}

uint64_t sub_100192DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003848B0);
  sub_10000E6A4(v0, (uint64_t)qword_1003848B0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ms_part";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "ls_part";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100192F20()
{
  return sub_100008BD0(&qword_1003B0A18, (uint64_t)qword_1003848B0, (uint64_t)sub_100192DCC);
}

uint64_t sub_100192F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A18, (uint64_t)qword_1003848B0, (uint64_t)sub_100192DCC, a1);
}

uint64_t sub_100192F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_100192F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_100192FA0(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime) & 1;
}

Swift::Int sub_100192FC0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, &qword_1003757D0, (uint64_t)&unk_1002DE398);
}

uint64_t sub_100192FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC88, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE310);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100193030@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A18, (uint64_t)qword_1003848B0, (uint64_t)sub_100192DCC, a1);
}

uint64_t sub_10019304C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019308C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001930DC()
{
  return &unk_100356B20;
}

unint64_t sub_1001930E8()
{
  return 0xD000000000000025;
}

uint64_t sub_100193104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003848C8);
  sub_10000E6A4(v0, (uint64_t)qword_1003848C8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "utran_gps_timing_cell_frames";
  *(_QWORD *)(v9 + 8) = 28;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ref_cell_sfn";
  *(_QWORD *)(v13 + 8) = 12;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ref_cell_psc";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "round_trip_time";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "modem_state";
  *(_QWORD *)(v18 + 8) = 11;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019330C()
{
  return sub_100008BD0(&qword_1003B0A20, (uint64_t)qword_1003848C8, (uint64_t)sub_100193104);
}

uint64_t sub_100193328@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A20, (uint64_t)qword_1003848C8, (uint64_t)sub_100193104, a1);
}

uint64_t sub_100193344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 20);
          v13 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
          v14 = sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v12, v13, v14, a2, a3);
          goto LABEL_6;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 24);
          goto LABEL_5;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 28);
          goto LABEL_5;
        case 4:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 32);
LABEL_5:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 5:
          v15 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 36);
          v16 = sub_10020C598();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15, &type metadata for Proto_Gnss_Emergency_ClsModemState, v16, a2, a3);
LABEL_6:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001934C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unint64_t v14;
  char v15;

  v5 = v3;
  result = sub_100193624(v5, a1, a2, a3);
  if (!v4)
  {
    v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v11 = (unsigned int *)(v5 + v10[6]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v5 + v10[7]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v5 + v10[8]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    if (*(_BYTE *)(v5 + v10[9]) != 5)
    {
      v15 = *(_BYTE *)(v5 + v10[9]);
      v14 = sub_10020C598();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v15, 5, &type metadata for Proto_Gnss_Emergency_ClsModemState, v14, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100193624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375578);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100375578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375578);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  v15 = sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

Swift::Int sub_10019379C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, &qword_1003757D8, (uint64_t)&unk_1002DE500);
}

uint64_t sub_1001937B8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  v8 = a2 + a1[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[9];
  v11 = a2 + a1[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  *(_BYTE *)(a2 + v10) = 5;
  return result;
}

uint64_t sub_100193848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100193344(a1, a2, a3);
}

uint64_t sub_10019385C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001934C4(a1, a2, a3);
}

uint64_t sub_100193870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC80, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE478);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001938C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A20, (uint64_t)qword_1003848C8, (uint64_t)sub_100193104, a1);
}

uint64_t sub_1001938DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376260, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE400);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376260, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE400);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100193970()
{
  return &unk_100356B30;
}

unint64_t sub_10019397C()
{
  return 0xD000000000000019;
}

uint64_t sub_100193998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003848E0);
  sub_10000E6A4(v0, (uint64_t)qword_1003848E0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "mcc";
  *(_QWORD *)(v9 + 8) = 3;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "mnc";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "three_digit_mnc";
  *(_QWORD *)(v14 + 8) = 15;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100193B30()
{
  return sub_100008BD0(&qword_1003B0A28, (uint64_t)qword_1003848E0, (uint64_t)sub_100193998);
}

uint64_t sub_100193B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A28, (uint64_t)qword_1003848E0, (uint64_t)sub_100193998, a1);
}

uint64_t sub_100193B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001971A4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_100193B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197288(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_100193BA0(uint64_t a1, uint64_t a2)
{
  return sub_1001D47B8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_Plmn) & 1;
}

Swift::Int sub_100193BC0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Plmn, &qword_1003757E0, (uint64_t)&unk_1002DE668);
}

uint64_t sub_100193BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC78, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE5E0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100193C30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A28, (uint64_t)qword_1003848E0, (uint64_t)sub_100193998, a1);
}

uint64_t sub_100193C4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100193C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100193CDC()
{
  return &unk_100356B40;
}

unint64_t sub_100193CE8()
{
  return 0xD000000000000020;
}

uint64_t sub_100193D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003848F8);
  sub_10000E6A4(v0, (uint64_t)qword_1003848F8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "session_protocol";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "pos_protocol";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "session_id";
  *(_QWORD *)(v14 + 8) = 10;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100193E98()
{
  return sub_100008BD0(&qword_1003B0A30, (uint64_t)qword_1003848F8, (uint64_t)sub_100193D04);
}

uint64_t sub_100193EB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A30, (uint64_t)qword_1003848F8, (uint64_t)sub_100193D04, a1);
}

uint64_t sub_100193ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  ValueMetadata *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      switch(result)
      {
        case 3:
          v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v9 + 28), a2, a3);
          goto LABEL_12;
        case 2:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 24);
          v11 = sub_10020C510();
          v12 = v14;
          v13 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
          break;
        case 1:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 20);
          v11 = sub_10020C554();
          v12 = v10;
          v13 = &type metadata for Proto_Gnss_Emergency_SessionProtocol;
          break;
        default:
          goto LABEL_12;
      }
      dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, v13, v11, a2, a3);
LABEL_12:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100193FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  char v14;
  char v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v10 = result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 6)
  {
    v14 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v11 = sub_10020C554();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v14, 1, &type metadata for Proto_Gnss_Emergency_SessionProtocol, v11, a2, a3);
  }
  if (!v4)
  {
    if (*(_BYTE *)(v5 + *(int *)(v10 + 24)) != 7)
    {
      v15 = *(_BYTE *)(v5 + *(int *)(v10 + 24));
      v12 = sub_10020C510();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v15, 2, &type metadata for Proto_Gnss_Emergency_PosProtocol, v12, a2, a3);
    }
    v13 = (unsigned int *)(v5 + *(int *)(v10 + 28));
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_100194128()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_SessionInfo, &qword_1003757E8, (uint64_t)&unk_1002DE7D0);
}

uint64_t sub_100194144@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 6;
  *(_BYTE *)(a2 + v5) = 7;
  v6 = a2 + a1[7];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_100194190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100193ED0(a1, a2, a3);
}

uint64_t sub_1001941A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100193FFC(a1, a2, a3);
}

uint64_t sub_1001941B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC70, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE748);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100194208@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A30, (uint64_t)qword_1003848F8, (uint64_t)sub_100193D04, a1);
}

uint64_t sub_100194224(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100194264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001942B4()
{
  return &unk_100356B50;
}

unint64_t sub_1001942C0()
{
  return 0xD000000000000024;
}

uint64_t sub_1001942DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384910);
  sub_10000E6A4(v0, (uint64_t)qword_100384910);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v42 = swift_allocObject(v1, v6 + 17 * v4, v5 | 7);
  *(_OWORD *)(v42 + 16) = xmmword_1002CAB80;
  v7 = v42 + v6;
  v8 = v42 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v42 + v6) = 1;
  *(_QWORD *)v8 = "interval";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "method";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "response_time";
  *((_QWORD *)v14 + 1) = 13;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "horizontal_accuracy";
  *((_QWORD *)v16 + 1) = 19;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "velocity_requested";
  *((_QWORD *)v18 + 1) = 18;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "horizontal_confidence";
  *((_QWORD *)v20 + 1) = 21;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "vertical_accuracy";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "vertical_confidence";
  *((_QWORD *)v24 + 1) = 19;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "vertical_requested";
  *(_QWORD *)(v25 + 8) = 18;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "assistance_availability";
  *((_QWORD *)v27 + 1) = 23;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "requested_gnss";
  *((_QWORD *)v29 + 1) = 14;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "loc_cordinate_type_allowed";
  *((_QWORD *)v31 + 1) = 26;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "velocity_types";
  *((_QWORD *)v33 + 1) = 14;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "report_amount";
  *((_QWORD *)v35 + 1) = 13;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "pos_protocol";
  *((_QWORD *)v37 + 1) = 12;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "session_id";
  *((_QWORD *)v39 + 1) = 10;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 17;
  *(_QWORD *)v40 = "horizontal_accuracy_meters";
  *(_QWORD *)(v40 + 8) = 26;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v42);
}

uint64_t sub_100194760()
{
  return sub_100008BD0(&qword_1003B0A38, (uint64_t)qword_100384910, (uint64_t)sub_1001942DC);
}

uint64_t sub_10019477C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A38, (uint64_t)qword_100384910, (uint64_t)sub_1001942DC, a1);
}

uint64_t sub_100194798()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
  result = swift_allocObject(v0, 133, 7);
  *(_DWORD *)(result + 16) = 0;
  *(_WORD *)(result + 20) = 1281;
  *(_DWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 28) = 1;
  *(_DWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 36) = 1;
  *(_DWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 44) = 1;
  *(_DWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 52) = 1;
  *(_DWORD *)(result + 56) = 0;
  *(_BYTE *)(result + 60) = 1;
  *(_DWORD *)(result + 64) = 0;
  *(_BYTE *)(result + 68) = 1;
  *(_DWORD *)(result + 72) = 0;
  *(_BYTE *)(result + 76) = 1;
  *(_DWORD *)(result + 80) = 0;
  *(_BYTE *)(result + 84) = 1;
  *(_DWORD *)(result + 88) = 0;
  *(_BYTE *)(result + 92) = 1;
  *(_DWORD *)(result + 96) = 0;
  *(_BYTE *)(result + 100) = 1;
  *(_DWORD *)(result + 104) = 0;
  *(_BYTE *)(result + 108) = 1;
  *(_DWORD *)(result + 112) = 0;
  *(_WORD *)(result + 116) = 1793;
  *(_DWORD *)(result + 120) = 0;
  *(_BYTE *)(result + 124) = 1;
  *(_DWORD *)(result + 128) = 0;
  *(_BYTE *)(result + 132) = 1;
  qword_1003B0A48 = result;
  return result;
}

uint64_t sub_100194844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    v12 = swift_allocObject(v11, 133, 7);
    sub_1001C2C84(v10);
    v13 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v6 + v9);
  swift_retain(v14);
  v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v25 = v14 + 128;
    while ((v16 & 1) == 0)
    {
      switch(v15)
      {
        case 1:
          swift_beginAccess(v14 + 16, v24, 33, 0);
          v18 = v14 + 16;
          goto LABEL_27;
        case 2:
          swift_beginAccess(v14 + 21, v24, 33, 0);
          v19 = sub_10020C4CC();
          v20 = v14 + 21;
          v21 = &type metadata for Proto_Gnss_Emergency_MethodType;
          goto LABEL_23;
        case 3:
          v22 = v14 + 24;
          goto LABEL_26;
        case 4:
          v22 = v14 + 32;
          goto LABEL_26;
        case 5:
          v22 = v14 + 40;
          goto LABEL_26;
        case 6:
          v22 = v14 + 48;
          goto LABEL_26;
        case 7:
          v22 = v14 + 56;
          goto LABEL_26;
        case 8:
          v22 = v14 + 64;
          goto LABEL_26;
        case 9:
          v22 = v14 + 72;
          goto LABEL_26;
        case 10:
          v22 = v14 + 80;
          goto LABEL_26;
        case 11:
          v22 = v14 + 88;
          goto LABEL_26;
        case 12:
          v22 = v14 + 96;
          goto LABEL_26;
        case 13:
          v22 = v14 + 104;
          goto LABEL_26;
        case 14:
          v22 = v14 + 112;
          goto LABEL_26;
        case 15:
          swift_beginAccess(v14 + 117, v24, 33, 0);
          v19 = sub_10020C510();
          v20 = v14 + 117;
          v21 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
LABEL_23:
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v20, v21, v19, a2, a3);
          goto LABEL_28;
        case 16:
          v22 = v14 + 120;
          goto LABEL_26;
        case 17:
          v22 = v25;
LABEL_26:
          swift_beginAccess(v22, v24, 33, 0);
          v18 = v22;
LABEL_27:
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v18, a2, a3);
LABEL_28:
          v5 = v23;
          swift_endAccess(v24);
          break;
        default:
          break;
      }
      v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v14);
}

uint64_t sub_100194B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v13, 0, 0);
  if ((*(_BYTE *)(v9 + 20) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 16), 1, a2, a3);
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 21, v14, 0, 0);
  if (*(_BYTE *)(v9 + 21) != 5)
  {
    v29[0] = *(_BYTE *)(v9 + 21);
    v11 = sub_10020C4CC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v29, 2, &type metadata for Proto_Gnss_Emergency_MethodType, v11, a2, a3);
  }
  swift_beginAccess(v9 + 24, v15, 0, 0);
  if ((*(_BYTE *)(v9 + 28) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 24), 3, a2, a3);
  swift_beginAccess(v9 + 32, v16, 0, 0);
  if ((*(_BYTE *)(v9 + 36) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 32), 4, a2, a3);
  swift_beginAccess(v9 + 40, v29, 0, 0);
  if ((*(_BYTE *)(v9 + 44) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 40), 5, a2, a3);
  swift_beginAccess(v9 + 48, v28, 0, 0);
  if ((*(_BYTE *)(v9 + 52) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 48), 6, a2, a3);
  swift_beginAccess(v9 + 56, v27, 0, 0);
  if ((*(_BYTE *)(v9 + 60) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 56), 7, a2, a3);
  swift_beginAccess(v9 + 64, v26, 0, 0);
  if ((*(_BYTE *)(v9 + 68) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 64), 8, a2, a3);
  swift_beginAccess(v9 + 72, v25, 0, 0);
  if ((*(_BYTE *)(v9 + 76) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 72), 9, a2, a3);
  swift_beginAccess(v9 + 80, v24, 0, 0);
  if ((*(_BYTE *)(v9 + 84) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 80), 10, a2, a3);
  swift_beginAccess(v9 + 88, v23, 0, 0);
  if ((*(_BYTE *)(v9 + 92) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 88), 11, a2, a3);
  swift_beginAccess(v9 + 96, v22, 0, 0);
  if ((*(_BYTE *)(v9 + 100) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 96), 12, a2, a3);
  swift_beginAccess(v9 + 104, v21, 0, 0);
  if ((*(_BYTE *)(v9 + 108) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 104), 13, a2, a3);
  swift_beginAccess(v9 + 112, v20, 0, 0);
  if ((*(_BYTE *)(v9 + 116) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 112), 14, a2, a3);
  swift_beginAccess(v9 + 117, v19, 0, 0);
  if (*(_BYTE *)(v9 + 117) != 7)
  {
    v18[0] = *(_BYTE *)(v9 + 117);
    v12 = sub_10020C510();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v18, 15, &type metadata for Proto_Gnss_Emergency_PosProtocol, v12, a2, a3);
  }
  swift_beginAccess(v9 + 120, v18, 0, 0);
  if ((*(_BYTE *)(v9 + 124) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 120), 16, a2, a3);
  swift_beginAccess(v9 + 128, v17, 0, 0);
  if ((*(_BYTE *)(v9 + 132) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 128), 17, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

Swift::Int sub_10019502C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, &qword_1003757F0, (uint64_t)&unk_1002DE938);
}

uint64_t sub_100195048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0A40, &qword_1003B0A48, (uint64_t)sub_100194798, a2);
}

uint64_t sub_100195064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100194844(a1, a2, a3);
}

uint64_t sub_100195078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100194B28(a1, a2, a3);
}

uint64_t sub_10019508C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC68, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE8B0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001950DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A38, (uint64_t)qword_100384910, (uint64_t)sub_1001942DC, a1);
}

uint64_t sub_1001950F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003762A8, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE838);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100195138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003762A8, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE838);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100195188()
{
  return &unk_100356B60;
}

unint64_t sub_100195194()
{
  return 0xD000000000000029;
}

uint64_t sub_1001951B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384928);
  sub_10000E6A4(v0, (uint64_t)qword_100384928);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ue_utran_cell_time";
  *(_QWORD *)(v9 + 8) = 18;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_umts_time_difference";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100195300()
{
  return sub_100008BD0(&qword_1003B0A50, (uint64_t)qword_100384928, (uint64_t)sub_1001951B0);
}

uint64_t sub_10019531C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A50, (uint64_t)qword_100384928, (uint64_t)sub_1001951B0, a1);
}

uint64_t sub_100195338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0) + 20);
        v10 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
        v11 = &qword_100376260;
        v12 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime;
        v13 = &unk_1002DE400;
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0) + 24);
    v10 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v11 = &qword_100376248;
    v12 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime;
    v13 = &unk_1002DE298;
LABEL_5:
    v14 = sub_10000FD38(v11, v12, (uint64_t)v13);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v14, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100195464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BA308(a1, a2, a3, sub_100195488, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001955FC);
}

uint64_t sub_100195488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375580);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100375580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375580);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
  v15 = sub_10000FD38(&qword_100376260, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE400);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001955FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375578);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375578);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  v15 = sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

Swift::Int sub_100195774()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, &qword_1003757F8, (uint64_t)&unk_1002DEAA0);
}

uint64_t sub_100195790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001B4CE4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a2);
}

uint64_t sub_1001957A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195338(a1, a2, a3);
}

uint64_t sub_1001957B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC60, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DEA18);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100195808@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A50, (uint64_t)qword_100384928, (uint64_t)sub_1001951B0, a1);
}

uint64_t sub_100195824(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003762C0, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DE9A0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100195864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003762C0, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DE9A0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001958B8()
{
  return &unk_100356B70;
}

unint64_t sub_1001958C4()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1001958E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384940);
  sub_10000E6A4(v0, (uint64_t)qword_100384940);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ref_frame_msb";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_tow_subms";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100195A34()
{
  return sub_100008BD0(&qword_1003B0A58, (uint64_t)qword_100384940, (uint64_t)sub_1001958E0);
}

uint64_t sub_100195A50@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A58, (uint64_t)qword_100384940, (uint64_t)sub_1001958E0, a1);
}

uint64_t sub_100195A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_100195A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t result;
  char v15;

  v11 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v11, i);
    if (v6 || (v15 & 1) != 0)
      break;
    if (result == 2)
    {
      v13 = *(int *)(a4(0) + 24);
LABEL_3:
      a5(v5 + v13, a2, a3);
      goto LABEL_4;
    }
    if (result == 1)
    {
      v13 = *(int *)(a4(0) + 20);
      goto LABEL_3;
    }
LABEL_4:
    v6 = 0;
    v11 = a2;
  }
  return result;
}

uint64_t sub_100195B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_100195B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;

  v8 = v5;
  result = a4(0);
  v13 = result;
  v14 = (unsigned int *)(v8 + *(int *)(result + 20));
  if ((v14[1] & 1) == 0)
    result = a5(*v14, 1, a2, a3);
  if (!v6)
  {
    v15 = (unsigned int *)(v8 + *(int *)(v13 + 24));
    if ((v15[1] & 1) == 0)
      a5(*v15, 2, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100195C44(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased) & 1;
}

Swift::Int sub_100195C64()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, &qword_100375800, (uint64_t)&unk_1002DEC08);
}

uint64_t sub_100195C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC58, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEB80);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100195CD0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A58, (uint64_t)qword_100384940, (uint64_t)sub_1001958E0, a1);
}

uint64_t sub_100195CEC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003762D8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEB08);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100195D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003762D8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEB08);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100195D7C()
{
  return &unk_100356B80;
}

unint64_t sub_100195D88()
{
  return 0xD000000000000031;
}

uint64_t sub_100195DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384958);
  sub_10000E6A4(v0, (uint64_t)qword_100384958);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ref_frame_msb";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "delta_tow";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100195EF4()
{
  return sub_100008BD0(&qword_1003B0A60, (uint64_t)qword_100384958, (uint64_t)sub_100195DA4);
}

uint64_t sub_100195F10@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A60, (uint64_t)qword_100384958, (uint64_t)sub_100195DA4, a1);
}

uint64_t sub_100195F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_100195F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_100195F74(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted) & 1;
}

Swift::Int sub_100195F94()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, &qword_100375808, (uint64_t)&unk_1002DED70);
}

uint64_t sub_100195FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC50, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DECE8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100196000@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A60, (uint64_t)qword_100384958, (uint64_t)sub_100195DA4, a1);
}

uint64_t sub_10019601C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003762F0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DEC70);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019605C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003762F0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DEC70);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001960AC()
{
  return &unk_100356B90;
}

unint64_t sub_1001960B8()
{
  return 0xD000000000000024;
}

uint64_t sub_1001960D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384970);
  sub_10000E6A4(v0, (uint64_t)qword_100384970);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "utran_time";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "geran_time_based";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "geran_time_assisted";
  *(_QWORD *)(v14 + 8) = 19;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100196268()
{
  return sub_100008BD0(&qword_1003B0A68, (uint64_t)qword_100384970, (uint64_t)sub_1001960D4);
}

uint64_t sub_100196284@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A68, (uint64_t)qword_100384970, (uint64_t)sub_1001960D4, a1);
}

uint64_t sub_1001962A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 24);
        v10 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
        v11 = &qword_1003762D8;
        v12 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased;
        v13 = &unk_1002DEB08;
        goto LABEL_5;
      }
      if (result == 1)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 20);
        v10 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
        v11 = &qword_1003762C0;
        v12 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured;
        v13 = &unk_1002DE9A0;
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 28);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    v11 = &qword_1003762F0;
    v12 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted;
    v13 = &unk_1002DEC70;
LABEL_5:
    v14 = sub_10000FD38(v11, v12, (uint64_t)v13);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v14, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10019640C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_100196490(v3, a1, a2, a3);
  if (!v4)
  {
    sub_100196604(v3, a1, a2, a3);
    sub_100196778(v3, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100196490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375588);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100375588);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375588);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  v15 = sub_10000FD38(&qword_1003762C0, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DE9A0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
}

uint64_t sub_100196604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375590);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375590);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
  v15 = sub_10000FD38(&qword_1003762D8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEB08);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_100196778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375598);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_100375598);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375598);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  v15 = sub_10000FD38(&qword_1003762F0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DEC70);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

Swift::Int sub_1001968F0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100375810, (uint64_t)&unk_1002DEED8);
}

uint64_t sub_10019690C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + a1[6];
  v7 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a2 + a1[7];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
}

uint64_t sub_1001969B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001962A0(a1, a2, a3);
}

uint64_t sub_1001969CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019640C(a1, a2, a3);
}

uint64_t sub_1001969E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC48, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEE50);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100196A30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A68, (uint64_t)qword_100384970, (uint64_t)sub_1001960D4, a1);
}

uint64_t sub_100196A4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376308, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEDD8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100196A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376308, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEDD8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100196ADC()
{
  return &unk_100356BA0;
}

unint64_t sub_100196AE8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_100196B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384988);
  sub_10000E6A4(v0, (uint64_t)qword_100384988);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "gps_time_measured_type";
  *(_QWORD *)(v9 + 8) = 22;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_time_measured";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100196C54()
{
  return sub_100008BD0(&qword_1003B0A70, (uint64_t)qword_100384988, (uint64_t)sub_100196B04);
}

uint64_t sub_100196C70@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A70, (uint64_t)qword_100384988, (uint64_t)sub_100196B04, a1);
}

uint64_t sub_100196C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B5068(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100376308, (uint64_t)&unk_1002DEDD8);
}

uint64_t sub_100196CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B51E4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t (*)(void))sub_10020C334, (uint64_t)&type metadata for Proto_Gnss_Emergency_ClsNetworkType, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100196CF4);
}

uint64_t sub_100196CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1003755A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755A0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
  v15 = sub_10000FD38(&qword_100376308, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEDD8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

Swift::Int sub_100196E6C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, &qword_100375818, (uint64_t)&unk_1002DF040);
}

uint64_t sub_100196E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 6, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, a2);
}

uint64_t sub_100196E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC40, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DEFB8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100196EE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A70, (uint64_t)qword_100384988, (uint64_t)sub_100196B04, a1);
}

uint64_t sub_100196F04(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376320, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DEF40);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100196F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376320, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DEF40);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100196F94()
{
  return &unk_100356BB0;
}

unint64_t sub_100196FA0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100196FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003849A0);
  sub_10000E6A4(v0, (uint64_t)qword_1003849A0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "gps_todmsec";
  *(_QWORD *)(v9 + 8) = 11;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_todfrac";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "gps_todunc";
  *(_QWORD *)(v14 + 8) = 10;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100197150()
{
  return sub_100008BD0(&qword_1003B0A78, (uint64_t)qword_1003849A0, (uint64_t)sub_100196FBC);
}

uint64_t sub_10019716C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A78, (uint64_t)qword_1003849A0, (uint64_t)sub_100196FBC, a1);
}

uint64_t sub_100197188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001971A4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001971A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t result;
  char v13;

  v9 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v9, i);
    if (v5 || (v13 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        v11 = *(int *)(a4(0) + 28);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v4 + v11, a2, a3);
        break;
      case 2:
        v11 = *(int *)(a4(0) + 24);
        goto LABEL_3;
      case 1:
        v11 = *(int *)(a4(0) + 20);
        goto LABEL_3;
    }
    v5 = 0;
    v9 = a2;
  }
  return result;
}

uint64_t sub_10019726C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197288(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_100197288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v6 = v4;
  result = a4(0);
  v11 = result;
  v12 = (unsigned int *)(v6 + *(int *)(result + 20));
  if ((v12[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 1, a2, a3);
  if (!v5)
  {
    v13 = (unsigned int *)(v6 + *(int *)(v11 + 24));
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 2, a2, a3);
    v14 = (unsigned int *)(v6 + *(int *)(v11 + 28));
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 3, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100197380(uint64_t a1, uint64_t a2)
{
  return sub_1001D47B8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsTOD) & 1;
}

Swift::Int sub_1001973A0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsTOD, &qword_100375820, (uint64_t)&unk_1002DF1A8);
}

uint64_t sub_1001973BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC38, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF120);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019740C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A78, (uint64_t)qword_1003849A0, (uint64_t)sub_100196FBC, a1);
}

uint64_t sub_100197428(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100197468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001974B8()
{
  return &unk_100356BC0;
}

unint64_t sub_1001974C4()
{
  return 0xD000000000000021;
}

uint64_t sub_1001974E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003849B8);
  sub_10000E6A4(v0, (uint64_t)qword_1003849B8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "gps_tow";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_week";
  *(_QWORD *)(v13 + 8) = 8;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "gps_time_uncertainty";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "fix_type";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "gps_todpresent";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "gps_tod";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100197718()
{
  return sub_100008BD0(&qword_1003B0A80, (uint64_t)qword_1003849B8, (uint64_t)sub_1001974E0);
}

uint64_t sub_100197734@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A80, (uint64_t)qword_1003849B8, (uint64_t)sub_1001974E0, a1);
}

uint64_t sub_100197750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 20);
          goto LABEL_5;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 24);
          goto LABEL_5;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 28);
          goto LABEL_5;
        case 4:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 32);
          v13 = sub_10020C378();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_FixType, v13, a2, a3);
          goto LABEL_6;
        case 5:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 36);
LABEL_5:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 6:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 40);
          v15 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
          v16 = sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v14, v15, v16, a2, a3);
LABEL_6:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001978E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unint64_t v14;
  char v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    if (*(_BYTE *)(v5 + v10[8]) != 4)
    {
      v15 = *(_BYTE *)(v5 + v10[8]);
      v14 = sub_10020C378();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v15, 4, &type metadata for Proto_Gnss_Emergency_FixType, v14, a2, a3);
    }
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_100197A78(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100197A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755A8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 40), (uint64_t)v8, &qword_1003755A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755A8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  v15 = sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

Swift::Int sub_100197BF0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_LocationInfo, &qword_100375828, (uint64_t)&unk_1002DF310);
}

uint64_t sub_100197C0C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  *(_BYTE *)(a2 + v7) = 4;
  v9 = a1[10];
  v10 = a2 + a1[9];
  *(_DWORD *)v10 = 0;
  v11 = a2 + v9;
  *(_BYTE *)(v10 + 4) = 1;
  v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

uint64_t sub_100197C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197750(a1, a2, a3);
}

uint64_t sub_100197CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001978E0(a1, a2, a3);
}

uint64_t sub_100197CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC30, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF288);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100197D14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A80, (uint64_t)qword_1003849B8, (uint64_t)sub_1001974E0, a1);
}

uint64_t sub_100197D30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376350, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF210);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100197D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376350, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF210);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100197DC0()
{
  return &unk_100356BD0;
}

unint64_t sub_100197DCC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_100197DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003849D0);
  sub_10000E6A4(v0, (uint64_t)qword_1003849D0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "cell_info_present";
  *(_QWORD *)(v8 + 8) = 17;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "lac";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "cell_id";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "plmn";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100197FC0()
{
  return sub_100008BD0(&qword_1003B0A88, (uint64_t)qword_1003849D0, (uint64_t)sub_100197DE8);
}

uint64_t sub_100197FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A88, (uint64_t)qword_1003849D0, (uint64_t)sub_100197DE8, a1);
}

uint64_t sub_100197FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 20);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 28);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 4:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 32);
          v11 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
          v12 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v12, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019814C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v10 = result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + *(int *)(v10 + 28));
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    sub_100198268(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100198268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_1003755B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755B0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  v15 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

Swift::Int sub_1001983E0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CellInfo, &qword_100375830, (uint64_t)&unk_1002DF478);
}

uint64_t sub_1001983FC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  v10 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
}

uint64_t sub_100198474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197FF8(a1, a2, a3);
}

uint64_t sub_100198488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019814C(a1, a2, a3);
}

uint64_t sub_10019849C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC28, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF3F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001984EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A88, (uint64_t)qword_1003849D0, (uint64_t)sub_100197DE8, a1);
}

uint64_t sub_100198508(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100198548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100198598()
{
  return &unk_100356BE0;
}

unint64_t sub_1001985A4()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1001985C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_1003849E8);
  sub_10000E6A4(v0, (uint64_t)qword_1003849E8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "utran_timing_of_cell_frames";
  *(_QWORD *)(v9 + 8) = 27;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ref_sfn";
  *(_QWORD *)(v13 + 8) = 7;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ref_psc";
  *((_QWORD *)v15 + 1) = 7;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "cell_info";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100198784()
{
  return sub_100008BD0(&qword_1003B0A90, (uint64_t)qword_1003849E8, (uint64_t)sub_1001985C0);
}

uint64_t sub_1001987A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A90, (uint64_t)qword_1003849E8, (uint64_t)sub_1001985C0, a1);
}

uint64_t sub_1001987BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_5;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 24);
          goto LABEL_11;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 28);
LABEL_11:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
          goto LABEL_5;
        case 4:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 32);
          v14 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
          v15 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a2, a3);
LABEL_5:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100198918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int *v13;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  v10 = result;
  v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(_QWORD *)v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + *(int *)(v10 + 28));
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    sub_100198A34(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100198A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_1003755B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755B8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  v15 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

Swift::Int sub_100198BAC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, &qword_100375838, (uint64_t)&unk_1002DF5E0);
}

uint64_t sub_100198BC8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  v10 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
}

uint64_t sub_100198C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001987BC(a1, a2, a3);
}

uint64_t sub_100198C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198918(a1, a2, a3);
}

uint64_t sub_100198C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC20, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF558);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100198CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A90, (uint64_t)qword_1003849E8, (uint64_t)sub_1001985C0, a1);
}

uint64_t sub_100198CD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376380, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF4E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100198D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376380, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF4E0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100198D68()
{
  return &unk_100356BF0;
}

unint64_t sub_100198D74()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_100198D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A00);
  sub_10000E6A4(v0, (uint64_t)qword_100384A00);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ref_frame_msb";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "ref_frame_number";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "cell_info";
  *(_QWORD *)(v14 + 8) = 9;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100198F24()
{
  return sub_100008BD0(&qword_1003B0A98, (uint64_t)qword_100384A00, (uint64_t)sub_100198D90);
}

uint64_t sub_100198F40@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0A98, (uint64_t)qword_100384A00, (uint64_t)sub_100198D90, a1);
}

uint64_t sub_100198F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      switch(result)
      {
        case 3:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 28);
          v10 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
          v11 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
          goto LABEL_12;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 24);
          break;
        case 1:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 20);
          break;
        default:
          goto LABEL_12;
      }
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
LABEL_12:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100199098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  v10 = result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    sub_100199180(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100199180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  sub_10000E660(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_1003755B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755B8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  v15 = sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

Swift::Int sub_1001992F8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, &qword_100375840, (uint64_t)&unk_1002DF748);
}

uint64_t sub_100199314@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + a1[7];
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
}

uint64_t sub_100199380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198F5C(a1, a2, a3);
}

uint64_t sub_100199394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100199098(a1, a2, a3);
}

uint64_t sub_1001993A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC18, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF6C0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001993F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0A98, (uint64_t)qword_100384A00, (uint64_t)sub_100198D90, a1);
}

uint64_t sub_100199414(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376398, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF648);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100199454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376398, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF648);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001994A4()
{
  return &unk_100356C00;
}

unint64_t sub_1001994B0()
{
  return 0xD000000000000022;
}

uint64_t sub_1001994CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v31;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A18);
  sub_10000E6A4(v0, (uint64_t)qword_100384A18);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v31 = swift_allocObject(v1, v6 + 11 * v4, v5 | 7);
  *(_OWORD *)(v31 + 16) = xmmword_1002C40E0;
  v7 = v31 + v6;
  v8 = v31 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v31 + v6) = 1;
  *(_QWORD *)v8 = "physical_cell_id";
  *(_QWORD *)(v8 + 8) = 16;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "earfcn";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "sfn";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "cgi_info_present";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "plmn";
  *((_QWORD *)v18 + 1) = 4;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "eutran_cell_id";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "sec_from_frame_start";
  *((_QWORD *)v22 + 1) = 20;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "frac_sec_from_frame_start";
  *((_QWORD *)v24 + 1) = 25;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "frame_drift";
  *(_QWORD *)(v25 + 8) = 11;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ref_time_uncertainty";
  *((_QWORD *)v27 + 1) = 20;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "bs_align";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v31);
}

uint64_t sub_10019980C()
{
  return sub_100008BD0(&qword_1003B0AA0, (uint64_t)qword_100384A18, (uint64_t)sub_1001994CC);
}

uint64_t sub_100199828@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AA0, (uint64_t)qword_100384A18, (uint64_t)sub_1001994CC, a1);
}

uint64_t sub_100199844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 20);
          goto LABEL_16;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 24);
          goto LABEL_16;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 28);
          goto LABEL_16;
        case 4:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 32);
          goto LABEL_16;
        case 5:
          v11 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 36);
          v12 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
          v13 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v11, v12, v13, a2, a3);
          goto LABEL_17;
        case 6:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 40);
          goto LABEL_16;
        case 7:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 44);
          goto LABEL_16;
        case 8:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 48);
          goto LABEL_16;
        case 9:
          v15 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v15 + 52), a2, a3);
          goto LABEL_17;
        case 10:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 56);
          goto LABEL_16;
        case 11:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 60);
LABEL_16:
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
LABEL_17:
          v9 = v14;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100199A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_100199C58(v5, a1, a2, a3);
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, 7);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:));
    sub_100199EC0(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
    sub_1001B6F54(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100199C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  sub_10000E660(a1 + *(int *)(v13 + 36), (uint64_t)v8, &qword_1003755B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755B0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  v15 = sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_100199DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t result;
  unsigned int *v11;

  result = a5(0);
  v11 = (unsigned int *)(a1 + *(int *)(result + 44));
  if ((v11[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, a6, a3, a4);
  return result;
}

uint64_t sub_100199E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  unsigned int *v11;

  result = a5(0);
  v11 = (unsigned int *)(a1 + *(int *)(result + 52));
  if ((v11[1] & 1) == 0)
    return a6(*v11, 9, a3, a4);
  return result;
}

uint64_t sub_100199EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  unsigned int *v9;

  result = a5(0);
  v9 = (unsigned int *)(a1 + *(int *)(result + 56));
  if ((v9[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v9, 10, a3, a4);
  return result;
}

Swift::Int sub_100199F38()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, &qword_100375848, (uint64_t)&unk_1002DF8B0);
}

uint64_t sub_100199F54@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + a1[9];
  v11 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v13 = a1[11];
  v14 = a2 + a1[10];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v13;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a1[13];
  v17 = a2 + a1[12];
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  v18 = a2 + v16;
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  v19 = a1[15];
  v20 = a2 + a1[14];
  *(_DWORD *)v20 = 0;
  *(_BYTE *)(v20 + 4) = 1;
  v21 = a2 + v19;
  *(_DWORD *)v21 = 0;
  *(_BYTE *)(v21 + 4) = 1;
  return result;
}

uint64_t sub_10019A03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100199844(a1, a2, a3);
}

uint64_t sub_10019A050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100199A10(a1, a2, a3);
}

uint64_t sub_10019A064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC10, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF828);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019A0B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AA0, (uint64_t)qword_100384A18, (uint64_t)sub_1001994CC, a1);
}

uint64_t sub_10019A0D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375990, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF7B0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019A110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375990, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF7B0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019A160()
{
  return &unk_100356C10;
}

unint64_t sub_10019A16C()
{
  return 0xD000000000000026;
}

uint64_t sub_10019A188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A30);
  sub_10000E6A4(v0, (uint64_t)qword_100384A30);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "utran_time";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "geran_time";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "eutran_time";
  *(_QWORD *)(v14 + 8) = 11;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019A31C()
{
  return sub_100008BD0(&qword_1003B0AA8, (uint64_t)qword_100384A30, (uint64_t)sub_10019A188);
}

uint64_t sub_10019A338@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AA8, (uint64_t)qword_100384A30, (uint64_t)sub_10019A188, a1);
}

uint64_t sub_10019A354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  v3 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  v5 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  v7 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  qword_1003B0AB8 = v1;
  return result;
}

uint64_t sub_10019A41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v3 = sub_1000039AC(&qword_1003755D0);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1000039AC(&qword_1003755C8);
  __chkstk_darwin(v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1000039AC(&qword_1003755C0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  v15 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  v17 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime, v25, 0, 0);
  sub_10000E660(v18, (uint64_t)v11, &qword_1003755C0);
  swift_beginAccess(v12, v24, 33, 0);
  sub_10000E574((uint64_t)v11, v12, &qword_1003755C0);
  swift_endAccess(v24);
  v19 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, v24, 0, 0);
  sub_10000E660(v19, (uint64_t)v8, &qword_1003755C8);
  swift_beginAccess(v14, v23, 33, 0);
  sub_10000E574((uint64_t)v8, v14, &qword_1003755C8);
  swift_endAccess(v23);
  v20 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, v23, 0, 0);
  sub_10000E660(v20, (uint64_t)v5, &qword_1003755D0);
  swift_release(a1);
  swift_beginAccess(v16, v22, 33, 0);
  sub_10000E574((uint64_t)v5, v16, &qword_1003755D0);
  swift_endAccess(v22);
  return v1;
}

uint64_t sub_10019A6C8()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime, &qword_1003755C0);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, &qword_1003755C8);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, &qword_1003755D0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10019A730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t v23;
  _BYTE v24[24];

  v5 = v3;
  v8 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v8)) & 1) == 0)
  {
    v9 = *(_QWORD *)(v3 + v8);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    v12 = swift_retain(v9);
    sub_10019A41C(v12);
    v13 = *(_QWORD *)(v5 + v8);
    *(_QWORD *)(v5 + v8) = v11;
    swift_release(v13);
  }
  v14 = *(_QWORD *)(v5 + v8);
  swift_retain(v14);
  v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v16 & 1) != 0)
        return swift_release(v14);
      if (v15 == 3)
        break;
      if (v15 == 2)
      {
        v18 = v14
            + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
        swift_beginAccess(v14+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, v24, 33, 0);
        v19 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
        v20 = &qword_100376398;
        v21 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured;
        v22 = &unk_1002DF648;
        goto LABEL_7;
      }
      if (v15 == 1)
      {
        v18 = v14
            + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
        swift_beginAccess(v14+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime, v24, 33, 0);
        v19 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
        v20 = &qword_100376380;
        v21 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured;
        v22 = &unk_1002DF4E0;
        goto LABEL_7;
      }
LABEL_8:
      v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v18 = v14
        + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
    swift_beginAccess(v14+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, v24, 33, 0);
    v19 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
    v20 = &qword_100375990;
    v21 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell;
    v22 = &unk_1002DF7B0;
LABEL_7:
    v23 = sub_10000FD38(v20, v21, (uint64_t)v22);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v18, v19, v23, a2, a3);
    swift_endAccess(v24);
    goto LABEL_8;
  }
  return swift_release(v14);
}

uint64_t sub_10019A954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20));
  v9 = swift_retain(v8);
  sub_10019AA30(v9, a1, a2, a3);
  if (v4)
    return swift_release(v8);
  sub_10019ABBC(v8, a1, a2, a3);
  sub_10019AD48(v8, a1, a2, a3);
  swift_release(v8);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10019AA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755C0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755C0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  v15 = sub_10000FD38(&qword_100376380, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF4E0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_10019ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755C8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755C8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
  v15 = sub_10000FD38(&qword_100376398, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF648);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_10019AD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755D0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755D0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  v15 = sub_10000FD38(&qword_100375990, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF7B0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_10019AED4(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t (*)(uint64_t, uint64_t))sub_10019AEFC) & 1;
}

BOOL sub_10019AEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  _BYTE v80[24];
  _BYTE v81[24];
  _BYTE v82[24];
  _BYTE v83[24];
  _BYTE v84[24];
  _BYTE v85[8];

  v79 = a2;
  v68 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v64 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1000039AC(&qword_10037BFB0);
  __chkstk_darwin(v66);
  v69 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000039AC(&qword_1003755D0);
  v6 = __chkstk_darwin(v5);
  v77 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v76 = (char *)&v63 - v8;
  v74 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v65 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1000039AC(&qword_10037BFB8);
  __chkstk_darwin(v71);
  v75 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_1003755C8);
  v12 = __chkstk_darwin(v11);
  v70 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v73 = (uint64_t)&v63 - v14;
  v15 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v78 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000039AC(&qword_10037BFC0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_1003755C0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v26 = (char *)&v63 - v25;
  v27 = a1;
  v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess(v28, v85, 0, 0);
  sub_10000E660(v28, (uint64_t)v26, &qword_1003755C0);
  v29 = v79;
  v30 = v79
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess(v79+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime, v84, 0, 0);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_10000E660((uint64_t)v26, (uint64_t)v20, &qword_1003755C0);
  sub_10000E660(v30, v31, &qword_1003755C0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v20, 1, v15) == 1)
  {
    swift_retain(v27);
    swift_retain(v29);
    sub_100015704((uint64_t)v26, &qword_1003755C0);
    if (v32(v31, 1, v15) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_1003755C0);
      goto LABEL_8;
    }
LABEL_6:
    v34 = &qword_10037BFC0;
    v35 = (uint64_t)v20;
LABEL_14:
    sub_100015704(v35, v34);
    goto LABEL_15;
  }
  v33 = (uint64_t)v78;
  sub_10000E660((uint64_t)v20, (uint64_t)v24, &qword_1003755C0);
  if (v32(v31, 1, v15) == 1)
  {
    swift_retain(v27);
    swift_retain(v29);
    sub_100015704((uint64_t)v26, &qword_1003755C0);
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
    goto LABEL_6;
  }
  sub_100003E08(v31, v33, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  swift_retain(v27);
  swift_retain(v29);
  v36 = sub_1001C87A4((uint64_t)v24, v33);
  sub_100004030(v33, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  sub_100015704((uint64_t)v26, &qword_1003755C0);
  sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  sub_100015704((uint64_t)v20, &qword_1003755C0);
  if ((v36 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v37 = v27
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess(v27+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, v83, 0, 0);
  v38 = v73;
  sub_10000E660(v37, v73, &qword_1003755C8);
  v39 = v29
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess(v29+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, v82, 0, 0);
  v40 = v75;
  v41 = v75 + *(int *)(v71 + 48);
  sub_10000E660(v38, v75, &qword_1003755C8);
  sub_10000E660(v39, v41, &qword_1003755C8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  v43 = v74;
  if (v42(v40, 1, v74) != 1)
  {
    v47 = v70;
    sub_10000E660(v40, v70, &qword_1003755C8);
    v48 = v42(v41, 1, v43);
    v45 = (uint64_t)v77;
    v46 = (uint64_t)v76;
    if (v48 == 1)
    {
      sub_100015704(v38, &qword_1003755C8);
      sub_100004030(v47, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
      goto LABEL_13;
    }
    v50 = v65;
    sub_100003E08(v41, v65, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
    v51 = sub_1001C6038(v47, v50);
    sub_100004030(v50, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
    sub_100015704(v38, &qword_1003755C8);
    sub_100004030(v47, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
    sub_100015704(v40, &qword_1003755C8);
    if ((v51 & 1) != 0)
      goto LABEL_19;
LABEL_15:
    swift_release(v27);
    swift_release(v29);
    return 0;
  }
  sub_100015704(v38, &qword_1003755C8);
  v44 = v42(v41, 1, v43);
  v45 = (uint64_t)v77;
  v46 = (uint64_t)v76;
  if (v44 != 1)
  {
LABEL_13:
    v34 = &qword_10037BFB8;
    v35 = v40;
    goto LABEL_14;
  }
  sub_100015704(v40, &qword_1003755C8);
LABEL_19:
  v52 = v27
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess(v27+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, v81, 0, 0);
  sub_10000E660(v52, v46, &qword_1003755D0);
  v53 = v29
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess(v29+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, v80, 0, 0);
  v54 = v69;
  v55 = v69 + *(int *)(v66 + 48);
  sub_10000E660(v46, v69, &qword_1003755D0);
  v56 = v53;
  v57 = v54;
  sub_10000E660(v56, v55, &qword_1003755D0);
  v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v59 = v54;
  v60 = v68;
  if (v58(v59, 1, v68) == 1)
  {
    swift_release(v27);
    swift_release(v29);
    sub_100015704(v46, &qword_1003755D0);
    if (v58(v55, 1, v60) == 1)
    {
      sub_100015704(v57, &qword_1003755D0);
      return 1;
    }
    goto LABEL_24;
  }
  sub_10000E660(v57, v45, &qword_1003755D0);
  if (v58(v55, 1, v60) == 1)
  {
    swift_release(v27);
    swift_release(v29);
    sub_100015704(v46, &qword_1003755D0);
    sub_100004030(v45, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
LABEL_24:
    sub_100015704(v57, &qword_10037BFB0);
    return 0;
  }
  v61 = v64;
  sub_100003E08(v55, v64, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  v62 = sub_1001CF7C0(v45, v61);
  swift_release(v27);
  swift_release(v29);
  sub_100004030(v61, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  sub_100015704(v46, &qword_1003755D0);
  sub_100004030(v45, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  sub_100015704(v57, &qword_1003755D0);
  return (v62 & 1) != 0;
}

Swift::Int sub_10019B7C0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_100375850, (uint64_t)&unk_1002DFA18);
}

uint64_t sub_10019B7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0AB0, &qword_1003B0AB8, (uint64_t)sub_10019A354, a2);
}

uint64_t sub_10019B7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019A730(a1, a2, a3);
}

uint64_t sub_10019B80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019A954(a1, a2, a3);
}

uint64_t sub_10019B820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC08, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF990);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019B870@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AA8, (uint64_t)qword_100384A30, (uint64_t)sub_10019A188, a1);
}

uint64_t sub_10019B88C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003763C0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF918);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019B8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003763C0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF918);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019B920()
{
  return &unk_100356C20;
}

unint64_t sub_10019B92C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_10019B948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A48);
  sub_10000E6A4(v0, (uint64_t)qword_100384A48);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ganss_time_measured_type";
  *(_QWORD *)(v9 + 8) = 24;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_time_measured";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019BA98()
{
  return sub_100008BD0(&qword_1003B0AC0, (uint64_t)qword_100384A48, (uint64_t)sub_10019B948);
}

uint64_t sub_10019BAB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AC0, (uint64_t)qword_100384A48, (uint64_t)sub_10019B948, a1);
}

uint64_t sub_10019BAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B5068(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003763C0, (uint64_t)&unk_1002DF918);
}

uint64_t sub_10019BB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B51E4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t (*)(void))sub_10020C334, (uint64_t)&type metadata for Proto_Gnss_Emergency_ClsNetworkType, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10019BB38);
}

uint64_t sub_10019BB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1003755D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755D8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
  v15 = sub_10000FD38(&qword_1003763C0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF918);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

Swift::Int sub_10019BCB0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, &qword_100375858, (uint64_t)&unk_1002DFB80);
}

uint64_t sub_10019BCCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 6, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, a2);
}

uint64_t sub_10019BCDC@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  UnknownStorage.init()();
  v8 = *(int *)(a1 + 24);
  *(_BYTE *)(a4 + *(int *)(a1 + 20)) = a2;
  v9 = a4 + v8;
  v10 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
}

uint64_t sub_10019BD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BC00, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFAF8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019BD8C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AC0, (uint64_t)qword_100384A48, (uint64_t)sub_10019B948, a1);
}

uint64_t sub_10019BDA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003763D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFA80);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019BDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003763D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFA80);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019BE3C()
{
  return &unk_100356C30;
}

unint64_t sub_10019BE48()
{
  return 0xD000000000000026;
}

uint64_t sub_10019BE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A60);
  sub_10000E6A4(v0, (uint64_t)qword_100384A60);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "time_id";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_tod";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_tod_frac";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ganss_tod_uncertainty";
  *((_QWORD *)v17 + 1) = 21;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "fix_type";
  *((_QWORD *)v19 + 1) = 8;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "reference_gnss";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019C09C()
{
  return sub_100008BD0(&qword_1003B0AC8, (uint64_t)qword_100384A60, (uint64_t)sub_10019BE64);
}

uint64_t sub_10019C0B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AC8, (uint64_t)qword_100384A60, (uint64_t)sub_10019BE64, a1);
}

uint64_t sub_10019C0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  ValueMetadata *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 20);
          v11 = sub_10020C2F0();
          v12 = v10;
          v13 = &type metadata for Proto_Gnss_Emergency_GnssTimeId;
          goto LABEL_12;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 32);
          goto LABEL_5;
        case 5:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 36);
          v11 = sub_10020C378();
          v12 = v14;
          v13 = &type metadata for Proto_Gnss_Emergency_FixType;
LABEL_12:
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, v13, v11, a2, a3);
          break;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019C244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unint64_t v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;
  char v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  v10 = (int *)result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 6)
  {
    v15 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v11 = sub_10020C2F0();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v15, 1, &type metadata for Proto_Gnss_Emergency_GnssTimeId, v11, a2, a3);
  }
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10019C3D4(v5, a1, a2, a3);
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10019C3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 4)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 36));
    v8 = sub_10020C378();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 5, &type metadata for Proto_Gnss_Emergency_FixType, v8, a3, a4);
  }
  return result;
}

Swift::Int sub_10019C460()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, &qword_100375860, (uint64_t)&unk_1002DFCE8);
}

uint64_t sub_10019C47C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 6;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 4;
  v11 = a2 + v10;
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  return result;
}

uint64_t sub_10019C4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019C0D4(a1, a2, a3);
}

uint64_t sub_10019C504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019C244(a1, a2, a3);
}

uint64_t sub_10019C518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBF8, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFC60);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019C568@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AC8, (uint64_t)qword_100384A60, (uint64_t)sub_10019BE64, a1);
}

uint64_t sub_10019C584(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003763F0, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFBE8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019C5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003763F0, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFBE8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019C618()
{
  return &unk_100356C40;
}

unint64_t sub_10019C624()
{
  return 0xD000000000000023;
}

uint64_t sub_10019C640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A78);
  sub_10000E6A4(v0, (uint64_t)qword_100384A78);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "latitude";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "longitude";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019C790()
{
  return sub_100008BD0(&qword_1003B0AD0, (uint64_t)qword_100384A78, (uint64_t)sub_10019C640);
}

uint64_t sub_10019C7AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AD0, (uint64_t)qword_100384A78, (uint64_t)sub_10019C640, a1);
}

uint64_t sub_10019C7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularInt32Field(value:));
}

uint64_t sub_10019C7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:));
}

uint64_t sub_10019C810(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint) & 1;
}

Swift::Int sub_10019C830()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, &qword_100375868, (uint64_t)&unk_1002DFE50);
}

uint64_t sub_10019C84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBF0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFDC8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019C89C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AD0, (uint64_t)qword_100384A78, (uint64_t)sub_10019C640, a1);
}

uint64_t sub_10019C8B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019C94C()
{
  return &unk_100356C50;
}

unint64_t sub_10019C958()
{
  return 0xD000000000000029;
}

uint64_t sub_10019C974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384A90);
  sub_10000E6A4(v0, (uint64_t)qword_100384A90);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "point";
  *(_QWORD *)(v9 + 8) = 5;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "uncertain_radius";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019CACC()
{
  return sub_100008BD0(&qword_1003B0AD8, (uint64_t)qword_100384A90, (uint64_t)sub_10019C974);
}

uint64_t sub_10019CAE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AD8, (uint64_t)qword_100384A90, (uint64_t)sub_10019C974, a1);
}

uint64_t sub_10019CB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EA60(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_10019CB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EBA8(a1, a2, a3, sub_10019CB44, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_10019CB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_10019CCB8(uint64_t a1, uint64_t a2)
{
  return sub_1001D3DCC(a1, a2, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle) & 1;
}

Swift::Int sub_10019CCD8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, &qword_100375870, (uint64_t)&unk_1002DFFB8);
}

uint64_t sub_10019CCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBE8, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFF30);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019CD48@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AD8, (uint64_t)qword_100384A90, (uint64_t)sub_10019C974, a1);
}

uint64_t sub_10019CD64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376418, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFEB8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019CDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376418, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFEB8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019CDF8()
{
  return &unk_100356C60;
}

unint64_t sub_10019CE04()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_10019CE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384AA8);
  sub_10000E6A4(v0, (uint64_t)qword_100384AA8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "point";
  *(_QWORD *)(v9 + 8) = 5;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "semi_major_axis";
  *(_QWORD *)(v13 + 8) = 15;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "semi_minor_axis";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "orientation_angle";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "confidence";
  *(_QWORD *)(v18 + 8) = 10;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019D038()
{
  return sub_100008BD0(&qword_1003B0AE0, (uint64_t)qword_100384AA8, (uint64_t)sub_10019CE20);
}

uint64_t sub_10019D054@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AE0, (uint64_t)qword_100384AA8, (uint64_t)sub_10019CE20, a1);
}

uint64_t sub_10019D070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 20);
          v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
          v12 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v12, a2, a3);
          break;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 32);
          goto LABEL_5;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019D1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = sub_10019D314(v5, a1, a2, a3);
  if (!v4)
  {
    v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
    v11 = (unsigned int *)(v5 + v10[6]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v5 + v10[7]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v5 + v10[8]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    v14 = (unsigned int *)(v5 + v10[9]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 5, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10019D314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

Swift::Int sub_10019D48C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, &qword_100375878, (uint64_t)&unk_1002E0120);
}

uint64_t sub_10019D4A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  v8 = a2 + a1[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[9];
  v11 = a2 + a1[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  return result;
}

uint64_t sub_10019D53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019D070(a1, a2, a3);
}

uint64_t sub_10019D550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019D1D0(a1, a2, a3);
}

uint64_t sub_10019D564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBE0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0098);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019D5B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AE0, (uint64_t)qword_100384AA8, (uint64_t)sub_10019CE20, a1);
}

uint64_t sub_10019D5D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376430, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0020);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019D610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376430, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0020);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019D660()
{
  return &unk_100356C70;
}

unint64_t sub_10019D66C()
{
  return 0xD000000000000034;
}

uint64_t sub_10019D688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  uint64_t v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384AC0);
  sub_10000E6A4(v0, (uint64_t)qword_100384AC0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v23 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_1002C3140;
  v7 = v23 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v23 + v6) = 1;
  *(_QWORD *)v7 = "point";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = enum case for _NameMap.NameDescription.same(_:);
  v9 = type metadata accessor for _NameMap.NameDescription(0);
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v23 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v23 + v6 + v4) = 2;
  *(_QWORD *)v11 = "altitude";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v23 + v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "semi_major_axis";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v23 + v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "semi_minor_axis";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v23 + v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "orientation_angle";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v23 + v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "uncertain_altitude";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v23 + v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "confidence";
  *((_QWORD *)v21 + 1) = 10;
  v21[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)(v23);
}

uint64_t sub_10019D8FC()
{
  return sub_100008BD0(&qword_1003B0AE8, (uint64_t)qword_100384AC0, (uint64_t)sub_10019D688);
}

uint64_t sub_10019D918@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AE8, (uint64_t)qword_100384AC0, (uint64_t)sub_10019D688, a1);
}

uint64_t sub_10019D934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 20);
          v10 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
          v11 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
          break;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 24);
          goto LABEL_12;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 28);
          goto LABEL_12;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 32);
          goto LABEL_12;
        case 5:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 36);
          goto LABEL_12;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 40);
          goto LABEL_12;
        case 7:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 44);
LABEL_12:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019DAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;

  v5 = v3;
  result = sub_10019DC4C(v5, a1, a2, a3);
  if (!v4)
  {
    v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
    v11 = (unsigned int *)(v5 + v10[6]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v5 + v10[7]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v5 + v10[8]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, 7);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10019DC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

Swift::Int sub_10019DDC4()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, &qword_100375880, (uint64_t)&unk_1002E0288);
}

uint64_t sub_10019DDE0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  v8 = a2 + a1[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[9];
  v11 = a2 + a1[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1[11];
  v14 = a2 + a1[10];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v13;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  return result;
}

uint64_t sub_10019DE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019D934(a1, a2, a3);
}

uint64_t sub_10019DEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019DAB4(a1, a2, a3);
}

uint64_t sub_10019DEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBD8, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0200);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019DF08@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AE8, (uint64_t)qword_100384AC0, (uint64_t)sub_10019D688, a1);
}

uint64_t sub_10019DF24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376448, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0188);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019DF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376448, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0188);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019DFB4()
{
  return &unk_100356C80;
}

unint64_t sub_10019DFC0()
{
  return 0xD000000000000021;
}

uint64_t sub_10019DFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384AD8);
  sub_10000E6A4(v0, (uint64_t)qword_100384AD8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "point";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "inner_radius";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "uncertain_radius";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "offset_angle";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "included_angle";
  *((_QWORD *)v18 + 1) = 14;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "confidence";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019E224()
{
  return sub_100008BD0(&qword_1003B0AF0, (uint64_t)qword_100384AD8, (uint64_t)sub_10019DFDC);
}

uint64_t sub_10019E240@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AF0, (uint64_t)qword_100384AD8, (uint64_t)sub_10019DFDC, a1);
}

uint64_t sub_10019E25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 20);
          v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
          v12 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v12, a2, a3);
          break;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 32);
          goto LABEL_5;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 36);
          goto LABEL_5;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019E3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;

  v5 = v3;
  result = sub_10019E538(v5, a1, a2, a3);
  if (!v4)
  {
    v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
    v11 = (unsigned int *)(v5 + v10[6]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v5 + v10[7]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v5 + v10[8]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10019E538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

Swift::Int sub_10019E6B0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, &qword_100375888, (uint64_t)&unk_1002E03F0);
}

uint64_t sub_10019E6CC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  v8 = a2 + a1[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[9];
  v11 = a2 + a1[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + a1[10];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_10019E770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019E25C(a1, a2, a3);
}

uint64_t sub_10019E784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019E3CC(a1, a2, a3);
}

uint64_t sub_10019E798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBD0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E0368);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019E7E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AF0, (uint64_t)qword_100384AD8, (uint64_t)sub_10019DFDC, a1);
}

uint64_t sub_10019E804(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376460, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E02F0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019E844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376460, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E02F0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019E894()
{
  return &unk_100356C90;
}

unint64_t sub_10019E8A0()
{
  return 0xD000000000000022;
}

uint64_t sub_10019E8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384AF0);
  sub_10000E6A4(v0, (uint64_t)qword_100384AF0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "point";
  *(_QWORD *)(v9 + 8) = 5;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "altitude";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019EA0C()
{
  return sub_100008BD0(&qword_1003B0AF8, (uint64_t)qword_100384AF0, (uint64_t)sub_10019E8BC);
}

uint64_t sub_10019EA28@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0AF8, (uint64_t)qword_100384AF0, (uint64_t)sub_10019E8BC, a1);
}

uint64_t sub_10019EA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EA60(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_10019EA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        v11 = a4(0);
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v4 + *(int *)(v11 + 24), a2, a3);
      }
      else if (result == 1)
      {
        v12 = v4 + *(int *)(a4(0) + 20);
        v13 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
        v14 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v12, v13, v14, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10019EB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EBA8(a1, a2, a3, sub_10019EC5C, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_10019EBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;
  unsigned int *v13;

  v8 = v5;
  result = a4(v8, a1, a2, a3);
  if (!v6)
  {
    v13 = (unsigned int *)(v8 + *(int *)(a5(0) + 24));
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 2, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10019EC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_10019EDD0(uint64_t a1, uint64_t a2)
{
  return sub_1001D3DCC(a1, a2, type metadata accessor for Proto_Gnss_Emergency_PointAltitude) & 1;
}

Swift::Int sub_10019EDF0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PointAltitude, &qword_100375890, (uint64_t)&unk_1002E0558);
}

uint64_t sub_10019EE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  UnknownStorage.init()();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a2 + *(int *)(a1 + 24);
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_10019EE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBC8, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E04D0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019EEC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0AF8, (uint64_t)qword_100384AF0, (uint64_t)sub_10019E8BC, a1);
}

uint64_t sub_10019EEE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376478, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0458);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376478, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0458);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019EF74()
{
  return &unk_100356CA0;
}

unint64_t sub_10019EF80()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10019EF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B08);
  sub_10000E6A4(v0, (uint64_t)qword_100384B08);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "no_of_points";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "points";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019F0F4()
{
  return sub_100008BD0(&qword_1003B0B00, (uint64_t)qword_100384B08, (uint64_t)sub_10019EF9C);
}

uint64_t sub_10019F110@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B00, (uint64_t)qword_100384B08, (uint64_t)sub_10019EF9C, a1);
}

uint64_t sub_10019F12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2D84(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Polygon, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, &qword_100375898, (uint64_t)&unk_1002DFD50);
}

uint64_t sub_10019F160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2EEC(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Polygon, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, &qword_100375898, (uint64_t)&unk_1002DFD50);
}

Swift::Int sub_10019F198()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Polygon, &qword_1003758A0, (uint64_t)&unk_1002E06C0);
}

uint64_t sub_10019F1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBC0, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E0638);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10019F208@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B00, (uint64_t)qword_100384B08, (uint64_t)sub_10019EF9C, a1);
}

uint64_t sub_10019F224(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376490, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E05C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10019F264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376490, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E05C0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10019F2B4()
{
  return &unk_100356CB0;
}

unint64_t sub_10019F2C0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10019F2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B20);
  sub_10000E6A4(v0, (uint64_t)qword_100384B20);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "point_uncertain_circle";
  *(_QWORD *)(v9 + 8) = 22;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "point_uncertain_ellipse";
  *(_QWORD *)(v13 + 8) = 23;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "point_altitude_uncertain_ellipsoid";
  *((_QWORD *)v15 + 1) = 34;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ellipsoid_arc";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "ellipsoid_point";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "point_altitude";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "polygon";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "no_location";
  *((_QWORD *)v25 + 1) = 11;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10019F588()
{
  return sub_100008BD0(&qword_1003B0B08, (uint64_t)qword_100384B20, (uint64_t)sub_10019F2DC);
}

uint64_t sub_10019F5A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B08, (uint64_t)qword_100384B20, (uint64_t)sub_10019F2DC, a1);
}

uint64_t sub_10019F5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v0 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  v3 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  v5 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  v7 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  v13 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  v15 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation;
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  qword_1003B0B18 = v1;
  return result;
}

uint64_t sub_10019F768()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, &qword_1003755E8);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, &qword_1003755F0);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, &qword_1003755F8);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, &qword_100375600);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, &qword_1003755E0);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, &qword_100375608);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, &qword_100375610);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10019F830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001C3364(v13);
    swift_release(v10);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
          v21 = &qword_100376418;
          v22 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle;
          v23 = &unk_1002DFEB8;
          goto LABEL_14;
        case 2:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
          v21 = &qword_100376430;
          v22 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse;
          v23 = &unk_1002E0020;
          goto LABEL_14;
        case 3:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
          v21 = &qword_100376448;
          v22 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid;
          v23 = &unk_1002E0188;
          goto LABEL_14;
        case 4:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
          v21 = &qword_100376460;
          v22 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc;
          v23 = &unk_1002E02F0;
          goto LABEL_14;
        case 5:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
          v21 = &qword_100375898;
          v22 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint;
          v23 = &unk_1002DFD50;
          goto LABEL_14;
        case 6:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
          v21 = &qword_100376478;
          v22 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude;
          v23 = &unk_1002E0458;
          goto LABEL_14;
        case 7:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, v27, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
          v21 = &qword_100376490;
          v22 = type metadata accessor for Proto_Gnss_Emergency_Polygon;
          v23 = &unk_1002E05C0;
LABEL_14:
          v24 = sub_10000FD38(v21, v22, (uint64_t)v23);
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v19, v20, v24, a2, a3);
          goto LABEL_15;
        case 8:
          v26 = v15
              + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation, v27, 33, 0);
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v26, a2, a3);
LABEL_15:
          v5 = v25;
          swift_endAccess(v27);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_10019FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v12;
  _BYTE v13[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20));
  v10 = swift_retain(v9);
  sub_10019FD78(v10, a1, a2, a3);
  if (v4)
    return swift_release(v9);
  sub_10019FF04(v9, a1, a2, a3);
  sub_1001A0090(v9, a1, a2, a3);
  sub_1001A021C(v9, a1, a2, a3);
  sub_1001A03A8(v9, a1, a2, a3);
  sub_1001A0534(v9, a1, a2, a3);
  sub_1001A06C0(v9, a1, a2, a3);
  v12 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation, v13, 0, 0);
  if ((v12[1] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 8, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10019FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755E8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  v15 = sub_10000FD38(&qword_100376418, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFEB8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_10019FF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755F0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755F0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  v15 = sub_10000FD38(&qword_100376430, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0020);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001A0090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755F8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755F8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  v15 = sub_10000FD38(&qword_100376448, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0188);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001A021C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375600);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375600);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  v15 = sub_10000FD38(&qword_100376460, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E02F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001A03A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v15 = sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001A0534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375608);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375608);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375608);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  v15 = sub_10000FD38(&qword_100376478, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0458);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_1001A06C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375610);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375610);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375610);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  v15 = sub_10000FD38(&qword_100376490, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E05C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t sub_1001A084C(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, sub_1001A0874) & 1;
}

uint64_t sub_1001A0874(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  unsigned int v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t *v151;
  char v152;
  int *v153;
  int v154;
  char v155;
  uint64_t v156;
  int *v157;
  int v158;
  int v159;
  char v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215[24];
  char v216[24];
  char v217[24];
  char v218[24];
  char v219[24];
  char v220[24];
  char v221[32];

  v205 = a2;
  v3 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  v164 = *(_QWORD *)(v3 - 8);
  v165 = v3;
  __chkstk_darwin(v3);
  v161 = (uint64_t *)((char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v163 = sub_1000039AC(&qword_10037BF70);
  __chkstk_darwin(v163);
  v166 = (uint64_t)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375610);
  v7 = __chkstk_darwin(v6);
  v177 = (uint64_t *)((char *)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v168 = (uint64_t)&v161 - v9;
  v10 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  v171 = *(_QWORD *)(v10 - 8);
  v172 = v10;
  __chkstk_darwin(v10);
  v162 = (uint64_t)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1000039AC(&qword_10037BF78);
  __chkstk_darwin(v170);
  v173 = (uint64_t)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_100375608);
  v14 = __chkstk_darwin(v13);
  v167 = (uint64_t)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v175 = (uint64_t)&v161 - v16;
  v17 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v179 = *(_QWORD *)(v17 - 8);
  v180 = v17;
  __chkstk_darwin(v17);
  v169 = (uint64_t)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_1000039AC(&qword_10037BF80);
  __chkstk_darwin(v178);
  v181 = (uint64_t)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000039AC(&qword_1003755E0);
  v21 = __chkstk_darwin(v20);
  v174 = (uint64_t)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v194 = (uint64_t)&v161 - v23;
  v24 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  v185 = *(_QWORD *)(v24 - 8);
  v186 = v24;
  __chkstk_darwin(v24);
  v176 = (uint64_t)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_1000039AC(&qword_10037BF88);
  __chkstk_darwin(v184);
  v187 = (uint64_t)&v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000039AC(&qword_100375600);
  v28 = __chkstk_darwin(v27);
  v182 = (uint64_t)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v202 = (uint64_t)&v161 - v30;
  v31 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  v191 = *(_QWORD *)(v31 - 8);
  v192 = v31;
  __chkstk_darwin(v31);
  v183 = (uint64_t)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_1000039AC(&qword_10037BF90);
  __chkstk_darwin(v190);
  v193 = (uint64_t)&v161 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000039AC(&qword_1003755F8);
  v35 = __chkstk_darwin(v34);
  v188 = (uint64_t)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v203 = (uint64_t)&v161 - v37;
  v200 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  v198 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v189 = (uint64_t)&v161 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_1000039AC(&qword_10037BF98);
  __chkstk_darwin(v197);
  v201 = (uint64_t)&v161 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000039AC(&qword_1003755F0);
  v41 = __chkstk_darwin(v40);
  v195 = (uint64_t)&v161 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v199 = (uint64_t)&v161 - v43;
  v44 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v196 = (uint64_t)&v161 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000039AC(&qword_10037BFA0);
  __chkstk_darwin(v47);
  v49 = (char *)&v161 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000039AC(&qword_1003755E8);
  v51 = __chkstk_darwin(v50);
  v204 = (uint64_t)&v161 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v54 = (char *)&v161 - v53;
  v55 = a1;
  v56 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess(v56, v221, 0, 0);
  sub_10000E660(v56, (uint64_t)v54, &qword_1003755E8);
  v57 = v205
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, v220, 0, 0);
  v58 = (uint64_t)&v49[*(int *)(v47 + 48)];
  sub_10000E660((uint64_t)v54, (uint64_t)v49, &qword_1003755E8);
  sub_10000E660(v57, v58, &qword_1003755E8);
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v59((uint64_t)v49, 1, v44) == 1)
  {
    swift_retain(v55);
    swift_retain(v205);
    sub_100015704((uint64_t)v54, &qword_1003755E8);
    v60 = v59(v58, 1, v44);
    v61 = v55;
    if (v60 == 1)
    {
      sub_100015704((uint64_t)v49, &qword_1003755E8);
      goto LABEL_8;
    }
LABEL_6:
    v64 = &qword_10037BFA0;
    v65 = (uint64_t)v49;
LABEL_50:
    sub_100015704(v65, v64);
    goto LABEL_51;
  }
  v62 = v55;
  v63 = v204;
  sub_10000E660((uint64_t)v49, v204, &qword_1003755E8);
  if (v59(v58, 1, v44) == 1)
  {
    v61 = v62;
    swift_retain(v62);
    swift_retain(v205);
    sub_100015704((uint64_t)v54, &qword_1003755E8);
    sub_100004030(v63, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
    goto LABEL_6;
  }
  v66 = v196;
  sub_100003E08(v58, v196, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  v61 = v62;
  swift_retain(v62);
  swift_retain(v205);
  v67 = sub_1001D3DCC(v63, v66, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  sub_100004030(v66, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  sub_100015704((uint64_t)v54, &qword_1003755E8);
  sub_100004030(v63, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  sub_100015704((uint64_t)v49, &qword_1003755E8);
  if ((v67 & 1) == 0)
    goto LABEL_51;
LABEL_8:
  v68 = v61
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, v219, 0, 0);
  v69 = v199;
  sub_10000E660(v68, v199, &qword_1003755F0);
  v70 = v205
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, v218, 0, 0);
  v71 = v201;
  v72 = v201 + *(int *)(v197 + 48);
  sub_10000E660(v69, v201, &qword_1003755F0);
  v73 = v70;
  v74 = v71;
  sub_10000E660(v73, v72, &qword_1003755F0);
  v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 48);
  v76 = v71;
  v77 = v200;
  if (v75(v76, 1, v200) == 1)
  {
    sub_100015704(v69, &qword_1003755F0);
    v78 = v75(v72, 1, v77);
    v79 = v202;
    v80 = v203;
    if (v78 == 1)
    {
      sub_100015704(v74, &qword_1003755F0);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v81 = v195;
  sub_10000E660(v74, v195, &qword_1003755F0);
  v82 = v75(v72, 1, v77);
  v83 = v202;
  v80 = v203;
  if (v82 == 1)
  {
    sub_100015704(v69, &qword_1003755F0);
    sub_100004030(v81, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
LABEL_13:
    v64 = &qword_10037BF98;
    v65 = v74;
    goto LABEL_50;
  }
  v84 = v61;
  v85 = v69;
  v86 = v81;
  v87 = v189;
  sub_100003E08(v72, v189, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  LODWORD(v204) = sub_1001C6ACC(v86, v87);
  sub_100004030(v87, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  v88 = v85;
  v61 = v84;
  v79 = v83;
  sub_100015704(v88, &qword_1003755F0);
  sub_100004030(v86, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  sub_100015704(v74, &qword_1003755F0);
  if ((v204 & 1) == 0)
    goto LABEL_51;
LABEL_15:
  v89 = v61
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, v217, 0, 0);
  sub_10000E660(v89, v80, &qword_1003755F8);
  v90 = v205
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, v216, 0, 0);
  v91 = v193;
  v92 = v193 + *(int *)(v190 + 48);
  sub_10000E660(v80, v193, &qword_1003755F8);
  v93 = v90;
  v94 = v91;
  sub_10000E660(v93, v92, &qword_1003755F8);
  v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
  v96 = v91;
  v97 = v192;
  if (v95(v96, 1, v192) == 1)
  {
    sub_100015704(v80, &qword_1003755F8);
    v98 = v95(v92, 1, v97);
    v99 = v194;
    if (v98 == 1)
    {
      sub_100015704(v94, &qword_1003755F8);
      goto LABEL_22;
    }
LABEL_20:
    v64 = &qword_10037BF90;
LABEL_49:
    v65 = v94;
    goto LABEL_50;
  }
  v100 = v188;
  sub_10000E660(v94, v188, &qword_1003755F8);
  v101 = v95(v92, 1, v97);
  v99 = v194;
  if (v101 == 1)
  {
    sub_100015704(v203, &qword_1003755F8);
    sub_100004030(v100, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
    goto LABEL_20;
  }
  v102 = v183;
  sub_100003E08(v92, v183, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  v103 = sub_1001C5870(v100, v102);
  sub_100004030(v102, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  sub_100015704(v203, &qword_1003755F8);
  sub_100004030(v100, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  sub_100015704(v94, &qword_1003755F8);
  if ((v103 & 1) == 0)
    goto LABEL_51;
LABEL_22:
  v104 = v61
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, v215, 0, 0);
  sub_10000E660(v104, v79, &qword_100375600);
  v105 = v205
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, &v214, 0, 0);
  v106 = v187;
  v107 = v187 + *(int *)(v184 + 48);
  sub_10000E660(v79, v187, &qword_100375600);
  v108 = v105;
  v94 = v106;
  sub_10000E660(v108, v107, &qword_100375600);
  v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48);
  v110 = v106;
  v111 = v186;
  if (v109(v110, 1, v186) == 1)
  {
    sub_100015704(v79, &qword_100375600);
    if (v109(v107, 1, v111) == 1)
    {
      sub_100015704(v94, &qword_100375600);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v112 = v99;
  v113 = v182;
  sub_10000E660(v94, v182, &qword_100375600);
  if (v109(v107, 1, v111) == 1)
  {
    sub_100015704(v202, &qword_100375600);
    sub_100004030(v113, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
LABEL_27:
    v64 = &qword_10037BF88;
    goto LABEL_49;
  }
  v114 = v176;
  sub_100003E08(v107, v176, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  v115 = sub_1001D1394(v113, v114);
  sub_100004030(v114, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  sub_100015704(v202, &qword_100375600);
  sub_100004030(v113, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  sub_100015704(v94, &qword_100375600);
  v99 = v112;
  if ((v115 & 1) == 0)
    goto LABEL_51;
LABEL_29:
  v116 = v61
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, &v213, 0, 0);
  sub_10000E660(v116, v99, &qword_1003755E0);
  v117 = v205
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, &v212, 0, 0);
  v118 = v181;
  v119 = v181 + *(int *)(v178 + 48);
  sub_10000E660(v99, v181, &qword_1003755E0);
  v120 = v117;
  v94 = v118;
  sub_10000E660(v120, v119, &qword_1003755E0);
  v121 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48);
  v122 = v118;
  v123 = v180;
  if (v121(v122, 1, v180) == 1)
  {
    sub_100015704(v99, &qword_1003755E0);
    if (v121(v119, 1, v123) == 1)
    {
      sub_100015704(v94, &qword_1003755E0);
      v124 = v177;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  v125 = v174;
  sub_10000E660(v94, v174, &qword_1003755E0);
  v126 = v121(v119, 1, v123);
  v124 = v177;
  if (v126 == 1)
  {
    sub_100015704(v194, &qword_1003755E0);
    sub_100004030(v125, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
LABEL_34:
    v64 = &qword_10037BF80;
    goto LABEL_49;
  }
  v127 = v169;
  sub_100003E08(v119, v169, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  v128 = sub_1001D3C4C(v125, v127, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  sub_100004030(v127, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  sub_100015704(v194, &qword_1003755E0);
  sub_100004030(v125, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  sub_100015704(v94, &qword_1003755E0);
  if ((v128 & 1) == 0)
    goto LABEL_51;
LABEL_36:
  v129 = v61
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, &v211, 0, 0);
  v130 = v175;
  sub_10000E660(v129, v175, &qword_100375608);
  v131 = v205
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, &v210, 0, 0);
  v132 = v173;
  v133 = v173 + *(int *)(v170 + 48);
  sub_10000E660(v130, v173, &qword_100375608);
  v134 = v131;
  v94 = v132;
  sub_10000E660(v134, v133, &qword_100375608);
  v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  v136 = v132;
  v137 = v172;
  if (v135(v136, 1, v172) == 1)
  {
    sub_100015704(v130, &qword_100375608);
    if (v135(v133, 1, v137) == 1)
    {
      sub_100015704(v94, &qword_100375608);
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  v138 = v167;
  sub_10000E660(v94, v167, &qword_100375608);
  if (v135(v133, 1, v137) == 1)
  {
    sub_100015704(v175, &qword_100375608);
    sub_100004030(v138, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
LABEL_41:
    v64 = &qword_10037BF78;
    goto LABEL_49;
  }
  v139 = v162;
  sub_100003E08(v133, v162, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  v140 = sub_1001D3DCC(v138, v139, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  sub_100004030(v139, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  sub_100015704(v175, &qword_100375608);
  sub_100004030(v138, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  sub_100015704(v94, &qword_100375608);
  if ((v140 & 1) == 0)
  {
LABEL_51:
    swift_release(v61);
    swift_release(v205);
    return 0;
  }
LABEL_43:
  v141 = v61
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, &v209, 0, 0);
  v142 = v168;
  sub_10000E660(v141, v168, &qword_100375610);
  v143 = v205
       + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, &v208, 0, 0);
  v144 = v166;
  v145 = v166 + *(int *)(v163 + 48);
  sub_10000E660(v142, v166, &qword_100375610);
  v146 = v143;
  v94 = v144;
  sub_10000E660(v146, v145, &qword_100375610);
  v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
  v148 = v144;
  v149 = v165;
  if (v147(v148, 1, v165) == 1)
  {
    sub_100015704(v142, &qword_100375610);
    if (v147(v145, 1, v149) == 1)
    {
      sub_100015704(v94, &qword_100375610);
      goto LABEL_55;
    }
    goto LABEL_48;
  }
  sub_10000E660(v94, (uint64_t)v124, &qword_100375610);
  if (v147(v145, 1, v149) == 1)
  {
    sub_100015704(v168, &qword_100375610);
    sub_100004030((uint64_t)v124, type metadata accessor for Proto_Gnss_Emergency_Polygon);
LABEL_48:
    v64 = &qword_10037BF70;
    goto LABEL_49;
  }
  v151 = v161;
  sub_100003E08(v145, (uint64_t)v161, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  v152 = sub_1001D4648(v124, v151);
  sub_100004030((uint64_t)v151, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  sub_100015704(v168, &qword_100375610);
  sub_100004030((uint64_t)v124, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  sub_100015704(v94, &qword_100375610);
  if ((v152 & 1) == 0)
    goto LABEL_51;
LABEL_55:
  v153 = (int *)(v61
               + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
  swift_beginAccess(v61+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation, &v207, 0, 0);
  v154 = *v153;
  v155 = *((_BYTE *)v153 + 4);
  swift_release(v61);
  v156 = v205;
  v157 = (int *)(v205
               + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
  swift_beginAccess(v205+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation, &v206, 0, 0);
  v158 = *v157;
  v159 = *((unsigned __int8 *)v157 + 4);
  swift_release(v156);
  if ((v155 & 1) != 0)
  {
    if (v159)
      return 1;
  }
  else
  {
    if (v154 == v158)
      v160 = v159;
    else
      v160 = 1;
    if ((v160 & 1) == 0)
      return 1;
  }
  return 0;
}

Swift::Int sub_1001A1B9C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_1003758A8, (uint64_t)&unk_1002E0828);
}

uint64_t sub_1001A1BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0B10, &qword_1003B0B18, (uint64_t)sub_10019F5C0, a2);
}

uint64_t sub_1001A1BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019F830(a1, a2, a3);
}

uint64_t sub_1001A1BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019FBBC(a1, a2, a3);
}

uint64_t sub_1001A1BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBB8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E07A0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A1C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B08, (uint64_t)qword_100384B20, (uint64_t)sub_10019F2DC, a1);
}

uint64_t sub_1001A1C68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003764A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0728);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003764A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0728);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A1CF8()
{
  return &unk_100356CC0;
}

unint64_t sub_1001A1D04()
{
  return 0xD000000000000020;
}

uint64_t sub_1001A1D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B38);
  sub_10000E6A4(v0, (uint64_t)qword_100384B38);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "shape_type";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "shape";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A1E78()
{
  return sub_100008BD0(&qword_1003B0B20, (uint64_t)qword_100384B38, (uint64_t)sub_1001A1D20);
}

uint64_t sub_1001A1E94@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B20, (uint64_t)qword_100384B38, (uint64_t)sub_1001A1D20, a1);
}

uint64_t sub_1001A1EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 24);
        v10 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
        v11 = sub_10000FD38(&qword_1003764A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0728);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
      }
      else if (result == 1)
      {
        v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 20);
        v13 = sub_10020C2AC();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_ShapeType, v13, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A1FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v10;
  char v11;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 9)
  {
    v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v10 = sub_10020C2AC();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v11, 1, &type metadata for Proto_Gnss_Emergency_ShapeType, v10, a2, a3);
  }
  if (!v4)
  {
    sub_1001A20B0(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001A20B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375618);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375618);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375618);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
  v15 = sub_10000FD38(&qword_1003764A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0728);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
}

Swift::Int sub_1001A2228()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_LocEstimate, &qword_1003758B0, (uint64_t)&unk_1002E0990);
}

uint64_t sub_1001A2244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 9, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, a2);
}

uint64_t sub_1001A2254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A1EB0(a1, a2, a3);
}

uint64_t sub_1001A2268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A1FE8(a1, a2, a3);
}

uint64_t sub_1001A227C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBB0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0908);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A22CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B20, (uint64_t)qword_100384B38, (uint64_t)sub_1001A1D20, a1);
}

uint64_t sub_1001A22E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003764C0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0890);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A2328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003764C0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0890);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A2378()
{
  return &unk_100356CD0;
}

unint64_t sub_1001A2384()
{
  return 0xD000000000000027;
}

uint64_t sub_1001A23A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B50);
  sub_10000E6A4(v0, (uint64_t)qword_100384B50);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "bearing";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "horizontal_speed";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A24F8()
{
  return sub_100008BD0(&qword_1003B0B28, (uint64_t)qword_100384B50, (uint64_t)sub_1001A23A0);
}

uint64_t sub_1001A2514@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B28, (uint64_t)qword_100384B50, (uint64_t)sub_1001A23A0, a1);
}

uint64_t sub_1001A2530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001A2554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001A2578(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity) & 1;
}

Swift::Int sub_1001A2598()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, &qword_1003758B8, (uint64_t)&unk_1002E0AF8);
}

uint64_t sub_1001A25B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBA8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E0A70);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A2604@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B28, (uint64_t)qword_100384B50, (uint64_t)sub_1001A23A0, a1);
}

uint64_t sub_1001A2620(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003764D8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E09F8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A2660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003764D8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E09F8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A26B4()
{
  return &unk_100356CE0;
}

unint64_t sub_1001A26C0()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1001A26DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B68);
  sub_10000E6A4(v0, (uint64_t)qword_100384B68);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "bearing";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "horizontal_speed";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "vertical_speed";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "vertical_speed_direction";
  *((_QWORD *)v16 + 1) = 24;
  v16[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A28A8()
{
  return sub_100008BD0(&qword_1003B0B30, (uint64_t)qword_100384B68, (uint64_t)sub_1001A26DC);
}

uint64_t sub_1001A28C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B30, (uint64_t)qword_100384B68, (uint64_t)sub_1001A26DC, a1);
}

uint64_t sub_1001A28E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE6D4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001A28FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE7E8(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001A2918(uint64_t a1, uint64_t a2)
{
  return sub_1001C6F68(a1, a2, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity) & 1;
}

Swift::Int sub_1001A2938()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, &qword_1003758C0, (uint64_t)&unk_1002E0C60);
}

uint64_t sub_1001A2958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BBA0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0BD8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A29A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B30, (uint64_t)qword_100384B68, (uint64_t)sub_1001A26DC, a1);
}

uint64_t sub_1001A29C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003764F0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0B60);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A2A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003764F0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0B60);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A2A54()
{
  return &unk_100356CF0;
}

unint64_t sub_1001A2A60()
{
  return 0xD000000000000031;
}

uint64_t sub_1001A2A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B80);
  sub_10000E6A4(v0, (uint64_t)qword_100384B80);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "bearing";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "horizontal_speed";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "uncertainty_speed";
  *(_QWORD *)(v14 + 8) = 17;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A2C1C()
{
  return sub_100008BD0(&qword_1003B0B38, (uint64_t)qword_100384B80, (uint64_t)sub_1001A2A7C);
}

uint64_t sub_1001A2C38@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B38, (uint64_t)qword_100384B80, (uint64_t)sub_1001A2A7C, a1);
}

uint64_t sub_1001A2C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001971A4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001A2C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197288(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001A2C8C(uint64_t a1, uint64_t a2)
{
  return sub_1001D47B8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity) & 1;
}

Swift::Int sub_1001A2CAC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, &qword_1003758C8, (uint64_t)&unk_1002E0DC8);
}

uint64_t sub_1001A2CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB98, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0D40);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A2D18@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B38, (uint64_t)qword_100384B80, (uint64_t)sub_1001A2A7C, a1);
}

uint64_t sub_1001A2D34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376508, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0CC8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A2D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376508, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0CC8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A2DC4()
{
  return &unk_100356D00;
}

unint64_t sub_1001A2DD0()
{
  return 0xD000000000000035;
}

uint64_t sub_1001A2DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384B98);
  sub_10000E6A4(v0, (uint64_t)qword_100384B98);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "bearing";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "horizontal_speed";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "vertical_speed";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "vertical_speed_direction";
  *((_QWORD *)v16 + 1) = 24;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "horiz_uncertainty_speed";
  *((_QWORD *)v18 + 1) = 23;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "vert_uncertainty_speed";
  *((_QWORD *)v20 + 1) = 22;
  v20[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A302C()
{
  return sub_100008BD0(&qword_1003B0B40, (uint64_t)qword_100384B98, (uint64_t)sub_1001A2DEC);
}

uint64_t sub_1001A3048@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B40, (uint64_t)qword_100384B98, (uint64_t)sub_1001A2DEC, a1);
}

uint64_t sub_1001A3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 20);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 32);
          goto LABEL_5;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 36);
          goto LABEL_5;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A3170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001A32F8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, &qword_1003758D0, (uint64_t)&unk_1002E0F30);
}

uint64_t sub_1001A3314@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_1001A3390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A3064(a1, a2, a3);
}

uint64_t sub_1001A33A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A3170(a1, a2, a3);
}

uint64_t sub_1001A33B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB90, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0EA8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A3408@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B40, (uint64_t)qword_100384B98, (uint64_t)sub_1001A2DEC, a1);
}

uint64_t sub_1001A3424(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376520, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0E30);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A3464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376520, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0E30);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A34B4()
{
  return &unk_100356D10;
}

unint64_t sub_1001A34C0()
{
  return 0xD000000000000021;
}

uint64_t sub_1001A34DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384BB0);
  sub_10000E6A4(v0, (uint64_t)qword_100384BB0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "_horizontal";
  *(_QWORD *)(v9 + 8) = 11;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "_horiz_with_vert";
  *(_QWORD *)(v13 + 8) = 16;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "_horiz_with_uncertainty";
  *((_QWORD *)v15 + 1) = 23;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "_horiz_with_vert_uncertainty";
  *((_QWORD *)v17 + 1) = 28;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A369C()
{
  return sub_100008BD0(&qword_1003B0B48, (uint64_t)qword_100384BB0, (uint64_t)sub_1001A34DC);
}

uint64_t sub_1001A36B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B48, (uint64_t)qword_100384BB0, (uint64_t)sub_1001A34DC, a1);
}

uint64_t sub_1001A36D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 20);
          v10 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
          v11 = &qword_1003764D8;
          v12 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity;
          v13 = &unk_1002E09F8;
          goto LABEL_5;
        case 2:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 24);
          v10 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
          v11 = &qword_1003764F0;
          v12 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity;
          v13 = &unk_1002E0B60;
          goto LABEL_5;
        case 3:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 28);
          v10 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
          v11 = &qword_100376508;
          v12 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity;
          v13 = &unk_1002E0CC8;
          goto LABEL_5;
        case 4:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 32);
          v10 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
          v11 = &qword_100376520;
          v12 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity;
          v13 = &unk_1002E0E30;
LABEL_5:
          v14 = sub_10000FD38(v11, v12, (uint64_t)v13);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v14, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A3880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_1001A391C(v3, a1, a2, a3);
  if (!v4)
  {
    sub_1001A3A90(v3, a1, a2, a3);
    sub_1001A3C04(v3, a1, a2, a3);
    sub_1001A3D78(v3, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001A391C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375620);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100375620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375620);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  v15 = sub_10000FD38(&qword_1003764D8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E09F8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001A3A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375628);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375628);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375628);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  v15 = sub_10000FD38(&qword_1003764F0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0B60);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001A3C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375630);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_100375630);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375630);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
  v15 = sub_10000FD38(&qword_100376508, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0CC8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001A3D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375638);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_10000E660(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_100375638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375638);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  v15 = sub_10000FD38(&qword_100376520, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0E30);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

Swift::Int sub_1001A3EF0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_1003758D8, (uint64_t)&unk_1002E1098);
}

uint64_t sub_1001A3F0C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + a1[6];
  v7 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a2 + a1[7];
  v9 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a2 + a1[8];
  v11 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
}

uint64_t sub_1001A3FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A36D4(a1, a2, a3);
}

uint64_t sub_1001A3FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A3880(a1, a2, a3);
}

uint64_t sub_1001A400C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB88, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E1010);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A405C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B48, (uint64_t)qword_100384BB0, (uint64_t)sub_1001A34DC, a1);
}

uint64_t sub_1001A4078(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376538, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E0F98);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A40B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376538, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E0F98);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A4108()
{
  return &unk_100356D20;
}

unint64_t sub_1001A4114()
{
  return 0xD000000000000025;
}

uint64_t sub_1001A4130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384BC8);
  sub_10000E6A4(v0, (uint64_t)qword_100384BC8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "velocity_type";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "velocity";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A4288()
{
  return sub_100008BD0(&qword_1003B0B50, (uint64_t)qword_100384BC8, (uint64_t)sub_1001A4130);
}

uint64_t sub_1001A42A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B50, (uint64_t)qword_100384BC8, (uint64_t)sub_1001A4130, a1);
}

uint64_t sub_1001A42C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0) + 24);
        v10 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
        v11 = sub_10000FD38(&qword_100376538, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E0F98);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
      }
      else if (result == 1)
      {
        v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0) + 20);
        v13 = sub_10020C268();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_VelocityType, v13, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A43F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B51E4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t (*)(void))sub_10020C268, (uint64_t)&type metadata for Proto_Gnss_Emergency_VelocityType, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A442C);
}

uint64_t sub_1001A442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375640);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375640);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375640);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
  v15 = sub_10000FD38(&qword_100376538, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E0F98);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
}

Swift::Int sub_1001A45A4()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, &qword_1003758E0, (uint64_t)&unk_1002E1200);
}

uint64_t sub_1001A45C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 6, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, a2);
}

uint64_t sub_1001A45D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A42C0(a1, a2, a3);
}

uint64_t sub_1001A45E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB80, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1178);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A4634@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B50, (uint64_t)qword_100384BC8, (uint64_t)sub_1001A4130, a1);
}

uint64_t sub_1001A4650(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376550, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1100);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A4690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376550, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1100);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A46E0()
{
  return &unk_100356D30;
}

unint64_t sub_1001A46EC()
{
  return 0xD000000000000023;
}

uint64_t sub_1001A4708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384BE0);
  sub_10000E6A4(v0, (uint64_t)qword_100384BE0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "result";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "response_type";
  *(_QWORD *)(v13 + 8) = 13;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "session_info";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "location_info";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "ganss_location_info";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "loc_estimate";
  *((_QWORD *)v21 + 1) = 12;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "velocity_estimate";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "technology_source";
  *((_QWORD *)v25 + 1) = 17;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A49BC()
{
  return sub_100008BD0(&qword_1003B0B58, (uint64_t)qword_100384BE0, (uint64_t)sub_1001A4708);
}

uint64_t sub_1001A49D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B58, (uint64_t)qword_100384BE0, (uint64_t)sub_1001A4708, a1);
}

uint64_t sub_1001A49F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 9;
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v3 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  v5 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  v7 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  v9 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  v11 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v13 = v1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  qword_1003B0B68 = v1;
  return result;
}

uint64_t sub_1001A4B4C()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &qword_100375648);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, &qword_100375650);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, &qword_100375658);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, &qword_100375660);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, &qword_100375668);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001A4BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001C3ACC(v13);
    swift_release(v10);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v29 = v15 + 20;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v28, 33, 0);
          v19 = sub_10020C5DC();
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15 + 16, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v19, a2, a3);
          goto LABEL_18;
        case 2:
          v21 = v29;
          goto LABEL_17;
        case 3:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v28, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
          v24 = &qword_100376290;
          v25 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo;
          v26 = &unk_1002DE6D0;
          goto LABEL_15;
        case 4:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, v28, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
          v24 = &qword_100376350;
          v25 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo;
          v26 = &unk_1002DF210;
          goto LABEL_15;
        case 5:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, v28, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
          v24 = &qword_1003763F0;
          v25 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo;
          v26 = &unk_1002DFBE8;
          goto LABEL_15;
        case 6:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, v28, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
          v24 = &qword_1003764C0;
          v25 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate;
          v26 = &unk_1002E0890;
          goto LABEL_15;
        case 7:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, v28, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
          v24 = &qword_100376550;
          v25 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate;
          v26 = &unk_1002E1100;
LABEL_15:
          v27 = sub_10000FD38(v24, v25, (uint64_t)v26);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v22, v23, v27, a2, a3);
          goto LABEL_18;
        case 8:
          v21 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource;
LABEL_17:
          swift_beginAccess(v21, v28, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v21, a2, a3);
LABEL_18:
          v5 = v20;
          swift_endAccess(v28);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001A4F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unsigned int *v12;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v13, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 9)
  {
    v15[0] = *(_BYTE *)(v9 + 16);
    v10 = sub_10020C5DC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v15, 1, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 20, v14, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2, a2, a3);
  sub_1001A5148(v9, a1, a2, a3);
  sub_1001A52D4(v9, a1, a2, a3);
  sub_1001A5460(v9, a1, a2, a3);
  sub_1001A55EC(v9, a1, a2, a3);
  sub_1001A5778(v9, a1, a2, a3);
  v12 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource, v15, 0, 0);
  if ((v12[1] & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 8, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001A5148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375648);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  v15 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001A52D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375650);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375650);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375650);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
  v15 = sub_10000FD38(&qword_100376350, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF210);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001A5460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375658);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375658);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
  v15 = sub_10000FD38(&qword_1003763F0, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFBE8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001A55EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375660);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375660);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
  v15 = sub_10000FD38(&qword_1003764C0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0890);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
}

uint64_t sub_1001A5778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375668);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375668);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
  v15 = sub_10000FD38(&qword_100376550, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1100);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
}

uint64_t sub_1001A5904(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t (*)(uint64_t, uint64_t))sub_1001A592C) & 1;
}

BOOL sub_1001A592C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  _BOOL8 result;
  int v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char v123;
  int *v124;
  int v125;
  char v126;
  int *v127;
  int v128;
  int v129;
  char v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173[24];
  char v174[24];
  char v175[24];
  char v176[24];
  char v177[24];
  char v178[24];
  char v179[32];

  v4 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  v138 = *(_QWORD *)(v4 - 8);
  v139 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1000039AC(&qword_10037BF20);
  __chkstk_darwin(v137);
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000039AC(&qword_100375668);
  v10 = __chkstk_darwin(v9);
  v135 = (uint64_t)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v142 = (char *)&v131 - v12;
  v13 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  v144 = *(_QWORD *)(v13 - 8);
  v145 = v13;
  __chkstk_darwin(v13);
  v136 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_1000039AC(&qword_10037BF28);
  __chkstk_darwin(v143);
  v146 = (uint64_t)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000039AC(&qword_100375660);
  v17 = __chkstk_darwin(v16);
  v140 = (uint64_t)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v159 = (uint64_t)&v131 - v19;
  v20 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  v150 = *(_QWORD *)(v20 - 8);
  v151 = v20;
  __chkstk_darwin(v20);
  v141 = (uint64_t)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1000039AC(&qword_10037BF30);
  __chkstk_darwin(v149);
  v152 = (uint64_t)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000039AC(&qword_100375658);
  v24 = __chkstk_darwin(v23);
  v147 = (uint64_t)&v131 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v160 = (uint64_t)&v131 - v26;
  v157 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  v155 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v148 = (uint64_t)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1000039AC(&qword_10037BF38);
  __chkstk_darwin(v154);
  v158 = (uint64_t)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000039AC(&qword_100375650);
  v30 = __chkstk_darwin(v29);
  v162 = (char *)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v156 = (uint64_t)&v131 - v32;
  v163 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v33 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v153 = (uint64_t)&v131 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1000039AC(&qword_10037BE60);
  __chkstk_darwin(v35);
  v37 = (char *)&v131 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000039AC(&qword_100375648);
  v39 = __chkstk_darwin(v38);
  v161 = (uint64_t)&v131 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v42 = (char *)&v131 - v41;
  swift_beginAccess(a1 + 16, v179, 0, 0);
  v43 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v178, 0, 0);
  v44 = *(unsigned __int8 *)(a2 + 16);
  if (v43 == 9)
  {
    if (v44 != 9)
      return 0;
LABEL_6:
    v132 = v6;
    v133 = v8;
    swift_beginAccess(a1 + 20, v177, 0, 0);
    v46 = *(_DWORD *)(a1 + 20);
    v47 = a1;
    v48 = *(_BYTE *)(a1 + 24);
    swift_beginAccess(a2 + 20, v176, 0, 0);
    v134 = a2;
    v49 = *(_BYTE *)(a2 + 24);
    if ((v48 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (v46 != *(_DWORD *)(a2 + 20))
        v49 = 1;
      if ((v49 & 1) != 0)
        return 0;
    }
    v50 = v47;
    v51 = v47
        + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v47+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v175, 0, 0);
    sub_10000E660(v51, (uint64_t)v42, &qword_100375648);
    v52 = v134;
    v53 = v134
        + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v134+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v174, 0, 0);
    v54 = (uint64_t)&v37[*(int *)(v35 + 48)];
    sub_10000E660((uint64_t)v42, (uint64_t)v37, &qword_100375648);
    sub_10000E660(v53, v54, &qword_100375648);
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    v56 = v163;
    if (v55((uint64_t)v37, 1, v163) == 1)
    {
      swift_retain(v50);
      swift_retain(v52);
      sub_100015704((uint64_t)v42, &qword_100375648);
      v57 = v55(v54, 1, v56);
      v58 = v52;
      v59 = (uint64_t)v162;
      if (v57 == 1)
      {
        sub_100015704((uint64_t)v37, &qword_100375648);
        goto LABEL_19;
      }
    }
    else
    {
      v60 = v161;
      sub_10000E660((uint64_t)v37, v161, &qword_100375648);
      v61 = v55(v54, 1, v56);
      v59 = (uint64_t)v162;
      if (v61 != 1)
      {
        v64 = v54;
        v65 = v60;
        v66 = v153;
        sub_100003E08(v64, v153, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        swift_retain(v50);
        v58 = v134;
        swift_retain(v134);
        v67 = sub_1001D24EC(v65, v66);
        sub_100004030(v66, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v42, &qword_100375648);
        sub_100004030(v65, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v37, &qword_100375648);
        if ((v67 & 1) == 0)
          goto LABEL_41;
LABEL_19:
        v68 = v50
            + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
        swift_beginAccess(v50+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, v173, 0, 0);
        v69 = v156;
        sub_10000E660(v68, v156, &qword_100375650);
        v70 = v58
            + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
        swift_beginAccess(v58+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, &v172, 0, 0);
        v71 = v158;
        v72 = v158 + *(int *)(v154 + 48);
        sub_10000E660(v69, v158, &qword_100375650);
        v73 = v70;
        v74 = v71;
        sub_10000E660(v73, v72, &qword_100375650);
        v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
        v76 = v71;
        v77 = v157;
        if (v75(v76, 1, v157) == 1)
        {
          sub_100015704(v69, &qword_100375650);
          v78 = v75(v72, 1, v77);
          v79 = v159;
          v80 = v160;
          if (v78 == 1)
          {
            sub_100015704(v74, &qword_100375650);
LABEL_26:
            v88 = v50
                + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
            swift_beginAccess(v50+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, &v171, 0, 0);
            sub_10000E660(v88, v80, &qword_100375658);
            v89 = v58
                + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
            swift_beginAccess(v58+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, &v170, 0, 0);
            v90 = v80;
            v91 = v152;
            v92 = v152 + *(int *)(v149 + 48);
            sub_10000E660(v90, v152, &qword_100375658);
            v93 = v89;
            v74 = v91;
            sub_10000E660(v93, v92, &qword_100375658);
            v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
            v95 = v91;
            v96 = v151;
            if (v94(v95, 1, v151) == 1)
            {
              sub_100015704(v90, &qword_100375658);
              if (v94(v92, 1, v96) == 1)
              {
                sub_100015704(v74, &qword_100375658);
LABEL_33:
                v100 = v50
                     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
                swift_beginAccess(v50+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, &v169, 0, 0);
                sub_10000E660(v100, v79, &qword_100375660);
                v101 = v58
                     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
                swift_beginAccess(v58+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, &v168, 0, 0);
                v102 = v79;
                v103 = v146;
                v104 = v146 + *(int *)(v143 + 48);
                sub_10000E660(v102, v146, &qword_100375660);
                v105 = v101;
                v74 = v103;
                sub_10000E660(v105, v104, &qword_100375660);
                v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
                v107 = v103;
                v108 = v145;
                if (v106(v107, 1, v145) == 1)
                {
                  sub_100015704(v102, &qword_100375660);
                  v109 = v106(v104, 1, v108);
                  v110 = (uint64_t)v142;
                  if (v109 == 1)
                  {
                    sub_100015704(v74, &qword_100375660);
LABEL_45:
                    v115 = v50
                         + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
                    swift_beginAccess(v50+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, &v167, 0, 0);
                    sub_10000E660(v115, v110, &qword_100375668);
                    v116 = v58
                         + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
                    swift_beginAccess(v58+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, &v166, 0, 0);
                    v117 = (uint64_t)v133;
                    v118 = (uint64_t)&v133[*(int *)(v137 + 48)];
                    sub_10000E660(v110, (uint64_t)v133, &qword_100375668);
                    sub_10000E660(v116, v118, &qword_100375668);
                    v119 = v139;
                    v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
                    if (v120(v117, 1, v139) == 1)
                    {
                      sub_100015704(v110, &qword_100375668);
                      if (v120(v118, 1, v119) == 1)
                      {
                        sub_100015704((uint64_t)v133, &qword_100375668);
LABEL_52:
                        v124 = (int *)(v50
                                     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
                        swift_beginAccess(v50+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource, &v165, 0, 0);
                        v125 = *v124;
                        v126 = *((_BYTE *)v124 + 4);
                        swift_release(v50);
                        v127 = (int *)(v58
                                     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
                        swift_beginAccess(v58+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource, &v164, 0, 0);
                        v128 = *v127;
                        v129 = *((unsigned __int8 *)v127 + 4);
                        swift_release(v58);
                        if ((v126 & 1) == 0)
                        {
                          if (v125 == v128)
                            v130 = v129;
                          else
                            v130 = 1;
                          return (v130 & 1) == 0;
                        }
                        return v129 != 0;
                      }
                      goto LABEL_50;
                    }
                    v121 = v135;
                    sub_10000E660(v117, v135, &qword_100375668);
                    if (v120(v118, 1, v119) == 1)
                    {
                      sub_100015704(v110, &qword_100375668);
                      sub_100004030(v121, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
LABEL_50:
                      v62 = &qword_10037BF20;
                      v63 = (uint64_t)v133;
                      goto LABEL_40;
                    }
                    v122 = (uint64_t)v132;
                    sub_100003E08(v118, (uint64_t)v132, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
                    v123 = sub_1001C97E8(v121, v122);
                    sub_100004030(v122, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
                    sub_100015704(v110, &qword_100375668);
                    sub_100004030(v121, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
                    sub_100015704(v117, &qword_100375668);
                    if ((v123 & 1) != 0)
                      goto LABEL_52;
LABEL_41:
                    swift_release(v50);
                    swift_release(v58);
                    return 0;
                  }
                }
                else
                {
                  v111 = v140;
                  sub_10000E660(v74, v140, &qword_100375660);
                  v112 = v106(v104, 1, v108);
                  v110 = (uint64_t)v142;
                  if (v112 != 1)
                  {
                    v113 = v136;
                    sub_100003E08(v104, v136, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
                    v114 = sub_1001D268C(v111, v113);
                    sub_100004030(v113, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
                    sub_100015704(v159, &qword_100375660);
                    sub_100004030(v111, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
                    sub_100015704(v74, &qword_100375660);
                    if ((v114 & 1) == 0)
                      goto LABEL_41;
                    goto LABEL_45;
                  }
                  sub_100015704(v159, &qword_100375660);
                  sub_100004030(v111, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
                }
                v62 = &qword_10037BF28;
                goto LABEL_39;
              }
            }
            else
            {
              v97 = v147;
              sub_10000E660(v74, v147, &qword_100375658);
              if (v94(v92, 1, v96) != 1)
              {
                v98 = v141;
                sub_100003E08(v92, v141, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
                v99 = sub_1001CDCD4(v97, v98);
                sub_100004030(v98, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
                sub_100015704(v160, &qword_100375658);
                sub_100004030(v97, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
                sub_100015704(v74, &qword_100375658);
                if ((v99 & 1) == 0)
                  goto LABEL_41;
                goto LABEL_33;
              }
              sub_100015704(v160, &qword_100375658);
              sub_100004030(v97, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
            }
            v62 = &qword_10037BF30;
LABEL_39:
            v63 = v74;
            goto LABEL_40;
          }
        }
        else
        {
          sub_10000E660(v74, v59, &qword_100375650);
          v81 = v75(v72, 1, v77);
          v82 = v159;
          v80 = v160;
          if (v81 != 1)
          {
            v83 = v69;
            v84 = v59;
            v85 = v148;
            sub_100003E08(v72, v148, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
            v86 = sub_1001D0D7C(v84, v85);
            sub_100004030(v85, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
            v87 = v83;
            v79 = v82;
            sub_100015704(v87, &qword_100375650);
            sub_100004030(v84, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
            sub_100015704(v74, &qword_100375650);
            v58 = v134;
            if ((v86 & 1) == 0)
              goto LABEL_41;
            goto LABEL_26;
          }
          sub_100015704(v69, &qword_100375650);
          sub_100004030(v59, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
          v58 = v134;
        }
        v62 = &qword_10037BF38;
        goto LABEL_39;
      }
      swift_retain(v50);
      v58 = v134;
      swift_retain(v134);
      sub_100015704((uint64_t)v42, &qword_100375648);
      sub_100004030(v60, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
    }
    v62 = &qword_10037BE60;
    v63 = (uint64_t)v37;
LABEL_40:
    sub_100015704(v63, v62);
    goto LABEL_41;
  }
  result = 0;
  if (v44 != 9 && v43 == v44)
    goto LABEL_6;
  return result;
}

Swift::Int sub_1001A67C4()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_PositionReport, &qword_1003758E8, (uint64_t)&unk_1002E1368);
}

uint64_t sub_1001A67E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0B60, &qword_1003B0B68, (uint64_t)sub_1001A49F4, a2);
}

uint64_t sub_1001A67FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A4BE4(a1, a2, a3);
}

uint64_t sub_1001A6810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A4F34(a1, a2, a3);
}

uint64_t sub_1001A6824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB78, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E12E0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A6874@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B58, (uint64_t)qword_100384BE0, (uint64_t)sub_1001A4708, a1);
}

uint64_t sub_1001A6890(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376568, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E1268);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A68D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376568, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E1268);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A6920()
{
  return &unk_100356D40;
}

unint64_t sub_1001A692C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1001A6948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384BF8);
  sub_10000E6A4(v0, (uint64_t)qword_100384BF8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002C3130;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "doppler";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "satellite_id";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "cn_ratio";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "pseudo_range_rms_error";
  *((_QWORD *)v16 + 1) = 22;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "multi_path";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "code_phase";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "integer_code_phase";
  *((_QWORD *)v22 + 1) = 18;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "carrier_quality_ind";
  *((_QWORD *)v24 + 1) = 19;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "adr";
  *(_QWORD *)(v25 + 8) = 3;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_1001A6C30()
{
  return sub_100008BD0(&qword_1003B0B70, (uint64_t)qword_100384BF8, (uint64_t)sub_1001A6948);
}

uint64_t sub_1001A6C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B70, (uint64_t)qword_100384BF8, (uint64_t)sub_1001A6948, a1);
}

uint64_t sub_1001A6C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_15;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 24);
          goto LABEL_14;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 28);
          goto LABEL_14;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 32);
          goto LABEL_14;
        case 5:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 36);
          v14 = sub_10020C224();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v13, &type metadata for Proto_Gnss_Emergency_MultipathIndicator, v14, a2, a3);
          goto LABEL_15;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 40);
          goto LABEL_14;
        case 7:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 44);
          goto LABEL_14;
        case 8:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 48);
          goto LABEL_14;
        case 9:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 52);
LABEL_14:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
LABEL_15:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A6DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_1001A6FE4(v5, a1, a2, a3);
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, 7);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001A6FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 6)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 36));
    v8 = sub_10020C224();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 5, &type metadata for Proto_Gnss_Emergency_MultipathIndicator, v8, a3, a4);
  }
  return result;
}

Swift::Int sub_1001A7070()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, &qword_1003758F0, (uint64_t)&unk_1002E14D0);
}

uint64_t sub_1001A708C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 6;
  v12 = a2 + v11;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1[12];
  v14 = a2 + a1[11];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v13;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a2 + a1[13];
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  return result;
}

uint64_t sub_1001A7130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A6C68(a1, a2, a3);
}

uint64_t sub_1001A7144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A6DEC(a1, a2, a3);
}

uint64_t sub_1001A7158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB70, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E1448);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A71A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B70, (uint64_t)qword_100384BF8, (uint64_t)sub_1001A6948, a1);
}

uint64_t sub_1001A71C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003758F8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E13D0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A7204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003758F8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E13D0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A7258()
{
  return &unk_100356D50;
}

unint64_t sub_1001A7264()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1001A7280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C10);
  sub_10000E6A4(v0, (uint64_t)qword_100384C10);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "signal_id";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "code_phase_ambiguity";
  *(_QWORD *)(v12 + 8) = 20;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "measurement_count";
  *((_QWORD *)v14 + 1) = 17;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "measurement";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A7448()
{
  return sub_100008BD0(&qword_1003B0B78, (uint64_t)qword_100384C10, (uint64_t)sub_1001A7280);
}

uint64_t sub_1001A7464@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B78, (uint64_t)qword_100384C10, (uint64_t)sub_1001A7280, a1);
}

uint64_t sub_1001A7480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 24);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 28);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 4:
          v10 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
          v11 = sub_10000FD38(&qword_1003758F8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E13D0);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v10, v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A75C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v9 = result;
  v10 = (unsigned int *)((char *)v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)((char *)v3 + *(int *)(v9 + 28));
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)((char *)v3 + *(int *)(v9 + 32));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v14 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
      v15 = sub_10000FD38(&qword_1003758F8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E13D0);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v13, 4, v14, v15, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001A7748()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, &qword_100375900, (uint64_t)&unk_1002E1638);
}

uint64_t sub_1001A7764@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)a2 + a1[8];
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  return result;
}

uint64_t sub_1001A77CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A7480(a1, a2, a3);
}

uint64_t sub_1001A77E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A75C8(a1, a2, a3);
}

uint64_t sub_1001A77F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB68, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E15B0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A7844@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B78, (uint64_t)qword_100384C10, (uint64_t)sub_1001A7280, a1);
}

uint64_t sub_1001A7860(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376590, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1538);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A78A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376590, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1538);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A78F4()
{
  return &unk_100356D60;
}

unint64_t sub_1001A7900()
{
  return 0xD000000000000034;
}

uint64_t sub_1001A791C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C28);
  sub_10000E6A4(v0, (uint64_t)qword_100384C28);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ganss_id";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "signal_measurement_info";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A7A6C()
{
  return sub_100008BD0(&qword_1003B0B80, (uint64_t)qword_100384C28, (uint64_t)sub_1001A791C);
}

uint64_t sub_1001A7A88@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B80, (uint64_t)qword_100384C28, (uint64_t)sub_1001A791C, a1);
}

uint64_t sub_1001A7AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0) + 24);
        v10 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
        v11 = sub_10000FD38(&qword_100376590, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1538);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
      }
      else if (result == 1)
      {
        v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0) + 20);
        v13 = sub_10020C1E0();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v12, &type metadata for Proto_Gnss_Emergency_GanssId, v13, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A7BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v10;
  char v11;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 7)
  {
    v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v10 = sub_10020C1E0();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v11, 1, &type metadata for Proto_Gnss_Emergency_GanssId, v10, a2, a3);
  }
  if (!v4)
  {
    sub_1001A7CA4(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001A7CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375670);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100375670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375670);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
  v15 = sub_10000FD38(&qword_100376590, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1538);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

Swift::Int sub_1001A7E1C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, &qword_100375908, (uint64_t)&unk_1002E17A0);
}

uint64_t sub_1001A7E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 7, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, a2);
}

uint64_t sub_1001A7E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A7AA4(a1, a2, a3);
}

uint64_t sub_1001A7E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A7BDC(a1, a2, a3);
}

uint64_t sub_1001A7E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB60, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E1718);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A7EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B80, (uint64_t)qword_100384C28, (uint64_t)sub_1001A791C, a1);
}

uint64_t sub_1001A7EDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003765A8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E16A0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A7F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003765A8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E16A0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A7F6C()
{
  return &unk_100356D70;
}

unint64_t sub_1001A7F78()
{
  return 0xD000000000000026;
}

uint64_t sub_1001A7F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C40);
  sub_10000E6A4(v0, (uint64_t)qword_100384C40);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "time_id";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_tod";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_tod_frac";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "tod_delta";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "ganss_tod_uncertainity";
  *((_QWORD *)v19 + 1) = 22;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "measured_time_params";
  *((_QWORD *)v21 + 1) = 20;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "ganss_measurements_count";
  *((_QWORD *)v23 + 1) = 24;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "ganss_measurement";
  *((_QWORD *)v25 + 1) = 17;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001A8240()
{
  return sub_100008BD0(&qword_1003B0B88, (uint64_t)qword_100384C40, (uint64_t)sub_1001A7F94);
}

uint64_t sub_1001A825C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B88, (uint64_t)qword_100384C40, (uint64_t)sub_1001A7F94, a1);
}

uint64_t sub_1001A8278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 20);
          v10 = sub_10020C2F0();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v9, &type metadata for Proto_Gnss_Emergency_GnssTimeId, v10, a2, a3);
          break;
        case 2:
          v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 24);
          goto LABEL_12;
        case 3:
          v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 28);
          goto LABEL_12;
        case 4:
          v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 32);
          goto LABEL_12;
        case 5:
          v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 36);
          goto LABEL_12;
        case 6:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 40);
          v13 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
          v14 = sub_10000FD38(&qword_1003763D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFA80);
          v15 = v12;
          v16 = v13;
          goto LABEL_14;
        case 7:
          v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 44);
LABEL_12:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v11, a2, a3);
          break;
        case 8:
          v17 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 48);
          v18 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
          v14 = sub_10000FD38(&qword_1003765A8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E16A0);
          v15 = v17;
          v16 = v18;
LABEL_14:
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v15, v16, v14, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A8470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unint64_t v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;
  char v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  v10 = (int *)result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 6)
  {
    v15 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v11 = sub_10020C2F0();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v15, 1, &type metadata for Proto_Gnss_Emergency_GnssTimeId, v11, a2, a3);
  }
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_1001A8654(v5, a1, a2, a3);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, 7);
    sub_1001A87C8(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001A8654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375678);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  sub_10000E660(a1 + *(int *)(v13 + 40), (uint64_t)v8, &qword_100375678);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375678);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
  v15 = sub_10000FD38(&qword_1003763D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFA80);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

uint64_t sub_1001A87C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375680);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  sub_10000E660(a1 + *(int *)(v13 + 48), (uint64_t)v8, &qword_100375680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375680);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
  v15 = sub_10000FD38(&qword_1003765A8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E16A0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 8, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
}

Swift::Int sub_1001A8940()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, &qword_100375910, (uint64_t)&unk_1002E1908);
}

uint64_t sub_1001A895C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  UnknownStorage.init()();
  v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 6;
  v5 = a2 + v4;
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1[8];
  v7 = a2 + a1[7];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a2 + v6;
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1[10];
  v10 = a2 + a1[9];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a2 + v9;
  v12 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a1[12];
  v14 = a2 + a1[11];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v13;
  v16 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
}

uint64_t sub_1001A8A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A8278(a1, a2, a3);
}

uint64_t sub_1001A8A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A8470(a1, a2, a3);
}

uint64_t sub_1001A8A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB58, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1880);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A8AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B88, (uint64_t)qword_100384C40, (uint64_t)sub_1001A7F94, a1);
}

uint64_t sub_1001A8AC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003765C0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1808);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A8B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003765C0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1808);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A8B50()
{
  return &unk_100356D80;
}

unint64_t sub_1001A8B5C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1001A8B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C58);
  sub_10000E6A4(v0, (uint64_t)qword_100384C58);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002C3130;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "doppler";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "whole_chips";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "frac_chips";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "satellite_id";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "cn_ratio";
  *((_QWORD *)v18 + 1) = 8;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "pseudo_range_rms_error";
  *((_QWORD *)v20 + 1) = 22;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "multi_path";
  *((_QWORD *)v22 + 1) = 10;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "code_phase";
  *((_QWORD *)v24 + 1) = 10;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "integer_code_phase";
  *(_QWORD *)(v25 + 8) = 18;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_1001A8E58()
{
  return sub_100008BD0(&qword_1003B0B90, (uint64_t)qword_100384C58, (uint64_t)sub_1001A8B78);
}

uint64_t sub_1001A8E74@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B90, (uint64_t)qword_100384C58, (uint64_t)sub_1001A8B78, a1);
}

uint64_t sub_1001A8E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_15;
        case 2:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 24);
          goto LABEL_14;
        case 3:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 28);
          goto LABEL_14;
        case 4:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 32);
          goto LABEL_14;
        case 5:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 36);
          goto LABEL_14;
        case 6:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 40);
          goto LABEL_14;
        case 7:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 44);
          v14 = sub_10020C224();
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v13, &type metadata for Proto_Gnss_Emergency_MultipathIndicator, v14, a2, a3);
          goto LABEL_15;
        case 8:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 48);
          goto LABEL_14;
        case 9:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 52);
LABEL_14:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v12, a2, a3);
LABEL_15:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001A9014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
    sub_1001B6344(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t (*)(void))sub_10020C224, (uint64_t)&type metadata for Proto_Gnss_Emergency_MultipathIndicator);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001A922C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, &qword_100375918, (uint64_t)&unk_1002E1A70);
}

uint64_t sub_1001A9248@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a1[12];
  *(_BYTE *)(a2 + a1[11]) = 6;
  v15 = a2 + v14;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a2 + a1[13];
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  return result;
}

uint64_t sub_1001A92EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A8E90(a1, a2, a3);
}

uint64_t sub_1001A9300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A9014(a1, a2, a3);
}

uint64_t sub_1001A9314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB50, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E19E8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001A9364@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B90, (uint64_t)qword_100384C58, (uint64_t)sub_1001A8B78, a1);
}

uint64_t sub_1001A9380(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003765D8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1970);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A93C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003765D8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1970);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001A9414()
{
  return &unk_100356D90;
}

unint64_t sub_1001A9420()
{
  return 0xD000000000000024;
}

uint64_t sub_1001A943C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C70);
  sub_10000E6A4(v0, (uint64_t)qword_100384C70);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002C3130;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "gps_tow";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v27 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "gps_week";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v27 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "gps_time_uncertainty";
  *((_QWORD *)v14 + 1) = 20;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v27 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "nr_of_sats";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v27 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "measurements";
  *((_QWORD *)v18 + 1) = 12;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v27 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "measured_time_params";
  *((_QWORD *)v20 + 1) = 20;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v27 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "code_phase_ambiguity";
  *((_QWORD *)v22 + 1) = 20;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v27 + v6 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "gps_todpresent";
  *((_QWORD *)v24 + 1) = 14;
  v24[16] = 2;
  v11();
  v25 = v27 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "gps_tod";
  *(_QWORD *)(v25 + 8) = 7;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_1001A9714()
{
  return sub_100008BD0(&qword_1003B0B98, (uint64_t)qword_100384C70, (uint64_t)sub_1001A943C);
}

uint64_t sub_1001A9730@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0B98, (uint64_t)qword_100384C70, (uint64_t)sub_1001A943C, a1);
}

uint64_t sub_1001A974C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_DWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 20) = 1;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 28) = 1;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_DWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 44) = 1;
  *(_QWORD *)(v1 + 48) = &_swiftEmptyArrayStorage;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  v3 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  v7 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  qword_1003B0BA8 = v1;
  return result;
}

uint64_t sub_1001A9844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[32];

  v3 = sub_1000039AC(&qword_1003755A8);
  __chkstk_darwin(v3);
  v35 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000039AC(&qword_100375688);
  __chkstk_darwin(v5);
  v32 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 20) = 1;
  *(_BYTE *)(v1 + 28) = 1;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_DWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 44) = 1;
  *(_QWORD *)(v1 + 48) = &_swiftEmptyArrayStorage;
  v7 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  v30 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  v31 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  v34 = v1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_beginAccess(a1 + 16, v52, 0, 0);
  LODWORD(v11) = *(_DWORD *)(a1 + 16);
  LOBYTE(v7) = *(_BYTE *)(a1 + 20);
  swift_beginAccess(v1 + 16, v51, 1, 0);
  *(_DWORD *)(v1 + 16) = v11;
  *(_BYTE *)(v1 + 20) = v7;
  swift_beginAccess(a1 + 24, v50, 0, 0);
  v13 = *(_DWORD *)(a1 + 24);
  LOBYTE(v11) = *(_BYTE *)(a1 + 28);
  swift_beginAccess(v1 + 24, v49, 1, 0);
  *(_DWORD *)(v1 + 24) = v13;
  *(_BYTE *)(v1 + 28) = v11;
  swift_beginAccess(a1 + 32, v48, 0, 0);
  v14 = *(_DWORD *)(a1 + 32);
  LOBYTE(v11) = *(_BYTE *)(a1 + 36);
  swift_beginAccess(v1 + 32, v47, 1, 0);
  *(_DWORD *)(v1 + 32) = v14;
  *(_BYTE *)(v1 + 36) = v11;
  swift_beginAccess(a1 + 40, v46, 0, 0);
  v15 = *(_DWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 44);
  swift_beginAccess(v1 + 40, &v45, 1, 0);
  *(_DWORD *)(v1 + 40) = v15;
  *(_BYTE *)(v1 + 44) = v16;
  swift_beginAccess(a1 + 48, &v44, 0, 0);
  v17 = *(_QWORD *)(a1 + 48);
  swift_beginAccess(v1 + 48, &v43, 1, 0);
  v18 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, &v42, 0, 0);
  v20 = v32;
  sub_10000E660(v19, v32, &qword_100375688);
  v21 = v30;
  swift_beginAccess(v30, v41, 33, 0);
  sub_10000E574(v20, v21, &qword_100375688);
  swift_endAccess(v41);
  v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity, v41, 0, 0);
  LODWORD(v20) = *(_DWORD *)v22;
  LOBYTE(v22) = *(_BYTE *)(v22 + 4);
  v23 = v31;
  swift_beginAccess(v31, &v40, 1, 0);
  *(_DWORD *)v23 = v20;
  *(_BYTE *)(v23 + 4) = v22;
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent, &v39, 0, 0);
  LODWORD(v20) = *(_DWORD *)v24;
  LOBYTE(v24) = *(_BYTE *)(v24 + 4);
  v25 = v33;
  swift_beginAccess(v33, &v38, 1, 0);
  *(_DWORD *)v25 = v20;
  *(_BYTE *)(v25 + 4) = v24;
  v26 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, &v37, 0, 0);
  v27 = v35;
  sub_10000E660(v26, v35, &qword_1003755A8);
  swift_release(a1);
  v28 = v34;
  swift_beginAccess(v34, v36, 33, 0);
  sub_10000E574(v27, v28, &qword_1003755A8);
  swift_endAccess(v36);
  return v1;
}

uint64_t sub_1001A9C78()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[6]);
  sub_100015704((uint64_t)v0+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, &qword_100375688);
  sub_100015704((uint64_t)v0+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, &qword_1003755A8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1001A9CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001A9844(v13);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v33 = v15 + 48;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v32, 33, 0);
          v19 = v15 + 16;
          goto LABEL_18;
        case 2:
          v20 = v15 + 24;
          goto LABEL_17;
        case 3:
          v20 = v15 + 32;
          goto LABEL_17;
        case 4:
          v20 = v15 + 40;
          goto LABEL_17;
        case 5:
          v21 = v33;
          swift_beginAccess(v33, v32, 33, 0);
          v22 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
          v23 = sub_10000FD38(&qword_1003765D8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1970);
          v24 = v5;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v21, v22, v23, a2, a3);
          goto LABEL_21;
        case 6:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, v32, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
          v27 = &qword_100376320;
          v28 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams;
          v29 = &unk_1002DEF40;
          goto LABEL_20;
        case 7:
          v30 = OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
          goto LABEL_16;
        case 8:
          v30 = OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
LABEL_16:
          v20 = v15 + v30;
LABEL_17:
          swift_beginAccess(v20, v32, 33, 0);
          v19 = v20;
LABEL_18:
          v24 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v19, a2, a3);
          goto LABEL_21;
        case 9:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, v32, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
          v27 = &qword_100376338;
          v28 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD;
          v29 = &unk_1002DF0A8;
LABEL_20:
          v31 = sub_10000FD38(v27, v28, (uint64_t)v29);
          v24 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v25, v26, v31, a2, a3);
LABEL_21:
          v5 = v24;
          swift_endAccess(v32);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001A9FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int *v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v18, 0, 0);
  if ((*(_BYTE *)(v9 + 20) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 16), 1, a2, a3);
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 24, v19, 0, 0);
  if ((*(_BYTE *)(v9 + 28) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 24), 2, a2, a3);
  swift_beginAccess(v9 + 32, v20, 0, 0);
  if ((*(_BYTE *)(v9 + 36) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 32), 3, a2, a3);
  swift_beginAccess(v9 + 40, v21, 0, 0);
  if ((*(_BYTE *)(v9 + 44) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 40), 4, a2, a3);
  swift_beginAccess(v9 + 48, v17, 0, 0);
  v11 = *(_QWORD *)(v9 + 48);
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
    v13 = sub_10000FD38(&qword_1003765D8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1970);
    v14 = swift_bridgeObjectRetain(v11);
    dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v14, 5, v12, v13, a2, a3);
    swift_bridgeObjectRelease(v11);
  }
  sub_1001AA2A4(v9, a1, a2, a3);
  v15 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity, v23, 0, 0);
  if ((v15[1] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 7, a2, a3);
  v16 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent, v22, 0, 0);
  if ((v16[1] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v16, 8, a2, a3);
  sub_1001AA430(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001AA2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375688);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375688);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  v15 = sub_10000FD38(&qword_100376320, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DEF40);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
}

uint64_t sub_1001AA430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003755A8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003755A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003755A8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  v15 = sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 9, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001AA5BC(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t (*)(uint64_t, uint64_t))sub_1001AA5E4) & 1;
}

BOOL sub_1001AA5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int v21;
  char v22;
  char v23;
  int v24;
  char v25;
  char v26;
  int v27;
  char v28;
  char v29;
  int v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v43;
  char v44;
  int *v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[24];
  char v86[24];
  char v87[24];
  char v88[24];
  char v89[24];
  char v90[24];
  char v91[32];

  v4 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin(v4);
  v64 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1000039AC(&qword_10037BEF8);
  __chkstk_darwin(v65);
  v68 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000039AC(&qword_1003755A8);
  v8 = __chkstk_darwin(v7);
  v71 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v70 = (char *)&v63 - v10;
  v72 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  v11 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v69 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_10037BF00);
  __chkstk_darwin(v13);
  v73 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_100375688);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v63 - v19;
  swift_beginAccess(a1 + 16, v91, 0, 0);
  v21 = *(_DWORD *)(a1 + 16);
  v22 = *(_BYTE *)(a1 + 20);
  swift_beginAccess(a2 + 16, v90, 0, 0);
  v23 = *(_BYTE *)(a2 + 20);
  if ((v22 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else
  {
    if (v21 != *(_DWORD *)(a2 + 16))
      v23 = 1;
    if ((v23 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 24, v89, 0, 0);
  v24 = *(_DWORD *)(a1 + 24);
  v25 = *(_BYTE *)(a1 + 28);
  swift_beginAccess(a2 + 24, v88, 0, 0);
  v26 = *(_BYTE *)(a2 + 28);
  if ((v25 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 28))
      return 0;
  }
  else
  {
    if (v24 != *(_DWORD *)(a2 + 24))
      v26 = 1;
    if ((v26 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 32, v87, 0, 0);
  v27 = *(_DWORD *)(a1 + 32);
  v28 = *(_BYTE *)(a1 + 36);
  swift_beginAccess(a2 + 32, v86, 0, 0);
  v29 = *(_BYTE *)(a2 + 36);
  if ((v28 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 36))
      return 0;
  }
  else
  {
    if (v27 != *(_DWORD *)(a2 + 32))
      v29 = 1;
    if ((v29 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 40, v85, 0, 0);
  v30 = *(_DWORD *)(a1 + 40);
  v31 = *(_BYTE *)(a1 + 44);
  swift_beginAccess(a2 + 40, &v84, 0, 0);
  v32 = *(_BYTE *)(a2 + 44);
  if ((v31 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 44))
      return 0;
  }
  else
  {
    if (v30 != *(_DWORD *)(a2 + 40))
      v32 = 1;
    if ((v32 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 48, &v83, 0, 0);
  v33 = *(_QWORD *)(a1 + 48);
  swift_beginAccess(a2 + 48, &v82, 0, 0);
  v34 = *(_QWORD *)(a2 + 48);
  swift_retain(a1);
  swift_retain(a2);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  v35 = sub_10010B2D8(v33, v34, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t (*)(char *, char *))sub_1001CD5B8);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) == 0)
    goto LABEL_32;
  v36 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, &v81, 0, 0);
  sub_10000E660(v36, (uint64_t)v20, &qword_100375688);
  v37 = a2
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, &v80, 0, 0);
  v38 = v73;
  v39 = v73 + *(int *)(v13 + 48);
  sub_10000E660((uint64_t)v20, v73, &qword_100375688);
  sub_10000E660(v37, v39, &qword_100375688);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v41 = v72;
  if (v40(v38, 1, v72) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375688);
    if (v40(v39, 1, v41) == 1)
    {
      sub_100015704(v38, &qword_100375688);
      goto LABEL_35;
    }
LABEL_31:
    sub_100015704(v38, &qword_10037BF00);
    goto LABEL_32;
  }
  sub_10000E660(v38, (uint64_t)v18, &qword_100375688);
  if (v40(v39, 1, v41) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375688);
    sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
    goto LABEL_31;
  }
  v43 = v69;
  sub_100003E08(v39, v69, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  v44 = sub_1001C7150((uint64_t)v18, v43);
  sub_100004030(v43, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  sub_100015704((uint64_t)v20, &qword_100375688);
  sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  sub_100015704(v38, &qword_100375688);
  if ((v44 & 1) == 0)
    goto LABEL_32;
LABEL_35:
  v45 = (int *)(a1
              + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity, &v79, 0, 0);
  v46 = *v45;
  v47 = *((_BYTE *)v45 + 4);
  v48 = a2
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity, &v78, 0, 0);
  if ((v47 & 1) != 0)
  {
    v50 = (uint64_t)v70;
    v49 = (uint64_t)v71;
    if ((*(_BYTE *)(v48 + 4) & 1) == 0)
      goto LABEL_32;
  }
  else
  {
    v50 = (uint64_t)v70;
    v49 = (uint64_t)v71;
    if ((*(_BYTE *)(v48 + 4) & 1) != 0 || v46 != *(_DWORD *)v48)
      goto LABEL_32;
  }
  v51 = (int *)(a1
              + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent, &v77, 0, 0);
  v52 = *v51;
  v53 = *((_BYTE *)v51 + 4);
  v54 = a2
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent, &v76, 0, 0);
  if ((v53 & 1) != 0)
  {
    if ((*(_BYTE *)(v54 + 4) & 1) != 0)
      goto LABEL_45;
LABEL_32:
    swift_release(a1);
    swift_release(a2);
    return 0;
  }
  if ((*(_BYTE *)(v54 + 4) & 1) != 0 || v52 != *(_DWORD *)v54)
    goto LABEL_32;
LABEL_45:
  v55 = a1
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, &v75, 0, 0);
  sub_10000E660(v55, v50, &qword_1003755A8);
  v56 = a2
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess(a2+ OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, &v74, 0, 0);
  v57 = v68;
  v58 = v68 + *(int *)(v65 + 48);
  sub_10000E660(v50, v68, &qword_1003755A8);
  sub_10000E660(v56, v58, &qword_1003755A8);
  v59 = v67;
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  if (v60(v57, 1, v67) != 1)
  {
    sub_10000E660(v57, v49, &qword_1003755A8);
    if (v60(v58, 1, v59) == 1)
    {
      swift_release(a1);
      swift_release(a2);
      sub_100015704(v50, &qword_1003755A8);
      sub_100004030(v49, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
      goto LABEL_50;
    }
    v61 = v64;
    sub_100003E08(v58, v64, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    v62 = sub_1001D47B8(v49, v61, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    swift_release(a1);
    swift_release(a2);
    sub_100004030(v61, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    sub_100015704(v50, &qword_1003755A8);
    sub_100004030(v49, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    sub_100015704(v57, &qword_1003755A8);
    return (v62 & 1) != 0;
  }
  swift_release(a1);
  swift_release(a2);
  sub_100015704(v50, &qword_1003755A8);
  if (v60(v58, 1, v59) != 1)
  {
LABEL_50:
    sub_100015704(v57, &qword_10037BEF8);
    return 0;
  }
  sub_100015704(v57, &qword_1003755A8);
  return 1;
}

Swift::Int sub_1001AAE18()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &qword_100375920, (uint64_t)&unk_1002E1BD8);
}

uint64_t sub_1001AAE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0BA0, &qword_1003B0BA8, (uint64_t)sub_1001A974C, a2);
}

uint64_t sub_1001AAE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A9CD0(a1, a2, a3);
}

uint64_t sub_1001AAE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A9FBC(a1, a2, a3);
}

uint64_t sub_1001AAE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB48, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1B50);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AAEC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0B98, (uint64_t)qword_100384C70, (uint64_t)sub_1001A943C, a1);
}

uint64_t sub_1001AAEE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003765F0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1AD8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AAF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003765F0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1AD8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001AAF74()
{
  return &unk_100356DA0;
}

unint64_t sub_1001AAF80()
{
  return 0xD000000000000026;
}

uint64_t sub_1001AAF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384C88);
  sub_10000E6A4(v0, (uint64_t)qword_100384C88);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "result";
  *(_QWORD *)(v8 + 8) = 6;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "response_type";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "session_info";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "gps_measurements";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ganss_measurements";
  *((_QWORD *)v18 + 1) = 18;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "more_ganss_measurements";
  *((_QWORD *)v20 + 1) = 23;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "is_meas_in_cdma_time";
  *((_QWORD *)v22 + 1) = 20;
  v22[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001AB214()
{
  return sub_100008BD0(&qword_1003B0BB0, (uint64_t)qword_100384C88, (uint64_t)sub_1001AAF9C);
}

uint64_t sub_1001AB230@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BB0, (uint64_t)qword_100384C88, (uint64_t)sub_1001AAF9C, a1);
}

uint64_t sub_1001AB24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 9;
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v3 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  v5 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  v7 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime) = 2;
  qword_1003B0BC0 = v1;
  return result;
}

uint64_t sub_1001AB354()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &qword_100375648);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, &qword_100375690);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, &qword_100375698);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001AB3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001C40E0(v13);
    swift_release(v10);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v30 = v15 + 20;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v29, 33, 0);
          v19 = sub_10020C5DC();
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15 + 16, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v19, a2, a3);
          goto LABEL_17;
        case 2:
          v21 = v30;
          goto LABEL_15;
        case 3:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v29, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
          v24 = &qword_100376290;
          v25 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo;
          v26 = &unk_1002DE6D0;
          goto LABEL_13;
        case 4:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v29, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
          v24 = &qword_1003765F0;
          v25 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements;
          v26 = &unk_1002E1AD8;
          goto LABEL_13;
        case 5:
          v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, v29, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
          v24 = &qword_1003765C0;
          v25 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements;
          v26 = &unk_1002E1808;
LABEL_13:
          v27 = sub_10000FD38(v24, v25, (uint64_t)v26);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v22, v23, v27, a2, a3);
          goto LABEL_17;
        case 6:
          v21 = v15
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
LABEL_15:
          swift_beginAccess(v21, v29, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v21, a2, a3);
          goto LABEL_17;
        case 7:
          v28 = v15
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, v29, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v28, a2, a3);
LABEL_17:
          v5 = v20;
          swift_endAccess(v29);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001AB6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unsigned int *v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v15, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 9)
  {
    v18[0] = *(_BYTE *)(v9 + 16);
    v10 = sub_10020C5DC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v18, 1, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 20, v16, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2, a2, a3);
  sub_1001AB8D8(v9, a1, a2, a3);
  sub_1001ABA64(v9, a1, a2, a3);
  sub_1001ABBF0(v9, a1, a2, a3);
  v12 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements, v18, 0, 0);
  if ((v12[1] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 6, a2, a3);
  v13 = (unsigned __int8 *)(v9
                          + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, v17, 0, 0);
  v14 = *v13;
  if (v14 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 7, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001AB8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375648);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  v15 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001ABA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375690);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375690);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  v15 = sub_10000FD38(&qword_1003765F0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1AD8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001ABBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375698);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375698);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375698);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
  v15 = sub_10000FD38(&qword_1003765C0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1808);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001ABD7C(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, sub_1001ABDA4) & 1;
}

uint64_t sub_1001ABDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  uint64_t result;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 *v76;
  int v77;
  unsigned __int8 *v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106[24];
  char v107[24];
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[24];
  char v112[32];

  v4 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v84 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000039AC(&qword_10037BEF0);
  __chkstk_darwin(v87);
  v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375698);
  v9 = __chkstk_darwin(v8);
  v85 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v92 = (char *)&v80 - v11;
  v96 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v86 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1000039AC(&qword_10037BE58);
  __chkstk_darwin(v93);
  v97 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375690);
  v15 = __chkstk_darwin(v14);
  v90 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v95 = (uint64_t)&v80 - v17;
  v18 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v91 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_10037BE60);
  __chkstk_darwin(v21);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000039AC(&qword_100375648);
  v25 = __chkstk_darwin(v24);
  v98 = (uint64_t)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v80 - v27;
  swift_beginAccess(a1 + 16, v112, 0, 0);
  v29 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v111, 0, 0);
  v30 = *(unsigned __int8 *)(a2 + 16);
  if (v29 == 9)
  {
    if (v30 != 9)
      return 0;
LABEL_6:
    v81 = v7;
    swift_beginAccess(a1 + 20, v110, 0, 0);
    v32 = *(_DWORD *)(a1 + 20);
    v83 = a1;
    v33 = *(_BYTE *)(a1 + 24);
    swift_beginAccess(a2 + 20, v109, 0, 0);
    v82 = a2;
    v34 = *(_BYTE *)(a2 + 24);
    if ((v33 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (v32 != *(_DWORD *)(a2 + 20))
        v34 = 1;
      if ((v34 & 1) != 0)
        return 0;
    }
    v35 = v83;
    v36 = v83
        + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v83+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v108, 0, 0);
    sub_10000E660(v36, (uint64_t)v28, &qword_100375648);
    v37 = v82;
    v38 = v82
        + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v82+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v107, 0, 0);
    v39 = (uint64_t)&v23[*(int *)(v21 + 48)];
    sub_10000E660((uint64_t)v28, (uint64_t)v23, &qword_100375648);
    sub_10000E660(v38, v39, &qword_100375648);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v40((uint64_t)v23, 1, v18) == 1)
    {
      swift_retain(v35);
      swift_retain(v37);
      sub_100015704((uint64_t)v28, &qword_100375648);
      v41 = v40(v39, 1, v18);
      v42 = v37;
      v43 = (uint64_t)v81;
      if (v41 == 1)
      {
        sub_100015704((uint64_t)v23, &qword_100375648);
        goto LABEL_19;
      }
    }
    else
    {
      v44 = v98;
      sub_10000E660((uint64_t)v23, v98, &qword_100375648);
      v45 = v40(v39, 1, v18);
      v43 = (uint64_t)v81;
      if (v45 != 1)
      {
        v46 = v91;
        sub_100003E08(v39, v91, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        swift_retain(v35);
        v42 = v82;
        swift_retain(v82);
        v47 = sub_1001D24EC(v44, v46);
        sub_100004030(v46, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v28, &qword_100375648);
        sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v23, &qword_100375648);
        if ((v47 & 1) != 0)
        {
LABEL_19:
          v48 = v35
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v35+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v106, 0, 0);
          v49 = v95;
          sub_10000E660(v48, v95, &qword_100375690);
          v50 = v42
              + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, &v105, 0, 0);
          v51 = v97;
          v52 = v97 + *(int *)(v93 + 48);
          sub_10000E660(v49, v97, &qword_100375690);
          sub_10000E660(v50, v52, &qword_100375690);
          v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
          v54 = v96;
          if (v53(v51, 1, v96) == 1)
          {
            sub_100015704(v49, &qword_100375690);
            v55 = v53(v52, 1, v54);
            v56 = (uint64_t)v92;
            if (v55 == 1)
            {
              sub_100015704(v51, &qword_100375690);
LABEL_27:
              v64 = v83
                  + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
              swift_beginAccess(v83+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, &v104, 0, 0);
              sub_10000E660(v64, v56, &qword_100375698);
              v65 = v42
                  + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
              swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, &v103, 0, 0);
              v66 = v43 + *(int *)(v87 + 48);
              sub_10000E660(v56, v43, &qword_100375698);
              sub_10000E660(v65, v66, &qword_100375698);
              v67 = v89;
              v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
              if (v68(v43, 1, v89) == 1)
              {
                sub_100015704(v56, &qword_100375698);
                if (v68(v66, 1, v67) == 1)
                {
                  sub_100015704(v43, &qword_100375698);
                  goto LABEL_39;
                }
                goto LABEL_32;
              }
              v69 = v85;
              sub_10000E660(v43, v85, &qword_100375698);
              if (v68(v66, 1, v67) == 1)
              {
                sub_100015704(v56, &qword_100375698);
                sub_100004030(v69, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
LABEL_32:
                v60 = &qword_10037BEF0;
                v61 = v43;
                goto LABEL_33;
              }
              v70 = v84;
              sub_100003E08(v66, v84, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
              v71 = sub_1001C9020(v69, v70);
              sub_100004030(v70, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
              sub_100015704(v56, &qword_100375698);
              sub_100004030(v69, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
              sub_100015704(v43, &qword_100375698);
              if ((v71 & 1) != 0)
              {
LABEL_39:
                v72 = v83
                    + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
                swift_beginAccess(v83+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements, &v102, 0, 0);
                v73 = *(_DWORD *)v72;
                LOBYTE(v72) = *(_BYTE *)(v72 + 4);
                v74 = v42
                    + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
                swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements, &v101, 0, 0);
                if ((v72 & 1) != 0)
                {
                  if ((*(_BYTE *)(v74 + 4) & 1) == 0)
                    goto LABEL_34;
                }
                else if ((*(_BYTE *)(v74 + 4) & 1) != 0 || v73 != *(_DWORD *)v74)
                {
                  goto LABEL_34;
                }
                v75 = v83;
                v76 = (unsigned __int8 *)(v83
                                        + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
                swift_beginAccess(v83+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, &v100, 0, 0);
                v77 = *v76;
                swift_release(v75);
                v78 = (unsigned __int8 *)(v42
                                        + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
                swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, &v99, 0, 0);
                v79 = *v78;
                swift_release(v42);
                if (v77 == 2)
                {
                  if (v79 != 2)
                    return 0;
                }
                else if (v79 == 2 || ((((v79 & 1) == 0) ^ v77) & 1) == 0)
                {
                  return 0;
                }
                return 1;
              }
LABEL_34:
              v57 = v83;
              goto LABEL_35;
            }
          }
          else
          {
            v58 = v90;
            sub_10000E660(v51, v90, &qword_100375690);
            v59 = v53(v52, 1, v54);
            v56 = (uint64_t)v92;
            if (v59 != 1)
            {
              v62 = v86;
              sub_100003E08(v52, v86, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              v63 = sub_100065A60(v58, v62, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t (*)(uint64_t, uint64_t))sub_1001AA5E4);
              sub_100004030(v62, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              sub_100015704(v49, &qword_100375690);
              sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              sub_100015704(v51, &qword_100375690);
              if ((v63 & 1) == 0)
                goto LABEL_34;
              goto LABEL_27;
            }
            sub_100015704(v49, &qword_100375690);
            sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
          }
          v60 = &qword_10037BE58;
          v61 = v51;
LABEL_33:
          sub_100015704(v61, v60);
          goto LABEL_34;
        }
LABEL_22:
        v57 = v35;
LABEL_35:
        swift_release(v57);
        swift_release(v42);
        return 0;
      }
      swift_retain(v35);
      v42 = v82;
      swift_retain(v82);
      sub_100015704((uint64_t)v28, &qword_100375648);
      sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
    }
    sub_100015704((uint64_t)v23, &qword_10037BE60);
    goto LABEL_22;
  }
  result = 0;
  if (v30 != 9 && v29 == v30)
    goto LABEL_6;
  return result;
}

Swift::Int sub_1001AC798()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &qword_100375928, (uint64_t)&unk_1002E1D40);
}

uint64_t sub_1001AC7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0BB8, &qword_1003B0BC0, (uint64_t)sub_1001AB24C, a2);
}

uint64_t sub_1001AC7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AB3BC(a1, a2, a3);
}

uint64_t sub_1001AC7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AB6B8(a1, a2, a3);
}

uint64_t sub_1001AC7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB40, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1CB8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AC848@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BB0, (uint64_t)qword_100384C88, (uint64_t)sub_1001AAF9C, a1);
}

uint64_t sub_1001AC864(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376608, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1C40);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AC8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376608, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1C40);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001AC8F4()
{
  return &unk_100356DB0;
}

unint64_t sub_1001AC900()
{
  return 0xD000000000000029;
}

uint64_t sub_1001AC91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384CA0);
  sub_10000E6A4(v0, (uint64_t)qword_100384CA0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "aid_mask";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "g_week";
  *(_QWORD *)(v13 + 8) = 6;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "g_toe";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "num_of_sats";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "sat_id";
  *((_QWORD *)v19 + 1) = 6;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "iode";
  *((_QWORD *)v21 + 1) = 4;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "toe_limit";
  *((_QWORD *)v23 + 1) = 9;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001ACB90()
{
  return sub_100008BD0(&qword_1003B0BC8, (uint64_t)qword_100384CA0, (uint64_t)sub_1001AC91C);
}

uint64_t sub_1001ACBAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BC8, (uint64_t)qword_100384CA0, (uint64_t)sub_1001AC91C, a1);
}

uint64_t sub_1001ACBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 28);
          goto LABEL_13;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 32);
          goto LABEL_13;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 36);
          goto LABEL_13;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 40);
          goto LABEL_13;
        case 5:
          v10 = v3;
          goto LABEL_11;
        case 6:
          v10 = v3 + 8;
LABEL_11:
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v10, a2, a3);
          break;
        case 7:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 44);
LABEL_13:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001ACCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  v10 = (int *)result;
  v11 = (unsigned int *)((char *)v5 + *(int *)(result + 28));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)((char *)v5 + v10[8]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)((char *)v5 + v10[9]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)((char *)v5 + v10[10]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    if (*(_QWORD *)(*v5 + 16))
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    if (*(_QWORD *)(v5[1] + 16))
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    sub_100199DCC((uint64_t)v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, 7);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001ACEAC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, &qword_100375930, (uint64_t)&unk_1002E1EA8);
}

uint64_t sub_1001ACECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001ACBC8(a1, a2, a3);
}

uint64_t sub_1001ACEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001ACCF8(a1, a2, a3);
}

uint64_t sub_1001ACEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB38, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1E20);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001ACF44@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BC8, (uint64_t)qword_100384CA0, (uint64_t)sub_1001AC91C, a1);
}

uint64_t sub_1001ACF60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376620, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1DA8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001ACFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376620, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1DA8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001ACFF0()
{
  return &unk_100356DC0;
}

unint64_t sub_1001ACFFC()
{
  return 0xD000000000000027;
}

uint64_t sub_1001AD018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384CB8);
  sub_10000E6A4(v0, (uint64_t)qword_100384CB8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ganss_to_ids";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "delta_t";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001AD168()
{
  return sub_100008BD0(&qword_1003B0BD0, (uint64_t)qword_100384CB8, (uint64_t)sub_1001AD018);
}

uint64_t sub_1001AD184@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BD0, (uint64_t)qword_100384CB8, (uint64_t)sub_1001AD018, a1);
}

uint64_t sub_1001AD1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001AD1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001AD1E8(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem) & 1;
}

Swift::Int sub_1001AD208()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, &qword_100375938, (uint64_t)&unk_1002E2010);
}

uint64_t sub_1001AD224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB30, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F88);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AD274@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BD0, (uint64_t)qword_100384CB8, (uint64_t)sub_1001AD018, a1);
}

uint64_t sub_1001AD290(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376638, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F10);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AD2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376638, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F10);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001AD320()
{
  return &unk_100356DD0;
}

unint64_t sub_1001AD32C()
{
  return 0xD000000000000027;
}

uint64_t sub_1001AD348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384CD0);
  sub_10000E6A4(v0, (uint64_t)qword_100384CD0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C30F0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ganss_tod";
  *(_QWORD *)(v9 + 8) = 9;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_tod_frac";
  *(_QWORD *)(v13 + 8) = 14;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_signal_id";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ganss_data_bit_interval_k";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "ganss_data_bit_no_of_sats";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "ganss_sat_id_info";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001AD580()
{
  return sub_100008BD0(&qword_1003B0BD8, (uint64_t)qword_100384CD0, (uint64_t)sub_1001AD348);
}

uint64_t sub_1001AD59C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BD8, (uint64_t)qword_100384CD0, (uint64_t)sub_1001AD348, a1);
}

uint64_t sub_1001AD5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 24);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 28);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 32);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 36);
          goto LABEL_5;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 6:
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v3, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001AD6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  v9 = (int *)result;
  v10 = (unsigned int *)(v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)(v3 + v9[7]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v3 + v9[8]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v3 + v9[9]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    v14 = (unsigned int *)(v3 + v9[10]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 5, a2, a3);
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001AD880()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, &qword_100375940, (uint64_t)&unk_1002E2178);
}

uint64_t sub_1001AD89C@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = a1[9];
  v9 = (char *)a2 + a1[8];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a2 + v8;
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  v11 = (char *)a2 + a1[10];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  return result;
}

uint64_t sub_1001AD920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AD5B8(a1, a2, a3);
}

uint64_t sub_1001AD934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AD6D4(a1, a2, a3);
}

uint64_t sub_1001AD948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB28, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E20F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AD998@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BD8, (uint64_t)qword_100384CD0, (uint64_t)sub_1001AD348, a1);
}

uint64_t sub_1001AD9B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376650, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2078);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AD9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376650, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2078);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001ADA44()
{
  return &unk_100356DE0;
}

unint64_t sub_1001ADA50()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1001ADA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384CE8);
  sub_10000E6A4(v0, (uint64_t)qword_100384CE8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "ganss_sat_id";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_sat_iod";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001ADBBC()
{
  return sub_100008BD0(&qword_1003B0BE0, (uint64_t)qword_100384CE8, (uint64_t)sub_1001ADA6C);
}

uint64_t sub_1001ADBD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BE0, (uint64_t)qword_100384CE8, (uint64_t)sub_1001ADA6C, a1);
}

uint64_t sub_1001ADBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001ADC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001ADC3C(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem) & 1;
}

Swift::Int sub_1001ADC5C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, &qword_100375948, (uint64_t)&unk_1002E22E0);
}

uint64_t sub_1001ADC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB20, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E2258);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001ADCC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BE0, (uint64_t)qword_100384CE8, (uint64_t)sub_1001ADA6C, a1);
}

uint64_t sub_1001ADCE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375950, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E21E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001ADD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375950, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E21E0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001ADD74()
{
  return &unk_100356DF0;
}

unint64_t sub_1001ADD80()
{
  return 0xD000000000000029;
}

uint64_t sub_1001ADD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D00);
  sub_10000E6A4(v0, (uint64_t)qword_100384D00);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ganss_week_day";
  *(_QWORD *)(v9 + 8) = 14;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_toe";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_ttoe_limit";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ganss_sat_related_data_info_array_count";
  *((_QWORD *)v17 + 1) = 39;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "ganss_sat_related_data_info_array";
  *(_QWORD *)(v18 + 8) = 33;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001ADFA0()
{
  return sub_100008BD0(&qword_1003B0BE8, (uint64_t)qword_100384D00, (uint64_t)sub_1001ADD9C);
}

uint64_t sub_1001ADFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BE8, (uint64_t)qword_100384D00, (uint64_t)sub_1001ADD9C, a1);
}

uint64_t sub_1001ADFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 24);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 28);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 32);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 5:
          v10 = type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem(0);
          v11 = sub_10000FD38(&qword_100375950, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E21E0);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v10, v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001AE12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  v9 = (int *)result;
  v10 = (unsigned int *)((char *)v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)((char *)v3 + v9[7]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)((char *)v3 + v9[8]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)((char *)v3 + v9[9]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    v14 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v15 = type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem(0);
      v16 = sub_10000FD38(&qword_100375950, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E21E0);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v14, 5, v15, v16, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001AE2E0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, &qword_100375958, (uint64_t)&unk_1002E2448);
}

uint64_t sub_1001AE2FC@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = a1[9];
  v9 = (char *)a2 + a1[8];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a2 + v8;
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  return result;
}

uint64_t sub_1001AE370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001ADFD8(a1, a2, a3);
}

uint64_t sub_1001AE384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE12C(a1, a2, a3);
}

uint64_t sub_1001AE398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB18, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E23C0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AE3E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BE8, (uint64_t)qword_100384D00, (uint64_t)sub_1001ADD9C, a1);
}

uint64_t sub_1001AE404(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376678, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2348);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AE444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376678, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2348);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001AE494()
{
  return &unk_100356E00;
}

unint64_t sub_1001AE4A0()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1001AE4BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D18);
  sub_10000E6A4(v0, (uint64_t)qword_100384D18);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ganss_orbit_model_id";
  *(_QWORD *)(v9 + 8) = 20;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_clock_model_id";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_utc_model_id";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ganss_almanac_model_id";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001AE680()
{
  return sub_100008BD0(&qword_1003B0BF0, (uint64_t)qword_100384D18, (uint64_t)sub_1001AE4BC);
}

uint64_t sub_1001AE69C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BF0, (uint64_t)qword_100384D18, (uint64_t)sub_1001AE4BC, a1);
}

uint64_t sub_1001AE6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE6D4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001AE6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v11 = *(int *)(a4(0) + 20);
          goto LABEL_5;
        case 2:
          v11 = *(int *)(a4(0) + 24);
          goto LABEL_5;
        case 3:
          v11 = *(int *)(a4(0) + 28);
          goto LABEL_5;
        case 4:
          v11 = *(int *)(a4(0) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v4 + v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001AE7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AE7E8(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001AE7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int *v15;

  v6 = v4;
  result = a4(0);
  v11 = (int *)result;
  v12 = (unsigned int *)(v6 + *(int *)(result + 20));
  if ((v12[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 1, a2, a3);
  if (!v5)
  {
    v13 = (unsigned int *)(v6 + v11[6]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 2, a2, a3);
    v14 = (unsigned int *)(v6 + v11[7]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 3, a2, a3);
    v15 = (unsigned int *)(v6 + v11[8]);
    if ((v15[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 4, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001AE914(uint64_t a1, uint64_t a2)
{
  return sub_1001C6F68(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices) & 1;
}

Swift::Int sub_1001AE934()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, &qword_100375960, (uint64_t)&unk_1002E25B0);
}

uint64_t sub_1001AE950@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_1001AE9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB10, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E2528);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001AEA00@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BF0, (uint64_t)qword_100384D18, (uint64_t)sub_1001AE4BC, a1);
}

uint64_t sub_1001AEA1C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376690, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E24B0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001AEA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376690, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E24B0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001AEAAC()
{
  return &unk_100356E10;
}

unint64_t sub_1001AEAB8()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1001AEAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D30);
  sub_10000E6A4(v0, (uint64_t)qword_100384D30);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ganss_id";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ganss_generic_aid_mask";
  *(_QWORD *)(v13 + 8) = 22;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ganss_time_model_info_array_count";
  *((_QWORD *)v15 + 1) = 33;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ganss_time_model_info_array";
  *((_QWORD *)v17 + 1) = 27;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "ganss_data_bit_assist";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "ganss_nav_model_add_data";
  *((_QWORD *)v21 + 1) = 24;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "ganss_add_assist_data_choices";
  *((_QWORD *)v23 + 1) = 29;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001AED3C()
{
  return sub_100008BD0(&qword_1003B0BF8, (uint64_t)qword_100384D30, (uint64_t)sub_1001AEAD4);
}

uint64_t sub_1001AED58@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0BF8, (uint64_t)qword_100384D30, (uint64_t)sub_1001AEAD4, a1);
}

uint64_t sub_1001AED74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 7;
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 28) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_QWORD *)(v1 + 40) = &_swiftEmptyArrayStorage;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  v3 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  v5 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  v7 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  qword_1003B0C08 = v1;
  return result;
}

uint64_t sub_1001AEE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_1003756B0);
  __chkstk_darwin(v4);
  v32 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_1003756A8);
  __chkstk_darwin(v6);
  v31 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_1003756A0);
  __chkstk_darwin(v8);
  v29 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 7;
  v10 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  v11 = (_DWORD *)(v1 + 20);
  *(_BYTE *)(v2 + 24) = 1;
  *(_DWORD *)(v2 + 28) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  *(_QWORD *)(v2 + 40) = &_swiftEmptyArrayStorage;
  v12 = v2
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  v13 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v2
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  v15 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v2
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  v30 = v2
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  v17 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  swift_beginAccess(a1 + 16, v44, 0, 0);
  LOBYTE(v16) = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v10, v43, 1, 0);
  *v10 = v16;
  swift_beginAccess(a1 + 20, v42, 0, 0);
  LODWORD(v10) = *(_DWORD *)(a1 + 20);
  LOBYTE(v16) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v11, v41, 1, 0);
  *v11 = (_DWORD)v10;
  *(_BYTE *)(v2 + 24) = v16;
  swift_beginAccess(a1 + 28, &v40, 0, 0);
  LODWORD(v11) = *(_DWORD *)(a1 + 28);
  LOBYTE(v10) = *(_BYTE *)(a1 + 32);
  swift_beginAccess(v2 + 28, &v39, 1, 0);
  *(_DWORD *)(v2 + 28) = (_DWORD)v11;
  *(_BYTE *)(v2 + 32) = (_BYTE)v10;
  swift_beginAccess(a1 + 40, &v38, 0, 0);
  v18 = *(_QWORD *)(a1 + 40);
  swift_beginAccess(v2 + 40, &v37, 1, 0);
  v19 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, &v36, 0, 0);
  v21 = v29;
  sub_10000E660(v20, v29, &qword_1003756A0);
  swift_beginAccess(v12, v35, 33, 0);
  sub_10000E574(v21, v12, &qword_1003756A0);
  swift_endAccess(v35);
  v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, v35, 0, 0);
  v23 = v31;
  sub_10000E660(v22, v31, &qword_1003756A8);
  swift_beginAccess(v14, v34, 33, 0);
  sub_10000E574(v23, v14, &qword_1003756A8);
  swift_endAccess(v34);
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, v34, 0, 0);
  v25 = v32;
  sub_10000E660(v24, v32, &qword_1003756B0);
  swift_release(a1);
  v26 = v30;
  swift_beginAccess(v30, v33, 33, 0);
  sub_10000E574(v25, v26, &qword_1003756B0);
  swift_endAccess(v33);
  return v2;
}

uint64_t sub_1001AF258()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[5]);
  sub_100015704((uint64_t)v0+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, &qword_1003756A0);
  sub_100015704((uint64_t)v0+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, &qword_1003756A8);
  sub_100015704((uint64_t)v0+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, &qword_1003756B0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1001AF2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001AEE64(v13);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v32 = v15 + 40;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v31, 33, 0);
          v19 = sub_1001D57EC();
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15 + 16, &type metadata for Proto_Gnss_Emergency_LcsGanssId, v19, a2, a3);
          goto LABEL_17;
        case 2:
          v21 = v15 + 20;
          goto LABEL_11;
        case 3:
          v21 = v15 + 28;
LABEL_11:
          swift_beginAccess(v21, v31, 33, 0);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v21, a2, a3);
          goto LABEL_17;
        case 4:
          v22 = v32;
          swift_beginAccess(v32, v31, 33, 0);
          v23 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem(0);
          v24 = sub_10000FD38(&qword_100376638, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F10);
          v20 = v5;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v22, v23, v24, a2, a3);
          goto LABEL_17;
        case 5:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, v31, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
          v27 = &qword_100376650;
          v28 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist;
          v29 = &unk_1002E2078;
          goto LABEL_16;
        case 6:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, v31, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
          v27 = &qword_100376678;
          v28 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData;
          v29 = &unk_1002E2348;
          goto LABEL_16;
        case 7:
          v25 = v15
              + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, v31, 33, 0);
          v26 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
          v27 = &qword_100376690;
          v28 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices;
          v29 = &unk_1002E24B0;
LABEL_16:
          v30 = sub_10000FD38(v27, v28, (uint64_t)v29);
          v20 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v25, v26, v30, a2, a3);
LABEL_17:
          v5 = v20;
          swift_endAccess(v31);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001AF5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v17, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 7)
  {
    v19[0] = *(_BYTE *)(v9 + 16);
    v10 = sub_1001D57EC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v19, 1, &type metadata for Proto_Gnss_Emergency_LcsGanssId, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 20, v18, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2, a2, a3);
  swift_beginAccess(v9 + 28, v19, 0, 0);
  if ((*(_BYTE *)(v9 + 32) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 28), 3, a2, a3);
  swift_beginAccess(v9 + 40, &v16, 0, 0);
  v12 = *(_QWORD *)(v9 + 40);
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem(0);
    v14 = sub_10000FD38(&qword_100376638, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F10);
    v15 = swift_bridgeObjectRetain(v12);
    dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v15, 4, v13, v14, a2, a3);
    swift_bridgeObjectRelease(v12);
  }
  sub_1001AF838(v9, a1, a2, a3);
  sub_1001AF9C4(v9, a1, a2, a3);
  sub_1001AFB50(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001AF838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003756A0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003756A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756A0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  v15 = sub_10000FD38(&qword_100376650, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2078);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001AF9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003756A8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003756A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756A8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
  v15 = sub_10000FD38(&qword_100376678, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2348);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001AFB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003756B0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003756B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756B0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
  v15 = sub_10000FD38(&qword_100376690, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E24B0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001AFCDC(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t (*)(uint64_t, uint64_t))sub_1001AFD04) & 1;
}

BOOL sub_1001AFD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  _BOOL8 result;
  int v32;
  char v33;
  char v34;
  int v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[24];
  char v112[24];
  char v113[24];
  char v114[32];

  v4 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000039AC(&qword_10037BED8);
  __chkstk_darwin(v87);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000039AC(&qword_1003756B0);
  v10 = __chkstk_darwin(v9);
  v93 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v92 = (char *)&v82 - v12;
  v97 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v86 = (uint64_t *)((char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1000039AC(&qword_10037BEE0);
  __chkstk_darwin(v94);
  v98 = (uint64_t)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_1003756A8);
  v16 = __chkstk_darwin(v15);
  v90 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v96 = (uint64_t)&v82 - v18;
  v99 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  v19 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v91 = (uint64_t *)((char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1000039AC(&qword_10037BEE8);
  __chkstk_darwin(v21);
  v100 = (uint64_t)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000039AC(&qword_1003756A0);
  v24 = __chkstk_darwin(v23);
  v26 = (uint64_t *)((char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  v28 = (char *)&v82 - v27;
  swift_beginAccess(a1 + 16, v114, 0, 0);
  v29 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v113, 0, 0);
  v30 = *(unsigned __int8 *)(a2 + 16);
  if (v29 == 7)
  {
    if (v30 != 7)
      return 0;
LABEL_6:
    v83 = v6;
    v84 = v8;
    swift_beginAccess(a1 + 20, v112, 0, 0);
    v32 = *(_DWORD *)(a1 + 20);
    v33 = *(_BYTE *)(a1 + 24);
    swift_beginAccess(a2 + 20, v111, 0, 0);
    v85 = a2;
    v34 = *(_BYTE *)(a2 + 24);
    if ((v33 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (v32 != *(_DWORD *)(a2 + 20))
        v34 = 1;
      if ((v34 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 28, v110, 0, 0);
    v35 = *(_DWORD *)(a1 + 28);
    v36 = *(_BYTE *)(a1 + 32);
    v37 = v85;
    swift_beginAccess(v85 + 28, v109, 0, 0);
    v38 = *(_BYTE *)(v37 + 32);
    if ((v36 & 1) != 0)
    {
      if (!*(_BYTE *)(v37 + 32))
        return 0;
    }
    else
    {
      if (v35 != *(_DWORD *)(v37 + 28))
        v38 = 1;
      if ((v38 & 1) != 0)
        return 0;
    }
    swift_beginAccess(a1 + 40, v108, 0, 0);
    v39 = *(_QWORD *)(a1 + 40);
    v40 = v85;
    swift_beginAccess(v85 + 40, &v107, 0, 0);
    v41 = *(_QWORD *)(v40 + 40);
    swift_retain(a1);
    swift_retain(v40);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v41);
    v42 = sub_1001C2128(v39, v41, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v41);
    if ((v42 & 1) != 0)
    {
      v43 = a1
          + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
      swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, &v106, 0, 0);
      sub_10000E660(v43, (uint64_t)v28, &qword_1003756A0);
      v44 = v40
          + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
      swift_beginAccess(v40+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, &v105, 0, 0);
      v45 = v100;
      v46 = v100 + *(int *)(v21 + 48);
      sub_10000E660((uint64_t)v28, v100, &qword_1003756A0);
      sub_10000E660(v44, v46, &qword_1003756A0);
      v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      v48 = v99;
      if (v47(v45, 1, v99) == 1)
      {
        sub_100015704((uint64_t)v28, &qword_1003756A0);
        if (v47(v46, 1, v48) == 1)
        {
          sub_100015704(v45, &qword_1003756A0);
          v49 = v85;
LABEL_27:
          v54 = a1
              + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
          swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, &v104, 0, 0);
          v55 = v96;
          sub_10000E660(v54, v96, &qword_1003756A8);
          v56 = v49
              + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
          swift_beginAccess(v49+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, &v103, 0, 0);
          v57 = v98;
          v58 = v98 + *(int *)(v94 + 48);
          sub_10000E660(v55, v98, &qword_1003756A8);
          v59 = v57;
          sub_10000E660(v56, v58, &qword_1003756A8);
          v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
          v61 = v57;
          v62 = v97;
          if (v60(v61, 1, v97) == 1)
          {
            sub_100015704(v55, &qword_1003756A8);
            v63 = v60(v58, 1, v62);
            v64 = (uint64_t)v84;
            v65 = (uint64_t)v92;
            v66 = (uint64_t)v93;
            if (v63 == 1)
            {
              sub_100015704(v59, &qword_1003756A8);
LABEL_38:
              v75 = a1
                  + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
              swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, &v102, 0, 0);
              sub_10000E660(v75, v65, &qword_1003756B0);
              v76 = v49
                  + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
              swift_beginAccess(v49+ OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, &v101, 0, 0);
              v77 = v64 + *(int *)(v87 + 48);
              sub_10000E660(v65, v64, &qword_1003756B0);
              sub_10000E660(v76, v77, &qword_1003756B0);
              v78 = v89;
              v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
              if (v79(v64, 1, v89) == 1)
              {
                swift_release(a1);
                swift_release(v49);
                sub_100015704(v65, &qword_1003756B0);
                if (v79(v77, 1, v78) == 1)
                {
                  sub_100015704(v64, &qword_1003756B0);
                  return 1;
                }
                goto LABEL_43;
              }
              sub_10000E660(v64, v66, &qword_1003756B0);
              if (v79(v77, 1, v78) == 1)
              {
                swift_release(a1);
                swift_release(v49);
                sub_100015704(v65, &qword_1003756B0);
                sub_100004030(v66, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
LABEL_43:
                sub_100015704(v64, &qword_10037BED8);
                return 0;
              }
              v80 = (uint64_t)v83;
              sub_100003E08(v77, (uint64_t)v83, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
              v81 = sub_1001C6F68(v66, v80, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
              swift_release(a1);
              swift_release(v49);
              sub_100004030(v80, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
              sub_100015704(v65, &qword_1003756B0);
              sub_100004030(v66, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
              sub_100015704(v64, &qword_1003756B0);
              return (v81 & 1) != 0;
            }
          }
          else
          {
            v67 = v90;
            sub_10000E660(v59, v90, &qword_1003756A8);
            v68 = v60(v58, 1, v62);
            v69 = (uint64_t)v84;
            v70 = v92;
            v66 = (uint64_t)v93;
            if (v68 != 1)
            {
              v71 = v58;
              v72 = v55;
              v73 = (uint64_t *)v67;
              v74 = v86;
              sub_100003E08(v71, (uint64_t)v86, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
              LODWORD(v100) = sub_1001C7944(v73, v74);
              sub_100004030((uint64_t)v74, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
              sub_100015704(v72, &qword_1003756A8);
              sub_100004030((uint64_t)v73, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
              sub_100015704(v59, &qword_1003756A8);
              v65 = (uint64_t)v70;
              v64 = v69;
              if ((v100 & 1) != 0)
                goto LABEL_38;
              goto LABEL_33;
            }
            sub_100015704(v55, &qword_1003756A8);
            sub_100004030(v67, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
          }
          sub_100015704(v59, &qword_10037BEE0);
LABEL_33:
          swift_release(a1);
          v50 = v49;
          goto LABEL_34;
        }
      }
      else
      {
        sub_10000E660(v45, (uint64_t)v26, &qword_1003756A0);
        if (v47(v46, 1, v48) != 1)
        {
          v51 = v46;
          v52 = v91;
          sub_100003E08(v51, (uint64_t)v91, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
          v53 = sub_1001C8178(v26, v52);
          sub_100004030((uint64_t)v52, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
          sub_100015704((uint64_t)v28, &qword_1003756A0);
          sub_100004030((uint64_t)v26, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
          sub_100015704(v45, &qword_1003756A0);
          v49 = v85;
          if ((v53 & 1) == 0)
            goto LABEL_33;
          goto LABEL_27;
        }
        sub_100015704((uint64_t)v28, &qword_1003756A0);
        sub_100004030((uint64_t)v26, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
      }
      sub_100015704(v45, &qword_10037BEE8);
      swift_release(a1);
      v50 = v85;
    }
    else
    {
      swift_release(a1);
      v50 = v40;
    }
LABEL_34:
    swift_release(v50);
    return 0;
  }
  result = 0;
  if (v30 != 7 && v29 == v30)
    goto LABEL_6;
  return result;
}

Swift::Int sub_1001B06F0()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, &qword_100375968, (uint64_t)&unk_1002E2718);
}

uint64_t sub_1001B070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0C00, &qword_1003B0C08, (uint64_t)sub_1001AED74, a2);
}

uint64_t sub_1001B0728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AF2C8(a1, a2, a3);
}

uint64_t sub_1001B073C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AF5EC(a1, a2, a3);
}

uint64_t sub_1001B0750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB08, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2690);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B07A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0BF8, (uint64_t)qword_100384D30, (uint64_t)sub_1001AEAD4, a1);
}

uint64_t sub_1001B07BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375978, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2618);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B07FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375978, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2618);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B084C()
{
  return &unk_100356E20;
}

unint64_t sub_1001B0858()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1001B0874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D48);
  sub_10000E6A4(v0, (uint64_t)qword_100384D48);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "ganss_common_aid_mask";
  *(_QWORD *)(v8 + 8) = 21;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "ganss_time_req_pref_info_array_count";
  *(_QWORD *)(v12 + 8) = 36;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "ganss_time_req_pref_info_array";
  *((_QWORD *)v14 + 1) = 30;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "glonass_not_of_leap_sec_requested";
  *((_QWORD *)v16 + 1) = 33;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ganss_add_ionos_model";
  *((_QWORD *)v18 + 1) = 21;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ganss_aid_data_req_array_count";
  *((_QWORD *)v20 + 1) = 30;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "ganss_aid_data_req_array";
  *((_QWORD *)v22 + 1) = 24;
  v22[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B0AE0()
{
  return sub_100008BD0(&qword_1003B0C10, (uint64_t)qword_100384D48, (uint64_t)sub_1001B0874);
}

uint64_t sub_1001B0AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C10, (uint64_t)qword_100384D48, (uint64_t)sub_1001B0874, a1);
}

uint64_t sub_1001B0B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 28);
          goto LABEL_11;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 32);
          goto LABEL_11;
        case 3:
          v10 = sub_1001D57EC();
          dispatch thunk of Decoder.decodeRepeatedEnumField<A>(value:)(v3, &type metadata for Proto_Gnss_Emergency_LcsGanssId, v10, a2, a3);
          break;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 36);
          goto LABEL_11;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 40);
          goto LABEL_11;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 44);
LABEL_11:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 7:
          v11 = type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0);
          v12 = sub_10000FD38(&qword_100375978, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2618);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3 + 8, v11, v12, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B0CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  int *v9;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  v9 = (int *)result;
  v10 = (unsigned int *)((char *)v3 + *(int *)(result + 28));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)((char *)v3 + v9[8]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v13 = sub_1001D57EC();
      dispatch thunk of Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(v12, 3, &type metadata for Proto_Gnss_Emergency_LcsGanssId, v13, a2, a3);
    }
    v14 = (unsigned int *)((char *)v3 + v9[9]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    v15 = (unsigned int *)((char *)v3 + v9[10]);
    if ((v15[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 5, a2, a3);
    sub_100199DCC((uint64_t)v3, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, 6);
    v16 = v3[1];
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0);
      v18 = sub_10000FD38(&qword_100375978, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2618);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v16, 7, v17, v18, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001B0ECC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, &qword_100375980, (uint64_t)&unk_1002E2880);
}

uint64_t sub_1001B0EE8@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;

  *a2 = &_swiftEmptyArrayStorage;
  a2[1] = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[8];
  v6 = (char *)a2 + a1[7];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = a1[10];
  v9 = (char *)a2 + a1[9];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a2 + v8;
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  v11 = (char *)a2 + a1[11];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  return result;
}

uint64_t sub_1001B0F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0B18(a1, a2, a3);
}

uint64_t sub_1001B0F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0CAC(a1, a2, a3);
}

uint64_t sub_1001B0F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BB00, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E27F8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B0FE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C10, (uint64_t)qword_100384D48, (uint64_t)sub_1001B0874, a1);
}

uint64_t sub_1001B1000(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003766B8, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2780);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B1040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003766B8, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2780);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B1094()
{
  return &unk_100356E30;
}

unint64_t sub_1001B10A0()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1001B10BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D60);
  sub_10000E6A4(v0, (uint64_t)qword_100384D60);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "result";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "response_type";
  *(_QWORD *)(v13 + 8) = 13;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "session_info";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "assistance_request";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "ganss_assistance_request";
  *(_QWORD *)(v18 + 8) = 24;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B12CC()
{
  return sub_100008BD0(&qword_1003B0C18, (uint64_t)qword_100384D60, (uint64_t)sub_1001B10BC);
}

uint64_t sub_1001B12E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C18, (uint64_t)qword_100384D60, (uint64_t)sub_1001B10BC, a1);
}

uint64_t sub_1001B1304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 9;
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v3 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  v5 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  v7 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  qword_1003B0C28 = v1;
  return result;
}

uint64_t sub_1001B13E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_1003756C0);
  __chkstk_darwin(v4);
  v27 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1000039AC(&qword_1003756B8);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_BYTE *)(v1 + 16) = 9;
  v12 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  v13 = (_DWORD *)(v1 + 20);
  *(_BYTE *)(v2 + 24) = 1;
  v14 = v2
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v15 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v2
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  v17 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v2
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  v19 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_beginAccess(a1 + 16, v35, 0, 0);
  v20 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v12, v34, 1, 0);
  *v12 = v20;
  swift_beginAccess(a1 + 20, v33, 0, 0);
  v21 = *(_DWORD *)(a1 + 20);
  LOBYTE(v12) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v13, v32, 1, 0);
  *v13 = v21;
  *(_BYTE *)(v2 + 24) = (_BYTE)v12;
  v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v31, 0, 0);
  sub_10000E660(v22, (uint64_t)v11, &qword_100375648);
  swift_beginAccess(v14, v30, 33, 0);
  sub_10000E574((uint64_t)v11, v14, &qword_100375648);
  swift_endAccess(v30);
  v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, v30, 0, 0);
  sub_10000E660(v23, (uint64_t)v8, &qword_1003756B8);
  swift_beginAccess(v16, v29, 33, 0);
  sub_10000E574((uint64_t)v8, v16, &qword_1003756B8);
  swift_endAccess(v29);
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, v29, 0, 0);
  v25 = v27;
  sub_10000E660(v24, (uint64_t)v27, &qword_1003756C0);
  swift_release(a1);
  swift_beginAccess(v18, v28, 33, 0);
  sub_10000E574((uint64_t)v25, v18, &qword_1003756C0);
  swift_endAccess(v28);
  return v2;
}

uint64_t sub_1001B1728()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &qword_100375648);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, &qword_1003756B8);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, &qword_1003756C0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001B1790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001B13E0(v13);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v29 = v15 + 20;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v28, 33, 0);
          v26 = sub_10020C5DC();
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15 + 16, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v26, a2, a3);
          goto LABEL_8;
        case 2:
          v27 = v29;
          swift_beginAccess(v29, v28, 33, 0);
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v27, a2, a3);
          goto LABEL_8;
        case 3:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v28, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
          v21 = &qword_100376290;
          v22 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo;
          v23 = &unk_1002DE6D0;
          goto LABEL_7;
        case 4:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, v28, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
          v21 = &qword_100376620;
          v22 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest;
          v23 = &unk_1002E1DA8;
          goto LABEL_7;
        case 5:
          v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, v28, 33, 0);
          v20 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
          v21 = &qword_1003766B8;
          v22 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest;
          v23 = &unk_1002E2780;
LABEL_7:
          v24 = sub_10000FD38(v21, v22, (uint64_t)v23);
          v25 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v19, v20, v24, a2, a3);
LABEL_8:
          v5 = v25;
          swift_endAccess(v28);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001B1A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v12, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 9)
  {
    v13[0] = *(_BYTE *)(v9 + 16);
    v10 = sub_10020C5DC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v13, 1, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 20, v13, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2, a2, a3);
  sub_1001B1BC4(v9, a1, a2, a3);
  sub_1001B1D50(v9, a1, a2, a3);
  sub_1001B1EDC(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001B1BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375648);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  v15 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001B1D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003756B8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003756B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756B8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
  v15 = sub_10000FD38(&qword_100376620, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1DA8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001B1EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_1003756C0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_1003756C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756C0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
  v15 = sub_10000FD38(&qword_1003766B8, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2780);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001B2068(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t (*)(uint64_t, uint64_t))sub_1001B2090) & 1;
}

BOOL sub_1001B2090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  _BOOL8 result;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  int v59;
  uint64_t *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  char v69;
  uint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[24];
  _BYTE v88[24];
  _BYTE v89[24];
  _BYTE v90[24];
  _BYTE v91[24];
  _BYTE v92[8];
  _BYTE v93[8];
  _BYTE v94[8];
  _BYTE v95[8];
  _BYTE v96[8];

  v77 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v5 = (uint64_t *)((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_1000039AC(&qword_10037BEC8);
  __chkstk_darwin(v75);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_1003756C0);
  v9 = __chkstk_darwin(v8);
  v73 = (uint64_t *)((char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v84 = (char *)&v70 - v11;
  v82 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v74 = (uint64_t *)((char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_1000039AC(&qword_10037BED0);
  __chkstk_darwin(v80);
  v83 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003756B8);
  v15 = __chkstk_darwin(v14);
  v78 = (uint64_t *)((char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v86 = (uint64_t)&v70 - v17;
  v18 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v79 = (uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_10037BE60);
  __chkstk_darwin(v21);
  v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000039AC(&qword_100375648);
  v25 = __chkstk_darwin(v24);
  v85 = (uint64_t)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v70 - v27;
  swift_beginAccess(a1 + 16, v96, 0, 0);
  v29 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v95, 0, 0);
  v30 = *(unsigned __int8 *)(a2 + 16);
  if (v29 == 9)
  {
    if (v30 != 9)
      return 0;
LABEL_6:
    v70 = v5;
    v71 = v7;
    swift_beginAccess(a1 + 20, v94, 0, 0);
    v32 = *(_DWORD *)(a1 + 20);
    v33 = a2;
    v72 = a1;
    v34 = *(_BYTE *)(a1 + 24);
    swift_beginAccess(v33 + 20, v93, 0, 0);
    v35 = v33;
    v36 = *(_BYTE *)(v33 + 24);
    if ((v34 & 1) != 0)
    {
      if (!*(_BYTE *)(v33 + 24))
        return 0;
    }
    else
    {
      if (v32 != *(_DWORD *)(v33 + 20))
        v36 = 1;
      if ((v36 & 1) != 0)
        return 0;
    }
    v37 = v72;
    v38 = v72
        + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v72+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v92, 0, 0);
    sub_10000E660(v38, (uint64_t)v28, &qword_100375648);
    v39 = v35;
    v40 = v35
        + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v35+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v91, 0, 0);
    v41 = (uint64_t)&v23[*(int *)(v21 + 48)];
    sub_10000E660((uint64_t)v28, (uint64_t)v23, &qword_100375648);
    sub_10000E660(v40, v41, &qword_100375648);
    v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v42((uint64_t)v23, 1, v18) == 1)
    {
      swift_retain(v37);
      swift_retain(v35);
      sub_100015704((uint64_t)v28, &qword_100375648);
      if (v42(v41, 1, v18) == 1)
      {
        sub_100015704((uint64_t)v23, &qword_100375648);
LABEL_19:
        v48 = v37
            + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
        swift_beginAccess(v37+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, v90, 0, 0);
        v49 = v86;
        sub_10000E660(v48, v86, &qword_1003756B8);
        v50 = v39
            + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
        swift_beginAccess(v39+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, v89, 0, 0);
        v51 = v83;
        v52 = v83 + *(int *)(v80 + 48);
        sub_10000E660(v49, v83, &qword_1003756B8);
        sub_10000E660(v50, v52, &qword_1003756B8);
        v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
        v54 = v82;
        if (v53(v51, 1, v82) == 1)
        {
          sub_100015704(v49, &qword_1003756B8);
          v55 = v53(v52, 1, v54);
          v56 = (uint64_t)v71;
          v57 = (uint64_t)v84;
          if (v55 == 1)
          {
            sub_100015704(v51, &qword_1003756B8);
LABEL_30:
            v62 = v37
                + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
            swift_beginAccess(v37+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, v88, 0, 0);
            sub_10000E660(v62, v57, &qword_1003756C0);
            v63 = v39
                + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
            swift_beginAccess(v39+ OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, v87, 0, 0);
            v64 = v56 + *(int *)(v75 + 48);
            sub_10000E660(v57, v56, &qword_1003756C0);
            sub_10000E660(v63, v64, &qword_1003756C0);
            v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
            v66 = v77;
            if (v65(v56, 1, v77) == 1)
            {
              swift_release(v37);
              swift_release(v39);
              sub_100015704(v57, &qword_1003756C0);
              if (v65(v64, 1, v66) == 1)
              {
                sub_100015704(v56, &qword_1003756C0);
                return 1;
              }
              goto LABEL_35;
            }
            v67 = v73;
            sub_10000E660(v56, (uint64_t)v73, &qword_1003756C0);
            if (v65(v64, 1, v66) == 1)
            {
              swift_release(v37);
              swift_release(v39);
              sub_100015704(v57, &qword_1003756C0);
              sub_100004030((uint64_t)v67, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
LABEL_35:
              sub_100015704(v56, &qword_10037BEC8);
              return 0;
            }
            v68 = v70;
            sub_100003E08(v64, (uint64_t)v70, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
            v69 = sub_1001C6484(v67, v68);
            swift_release(v37);
            swift_release(v39);
            sub_100004030((uint64_t)v68, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
            sub_100015704(v57, &qword_1003756C0);
            sub_100004030((uint64_t)v67, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
            sub_100015704(v56, &qword_1003756C0);
            return (v69 & 1) != 0;
          }
          goto LABEL_24;
        }
        v58 = v78;
        sub_10000E660(v51, (uint64_t)v78, &qword_1003756B8);
        v59 = v53(v52, 1, v54);
        v56 = (uint64_t)v71;
        v57 = (uint64_t)v84;
        if (v59 == 1)
        {
          sub_100015704(v86, &qword_1003756B8);
          sub_100004030((uint64_t)v58, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
LABEL_24:
          v44 = &qword_10037BED0;
          v45 = v51;
          goto LABEL_25;
        }
        v60 = v74;
        sub_100003E08(v52, (uint64_t)v74, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
        v61 = sub_1001C7700(v58, v60);
        sub_100004030((uint64_t)v60, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
        sub_100015704(v86, &qword_1003756B8);
        sub_100004030((uint64_t)v58, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
        sub_100015704(v51, &qword_1003756B8);
        if ((v61 & 1) != 0)
          goto LABEL_30;
LABEL_26:
        swift_release(v37);
        swift_release(v39);
        return 0;
      }
    }
    else
    {
      v43 = v85;
      sub_10000E660((uint64_t)v23, v85, &qword_100375648);
      if (v42(v41, 1, v18) != 1)
      {
        v46 = v79;
        sub_100003E08(v41, v79, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        swift_retain(v37);
        swift_retain(v39);
        v47 = sub_1001D24EC(v43, v46);
        sub_100004030(v46, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v28, &qword_100375648);
        sub_100004030(v43, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        v37 = v72;
        sub_100015704((uint64_t)v23, &qword_100375648);
        if ((v47 & 1) == 0)
          goto LABEL_26;
        goto LABEL_19;
      }
      swift_retain(v37);
      swift_retain(v39);
      sub_100015704((uint64_t)v28, &qword_100375648);
      sub_100004030(v43, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
    }
    v44 = &qword_10037BE60;
    v45 = (uint64_t)v23;
LABEL_25:
    sub_100015704(v45, v44);
    goto LABEL_26;
  }
  result = 0;
  if (v30 != 9 && v29 == v30)
    goto LABEL_6;
  return result;
}

Swift::Int sub_1001B2A44()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &qword_100375988, (uint64_t)&unk_1002E29E8);
}

uint64_t sub_1001B2A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0C20, &qword_1003B0C28, (uint64_t)sub_1001B1304, a2);
}

uint64_t sub_1001B2A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1790(a1, a2, a3);
}

uint64_t sub_1001B2A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1A38(a1, a2, a3);
}

uint64_t sub_1001B2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAF8, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E2960);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B2AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C18, (uint64_t)qword_100384D60, (uint64_t)sub_1001B10BC, a1);
}

uint64_t sub_1001B2B10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003766D0, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E28E8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B2B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003766D0, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E28E8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B2BA0()
{
  return &unk_100356E40;
}

unint64_t sub_1001B2BAC()
{
  return 0xD000000000000023;
}

uint64_t sub_1001B2BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D78);
  sub_10000E6A4(v0, (uint64_t)qword_100384D78);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "no_of_cells";
  *(_QWORD *)(v9 + 8) = 11;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "eutran_cell_info";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B2D18()
{
  return sub_100008BD0(&qword_1003B0C30, (uint64_t)qword_100384D78, (uint64_t)sub_1001B2BC8);
}

uint64_t sub_1001B2D34@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C30, (uint64_t)qword_100384D78, (uint64_t)sub_1001B2BC8, a1);
}

uint64_t sub_1001B2D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2D84(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, &qword_100375990, (uint64_t)&unk_1002DF7B0);
}

uint64_t sub_1001B2D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v8)
  {
    while ((v16 & 1) == 0)
    {
      if (result == 2)
      {
        v19 = a5(0);
        v17 = sub_10000FD38(a6, a5, a7);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v7, v19, v17, a2, a3);
      }
      else if (result == 1)
      {
        v18 = a4(0);
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v7 + *(int *)(v18 + 24), a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B2EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2EEC(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, &qword_100375990, (uint64_t)&unk_1002DF7B0);
}

uint64_t sub_1001B2EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v11;
  uint64_t result;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v11 = v7;
  result = a4(0);
  v16 = (unsigned int *)((char *)v7 + *(int *)(result + 24));
  if ((v16[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v16, 1, a2, a3);
  if (!v8)
  {
    v17 = a7;
    v18 = *v11;
    if (*(_QWORD *)(*v11 + 16))
    {
      v20 = a5(0);
      v19 = sub_10000FD38(a6, a5, v17);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v18, 2, v20, v19, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001B3008()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, &qword_100375998, (uint64_t)&unk_1002E2B50);
}

uint64_t sub_1001B3024@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  char *v5;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = (char *)a2 + *(int *)(a1 + 24);
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t sub_1001B3070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAF0, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2AC8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B30C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C30, (uint64_t)qword_100384D78, (uint64_t)sub_1001B2BC8, a1);
}

uint64_t sub_1001B30DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003766E8, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2A50);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B311C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003766E8, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2A50);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B316C()
{
  return &unk_100356E50;
}

unint64_t sub_1001B3178()
{
  return 0xD000000000000025;
}

uint64_t sub_1001B3194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384D90);
  sub_10000E6A4(v0, (uint64_t)qword_100384D90);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "bsic";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "time_slot";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "bit_number";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "bcch_carrier";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ref_frame";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "timing_advance";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "obit_number";
  *((_QWORD *)v22 + 1) = 11;
  v22[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B340C()
{
  return sub_100008BD0(&qword_1003B0C38, (uint64_t)qword_100384D90, (uint64_t)sub_1001B3194);
}

uint64_t sub_1001B3428@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C38, (uint64_t)qword_100384D90, (uint64_t)sub_1001B3194, a1);
}

uint64_t sub_1001B3444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 20);
          goto LABEL_12;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 24);
          goto LABEL_12;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 28);
          goto LABEL_12;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 32);
          goto LABEL_12;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 36);
          goto LABEL_12;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 40);
          goto LABEL_12;
        case 7:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 44);
LABEL_12:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B3560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, 7);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001B3714()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, &qword_1003759A0, (uint64_t)&unk_1002E2CB8);
}

uint64_t sub_1001B3730@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a2 + a1[11];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  return result;
}

uint64_t sub_1001B37BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B3444(a1, a2, a3);
}

uint64_t sub_1001B37D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B3560(a1, a2, a3);
}

uint64_t sub_1001B37E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAE8, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2C30);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B3834@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C38, (uint64_t)qword_100384D90, (uint64_t)sub_1001B3194, a1);
}

uint64_t sub_1001B3850(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376700, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2BB8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B3890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376700, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2BB8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B38E0()
{
  return &unk_100356E60;
}

unint64_t sub_1001B38EC()
{
  return 0xD000000000000027;
}

uint64_t sub_1001B3908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384DA8);
  sub_10000E6A4(v0, (uint64_t)qword_100384DA8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "int_part";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "frac_part";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B3A58()
{
  return sub_100008BD0(&qword_1003B0C40, (uint64_t)qword_100384DA8, (uint64_t)sub_1001B3908);
}

uint64_t sub_1001B3A74@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C40, (uint64_t)qword_100384DA8, (uint64_t)sub_1001B3908, a1);
}

uint64_t sub_1001B3A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001B3AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001B3AD8(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime) & 1;
}

Swift::Int sub_1001B3AF8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, &qword_1003759A8, (uint64_t)&unk_1002E2E20);
}

uint64_t sub_1001B3B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAE0, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D98);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B3B64@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C40, (uint64_t)qword_100384DA8, (uint64_t)sub_1001B3908, a1);
}

uint64_t sub_1001B3B80(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376718, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D20);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B3BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376718, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D20);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B3C14()
{
  return &unk_100356E70;
}

unint64_t sub_1001B3C20()
{
  return 0xD000000000000026;
}

uint64_t sub_1001B3C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384DC0);
  sub_10000E6A4(v0, (uint64_t)qword_100384DC0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "physical_cell_id";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "earfcn";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "sfnk";
  *(_QWORD *)(v14 + 8) = 4;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B3DDC()
{
  return sub_100008BD0(&qword_1003B0C48, (uint64_t)qword_100384DC0, (uint64_t)sub_1001B3C3C);
}

uint64_t sub_1001B3DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C48, (uint64_t)qword_100384DC0, (uint64_t)sub_1001B3C3C, a1);
}

uint64_t sub_1001B3E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001971A4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001B3E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197288(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001B3E4C(uint64_t a1, uint64_t a2)
{
  return sub_1001D47B8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime) & 1;
}

Swift::Int sub_1001B3E6C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, &qword_1003759B0, (uint64_t)&unk_1002E2F88);
}

uint64_t sub_1001B3E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAD8, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2F00);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B3ED8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C48, (uint64_t)qword_100384DC0, (uint64_t)sub_1001B3C3C, a1);
}

uint64_t sub_1001B3EF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376730, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2E88);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B3F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376730, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2E88);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B3F88()
{
  return &unk_100356E80;
}

unint64_t sub_1001B3F94()
{
  return 0xD000000000000024;
}

uint64_t sub_1001B3FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384DD8);
  sub_10000E6A4(v0, (uint64_t)qword_100384DD8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "cdma_tow";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "week_num";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "absolute_rms_acc";
  *(_QWORD *)(v14 + 8) = 16;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B4144()
{
  return sub_100008BD0(&qword_1003B0C50, (uint64_t)qword_100384DD8, (uint64_t)sub_1001B3FB0);
}

uint64_t sub_1001B4160@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C50, (uint64_t)qword_100384DD8, (uint64_t)sub_1001B3FB0, a1);
}

uint64_t sub_1001B417C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 24);
        goto LABEL_5;
      }
      if (result == 1)
      {
        v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 20);
        v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v12 = sub_10000FD38(&qword_100376718, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D20);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v12, a2, a3);
      }
LABEL_11:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 28);
LABEL_5:
    dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1001B42B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;

  v5 = v3;
  result = sub_1001B4398(v5, a1, a2, a3);
  if (!v4)
  {
    v10 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v11 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v5 + *(int *)(v10 + 28));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001B4398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003756C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756C8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
  v15 = sub_10000FD38(&qword_100376718, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D20);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

Swift::Int sub_1001B4510()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, &qword_1003759B8, (uint64_t)&unk_1002E30F0);
}

uint64_t sub_1001B452C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  v8 = a2 + a1[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return result;
}

uint64_t sub_1001B45A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B417C(a1, a2, a3);
}

uint64_t sub_1001B45B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B42B8(a1, a2, a3);
}

uint64_t sub_1001B45CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAD0, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E3068);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B461C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C50, (uint64_t)qword_100384DD8, (uint64_t)sub_1001B3FB0, a1);
}

uint64_t sub_1001B4638(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376748, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E2FF0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B4678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376748, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E2FF0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B46C8()
{
  return &unk_100356E90;
}

unint64_t sub_1001B46D4()
{
  return 0xD000000000000021;
}

uint64_t sub_1001B46F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384DF0);
  sub_10000E6A4(v0, (uint64_t)qword_100384DF0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "eutran_time";
  *(_QWORD *)(v9 + 8) = 11;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "cdma_time";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B4840()
{
  return sub_100008BD0(&qword_1003B0C58, (uint64_t)qword_100384DF0, (uint64_t)sub_1001B46F0);
}

uint64_t sub_1001B485C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C58, (uint64_t)qword_100384DF0, (uint64_t)sub_1001B46F0, a1);
}

uint64_t sub_1001B4878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 20);
        v10 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
        v11 = &qword_100376730;
        v12 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime;
        v13 = &unk_1002E2E88;
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 24);
    v10 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v11 = &qword_100376748;
    v12 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime;
    v13 = &unk_1002E2FF0;
LABEL_5:
    v14 = sub_10000FD38(v11, v12, (uint64_t)v13);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v14, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1001B49A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BA308(a1, a2, a3, sub_1001B49C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001B4B3C);
}

uint64_t sub_1001B49C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1003756D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756D0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
  v15 = sub_10000FD38(&qword_100376730, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2E88);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001B4B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1003756D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756D8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  v15 = sub_10000FD38(&qword_100376748, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E2FF0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

Swift::Int sub_1001B4CB4()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1003759C0, (uint64_t)&unk_1002E3258);
}

uint64_t sub_1001B4CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001B4CE4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, a2);
}

uint64_t sub_1001B4CE4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  UnknownStorage.init()();
  v8 = a4 + *(int *)(a1 + 20);
  v9 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a4 + *(int *)(a1 + 24);
  v11 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
}

uint64_t sub_1001B4D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B4878(a1, a2, a3);
}

uint64_t sub_1001B4D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAC8, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E31D0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B4DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C58, (uint64_t)qword_100384DF0, (uint64_t)sub_1001B46F0, a1);
}

uint64_t sub_1001B4DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B4E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B4E84()
{
  return &unk_100356EA0;
}

unint64_t sub_1001B4E90()
{
  return 0xD000000000000027;
}

uint64_t sub_1001B4EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E08);
  sub_10000E6A4(v0, (uint64_t)qword_100384E08);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "cell_time_assistance_type";
  *(_QWORD *)(v9 + 8) = 25;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "cell_time_data";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B4FFC()
{
  return sub_100008BD0(&qword_1003B0C60, (uint64_t)qword_100384E08, (uint64_t)sub_1001B4EAC);
}

uint64_t sub_1001B5018@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C60, (uint64_t)qword_100384E08, (uint64_t)sub_1001B4EAC, a1);
}

uint64_t sub_1001B5034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B5068(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_100376760, (uint64_t)&unk_1002E3158);
}

uint64_t sub_1001B5068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t result;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v12 = v7;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v8)
  {
    while (1)
    {
      if ((v16 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        v17 = v12 + *(int *)(a4(0) + 20);
        v18 = sub_10020C334();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v17, &type metadata for Proto_Gnss_Emergency_ClsNetworkType, v18, a2, a3);
LABEL_4:
        v12 = v7;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v19 = a4;
    v20 = v12 + *(int *)(a4(0) + 24);
    v21 = a5(0);
    v22 = sub_10000FD38(a6, a5, a7);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v20, v21, v22, a2, a3);
    a4 = v19;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1001B51B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B51E4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t (*)(void))sub_10020C334, (uint64_t)&type metadata for Proto_Gnss_Emergency_ClsNetworkType, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001B52C4);
}

uint64_t sub_1001B51E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t result;
  uint64_t v17;
  char v18;

  v12 = v7;
  result = a4(0);
  if (*(_BYTE *)(v12 + *(int *)(result + 20)) != 6)
  {
    v18 = *(_BYTE *)(v12 + *(int *)(result + 20));
    v17 = a5();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v18, 1, a6, v17, a2, a3);
  }
  if (!v8)
  {
    a7(v12, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001B52C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1003756E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  v15 = sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

Swift::Int sub_1001B543C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, &qword_1003759C8, (uint64_t)&unk_1002E33C0);
}

uint64_t sub_1001B5458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019BCDC(a1, 6, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, a2);
}

uint64_t sub_1001B5468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAC0, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E3338);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B54B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C60, (uint64_t)qword_100384E08, (uint64_t)sub_1001B4EAC, a1);
}

uint64_t sub_1001B54D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376778, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E32C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B5514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376778, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E32C0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B5568()
{
  return &unk_100356EB0;
}

unint64_t sub_1001B5574()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1001B5590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E20);
  sub_10000E6A4(v0, (uint64_t)qword_100384E20);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "tlm_msg";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "sat_id";
  *(_QWORD *)(v13 + 8) = 6;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "anti_spoof";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "alert";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "tlm_reserved";
  *(_QWORD *)(v18 + 8) = 12;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B5798()
{
  return sub_100008BD0(&qword_1003B0C68, (uint64_t)qword_100384E20, (uint64_t)sub_1001B5590);
}

uint64_t sub_1001B57B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C68, (uint64_t)qword_100384E20, (uint64_t)sub_1001B5590, a1);
}

uint64_t sub_1001B57D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 20);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 32);
          goto LABEL_5;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B58CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int *v15;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    v15 = (unsigned int *)(v5 + v10[9]);
    if ((v15[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 5, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001B5A2C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_TowAssist, &qword_1003759D0, (uint64_t)&unk_1002E3528);
}

uint64_t sub_1001B5A48@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a2 + a1[9];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  return result;
}

uint64_t sub_1001B5AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B57D0(a1, a2, a3);
}

uint64_t sub_1001B5ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B58CC(a1, a2, a3);
}

uint64_t sub_1001B5AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAB8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E34A0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B5B30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C68, (uint64_t)qword_100384E20, (uint64_t)sub_1001B5590, a1);
}

uint64_t sub_1001B5B4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003759D8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3428);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B5B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003759D8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3428);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B5BDC()
{
  return &unk_100356EC0;
}

unint64_t sub_1001B5BE8()
{
  return 0xD000000000000025;
}

uint64_t sub_1001B5C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E38);
  sub_10000E6A4(v0, (uint64_t)qword_100384E38);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002C3130;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "gps_tow";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "gps_week";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "gps_time_uncertainty";
  *((_QWORD *)v14 + 1) = 20;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "nr_of_sats";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "tow_assist";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "gps_week_cycle_number";
  *((_QWORD *)v20 + 1) = 21;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "session_protocol";
  *((_QWORD *)v22 + 1) = 16;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "pos_protocol";
  *((_QWORD *)v24 + 1) = 12;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "session_id";
  *(_QWORD *)(v25 + 8) = 10;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_1001B5EE0()
{
  return sub_100008BD0(&qword_1003B0C70, (uint64_t)qword_100384E38, (uint64_t)sub_1001B5C04);
}

uint64_t sub_1001B5EFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C70, (uint64_t)qword_100384E38, (uint64_t)sub_1001B5C04, a1);
}

uint64_t sub_1001B5F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  ValueMetadata *v17;
  uint64_t v18;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 24);
          goto LABEL_15;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 28);
          goto LABEL_15;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 32);
          goto LABEL_15;
        case 4:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 36);
          goto LABEL_15;
        case 5:
          v11 = type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
          v12 = sub_10000FD38(&qword_1003759D8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3428);
          v13 = v9;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v11, v12, a2, a3);
          goto LABEL_16;
        case 6:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 40);
          goto LABEL_15;
        case 7:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 44);
          v15 = sub_10020C554();
          v16 = v14;
          v17 = &type metadata for Proto_Gnss_Emergency_SessionProtocol;
          goto LABEL_13;
        case 8:
          v18 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48);
          v15 = sub_10020C510();
          v16 = v18;
          v17 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
LABEL_13:
          v13 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v16, v17, v15, a2, a3);
          goto LABEL_16;
        case 9:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 52);
LABEL_15:
          v13 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
LABEL_16:
          v9 = v13;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B60E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  v9 = (int *)result;
  v10 = (unsigned int *)(v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)(v3 + v9[7]);
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    v12 = (unsigned int *)(v3 + v9[8]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 3, a2, a3);
    v13 = (unsigned int *)(v3 + v9[9]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4, a2, a3);
    v14 = *(_QWORD *)v3;
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      v15 = type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
      v16 = sub_10000FD38(&qword_1003759D8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3428);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v14, 5, v15, v16, a2, a3);
    }
    sub_10018AB4C(v3, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
    sub_1001B6344(v3, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t (*)(void))sub_10020C554, (uint64_t)&type metadata for Proto_Gnss_Emergency_SessionProtocol);
    sub_1001B63DC(v3, a1, a2, a3);
    sub_100199E48(v3, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001B6344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t result;
  uint64_t v13;
  char v14;

  result = a5(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 44)) != 6)
  {
    v14 = *(_BYTE *)(a1 + *(int *)(result + 44));
    v13 = a6();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v14, 7, a7, v13, a3, a4);
  }
  return result;
}

uint64_t sub_1001B63DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 48)) != 7)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 48));
    v8 = sub_10020C510();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 8, &type metadata for Proto_Gnss_Emergency_PosProtocol, v8, a3, a4);
  }
  return result;
}

Swift::Int sub_1001B6468()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, &qword_1003759E0, (uint64_t)&unk_1002E3690);
}

uint64_t sub_1001B6484@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = a1[9];
  v9 = (char *)a2 + a1[8];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a2 + v8;
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  v11 = a1[11];
  v12 = (char *)a2 + a1[10];
  *(_DWORD *)v12 = 0;
  v12[4] = 1;
  *((_BYTE *)a2 + v11) = 6;
  v13 = a1[13];
  *((_BYTE *)a2 + a1[12]) = 7;
  v14 = (char *)a2 + v13;
  *(_DWORD *)v14 = 0;
  v14[4] = 1;
  return result;
}

uint64_t sub_1001B6528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B5F18(a1, a2, a3);
}

uint64_t sub_1001B653C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B60E4(a1, a2, a3);
}

uint64_t sub_1001B6550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAB0, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3608);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B65A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C70, (uint64_t)qword_100384E38, (uint64_t)sub_1001B5C04, a1);
}

uint64_t sub_1001B65BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003767A0, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3590);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B65FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003767A0, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3590);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B664C()
{
  return &unk_100356ED0;
}

unint64_t sub_1001B6658()
{
  return 0xD000000000000026;
}

uint64_t sub_1001B6674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v37;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E50);
  sub_10000E6A4(v0, (uint64_t)qword_100384E50);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v37 = swift_allocObject(v1, v6 + 14 * v4, v5 | 7);
  *(_OWORD *)(v37 + 16) = xmmword_1002C4100;
  v7 = v37 + v6;
  v8 = v37 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v37 + v6) = 1;
  *(_QWORD *)v8 = "shape_type";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "hemisphere";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "altitude";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "latitude";
  *((_QWORD *)v16 + 1) = 8;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "longitude";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "direction_of_alt";
  *((_QWORD *)v20 + 1) = 16;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "semi_major_uncert";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "semi_minor_uncert";
  *((_QWORD *)v24 + 1) = 17;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "major_axis";
  *(_QWORD *)(v25 + 8) = 10;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "alt_uncert";
  *((_QWORD *)v27 + 1) = 10;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "confidence";
  *((_QWORD *)v29 + 1) = 10;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "session_protocol";
  *((_QWORD *)v31 + 1) = 16;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "pos_protocol";
  *((_QWORD *)v33 + 1) = 12;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "session_id";
  *((_QWORD *)v35 + 1) = 10;
  v35[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v37);
}

uint64_t sub_1001B6A54()
{
  return sub_100008BD0(&qword_1003B0C78, (uint64_t)qword_100384E50, (uint64_t)sub_1001B6674);
}

uint64_t sub_1001B6A70@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C78, (uint64_t)qword_100384E50, (uint64_t)sub_1001B6674, a1);
}

uint64_t sub_1001B6A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 20);
          goto LABEL_20;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 24);
          goto LABEL_20;
        case 3:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 28);
          goto LABEL_20;
        case 4:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 32);
          goto LABEL_20;
        case 5:
          v11 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
          v12 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v11 + 36), a2, a3);
          goto LABEL_21;
        case 6:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 40);
          goto LABEL_20;
        case 7:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 44);
          goto LABEL_20;
        case 8:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 48);
          goto LABEL_20;
        case 9:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 52);
          goto LABEL_20;
        case 10:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 56);
          goto LABEL_20;
        case 11:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 60);
          goto LABEL_20;
        case 12:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64);
          v14 = sub_10020C554();
          v15 = v13;
          v16 = &type metadata for Proto_Gnss_Emergency_SessionProtocol;
          goto LABEL_18;
        case 13:
          v17 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 68);
          v14 = sub_10020C510();
          v15 = v17;
          v16 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
LABEL_18:
          v12 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15, v16, v14, a2, a3);
          goto LABEL_21;
        case 14:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72);
LABEL_20:
          v12 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
LABEL_21:
          v9 = v12;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B6C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, 7);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_100199EC0(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
    sub_1001B6F54(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
    sub_1001B6FC8(v5, a1, a2, a3);
    sub_1001BBA0C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t (*)(void))sub_10020C510, (uint64_t)&type metadata for Proto_Gnss_Emergency_PosProtocol);
    sub_1001B7050(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001B6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  unsigned int *v9;

  result = a5(0);
  v9 = (unsigned int *)(a1 + *(int *)(result + 60));
  if ((v9[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v9, 11, a3, a4);
  return result;
}

uint64_t sub_1001B6FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 64)) != 6)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 64));
    v8 = sub_10020C554();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 12, &type metadata for Proto_Gnss_Emergency_SessionProtocol, v8, a3, a4);
  }
  return result;
}

uint64_t sub_1001B7050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned int *v8;

  result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v8 = (unsigned int *)(a1 + *(int *)(result + 72));
  if ((v8[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 14, a3, a4);
  return result;
}

Swift::Int sub_1001B70C8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, &qword_1003759E8, (uint64_t)&unk_1002E37F8);
}

uint64_t sub_1001B70E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B6A8C(a1, a2, a3);
}

uint64_t sub_1001B70FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B6C84(a1, a2, a3);
}

uint64_t sub_1001B7110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAA8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E3770);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B7160@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C78, (uint64_t)qword_100384E50, (uint64_t)sub_1001B6674, a1);
}

uint64_t sub_1001B717C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003767B8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E36F8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B71BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003767B8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E36F8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B720C()
{
  return &unk_100356EE0;
}

unint64_t sub_1001B7218()
{
  return 0xD000000000000021;
}

uint64_t sub_1001B7234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v75;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E68);
  sub_10000E6A4(v0, (uint64_t)qword_100384E68);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v75 = swift_allocObject(v1, v6 + 34 * v4, v5 | 7);
  *(_OWORD *)(v75 + 16) = xmmword_1002D9490;
  v7 = v75 + v6;
  v8 = v75 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v75 + v6) = 1;
  *(_QWORD *)v8 = "ephem_af0";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "ephem_m0";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "ephem_e";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "ephem_apower_half";
  *((_QWORD *)v16 + 1) = 17;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ephem_omega_a0";
  *((_QWORD *)v18 + 1) = 14;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ephem_i0";
  *((_QWORD *)v20 + 1) = 8;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "ephem_w";
  *((_QWORD *)v22 + 1) = 7;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "ephem_omega_dot";
  *((_QWORD *)v24 + 1) = 15;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "ephem_iodc";
  *(_QWORD *)(v25 + 8) = 10;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ephem_toc";
  *((_QWORD *)v27 + 1) = 9;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ephem_af1";
  *((_QWORD *)v29 + 1) = 9;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ephem_crs";
  *((_QWORD *)v31 + 1) = 9;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "ephem_delta_n";
  *((_QWORD *)v33 + 1) = 13;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "ephem_cuc";
  *((_QWORD *)v35 + 1) = 9;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ephem_cus";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "toe";
  *((_QWORD *)v39 + 1) = 3;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 17;
  *(_QWORD *)v40 = "ephem_cic";
  *(_QWORD *)(v40 + 8) = 9;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  v41 = (_QWORD *)(v7 + 17 * v4);
  v42 = (char *)v41 + *(int *)(v2 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "ephem_cis";
  *((_QWORD *)v42 + 1) = 9;
  v42[16] = 2;
  v11();
  v43 = (_QWORD *)(v7 + 18 * v4);
  v44 = (char *)v43 + *(int *)(v2 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "ephem_crc";
  *((_QWORD *)v44 + 1) = 9;
  v44[16] = 2;
  v11();
  v45 = (_QWORD *)(v7 + 19 * v4);
  v46 = (char *)v45 + *(int *)(v2 + 48);
  *v45 = 20;
  *(_QWORD *)v46 = "ephem_idot";
  *((_QWORD *)v46 + 1) = 10;
  v46[16] = 2;
  v11();
  v47 = (_QWORD *)(v7 + 20 * v4);
  v48 = (char *)v47 + *(int *)(v2 + 48);
  *v47 = 21;
  *(_QWORD *)v48 = "sat_id";
  *((_QWORD *)v48 + 1) = 6;
  v48[16] = 2;
  v11();
  v49 = (_QWORD *)(v7 + 21 * v4);
  v50 = (char *)v49 + *(int *)(v2 + 48);
  *v49 = 22;
  *(_QWORD *)v50 = "ephem_ura";
  *((_QWORD *)v50 + 1) = 9;
  v50[16] = 2;
  v11();
  v51 = (_QWORD *)(v7 + 22 * v4);
  v52 = (char *)v51 + *(int *)(v2 + 48);
  *v51 = 23;
  *(_QWORD *)v52 = "ephem_sv_health";
  *((_QWORD *)v52 + 1) = 15;
  v52[16] = 2;
  v11();
  v53 = (_QWORD *)(v7 + 23 * v4);
  v54 = (char *)v53 + *(int *)(v2 + 48);
  *v53 = 24;
  *(_QWORD *)v54 = "ephem_af2";
  *((_QWORD *)v54 + 1) = 9;
  v54[16] = 2;
  v11();
  v55 = (_QWORD *)(v7 + 24 * v4);
  v56 = (char *)v55 + *(int *)(v2 + 48);
  *v55 = 25;
  *(_QWORD *)v56 = "sat_status";
  *((_QWORD *)v56 + 1) = 10;
  v56[16] = 2;
  v11();
  v57 = (_QWORD *)(v7 + 25 * v4);
  v58 = (char *)v57 + *(int *)(v2 + 48);
  *v57 = 26;
  *(_QWORD *)v58 = "ephem_code_on_l2";
  *((_QWORD *)v58 + 1) = 16;
  v58[16] = 2;
  v11();
  v59 = (_QWORD *)(v7 + 26 * v4);
  v60 = (char *)v59 + *(int *)(v2 + 48);
  *v59 = 27;
  *(_QWORD *)v60 = "ephem_l2_pflag";
  *((_QWORD *)v60 + 1) = 14;
  v60[16] = 2;
  v11();
  v61 = (_QWORD *)(v7 + 27 * v4);
  v62 = (char *)v61 + *(int *)(v2 + 48);
  *v61 = 28;
  *(_QWORD *)v62 = "ephem_tgd";
  *((_QWORD *)v62 + 1) = 9;
  v62[16] = 2;
  v11();
  v63 = (_QWORD *)(v7 + 28 * v4);
  v64 = (char *)v63 + *(int *)(v2 + 48);
  *v63 = 29;
  *(_QWORD *)v64 = "ephem_fit_flag";
  *((_QWORD *)v64 + 1) = 14;
  v64[16] = 2;
  v11();
  v65 = (_QWORD *)(v7 + 29 * v4);
  v66 = (char *)v65 + *(int *)(v2 + 48);
  *v65 = 30;
  *(_QWORD *)v66 = "ephem_aodo";
  *((_QWORD *)v66 + 1) = 10;
  v66[16] = 2;
  v11();
  v67 = (_QWORD *)(v7 + 30 * v4);
  v68 = (char *)v67 + *(int *)(v2 + 48);
  *v67 = 31;
  *(_QWORD *)v68 = "reserved1";
  *((_QWORD *)v68 + 1) = 9;
  v68[16] = 2;
  v11();
  v69 = (_QWORD *)(v7 + 31 * v4);
  v70 = (char *)v69 + *(int *)(v2 + 48);
  *v69 = 32;
  *(_QWORD *)v70 = "reserved2";
  *((_QWORD *)v70 + 1) = 9;
  v70[16] = 2;
  v11();
  v71 = v7 + 32 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 32 * v4) = 33;
  *(_QWORD *)v71 = "reserved3";
  *(_QWORD *)(v71 + 8) = 9;
  *(_BYTE *)(v71 + 16) = 2;
  v11();
  v72 = (_QWORD *)(v7 + 33 * v4);
  v73 = (char *)v72 + *(int *)(v2 + 48);
  *v72 = 34;
  *(_QWORD *)v73 = "reserved4";
  *((_QWORD *)v73 + 1) = 9;
  v73[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v75);
}

uint64_t sub_1001B7A20()
{
  return sub_100008BD0(&qword_1003B0C80, (uint64_t)qword_100384E68, (uint64_t)sub_1001B7234);
}

uint64_t sub_1001B7A3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C80, (uint64_t)qword_100384E68, (uint64_t)sub_1001B7234, a1);
}

uint64_t sub_1001B7A58()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
  result = swift_allocObject(v0, 285, 7);
  *(_DWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 20) = 1;
  *(_DWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 28) = 1;
  *(_DWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 36) = 1;
  *(_DWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 44) = 1;
  *(_DWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 52) = 1;
  *(_DWORD *)(result + 56) = 0;
  *(_BYTE *)(result + 60) = 1;
  *(_DWORD *)(result + 64) = 0;
  *(_BYTE *)(result + 68) = 1;
  *(_DWORD *)(result + 72) = 0;
  *(_BYTE *)(result + 76) = 1;
  *(_DWORD *)(result + 80) = 0;
  *(_BYTE *)(result + 84) = 1;
  *(_DWORD *)(result + 88) = 0;
  *(_BYTE *)(result + 92) = 1;
  *(_DWORD *)(result + 96) = 0;
  *(_BYTE *)(result + 100) = 1;
  *(_DWORD *)(result + 104) = 0;
  *(_BYTE *)(result + 108) = 1;
  *(_DWORD *)(result + 112) = 0;
  *(_BYTE *)(result + 116) = 1;
  *(_DWORD *)(result + 120) = 0;
  *(_BYTE *)(result + 124) = 1;
  *(_DWORD *)(result + 128) = 0;
  *(_BYTE *)(result + 132) = 1;
  *(_DWORD *)(result + 136) = 0;
  *(_BYTE *)(result + 140) = 1;
  *(_DWORD *)(result + 144) = 0;
  *(_BYTE *)(result + 148) = 1;
  *(_DWORD *)(result + 152) = 0;
  *(_BYTE *)(result + 156) = 1;
  *(_DWORD *)(result + 160) = 0;
  *(_BYTE *)(result + 164) = 1;
  *(_DWORD *)(result + 168) = 0;
  *(_BYTE *)(result + 172) = 1;
  *(_DWORD *)(result + 176) = 0;
  *(_BYTE *)(result + 180) = 1;
  *(_DWORD *)(result + 184) = 0;
  *(_BYTE *)(result + 188) = 1;
  *(_DWORD *)(result + 192) = 0;
  *(_BYTE *)(result + 196) = 1;
  *(_DWORD *)(result + 200) = 0;
  *(_BYTE *)(result + 204) = 1;
  *(_DWORD *)(result + 208) = 0;
  *(_BYTE *)(result + 212) = 1;
  *(_DWORD *)(result + 216) = 0;
  *(_BYTE *)(result + 220) = 1;
  *(_DWORD *)(result + 224) = 0;
  *(_BYTE *)(result + 228) = 1;
  *(_DWORD *)(result + 232) = 0;
  *(_BYTE *)(result + 236) = 1;
  *(_DWORD *)(result + 240) = 0;
  *(_BYTE *)(result + 244) = 1;
  *(_DWORD *)(result + 248) = 0;
  *(_BYTE *)(result + 252) = 1;
  *(_DWORD *)(result + 256) = 0;
  *(_BYTE *)(result + 260) = 1;
  *(_DWORD *)(result + 264) = 0;
  *(_BYTE *)(result + 268) = 1;
  *(_DWORD *)(result + 272) = 0;
  *(_BYTE *)(result + 276) = 1;
  *(_DWORD *)(result + 280) = 0;
  *(_BYTE *)(result + 284) = 1;
  qword_1003B0C90 = result;
  return result;
}

uint64_t sub_1001B7B94()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 285, 7);
}

uint64_t sub_1001B7BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];
  uint64_t v23;

  v5 = v3;
  v8 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v8)) & 1) == 0)
  {
    v9 = *(_QWORD *)(v3 + v8);
    v10 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass();
    v11 = swift_allocObject(v10, 285, 7);
    sub_1001C46B4(v9);
    v12 = *(_QWORD *)(v5 + v8);
    *(_QWORD *)(v5 + v8) = v11;
    swift_release(v12);
  }
  v13 = *(_QWORD *)(v5 + v8);
  swift_retain(v13);
  v14 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v16 = v4;
  if (!v4)
  {
    v23 = v13 + 280;
    while ((v15 & 1) == 0)
    {
      switch(v14)
      {
        case 1:
          swift_beginAccess(v13 + 16, v22, 33, 0);
          v18 = v13 + 16;
          goto LABEL_37;
        case 2:
          swift_beginAccess(v13 + 24, v22, 33, 0);
          v18 = v13 + 24;
          goto LABEL_37;
        case 3:
          v19 = v13 + 32;
          goto LABEL_44;
        case 4:
          v19 = v13 + 40;
          goto LABEL_44;
        case 5:
          v20 = v13 + 48;
          goto LABEL_36;
        case 6:
          v20 = v13 + 56;
          goto LABEL_36;
        case 7:
          v20 = v13 + 64;
          goto LABEL_36;
        case 8:
          v20 = v13 + 72;
          goto LABEL_36;
        case 9:
          v19 = v13 + 80;
          goto LABEL_44;
        case 10:
          v19 = v13 + 88;
          goto LABEL_44;
        case 11:
          v20 = v13 + 96;
          goto LABEL_36;
        case 12:
          v20 = v13 + 104;
          goto LABEL_36;
        case 13:
          v20 = v13 + 112;
          goto LABEL_36;
        case 14:
          v20 = v13 + 120;
          goto LABEL_36;
        case 15:
          v20 = v13 + 128;
          goto LABEL_36;
        case 16:
          v19 = v13 + 136;
          goto LABEL_44;
        case 17:
          v20 = v13 + 144;
          goto LABEL_36;
        case 18:
          v20 = v13 + 152;
          goto LABEL_36;
        case 19:
          v20 = v13 + 160;
          goto LABEL_36;
        case 20:
          v20 = v13 + 168;
          goto LABEL_36;
        case 21:
          v19 = v13 + 176;
          goto LABEL_44;
        case 22:
          v19 = v13 + 184;
          goto LABEL_44;
        case 23:
          v19 = v13 + 192;
          goto LABEL_44;
        case 24:
          v20 = v13 + 200;
          goto LABEL_36;
        case 25:
          v19 = v13 + 208;
          goto LABEL_44;
        case 26:
          v19 = v13 + 216;
          goto LABEL_44;
        case 27:
          v19 = v13 + 224;
          goto LABEL_44;
        case 28:
          v20 = v13 + 232;
LABEL_36:
          swift_beginAccess(v20, v22, 33, 0);
          v18 = v20;
LABEL_37:
          v21 = v16;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v18, a2, a3);
          goto LABEL_45;
        case 29:
          v19 = v13 + 240;
          goto LABEL_44;
        case 30:
          v19 = v13 + 248;
          goto LABEL_44;
        case 31:
          v19 = v13 + 256;
          goto LABEL_44;
        case 32:
          v19 = v13 + 264;
          goto LABEL_44;
        case 33:
          v19 = v13 + 272;
          goto LABEL_44;
        case 34:
          v19 = v23;
LABEL_44:
          swift_beginAccess(v19, v22, 33, 0);
          v21 = v16;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v19, a2, a3);
LABEL_45:
          v16 = v21;
          swift_endAccess(v22);
          break;
        default:
          break;
      }
      v14 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v13);
}

uint64_t sub_1001B7F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v11, 0, 0);
  if ((*(_BYTE *)(v9 + 20) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 16), 1, a2, a3);
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 24, v12, 0, 0);
  if ((*(_BYTE *)(v9 + 28) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 24), 2, a2, a3);
  swift_beginAccess(v9 + 32, v13, 0, 0);
  if ((*(_BYTE *)(v9 + 36) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 32), 3, a2, a3);
  swift_beginAccess(v9 + 40, v14, 0, 0);
  if ((*(_BYTE *)(v9 + 44) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 40), 4, a2, a3);
  swift_beginAccess(v9 + 48, v44, 0, 0);
  if ((*(_BYTE *)(v9 + 52) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 48), 5, a2, a3);
  swift_beginAccess(v9 + 56, v43, 0, 0);
  if ((*(_BYTE *)(v9 + 60) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 56), 6, a2, a3);
  swift_beginAccess(v9 + 64, v42, 0, 0);
  if ((*(_BYTE *)(v9 + 68) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 64), 7, a2, a3);
  swift_beginAccess(v9 + 72, v41, 0, 0);
  if ((*(_BYTE *)(v9 + 76) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 72), 8, a2, a3);
  swift_beginAccess(v9 + 80, v40, 0, 0);
  if ((*(_BYTE *)(v9 + 84) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 80), 9, a2, a3);
  swift_beginAccess(v9 + 88, v39, 0, 0);
  if ((*(_BYTE *)(v9 + 92) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 88), 10, a2, a3);
  swift_beginAccess(v9 + 96, v38, 0, 0);
  if ((*(_BYTE *)(v9 + 100) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 96), 11, a2, a3);
  swift_beginAccess(v9 + 104, v37, 0, 0);
  if ((*(_BYTE *)(v9 + 108) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 104), 12, a2, a3);
  swift_beginAccess(v9 + 112, v36, 0, 0);
  if ((*(_BYTE *)(v9 + 116) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 112), 13, a2, a3);
  swift_beginAccess(v9 + 120, v35, 0, 0);
  if ((*(_BYTE *)(v9 + 124) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 120), 14, a2, a3);
  swift_beginAccess(v9 + 128, v34, 0, 0);
  if ((*(_BYTE *)(v9 + 132) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 128), 15, a2, a3);
  swift_beginAccess(v9 + 136, v33, 0, 0);
  if ((*(_BYTE *)(v9 + 140) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 136), 16, a2, a3);
  swift_beginAccess(v9 + 144, v32, 0, 0);
  if ((*(_BYTE *)(v9 + 148) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 144), 17, a2, a3);
  swift_beginAccess(v9 + 152, v31, 0, 0);
  if ((*(_BYTE *)(v9 + 156) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 152), 18, a2, a3);
  swift_beginAccess(v9 + 160, v30, 0, 0);
  if ((*(_BYTE *)(v9 + 164) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 160), 19, a2, a3);
  swift_beginAccess(v9 + 168, v29, 0, 0);
  if ((*(_BYTE *)(v9 + 172) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 168), 20, a2, a3);
  swift_beginAccess(v9 + 176, v28, 0, 0);
  if ((*(_BYTE *)(v9 + 180) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 176), 21, a2, a3);
  swift_beginAccess(v9 + 184, v27, 0, 0);
  if ((*(_BYTE *)(v9 + 188) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 184), 22, a2, a3);
  swift_beginAccess(v9 + 192, v26, 0, 0);
  if ((*(_BYTE *)(v9 + 196) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 192), 23, a2, a3);
  swift_beginAccess(v9 + 200, v25, 0, 0);
  if ((*(_BYTE *)(v9 + 204) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 200), 24, a2, a3);
  swift_beginAccess(v9 + 208, v24, 0, 0);
  if ((*(_BYTE *)(v9 + 212) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 208), 25, a2, a3);
  swift_beginAccess(v9 + 216, v23, 0, 0);
  if ((*(_BYTE *)(v9 + 220) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 216), 26, a2, a3);
  swift_beginAccess(v9 + 224, v22, 0, 0);
  if ((*(_BYTE *)(v9 + 228) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 224), 27, a2, a3);
  swift_beginAccess(v9 + 232, v21, 0, 0);
  if ((*(_BYTE *)(v9 + 236) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 232), 28, a2, a3);
  swift_beginAccess(v9 + 240, v20, 0, 0);
  if ((*(_BYTE *)(v9 + 244) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 240), 29, a2, a3);
  swift_beginAccess(v9 + 248, v19, 0, 0);
  if ((*(_BYTE *)(v9 + 252) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 248), 30, a2, a3);
  swift_beginAccess(v9 + 256, v18, 0, 0);
  if ((*(_BYTE *)(v9 + 260) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 256), 31, a2, a3);
  swift_beginAccess(v9 + 264, v17, 0, 0);
  if ((*(_BYTE *)(v9 + 268) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 264), 32, a2, a3);
  swift_beginAccess(v9 + 272, v16, 0, 0);
  if ((*(_BYTE *)(v9 + 276) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 272), 33, a2, a3);
  swift_beginAccess(v9 + 280, v15, 0, 0);
  if ((*(_BYTE *)(v9 + 284) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 280), 34, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001B88C4(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  char v6;
  int v7;
  char v8;
  char v9;
  int v10;
  char v11;
  char v12;
  int v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  int v19;
  char v20;
  char v21;
  int v22;
  char v23;
  char v24;
  int v25;
  char v26;
  char v27;
  int v28;
  char v29;
  char v30;
  int v31;
  char v32;
  char v33;
  int v34;
  char v35;
  char v36;
  int v37;
  char v38;
  char v39;
  int v40;
  char v41;
  char v42;
  int v43;
  char v44;
  char v45;
  int v46;
  char v47;
  char v48;
  int v49;
  char v50;
  char v51;
  int v52;
  char v53;
  char v54;
  int v55;
  char v56;
  char v57;
  int v58;
  char v59;
  char v60;
  int v61;
  char v62;
  char v63;
  int v64;
  char v65;
  char v66;
  int v67;
  char v68;
  char v69;
  int v70;
  char v71;
  char v72;
  int v73;
  char v74;
  char v75;
  int v76;
  char v77;
  char v78;
  int v79;
  char v80;
  char v81;
  int v82;
  char v83;
  char v84;
  int v85;
  char v86;
  char v87;
  int v88;
  char v89;
  char v90;
  int v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  char v97;
  char v98;
  int v99;
  char v100;
  char v101;
  int v102;
  char v103;
  char v104;
  int v105;
  char v106;
  _DWORD *v107;
  char v108;
  uint64_t v110;
  _BYTE v111[24];
  _BYTE v112[24];
  _BYTE v113[24];
  _BYTE v114[24];
  _BYTE v115[24];
  _BYTE v116[24];
  _BYTE v117[24];
  _BYTE v118[24];
  _BYTE v119[24];
  _BYTE v120[24];
  _BYTE v121[24];
  _BYTE v122[24];
  _BYTE v123[24];
  _BYTE v124[24];
  _BYTE v125[24];
  _BYTE v126[24];
  _BYTE v127[24];
  _BYTE v128[24];
  _BYTE v129[24];
  _BYTE v130[24];
  _BYTE v131[24];
  _BYTE v132[24];
  _BYTE v133[24];
  _BYTE v134[24];
  _BYTE v135[24];
  _BYTE v136[24];
  _BYTE v137[24];
  _BYTE v138[24];
  _BYTE v139[24];
  _BYTE v140[24];
  _BYTE v141[24];
  _BYTE v142[24];
  _BYTE v143[24];
  _BYTE v144[24];
  _BYTE v145[24];
  _BYTE v146[24];
  _BYTE v147[24];
  _BYTE v148[24];
  _BYTE v149[24];
  _BYTE v150[24];
  _BYTE v151[24];
  _BYTE v152[24];
  _BYTE v153[24];
  _BYTE v154[24];
  _BYTE v155[24];
  _BYTE v156[24];
  _BYTE v157[24];
  _BYTE v158[24];
  _BYTE v159[24];
  _BYTE v160[24];
  _BYTE v161[24];
  _BYTE v162[24];
  _BYTE v163[24];
  _BYTE v164[24];
  _BYTE v165[24];
  _BYTE v166[24];
  _BYTE v167[24];
  _BYTE v168[24];
  _BYTE v169[24];
  _BYTE v170[24];
  _BYTE v171[24];
  _BYTE v172[24];
  _BYTE v173[24];
  _BYTE v174[24];
  _BYTE v175[24];
  _BYTE v176[24];
  _BYTE v177[24];

  swift_beginAccess(a1 + 16, v177, 0, 0);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  swift_beginAccess(a2 + 16, v176, 0, 0);
  v6 = *(_BYTE *)(a2 + 20);
  if ((v5 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else
  {
    if (v4 != *(_DWORD *)(a2 + 16))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 24, v175, 0, 0);
  v7 = *(_DWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 28);
  swift_beginAccess(a2 + 24, v174, 0, 0);
  v9 = *(_BYTE *)(a2 + 28);
  if ((v8 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 28))
      return 0;
  }
  else
  {
    if (v7 != *(_DWORD *)(a2 + 24))
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 32, v173, 0, 0);
  v10 = *(_DWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 36);
  swift_beginAccess(a2 + 32, v172, 0, 0);
  v12 = *(_BYTE *)(a2 + 36);
  if ((v11 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 36))
      return 0;
  }
  else
  {
    if (v10 != *(_DWORD *)(a2 + 32))
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 40, v171, 0, 0);
  v13 = *(_DWORD *)(a1 + 40);
  v14 = *(_BYTE *)(a1 + 44);
  swift_beginAccess(a2 + 40, v170, 0, 0);
  v15 = *(_BYTE *)(a2 + 44);
  if ((v14 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 44))
      return 0;
  }
  else
  {
    if (v13 != *(_DWORD *)(a2 + 40))
      v15 = 1;
    if ((v15 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 48, v169, 0, 0);
  v16 = *(_DWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 52);
  swift_beginAccess(a2 + 48, v168, 0, 0);
  v18 = *(_BYTE *)(a2 + 52);
  if ((v17 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 52))
      return 0;
  }
  else
  {
    if (v16 != *(_DWORD *)(a2 + 48))
      v18 = 1;
    if ((v18 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 56, v167, 0, 0);
  v19 = *(_DWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 60);
  swift_beginAccess(a2 + 56, v166, 0, 0);
  v21 = *(_BYTE *)(a2 + 60);
  if ((v20 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 60))
      return 0;
  }
  else
  {
    if (v19 != *(_DWORD *)(a2 + 56))
      v21 = 1;
    if ((v21 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 64, v165, 0, 0);
  v22 = *(_DWORD *)(a1 + 64);
  v23 = *(_BYTE *)(a1 + 68);
  swift_beginAccess(a2 + 64, v164, 0, 0);
  v24 = *(_BYTE *)(a2 + 68);
  if ((v23 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 68))
      return 0;
  }
  else
  {
    if (v22 != *(_DWORD *)(a2 + 64))
      v24 = 1;
    if ((v24 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 72, v163, 0, 0);
  v25 = *(_DWORD *)(a1 + 72);
  v26 = *(_BYTE *)(a1 + 76);
  swift_beginAccess(a2 + 72, v162, 0, 0);
  v27 = *(_BYTE *)(a2 + 76);
  if ((v26 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 76))
      return 0;
  }
  else
  {
    if (v25 != *(_DWORD *)(a2 + 72))
      v27 = 1;
    if ((v27 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 80, v161, 0, 0);
  v28 = *(_DWORD *)(a1 + 80);
  v29 = *(_BYTE *)(a1 + 84);
  swift_beginAccess(a2 + 80, v160, 0, 0);
  v30 = *(_BYTE *)(a2 + 84);
  if ((v29 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 84))
      return 0;
  }
  else
  {
    if (v28 != *(_DWORD *)(a2 + 80))
      v30 = 1;
    if ((v30 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 88, v159, 0, 0);
  v31 = *(_DWORD *)(a1 + 88);
  v32 = *(_BYTE *)(a1 + 92);
  swift_beginAccess(a2 + 88, v158, 0, 0);
  v33 = *(_BYTE *)(a2 + 92);
  if ((v32 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 92))
      return 0;
  }
  else
  {
    if (v31 != *(_DWORD *)(a2 + 88))
      v33 = 1;
    if ((v33 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 96, v157, 0, 0);
  v34 = *(_DWORD *)(a1 + 96);
  v35 = *(_BYTE *)(a1 + 100);
  swift_beginAccess(a2 + 96, v156, 0, 0);
  v36 = *(_BYTE *)(a2 + 100);
  if ((v35 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 100))
      return 0;
  }
  else
  {
    if (v34 != *(_DWORD *)(a2 + 96))
      v36 = 1;
    if ((v36 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 104, v155, 0, 0);
  v37 = *(_DWORD *)(a1 + 104);
  v38 = *(_BYTE *)(a1 + 108);
  swift_beginAccess(a2 + 104, v154, 0, 0);
  v39 = *(_BYTE *)(a2 + 108);
  if ((v38 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 108))
      return 0;
  }
  else
  {
    if (v37 != *(_DWORD *)(a2 + 104))
      v39 = 1;
    if ((v39 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 112, v153, 0, 0);
  v40 = *(_DWORD *)(a1 + 112);
  v41 = *(_BYTE *)(a1 + 116);
  swift_beginAccess(a2 + 112, v152, 0, 0);
  v42 = *(_BYTE *)(a2 + 116);
  if ((v41 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 116))
      return 0;
  }
  else
  {
    if (v40 != *(_DWORD *)(a2 + 112))
      v42 = 1;
    if ((v42 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 120, v151, 0, 0);
  v43 = *(_DWORD *)(a1 + 120);
  v44 = *(_BYTE *)(a1 + 124);
  swift_beginAccess(a2 + 120, v150, 0, 0);
  v45 = *(_BYTE *)(a2 + 124);
  if ((v44 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 124))
      return 0;
  }
  else
  {
    if (v43 != *(_DWORD *)(a2 + 120))
      v45 = 1;
    if ((v45 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 128, v149, 0, 0);
  v46 = *(_DWORD *)(a1 + 128);
  v47 = *(_BYTE *)(a1 + 132);
  swift_beginAccess(a2 + 128, v148, 0, 0);
  v48 = *(_BYTE *)(a2 + 132);
  if ((v47 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 132))
      return 0;
  }
  else
  {
    if (v46 != *(_DWORD *)(a2 + 128))
      v48 = 1;
    if ((v48 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 136, v147, 0, 0);
  v49 = *(_DWORD *)(a1 + 136);
  v50 = *(_BYTE *)(a1 + 140);
  swift_beginAccess(a2 + 136, v146, 0, 0);
  v51 = *(_BYTE *)(a2 + 140);
  if ((v50 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 140))
      return 0;
  }
  else
  {
    if (v49 != *(_DWORD *)(a2 + 136))
      v51 = 1;
    if ((v51 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 144, v145, 0, 0);
  v52 = *(_DWORD *)(a1 + 144);
  v53 = *(_BYTE *)(a1 + 148);
  swift_beginAccess(a2 + 144, v144, 0, 0);
  v54 = *(_BYTE *)(a2 + 148);
  if ((v53 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 148))
      return 0;
  }
  else
  {
    if (v52 != *(_DWORD *)(a2 + 144))
      v54 = 1;
    if ((v54 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 152, v143, 0, 0);
  v55 = *(_DWORD *)(a1 + 152);
  v56 = *(_BYTE *)(a1 + 156);
  swift_beginAccess(a2 + 152, v142, 0, 0);
  v57 = *(_BYTE *)(a2 + 156);
  if ((v56 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 156))
      return 0;
  }
  else
  {
    if (v55 != *(_DWORD *)(a2 + 152))
      v57 = 1;
    if ((v57 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 160, v141, 0, 0);
  v58 = *(_DWORD *)(a1 + 160);
  v59 = *(_BYTE *)(a1 + 164);
  swift_beginAccess(a2 + 160, v140, 0, 0);
  v60 = *(_BYTE *)(a2 + 164);
  if ((v59 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 164))
      return 0;
  }
  else
  {
    if (v58 != *(_DWORD *)(a2 + 160))
      v60 = 1;
    if ((v60 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 168, v139, 0, 0);
  v61 = *(_DWORD *)(a1 + 168);
  v62 = *(_BYTE *)(a1 + 172);
  swift_beginAccess(a2 + 168, v138, 0, 0);
  v63 = *(_BYTE *)(a2 + 172);
  if ((v62 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 172))
      return 0;
  }
  else
  {
    if (v61 != *(_DWORD *)(a2 + 168))
      v63 = 1;
    if ((v63 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 176, v137, 0, 0);
  v64 = *(_DWORD *)(a1 + 176);
  v65 = *(_BYTE *)(a1 + 180);
  swift_beginAccess(a2 + 176, v136, 0, 0);
  v66 = *(_BYTE *)(a2 + 180);
  if ((v65 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 180))
      return 0;
  }
  else
  {
    if (v64 != *(_DWORD *)(a2 + 176))
      v66 = 1;
    if ((v66 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 184, v135, 0, 0);
  v67 = *(_DWORD *)(a1 + 184);
  v68 = *(_BYTE *)(a1 + 188);
  swift_beginAccess(a2 + 184, v134, 0, 0);
  v69 = *(_BYTE *)(a2 + 188);
  if ((v68 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 188))
      return 0;
  }
  else
  {
    if (v67 != *(_DWORD *)(a2 + 184))
      v69 = 1;
    if ((v69 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 192, v133, 0, 0);
  v70 = *(_DWORD *)(a1 + 192);
  v71 = *(_BYTE *)(a1 + 196);
  swift_beginAccess(a2 + 192, v132, 0, 0);
  v72 = *(_BYTE *)(a2 + 196);
  if ((v71 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 196))
      return 0;
  }
  else
  {
    if (v70 != *(_DWORD *)(a2 + 192))
      v72 = 1;
    if ((v72 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 200, v131, 0, 0);
  v73 = *(_DWORD *)(a1 + 200);
  v74 = *(_BYTE *)(a1 + 204);
  swift_beginAccess(a2 + 200, v130, 0, 0);
  v75 = *(_BYTE *)(a2 + 204);
  if ((v74 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 204))
      return 0;
  }
  else
  {
    if (v73 != *(_DWORD *)(a2 + 200))
      v75 = 1;
    if ((v75 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 208, v129, 0, 0);
  v76 = *(_DWORD *)(a1 + 208);
  v77 = *(_BYTE *)(a1 + 212);
  swift_beginAccess(a2 + 208, v128, 0, 0);
  v78 = *(_BYTE *)(a2 + 212);
  if ((v77 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 212))
      return 0;
  }
  else
  {
    if (v76 != *(_DWORD *)(a2 + 208))
      v78 = 1;
    if ((v78 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 216, v127, 0, 0);
  v79 = *(_DWORD *)(a1 + 216);
  v80 = *(_BYTE *)(a1 + 220);
  swift_beginAccess(a2 + 216, v126, 0, 0);
  v81 = *(_BYTE *)(a2 + 220);
  if ((v80 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 220))
      return 0;
  }
  else
  {
    if (v79 != *(_DWORD *)(a2 + 216))
      v81 = 1;
    if ((v81 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 224, v125, 0, 0);
  v82 = *(_DWORD *)(a1 + 224);
  v83 = *(_BYTE *)(a1 + 228);
  swift_beginAccess(a2 + 224, v124, 0, 0);
  v84 = *(_BYTE *)(a2 + 228);
  if ((v83 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 228))
      return 0;
  }
  else
  {
    if (v82 != *(_DWORD *)(a2 + 224))
      v84 = 1;
    if ((v84 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 232, v123, 0, 0);
  v85 = *(_DWORD *)(a1 + 232);
  v86 = *(_BYTE *)(a1 + 236);
  swift_beginAccess(a2 + 232, v122, 0, 0);
  v87 = *(_BYTE *)(a2 + 236);
  if ((v86 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 236))
      return 0;
  }
  else
  {
    if (v85 != *(_DWORD *)(a2 + 232))
      v87 = 1;
    if ((v87 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 240, v121, 0, 0);
  v88 = *(_DWORD *)(a1 + 240);
  v89 = *(_BYTE *)(a1 + 244);
  swift_beginAccess(a2 + 240, v120, 0, 0);
  v90 = *(_BYTE *)(a2 + 244);
  if ((v89 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 244))
      return 0;
  }
  else
  {
    if (v88 != *(_DWORD *)(a2 + 240))
      v90 = 1;
    if ((v90 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 248, v119, 0, 0);
  v91 = *(_DWORD *)(a1 + 248);
  v92 = *(_BYTE *)(a1 + 252);
  swift_beginAccess(a2 + 248, v118, 0, 0);
  v93 = *(_BYTE *)(a2 + 252);
  if ((v92 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 252))
      return 0;
  }
  else
  {
    if (v91 != *(_DWORD *)(a2 + 248))
      v93 = 1;
    if ((v93 & 1) != 0)
      return 0;
  }
  v94 = a2 + 260;
  v95 = a1 + 260;
  swift_beginAccess(a1 + 256, v117, 0, 0);
  v96 = *(_DWORD *)(a1 + 256);
  v97 = *(_BYTE *)(a1 + 260);
  swift_beginAccess(a2 + 256, v116, 0, 0);
  v98 = *(_BYTE *)(a2 + 260);
  if ((v97 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 260))
      return 0;
  }
  else
  {
    if (v96 != *(_DWORD *)(a2 + 256))
      v98 = 1;
    if ((v98 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 264, v115, 0, 0);
  v99 = *(_DWORD *)(a1 + 264);
  v100 = *(_BYTE *)(a1 + 268);
  swift_beginAccess(a2 + 264, v114, 0, 0);
  v101 = *(_BYTE *)(a2 + 268);
  if ((v100 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 268))
      return 0;
  }
  else
  {
    if (v99 != *(_DWORD *)(a2 + 264))
      v101 = 1;
    if ((v101 & 1) != 0)
      return 0;
  }
  swift_beginAccess(a1 + 272, v113, 0, 0);
  v102 = *(_DWORD *)(a1 + 272);
  v103 = *(_BYTE *)(a1 + 276);
  swift_beginAccess(a2 + 272, v112, 0, 0);
  v104 = *(_BYTE *)(a2 + 276);
  if ((v103 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 276))
      goto LABEL_199;
    return 0;
  }
  if (v102 != *(_DWORD *)(a2 + 272))
    v104 = 1;
  if ((v104 & 1) != 0)
    return 0;
LABEL_199:
  swift_beginAccess(a1 + 280, v111, 0, 0);
  v105 = *(_DWORD *)(a1 + 280);
  v106 = *(_BYTE *)(v95 + 24);
  v107 = (_DWORD *)(a2 + 280);
  swift_beginAccess(v107, &v110, 0, 0);
  v108 = *(_BYTE *)(v94 + 24);
  if ((v106 & 1) != 0)
  {
    if (!*(_BYTE *)(v94 + 24))
      return 0;
  }
  else
  {
    if (v105 != *v107)
      v108 = 1;
    if ((v108 & 1) != 0)
      return 0;
  }
  return 1;
}

Swift::Int sub_1001B943C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, &qword_1003759F0, (uint64_t)&unk_1002E3960);
}

uint64_t sub_1001B9458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0C88, &qword_1003B0C90, (uint64_t)sub_1001B7A58, a2);
}

uint64_t sub_1001B9474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B7BA4(a1, a2, a3);
}

uint64_t sub_1001B9488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B7F9C(a1, a2, a3);
}

uint64_t sub_1001B949C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BAA0, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E38D8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B94EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C80, (uint64_t)qword_100384E68, (uint64_t)sub_1001B7234, a1);
}

uint64_t sub_1001B9508(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003759F8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3860);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B9548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003759F8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3860);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B9598()
{
  return &unk_100356EF0;
}

unint64_t sub_1001B95A4()
{
  return 0xD000000000000027;
}

uint64_t sub_1001B95C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384E80);
  sub_10000E6A4(v0, (uint64_t)qword_100384E80);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3100;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "nr_of_sats";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "ephemeris";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v7 + v6 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "session_protocol";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v7 + v6 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "pos_protocol";
  *((_QWORD *)v17 + 1) = 12;
  v17[16] = 2;
  v12();
  v18 = v7 + v6 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "session_id";
  *(_QWORD *)(v18 + 8) = 10;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001B97CC()
{
  return sub_100008BD0(&qword_1003B0C98, (uint64_t)qword_100384E80, (uint64_t)sub_1001B95C0);
}

uint64_t sub_1001B97E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0C98, (uint64_t)qword_100384E80, (uint64_t)sub_1001B95C0, a1);
}

uint64_t sub_1001B9804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  ValueMetadata *v17;
  uint64_t v18;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 24);
          goto LABEL_5;
        case 2:
          v12 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0);
          v13 = sub_10000FD38(&qword_1003759F8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3860);
          v11 = v9;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v12, v13, a2, a3);
          goto LABEL_6;
        case 3:
          v14 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 28);
          v15 = sub_10020C554();
          v16 = v14;
          v17 = &type metadata for Proto_Gnss_Emergency_SessionProtocol;
          goto LABEL_14;
        case 4:
          v18 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 32);
          v15 = sub_10020C510();
          v16 = v18;
          v17 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
LABEL_14:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v16, v17, v15, a2, a3);
          goto LABEL_6;
        case 5:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0) + 36);
LABEL_5:
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
LABEL_6:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001B9990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  int *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int *v16;
  char v17;
  char v18;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  v9 = (int *)result;
  v10 = (unsigned int *)((char *)v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v12 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0);
      v13 = sub_10000FD38(&qword_1003759F8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3860);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v11, 2, v12, v13, a2, a3);
    }
    if (*((_BYTE *)v3 + v9[7]) != 6)
    {
      v17 = *((_BYTE *)v3 + v9[7]);
      v14 = sub_10020C554();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v17, 3, &type metadata for Proto_Gnss_Emergency_SessionProtocol, v14, a2, a3);
    }
    if (*((_BYTE *)v3 + v9[8]) != 7)
    {
      v18 = *((_BYTE *)v3 + v9[8]);
      v15 = sub_10020C510();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v18, 4, &type metadata for Proto_Gnss_Emergency_PosProtocol, v15, a2, a3);
    }
    v16 = (unsigned int *)((char *)v3 + v9[9]);
    if ((v16[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v16, 5, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001B9B6C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, &qword_100375A00, (uint64_t)&unk_1002E3AC8);
}

uint64_t sub_1001B9B88@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;

  *a2 = &_swiftEmptyArrayStorage;
  result = UnknownStorage.init()();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  *((_BYTE *)a2 + v5) = 6;
  v7 = a1[9];
  *((_BYTE *)a2 + a1[8]) = 7;
  v8 = (char *)a2 + v7;
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  return result;
}

uint64_t sub_1001B9BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B9804(a1, a2, a3);
}

uint64_t sub_1001B9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B9990(a1, a2, a3);
}

uint64_t sub_1001B9C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA98, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E3A40);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B9C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0C98, (uint64_t)qword_100384E80, (uint64_t)sub_1001B95C0, a1);
}

uint64_t sub_1001B9C88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003767E0, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E39C8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B9CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003767E0, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E39C8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001B9D18()
{
  return &unk_100356F00;
}

unint64_t sub_1001B9D24()
{
  return 0xD000000000000021;
}

uint64_t sub_1001B9D40(uint64_t a1)
{
  return sub_1001BC8A8(a1, qword_100384E98, (uint64_t)"early_return_enabled", 20);
}

uint64_t sub_1001B9D58()
{
  return sub_100008BD0(&qword_1003B0CA0, (uint64_t)qword_100384E98, (uint64_t)sub_1001B9D40);
}

uint64_t sub_1001B9D74@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CA0, (uint64_t)qword_100384E98, (uint64_t)sub_1001B9D40, a1);
}

uint64_t sub_1001B9D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t result;
  char v10;
  uint64_t v11;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 1)
    {
      v11 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v11 + 20), a2, a3);
    }
    v4 = 0;
    v7 = a2;
  }
  return result;
}

uint64_t sub_1001B9E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v10 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v10 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v10 & 1, 1, a2, a3);
  if (!v4)
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  return result;
}

Swift::Int sub_1001B9EBC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, &qword_100375A08, (uint64_t)&unk_1002E3C30);
}

uint64_t sub_1001B9ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B9D90(a1, a2, a3);
}

uint64_t sub_1001B9EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B9E24(a1, a2, a3);
}

uint64_t sub_1001B9F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA90, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3BA8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001B9F50@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CA0, (uint64_t)qword_100384E98, (uint64_t)sub_1001B9D40, a1);
}

uint64_t sub_1001B9F6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003767F8, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3B30);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B9FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003767F8, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3B30);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BA000()
{
  return &unk_100356F10;
}

unint64_t sub_1001BA00C()
{
  return 0xD000000000000022;
}

uint64_t sub_1001BA028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384EB0);
  sub_10000E6A4(v0, (uint64_t)qword_100384EB0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "config";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "cdma_context";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BA180()
{
  return sub_100008BD0(&qword_1003B0CA8, (uint64_t)qword_100384EB0, (uint64_t)sub_1001BA028);
}

uint64_t sub_1001BA19C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CA8, (uint64_t)qword_100384EB0, (uint64_t)sub_1001BA028, a1);
}

uint64_t sub_1001BA1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0) + 20);
        v10 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
        v11 = &qword_1003760D0;
        v12 = type metadata accessor for Proto_Gnss_Emergency_Configuration;
        v13 = &unk_1002DCAB0;
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0) + 24);
    v10 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
    v11 = &qword_100376940;
    v12 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext;
    v13 = &unk_1002E4EE0;
LABEL_5:
    v14 = sub_10000FD38(v11, v12, (uint64_t)v13);
    dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v14, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1001BA2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BA308(a1, a2, a3, sub_1001BA37C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001BA4F0);
}

uint64_t sub_1001BA308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    a5(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BA37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375560);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  sub_10000E660(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100375560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375560);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  v15 = sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001BA4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  sub_10000E660(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1003756E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756E8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  v15 = sub_10000FD38(&qword_100376940, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4EE0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

Swift::Int sub_1001BA668()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CplaneContext, &qword_100375A10, (uint64_t)&unk_1002E3D98);
}

uint64_t sub_1001BA684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001B4CE4(a1, type metadata accessor for Proto_Gnss_Emergency_Configuration, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, a2);
}

uint64_t sub_1001BA698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BA1B8(a1, a2, a3);
}

uint64_t sub_1001BA6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA88, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3D10);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BA6FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CA8, (uint64_t)qword_100384EB0, (uint64_t)sub_1001BA028, a1);
}

uint64_t sub_1001BA718(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376810, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3C98);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BA758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376810, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3C98);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BA7A8()
{
  return &unk_100356F20;
}

unint64_t sub_1001BA7B4()
{
  return 0xD000000000000020;
}

uint64_t sub_1001BA7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384EC8);
  sub_10000E6A4(v0, (uint64_t)qword_100384EC8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "helo_enabled";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "imsi";
  *(_QWORD *)(v13 + 8) = 4;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "cplane_config";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "supl_config";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BA99C()
{
  return sub_100008BD0(&qword_1003B0CB0, (uint64_t)qword_100384EC8, (uint64_t)sub_1001BA7D0);
}

uint64_t sub_1001BA9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CB0, (uint64_t)qword_100384EC8, (uint64_t)sub_1001BA7D0, a1);
}

uint64_t sub_1001BA9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          goto LABEL_5;
        case 2:
          v12 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + *(int *)(v12 + 24), a2, a3);
          goto LABEL_5;
        case 3:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 28);
          v14 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
          v15 = &qword_1003767F8;
          v16 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig;
          v17 = &unk_1002E3B30;
          goto LABEL_12;
        case 4:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0) + 32);
          v14 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
          v15 = &qword_100376100;
          v16 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig;
          v17 = &unk_1002DCD80;
LABEL_12:
          v18 = sub_10000FD38(v15, v16, (uint64_t)v17);
          v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v18, a2, a3);
LABEL_5:
          v9 = v11;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BAB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  v10 = result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = (_QWORD *)(v5 + *(int *)(v10 + 24));
    v13 = v12[1];
    if (v13)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v12, v13, 2, a2, a3);
    sub_1001BAC64(v5, a1, a2, a3);
    sub_1001BADD8(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BAC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  sub_10000E660(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_1003756F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756F0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
  v15 = sub_10000FD38(&qword_1003767F8, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3B30);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t sub_1001BADD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  sub_10000E660(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_1003756F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756F8);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
  v15 = sub_10000FD38(&qword_100376100, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCD80);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

Swift::Int sub_1001BAF50()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_EmergConfig, &qword_100375A18, (uint64_t)&unk_1002E3F00);
}

uint64_t sub_1001BAF6C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  UnknownStorage.init()();
  v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v5 = (_QWORD *)(a2 + v4);
  *v5 = 0;
  v5[1] = 0;
  v6 = a2 + a1[7];
  v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a2 + a1[8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
}

uint64_t sub_1001BB000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BA9D4(a1, a2, a3);
}

uint64_t sub_1001BB014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BAB58(a1, a2, a3);
}

uint64_t sub_1001BB028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA80, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3E78);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BB078@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CB0, (uint64_t)qword_100384EC8, (uint64_t)sub_1001BA7D0, a1);
}

uint64_t sub_1001BB094(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376828, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3E00);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BB0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376828, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3E00);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BB124()
{
  return &unk_100356F30;
}

unint64_t sub_1001BB130()
{
  return 0xD000000000000022;
}

uint64_t sub_1001BB14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v35;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384EE0);
  sub_10000E6A4(v0, (uint64_t)qword_100384EE0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v35 = swift_allocObject(v1, v6 + 13 * v4, v5 | 7);
  *(_OWORD *)(v35 + 16) = xmmword_1002C40C0;
  v7 = v35 + v6;
  v8 = v35 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v35 + v6) = 1;
  *(_QWORD *)v8 = "code_phase";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.standard(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "doppler0";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "doppler1";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "doppler_uncer";
  *((_QWORD *)v16 + 1) = 13;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "int_code_phase";
  *((_QWORD *)v18 + 1) = 14;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "gps_bit_number";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "code_phase_search_window";
  *((_QWORD *)v22 + 1) = 24;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "azimuth";
  *((_QWORD *)v24 + 1) = 7;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "elevation";
  *(_QWORD *)(v25 + 8) = 9;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "sat_id";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "azimuth_lsb";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "elevation_lsb";
  *((_QWORD *)v31 + 1) = 13;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "doppler_uncer_ext";
  *((_QWORD *)v33 + 1) = 17;
  v33[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v35);
}

uint64_t sub_1001BB4F8()
{
  return sub_100008BD0(&qword_1003B0CB8, (uint64_t)qword_100384EE0, (uint64_t)sub_1001BB14C);
}

uint64_t sub_1001BB514@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CB8, (uint64_t)qword_100384EE0, (uint64_t)sub_1001BB14C, a1);
}

uint64_t sub_1001BB530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 20);
          goto LABEL_17;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 24);
          goto LABEL_17;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 28);
          goto LABEL_17;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 32);
          goto LABEL_17;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 36);
          goto LABEL_17;
        case 6:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 40);
          goto LABEL_17;
        case 7:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 44);
          goto LABEL_17;
        case 8:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 48);
          goto LABEL_17;
        case 9:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 52);
          goto LABEL_17;
        case 10:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 56);
          goto LABEL_17;
        case 11:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 60);
          goto LABEL_17;
        case 12:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 64);
LABEL_17:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 13:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0) + 68);
          v11 = sub_10020BFC0();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v10, &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt, v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BB6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, 7);
    sub_10018AC48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
    sub_100199E48(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_100199EC0(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
    sub_1001B6F54(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement);
    sub_1001BB998(v5, a1, a2, a3);
    sub_1001BBA0C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t (*)(void))sub_10020BFC0, (uint64_t)&type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BB998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned int *v8;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v8 = (unsigned int *)(a1 + *(int *)(result + 64));
  if ((v8[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 12, a3, a4);
  return result;
}

uint64_t sub_1001BBA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t result;
  uint64_t v13;
  char v14;

  result = a5(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 68)) != 7)
  {
    v14 = *(_BYTE *)(a1 + *(int *)(result + 68));
    v13 = a6();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v14, 13, a7, v13, a3, a4);
  }
  return result;
}

Swift::Int sub_1001BBAA8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, &qword_100375A20, (uint64_t)&unk_1002E4068);
}

uint64_t sub_1001BBAC4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a1[12];
  v15 = a2 + a1[11];
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a2 + v14;
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  v17 = a1[14];
  v18 = a2 + a1[13];
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  v19 = a2 + v17;
  *(_DWORD *)v19 = 0;
  *(_BYTE *)(v19 + 4) = 1;
  v20 = a1[16];
  v21 = a2 + a1[15];
  *(_DWORD *)v21 = 0;
  *(_BYTE *)(v21 + 4) = 1;
  v22 = a2 + v20;
  *(_DWORD *)v22 = 0;
  *(_BYTE *)(v22 + 4) = 1;
  *(_BYTE *)(a2 + a1[17]) = 7;
  return result;
}

uint64_t sub_1001BBBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BB530(a1, a2, a3);
}

uint64_t sub_1001BBBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BB6E8(a1, a2, a3);
}

uint64_t sub_1001BBBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA78, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3FE0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BBC18@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CB8, (uint64_t)qword_100384EE0, (uint64_t)sub_1001BB14C, a1);
}

uint64_t sub_1001BBC34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100375A28, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3F68);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BBC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100375A28, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3F68);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BBCC4()
{
  return &unk_100356F40;
}

unint64_t sub_1001BBCD0()
{
  return 0xD000000000000025;
}

uint64_t sub_1001BBCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384EF8);
  sub_10000E6A4(v0, (uint64_t)qword_100384EF8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40B0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "gps_tow";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "nr_of_sats";
  *(_QWORD *)(v13 + 8) = 10;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "cell_time_assistance";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "acquisition";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "confidence";
  *((_QWORD *)v19 + 1) = 10;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "session_protocol";
  *((_QWORD *)v21 + 1) = 16;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "pos_protocol";
  *((_QWORD *)v23 + 1) = 12;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "session_id";
  *((_QWORD *)v25 + 1) = 10;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BBFA8()
{
  return sub_100008BD0(&qword_1003B0CC0, (uint64_t)qword_100384EF8, (uint64_t)sub_1001BBCEC);
}

uint64_t sub_1001BBFC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CC0, (uint64_t)qword_100384EF8, (uint64_t)sub_1001BBCEC, a1);
}

uint64_t sub_1001BBFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  ValueMetadata *v20;
  uint64_t v21;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 24);
          goto LABEL_14;
        case 2:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 28);
          goto LABEL_14;
        case 3:
          v11 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 32);
          v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
          v13 = sub_10000FD38(&qword_100376778, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E32C0);
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v11, v12, v13, a2, a3);
          goto LABEL_15;
        case 4:
          v15 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
          v16 = sub_10000FD38(&qword_100375A28, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3F68);
          v14 = v9;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v15, v16, a2, a3);
          goto LABEL_15;
        case 5:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 36);
          goto LABEL_14;
        case 6:
          v17 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 40);
          v18 = sub_10020C554();
          v19 = v17;
          v20 = &type metadata for Proto_Gnss_Emergency_SessionProtocol;
          goto LABEL_12;
        case 7:
          v21 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 44);
          v18 = sub_10020C510();
          v19 = v21;
          v20 = &type metadata for Proto_Gnss_Emergency_PosProtocol;
LABEL_12:
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v19, v20, v18, a2, a3);
          goto LABEL_15;
        case 8:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0) + 48);
LABEL_14:
          v14 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
LABEL_15:
          v9 = v14;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BC1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  v9 = result;
  v10 = (unsigned int *)(v3 + *(int *)(result + 24));
  if ((v10[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1, a2, a3);
  if (!v4)
  {
    v11 = (unsigned int *)(v3 + *(int *)(v9 + 28));
    if ((v11[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2, a2, a3);
    sub_1001BC3E4(v3, a1, a2, a3);
    v12 = *(_QWORD *)v3;
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      v13 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
      v14 = sub_10000FD38(&qword_100375A28, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3F68);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v12, 4, v13, v14, a2, a3);
    }
    v15 = (unsigned int *)(v3 + *(int *)(v9 + 36));
    if ((v15[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 5, a2, a3);
    sub_1001BC558(v3, a1, a2, a3);
    sub_1001BC5E0(v3, a1, a2, a3);
    sub_10018AC48(v3, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BC3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375700);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  sub_10000E660(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_100375700);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375700);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  v15 = sub_10000FD38(&qword_100376778, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E32C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t sub_1001BC558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 6)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 40));
    v8 = sub_10020C554();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 6, &type metadata for Proto_Gnss_Emergency_SessionProtocol, v8, a3, a4);
  }
  return result;
}

uint64_t sub_1001BC5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 44)) != 7)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 44));
    v8 = sub_10020C510();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 7, &type metadata for Proto_Gnss_Emergency_PosProtocol, v8, a3, a4);
  }
  return result;
}

Swift::Int sub_1001BC66C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, &qword_100375A30, (uint64_t)&unk_1002E41D0);
}

uint64_t sub_1001BC688@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;

  *a2 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  v4 = a1[7];
  v5 = (char *)a2 + a1[6];
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  v6 = (char *)a2 + v4;
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + a1[8];
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v10 = a1[10];
  v11 = (char *)a2 + a1[9];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  *((_BYTE *)a2 + v10) = 6;
  v12 = a1[12];
  *((_BYTE *)a2 + a1[11]) = 7;
  v13 = (char *)a2 + v12;
  *(_DWORD *)v13 = 0;
  v13[4] = 1;
  return result;
}

uint64_t sub_1001BC744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BBFE0(a1, a2, a3);
}

uint64_t sub_1001BC758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BC1E0(a1, a2, a3);
}

uint64_t sub_1001BC76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA70, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E4148);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BC7BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CC0, (uint64_t)qword_100384EF8, (uint64_t)sub_1001BBCEC, a1);
}

uint64_t sub_1001BC7D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376850, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E40D0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BC818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376850, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E40D0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BC868()
{
  return &unk_100356F50;
}

unint64_t sub_1001BC874()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1001BC890(uint64_t a1)
{
  return sub_1001BC8A8(a1, qword_100384F10, (uint64_t)"network_type", 12);
}

uint64_t sub_1001BC8A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v7, a2);
  sub_10000E6A4(v7, (uint64_t)a2);
  v8 = sub_1000039AC(&qword_10036A618);
  v9 = sub_1000039AC(&qword_10036A620);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_1002CAB70;
  v15 = v14 + v13 + *(int *)(v9 + 48);
  *(_QWORD *)(v14 + v13) = 1;
  *(_QWORD *)v15 = a3;
  *(_QWORD *)(v15 + 8) = a4;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = enum case for _NameMap.NameDescription.standard(_:);
  v17 = type metadata accessor for _NameMap.NameDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  return _NameMap.init(dictionaryLiteral:)(v14);
}

uint64_t sub_1001BC9AC()
{
  return sub_100008BD0(&qword_1003B0CC8, (uint64_t)qword_100384F10, (uint64_t)sub_1001BC890);
}

uint64_t sub_1001BC9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CC8, (uint64_t)qword_100384F10, (uint64_t)sub_1001BC890, a1);
}

uint64_t sub_1001BC9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 1)
      {
        v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0) + 20);
        v10 = sub_10020C334();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v9, &type metadata for Proto_Gnss_Emergency_ClsNetworkType, v10, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BCAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v10;
  char v11;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 6)
  {
    v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v10 = sub_10020C334();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v11, 1, &type metadata for Proto_Gnss_Emergency_ClsNetworkType, v10, a2, a3);
  }
  if (!v4)
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  return result;
}

Swift::Int sub_1001BCB54()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, &qword_100375A38, (uint64_t)&unk_1002E4338);
}

uint64_t sub_1001BCB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 6;
  return result;
}

uint64_t sub_1001BCBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BC9E4(a1, a2, a3);
}

uint64_t sub_1001BCBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCAA8(a1, a2, a3);
}

uint64_t sub_1001BCBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA68, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E42B0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BCC18@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CC8, (uint64_t)qword_100384F10, (uint64_t)sub_1001BC890, a1);
}

uint64_t sub_1001BCC34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376868, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4238);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BCC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376868, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4238);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BCCC4()
{
  return &unk_100356F60;
}

unint64_t sub_1001BCCD0()
{
  return 0xD000000000000025;
}

uint64_t sub_1001BCCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384F28);
  sub_10000E6A4(v0, (uint64_t)qword_100384F28);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "result";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "network_type";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "cell_time";
  *(_QWORD *)(v14 + 8) = 9;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BCE8C()
{
  return sub_100008BD0(&qword_1003B0CD0, (uint64_t)qword_100384F28, (uint64_t)sub_1001BCCEC);
}

uint64_t sub_1001BCEA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CD0, (uint64_t)qword_100384F28, (uint64_t)sub_1001BCCEC, a1);
}

uint64_t sub_1001BCEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      switch(result)
      {
        case 3:
          v9 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 28);
          v10 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
          v11 = sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
          goto LABEL_12;
        case 2:
          v16 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 24);
          v13 = sub_10020C334();
          v14 = v16;
          v15 = &type metadata for Proto_Gnss_Emergency_ClsNetworkType;
          break;
        case 1:
          v12 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0) + 20);
          v13 = sub_100015638();
          v14 = v12;
          v15 = &type metadata for Proto_Gnss_Result;
          break;
        default:
          goto LABEL_12;
      }
      dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v14, v15, v13, a2, a3);
LABEL_12:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BD02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  v10 = result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 10)
  {
    v13 = *(_BYTE *)(v5 + *(int *)(result + 20));
    v11 = sub_100015638();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v13, 1, &type metadata for Proto_Gnss_Result, v11, a2, a3);
  }
  if (!v4)
  {
    if (*(_BYTE *)(v5 + *(int *)(v10 + 24)) != 6)
    {
      v14 = *(_BYTE *)(v5 + *(int *)(v10 + 24));
      v12 = sub_10020C334();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v14, 2, &type metadata for Proto_Gnss_Emergency_ClsNetworkType, v12, a2, a3);
    }
    sub_1001BD144(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BD144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_1003756E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  sub_10000E660(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_1003756E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_1003756E0);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  v15 = sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

Swift::Int sub_1001BD2BC()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, &qword_100375A40, (uint64_t)&unk_1002E44A0);
}

uint64_t sub_1001BD2D8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  UnknownStorage.init()();
  v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 10;
  *(_BYTE *)(a2 + v4) = 6;
  v5 = a2 + a1[7];
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

uint64_t sub_1001BD338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCEC4(a1, a2, a3);
}

uint64_t sub_1001BD34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD02C(a1, a2, a3);
}

uint64_t sub_1001BD360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA60, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E4418);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BD3B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CD0, (uint64_t)qword_100384F28, (uint64_t)sub_1001BCCEC, a1);
}

uint64_t sub_1001BD3CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376880, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E43A0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BD40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376880, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E43A0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BD45C()
{
  return &unk_100356F70;
}

unint64_t sub_1001BD468()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1001BD484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384F40);
  sub_10000E6A4(v0, (uint64_t)qword_100384F40);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "latitude_degrees";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "longitude_degrees";
  *(_QWORD *)(v13 + 8) = 17;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "altitude_meters";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ver_uncert_meters";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "horz_uncert_meters";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "horz_confidence";
  *((_QWORD *)v21 + 1) = 15;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "vert_confidence";
  *((_QWORD *)v23 + 1) = 15;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BD6EC()
{
  return sub_100008BD0(&qword_1003B0CD8, (uint64_t)qword_100384F40, (uint64_t)sub_1001BD484);
}

uint64_t sub_1001BD708@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CD8, (uint64_t)qword_100384F40, (uint64_t)sub_1001BD484, a1);
}

uint64_t sub_1001BD724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 20);
          goto LABEL_10;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 24);
          goto LABEL_10;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 28);
          goto LABEL_10;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 32);
          goto LABEL_10;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 36);
LABEL_10:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v9, a2, a3);
          break;
        case 6:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 40);
          goto LABEL_13;
        case 7:
          v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0) + 44);
LABEL_13:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BD85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v10 = (int *)result;
  v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1, a2, a3, *(double *)v11);
  if (!v4)
  {
    v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2, a2, a3, *(double *)v12);
    v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3, a2, a3, *(double *)v13);
    v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4, a2, a3, *(double *)v14);
    sub_1001BD9FC(v5, a1, a2, a3);
    sub_10018AB4C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
    sub_100199DCC(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, 7);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BD9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v8 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(5, a3, a4, *(double *)v8);
  return result;
}

Swift::Int sub_1001BDA74()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, &qword_100375A48, (uint64_t)&unk_1002E4608);
}

uint64_t sub_1001BDA90@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a2 + v8;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a2 + a1[11];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  return result;
}

uint64_t sub_1001BDB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD724(a1, a2, a3);
}

uint64_t sub_1001BDB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD85C(a1, a2, a3);
}

uint64_t sub_1001BDB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA58, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4580);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BDB94@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CD8, (uint64_t)qword_100384F40, (uint64_t)sub_1001BD484, a1);
}

uint64_t sub_1001BDBB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376898, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4508);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BDBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376898, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4508);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BDC44()
{
  return &unk_100356F80;
}

unint64_t sub_1001BDC50()
{
  return 0xD000000000000029;
}

uint64_t sub_1001BDC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384F58);
  sub_10000E6A4(v0, (uint64_t)qword_100384F58);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "gps_tow_seconds";
  *(_QWORD *)(v9 + 8) = 15;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "gps_week";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "gps_time_uncertainty";
  *(_QWORD *)(v14 + 8) = 20;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BDE00()
{
  return sub_100008BD0(&qword_1003B0CE0, (uint64_t)qword_100384F58, (uint64_t)sub_1001BDC6C);
}

uint64_t sub_1001BDE1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CE0, (uint64_t)qword_100384F58, (uint64_t)sub_1001BDC6C, a1);
}

uint64_t sub_1001BDE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        v12 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + *(int *)(v12 + 28), a2, a3);
        break;
      case 2:
        v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0) + 24);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
        break;
      case 1:
        v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0) + 20);
        goto LABEL_3;
    }
    v4 = 0;
    v7 = a2;
  }
  return result;
}

uint64_t sub_1001BDF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  v10 = result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = v5 + *(int *)(v10 + 28);
    if ((*(_BYTE *)(v13 + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3, a2, a3, *(double *)v13);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001BE018()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, &qword_100375A50, (uint64_t)&unk_1002E4770);
}

uint64_t sub_1001BE034@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a2 + a1[7];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t sub_1001BE088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BDE38(a1, a2, a3);
}

uint64_t sub_1001BE09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BDF1C(a1, a2, a3);
}

uint64_t sub_1001BE0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA50, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E46E8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BE100@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CE0, (uint64_t)qword_100384F58, (uint64_t)sub_1001BDC6C, a1);
}

uint64_t sub_1001BE11C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003768B0, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4670);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003768B0, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4670);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BE1AC()
{
  return &unk_100356F90;
}

unint64_t sub_1001BE1B8()
{
  return 0xD000000000000026;
}

uint64_t sub_1001BE1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384F70);
  sub_10000E6A4(v0, (uint64_t)qword_100384F70);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3120;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "horz";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "heading";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "vertical";
  *(_QWORD *)(v14 + 8) = 8;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BE368()
{
  return sub_100008BD0(&qword_1003B0CE8, (uint64_t)qword_100384F70, (uint64_t)sub_1001BE1D4);
}

uint64_t sub_1001BE384@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CE8, (uint64_t)qword_100384F70, (uint64_t)sub_1001BE1D4, a1);
}

uint64_t sub_1001BE3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001971A4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_1001BE3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100197288(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_1001BE3D8(uint64_t a1, uint64_t a2)
{
  return sub_1001D47B8(a1, a2, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo) & 1;
}

Swift::Int sub_1001BE3F8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, &qword_100375A58, (uint64_t)&unk_1002E48D8);
}

uint64_t sub_1001BE414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA48, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E4850);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BE464@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CE8, (uint64_t)qword_100384F70, (uint64_t)sub_1001BE1D4, a1);
}

uint64_t sub_1001BE480(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003768C8, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E47D8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003768C8, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E47D8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BE514()
{
  return &unk_100356FA0;
}

unint64_t sub_1001BE520()
{
  return 0xD000000000000023;
}

uint64_t sub_1001BE53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384F88);
  sub_10000E6A4(v0, (uint64_t)qword_100384F88);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "bias";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "drift";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BE68C()
{
  return sub_100008BD0(&qword_1003B0CF0, (uint64_t)qword_100384F88, (uint64_t)sub_1001BE53C);
}

uint64_t sub_1001BE6A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CF0, (uint64_t)qword_100384F88, (uint64_t)sub_1001BE53C, a1);
}

uint64_t sub_1001BE6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001BE6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001BE70C(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo) & 1;
}

Swift::Int sub_1001BE72C()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, &qword_100375A60, (uint64_t)&unk_1002E4A40);
}

uint64_t sub_1001BE748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA40, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E49B8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BE798@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CF0, (uint64_t)qword_100384F88, (uint64_t)sub_1001BE53C, a1);
}

uint64_t sub_1001BE7B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003768E0, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4940);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003768E0, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4940);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BE844()
{
  return &unk_100356FB0;
}

unint64_t sub_1001BE850()
{
  return 0xD000000000000024;
}

uint64_t sub_1001BE86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384FA0);
  sub_10000E6A4(v0, (uint64_t)qword_100384FA0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3150;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "altitude";
  *(_QWORD *)(v9 + 8) = 8;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "altitude_unc";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BE9C4()
{
  return sub_100008BD0(&qword_1003B0CF8, (uint64_t)qword_100384FA0, (uint64_t)sub_1001BE86C);
}

uint64_t sub_1001BE9E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0CF8, (uint64_t)qword_100384FA0, (uint64_t)sub_1001BE86C, a1);
}

uint64_t sub_1001BE9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195A90(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_1001BEA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100195B70(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_1001BEA44(uint64_t a1, uint64_t a2)
{
  return sub_1001D3C4C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo) & 1;
}

Swift::Int sub_1001BEA64()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, &qword_100375A68, (uint64_t)&unk_1002E4BA8);
}

uint64_t sub_1001BEA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_1001BEAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA38, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4B20);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BEB14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0CF8, (uint64_t)qword_100384FA0, (uint64_t)sub_1001BE86C, a1);
}

uint64_t sub_1001BEB30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_1003768F8, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4AA8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BEB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_1003768F8, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4AA8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BEBC0()
{
  return &unk_100356FC0;
}

unint64_t sub_1001BEBCC()
{
  return 0xD000000000000025;
}

uint64_t sub_1001BEBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384FB8);
  sub_10000E6A4(v0, (uint64_t)qword_100384FB8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v33 = swift_allocObject(v1, v6 + 12 * v4, v5 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_1002D94A0;
  v7 = v33 + v6;
  v8 = v33 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v33 + v6) = 1;
  *(_QWORD *)v8 = "latitude";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "longitude";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "loc_unc_ang";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "loc_unc_a";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "loc_unc_p";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "fix_type";
  *((_QWORD *)v20 + 1) = 8;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "velocity_included";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "velocity";
  *((_QWORD *)v24 + 1) = 8;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "clock_included";
  *(_QWORD *)(v25 + 8) = 14;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "clock";
  *((_QWORD *)v27 + 1) = 5;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "altitude_included";
  *((_QWORD *)v29 + 1) = 17;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "altitude";
  *((_QWORD *)v31 + 1) = 8;
  v31[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v33);
}

uint64_t sub_1001BEF60()
{
  return sub_100008BD0(&qword_1003B0D00, (uint64_t)qword_100384FB8, (uint64_t)sub_1001BEBE8);
}

uint64_t sub_1001BEF7C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0D00, (uint64_t)qword_100384FB8, (uint64_t)sub_1001BEBE8, a1);
}

uint64_t sub_1001BEF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 20);
          goto LABEL_10;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 24);
          goto LABEL_10;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 28);
          goto LABEL_10;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 32);
          goto LABEL_10;
        case 5:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 36);
LABEL_10:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 6:
          v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 40);
          v11 = sub_10020C378();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v10, &type metadata for Proto_Gnss_Emergency_FixType, v11, a2, a3);
          break;
        case 7:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 44);
          goto LABEL_17;
        case 8:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 48);
          v14 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
          v15 = &qword_1003768C8;
          v16 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo;
          v17 = &unk_1002E47D8;
          goto LABEL_19;
        case 9:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 52);
          goto LABEL_17;
        case 10:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 56);
          v14 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
          v15 = &qword_1003768E0;
          v16 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo;
          v17 = &unk_1002E4940;
          goto LABEL_19;
        case 11:
          v12 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 60);
LABEL_17:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v12, a2, a3);
          break;
        case 12:
          v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0) + 64);
          v14 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
          v15 = &qword_1003768F8;
          v16 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo;
          v17 = &unk_1002E4AA8;
LABEL_19:
          v18 = sub_10000FD38(v15, v16, (uint64_t)v17);
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v18, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001BF204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int *v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v10 = (int *)result;
  v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1, a2, a3);
  if (!v4)
  {
    v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2, a2, a3);
    v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3, a2, a3);
    v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4, a2, a3);
    sub_10018AAD4(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
    sub_1001BF450(v5, a1, a2, a3);
    sub_1000E4E8C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
    sub_1001BF4D8(v5, a1, a2, a3);
    sub_1001BF64C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
    sub_1001BF6C0(v5, a1, a2, a3);
    sub_1001BF834(v5, a1, a2, a3);
    sub_1001BF8A8(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1001BF450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;
  char v9;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 4)
  {
    v9 = *(_BYTE *)(a1 + *(int *)(result + 40));
    v8 = sub_10020C378();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v9, 6, &type metadata for Proto_Gnss_Emergency_FixType, v8, a3, a4);
  }
  return result;
}

uint64_t sub_1001BF4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375708);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(a1 + *(int *)(v13 + 48), (uint64_t)v8, &qword_100375708);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375708);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
  v15 = sub_10000FD38(&qword_1003768C8, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E47D8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 8, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t sub_1001BF64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  int v9;

  result = a5(0);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(result + 52));
  if (v9 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v9 & 1, 9, a3, a4);
  return result;
}

uint64_t sub_1001BF6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375710);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(a1 + *(int *)(v13 + 56), (uint64_t)v8, &qword_100375710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375710);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
  v15 = sub_10000FD38(&qword_1003768E0, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4940);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 10, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t sub_1001BF834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 60));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 11, a3, a4);
  return result;
}

uint64_t sub_1001BF8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1000039AC(&qword_100375718);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  sub_10000E660(a1 + *(int *)(v13 + 64), (uint64_t)v8, &qword_100375718);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375718);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
  v15 = sub_10000FD38(&qword_1003768F8, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4AA8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 12, v9, v15, a3, v17);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
}

Swift::Int sub_1001BFA20()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, &qword_100375A70, (uint64_t)&unk_1002E4D10);
}

uint64_t sub_1001BFA3C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a2 + v7;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  *(_BYTE *)(a2 + v10) = 4;
  v12 = a1[12];
  *(_BYTE *)(a2 + a1[11]) = 2;
  v13 = a2 + v12;
  v14 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = a1[14];
  *(_BYTE *)(a2 + a1[13]) = 2;
  v16 = a2 + v15;
  v17 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = a1[16];
  *(_BYTE *)(a2 + a1[15]) = 2;
  v19 = a2 + v18;
  v20 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
}

uint64_t sub_1001BFB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BEF98(a1, a2, a3);
}

uint64_t sub_1001BFB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BF204(a1, a2, a3);
}

uint64_t sub_1001BFB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA30, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4C88);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001BFBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0D00, (uint64_t)qword_100384FB8, (uint64_t)sub_1001BEBE8, a1);
}

uint64_t sub_1001BFBE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376910, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4C10);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BFC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376910, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4C10);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001BFC70()
{
  return &unk_100356FD0;
}

unint64_t sub_1001BFC7C()
{
  return 0xD000000000000032;
}

uint64_t sub_1001BFC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384FD0);
  sub_10000E6A4(v0, (uint64_t)qword_100384FD0);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C3140;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "result";
  *(_QWORD *)(v8 + 8) = 6;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "response_type";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "session_info";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "gps_measurements";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "location_indication";
  *((_QWORD *)v18 + 1) = 19;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "aflt_action";
  *((_QWORD *)v20 + 1) = 11;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "is_meas_in_cdma_time";
  *((_QWORD *)v22 + 1) = 20;
  v22[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001BFF10()
{
  return sub_100008BD0(&qword_1003B0D08, (uint64_t)qword_100384FD0, (uint64_t)sub_1001BFC98);
}

uint64_t sub_1001BFF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0D08, (uint64_t)qword_100384FD0, (uint64_t)sub_1001BFC98, a1);
}

uint64_t sub_1001BFF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 9;
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v3 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  v5 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  v7 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction) = 4;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0]) = 2;
  qword_1003B0D18 = v1;
  return result;
}

uint64_t sub_1001C0044()
{
  uint64_t v0;

  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &qword_100375648);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, &qword_100375690);
  sub_100015704(v0+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, &qword_100375720);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001C00AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;

  v5 = v4;
  v6 = v3;
  v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + v9)) & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + v9);
    v11 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    v13 = swift_retain(v10);
    sub_1001C5200(v13);
    swift_release(v10);
    v14 = *(_QWORD *)(v6 + v9);
    *(_QWORD *)(v6 + v9) = v12;
    swift_release(v14);
  }
  v15 = *(_QWORD *)(v6 + v9);
  swift_retain(v15);
  v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    v33 = v15 + 20;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1:
          swift_beginAccess(v15 + 16, v32, 33, 0);
          v19 = sub_10020C5DC();
          v20 = v15 + 16;
          v21 = &type metadata for Proto_Gnss_Emergency_ErrorCodes;
          goto LABEL_15;
        case 2:
          v22 = v33;
          swift_beginAccess(v33, v32, 33, 0);
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v22, a2, a3);
          goto LABEL_17;
        case 3:
          v24 = v15
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v32, 33, 0);
          v25 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
          v26 = &qword_100376290;
          v27 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo;
          v28 = &unk_1002DE6D0;
          goto LABEL_13;
        case 4:
          v24 = v15
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v32, 33, 0);
          v25 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
          v26 = &qword_1003765F0;
          v27 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements;
          v28 = &unk_1002E1AD8;
          goto LABEL_13;
        case 5:
          v24 = v15
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, v32, 33, 0);
          v25 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
          v26 = &qword_100376910;
          v27 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd;
          v28 = &unk_1002E4C10;
LABEL_13:
          v29 = sub_10000FD38(v26, v27, (uint64_t)v28);
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v24, v25, v29, a2, a3);
          goto LABEL_17;
        case 6:
          v30 = v15
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction;
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction, v32, 33, 0);
          v19 = sub_10020BF38();
          v20 = v30;
          v21 = &type metadata for Proto_Gnss_Emergency_AfltAction;
LABEL_15:
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v20, v21, v19, a2, a3);
          goto LABEL_17;
        case 7:
          v31 = v15
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0];
          swift_beginAccess(v15+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0], v32, 33, 0);
          v23 = v5;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v31, a2, a3);
LABEL_17:
          v5 = v23;
          swift_endAccess(v32);
          break;
        default:
          break;
      }
      v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return swift_release(v15);
}

uint64_t sub_1001C03CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v12;
  unint64_t v13;
  unsigned __int8 *v14;
  int v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v16, 0, 0);
  if (*(_BYTE *)(v9 + 16) != 9)
  {
    v19[0] = *(_BYTE *)(v9 + 16);
    v10 = sub_10020C5DC();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v19, 1, &type metadata for Proto_Gnss_Emergency_ErrorCodes, v10, a2, a3);
  }
  if (v4)
    return swift_release(v9);
  swift_beginAccess(v9 + 20, v17, 0, 0);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2, a2, a3);
  sub_1001C0604(v9, a1, a2, a3);
  sub_1001C0790(v9, a1, a2, a3);
  sub_1001C091C(v9, a1, a2, a3);
  v12 = (_BYTE *)(v9
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction, v19, 0, 0);
  if (*v12 != 4)
  {
    v18[0] = *v12;
    v13 = sub_10020BF38();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(v18, 6, &type metadata for Proto_Gnss_Emergency_AfltAction, v13, a2, a3);
  }
  v14 = (unsigned __int8 *)(v9
                          + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0]);
  swift_beginAccess(v9+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0], v18, 0, 0);
  v15 = *v14;
  if (v15 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 7, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001C0604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375648);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  v15 = sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001C0790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375690);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375690);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  v15 = sub_10000FD38(&qword_1003765F0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1AD8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001C091C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a4;
  v6 = sub_1000039AC(&qword_100375720);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(v13, v17, 0, 0);
  sub_10000E660(v13, (uint64_t)v8, &qword_100375720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100015704((uint64_t)v8, &qword_100375720);
  sub_100003E08((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
  v15 = sub_10000FD38(&qword_100376910, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4C10);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5, v9, v15, a3, v18);
  return sub_100004030((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t sub_1001C0AA8(uint64_t a1, uint64_t a2)
{
  return sub_100065A60(a1, a2, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, sub_1001C0AD0) & 1;
}

uint64_t sub_1001C0AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  uint64_t result;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char v71;
  unsigned __int8 *v72;
  int v73;
  unsigned __int8 *v74;
  int v75;
  uint64_t v76;
  unsigned __int8 *v77;
  int v78;
  unsigned __int8 *v79;
  int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107[24];
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[24];
  char v112[24];
  char v113[32];

  v4 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  __chkstk_darwin(v4);
  v85 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000039AC(&qword_10037BE50);
  __chkstk_darwin(v88);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375720);
  v9 = __chkstk_darwin(v8);
  v86 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v93 = (char *)&v81 - v11;
  v97 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v87 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1000039AC(&qword_10037BE58);
  __chkstk_darwin(v94);
  v98 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375690);
  v15 = __chkstk_darwin(v14);
  v91 = (uint64_t)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v96 = (uint64_t)&v81 - v17;
  v18 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v92 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_10037BE60);
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000039AC(&qword_100375648);
  v25 = __chkstk_darwin(v24);
  v99 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v81 - v27;
  swift_beginAccess(a1 + 16, v113, 0, 0);
  v29 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v112, 0, 0);
  v30 = *(unsigned __int8 *)(a2 + 16);
  if (v29 == 9)
  {
    if (v30 != 9)
      return 0;
LABEL_6:
    v82 = v7;
    swift_beginAccess(a1 + 20, v111, 0, 0);
    v32 = *(_DWORD *)(a1 + 20);
    v84 = a1;
    v33 = *(_BYTE *)(a1 + 24);
    swift_beginAccess(a2 + 20, v110, 0, 0);
    v83 = a2;
    v34 = *(_BYTE *)(a2 + 24);
    if ((v33 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (v32 != *(_DWORD *)(a2 + 20))
        v34 = 1;
      if ((v34 & 1) != 0)
        return 0;
    }
    v35 = v84;
    v36 = v84
        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v84+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v109, 0, 0);
    sub_10000E660(v36, (uint64_t)v28, &qword_100375648);
    v37 = v83;
    v38 = v83
        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
    swift_beginAccess(v83+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, v108, 0, 0);
    v39 = (uint64_t)&v23[*(int *)(v21 + 48)];
    sub_10000E660((uint64_t)v28, (uint64_t)v23, &qword_100375648);
    sub_10000E660(v38, v39, &qword_100375648);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v40((uint64_t)v23, 1, v18) == 1)
    {
      swift_retain(v35);
      swift_retain(v37);
      sub_100015704((uint64_t)v28, &qword_100375648);
      v41 = v40(v39, 1, v18);
      v42 = v37;
      v43 = (uint64_t)v82;
      if (v41 == 1)
      {
        sub_100015704((uint64_t)v23, &qword_100375648);
        goto LABEL_19;
      }
    }
    else
    {
      v44 = v99;
      sub_10000E660((uint64_t)v23, v99, &qword_100375648);
      v45 = v40(v39, 1, v18);
      v43 = (uint64_t)v82;
      if (v45 != 1)
      {
        v46 = v92;
        sub_100003E08(v39, v92, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        swift_retain(v35);
        v42 = v83;
        swift_retain(v83);
        v47 = sub_1001D24EC(v44, v46);
        sub_100004030(v46, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v28, &qword_100375648);
        sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
        sub_100015704((uint64_t)v23, &qword_100375648);
        if ((v47 & 1) != 0)
        {
LABEL_19:
          v48 = v35
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v35+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v107, 0, 0);
          v49 = v96;
          sub_10000E660(v48, v96, &qword_100375690);
          v50 = v42
              + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
          swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, &v106, 0, 0);
          v51 = v98;
          v52 = v98 + *(int *)(v94 + 48);
          sub_10000E660(v49, v98, &qword_100375690);
          sub_10000E660(v50, v52, &qword_100375690);
          v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
          v54 = v97;
          if (v53(v51, 1, v97) == 1)
          {
            sub_100015704(v49, &qword_100375690);
            v55 = v53(v52, 1, v54);
            v56 = (uint64_t)v93;
            if (v55 == 1)
            {
              sub_100015704(v51, &qword_100375690);
LABEL_27:
              v64 = v84
                  + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
              swift_beginAccess(v84+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, &v105, 0, 0);
              sub_10000E660(v64, v56, &qword_100375720);
              v65 = v42
                  + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
              swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, &v104, 0, 0);
              v66 = v43 + *(int *)(v88 + 48);
              sub_10000E660(v56, v43, &qword_100375720);
              sub_10000E660(v65, v66, &qword_100375720);
              v67 = v90;
              v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
              if (v68(v43, 1, v90) == 1)
              {
                sub_100015704(v56, &qword_100375720);
                if (v68(v66, 1, v67) == 1)
                {
                  sub_100015704(v43, &qword_100375720);
                  goto LABEL_39;
                }
                goto LABEL_32;
              }
              v69 = v86;
              sub_10000E660(v43, v86, &qword_100375720);
              if (v68(v66, 1, v67) == 1)
              {
                sub_100015704(v56, &qword_100375720);
                sub_100004030(v69, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
LABEL_32:
                v60 = &qword_10037BE50;
                v61 = v43;
                goto LABEL_33;
              }
              v70 = v85;
              sub_100003E08(v66, v85, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
              v71 = sub_1001C9BE8(v69, v70);
              sub_100004030(v70, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
              sub_100015704(v56, &qword_100375720);
              sub_100004030(v69, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
              sub_100015704(v43, &qword_100375720);
              if ((v71 & 1) != 0)
              {
LABEL_39:
                v72 = (unsigned __int8 *)(v84
                                        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
                swift_beginAccess(v84+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction, &v103, 0, 0);
                v73 = *v72;
                v74 = (unsigned __int8 *)(v42
                                        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
                swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction, &v102, 0, 0);
                v75 = *v74;
                if (v73 == 4)
                {
                  if (v75 != 4)
                    goto LABEL_34;
                }
                else if (v75 == 4 || v73 != v75)
                {
                  goto LABEL_34;
                }
                v76 = v84;
                v77 = (unsigned __int8 *)(v84
                                        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0]);
                swift_beginAccess(v84+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0], &v101, 0, 0);
                v78 = *v77;
                swift_release(v76);
                v79 = (unsigned __int8 *)(v42
                                        + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0]);
                swift_beginAccess(v42+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime[0], &v100, 0, 0);
                v80 = *v79;
                swift_release(v42);
                if (v78 == 2)
                {
                  if (v80 != 2)
                    return 0;
                }
                else if (v80 == 2 || ((((v80 & 1) == 0) ^ v78) & 1) == 0)
                {
                  return 0;
                }
                return 1;
              }
LABEL_34:
              v57 = v84;
              goto LABEL_35;
            }
          }
          else
          {
            v58 = v91;
            sub_10000E660(v51, v91, &qword_100375690);
            v59 = v53(v52, 1, v54);
            v56 = (uint64_t)v93;
            if (v59 != 1)
            {
              v62 = v87;
              sub_100003E08(v52, v87, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              v63 = sub_100065A60(v58, v62, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t (*)(uint64_t, uint64_t))sub_1001AA5E4);
              sub_100004030(v62, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              sub_100015704(v49, &qword_100375690);
              sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
              sub_100015704(v51, &qword_100375690);
              if ((v63 & 1) == 0)
                goto LABEL_34;
              goto LABEL_27;
            }
            sub_100015704(v49, &qword_100375690);
            sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
          }
          v60 = &qword_10037BE58;
          v61 = v51;
LABEL_33:
          sub_100015704(v61, v60);
          goto LABEL_34;
        }
LABEL_22:
        v57 = v35;
LABEL_35:
        swift_release(v57);
        swift_release(v42);
        return 0;
      }
      swift_retain(v35);
      v42 = v83;
      swift_retain(v83);
      sub_100015704((uint64_t)v28, &qword_100375648);
      sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
    }
    sub_100015704((uint64_t)v23, &qword_10037BE60);
    goto LABEL_22;
  }
  result = 0;
  if (v30 != 9 && v29 == v30)
    goto LABEL_6;
  return result;
}

Swift::Int sub_1001C14C8()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, &qword_100375A78, (uint64_t)&unk_1002E4E78);
}

uint64_t sub_1001C14E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD1C(a1, &qword_1003B0D10, &qword_1003B0D18, (uint64_t)sub_1001BFF48, a2);
}

uint64_t sub_1001C1500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C00AC(a1, a2, a3);
}

uint64_t sub_1001C1514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C03CC(a1, a2, a3);
}

uint64_t sub_1001C1528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA28, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4DF0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001C1578@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0D08, (uint64_t)qword_100384FD0, (uint64_t)sub_1001BFC98, a1);
}

uint64_t sub_1001C1594(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376928, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4D78);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001C15D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376928, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4D78);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1001C1624()
{
  return &unk_100356FE0;
}

unint64_t sub_1001C1630()
{
  return 0xD000000000000022;
}

uint64_t sub_1001C164C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_1000155B4(v0, qword_100384FE8);
  sub_10000E6A4(v0, (uint64_t)qword_100384FE8);
  v1 = sub_1000039AC(&qword_10036A618);
  v2 = sub_1000039AC(&qword_10036A620);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002C40D0;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "include1x_msb";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.standard(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "optimize_gnss_meas_with1x_msb";
  *(_QWORD *)(v13 + 8) = 29;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "optimize_aflt_meas_with1x_msb";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "use_cdma_time_for_meas";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1001C1810()
{
  return sub_100008BD0(&qword_1003B0D20, (uint64_t)qword_100384FE8, (uint64_t)sub_1001C164C);
}

uint64_t sub_1001C182C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C2C(&qword_1003B0D20, (uint64_t)qword_100384FE8, (uint64_t)sub_1001C164C, a1);
}

uint64_t sub_1001C1848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 20);
          goto LABEL_5;
        case 2:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 24);
          goto LABEL_5;
        case 3:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 28);
          goto LABEL_5;
        case 4:
          v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1001C1934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v10 = (int *)result;
  v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1, a2, a3);
  if (!v4)
  {
    v12 = *(unsigned __int8 *)(v5 + v10[6]);
    if (v12 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2, a2, a3);
    v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3, a2, a3);
    v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1001C1A64()
{
  return sub_10000DF2C(type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, &qword_100375A80, (uint64_t)&unk_1002E4FE0);
}

uint64_t sub_1001C1A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C1848(a1, a2, a3);
}

uint64_t sub_1001C1A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C1934(a1, a2, a3);
}

uint64_t sub_1001C1AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_10037BA20, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4F58);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001C1AF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008CB0(&qword_1003B0D20, (uint64_t)qword_100384FE8, (uint64_t)sub_1001C164C, a1);
}

uint64_t sub_1001C1B14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000FD38(&qword_100376940, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4EE0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001C1B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000FD38(&qword_100376940, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4EE0);
  return Message.hash(into:)(a1, a2, v4);
}

BOOL sub_1001C1BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  v3 = (unsigned __int8 *)(a1 + 33);
  v4 = (unsigned __int8 *)(a2 + 33);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1001C1C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0);
  v4 = __chkstk_darwin(v20);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v9 = (char *)&v19 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
      return 1;
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v19 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_100003FEC(a1 + v11, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
      sub_100003FEC(a2 + v11, (uint64_t)v6, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
      v12 = *(int *)(v20 + 20);
      v13 = *(_QWORD *)&v9[v12];
      v14 = *(_QWORD *)&v6[v12];
      if (v13 != v14)
      {
        swift_retain(*(_QWORD *)&v9[v12]);
        swift_retain(v14);
        v15 = sub_1001AFD04(v13, v14);
        swift_release(v14);
        swift_release(v13);
        if (!v15)
          break;
      }
      v16 = type metadata accessor for UnknownStorage(0);
      v17 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v16, v17) & 1) == 0)
        break;
      sub_100004030((uint64_t)v6, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
      sub_100004030((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
      v11 += v19;
      if (!--v10)
        return 1;
    }
    sub_100004030((uint64_t)v6, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
    sub_100004030((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
  }
  return 0;
}

BOOL sub_1001C1DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1001C1E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_100003FEC(a1 + v12, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
      sub_100003FEC(a2 + v12, (uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
      v14 = *(int *)(v4 + 20);
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD *)&v7[v14];
      if (v15 != v16 && (sub_1001B88C4(v15, v16) & 1) == 0)
        break;
      v17 = type metadata accessor for UnknownStorage(0);
      v18 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v17, v18) & 1) == 0)
        break;
      sub_100004030((uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
      sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
      v12 += v13;
      if (!--v11)
        return 1;
    }
    sub_100004030((uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
  }
  return 0;
}

uint64_t sub_1001C1FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_100003FEC(a1 + v12, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
        sub_100003FEC(a2 + v12, (uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
        v15 = sub_1001D4B4C((uint64_t)v10, (uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
        sub_100004030((uint64_t)v7, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
        sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1001C2128(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  char v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  BOOL v31;
  uint64_t v33;

  v6 = a3(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v12 = (char *)&v33 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (v13 && a1 != a2)
    {
      v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v15 = *(_QWORD *)(v10 + 72);
      v16 = v13 - 1;
      while (1)
      {
        sub_100003FEC(a1 + v14, (uint64_t)v12, a3);
        sub_100003FEC(a2 + v14, (uint64_t)v9, a3);
        v17 = *(int *)(v6 + 20);
        v18 = &v12[v17];
        v19 = v12[v17 + 4];
        v20 = &v9[v17];
        v21 = v9[v17 + 4];
        if ((v19 & 1) != 0)
        {
          if (!v21)
            goto LABEL_24;
        }
        else
        {
          if (*(_DWORD *)v18 != *(_DWORD *)v20)
            LOBYTE(v21) = 1;
          if ((v21 & 1) != 0)
          {
LABEL_24:
            sub_100004030((uint64_t)v9, a3);
            sub_100004030((uint64_t)v12, a3);
            goto LABEL_25;
          }
        }
        v22 = *(int *)(v6 + 24);
        v23 = &v12[v22];
        v24 = v12[v22 + 4];
        v25 = &v9[v22];
        v26 = v9[v22 + 4];
        if ((v24 & 1) != 0)
        {
          if (!v26)
            goto LABEL_24;
        }
        else
        {
          if (*(_DWORD *)v23 != *(_DWORD *)v25)
            LOBYTE(v26) = 1;
          if ((v26 & 1) != 0)
            goto LABEL_24;
        }
        v27 = type metadata accessor for UnknownStorage(0);
        v28 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v29 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v9, v27, v28);
        sub_100004030((uint64_t)v9, a3);
        sub_100004030((uint64_t)v12, a3);
        v31 = v16-- != 0;
        if ((v29 & 1) != 0)
        {
          v14 += v15;
          if (v31)
            continue;
        }
        return v29 & 1;
      }
    }
    v29 = 1;
  }
  else
  {
LABEL_25:
    v29 = 0;
  }
  return v29 & 1;
}

unint64_t sub_1001C2324(unint64_t result)
{
  if (result >= 0x12)
    return 18;
  return result;
}

unint64_t sub_1001C2334(unint64_t result)
{
  if (result >= 0x11)
    return 17;
  return result;
}

unint64_t sub_1001C2344(unint64_t result)
{
  if (result >= 0x21)
    return 33;
  return result;
}

unint64_t sub_1001C2354(unint64_t result)
{
  if (result >= 0x18)
    return 24;
  return result;
}

uint64_t sub_1001C2364(uint64_t a1)
{
  uint64_t result;

  result = 6;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0;
      break;
    case 2:
      result = 1;
      break;
    case 4:
      result = 2;
      break;
    case 8:
      result = 3;
      break;
    case 16:
      result = 4;
      break;
    case 32:
      result = 5;
      break;
    default:
      result = 7;
      break;
  }
  return result;
}

uint64_t sub_1001C23C4(uint64_t a1)
{
  uint64_t result;

  result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1;
      break;
    case 2:
      result = 2;
      break;
    case 4:
      result = 3;
      break;
    case 8:
      result = 4;
      break;
    case 16:
      result = 5;
      break;
    case 32:
      result = 6;
      break;
    case 64:
      result = 7;
      break;
    default:
      result = 8;
      break;
  }
  return result;
}

unint64_t sub_1001C242C(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

uint64_t sub_1001C243C(uint64_t a1)
{
  uint64_t result;

  result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1;
      break;
    case 2:
      result = 2;
      break;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_6;
    case 4:
      result = 3;
      break;
    case 8:
      result = 4;
      break;
    case 16:
      result = 5;
      break;
    case 32:
      result = 6;
      break;
    case 64:
      result = 7;
      break;
    default:
      if (a1 == 128)
      {
        result = 8;
      }
      else if (a1 == 256)
      {
        result = 9;
      }
      else
      {
LABEL_6:
        result = 10;
      }
      break;
  }
  return result;
}

uint64_t sub_1001C24C4(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return (0x304020100uLL >> (8 * a1));
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Configuration(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA380, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Configuration);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SummaryReport(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA390, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass()
{
  return objc_opt_self(_TtCV10ALProtobuf34Proto_Gnss_Emergency_SummaryReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass);
}

uint64_t sub_1001C2530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[32];

  v2 = a1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 1;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  *(_DWORD *)(v1 + 108) = 0;
  *(_WORD *)(v1 + 113) = 1042;
  *(_BYTE *)(v1 + 112) = 1;
  *(_BYTE *)(v1 + 115) = 7;
  *(_QWORD *)(v1 + 120) = 0;
  *(_QWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  *(_BYTE *)(v1 + 144) = 1;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 1;
  *(_DWORD *)(v1 + 161) = 33689864;
  *(_QWORD *)(v1 + 168) = 0;
  *(_BYTE *)(v1 + 176) = 1;
  *(_BYTE *)(v1 + 184) = 1;
  *(_DWORD *)(v1 + 180) = 0;
  swift_beginAccess(a1 + 16, v62, 0, 0);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_BYTE *)(v2 + 24);
  swift_beginAccess(v1 + 16, v61, 1, 0);
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = v4;
  swift_beginAccess(v2 + 32, v60, 0, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_BYTE *)(v2 + 40);
  swift_beginAccess(v1 + 32, v59, 1, 0);
  *(_QWORD *)(v1 + 32) = v5;
  *(_BYTE *)(v1 + 40) = v6;
  swift_beginAccess(v2 + 48, v58, 0, 0);
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_BYTE *)(v2 + 56);
  swift_beginAccess(v1 + 48, v57, 1, 0);
  *(_QWORD *)(v1 + 48) = v7;
  *(_BYTE *)(v1 + 56) = v8;
  swift_beginAccess(v2 + 64, v56, 0, 0);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(_BYTE *)(v2 + 72);
  swift_beginAccess(v1 + 64, v55, 1, 0);
  *(_QWORD *)(v1 + 64) = v9;
  *(_BYTE *)(v1 + 72) = v10;
  swift_beginAccess(v2 + 80, v54, 0, 0);
  v11 = *(_QWORD *)(v2 + 80);
  v12 = *(_BYTE *)(v2 + 88);
  swift_beginAccess(v1 + 80, v53, 1, 0);
  *(_QWORD *)(v1 + 80) = v11;
  *(_BYTE *)(v1 + 88) = v12;
  swift_beginAccess(v2 + 96, v52, 0, 0);
  v13 = *(_QWORD *)(v2 + 96);
  v14 = *(_BYTE *)(v2 + 104);
  swift_beginAccess(v1 + 96, v51, 1, 0);
  *(_QWORD *)(v1 + 96) = v13;
  *(_BYTE *)(v1 + 104) = v14;
  swift_beginAccess(v2 + 108, v50, 0, 0);
  LODWORD(v13) = *(_DWORD *)(v2 + 108);
  v15 = *(_BYTE *)(v2 + 112);
  swift_beginAccess(v1 + 108, v49, 1, 0);
  *(_DWORD *)(v1 + 108) = v13;
  *(_BYTE *)(v1 + 112) = v15;
  swift_beginAccess(v2 + 113, v48, 0, 0);
  LOBYTE(v13) = *(_BYTE *)(v2 + 113);
  swift_beginAccess(v1 + 113, v47, 1, 0);
  *(_BYTE *)(v1 + 113) = v13;
  swift_beginAccess(v2 + 114, v46, 0, 0);
  LOBYTE(v13) = *(_BYTE *)(v2 + 114);
  swift_beginAccess(v1 + 114, v45, 1, 0);
  *(_BYTE *)(v1 + 114) = v13;
  swift_beginAccess(v2 + 115, v44, 0, 0);
  LOBYTE(v13) = *(_BYTE *)(v2 + 115);
  swift_beginAccess(v1 + 115, v43, 1, 0);
  *(_BYTE *)(v1 + 115) = v13;
  swift_beginAccess(v2 + 120, v42, 0, 0);
  v16 = *(_QWORD *)(v2 + 120);
  v17 = *(_BYTE *)(v2 + 128);
  swift_beginAccess(v1 + 120, v41, 1, 0);
  *(_QWORD *)(v1 + 120) = v16;
  *(_BYTE *)(v1 + 128) = v17;
  swift_beginAccess(v2 + 136, v40, 0, 0);
  v18 = *(_QWORD *)(v2 + 136);
  v19 = *(_BYTE *)(v2 + 144);
  swift_beginAccess(v1 + 136, v39, 1, 0);
  *(_QWORD *)(v1 + 136) = v18;
  *(_BYTE *)(v1 + 144) = v19;
  swift_beginAccess(v2 + 152, v38, 0, 0);
  v20 = *(_QWORD *)(v2 + 152);
  v21 = *(_BYTE *)(v2 + 160);
  swift_beginAccess(v1 + 152, v37, 1, 0);
  *(_QWORD *)(v1 + 152) = v20;
  *(_BYTE *)(v1 + 160) = v21;
  swift_beginAccess(v2 + 161, v36, 0, 0);
  LOBYTE(v20) = *(_BYTE *)(v2 + 161);
  swift_beginAccess(v1 + 161, v35, 1, 0);
  *(_BYTE *)(v1 + 161) = v20;
  swift_beginAccess(v2 + 162, v34, 0, 0);
  LOBYTE(v20) = *(_BYTE *)(v2 + 162);
  swift_beginAccess(v1 + 162, v33, 1, 0);
  *(_BYTE *)(v1 + 162) = v20;
  swift_beginAccess(v2 + 163, v32, 0, 0);
  LOBYTE(v20) = *(_BYTE *)(v2 + 163);
  swift_beginAccess(v1 + 163, v31, 1, 0);
  *(_BYTE *)(v1 + 163) = v20;
  swift_beginAccess(v2 + 164, v30, 0, 0);
  LOBYTE(v20) = *(_BYTE *)(v2 + 164);
  swift_beginAccess(v1 + 164, v29, 1, 0);
  *(_BYTE *)(v1 + 164) = v20;
  swift_beginAccess(v2 + 168, v28, 0, 0);
  v22 = *(_QWORD *)(v2 + 168);
  v23 = *(_BYTE *)(v2 + 176);
  swift_beginAccess(v1 + 168, v27, 1, 0);
  *(_QWORD *)(v1 + 168) = v22;
  *(_BYTE *)(v1 + 176) = v23;
  swift_beginAccess(v2 + 180, v26, 0, 0);
  LODWORD(v22) = *(_DWORD *)(v2 + 180);
  LOBYTE(v2) = *(_BYTE *)(v2 + 184);
  swift_beginAccess(v1 + 180, v25, 1, 0);
  *(_DWORD *)(v1 + 180) = v22;
  *(_BYTE *)(v1 + 184) = v2;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SuplConfig(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_LocationId(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_LocationId);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA3F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA400, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA410, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_QoP(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA420, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_QoP);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SLPAddress(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA430, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Notification(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA440, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Notification);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA450, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SuplInitVer2Extension);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Init(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA460, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Init);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA970, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Init._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SuplContext(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA470, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SessionStatus(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA480, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA980, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SessionStatus._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA900, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA490, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Plmn(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Plmn);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_SessionInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PositionRequest(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass()
{
  return objc_opt_self(_TtCV10ALProtobuf36Proto_Gnss_Emergency_PositionRequestP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass);
}

uint64_t sub_1001C2C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  int v13;
  char v14;
  int v15;
  char v16;
  int v17;
  char v18;
  int v19;
  char v20;
  int v21;
  char v22;
  int v23;
  char v24;
  int v25;
  char v26;
  int v27;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[32];

  v2 = a1;
  *(_DWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 20) = 1281;
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 28) = 1;
  *(_BYTE *)(v1 + 36) = 1;
  *(_DWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 44) = 1;
  *(_DWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 52) = 1;
  *(_DWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 60) = 1;
  *(_DWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 68) = 1;
  *(_DWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 76) = 1;
  *(_DWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 84) = 1;
  *(_DWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 92) = 1;
  *(_DWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 100) = 1;
  *(_DWORD *)(v1 + 104) = 0;
  *(_BYTE *)(v1 + 108) = 1;
  *(_DWORD *)(v1 + 112) = 0;
  *(_WORD *)(v1 + 116) = 1793;
  *(_DWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 124) = 1;
  *(_BYTE *)(v1 + 132) = 1;
  *(_DWORD *)(v1 + 128) = 0;
  swift_beginAccess(a1 + 16, v62, 0, 0);
  v3 = *(_DWORD *)(v2 + 16);
  v4 = *(_BYTE *)(v2 + 20);
  swift_beginAccess(v1 + 16, v61, 1, 0);
  *(_DWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 20) = v4;
  swift_beginAccess(v2 + 21, v60, 0, 0);
  v5 = *(_BYTE *)(v2 + 21);
  swift_beginAccess(v1 + 21, v59, 1, 0);
  *(_BYTE *)(v1 + 21) = v5;
  swift_beginAccess(v2 + 24, v58, 0, 0);
  v6 = *(_DWORD *)(v2 + 24);
  LOBYTE(v3) = *(_BYTE *)(v2 + 28);
  swift_beginAccess(v1 + 24, v57, 1, 0);
  *(_DWORD *)(v1 + 24) = v6;
  *(_BYTE *)(v1 + 28) = v3;
  swift_beginAccess(v2 + 32, v56, 0, 0);
  v7 = *(_DWORD *)(v2 + 32);
  LOBYTE(v3) = *(_BYTE *)(v2 + 36);
  swift_beginAccess(v1 + 32, v55, 1, 0);
  *(_DWORD *)(v1 + 32) = v7;
  *(_BYTE *)(v1 + 36) = v3;
  swift_beginAccess(v2 + 40, v54, 0, 0);
  v8 = *(_DWORD *)(v2 + 40);
  LOBYTE(v3) = *(_BYTE *)(v2 + 44);
  swift_beginAccess(v1 + 40, v53, 1, 0);
  *(_DWORD *)(v1 + 40) = v8;
  *(_BYTE *)(v1 + 44) = v3;
  swift_beginAccess(v2 + 48, v52, 0, 0);
  v9 = *(_DWORD *)(v2 + 48);
  LOBYTE(v3) = *(_BYTE *)(v2 + 52);
  swift_beginAccess(v1 + 48, v51, 1, 0);
  *(_DWORD *)(v1 + 48) = v9;
  *(_BYTE *)(v1 + 52) = v3;
  swift_beginAccess(v2 + 56, v50, 0, 0);
  v10 = *(_DWORD *)(v2 + 56);
  LOBYTE(v3) = *(_BYTE *)(v2 + 60);
  swift_beginAccess(v1 + 56, v49, 1, 0);
  *(_DWORD *)(v1 + 56) = v10;
  *(_BYTE *)(v1 + 60) = v3;
  swift_beginAccess(v2 + 64, v48, 0, 0);
  v11 = *(_DWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 68);
  swift_beginAccess(v1 + 64, v47, 1, 0);
  *(_DWORD *)(v1 + 64) = v11;
  *(_BYTE *)(v1 + 68) = v12;
  swift_beginAccess(v2 + 72, v46, 0, 0);
  v13 = *(_DWORD *)(v2 + 72);
  v14 = *(_BYTE *)(v2 + 76);
  swift_beginAccess(v1 + 72, v45, 1, 0);
  *(_DWORD *)(v1 + 72) = v13;
  *(_BYTE *)(v1 + 76) = v14;
  swift_beginAccess(v2 + 80, v44, 0, 0);
  v15 = *(_DWORD *)(v2 + 80);
  v16 = *(_BYTE *)(v2 + 84);
  swift_beginAccess(v1 + 80, v43, 1, 0);
  *(_DWORD *)(v1 + 80) = v15;
  *(_BYTE *)(v1 + 84) = v16;
  swift_beginAccess(v2 + 88, v42, 0, 0);
  v17 = *(_DWORD *)(v2 + 88);
  v18 = *(_BYTE *)(v2 + 92);
  swift_beginAccess(v1 + 88, v41, 1, 0);
  *(_DWORD *)(v1 + 88) = v17;
  *(_BYTE *)(v1 + 92) = v18;
  swift_beginAccess(v2 + 96, v40, 0, 0);
  v19 = *(_DWORD *)(v2 + 96);
  v20 = *(_BYTE *)(v2 + 100);
  swift_beginAccess(v1 + 96, v39, 1, 0);
  *(_DWORD *)(v1 + 96) = v19;
  *(_BYTE *)(v1 + 100) = v20;
  swift_beginAccess(v2 + 104, v38, 0, 0);
  v21 = *(_DWORD *)(v2 + 104);
  v22 = *(_BYTE *)(v2 + 108);
  swift_beginAccess(v1 + 104, v37, 1, 0);
  *(_DWORD *)(v1 + 104) = v21;
  *(_BYTE *)(v1 + 108) = v22;
  swift_beginAccess(v2 + 112, v36, 0, 0);
  v23 = *(_DWORD *)(v2 + 112);
  v24 = *(_BYTE *)(v2 + 116);
  swift_beginAccess(v1 + 112, v35, 1, 0);
  *(_DWORD *)(v1 + 112) = v23;
  *(_BYTE *)(v1 + 116) = v24;
  swift_beginAccess(v2 + 117, v34, 0, 0);
  LOBYTE(v23) = *(_BYTE *)(v2 + 117);
  swift_beginAccess(v1 + 117, v33, 1, 0);
  *(_BYTE *)(v1 + 117) = v23;
  swift_beginAccess(v2 + 120, v32, 0, 0);
  v25 = *(_DWORD *)(v2 + 120);
  v26 = *(_BYTE *)(v2 + 124);
  swift_beginAccess(v1 + 120, v31, 1, 0);
  *(_DWORD *)(v1 + 120) = v25;
  *(_BYTE *)(v1 + 124) = v26;
  swift_beginAccess(v2 + 128, v30, 0, 0);
  v27 = *(_DWORD *)(v2 + 128);
  LOBYTE(v2) = *(_BYTE *)(v2 + 132);
  swift_beginAccess(v1 + 128, v29, 1, 0);
  *(_DWORD *)(v1 + 128) = v27;
  *(_BYTE *)(v1 + 132) = v2;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA4F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA500, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA510, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA520, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsTOD(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA530, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_LocationInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA540, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CellInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA550, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA560, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA570, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA580, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA590, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA990, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA5F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA600, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PointAltitude(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA610, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Polygon(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA620, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Polygon);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA630, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ShapeInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ShapeInfo._StorageClass);
}

uint64_t sub_1001C3364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _BYTE v67[8];

  v3 = sub_1000039AC(&qword_100375610);
  __chkstk_darwin(v3);
  v58 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000039AC(&qword_100375608);
  __chkstk_darwin(v5);
  v57 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000039AC(&qword_1003755E0);
  __chkstk_darwin(v7);
  v56 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000039AC(&qword_100375600);
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_1003755F8);
  __chkstk_darwin(v11);
  v54 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_1003755F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000039AC(&qword_1003755E8);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  v20 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  v22 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  v24 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  v26 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  v51 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  v28 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  v52 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  v30 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  v53 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  v32 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation;
  *(_DWORD *)v33 = 0;
  *(_BYTE *)(v33 + 4) = 1;
  v34 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, v67, 0, 0);
  sub_10000E660(v34, (uint64_t)v18, &qword_1003755E8);
  swift_beginAccess(v19, v66, 33, 0);
  sub_10000E574((uint64_t)v18, v19, &qword_1003755E8);
  swift_endAccess(v66);
  v35 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, v66, 0, 0);
  sub_10000E660(v35, (uint64_t)v15, &qword_1003755F0);
  swift_beginAccess(v21, v65, 33, 0);
  sub_10000E574((uint64_t)v15, v21, &qword_1003755F0);
  swift_endAccess(v65);
  v36 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, v65, 0, 0);
  v37 = v54;
  sub_10000E660(v36, v54, &qword_1003755F8);
  swift_beginAccess(v23, v64, 33, 0);
  sub_10000E574(v37, v23, &qword_1003755F8);
  swift_endAccess(v64);
  v38 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, v64, 0, 0);
  v39 = v55;
  sub_10000E660(v38, v55, &qword_100375600);
  swift_beginAccess(v25, v63, 33, 0);
  sub_10000E574(v39, v25, &qword_100375600);
  swift_endAccess(v63);
  v40 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, v63, 0, 0);
  v41 = v56;
  sub_10000E660(v40, v56, &qword_1003755E0);
  v42 = v51;
  swift_beginAccess(v51, v62, 33, 0);
  sub_10000E574(v41, v42, &qword_1003755E0);
  swift_endAccess(v62);
  v43 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, v62, 0, 0);
  v44 = v57;
  sub_10000E660(v43, v57, &qword_100375608);
  v45 = v52;
  swift_beginAccess(v52, v61, 33, 0);
  sub_10000E574(v44, v45, &qword_100375608);
  swift_endAccess(v61);
  v46 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, v61, 0, 0);
  v47 = v58;
  sub_10000E660(v46, v58, &qword_100375610);
  v48 = v53;
  swift_beginAccess(v53, v60, 33, 0);
  sub_10000E574(v47, v48, &qword_100375610);
  swift_endAccess(v60);
  v49 = a1
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation;
  swift_beginAccess(v49, v60, 0, 0);
  LODWORD(v46) = *(_DWORD *)v49;
  LOBYTE(v49) = *(_BYTE *)(v49 + 4);
  swift_beginAccess(v33, v59, 1, 0);
  *(_DWORD *)v33 = v46;
  *(_BYTE *)(v33 + 4) = v49;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_LocEstimate(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA640, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_LocEstimate);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA650, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA660, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA670, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA680, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA690, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_VelocityInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_VelocityEstimate);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PositionReport(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_PositionReport._StorageClass);
}

uint64_t sub_1001C3ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];
  uint64_t v56;
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375668);
  __chkstk_darwin(v4);
  v49 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375660);
  __chkstk_darwin(v6);
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375658);
  __chkstk_darwin(v8);
  v47 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000039AC(&qword_100375650);
  __chkstk_darwin(v10);
  v45 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 9;
  v15 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  v16 = (_DWORD *)(v1 + 20);
  *(_BYTE *)(v2 + 24) = 1;
  v17 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v18 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  v20 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  v43 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  v22 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  v44 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  v24 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  v46 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  v26 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = v2
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource;
  *(_DWORD *)v27 = 0;
  *(_BYTE *)(v27 + 4) = 1;
  swift_beginAccess(a1 + 16, v60, 0, 0);
  LOBYTE(v25) = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v15, v59, 1, 0);
  *v15 = v25;
  swift_beginAccess(a1 + 20, v58, 0, 0);
  LODWORD(v25) = *(_DWORD *)(a1 + 20);
  LOBYTE(v15) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v16, v57, 1, 0);
  *v16 = v25;
  *(_BYTE *)(v2 + 24) = (_BYTE)v15;
  v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &v56, 0, 0);
  sub_10000E660(v28, (uint64_t)v14, &qword_100375648);
  swift_beginAccess(v17, v55, 33, 0);
  sub_10000E574((uint64_t)v14, v17, &qword_100375648);
  swift_endAccess(v55);
  v29 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, v55, 0, 0);
  v30 = v45;
  sub_10000E660(v29, v45, &qword_100375650);
  swift_beginAccess(v19, v54, 33, 0);
  sub_10000E574(v30, v19, &qword_100375650);
  swift_endAccess(v54);
  v31 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, v54, 0, 0);
  v32 = v47;
  sub_10000E660(v31, v47, &qword_100375658);
  v33 = v43;
  swift_beginAccess(v43, v53, 33, 0);
  sub_10000E574(v32, v33, &qword_100375658);
  swift_endAccess(v53);
  v34 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, v53, 0, 0);
  v35 = v48;
  sub_10000E660(v34, v48, &qword_100375660);
  v36 = v44;
  swift_beginAccess(v44, v52, 33, 0);
  sub_10000E574(v35, v36, &qword_100375660);
  swift_endAccess(v52);
  v37 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, v52, 0, 0);
  v38 = v49;
  sub_10000E660(v37, v49, &qword_100375668);
  v39 = v46;
  swift_beginAccess(v46, v51, 33, 0);
  sub_10000E574(v38, v39, &qword_100375668);
  swift_endAccess(v51);
  v40 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource, v51, 0, 0);
  LODWORD(a1) = *(_DWORD *)v40;
  LOBYTE(v40) = *(_BYTE *)(v40 + 4);
  swift_beginAccess(v27, &v50, 1, 0);
  *(_DWORD *)v27 = a1;
  *(_BYTE *)(v27 + 4) = v40;
  return v2;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA6F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA700, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA710, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA720, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_MeasurementReport._StorageClass);
}

uint64_t sub_1001C40E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  uint64_t v42;
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375698);
  __chkstk_darwin(v4);
  v35 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v6);
  v33 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 9;
  v11 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  v12 = (_DWORD *)(v1 + 20);
  *(_BYTE *)(v2 + 24) = 1;
  v13 = v2
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v14 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v2
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  v16 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v2
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  v32 = v2
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  v18 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v2
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
  *(_DWORD *)v19 = 0;
  *(_BYTE *)(v19 + 4) = 1;
  v34 = (_BYTE *)(v2
                + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  *(_BYTE *)(v2
           + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime) = 2;
  swift_beginAccess(a1 + 16, v46, 0, 0);
  v20 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v11, v45, 1, 0);
  *v11 = v20;
  swift_beginAccess(a1 + 20, v44, 0, 0);
  LODWORD(v11) = *(_DWORD *)(a1 + 20);
  v21 = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v12, v43, 1, 0);
  *v12 = (_DWORD)v11;
  *(_BYTE *)(v2 + 24) = v21;
  v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &v42, 0, 0);
  sub_10000E660(v22, (uint64_t)v10, &qword_100375648);
  swift_beginAccess(v13, v41, 33, 0);
  sub_10000E574((uint64_t)v10, v13, &qword_100375648);
  swift_endAccess(v41);
  v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v41, 0, 0);
  v24 = v33;
  sub_10000E660(v23, v33, &qword_100375690);
  swift_beginAccess(v15, v40, 33, 0);
  sub_10000E574(v24, v15, &qword_100375690);
  swift_endAccess(v40);
  v25 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, v40, 0, 0);
  v26 = v35;
  sub_10000E660(v25, v35, &qword_100375698);
  v27 = v32;
  swift_beginAccess(v32, v39, 33, 0);
  sub_10000E574(v26, v27, &qword_100375698);
  swift_endAccess(v39);
  v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements, v39, 0, 0);
  LODWORD(v26) = *(_DWORD *)v28;
  LOBYTE(v28) = *(_BYTE *)(v28 + 4);
  swift_beginAccess(v19, &v38, 1, 0);
  *(_DWORD *)v19 = v26;
  *(_BYTE *)(v19 + 4) = v28;
  v29 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, &v37, 0, 0);
  LOBYTE(v29) = *v29;
  v30 = v34;
  swift_beginAccess(v34, &v36, 1, 0);
  *v30 = (_BYTE)v29;
  return v2;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA730, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA740, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA750, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA760, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA770, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA780, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA790, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA9F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_EutranCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA7F0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA800, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CellTimeData(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA810, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA820, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_TowAssist(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA830, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA840, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA850, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA860, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass()
{
  return objc_opt_self(_TtCV10ALProtobuf33Proto_Gnss_Emergency_GpsEphemerisP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass);
}

uint64_t sub_1001C46B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _BYTE *v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _BYTE v67[24];
  _BYTE v68[24];
  _BYTE v69[24];
  _BYTE v70[24];
  _BYTE v71[24];
  _BYTE v72[24];
  _BYTE v73[24];
  _BYTE v74[24];
  _BYTE v75[24];
  _BYTE v76[24];
  _BYTE v77[24];
  _BYTE v78[24];
  _BYTE v79[24];
  _BYTE v80[24];
  _BYTE v81[24];
  _BYTE v82[24];
  _BYTE v83[24];
  _BYTE v84[24];
  _BYTE v85[24];
  _BYTE v86[24];
  _BYTE v87[24];
  _BYTE v88[24];
  _BYTE v89[24];
  _BYTE v90[24];
  _BYTE v91[24];
  _BYTE v92[24];
  _BYTE v93[24];
  _BYTE v94[24];
  _BYTE v95[24];
  _BYTE v96[24];
  _BYTE v97[24];
  _BYTE v98[24];
  _BYTE v99[24];
  _BYTE v100[24];
  _BYTE v101[24];
  _BYTE v102[24];
  _BYTE v103[24];
  _BYTE v104[24];
  _BYTE v105[24];
  _BYTE v106[32];

  v2 = a1;
  *(_DWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 20) = 1;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 28) = 1;
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_BYTE *)(v1 + 44) = 1;
  *(_DWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 52) = 1;
  *(_DWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 60) = 1;
  *(_BYTE *)(v1 + 68) = 1;
  *(_DWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 76) = 1;
  *(_DWORD *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 84) = 1;
  *(_BYTE *)(v1 + 92) = 1;
  *(_DWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 100) = 1;
  *(_DWORD *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 112) = 0;
  *(_BYTE *)(v1 + 108) = 1;
  *(_BYTE *)(v1 + 116) = 1;
  *(_DWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 124) = 1;
  *(_DWORD *)(v1 + 128) = 0;
  *(_DWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 132) = 1;
  *(_BYTE *)(v1 + 140) = 1;
  *(_DWORD *)(v1 + 144) = 0;
  *(_BYTE *)(v1 + 148) = 1;
  *(_DWORD *)(v1 + 152) = 0;
  *(_DWORD *)(v1 + 160) = 0;
  *(_BYTE *)(v1 + 156) = 1;
  *(_BYTE *)(v1 + 164) = 1;
  *(_DWORD *)(v1 + 168) = 0;
  *(_BYTE *)(v1 + 172) = 1;
  *(_DWORD *)(v1 + 176) = 0;
  *(_DWORD *)(v1 + 184) = 0;
  *(_BYTE *)(v1 + 180) = 1;
  *(_BYTE *)(v1 + 188) = 1;
  *(_DWORD *)(v1 + 192) = 0;
  *(_BYTE *)(v1 + 196) = 1;
  *(_DWORD *)(v1 + 200) = 0;
  *(_DWORD *)(v1 + 208) = 0;
  *(_BYTE *)(v1 + 204) = 1;
  *(_BYTE *)(v1 + 212) = 1;
  *(_DWORD *)(v1 + 216) = 0;
  *(_BYTE *)(v1 + 220) = 1;
  *(_DWORD *)(v1 + 224) = 0;
  *(_DWORD *)(v1 + 232) = 0;
  *(_BYTE *)(v1 + 228) = 1;
  *(_BYTE *)(v1 + 236) = 1;
  *(_BYTE *)(v1 + 244) = 1;
  *(_BYTE *)(v1 + 252) = 1;
  *(_BYTE *)(v1 + 260) = 1;
  *(_BYTE *)(v1 + 268) = 1;
  *(_BYTE *)(v1 + 276) = 1;
  *(_BYTE *)(v1 + 284) = 1;
  *(_DWORD *)(v1 + 240) = 0;
  *(_DWORD *)(v1 + 248) = 0;
  *(_DWORD *)(v1 + 256) = 0;
  *(_DWORD *)(v1 + 264) = 0;
  *(_DWORD *)(v1 + 272) = 0;
  *(_DWORD *)(v1 + 280) = 0;
  v38 = (_BYTE *)(a1 + 260);
  swift_beginAccess(a1 + 16, v106, 0, 0);
  v3 = *(_DWORD *)(v2 + 16);
  v4 = *(_BYTE *)(v2 + 20);
  swift_beginAccess(v1 + 16, v105, 1, 0);
  *(_DWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 20) = v4;
  swift_beginAccess(v2 + 24, v104, 0, 0);
  v5 = *(_DWORD *)(v2 + 24);
  LOBYTE(v3) = *(_BYTE *)(v2 + 28);
  swift_beginAccess(v1 + 24, v103, 1, 0);
  *(_DWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 28) = v3;
  swift_beginAccess(v2 + 32, v102, 0, 0);
  v6 = *(_DWORD *)(v2 + 32);
  LOBYTE(v5) = *(_BYTE *)(v2 + 36);
  swift_beginAccess(v1 + 32, v101, 1, 0);
  *(_DWORD *)(v1 + 32) = v6;
  *(_BYTE *)(v1 + 36) = v5;
  swift_beginAccess(v2 + 40, v100, 0, 0);
  v7 = *(_DWORD *)(v2 + 40);
  LOBYTE(v5) = *(_BYTE *)(v2 + 44);
  swift_beginAccess(v1 + 40, v99, 1, 0);
  *(_DWORD *)(v1 + 40) = v7;
  *(_BYTE *)(v1 + 44) = v5;
  swift_beginAccess(v2 + 48, v98, 0, 0);
  v8 = *(_DWORD *)(v2 + 48);
  LOBYTE(v5) = *(_BYTE *)(v2 + 52);
  swift_beginAccess(v1 + 48, v97, 1, 0);
  *(_DWORD *)(v1 + 48) = v8;
  *(_BYTE *)(v1 + 52) = v5;
  swift_beginAccess(v2 + 56, v96, 0, 0);
  v9 = *(_DWORD *)(v2 + 56);
  LOBYTE(v5) = *(_BYTE *)(v2 + 60);
  swift_beginAccess(v1 + 56, v95, 1, 0);
  *(_DWORD *)(v1 + 56) = v9;
  *(_BYTE *)(v1 + 60) = v5;
  swift_beginAccess(v2 + 64, v94, 0, 0);
  v10 = *(_DWORD *)(v2 + 64);
  LOBYTE(v5) = *(_BYTE *)(v2 + 68);
  swift_beginAccess(v1 + 64, v93, 1, 0);
  *(_DWORD *)(v1 + 64) = v10;
  *(_BYTE *)(v1 + 68) = v5;
  swift_beginAccess(v2 + 72, v92, 0, 0);
  v11 = *(_DWORD *)(v2 + 72);
  LOBYTE(v5) = *(_BYTE *)(v2 + 76);
  swift_beginAccess(v1 + 72, v91, 1, 0);
  *(_DWORD *)(v1 + 72) = v11;
  *(_BYTE *)(v1 + 76) = v5;
  swift_beginAccess(v2 + 80, v90, 0, 0);
  v12 = *(_DWORD *)(v2 + 80);
  LOBYTE(v5) = *(_BYTE *)(v2 + 84);
  swift_beginAccess(v1 + 80, v89, 1, 0);
  *(_DWORD *)(v1 + 80) = v12;
  *(_BYTE *)(v1 + 84) = v5;
  swift_beginAccess(v2 + 88, v88, 0, 0);
  v13 = *(_DWORD *)(v2 + 88);
  LOBYTE(v5) = *(_BYTE *)(v2 + 92);
  swift_beginAccess(v1 + 88, v87, 1, 0);
  *(_DWORD *)(v1 + 88) = v13;
  *(_BYTE *)(v1 + 92) = v5;
  swift_beginAccess(v2 + 96, v86, 0, 0);
  v14 = *(_DWORD *)(v2 + 96);
  LOBYTE(v5) = *(_BYTE *)(v2 + 100);
  swift_beginAccess(v1 + 96, v85, 1, 0);
  *(_DWORD *)(v1 + 96) = v14;
  *(_BYTE *)(v1 + 100) = v5;
  swift_beginAccess(v2 + 104, v84, 0, 0);
  v15 = *(_DWORD *)(v2 + 104);
  LOBYTE(v5) = *(_BYTE *)(v2 + 108);
  swift_beginAccess(v1 + 104, v83, 1, 0);
  *(_DWORD *)(v1 + 104) = v15;
  *(_BYTE *)(v1 + 108) = v5;
  swift_beginAccess(v2 + 112, v82, 0, 0);
  v16 = *(_DWORD *)(v2 + 112);
  LOBYTE(v5) = *(_BYTE *)(v2 + 116);
  swift_beginAccess(v1 + 112, v81, 1, 0);
  *(_DWORD *)(v1 + 112) = v16;
  *(_BYTE *)(v1 + 116) = v5;
  swift_beginAccess(v2 + 120, v80, 0, 0);
  v17 = *(_DWORD *)(v2 + 120);
  LOBYTE(v5) = *(_BYTE *)(v2 + 124);
  swift_beginAccess(v1 + 120, v79, 1, 0);
  *(_DWORD *)(v1 + 120) = v17;
  *(_BYTE *)(v1 + 124) = v5;
  swift_beginAccess(v2 + 128, v78, 0, 0);
  v18 = *(_DWORD *)(v2 + 128);
  LOBYTE(v5) = *(_BYTE *)(v2 + 132);
  swift_beginAccess(v1 + 128, v77, 1, 0);
  *(_DWORD *)(v1 + 128) = v18;
  *(_BYTE *)(v1 + 132) = v5;
  swift_beginAccess(v2 + 136, v76, 0, 0);
  v19 = *(_DWORD *)(v2 + 136);
  LOBYTE(v5) = *(_BYTE *)(v2 + 140);
  swift_beginAccess(v1 + 136, v75, 1, 0);
  *(_DWORD *)(v1 + 136) = v19;
  *(_BYTE *)(v1 + 140) = v5;
  swift_beginAccess(v2 + 144, v74, 0, 0);
  v20 = *(_DWORD *)(v2 + 144);
  LOBYTE(v5) = *(_BYTE *)(v2 + 148);
  swift_beginAccess(v1 + 144, v73, 1, 0);
  *(_DWORD *)(v1 + 144) = v20;
  *(_BYTE *)(v1 + 148) = v5;
  swift_beginAccess(v2 + 152, v72, 0, 0);
  v21 = *(_DWORD *)(v2 + 152);
  LOBYTE(v5) = *(_BYTE *)(v2 + 156);
  swift_beginAccess(v1 + 152, v71, 1, 0);
  *(_DWORD *)(v1 + 152) = v21;
  *(_BYTE *)(v1 + 156) = v5;
  swift_beginAccess(v2 + 160, v70, 0, 0);
  v22 = *(_DWORD *)(v2 + 160);
  LOBYTE(v5) = *(_BYTE *)(v2 + 164);
  swift_beginAccess(v1 + 160, v69, 1, 0);
  *(_DWORD *)(v1 + 160) = v22;
  *(_BYTE *)(v1 + 164) = v5;
  swift_beginAccess(v2 + 168, v68, 0, 0);
  v23 = *(_DWORD *)(v2 + 168);
  LOBYTE(v5) = *(_BYTE *)(v2 + 172);
  swift_beginAccess(v1 + 168, v67, 1, 0);
  *(_DWORD *)(v1 + 168) = v23;
  *(_BYTE *)(v1 + 172) = v5;
  swift_beginAccess(v2 + 176, v66, 0, 0);
  v24 = *(_DWORD *)(v2 + 176);
  LOBYTE(v5) = *(_BYTE *)(v2 + 180);
  swift_beginAccess(v1 + 176, v65, 1, 0);
  *(_DWORD *)(v1 + 176) = v24;
  *(_BYTE *)(v1 + 180) = v5;
  swift_beginAccess(v2 + 184, v64, 0, 0);
  v25 = *(_DWORD *)(v2 + 184);
  LOBYTE(v5) = *(_BYTE *)(v2 + 188);
  swift_beginAccess(v1 + 184, v63, 1, 0);
  *(_DWORD *)(v1 + 184) = v25;
  *(_BYTE *)(v1 + 188) = v5;
  swift_beginAccess(v2 + 192, v62, 0, 0);
  v26 = *(_DWORD *)(v2 + 192);
  LOBYTE(v5) = *(_BYTE *)(v2 + 196);
  swift_beginAccess(v1 + 192, v61, 1, 0);
  *(_DWORD *)(v1 + 192) = v26;
  *(_BYTE *)(v1 + 196) = v5;
  swift_beginAccess(v2 + 200, v60, 0, 0);
  v27 = *(_DWORD *)(v2 + 200);
  LOBYTE(v5) = *(_BYTE *)(v2 + 204);
  swift_beginAccess(v1 + 200, v59, 1, 0);
  *(_DWORD *)(v1 + 200) = v27;
  *(_BYTE *)(v1 + 204) = v5;
  swift_beginAccess(v2 + 208, v58, 0, 0);
  v28 = *(_DWORD *)(v2 + 208);
  LOBYTE(v5) = *(_BYTE *)(v2 + 212);
  swift_beginAccess(v1 + 208, v57, 1, 0);
  *(_DWORD *)(v1 + 208) = v28;
  *(_BYTE *)(v1 + 212) = v5;
  swift_beginAccess(v2 + 216, v56, 0, 0);
  v29 = *(_DWORD *)(v2 + 216);
  LOBYTE(v5) = *(_BYTE *)(v2 + 220);
  swift_beginAccess(v1 + 216, v55, 1, 0);
  *(_DWORD *)(v1 + 216) = v29;
  *(_BYTE *)(v1 + 220) = v5;
  swift_beginAccess(v2 + 224, v54, 0, 0);
  v30 = *(_DWORD *)(v2 + 224);
  LOBYTE(v5) = *(_BYTE *)(v2 + 228);
  swift_beginAccess(v1 + 224, v53, 1, 0);
  *(_DWORD *)(v1 + 224) = v30;
  *(_BYTE *)(v1 + 228) = v5;
  swift_beginAccess(v2 + 232, v52, 0, 0);
  v31 = *(_DWORD *)(v2 + 232);
  LOBYTE(v5) = *(_BYTE *)(v2 + 236);
  swift_beginAccess(v1 + 232, v51, 1, 0);
  *(_DWORD *)(v1 + 232) = v31;
  *(_BYTE *)(v1 + 236) = v5;
  swift_beginAccess(v2 + 240, v50, 0, 0);
  v32 = *(_DWORD *)(v2 + 240);
  LOBYTE(v5) = *(_BYTE *)(v2 + 244);
  swift_beginAccess(v1 + 240, v49, 1, 0);
  *(_DWORD *)(v1 + 240) = v32;
  *(_BYTE *)(v1 + 244) = v5;
  swift_beginAccess(v2 + 248, v48, 0, 0);
  v33 = *(_DWORD *)(v2 + 248);
  LOBYTE(v5) = *(_BYTE *)(v2 + 252);
  swift_beginAccess(v1 + 248, v47, 1, 0);
  *(_DWORD *)(v1 + 248) = v33;
  *(_BYTE *)(v1 + 252) = v5;
  swift_beginAccess(v2 + 256, v46, 0, 0);
  v34 = *(_DWORD *)(v2 + 256);
  LOBYTE(v5) = *(_BYTE *)(v2 + 260);
  swift_beginAccess(v1 + 256, v45, 1, 0);
  *(_DWORD *)(v1 + 256) = v34;
  *(_BYTE *)(v1 + 260) = v5;
  swift_beginAccess(v2 + 264, v44, 0, 0);
  v35 = *(_DWORD *)(v2 + 264);
  LOBYTE(v5) = v38[8];
  swift_beginAccess(v1 + 264, v43, 1, 0);
  *(_DWORD *)(v1 + 264) = v35;
  *(_BYTE *)(v1 + 268) = v5;
  swift_beginAccess(v2 + 272, v42, 0, 0);
  v36 = *(_DWORD *)(v2 + 272);
  LOBYTE(v5) = v38[16];
  swift_beginAccess(v1 + 272, v41, 1, 0);
  *(_DWORD *)(v1 + 272) = v36;
  *(_BYTE *)(v1 + 276) = v5;
  swift_beginAccess(v2 + 280, v40, 0, 0);
  LODWORD(v2) = *(_DWORD *)(v2 + 280);
  LOBYTE(v36) = v38[24];
  swift_beginAccess(v1 + 280, v39, 1, 0);
  *(_DWORD *)(v1 + 280) = v2;
  *(_BYTE *)(v1 + 284) = v36;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA870, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA880, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CplaneConfig);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CplaneContext(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA890, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CplaneContext);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA960, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Cdma1xContext);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_EmergConfig(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsAcqElement);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8C0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8D0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA8E0, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_CellFTAssistance);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA910, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Is801VelocityInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA920, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Is801ClockInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA930, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Is801HeightInfo);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA940, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_Is801LocationInd);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CA950, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(uint64_t a1)
{
  return sub_10000E62C(a1, (uint64_t *)&unk_1003CAA00, (uint64_t)&nominal type descriptor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass);
}

uint64_t sub_1001C5200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  uint64_t v41;
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[32];

  v2 = v1;
  v4 = sub_1000039AC(&qword_100375720);
  __chkstk_darwin(v4);
  v34 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000039AC(&qword_100375690);
  __chkstk_darwin(v6);
  v32 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375648);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 9;
  v11 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  v12 = (_DWORD *)(v1 + 20);
  *(_BYTE *)(v2 + 24) = 1;
  v13 = v2
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  v14 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v2
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  v16 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v2
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  v18 = type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v31 = (_BYTE *)(v2
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  *(_BYTE *)(v2
           + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction) = 4;
  v33 = (_BYTE *)(v2
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  *(_BYTE *)(v2
           + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime) = 2;
  swift_beginAccess(a1 + 16, v45, 0, 0);
  v19 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v11, v44, 1, 0);
  *v11 = v19;
  swift_beginAccess(a1 + 20, v43, 0, 0);
  LODWORD(v11) = *(_DWORD *)(a1 + 20);
  v20 = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v12, v42, 1, 0);
  *v12 = (_DWORD)v11;
  *(_BYTE *)(v2 + 24) = v20;
  v21 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, &v41, 0, 0);
  sub_10000E660(v21, (uint64_t)v10, &qword_100375648);
  swift_beginAccess(v13, v40, 33, 0);
  sub_10000E574((uint64_t)v10, v13, &qword_100375648);
  swift_endAccess(v40);
  v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, v40, 0, 0);
  v23 = v32;
  sub_10000E660(v22, v32, &qword_100375690);
  swift_beginAccess(v15, v39, 33, 0);
  sub_10000E574(v23, v15, &qword_100375690);
  swift_endAccess(v39);
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication;
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationIndication, v39, 0, 0);
  v25 = v34;
  sub_10000E660(v24, v34, &qword_100375720);
  swift_beginAccess(v17, v38, 33, 0);
  sub_10000E574(v25, v17, &qword_100375720);
  swift_endAccess(v38);
  v26 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction);
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__afltAction, v38, 0, 0);
  LOBYTE(v26) = *v26;
  v27 = v31;
  swift_beginAccess(v31, &v37, 1, 0);
  *v27 = (_BYTE)v26;
  v28 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  swift_beginAccess(a1+ OBJC_IVAR____TtCV10ALProtobuf50Proto_Gnss_Emergency_MeasurementReportWithEstimateP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime, &v36, 0, 0);
  LOBYTE(v28) = *v28;
  v29 = v33;
  swift_beginAccess(v33, &v35, 1, 0);
  *v29 = (_BYTE)v28;
  return v2;
}

uint64_t sub_1001C5624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  char v42;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v47 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_33;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_33;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_33;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_33;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_33;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_33;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_33;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_33;
  }
  v32 = v11[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) == 0)
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_33;
LABEL_31:
    v37 = v11[10];
    v38 = (_DWORD *)(a1 + v37);
    v39 = *(_BYTE *)(a1 + v37 + 4);
    v40 = (_DWORD *)(a2 + v37);
    v41 = *(unsigned __int8 *)(a2 + v37 + 4);
    if ((v39 & 1) != 0)
    {
      if (!v41)
        goto LABEL_33;
    }
    else
    {
      if (*v38 != *v40)
        LOBYTE(v41) = 1;
      if ((v41 & 1) != 0)
        goto LABEL_33;
    }
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v44(v10, a1, v4);
    v44(v8, a2, v4);
    v45 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v42 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v45);
    v46 = *(void (**)(char *, uint64_t))(v5 + 8);
    v46(v8, v4);
    v46(v10, v4);
    return v42 & 1;
  }
  if (v36)
    goto LABEL_31;
LABEL_33:
  v42 = 0;
  return v42 & 1;
}

uint64_t sub_1001C5870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  _DWORD *v53;
  int v54;
  uint64_t v55;
  _DWORD *v56;
  char v57;
  _DWORD *v58;
  int v59;
  uint64_t v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *);
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = type metadata accessor for UnknownStorage(0);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  v5 = __chkstk_darwin(v4);
  v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (char *)&v72 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v77 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BF80);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755E0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v72 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v72 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  v24 = *(int *)(v23 + 20);
  v78 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  sub_10000E660(v25, (uint64_t)v22, &qword_1003755E0);
  v27 = v26[5];
  v79 = a2;
  sub_10000E660(a2 + v27, (uint64_t)v20, &qword_1003755E0);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755E0);
  sub_10000E660((uint64_t)v20, v28, &qword_1003755E0);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755E0);
    if (v29(v28, 1, v8) != 1)
    {
      v32 = v77;
      sub_100003E08(v28, v77, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      v33 = sub_1001D3C4C((uint64_t)v17, v32, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100004030(v32, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v20, &qword_1003755E0);
      sub_100015704((uint64_t)v22, &qword_1003755E0);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v13, &qword_1003755E0);
      if ((v33 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_100015704((uint64_t)v20, &qword_1003755E0);
    sub_100015704((uint64_t)v22, &qword_1003755E0);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037BF80);
    goto LABEL_7;
  }
  sub_100015704((uint64_t)v20, &qword_1003755E0);
  sub_100015704((uint64_t)v22, &qword_1003755E0);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v13, &qword_1003755E0);
LABEL_10:
  v34 = v26[6];
  v35 = v79;
  v36 = (_DWORD *)(v78 + v34);
  v37 = *(_BYTE *)(v78 + v34 + 4);
  v38 = (_DWORD *)(v79 + v34);
  v39 = *(unsigned __int8 *)(v79 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_7;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = (_DWORD *)(v78 + v40);
  v42 = *(_BYTE *)(v78 + v40 + 4);
  v43 = (_DWORD *)(v79 + v40);
  v44 = *(unsigned __int8 *)(v79 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_7;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_7;
  }
  v45 = v26[8];
  v46 = (_DWORD *)(v78 + v45);
  v47 = *(_BYTE *)(v78 + v45 + 4);
  v48 = (_DWORD *)(v79 + v45);
  v49 = *(unsigned __int8 *)(v79 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_7;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_7;
  }
  v50 = v26[9];
  v51 = (_DWORD *)(v78 + v50);
  v52 = *(_BYTE *)(v78 + v50 + 4);
  v53 = (_DWORD *)(v79 + v50);
  v54 = *(unsigned __int8 *)(v79 + v50 + 4);
  if ((v52 & 1) != 0)
  {
    if (!v54)
      goto LABEL_7;
  }
  else
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) != 0)
      goto LABEL_7;
  }
  v55 = v26[10];
  v56 = (_DWORD *)(v78 + v55);
  v57 = *(_BYTE *)(v78 + v55 + 4);
  v58 = (_DWORD *)(v79 + v55);
  v59 = *(unsigned __int8 *)(v79 + v55 + 4);
  if ((v57 & 1) != 0)
  {
    if (!v59)
      goto LABEL_7;
  }
  else
  {
    if (*v56 != *v58)
      LOBYTE(v59) = 1;
    if ((v59 & 1) != 0)
      goto LABEL_7;
  }
  v60 = v26[11];
  v61 = (_DWORD *)(v78 + v60);
  v62 = *(_BYTE *)(v78 + v60 + 4);
  v63 = (_DWORD *)(v79 + v60);
  v64 = *(unsigned __int8 *)(v79 + v60 + 4);
  if ((v62 & 1) != 0)
  {
    if (v64)
    {
LABEL_46:
      v66 = v75;
      v65 = v76;
      v67 = *(void (**)(char *))(v75 + 16);
      v68 = v73;
      v67(v73);
      v69 = v74;
      ((void (*)(char *, uint64_t, uint64_t))v67)(v74, v35, v65);
      v70 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v69, v65, v70);
      v71 = *(void (**)(char *, uint64_t))(v66 + 8);
      v71(v69, v65);
      v71(v68, v65);
      return v30 & 1;
    }
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    if ((v64 & 1) == 0)
      goto LABEL_46;
  }
LABEL_7:
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_1001C5D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v20;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v20 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0) + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 != 6)
  {
    if (v13 != 6 && v12 == v13)
      goto LABEL_3;
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  if (v13 != 6)
    goto LABEL_8;
LABEL_3:
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  v15 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v15);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t sub_1001C5EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_13;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_13;
  }
  v17 = *(int *)(v11 + 24);
  v18 = *(unsigned __int8 *)(a1 + v17);
  v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2)
    {
LABEL_13:
      v22 = 0;
      return v22 & 1;
    }
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_13;
  }
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v10, a1, v4);
  v20(v8, a2, v4);
  v21 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v8, v4);
  v23(v10, v4);
  return v22 & 1;
}

uint64_t sub_1001C6038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _DWORD *v27;
  char v28;
  _DWORD *v29;
  int v30;
  uint64_t v31;
  _DWORD *v32;
  char v33;
  _DWORD *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  char v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;

  v4 = type metadata accessor for UnknownStorage(0);
  v60 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v59 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v58 = (char *)&v53 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v57 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BFD0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755B8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v53 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v53 - v21;
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  v24 = a2;
  v25 = v23;
  v26 = v23[5];
  v27 = (_DWORD *)(a1 + v26);
  v28 = *(_BYTE *)(a1 + v26 + 4);
  v29 = (_DWORD *)(v24 + v26);
  v30 = *(unsigned __int8 *)(v24 + v26 + 4);
  if ((v28 & 1) != 0)
  {
    if (!v30)
      goto LABEL_19;
  }
  else
  {
    if (*v27 != *v29)
      LOBYTE(v30) = 1;
    if ((v30 & 1) != 0)
      goto LABEL_19;
  }
  v31 = v23[6];
  v32 = (_DWORD *)(a1 + v31);
  v33 = *(_BYTE *)(a1 + v31 + 4);
  v34 = (_DWORD *)(v24 + v31);
  v35 = *(unsigned __int8 *)(v24 + v31 + 4);
  if ((v33 & 1) != 0)
  {
    if (!v35)
      goto LABEL_19;
  }
  else
  {
    if (*v32 != *v34)
      LOBYTE(v35) = 1;
    if ((v35 & 1) != 0)
      goto LABEL_19;
  }
  v56 = v4;
  v36 = v23[7];
  v54 = a1;
  v37 = a1 + v36;
  v38 = v24;
  sub_10000E660(v37, (uint64_t)v22, &qword_1003755B8);
  v39 = v25[7];
  v55 = v38;
  sub_10000E660(v38 + v39, (uint64_t)v20, &qword_1003755B8);
  v40 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755B8);
  sub_10000E660((uint64_t)v20, v40, &qword_1003755B8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v41((uint64_t)v13, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_1003755B8);
    sub_100015704((uint64_t)v22, &qword_1003755B8);
    if (v41(v40, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v13, &qword_1003755B8);
LABEL_22:
      v46 = v60;
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      v48 = v58;
      v49 = v56;
      v47(v58, v54, v56);
      v50 = v59;
      v47(v59, v55, v49);
      v51 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v50, v49, v51);
      v52 = *(void (**)(char *, uint64_t))(v46 + 8);
      v52(v50, v49);
      v52(v48, v49);
      return v42 & 1;
    }
    goto LABEL_18;
  }
  sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755B8);
  if (v41(v40, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_1003755B8);
    sub_100015704((uint64_t)v22, &qword_1003755B8);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_18:
    sub_100015704((uint64_t)v13, &qword_10037BFD0);
    goto LABEL_19;
  }
  v44 = v57;
  sub_100003E08(v40, v57, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  v45 = sub_1001D41D4((uint64_t)v17, v44);
  sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  sub_100015704((uint64_t)v20, &qword_1003755B8);
  sub_100015704((uint64_t)v22, &qword_1003755B8);
  sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  sub_100015704((uint64_t)v13, &qword_1003755B8);
  if ((v45 & 1) != 0)
    goto LABEL_22;
LABEL_19:
  v42 = 0;
  return v42 & 1;
}

uint64_t sub_1001C6484(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  uint64_t v28;
  _DWORD *v29;
  char v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  v12 = (int *)v11;
  v13 = *(int *)(v11 + 28);
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_34;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_34;
  }
  v18 = *(int *)(v11 + 32);
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_34;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_34;
  }
  if (!sub_1001C1BA4(*a1, *a2))
    goto LABEL_34;
  v23 = v12[9];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_34;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_34;
  }
  v28 = v12[10];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 4);
  v31 = (_DWORD *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 4);
  if ((v30 & 1) != 0)
  {
    if (!v32)
      goto LABEL_34;
  }
  else
  {
    if (*v29 != *v31)
      LOBYTE(v32) = 1;
    if ((v32 & 1) != 0)
      goto LABEL_34;
  }
  v33 = v12[11];
  v34 = (_DWORD *)((char *)a1 + v33);
  v35 = *((_BYTE *)a1 + v33 + 4);
  v36 = (_DWORD *)((char *)a2 + v33);
  v37 = *((unsigned __int8 *)a2 + v33 + 4);
  if ((v35 & 1) != 0)
  {
    if (v37)
      goto LABEL_32;
LABEL_34:
    v41 = 0;
    return v41 & 1;
  }
  if (*v34 != *v36)
    LOBYTE(v37) = 1;
  if ((v37 & 1) != 0)
    goto LABEL_34;
LABEL_32:
  if ((sub_1001C1C10(a1[1], a2[1]) & 1) == 0)
    goto LABEL_34;
  v38 = (char *)a1 + v12[6];
  v39 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v39(v10, v38, v4);
  v39(v8, (char *)a2 + v12[6], v4);
  v40 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v41 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v40);
  v42 = *(void (**)(char *, uint64_t))(v5 + 8);
  v42(v8, v4);
  v42(v10, v4);
  return v41 & 1;
}

uint64_t sub_1001C66CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *);
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v43 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v47 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1000039AC(&qword_10037C028);
  __chkstk_darwin(v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375540);
  v15 = __chkstk_darwin(v14);
  v50 = (uint64_t *)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v43 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v43 - v20;
  inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  v23 = *(int *)(inited + 20);
  v48 = a1;
  sub_10000E660(a1 + v23, (uint64_t)v21, &qword_100375540);
  v24 = *(int *)(inited + 20);
  v49 = a2;
  sub_10000E660(a2 + v24, (uint64_t)v19, &qword_100375540);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v21, (uint64_t)v13, &qword_100375540);
  sub_10000E660((uint64_t)v19, v25, &qword_100375540);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v19, &qword_100375540);
    sub_100015704((uint64_t)v21, &qword_100375540);
    if (v26(v25, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v13, &qword_100375540);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v27 = v50;
  sub_10000E660((uint64_t)v13, (uint64_t)v50, &qword_100375540);
  if (v26(v25, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v19, &qword_100375540);
    sub_100015704((uint64_t)v21, &qword_100375540);
    sub_100004030((uint64_t)v27, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037C028);
LABEL_10:
    v34 = 0;
    return v34 & 1;
  }
  v28 = v47;
  sub_100003E08(v25, (uint64_t)v47, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  v29 = sub_1001D496C(v27, v28);
  sub_100004030((uint64_t)v28, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  sub_100015704((uint64_t)v19, &qword_100375540);
  sub_100015704((uint64_t)v21, &qword_100375540);
  sub_100004030((uint64_t)v27, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  sub_100015704((uint64_t)v13, &qword_100375540);
  if ((v29 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v30 = *(int *)(inited + 24);
  v31 = v49;
  v32 = *(unsigned __int8 *)(v48 + v30);
  v33 = *(unsigned __int8 *)(v49 + v30);
  if (v32 == 4)
  {
    if (v33 != 4)
      goto LABEL_10;
LABEL_14:
    v37 = v45;
    v36 = v46;
    v38 = *(void (**)(char *))(v45 + 16);
    v39 = v43;
    v38(v43);
    v40 = v44;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v44, v31, v36);
    v41 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v34 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v40, v36, v41);
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v40, v36);
    v42(v39, v36);
    return v34 & 1;
  }
  v34 = 0;
  if (v33 != 4 && v32 == v33)
    goto LABEL_14;
  return v34 & 1;
}

uint64_t sub_1001C6ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  _DWORD *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *);
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = type metadata accessor for UnknownStorage(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  v5 = __chkstk_darwin(v4);
  v64 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v63 = (char *)&v62 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v67 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BF80);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755E0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v62 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v62 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  v24 = *(int *)(v23 + 20);
  v68 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  sub_10000E660(v25, (uint64_t)v22, &qword_1003755E0);
  v27 = v26[5];
  v69 = a2;
  sub_10000E660(a2 + v27, (uint64_t)v20, &qword_1003755E0);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755E0);
  sub_10000E660((uint64_t)v20, v28, &qword_1003755E0);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755E0);
    if (v29(v28, 1, v8) != 1)
    {
      v32 = v67;
      sub_100003E08(v28, v67, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      v33 = sub_1001D3C4C((uint64_t)v17, v32, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100004030(v32, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v20, &qword_1003755E0);
      sub_100015704((uint64_t)v22, &qword_1003755E0);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v13, &qword_1003755E0);
      if ((v33 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_100015704((uint64_t)v20, &qword_1003755E0);
    sub_100015704((uint64_t)v22, &qword_1003755E0);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037BF80);
    goto LABEL_7;
  }
  sub_100015704((uint64_t)v20, &qword_1003755E0);
  sub_100015704((uint64_t)v22, &qword_1003755E0);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v13, &qword_1003755E0);
LABEL_10:
  v34 = v26[6];
  v35 = v69;
  v36 = (_DWORD *)(v68 + v34);
  v37 = *(_BYTE *)(v68 + v34 + 4);
  v38 = (_DWORD *)(v69 + v34);
  v39 = *(unsigned __int8 *)(v69 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_7;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = (_DWORD *)(v68 + v40);
  v42 = *(_BYTE *)(v68 + v40 + 4);
  v43 = (_DWORD *)(v69 + v40);
  v44 = *(unsigned __int8 *)(v69 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_7;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_7;
  }
  v45 = v26[8];
  v46 = (_DWORD *)(v68 + v45);
  v47 = *(_BYTE *)(v68 + v45 + 4);
  v48 = (_DWORD *)(v69 + v45);
  v49 = *(unsigned __int8 *)(v69 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_7;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_7;
  }
  v50 = v26[9];
  v51 = (_DWORD *)(v68 + v50);
  v52 = *(_BYTE *)(v68 + v50 + 4);
  v53 = (_DWORD *)(v69 + v50);
  v54 = *(unsigned __int8 *)(v69 + v50 + 4);
  if ((v52 & 1) != 0)
  {
    if (v54)
    {
LABEL_34:
      v56 = v65;
      v55 = v66;
      v57 = *(void (**)(char *))(v65 + 16);
      v58 = v63;
      v57(v63);
      v59 = v64;
      ((void (*)(char *, uint64_t, uint64_t))v57)(v64, v35, v55);
      v60 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v58, v59, v55, v60);
      v61 = *(void (**)(char *, uint64_t))(v56 + 8);
      v61(v59, v55);
      v61(v58, v55);
      return v30 & 1;
    }
  }
  else
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) == 0)
      goto LABEL_34;
  }
LABEL_7:
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_1001C6F68(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _DWORD *v15;
  char v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  _DWORD *v20;
  char v21;
  _DWORD *v22;
  int v23;
  uint64_t v24;
  _DWORD *v25;
  char v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  char v31;
  _DWORD *v32;
  int v33;
  char v34;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v39 - v11;
  v13 = (int *)a3(0);
  v14 = v13[5];
  v15 = (_DWORD *)(a1 + v14);
  v16 = *(_BYTE *)(a1 + v14 + 4);
  v17 = (_DWORD *)(a2 + v14);
  v18 = *(unsigned __int8 *)(a2 + v14 + 4);
  if ((v16 & 1) != 0)
  {
    if (!v18)
      goto LABEL_21;
  }
  else
  {
    if (*v15 != *v17)
      LOBYTE(v18) = 1;
    if ((v18 & 1) != 0)
      goto LABEL_21;
  }
  v19 = v13[6];
  v20 = (_DWORD *)(a1 + v19);
  v21 = *(_BYTE *)(a1 + v19 + 4);
  v22 = (_DWORD *)(a2 + v19);
  v23 = *(unsigned __int8 *)(a2 + v19 + 4);
  if ((v21 & 1) != 0)
  {
    if (!v23)
      goto LABEL_21;
  }
  else
  {
    if (*v20 != *v22)
      LOBYTE(v23) = 1;
    if ((v23 & 1) != 0)
      goto LABEL_21;
  }
  v24 = v13[7];
  v25 = (_DWORD *)(a1 + v24);
  v26 = *(_BYTE *)(a1 + v24 + 4);
  v27 = (_DWORD *)(a2 + v24);
  v28 = *(unsigned __int8 *)(a2 + v24 + 4);
  if ((v26 & 1) == 0)
  {
    if (*v25 != *v27)
      LOBYTE(v28) = 1;
    if ((v28 & 1) != 0)
      goto LABEL_21;
LABEL_19:
    v29 = v13[8];
    v30 = (_DWORD *)(a1 + v29);
    v31 = *(_BYTE *)(a1 + v29 + 4);
    v32 = (_DWORD *)(a2 + v29);
    v33 = *(unsigned __int8 *)(a2 + v29 + 4);
    if ((v31 & 1) != 0)
    {
      if (!v33)
        goto LABEL_21;
    }
    else
    {
      if (*v30 != *v32)
        LOBYTE(v33) = 1;
      if ((v33 & 1) != 0)
        goto LABEL_21;
    }
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v36(v12, a1, v6);
    v36(v10, a2, v6);
    v37 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v34 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v37);
    v38 = *(void (**)(char *, uint64_t))(v7 + 8);
    v38(v10, v6);
    v38(v12, v6);
    return v34 & 1;
  }
  if (v28)
    goto LABEL_19;
LABEL_21:
  v34 = 0;
  return v34 & 1;
}

uint64_t sub_1001C7150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BFD8);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755A0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 6)
  {
    if (v27 != 6)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_1003755A0);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_1003755A0);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755A0);
    sub_10000E660((uint64_t)v20, v29, &qword_1003755A0);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_1003755A0);
      sub_100015704((uint64_t)v22, &qword_1003755A0);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_1003755A0);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755A0);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, v42, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
        v32 = sub_1001CCC94((uint64_t)v17, v31);
        sub_100004030(v31, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
        sub_100015704((uint64_t)v20, &qword_1003755A0);
        sub_100015704((uint64_t)v22, &qword_1003755A0);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
        sub_100015704((uint64_t)v13, &qword_1003755A0);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_1003755A0);
      sub_100015704((uint64_t)v22, &qword_1003755A0);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
    }
    sub_100015704((uint64_t)v13, &qword_10037BFD8);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 6 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001C7550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  char v27;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v32 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_15;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_15;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v22 = v11[7];
    v23 = (double *)(a1 + v22);
    v24 = *(_BYTE *)(a1 + v22 + 8);
    v25 = (double *)(a2 + v22);
    v26 = *(unsigned __int8 *)(a2 + v22 + 8);
    if ((v24 & 1) != 0)
    {
      if (!v26)
        goto LABEL_15;
    }
    else
    {
      if (*v23 != *v25)
        LOBYTE(v26) = 1;
      if ((v26 & 1) != 0)
        goto LABEL_15;
    }
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    v30 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v27 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v30);
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v8, v4);
    v31(v10, v4);
    return v27 & 1;
  }
  if (v21)
    goto LABEL_13;
LABEL_15:
  v27 = 0;
  return v27 & 1;
}

uint64_t sub_1001C7700(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  uint64_t v28;
  _DWORD *v29;
  char v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  char v38;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  v12 = v11;
  v13 = v11[7];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_29;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_29;
  }
  v18 = v11[8];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_29;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_29;
  }
  v23 = v11[9];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_29;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_29;
  }
  v28 = v11[10];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 4);
  v31 = (_DWORD *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 4);
  if ((v30 & 1) == 0)
  {
    if (*v29 != *v31)
      LOBYTE(v32) = 1;
    if ((v32 & 1) != 0)
      goto LABEL_29;
LABEL_25:
    if (!sub_1001C1DE4(*a1, *a2) || !sub_1001C1DE4(a1[1], a2[1]))
      goto LABEL_29;
    v33 = v12[11];
    v34 = (_DWORD *)((char *)a1 + v33);
    v35 = *((_BYTE *)a1 + v33 + 4);
    v36 = (_DWORD *)((char *)a2 + v33);
    v37 = *((unsigned __int8 *)a2 + v33 + 4);
    if ((v35 & 1) != 0)
    {
      if (!v37)
        goto LABEL_29;
    }
    else
    {
      if (*v34 != *v36)
        LOBYTE(v37) = 1;
      if ((v37 & 1) != 0)
        goto LABEL_29;
    }
    v40 = (char *)a1 + v12[6];
    v41 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v41(v10, v40, v4);
    v41(v8, (char *)a2 + v12[6], v4);
    v42 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v38 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v42);
    v43 = *(void (**)(char *, uint64_t))(v5 + 8);
    v43(v8, v4);
    v43(v10, v4);
    return v38 & 1;
  }
  if (v32)
    goto LABEL_25;
LABEL_29:
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_1001C7944(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  uint64_t v28;
  _DWORD *v29;
  char v30;
  _DWORD *v31;
  int v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v39 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_27;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_27;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_27;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_27;
  }
  v23 = v11[8];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_27;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_27;
  }
  v28 = v11[9];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 4);
  v31 = (_DWORD *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 4);
  if ((v30 & 1) != 0)
  {
    if (v32)
      goto LABEL_25;
LABEL_27:
    v36 = 0;
    return v36 & 1;
  }
  if (*v29 != *v31)
    LOBYTE(v32) = 1;
  if ((v32 & 1) != 0)
    goto LABEL_27;
LABEL_25:
  if ((sub_1001C2128(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem) & 1) == 0)
    goto LABEL_27;
  v33 = (char *)a1 + v12[5];
  v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v34(v10, v33, v4);
  v34(v8, (char *)a2 + v12[5], v4);
  v35 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v36 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v35);
  v37 = *(void (**)(char *, uint64_t))(v5 + 8);
  v37(v8, v4);
  v37(v10, v4);
  return v36 & 1;
}

uint64_t sub_1001C7B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v19;
  char v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UnknownStorage(0);
  v43 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v43 - v8;
  v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
  v11 = v10[5];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  v44 = v4;
  if (v13 >> 60 != 15)
  {
    if (v16 >> 60 != 15)
    {
      sub_10005F298(v12, v13);
      sub_10005F298(v15, v16);
      sub_100060048(v12, v13);
      v20 = v19;
      sub_10005F2AC(v15, v16);
      sub_10005F2AC(v12, v13);
      if ((v20 & 1) == 0)
        goto LABEL_6;
      goto LABEL_9;
    }
LABEL_5:
    sub_10005F298(v12, v13);
    sub_10005F298(v15, v16);
    sub_10005F2AC(v12, v13);
    sub_10005F2AC(v15, v16);
    goto LABEL_6;
  }
  if (v16 >> 60 != 15)
    goto LABEL_5;
LABEL_9:
  v21 = v10[6];
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2)
      goto LABEL_6;
  }
  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_6;
  }
  v24 = v10[7];
  v25 = *(unsigned __int8 *)(a1 + v24);
  v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2)
      goto LABEL_6;
  }
  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_6;
  }
  v27 = v10[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_6;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_6;
  }
  v32 = v10[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (v36)
    {
LABEL_31:
      v37 = v43;
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      v39 = a1;
      v40 = v44;
      v38(v9, v39, v44);
      v38(v7, a2, v40);
      v41 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v7, v40, v41);
      v42 = *(void (**)(char *, uint64_t))(v37 + 8);
      v42(v7, v40);
      v42(v9, v40);
      return v17 & 1;
    }
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) == 0)
      goto LABEL_31;
  }
LABEL_6:
  v17 = 0;
  return v17 & 1;
}

uint64_t sub_1001C7E18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  v12 = *(int *)(v11 + 24);
  v13 = *((unsigned __int8 *)a1 + v12);
  v14 = *((unsigned __int8 *)a2 + v12);
  if (v13 == 6)
  {
    if (v14 != 6)
      goto LABEL_11;
  }
  else if (v14 == 6 || v13 != v14)
  {
    goto LABEL_11;
  }
  if ((sub_10010B2D8(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t (*)(char *, char *))sub_1001C7B50) & 1) == 0)
  {
LABEL_11:
    v19 = 0;
    return v19 & 1;
  }
  v16 = (char *)a1 + *(int *)(v11 + 20);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v10, v16, v4);
  v17(v8, (char *)a2 + *(int *)(v11 + 20), v4);
  v18 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v18);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t sub_1001C7F88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  int v29;
  char v30;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v36 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  v12 = v11[6];
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = *((_BYTE *)a1 + v12 + 4);
  v15 = (_DWORD *)((char *)a2 + v12);
  v16 = *((unsigned __int8 *)a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_26;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_26;
  }
  if ((sub_1001C1E50(*a1, *a2) & 1) != 0)
  {
    v17 = v11[7];
    v18 = *((unsigned __int8 *)a1 + v17);
    v19 = *((unsigned __int8 *)a2 + v17);
    if (v18 == 6)
    {
      if (v19 != 6)
        goto LABEL_26;
    }
    else if (v19 == 6 || v18 != v19)
    {
      goto LABEL_26;
    }
    v21 = v11[8];
    v22 = *((unsigned __int8 *)a1 + v21);
    v23 = *((unsigned __int8 *)a2 + v21);
    if (v22 != 7)
    {
      if (v23 == 7 || v22 != v23)
        goto LABEL_26;
LABEL_24:
      v25 = v11[9];
      v26 = (_DWORD *)((char *)a1 + v25);
      v27 = *((_BYTE *)a1 + v25 + 4);
      v28 = (_DWORD *)((char *)a2 + v25);
      v29 = *((unsigned __int8 *)a2 + v25 + 4);
      if ((v27 & 1) != 0)
      {
        if (!v29)
          goto LABEL_26;
      }
      else
      {
        if (*v26 != *v28)
          LOBYTE(v29) = 1;
        if ((v29 & 1) != 0)
          goto LABEL_26;
      }
      v32 = (char *)a1 + v11[5];
      v33 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v33(v10, v32, v4);
      v33(v8, (char *)a2 + v11[5], v4);
      v34 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v34);
      v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35(v8, v4);
      v35(v10, v4);
      return v30 & 1;
    }
    if (v23 == 7)
      goto LABEL_24;
  }
LABEL_26:
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_1001C8178(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  uint64_t v28;
  _DWORD *v29;
  char v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_33;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_33;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_33;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_33;
  }
  v23 = v11[8];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_33;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_33;
  }
  v28 = v11[9];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 4);
  v31 = (_DWORD *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 4);
  if ((v30 & 1) != 0)
  {
    if (!v32)
      goto LABEL_33;
  }
  else
  {
    if (*v29 != *v31)
      LOBYTE(v32) = 1;
    if ((v32 & 1) != 0)
      goto LABEL_33;
  }
  v33 = v11[10];
  v34 = (_DWORD *)((char *)a1 + v33);
  v35 = *((_BYTE *)a1 + v33 + 4);
  v36 = (_DWORD *)((char *)a2 + v33);
  v37 = *((unsigned __int8 *)a2 + v33 + 4);
  if ((v35 & 1) != 0)
  {
    if (v37)
      goto LABEL_31;
LABEL_33:
    v41 = 0;
    return v41 & 1;
  }
  if (*v34 != *v36)
    LOBYTE(v37) = 1;
  if ((v37 & 1) != 0)
    goto LABEL_33;
LABEL_31:
  if (!sub_1001C1DE4(*a1, *a2))
    goto LABEL_33;
  v38 = (char *)a1 + v12[5];
  v39 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v39(v10, v38, v4);
  v39(v8, (char *)a2 + v12[5], v4);
  v40 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v41 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v40);
  v42 = *(void (**)(char *, uint64_t))(v5 + 8);
  v42(v8, v4);
  v42(v10, v4);
  return v41 & 1;
}

uint64_t sub_1001C83B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  uint64_t v21;
  _DWORD *v22;
  char v23;
  _DWORD *v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  uint64_t v29;
  _DWORD *v30;
  char v31;
  _DWORD *v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  uint64_t v41;
  _DWORD *v42;
  char v43;
  _DWORD *v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  uint64_t v49;
  _DWORD *v50;
  char v51;
  _DWORD *v52;
  uint64_t v53;
  _DWORD *v54;
  char v55;
  _DWORD *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  _DWORD *v64;
  char v65;
  _DWORD *v66;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v72 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v16 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v21 = v11[7];
  v22 = (_DWORD *)(a1 + v21);
  v23 = *(_BYTE *)(a1 + v21 + 4);
  v24 = (_DWORD *)(a2 + v21);
  v16 = *(unsigned __int8 *)(a2 + v21 + 4);
  if ((v23 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v22 != *v24)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v25 = v11[8];
  v26 = (_DWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 4);
  v28 = (_DWORD *)(a2 + v25);
  v16 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v29 = v11[9];
  v30 = (_DWORD *)(a1 + v29);
  v31 = *(_BYTE *)(a1 + v29 + 4);
  v32 = (_DWORD *)(a2 + v29);
  v16 = *(unsigned __int8 *)(a2 + v29 + 4);
  if ((v31 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v30 != *v32)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v33 = v11[10];
  v34 = (_DWORD *)(a1 + v33);
  v35 = *(_BYTE *)(a1 + v33 + 4);
  v36 = (_DWORD *)(a2 + v33);
  v16 = *(unsigned __int8 *)(a2 + v33 + 4);
  if ((v35 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v34 != *v36)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v37 = v11[11];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v16 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v41 = v11[12];
  v42 = (_DWORD *)(a1 + v41);
  v43 = *(_BYTE *)(a1 + v41 + 4);
  v44 = (_DWORD *)(a2 + v41);
  v16 = *(unsigned __int8 *)(a2 + v41 + 4);
  if ((v43 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v42 != *v44)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v45 = v11[13];
  v46 = (_DWORD *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 4);
  v48 = (_DWORD *)(a2 + v45);
  v16 = *(unsigned __int8 *)(a2 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v49 = v11[14];
  v50 = (_DWORD *)(a1 + v49);
  v51 = *(_BYTE *)(a1 + v49 + 4);
  v52 = (_DWORD *)(a2 + v49);
  v16 = *(unsigned __int8 *)(a2 + v49 + 4);
  if ((v51 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v50 != *v52)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v53 = v11[15];
  v54 = (_DWORD *)(a1 + v53);
  v55 = *(_BYTE *)(a1 + v53 + 4);
  v56 = (_DWORD *)(a2 + v53);
  v16 = *(unsigned __int8 *)(a2 + v53 + 4);
  if ((v55 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v54 != *v56)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_83;
  }
  v57 = v11[16];
  v58 = *(unsigned __int8 *)(a1 + v57);
  v59 = *(unsigned __int8 *)(a2 + v57);
  if (v58 == 6)
  {
    if (v59 != 6)
      goto LABEL_83;
  }
  else
  {
    LOBYTE(v16) = 0;
    if (v59 == 6 || v58 != v59)
      return v16 & 1;
  }
  v60 = v11[17];
  v61 = *(unsigned __int8 *)(a1 + v60);
  v62 = *(unsigned __int8 *)(a2 + v60);
  if (v61 == 7)
  {
    if (v62 == 7)
    {
LABEL_77:
      v63 = v11[18];
      v64 = (_DWORD *)(a1 + v63);
      v65 = *(_BYTE *)(a1 + v63 + 4);
      v66 = (_DWORD *)(a2 + v63);
      v16 = *(unsigned __int8 *)(a2 + v63 + 4);
      if ((v65 & 1) != 0)
      {
        if (!v16)
          return v16 & 1;
        goto LABEL_85;
      }
      if (*v64 != *v66)
        LOBYTE(v16) = 1;
      if ((v16 & 1) == 0)
      {
LABEL_85:
        v68 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v68(v10, a1, v4);
        v68(v8, a2, v4);
        v69 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v70 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v69);
        v71 = *(void (**)(char *, uint64_t))(v5 + 8);
        v71(v8, v4);
        v71(v10, v4);
        LOBYTE(v16) = v70;
        return v16 & 1;
      }
    }
LABEL_83:
    LOBYTE(v16) = 0;
    return v16 & 1;
  }
  LOBYTE(v16) = 0;
  if (v62 != 7 && v61 == v62)
    goto LABEL_77;
  return v16 & 1;
}

uint64_t sub_1001C87A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  _QWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v4 = type metadata accessor for UnknownStorage(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  v5 = __chkstk_darwin(v4);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v60 = (char *)&v58 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_10037BFD0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_1003755B8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v58 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v58 - v22;
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  v25 = a2;
  v26 = v24;
  v27 = v24[5];
  v28 = (_QWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (_QWORD *)(v25 + v27);
  v31 = *(unsigned __int8 *)(v25 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_25;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_25;
  }
  v32 = v24[6];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(v25 + v32);
  v36 = *(unsigned __int8 *)(v25 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_25;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_25;
  }
  v37 = v24[7];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(v25 + v37);
  v41 = *(unsigned __int8 *)(v25 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_25;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_25;
  }
  v42 = v24[8];
  v58 = a1;
  v43 = a1 + v42;
  v44 = v25;
  sub_10000E660(v43, (uint64_t)v23, &qword_1003755B8);
  v45 = v26[8];
  v59 = v44;
  sub_10000E660(v44 + v45, (uint64_t)v21, &qword_1003755B8);
  v46 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10000E660((uint64_t)v23, (uint64_t)v14, &qword_1003755B8);
  sub_10000E660((uint64_t)v21, v46, &qword_1003755B8);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v47((uint64_t)v14, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v21, &qword_1003755B8);
    sub_100015704((uint64_t)v23, &qword_1003755B8);
    if (v47(v46, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v14, &qword_1003755B8);
LABEL_28:
      v52 = v62;
      v51 = v63;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v54 = v60;
      v53(v60, v58, v63);
      v55 = v61;
      v53(v61, v59, v51);
      v56 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v48 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v55, v51, v56);
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v55, v51);
      v57(v54, v51);
      return v48 & 1;
    }
    goto LABEL_24;
  }
  sub_10000E660((uint64_t)v14, (uint64_t)v18, &qword_1003755B8);
  if (v47(v46, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v21, &qword_1003755B8);
    sub_100015704((uint64_t)v23, &qword_1003755B8);
    sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_24:
    sub_100015704((uint64_t)v14, &qword_10037BFD0);
    goto LABEL_25;
  }
  sub_100003E08(v46, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  v50 = sub_1001D41D4((uint64_t)v18, (uint64_t)v11);
  sub_100004030((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  sub_100015704((uint64_t)v21, &qword_1003755B8);
  sub_100015704((uint64_t)v23, &qword_1003755B8);
  sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  sub_100015704((uint64_t)v14, &qword_1003755B8);
  if ((v50 & 1) != 0)
    goto LABEL_28;
LABEL_25:
  v48 = 0;
  return v48 & 1;
}

uint64_t sub_1001C8C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BFA8);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755D8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 6)
  {
    if (v27 != 6)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_1003755D8);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_1003755D8);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755D8);
    sub_10000E660((uint64_t)v20, v29, &qword_1003755D8);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_1003755D8);
      sub_100015704((uint64_t)v22, &qword_1003755D8);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_1003755D8);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755D8);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, v42, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
        v32 = sub_100065A60((uint64_t)v17, v31, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t (*)(uint64_t, uint64_t))sub_10019AEFC);
        sub_100004030(v31, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
        sub_100015704((uint64_t)v20, &qword_1003755D8);
        sub_100015704((uint64_t)v22, &qword_1003755D8);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
        sub_100015704((uint64_t)v13, &qword_1003755D8);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_1003755D8);
      sub_100015704((uint64_t)v22, &qword_1003755D8);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
    }
    sub_100015704((uint64_t)v13, &qword_10037BFA8);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 6 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001C9020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  _DWORD *v39;
  char v40;
  _DWORD *v41;
  int v42;
  uint64_t v43;
  _DWORD *v44;
  char v45;
  _DWORD *v46;
  int v47;
  uint64_t v48;
  _DWORD *v49;
  char v50;
  _DWORD *v51;
  int v52;
  uint64_t v53;
  _DWORD *v54;
  char v55;
  _DWORD *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t *v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v4 = type metadata accessor for UnknownStorage(0);
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  v5 = __chkstk_darwin(v4);
  v95 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v94 = (char *)&v90 - v7;
  v103 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v100 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v93 = (uint64_t)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1000039AC(&qword_10037BF08);
  __chkstk_darwin(v99);
  v104 = (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000039AC(&qword_100375680);
  v11 = __chkstk_darwin(v10);
  v98 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v101 = (uint64_t)&v90 - v14;
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v90 - v15;
  v16 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000039AC(&qword_10037BF10);
  __chkstk_darwin(v20);
  v105 = (uint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000039AC(&qword_100375678);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v90 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v90 - v29;
  v31 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  v32 = a2;
  v33 = v31;
  v34 = v31[5];
  v35 = *(unsigned __int8 *)(a1 + v34);
  v36 = *(unsigned __int8 *)(a2 + v34);
  if (v35 == 6)
  {
    if (v36 != 6)
      goto LABEL_37;
LABEL_6:
    v38 = v31[6];
    v39 = (_DWORD *)(a1 + v38);
    v40 = *(_BYTE *)(a1 + v38 + 4);
    v41 = (_DWORD *)(v32 + v38);
    v42 = *(unsigned __int8 *)(v32 + v38 + 4);
    if ((v40 & 1) != 0)
    {
      if (!v42)
        goto LABEL_37;
    }
    else
    {
      if (*v39 != *v41)
        LOBYTE(v42) = 1;
      if ((v42 & 1) != 0)
        goto LABEL_37;
    }
    v43 = v31[7];
    v44 = (_DWORD *)(a1 + v43);
    v45 = *(_BYTE *)(a1 + v43 + 4);
    v46 = (_DWORD *)(v32 + v43);
    v47 = *(unsigned __int8 *)(v32 + v43 + 4);
    if ((v45 & 1) != 0)
    {
      if (!v47)
        goto LABEL_37;
    }
    else
    {
      if (*v44 != *v46)
        LOBYTE(v47) = 1;
      if ((v47 & 1) != 0)
        goto LABEL_37;
    }
    v48 = v31[8];
    v49 = (_DWORD *)(a1 + v48);
    v50 = *(_BYTE *)(a1 + v48 + 4);
    v51 = (_DWORD *)(v32 + v48);
    v52 = *(unsigned __int8 *)(v32 + v48 + 4);
    if ((v50 & 1) != 0)
    {
      if (!v52)
        goto LABEL_37;
    }
    else
    {
      if (*v49 != *v51)
        LOBYTE(v52) = 1;
      if ((v52 & 1) != 0)
        goto LABEL_37;
    }
    v53 = v31[9];
    v54 = (_DWORD *)(a1 + v53);
    v55 = *(_BYTE *)(a1 + v53 + 4);
    v56 = (_DWORD *)(v32 + v53);
    v57 = *(unsigned __int8 *)(v32 + v53 + 4);
    if ((v55 & 1) != 0)
    {
      if (!v57)
        goto LABEL_37;
    }
    else
    {
      if (*v54 != *v56)
        LOBYTE(v57) = 1;
      if ((v57 & 1) != 0)
        goto LABEL_37;
    }
    v58 = v31[10];
    v91 = a1;
    v59 = v32;
    sub_10000E660(a1 + v58, (uint64_t)v30, &qword_100375678);
    v60 = v33[10];
    v92 = v59;
    sub_10000E660(v59 + v60, (uint64_t)v28, &qword_100375678);
    v61 = v105;
    v62 = v105 + *(int *)(v20 + 48);
    sub_10000E660((uint64_t)v30, v105, &qword_100375678);
    sub_10000E660((uint64_t)v28, v62, &qword_100375678);
    v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v63(v61, 1, v16) == 1)
    {
      sub_100015704((uint64_t)v28, &qword_100375678);
      sub_100015704((uint64_t)v30, &qword_100375678);
      if (v63(v62, 1, v16) == 1)
      {
        sub_100015704(v61, &qword_100375678);
LABEL_40:
        v68 = v33[11];
        v69 = (_DWORD *)(v91 + v68);
        v70 = *(_BYTE *)(v91 + v68 + 4);
        v71 = (_DWORD *)(v92 + v68);
        v72 = *(unsigned __int8 *)(v92 + v68 + 4);
        if ((v70 & 1) != 0)
        {
          if (!v72)
            goto LABEL_37;
        }
        else
        {
          if (*v69 != *v71)
            LOBYTE(v72) = 1;
          if ((v72 & 1) != 0)
            goto LABEL_37;
        }
        v73 = v92;
        v74 = v102;
        sub_10000E660(v91 + v33[12], v102, &qword_100375680);
        v75 = v101;
        sub_10000E660(v73 + v33[12], v101, &qword_100375680);
        v76 = v104;
        v77 = v104 + *(int *)(v99 + 48);
        sub_10000E660(v74, v104, &qword_100375680);
        sub_10000E660(v75, v77, &qword_100375680);
        v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
        v79 = v103;
        if (v78(v76, 1, v103) == 1)
        {
          sub_100015704(v75, &qword_100375680);
          sub_100015704(v74, &qword_100375680);
          if (v78(v77, 1, v79) == 1)
          {
            sub_100015704(v76, &qword_100375680);
LABEL_53:
            v84 = v96;
            v83 = v97;
            v85 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
            v86 = v94;
            v85(v94, v91, v97);
            v87 = v95;
            v85(v95, v92, v83);
            v88 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
            v37 = dispatch thunk of static Equatable.== infix(_:_:)(v86, v87, v83, v88);
            v89 = *(void (**)(char *, uint64_t))(v84 + 8);
            v89(v87, v83);
            v89(v86, v83);
            return v37 & 1;
          }
        }
        else
        {
          v80 = v98;
          sub_10000E660(v76, v98, &qword_100375680);
          if (v78(v77, 1, v79) != 1)
          {
            v81 = v93;
            sub_100003E08(v77, v93, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
            v82 = sub_1001D5234(v80, v81);
            sub_100004030(v81, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
            sub_100015704(v75, &qword_100375680);
            sub_100015704(v74, &qword_100375680);
            sub_100004030(v80, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
            sub_100015704(v76, &qword_100375680);
            if ((v82 & 1) != 0)
              goto LABEL_53;
LABEL_37:
            v37 = 0;
            return v37 & 1;
          }
          sub_100015704(v75, &qword_100375680);
          sub_100015704(v74, &qword_100375680);
          sub_100004030(v80, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
        }
        v64 = &qword_10037BF08;
        v65 = v76;
LABEL_36:
        sub_100015704(v65, v64);
        goto LABEL_37;
      }
    }
    else
    {
      sub_10000E660(v61, (uint64_t)v25, &qword_100375678);
      if (v63(v62, 1, v16) != 1)
      {
        sub_100003E08(v62, (uint64_t)v19, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
        v67 = sub_1001C8C14((uint64_t)v25, (uint64_t)v19);
        sub_100004030((uint64_t)v19, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
        sub_100015704((uint64_t)v28, &qword_100375678);
        sub_100015704((uint64_t)v30, &qword_100375678);
        sub_100004030((uint64_t)v25, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
        sub_100015704(v61, &qword_100375678);
        if ((v67 & 1) == 0)
          goto LABEL_37;
        goto LABEL_40;
      }
      sub_100015704((uint64_t)v28, &qword_100375678);
      sub_100015704((uint64_t)v30, &qword_100375678);
      sub_100004030((uint64_t)v25, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
    }
    v64 = &qword_10037BF10;
    v65 = v61;
    goto LABEL_36;
  }
  v37 = 0;
  if (v36 != 6 && v35 == v36)
    goto LABEL_6;
  return v37 & 1;
}

uint64_t sub_1001C97E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BF40);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375640);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 6)
  {
    if (v27 != 6)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_100375640);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_100375640);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_100375640);
    sub_10000E660((uint64_t)v20, v29, &qword_100375640);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_100375640);
      sub_100015704((uint64_t)v22, &qword_100375640);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_100375640);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_100375640);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, v42, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
        v32 = sub_1001CFFA4((uint64_t)v17, v31);
        sub_100004030(v31, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
        sub_100015704((uint64_t)v20, &qword_100375640);
        sub_100015704((uint64_t)v22, &qword_100375640);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
        sub_100015704((uint64_t)v13, &qword_100375640);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_100375640);
      sub_100015704((uint64_t)v22, &qword_100375640);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
    }
    sub_100015704((uint64_t)v13, &qword_10037BF40);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 6 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001C9BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  int *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  _DWORD *v45;
  char v46;
  _DWORD *v47;
  int v48;
  uint64_t v49;
  _DWORD *v50;
  char v51;
  _DWORD *v52;
  int v53;
  uint64_t v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  int v58;
  uint64_t v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  int v63;
  uint64_t v64;
  _DWORD *v65;
  char v66;
  _DWORD *v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  char v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t *v82;
  uint64_t v83;
  char v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  char v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;

  v4 = type metadata accessor for UnknownStorage(0);
  v125 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v124 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (char *)&v119 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v128 = *(_QWORD *)(v8 - 8);
  v129 = v8;
  __chkstk_darwin(v8);
  v122 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1000039AC(&qword_10037BE68);
  __chkstk_darwin(v127);
  v130 = (uint64_t)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_100375718);
  v12 = __chkstk_darwin(v11);
  v126 = (uint64_t)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v132 = (uint64_t)&v119 - v15;
  __chkstk_darwin(v14);
  v133 = (uint64_t)&v119 - v16;
  v17 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v135 = *(_QWORD *)(v17 - 8);
  v136 = v17;
  __chkstk_darwin(v17);
  v131 = (uint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1000039AC(&qword_10037BE70);
  __chkstk_darwin(v134);
  v140 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000039AC(&qword_100375710);
  v21 = __chkstk_darwin(v20);
  v139 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v137 = (char *)&v119 - v24;
  __chkstk_darwin(v23);
  v138 = (char *)&v119 - v25;
  v26 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v119 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000039AC(&qword_10037BE78);
  __chkstk_darwin(v30);
  v141 = (uint64_t)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000039AC(&qword_100375708);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v119 - v37;
  __chkstk_darwin(v36);
  v40 = (char *)&v119 - v39;
  v41 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd(0);
  v42 = a2;
  v43 = v41;
  v44 = v41[5];
  v45 = (_DWORD *)(a1 + v44);
  v46 = *(_BYTE *)(a1 + v44 + 4);
  v47 = (_DWORD *)(v42 + v44);
  v48 = *(unsigned __int8 *)(v42 + v44 + 4);
  if ((v46 & 1) != 0)
  {
    if (!v48)
      goto LABEL_48;
  }
  else
  {
    if (*v45 != *v47)
      LOBYTE(v48) = 1;
    if ((v48 & 1) != 0)
      goto LABEL_48;
  }
  v49 = v41[6];
  v50 = (_DWORD *)(a1 + v49);
  v51 = *(_BYTE *)(a1 + v49 + 4);
  v52 = (_DWORD *)(v42 + v49);
  v53 = *(unsigned __int8 *)(v42 + v49 + 4);
  if ((v51 & 1) != 0)
  {
    if (!v53)
      goto LABEL_48;
  }
  else
  {
    if (*v50 != *v52)
      LOBYTE(v53) = 1;
    if ((v53 & 1) != 0)
      goto LABEL_48;
  }
  v54 = v41[7];
  v55 = (_DWORD *)(a1 + v54);
  v56 = *(_BYTE *)(a1 + v54 + 4);
  v57 = (_DWORD *)(v42 + v54);
  v58 = *(unsigned __int8 *)(v42 + v54 + 4);
  if ((v56 & 1) != 0)
  {
    if (!v58)
      goto LABEL_48;
  }
  else
  {
    if (*v55 != *v57)
      LOBYTE(v58) = 1;
    if ((v58 & 1) != 0)
      goto LABEL_48;
  }
  v59 = v41[8];
  v60 = (_DWORD *)(a1 + v59);
  v61 = *(_BYTE *)(a1 + v59 + 4);
  v62 = (_DWORD *)(v42 + v59);
  v63 = *(unsigned __int8 *)(v42 + v59 + 4);
  if ((v61 & 1) != 0)
  {
    if (!v63)
      goto LABEL_48;
  }
  else
  {
    if (*v60 != *v62)
      LOBYTE(v63) = 1;
    if ((v63 & 1) != 0)
      goto LABEL_48;
  }
  v64 = v41[9];
  v65 = (_DWORD *)(a1 + v64);
  v66 = *(_BYTE *)(a1 + v64 + 4);
  v67 = (_DWORD *)(v42 + v64);
  v68 = *(unsigned __int8 *)(v42 + v64 + 4);
  if ((v66 & 1) != 0)
  {
    if (!v68)
      goto LABEL_48;
  }
  else
  {
    if (*v65 != *v67)
      LOBYTE(v68) = 1;
    if ((v68 & 1) != 0)
      goto LABEL_48;
  }
  v121 = v4;
  v69 = v41[10];
  v70 = *(unsigned __int8 *)(a1 + v69);
  v71 = *(unsigned __int8 *)(v42 + v69);
  if (v70 == 4)
  {
    if (v71 != 4)
      goto LABEL_48;
LABEL_36:
    v73 = v41[11];
    v74 = *(unsigned __int8 *)(a1 + v73);
    v75 = *(unsigned __int8 *)(v42 + v73);
    if (v74 == 2)
    {
      if (v75 != 2)
        goto LABEL_48;
    }
    else if (v75 == 2 || ((((v75 & 1) == 0) ^ v74) & 1) == 0)
    {
      goto LABEL_48;
    }
    v76 = v41[12];
    v119 = a1;
    v77 = v42;
    sub_10000E660(a1 + v76, (uint64_t)v40, &qword_100375708);
    v78 = v43[12];
    v120 = v77;
    sub_10000E660(v77 + v78, (uint64_t)v38, &qword_100375708);
    v79 = v141;
    v80 = v141 + *(int *)(v30 + 48);
    sub_10000E660((uint64_t)v40, v141, &qword_100375708);
    sub_10000E660((uint64_t)v38, v80, &qword_100375708);
    v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v81(v79, 1, v26) == 1)
    {
      sub_100015704((uint64_t)v38, &qword_100375708);
      sub_100015704((uint64_t)v40, &qword_100375708);
      if (v81(v80, 1, v26) == 1)
      {
        sub_100015704(v79, &qword_100375708);
        goto LABEL_51;
      }
    }
    else
    {
      sub_10000E660(v79, (uint64_t)v35, &qword_100375708);
      if (v81(v80, 1, v26) != 1)
      {
        sub_100003E08(v80, (uint64_t)v29, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
        v85 = sub_1001D47B8((uint64_t)v35, (uint64_t)v29, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
        sub_100004030((uint64_t)v29, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
        sub_100015704((uint64_t)v38, &qword_100375708);
        sub_100015704((uint64_t)v40, &qword_100375708);
        sub_100004030((uint64_t)v35, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
        sub_100015704(v79, &qword_100375708);
        if ((v85 & 1) == 0)
          goto LABEL_48;
LABEL_51:
        v86 = v43[13];
        v87 = *(unsigned __int8 *)(v119 + v86);
        v88 = *(unsigned __int8 *)(v120 + v86);
        if (v87 == 2)
        {
          v90 = (uint64_t)v139;
          v89 = (uint64_t)v140;
          v92 = (uint64_t)v137;
          v91 = (uint64_t)v138;
          if (v88 != 2)
            goto LABEL_48;
        }
        else
        {
          v90 = (uint64_t)v139;
          v89 = (uint64_t)v140;
          v92 = (uint64_t)v137;
          v91 = (uint64_t)v138;
          if (v88 == 2 || ((((v88 & 1) == 0) ^ v87) & 1) == 0)
            goto LABEL_48;
        }
        v93 = v120;
        sub_10000E660(v119 + v43[14], v91, &qword_100375710);
        sub_10000E660(v93 + v43[14], v92, &qword_100375710);
        v94 = v89 + *(int *)(v134 + 48);
        sub_10000E660(v91, v89, &qword_100375710);
        sub_10000E660(v92, v94, &qword_100375710);
        v95 = v136;
        v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
        if (v96(v89, 1, v136) == 1)
        {
          sub_100015704(v92, &qword_100375710);
          sub_100015704(v91, &qword_100375710);
          if (v96(v94, 1, v95) == 1)
          {
            sub_100015704(v89, &qword_100375710);
LABEL_63:
            v99 = v43[15];
            v100 = *(unsigned __int8 *)(v119 + v99);
            v101 = *(unsigned __int8 *)(v120 + v99);
            if (v100 == 2)
            {
              if (v101 != 2)
                goto LABEL_48;
            }
            else if (v101 == 2 || ((((v101 & 1) == 0) ^ v100) & 1) == 0)
            {
              goto LABEL_48;
            }
            v102 = v133;
            sub_10000E660(v119 + v43[16], v133, &qword_100375718);
            v103 = v120 + v43[16];
            v104 = v132;
            sub_10000E660(v103, v132, &qword_100375718);
            v105 = v130;
            v106 = v130 + *(int *)(v127 + 48);
            sub_10000E660(v102, v130, &qword_100375718);
            sub_10000E660(v104, v106, &qword_100375718);
            v107 = v129;
            v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
            if (v108(v105, 1, v129) == 1)
            {
              sub_100015704(v132, &qword_100375718);
              sub_100015704(v133, &qword_100375718);
              if (v108(v106, 1, v107) == 1)
              {
                sub_100015704(v105, &qword_100375718);
LABEL_75:
                v112 = v125;
                v113 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
                v114 = v123;
                v115 = v121;
                v113(v123, v119, v121);
                v116 = v124;
                v113(v124, v120, v115);
                v117 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
                v72 = dispatch thunk of static Equatable.== infix(_:_:)(v114, v116, v115, v117);
                v118 = *(void (**)(char *, uint64_t))(v112 + 8);
                v118(v116, v115);
                v118(v114, v115);
                return v72 & 1;
              }
            }
            else
            {
              sub_10000E660(v105, v126, &qword_100375718);
              if (v108(v106, 1, v107) != 1)
              {
                v109 = v122;
                sub_100003E08(v106, v122, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
                v110 = v126;
                v111 = sub_1001D3C4C(v126, v109, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
                sub_100004030(v109, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
                sub_100015704(v132, &qword_100375718);
                sub_100015704(v133, &qword_100375718);
                sub_100004030(v110, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
                sub_100015704(v130, &qword_100375718);
                if ((v111 & 1) != 0)
                  goto LABEL_75;
LABEL_48:
                v72 = 0;
                return v72 & 1;
              }
              sub_100015704(v132, &qword_100375718);
              sub_100015704(v133, &qword_100375718);
              sub_100004030(v126, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
              v105 = v130;
            }
            v82 = &qword_10037BE68;
            v83 = v105;
LABEL_47:
            sub_100015704(v83, v82);
            goto LABEL_48;
          }
        }
        else
        {
          sub_10000E660(v89, v90, &qword_100375710);
          if (v96(v94, 1, v95) != 1)
          {
            v97 = v131;
            sub_100003E08(v94, v131, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
            v98 = sub_1001D3C4C(v90, v97, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
            sub_100004030(v97, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
            sub_100015704(v92, &qword_100375710);
            sub_100015704(v91, &qword_100375710);
            sub_100004030(v90, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
            sub_100015704(v89, &qword_100375710);
            if ((v98 & 1) == 0)
              goto LABEL_48;
            goto LABEL_63;
          }
          sub_100015704(v92, &qword_100375710);
          sub_100015704(v91, &qword_100375710);
          sub_100004030(v90, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
        }
        v82 = &qword_10037BE70;
        v83 = v89;
        goto LABEL_47;
      }
      sub_100015704((uint64_t)v38, &qword_100375708);
      sub_100015704((uint64_t)v40, &qword_100375708);
      sub_100004030((uint64_t)v35, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
    }
    v82 = &qword_10037BE78;
    v83 = v79;
    goto LABEL_47;
  }
  v72 = 0;
  if (v71 != 4 && v70 == v71)
    goto LABEL_36;
  return v72 & 1;
}

uint64_t sub_1001CA75C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  uint64_t v28;
  _DWORD *v29;
  char v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  char v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v55 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_44;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_44;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_44;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_44;
  }
  v23 = v11[8];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_44;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_44;
  }
  v28 = v11[9];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 4);
  v31 = (_DWORD *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 4);
  if ((v30 & 1) != 0)
  {
    if (!v32)
      goto LABEL_44;
  }
  else
  {
    if (*v29 != *v31)
      LOBYTE(v32) = 1;
    if ((v32 & 1) != 0)
      goto LABEL_44;
  }
  if ((sub_10010B2D8(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t (*)(char *, char *))sub_1001D3A34) & 1) == 0)goto LABEL_44;
  v33 = v12[10];
  v34 = (_DWORD *)((char *)a1 + v33);
  v35 = *((_BYTE *)a1 + v33 + 4);
  v36 = (_DWORD *)((char *)a2 + v33);
  v37 = *((unsigned __int8 *)a2 + v33 + 4);
  if ((v35 & 1) != 0)
  {
    if (!v37)
      goto LABEL_44;
  }
  else
  {
    if (*v34 != *v36)
      LOBYTE(v37) = 1;
    if ((v37 & 1) != 0)
      goto LABEL_44;
  }
  v38 = v12[11];
  v39 = *((unsigned __int8 *)a1 + v38);
  v40 = *((unsigned __int8 *)a2 + v38);
  if (v39 == 6)
  {
    if (v40 != 6)
      goto LABEL_44;
  }
  else
  {
    v41 = 0;
    if (v40 == 6 || v39 != v40)
      return v41 & 1;
  }
  v42 = v12[12];
  v43 = *((unsigned __int8 *)a1 + v42);
  v44 = *((unsigned __int8 *)a2 + v42);
  if (v43 == 7)
  {
    if (v44 == 7)
      goto LABEL_42;
LABEL_44:
    v41 = 0;
    return v41 & 1;
  }
  v41 = 0;
  if (v44 != 7 && v43 == v44)
  {
LABEL_42:
    v45 = v12[13];
    v46 = (_DWORD *)((char *)a1 + v45);
    v47 = *((_BYTE *)a1 + v45 + 4);
    v48 = (_DWORD *)((char *)a2 + v45);
    v49 = *((unsigned __int8 *)a2 + v45 + 4);
    if ((v47 & 1) != 0)
    {
      if (!v49)
        goto LABEL_44;
    }
    else
    {
      if (*v46 != *v48)
        LOBYTE(v49) = 1;
      if ((v49 & 1) != 0)
        goto LABEL_44;
    }
    v51 = (char *)a1 + v12[5];
    v52 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v52(v10, v51, v4);
    v52(v8, (char *)a2 + v12[5], v4);
    v53 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v41 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v53);
    v54 = *(void (**)(char *, uint64_t))(v5 + 8);
    v54(v8, v4);
    v54(v10, v4);
  }
  return v41 & 1;
}

uint64_t sub_1001CAA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BE80);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003756E0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 6)
  {
    if (v27 != 6)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_1003756E0);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_1003756E0);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003756E0);
    sub_10000E660((uint64_t)v20, v29, &qword_1003756E0);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_1003756E0);
      sub_100015704((uint64_t)v22, &qword_1003756E0);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_1003756E0);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003756E0);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, v42, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        v32 = sub_1001D1868((uint64_t)v17, v31);
        sub_100004030(v31, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        sub_100015704((uint64_t)v20, &qword_1003756E0);
        sub_100015704((uint64_t)v22, &qword_1003756E0);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        sub_100015704((uint64_t)v13, &qword_1003756E0);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_1003756E0);
      sub_100015704((uint64_t)v22, &qword_1003756E0);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
    }
    sub_100015704((uint64_t)v13, &qword_10037BE80);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 6 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001CAE3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  int *v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  int v29;
  uint64_t v30;
  _DWORD *v31;
  char v32;
  _DWORD *v33;
  int v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t *v44;
  int *v45;
  uint64_t v46;
  _DWORD *v47;
  char v48;
  _DWORD *v49;
  int v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  int v63;
  uint64_t *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  int *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v4 = type metadata accessor for UnknownStorage(0);
  v79 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v77 = (char *)&v73 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v80 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BE88);
  __chkstk_darwin(v11);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375700);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v73 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v73 - v21;
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  v24 = v23;
  v25 = v23[6];
  v26 = (_DWORD *)((char *)a1 + v25);
  v27 = *((_BYTE *)a1 + v25 + 4);
  v28 = (_DWORD *)((char *)a2 + v25);
  v29 = *((unsigned __int8 *)a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v29)
      goto LABEL_39;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v29) = 1;
    if ((v29 & 1) != 0)
      goto LABEL_39;
  }
  v30 = v23[7];
  v31 = (_DWORD *)((char *)a1 + v30);
  v32 = *((_BYTE *)a1 + v30 + 4);
  v33 = (_DWORD *)((char *)a2 + v30);
  v34 = *((unsigned __int8 *)a2 + v30 + 4);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_39;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_39;
  }
  v74 = v4;
  v75 = a1;
  v35 = (uint64_t)a1 + v23[8];
  v36 = v24;
  sub_10000E660(v35, (uint64_t)v22, &qword_100375700);
  v73 = v36;
  v37 = v36[8];
  v76 = a2;
  sub_10000E660((uint64_t)a2 + v37, (uint64_t)v20, &qword_100375700);
  v38 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_100375700);
  sub_10000E660((uint64_t)v20, v38, &qword_100375700);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v39((uint64_t)v13, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375700);
    sub_100015704((uint64_t)v22, &qword_100375700);
    if (v39(v38, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v13, &qword_100375700);
      goto LABEL_20;
    }
LABEL_18:
    sub_100015704((uint64_t)v13, &qword_10037BE88);
    v40 = 0;
    return v40 & 1;
  }
  sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_100375700);
  if (v39(v38, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375700);
    sub_100015704((uint64_t)v22, &qword_100375700);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
    goto LABEL_18;
  }
  v41 = v80;
  sub_100003E08(v38, v80, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  v42 = sub_1001CAA3C((uint64_t)v17, v41);
  sub_100004030(v41, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  sub_100015704((uint64_t)v20, &qword_100375700);
  sub_100015704((uint64_t)v22, &qword_100375700);
  sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
  sub_100015704((uint64_t)v13, &qword_100375700);
  if ((v42 & 1) == 0)
    goto LABEL_39;
LABEL_20:
  v44 = v75;
  v43 = v76;
  if ((sub_10010B2D8(*v75, *v76, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t (*)(char *, char *))sub_1001CED8C) & 1) == 0)goto LABEL_39;
  v45 = v73;
  v46 = v73[9];
  v47 = (_DWORD *)((char *)v44 + v46);
  v48 = *((_BYTE *)v44 + v46 + 4);
  v49 = (_DWORD *)((char *)v43 + v46);
  v50 = *((unsigned __int8 *)v43 + v46 + 4);
  v51 = v43;
  if ((v48 & 1) != 0)
  {
    v52 = v74;
    if (!v50)
      goto LABEL_39;
  }
  else
  {
    if (*v47 != *v49)
      LOBYTE(v50) = 1;
    v52 = v74;
    if ((v50 & 1) != 0)
      goto LABEL_39;
  }
  v53 = v73[10];
  v54 = *((unsigned __int8 *)v44 + v53);
  v55 = *((unsigned __int8 *)v43 + v53);
  if (v54 == 6)
  {
    if (v55 != 6)
      goto LABEL_39;
  }
  else
  {
    v40 = 0;
    if (v55 == 6 || v54 != v55)
      return v40 & 1;
  }
  v56 = v73[11];
  v57 = *((unsigned __int8 *)v44 + v56);
  v58 = *((unsigned __int8 *)v51 + v56);
  if (v57 == 7)
  {
    if (v58 == 7)
      goto LABEL_37;
LABEL_39:
    v40 = 0;
    return v40 & 1;
  }
  v40 = 0;
  if (v58 != 7 && v57 == v58)
  {
LABEL_37:
    v59 = v73[12];
    v60 = (_DWORD *)((char *)v44 + v59);
    v61 = *((_BYTE *)v44 + v59 + 4);
    v62 = (_DWORD *)((char *)v51 + v59);
    v63 = *((unsigned __int8 *)v51 + v59 + 4);
    if ((v61 & 1) != 0)
    {
      if (!v63)
        goto LABEL_39;
    }
    else
    {
      if (*v60 != *v62)
        LOBYTE(v63) = 1;
      if ((v63 & 1) != 0)
        goto LABEL_39;
    }
    v65 = v51;
    v66 = v79;
    v67 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v68 = v77;
    v67(v77, (char *)v44 + v73[5], v52);
    v69 = (char *)v65 + v45[5];
    v70 = v78;
    v67(v78, v69, v52);
    v71 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v40 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v70, v52, v71);
    v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    v72(v70, v52);
    v72(v68, v52);
  }
  return v40 & 1;
}

uint64_t sub_1001CB38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  _DWORD *v43;
  char v44;
  _DWORD *v45;
  int v46;
  char v47;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v52 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_39;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_39;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_39;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_39;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_39;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_39;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_39;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_39;
  }
  v32 = v11[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_39;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_39;
  }
  v37 = v11[10];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) == 0)
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_39;
LABEL_37:
    v42 = v11[11];
    v43 = (_DWORD *)(a1 + v42);
    v44 = *(_BYTE *)(a1 + v42 + 4);
    v45 = (_DWORD *)(a2 + v42);
    v46 = *(unsigned __int8 *)(a2 + v42 + 4);
    if ((v44 & 1) != 0)
    {
      if (!v46)
        goto LABEL_39;
    }
    else
    {
      if (*v43 != *v45)
        LOBYTE(v46) = 1;
      if ((v46 & 1) != 0)
        goto LABEL_39;
    }
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v49(v10, a1, v4);
    v49(v8, a2, v4);
    v50 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v47 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v50);
    v51 = *(void (**)(char *, uint64_t))(v5 + 8);
    v51(v8, v4);
    v51(v10, v4);
    return v47 & 1;
  }
  if (v41)
    goto LABEL_37;
LABEL_39:
  v47 = 0;
  return v47 & 1;
}

uint64_t sub_1001CB60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  int v23;
  int v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;

  v4 = type metadata accessor for UnknownStorage(0);
  v53 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - v7;
  v9 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1000039AC(&qword_10037BE80);
  __chkstk_darwin(v55);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_1003756E0);
  v16 = __chkstk_darwin(v15);
  v54 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v56 = (uint64_t)&v49 - v19;
  __chkstk_darwin(v18);
  v57 = (uint64_t)&v49 - v20;
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  v22 = v21[5];
  v23 = *(unsigned __int8 *)(a1 + v22);
  v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 10)
  {
    if (v24 != 10)
      goto LABEL_17;
  }
  else
  {
    v59 = v23;
    if (v24 == 10)
      goto LABEL_17;
    v58 = v24;
    v25 = sub_1000155F4();
    v51 = v12;
    v26 = dispatch thunk of static Equatable.== infix(_:_:)(&v59, &v58, &type metadata for Proto_Gnss_Result, v25);
    v12 = v51;
    if ((v26 & 1) == 0)
      goto LABEL_17;
  }
  v50 = v4;
  v27 = v21[6];
  v28 = *(unsigned __int8 *)(a1 + v27);
  v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 6)
  {
    v30 = v57;
    if (v29 != 6)
      goto LABEL_17;
LABEL_11:
    v51 = v12;
    v32 = v30;
    sub_10000E660(a1 + v21[7], v30, &qword_1003756E0);
    v33 = a2 + v21[7];
    v34 = v10;
    v35 = v56;
    sub_10000E660(v33, v56, &qword_1003756E0);
    v36 = (uint64_t)&v14[*(int *)(v55 + 48)];
    sub_10000E660(v32, (uint64_t)v14, &qword_1003756E0);
    v55 = v36;
    sub_10000E660(v35, v36, &qword_1003756E0);
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v37((uint64_t)v14, 1, v9) == 1)
    {
      sub_100015704(v35, &qword_1003756E0);
      sub_100015704(v32, &qword_1003756E0);
      if (v37(v55, 1, v9) == 1)
      {
        sub_100015704((uint64_t)v14, &qword_1003756E0);
LABEL_20:
        v43 = v53;
        v44 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
        v45 = v50;
        v44(v8, a1, v50);
        v46 = v52;
        v44(v52, a2, v45);
        v47 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v31 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v46, v45, v47);
        v48 = *(void (**)(char *, uint64_t))(v43 + 8);
        v48(v46, v45);
        v48(v8, v45);
        return v31 & 1;
      }
    }
    else
    {
      v38 = v54;
      sub_10000E660((uint64_t)v14, v54, &qword_1003756E0);
      v39 = v55;
      if (v37(v55, 1, v9) != 1)
      {
        v41 = (uint64_t)v51;
        sub_100003E08(v39, (uint64_t)v51, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        v42 = sub_1001D1868(v38, v41);
        sub_100004030(v41, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        sub_100015704(v56, &qword_1003756E0);
        sub_100015704(v57, &qword_1003756E0);
        sub_100004030(v38, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
        sub_100015704((uint64_t)v14, &qword_1003756E0);
        if ((v42 & 1) != 0)
          goto LABEL_20;
LABEL_17:
        v31 = 0;
        return v31 & 1;
      }
      sub_100015704(v56, &qword_1003756E0);
      sub_100015704(v57, &qword_1003756E0);
      sub_100004030(v38, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
    }
    sub_100015704((uint64_t)v14, &qword_10037BE80);
    goto LABEL_17;
  }
  v31 = 0;
  v30 = v57;
  if (v29 != 6 && v28 == v29)
    goto LABEL_11;
  return v31 & 1;
}

uint64_t sub_1001CBAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  int v17;
  int v18;
  int v20;
  char v21;
  char v22;
  int v23;
  char v24;
  char v25;
  int v26;
  char v27;
  char v28;
  int v29;
  char v30;
  char v31;
  int v32;
  char v33;
  char v34;
  int v35;
  char v36;
  char v37;
  int v38;
  char v39;
  char v40;
  int v41;
  char v42;
  char v43;
  int v44;
  char v45;
  char v46;
  int v47;
  char v48;
  char v49;
  int v50;
  char v51;
  char v52;
  int v53;
  char v54;
  char v55;
  int v56;
  int v57;
  char v58;
  int v59;
  char v60;
  char v61;
  int v62;
  char v63;
  char v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[24];
  _BYTE v100[24];
  _BYTE v101[24];
  _BYTE v102[24];
  _BYTE v103[24];
  _BYTE v104[24];
  _BYTE v105[32];

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v69 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13)
    goto LABEL_105;
  v70 = a1;
  v71 = a2;
  swift_beginAccess(v12 + 16, v105, 0, 0);
  v14 = *(_DWORD *)(v12 + 16);
  v15 = *(_BYTE *)(v12 + 20);
  swift_beginAccess(v13 + 16, v104, 0, 0);
  v16 = *(_BYTE *)(v13 + 20);
  if ((v15 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 20))
      goto LABEL_101;
  }
  else
  {
    if (v14 != *(_DWORD *)(v13 + 16))
      v16 = 1;
    if ((v16 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 21, v103, 0, 0);
  v17 = *(unsigned __int8 *)(v12 + 21);
  swift_beginAccess(v13 + 21, v102, 0, 0);
  v18 = *(unsigned __int8 *)(v13 + 21);
  if (v17 == 5)
  {
    if (v18 != 5)
      goto LABEL_101;
  }
  else if (v18 == 5 || v17 != v18)
  {
    goto LABEL_101;
  }
  swift_beginAccess(v12 + 24, v101, 0, 0);
  v20 = *(_DWORD *)(v12 + 24);
  v21 = *(_BYTE *)(v12 + 28);
  swift_beginAccess(v13 + 24, v100, 0, 0);
  v22 = *(_BYTE *)(v13 + 28);
  if ((v21 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 28))
      goto LABEL_101;
  }
  else
  {
    if (v20 != *(_DWORD *)(v13 + 24))
      v22 = 1;
    if ((v22 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 32, v99, 0, 0);
  v23 = *(_DWORD *)(v12 + 32);
  v24 = *(_BYTE *)(v12 + 36);
  swift_beginAccess(v13 + 32, &v98, 0, 0);
  v25 = *(_BYTE *)(v13 + 36);
  if ((v24 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 36))
      goto LABEL_101;
  }
  else
  {
    if (v23 != *(_DWORD *)(v13 + 32))
      v25 = 1;
    if ((v25 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 40, &v97, 0, 0);
  v26 = *(_DWORD *)(v12 + 40);
  v27 = *(_BYTE *)(v12 + 44);
  swift_beginAccess(v13 + 40, &v96, 0, 0);
  v28 = *(_BYTE *)(v13 + 44);
  if ((v27 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 44))
      goto LABEL_101;
  }
  else
  {
    if (v26 != *(_DWORD *)(v13 + 40))
      v28 = 1;
    if ((v28 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 48, &v95, 0, 0);
  v29 = *(_DWORD *)(v12 + 48);
  v30 = *(_BYTE *)(v12 + 52);
  swift_beginAccess(v13 + 48, &v94, 0, 0);
  v31 = *(_BYTE *)(v13 + 52);
  if ((v30 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 52))
      goto LABEL_101;
  }
  else
  {
    if (v29 != *(_DWORD *)(v13 + 48))
      v31 = 1;
    if ((v31 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 56, &v93, 0, 0);
  v32 = *(_DWORD *)(v12 + 56);
  v33 = *(_BYTE *)(v12 + 60);
  swift_beginAccess(v13 + 56, &v92, 0, 0);
  v34 = *(_BYTE *)(v13 + 60);
  if ((v33 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 60))
      goto LABEL_101;
  }
  else
  {
    if (v32 != *(_DWORD *)(v13 + 56))
      v34 = 1;
    if ((v34 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 64, &v91, 0, 0);
  v35 = *(_DWORD *)(v12 + 64);
  v36 = *(_BYTE *)(v12 + 68);
  swift_beginAccess(v13 + 64, &v90, 0, 0);
  v37 = *(_BYTE *)(v13 + 68);
  if ((v36 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 68))
      goto LABEL_101;
  }
  else
  {
    if (v35 != *(_DWORD *)(v13 + 64))
      v37 = 1;
    if ((v37 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 72, &v89, 0, 0);
  v38 = *(_DWORD *)(v12 + 72);
  v39 = *(_BYTE *)(v12 + 76);
  swift_beginAccess(v13 + 72, &v88, 0, 0);
  v40 = *(_BYTE *)(v13 + 76);
  if ((v39 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 76))
      goto LABEL_101;
  }
  else
  {
    if (v38 != *(_DWORD *)(v13 + 72))
      v40 = 1;
    if ((v40 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 80, &v87, 0, 0);
  v41 = *(_DWORD *)(v12 + 80);
  v42 = *(_BYTE *)(v12 + 84);
  swift_beginAccess(v13 + 80, &v86, 0, 0);
  v43 = *(_BYTE *)(v13 + 84);
  if ((v42 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 84))
      goto LABEL_101;
  }
  else
  {
    if (v41 != *(_DWORD *)(v13 + 80))
      v43 = 1;
    if ((v43 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 88, &v85, 0, 0);
  v44 = *(_DWORD *)(v12 + 88);
  v45 = *(_BYTE *)(v12 + 92);
  swift_beginAccess(v13 + 88, &v84, 0, 0);
  v46 = *(_BYTE *)(v13 + 92);
  if ((v45 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 92))
      goto LABEL_101;
  }
  else
  {
    if (v44 != *(_DWORD *)(v13 + 88))
      v46 = 1;
    if ((v46 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 96, &v83, 0, 0);
  v47 = *(_DWORD *)(v12 + 96);
  v48 = *(_BYTE *)(v12 + 100);
  swift_beginAccess(v13 + 96, &v82, 0, 0);
  v49 = *(_BYTE *)(v13 + 100);
  if ((v48 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 100))
      goto LABEL_101;
  }
  else
  {
    if (v47 != *(_DWORD *)(v13 + 96))
      v49 = 1;
    if ((v49 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 104, &v81, 0, 0);
  v50 = *(_DWORD *)(v12 + 104);
  v51 = *(_BYTE *)(v12 + 108);
  swift_beginAccess(v13 + 104, &v80, 0, 0);
  v52 = *(_BYTE *)(v13 + 108);
  if ((v51 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 108))
      goto LABEL_101;
  }
  else
  {
    if (v50 != *(_DWORD *)(v13 + 104))
      v52 = 1;
    if ((v52 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 112, &v79, 0, 0);
  v53 = *(_DWORD *)(v12 + 112);
  v54 = *(_BYTE *)(v12 + 116);
  swift_beginAccess(v13 + 112, &v78, 0, 0);
  v55 = *(_BYTE *)(v13 + 116);
  if ((v54 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 116))
      goto LABEL_101;
  }
  else
  {
    if (v53 != *(_DWORD *)(v13 + 112))
      v55 = 1;
    if ((v55 & 1) != 0)
      goto LABEL_101;
  }
  swift_beginAccess(v12 + 117, &v77, 0, 0);
  v56 = *(unsigned __int8 *)(v12 + 117);
  swift_beginAccess(v13 + 117, &v76, 0, 0);
  v57 = *(unsigned __int8 *)(v13 + 117);
  if (v56 == 7)
  {
    if (v57 != 7)
      goto LABEL_101;
    goto LABEL_93;
  }
  v58 = 0;
  if (v57 != 7 && v56 == v57)
  {
LABEL_93:
    swift_beginAccess(v12 + 120, &v75, 0, 0);
    v59 = *(_DWORD *)(v12 + 120);
    v60 = *(_BYTE *)(v12 + 124);
    swift_beginAccess(v13 + 120, &v74, 0, 0);
    v61 = *(_BYTE *)(v13 + 124);
    if ((v60 & 1) == 0)
    {
      if (v59 != *(_DWORD *)(v13 + 120))
        v61 = 1;
      if ((v61 & 1) != 0)
        goto LABEL_101;
LABEL_99:
      swift_beginAccess(v12 + 128, &v73, 0, 0);
      v62 = *(_DWORD *)(v12 + 128);
      v63 = *(_BYTE *)(v12 + 132);
      swift_beginAccess(v13 + 128, &v72, 0, 0);
      v64 = *(_BYTE *)(v13 + 132);
      if ((v63 & 1) != 0)
      {
        a1 = v70;
        a2 = v71;
        if (!*(_BYTE *)(v13 + 132))
          goto LABEL_101;
      }
      else
      {
        if (v62 != *(_DWORD *)(v13 + 128))
          v64 = 1;
        a1 = v70;
        a2 = v71;
        if ((v64 & 1) != 0)
          goto LABEL_101;
      }
LABEL_105:
      v65 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v65(v10, a1, v4);
      v65(v8, a2, v4);
      v66 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v58 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v66);
      v67 = *(void (**)(char *, uint64_t))(v5 + 8);
      v67(v8, v4);
      v67(v10, v4);
      return v58 & 1;
    }
    if (*(_BYTE *)(v13 + 124))
      goto LABEL_99;
LABEL_101:
    v58 = 0;
  }
  return v58 & 1;
}

uint64_t sub_1001CC178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  v4 = type metadata accessor for UnknownStorage(0);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  v5 = __chkstk_darwin(v4);
  v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v61 = (char *)&v60 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BFF8);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375578);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v60 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v60 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v24 = *(int *)(v23 + 20);
  v65 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  sub_10000E660(v25, (uint64_t)v22, &qword_100375578);
  v27 = v26[5];
  v66 = a2;
  sub_10000E660(a2 + v27, (uint64_t)v20, &qword_100375578);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_100375578);
  sub_10000E660((uint64_t)v20, v28, &qword_100375578);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375578);
    sub_100015704((uint64_t)v22, &qword_100375578);
    if (v29(v28, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v13, &qword_100375578);
      goto LABEL_10;
    }
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037BFF8);
    goto LABEL_7;
  }
  v30 = (uint64_t)v67;
  sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_100375578);
  if (v29(v28, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v20, &qword_100375578);
    sub_100015704((uint64_t)v22, &qword_100375578);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    goto LABEL_6;
  }
  sub_100003E08(v28, v30, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  v33 = sub_1001D3C4C((uint64_t)v17, v30, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100004030(v30, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100015704((uint64_t)v20, &qword_100375578);
  sub_100015704((uint64_t)v22, &qword_100375578);
  sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100015704((uint64_t)v13, &qword_100375578);
  if ((v33 & 1) == 0)
    goto LABEL_7;
LABEL_10:
  v34 = v26[6];
  v35 = v66;
  v36 = (_DWORD *)(v65 + v34);
  v37 = *(_BYTE *)(v65 + v34 + 4);
  v38 = (_DWORD *)(v66 + v34);
  v39 = *(unsigned __int8 *)(v66 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_7;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = (_DWORD *)(v65 + v40);
  v42 = *(_BYTE *)(v65 + v40 + 4);
  v43 = (_DWORD *)(v66 + v40);
  v44 = *(unsigned __int8 *)(v66 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_7;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_7;
  }
  v45 = v26[8];
  v46 = (_DWORD *)(v65 + v45);
  v47 = *(_BYTE *)(v65 + v45 + 4);
  v48 = (_DWORD *)(v66 + v45);
  v49 = *(unsigned __int8 *)(v66 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (v49)
      goto LABEL_28;
LABEL_7:
    v31 = 0;
    return v31 & 1;
  }
  if (*v46 != *v48)
    LOBYTE(v49) = 1;
  if ((v49 & 1) != 0)
    goto LABEL_7;
LABEL_28:
  v50 = v26[9];
  v51 = *(unsigned __int8 *)(v65 + v50);
  v52 = *(unsigned __int8 *)(v66 + v50);
  if (v51 == 5)
  {
    if (v52 == 5)
    {
LABEL_33:
      v54 = v63;
      v53 = v64;
      v55 = *(void (**)(char *))(v63 + 16);
      v56 = v61;
      v55(v61);
      v57 = v62;
      ((void (*)(char *, uint64_t, uint64_t))v55)(v62, v35, v53);
      v58 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v57, v53, v58);
      v59 = *(void (**)(char *, uint64_t))(v54 + 8);
      v59(v57, v53);
      v59(v56, v53);
      return v31 & 1;
    }
    goto LABEL_7;
  }
  v31 = 0;
  if (v52 != 5 && v51 == v52)
    goto LABEL_33;
  return v31 & 1;
}

uint64_t sub_1001CC618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a1;
  v69 = a2;
  v2 = type metadata accessor for UnknownStorage(0);
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  v3 = __chkstk_darwin(v2);
  v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v57 = (char *)&v56 - v5;
  v66 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v63 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v56 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000039AC(&qword_10037BFF8);
  __chkstk_darwin(v62);
  v67 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375578);
  v9 = __chkstk_darwin(v8);
  v61 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v64 = (uint64_t)&v56 - v12;
  __chkstk_darwin(v11);
  v65 = (uint64_t)&v56 - v13;
  v14 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000039AC(&qword_10037C000);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_100375580);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v56 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v56 - v28;
  v30 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  sub_10000E660(v68 + *(int *)(v30 + 20), (uint64_t)v29, &qword_100375580);
  sub_10000E660(v69 + *(int *)(v30 + 20), (uint64_t)v27, &qword_100375580);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_10000E660((uint64_t)v29, (uint64_t)v20, &qword_100375580);
  sub_10000E660((uint64_t)v27, v31, &qword_100375580);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) != 1)
  {
    sub_10000E660((uint64_t)v20, (uint64_t)v24, &qword_100375580);
    if (v32(v31, 1, v14) != 1)
    {
      sub_100003E08(v31, (uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      v35 = sub_1001CC178((uint64_t)v24, (uint64_t)v17);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      sub_100015704((uint64_t)v27, &qword_100375580);
      sub_100015704((uint64_t)v29, &qword_100375580);
      sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      sub_100015704((uint64_t)v20, &qword_100375580);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_100015704((uint64_t)v27, &qword_100375580);
    sub_100015704((uint64_t)v29, &qword_100375580);
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
LABEL_6:
    v33 = &qword_10037C000;
    v34 = (uint64_t)v20;
LABEL_14:
    sub_100015704(v34, v33);
    goto LABEL_15;
  }
  sub_100015704((uint64_t)v27, &qword_100375580);
  sub_100015704((uint64_t)v29, &qword_100375580);
  if (v32(v31, 1, v14) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v20, &qword_100375580);
LABEL_8:
  v36 = v68;
  v37 = v65;
  sub_10000E660(v68 + *(int *)(v30 + 24), v65, &qword_100375578);
  v38 = v69;
  v39 = v64;
  sub_10000E660(v69 + *(int *)(v30 + 24), v64, &qword_100375578);
  v40 = v67;
  v41 = v67 + *(int *)(v62 + 48);
  sub_10000E660(v37, v67, &qword_100375578);
  sub_10000E660(v39, v41, &qword_100375578);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v43 = v66;
  if (v42(v40, 1, v66) == 1)
  {
    sub_100015704(v39, &qword_100375578);
    sub_100015704(v37, &qword_100375578);
    if (v42(v41, 1, v43) == 1)
    {
      sub_100015704(v40, &qword_100375578);
LABEL_18:
      v50 = v59;
      v49 = v60;
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v52 = v57;
      v51(v57, v36, v60);
      v53 = v58;
      v51(v58, v38, v49);
      v54 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v53, v49, v54);
      v55 = *(void (**)(char *, uint64_t))(v50 + 8);
      v55(v53, v49);
      v55(v52, v49);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  v44 = v61;
  sub_10000E660(v40, v61, &qword_100375578);
  if (v42(v41, 1, v43) == 1)
  {
    sub_100015704(v39, &qword_100375578);
    sub_100015704(v37, &qword_100375578);
    sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
LABEL_13:
    v33 = &qword_10037BFF8;
    v34 = v40;
    goto LABEL_14;
  }
  v47 = v56;
  sub_100003E08(v41, v56, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  v48 = sub_1001D3C4C(v44, v47, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100004030(v47, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100015704(v39, &qword_100375578);
  sub_100015704(v37, &qword_100375578);
  sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  sub_100015704(v40, &qword_100375578);
  if ((v48 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_1001CCC94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char v65;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v97 = a1;
  v98 = a2;
  v2 = type metadata accessor for UnknownStorage(0);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  v3 = __chkstk_darwin(v2);
  v79 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v78 = (char *)&v76 - v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v85 = *(_QWORD *)(v6 - 8);
  v86 = v6;
  __chkstk_darwin(v6);
  v77 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1000039AC(&qword_10037BFE0);
  __chkstk_darwin(v84);
  v87 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000039AC(&qword_100375598);
  v10 = __chkstk_darwin(v9);
  v82 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v93 = (char *)&v76 - v13;
  __chkstk_darwin(v12);
  v94 = (char *)&v76 - v14;
  v15 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v90 = *(_QWORD *)(v15 - 8);
  v91 = v15;
  __chkstk_darwin(v15);
  v83 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1000039AC(&qword_10037BFE8);
  __chkstk_darwin(v89);
  v92 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000039AC(&qword_100375590);
  v19 = __chkstk_darwin(v18);
  v88 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v95 = (uint64_t)&v76 - v22;
  __chkstk_darwin(v21);
  v96 = (uint64_t)&v76 - v23;
  v24 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000039AC(&qword_10037BFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1000039AC(&qword_100375588);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v76 - v36;
  __chkstk_darwin(v35);
  v39 = (char *)&v76 - v38;
  v40 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_10000E660(v97 + v40[5], (uint64_t)v39, &qword_100375588);
  sub_10000E660(v98 + v40[5], (uint64_t)v37, &qword_100375588);
  v41 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_10000E660((uint64_t)v39, (uint64_t)v30, &qword_100375588);
  sub_10000E660((uint64_t)v37, v41, &qword_100375588);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v42((uint64_t)v30, 1, v24) == 1)
  {
    sub_100015704((uint64_t)v37, &qword_100375588);
    sub_100015704((uint64_t)v39, &qword_100375588);
    if (v42(v41, 1, v24) == 1)
    {
      sub_100015704((uint64_t)v30, &qword_100375588);
      goto LABEL_8;
    }
LABEL_6:
    v43 = &qword_10037BFF0;
    v44 = (uint64_t)v30;
LABEL_22:
    sub_100015704(v44, v43);
    goto LABEL_23;
  }
  sub_10000E660((uint64_t)v30, (uint64_t)v34, &qword_100375588);
  if (v42(v41, 1, v24) == 1)
  {
    sub_100015704((uint64_t)v37, &qword_100375588);
    sub_100015704((uint64_t)v39, &qword_100375588);
    sub_100004030((uint64_t)v34, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
    goto LABEL_6;
  }
  sub_100003E08(v41, (uint64_t)v27, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  v45 = sub_1001CC618((uint64_t)v34, (uint64_t)v27);
  sub_100004030((uint64_t)v27, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  sub_100015704((uint64_t)v37, &qword_100375588);
  sub_100015704((uint64_t)v39, &qword_100375588);
  sub_100004030((uint64_t)v34, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  sub_100015704((uint64_t)v30, &qword_100375588);
  if ((v45 & 1) == 0)
    goto LABEL_23;
LABEL_8:
  v47 = v96;
  v46 = v97;
  sub_10000E660(v97 + v40[6], v96, &qword_100375590);
  v48 = v98;
  v49 = v95;
  sub_10000E660(v98 + v40[6], v95, &qword_100375590);
  v50 = v92;
  v51 = v92 + *(int *)(v89 + 48);
  sub_10000E660(v47, v92, &qword_100375590);
  sub_10000E660(v49, v51, &qword_100375590);
  v52 = v91;
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  if (v53(v50, 1, v91) != 1)
  {
    v57 = v88;
    sub_10000E660(v50, v88, &qword_100375590);
    v58 = v53(v51, 1, v52);
    v56 = (uint64_t)v93;
    v55 = (uint64_t)v94;
    if (v58 != 1)
    {
      v59 = v83;
      sub_100003E08(v51, v83, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      v60 = sub_1001D3C4C(v57, v59, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      sub_100004030(v59, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      sub_100015704(v95, &qword_100375590);
      sub_100015704(v96, &qword_100375590);
      sub_100004030(v57, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      sub_100015704(v50, &qword_100375590);
      if ((v60 & 1) == 0)
        goto LABEL_23;
      goto LABEL_15;
    }
    sub_100015704(v95, &qword_100375590);
    sub_100015704(v96, &qword_100375590);
    sub_100004030(v57, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
LABEL_13:
    v43 = &qword_10037BFE8;
LABEL_21:
    v44 = v50;
    goto LABEL_22;
  }
  sub_100015704(v49, &qword_100375590);
  sub_100015704(v47, &qword_100375590);
  v54 = v53(v51, 1, v52);
  v56 = (uint64_t)v93;
  v55 = (uint64_t)v94;
  if (v54 != 1)
    goto LABEL_13;
  sub_100015704(v50, &qword_100375590);
LABEL_15:
  sub_10000E660(v46 + v40[7], v55, &qword_100375598);
  sub_10000E660(v48 + v40[7], v56, &qword_100375598);
  v50 = v87;
  v61 = v87 + *(int *)(v84 + 48);
  sub_10000E660(v55, v87, &qword_100375598);
  sub_10000E660(v56, v61, &qword_100375598);
  v62 = v86;
  v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v63(v50, 1, v86) == 1)
  {
    sub_100015704(v56, &qword_100375598);
    sub_100015704(v55, &qword_100375598);
    if (v63(v61, 1, v62) == 1)
    {
      sub_100015704(v50, &qword_100375598);
LABEL_26:
      v70 = v80;
      v69 = v81;
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
      v72 = v78;
      v71(v78, v46, v81);
      v73 = v79;
      v71(v79, v48, v69);
      v74 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v73, v69, v74);
      v75 = *(void (**)(char *, uint64_t))(v70 + 8);
      v75(v73, v69);
      v75(v72, v69);
      return v65 & 1;
    }
    goto LABEL_20;
  }
  v64 = v82;
  sub_10000E660(v50, v82, &qword_100375598);
  if (v63(v61, 1, v62) == 1)
  {
    sub_100015704(v56, &qword_100375598);
    sub_100015704(v55, &qword_100375598);
    sub_100004030(v64, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
LABEL_20:
    v43 = &qword_10037BFE0;
    goto LABEL_21;
  }
  v67 = v77;
  sub_100003E08(v61, v77, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  v68 = sub_1001D3C4C(v64, v67, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  sub_100004030(v67, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  sub_100015704(v56, &qword_100375598);
  sub_100015704(v55, &qword_100375598);
  sub_100004030(v64, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  sub_100015704(v50, &qword_100375598);
  if ((v68 & 1) != 0)
    goto LABEL_26;
LABEL_23:
  v65 = 0;
  return v65 & 1;
}

uint64_t sub_1001CD5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  char v45;
  uint64_t v46;
  _DWORD *v47;
  char v48;
  _DWORD *v49;
  int v50;
  uint64_t v51;
  _DWORD *v52;
  char v53;
  _DWORD *v54;
  int v55;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v60 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_50;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_50;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_50;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_50;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_50;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_50;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_50;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_50;
  }
  v32 = v11[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_50;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_50;
  }
  v37 = v11[10];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_50;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_50;
  }
  v42 = v11[11];
  v43 = *(unsigned __int8 *)(a1 + v42);
  v44 = *(unsigned __int8 *)(a2 + v42);
  if (v43 == 6)
  {
    if (v44 != 6)
      goto LABEL_50;
    goto LABEL_42;
  }
  v45 = 0;
  if (v44 != 6 && v43 == v44)
  {
LABEL_42:
    v46 = v11[12];
    v47 = (_DWORD *)(a1 + v46);
    v48 = *(_BYTE *)(a1 + v46 + 4);
    v49 = (_DWORD *)(a2 + v46);
    v50 = *(unsigned __int8 *)(a2 + v46 + 4);
    if ((v48 & 1) == 0)
    {
      if (*v47 != *v49)
        LOBYTE(v50) = 1;
      if ((v50 & 1) != 0)
        goto LABEL_50;
LABEL_48:
      v51 = v11[13];
      v52 = (_DWORD *)(a1 + v51);
      v53 = *(_BYTE *)(a1 + v51 + 4);
      v54 = (_DWORD *)(a2 + v51);
      v55 = *(unsigned __int8 *)(a2 + v51 + 4);
      if ((v53 & 1) != 0)
      {
        if (!v55)
          goto LABEL_50;
      }
      else
      {
        if (*v52 != *v54)
          LOBYTE(v55) = 1;
        if ((v55 & 1) != 0)
          goto LABEL_50;
      }
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v57(v10, a1, v4);
      v57(v8, a2, v4);
      v58 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v58);
      v59 = *(void (**)(char *, uint64_t))(v5 + 8);
      v59(v8, v4);
      v59(v10, v4);
      return v45 & 1;
    }
    if (v50)
      goto LABEL_48;
LABEL_50:
    v45 = 0;
  }
  return v45 & 1;
}

uint64_t sub_1001CD8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *);
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for UnknownStorage(0);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  v5 = __chkstk_darwin(v4);
  v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v53 = (char *)&v52 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v57 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BEC0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003756C8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v52 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v52 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v24 = *(int *)(v23 + 20);
  v58 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  sub_10000E660(v25, (uint64_t)v22, &qword_1003756C8);
  v27 = v26[5];
  v59 = a2;
  sub_10000E660(a2 + v27, (uint64_t)v20, &qword_1003756C8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003756C8);
  sub_10000E660((uint64_t)v20, v28, &qword_1003756C8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003756C8);
    if (v29(v28, 1, v8) != 1)
    {
      v32 = v57;
      sub_100003E08(v28, v57, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v33 = sub_1001D3C4C((uint64_t)v17, v32, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      sub_100004030(v32, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      sub_100015704((uint64_t)v20, &qword_1003756C8);
      sub_100015704((uint64_t)v22, &qword_1003756C8);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      sub_100015704((uint64_t)v13, &qword_1003756C8);
      if ((v33 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_100015704((uint64_t)v20, &qword_1003756C8);
    sub_100015704((uint64_t)v22, &qword_1003756C8);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037BEC0);
    goto LABEL_7;
  }
  sub_100015704((uint64_t)v20, &qword_1003756C8);
  sub_100015704((uint64_t)v22, &qword_1003756C8);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v13, &qword_1003756C8);
LABEL_10:
  v34 = v26[6];
  v35 = v59;
  v36 = (_DWORD *)(v58 + v34);
  v37 = *(_BYTE *)(v58 + v34 + 4);
  v38 = (_DWORD *)(v59 + v34);
  v39 = *(unsigned __int8 *)(v59 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_7;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = (_DWORD *)(v58 + v40);
  v42 = *(_BYTE *)(v58 + v40 + 4);
  v43 = (_DWORD *)(v59 + v40);
  v44 = *(unsigned __int8 *)(v59 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (v44)
    {
LABEL_22:
      v46 = v55;
      v45 = v56;
      v47 = *(void (**)(char *))(v55 + 16);
      v48 = v53;
      v47(v53);
      v49 = v54;
      ((void (*)(char *, uint64_t, uint64_t))v47)(v54, v35, v45);
      v50 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v49, v45, v50);
      v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v49, v45);
      v51(v48, v45);
      return v30 & 1;
    }
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) == 0)
      goto LABEL_22;
  }
LABEL_7:
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_1001CDCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v16;
  _DWORD *v17;
  char v18;
  _DWORD *v19;
  int v20;
  uint64_t v21;
  _DWORD *v22;
  char v23;
  _DWORD *v24;
  int v25;
  uint64_t v26;
  _DWORD *v27;
  char v28;
  _DWORD *v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  char v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 6)
  {
    if (v14 != 6)
      goto LABEL_34;
  }
  else if (v14 == 6 || v13 != v14)
  {
    goto LABEL_34;
  }
  v16 = v11[6];
  v17 = (_DWORD *)(a1 + v16);
  v18 = *(_BYTE *)(a1 + v16 + 4);
  v19 = (_DWORD *)(a2 + v16);
  v20 = *(unsigned __int8 *)(a2 + v16 + 4);
  if ((v18 & 1) != 0)
  {
    if (!v20)
      goto LABEL_34;
  }
  else
  {
    if (*v17 != *v19)
      LOBYTE(v20) = 1;
    if ((v20 & 1) != 0)
      goto LABEL_34;
  }
  v21 = v11[7];
  v22 = (_DWORD *)(a1 + v21);
  v23 = *(_BYTE *)(a1 + v21 + 4);
  v24 = (_DWORD *)(a2 + v21);
  v25 = *(unsigned __int8 *)(a2 + v21 + 4);
  if ((v23 & 1) != 0)
  {
    if (!v25)
      goto LABEL_34;
  }
  else
  {
    if (*v22 != *v24)
      LOBYTE(v25) = 1;
    if ((v25 & 1) != 0)
      goto LABEL_34;
  }
  v26 = v11[8];
  v27 = (_DWORD *)(a1 + v26);
  v28 = *(_BYTE *)(a1 + v26 + 4);
  v29 = (_DWORD *)(a2 + v26);
  v30 = *(unsigned __int8 *)(a2 + v26 + 4);
  if ((v28 & 1) != 0)
  {
    if (!v30)
      goto LABEL_34;
  }
  else
  {
    if (*v27 != *v29)
      LOBYTE(v30) = 1;
    if ((v30 & 1) != 0)
      goto LABEL_34;
  }
  v31 = v11[9];
  v32 = *(unsigned __int8 *)(a1 + v31);
  v33 = *(unsigned __int8 *)(a2 + v31);
  if (v32 == 4)
  {
    if (v33 == 4)
      goto LABEL_32;
LABEL_34:
    v34 = 0;
    return v34 & 1;
  }
  v34 = 0;
  if (v33 != 4 && v32 == v33)
  {
LABEL_32:
    v35 = v11[10];
    v36 = (_DWORD *)(a1 + v35);
    v37 = *(_BYTE *)(a1 + v35 + 4);
    v38 = (_DWORD *)(a2 + v35);
    v39 = *(unsigned __int8 *)(a2 + v35 + 4);
    if ((v37 & 1) != 0)
    {
      if (!v39)
        goto LABEL_34;
    }
    else
    {
      if (*v36 != *v38)
        LOBYTE(v39) = 1;
      if ((v39 & 1) != 0)
        goto LABEL_34;
    }
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v41(v10, a1, v4);
    v41(v8, a2, v4);
    v42 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v34 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v42);
    v43 = *(void (**)(char *, uint64_t))(v5 + 8);
    v43(v8, v4);
    v43(v10, v4);
  }
  return v34 & 1;
}

uint64_t sub_1001CDF18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_EutranCellTime(0);
  v12 = *(int *)(v11 + 24);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = *((_BYTE *)a1 + v12 + 4);
  v15 = (_DWORD *)((char *)a2 + v12);
  v16 = *((unsigned __int8 *)a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_9;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_9;
  }
  if ((sub_10010B2D8(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t (*)(char *, char *))sub_1001CF7C0) & 1) == 0)
  {
LABEL_9:
    v20 = 0;
    return v20 & 1;
  }
  v17 = (char *)a1 + *(int *)(v11 + 20);
  v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v10, v17, v4);
  v18(v8, (char *)a2 + *(int *)(v11 + 20), v4);
  v19 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_1001CE090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  char v17;
  _DWORD *v18;
  int v19;
  uint64_t v20;
  _DWORD *v21;
  char v22;
  _DWORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  int v29;
  uint64_t v30;
  _DWORD *v31;
  char v32;
  _DWORD *v33;
  int v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  char v43;
  uint64_t v44;
  _DWORD *v45;
  char v46;
  _DWORD *v47;
  int v48;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v53 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_43;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_43;
  }
  v15 = v11[6];
  v16 = (_DWORD *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 4);
  v18 = (_DWORD *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) != 0)
  {
    if (!v19)
      goto LABEL_43;
  }
  else
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      goto LABEL_43;
  }
  v20 = v11[7];
  v21 = (_DWORD *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 4);
  v23 = (_DWORD *)(a2 + v20);
  v24 = *(unsigned __int8 *)(a2 + v20 + 4);
  if ((v22 & 1) != 0)
  {
    if (!v24)
      goto LABEL_43;
  }
  else
  {
    if (*v21 != *v23)
      LOBYTE(v24) = 1;
    if ((v24 & 1) != 0)
      goto LABEL_43;
  }
  v25 = v11[8];
  v26 = (_DWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 4);
  v28 = (_DWORD *)(a2 + v25);
  v29 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v29)
      goto LABEL_43;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v29) = 1;
    if ((v29 & 1) != 0)
      goto LABEL_43;
  }
  v30 = v11[9];
  v31 = (_DWORD *)(a1 + v30);
  v32 = *(_BYTE *)(a1 + v30 + 4);
  v33 = (_DWORD *)(a2 + v30);
  v34 = *(unsigned __int8 *)(a2 + v30 + 4);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_43;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_43;
  }
  v35 = v11[10];
  v36 = (_DWORD *)(a1 + v35);
  v37 = *(_BYTE *)(a1 + v35 + 4);
  v38 = (_DWORD *)(a2 + v35);
  v39 = *(unsigned __int8 *)(a2 + v35 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_43;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_43;
  }
  v40 = v11[11];
  v41 = *(unsigned __int8 *)(a1 + v40);
  v42 = *(unsigned __int8 *)(a2 + v40);
  if (v41 == 4)
  {
    if (v42 == 4)
      goto LABEL_41;
LABEL_43:
    v43 = 0;
    return v43 & 1;
  }
  v43 = 0;
  if (v42 != 4 && v41 == v42)
  {
LABEL_41:
    v44 = v11[12];
    v45 = (_DWORD *)(a1 + v44);
    v46 = *(_BYTE *)(a1 + v44 + 4);
    v47 = (_DWORD *)(a2 + v44);
    v48 = *(unsigned __int8 *)(a2 + v44 + 4);
    if ((v46 & 1) != 0)
    {
      if (!v48)
        goto LABEL_43;
    }
    else
    {
      if (*v45 != *v47)
        LOBYTE(v48) = 1;
      if ((v48 & 1) != 0)
        goto LABEL_43;
    }
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v50(v10, a1, v4);
    v50(v8, a2, v4);
    v51 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v43 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v51);
    v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v52(v8, v4);
    v52(v10, v4);
  }
  return v43 & 1;
}

uint64_t sub_1001CE348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char v15;
  char v16;
  double v17;
  char v18;
  char v19;
  double v20;
  char v21;
  char v22;
  double v23;
  char v24;
  char v25;
  double v26;
  char v27;
  char v28;
  double v29;
  char v30;
  char v31;
  char v32;
  char v33;
  int v34;
  int v35;
  char v36;
  int v37;
  int v38;
  int v39;
  int v40;
  double v41;
  char v42;
  char v43;
  double v44;
  char v45;
  char v46;
  double v47;
  char v48;
  char v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  char v58;
  char v59;
  char v60;
  char v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[24];
  _BYTE v102[24];
  _BYTE v103[24];
  _BYTE v104[24];
  _BYTE v105[24];
  _BYTE v106[32];

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v66 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13)
    goto LABEL_109;
  v68 = a2;
  swift_beginAccess(v12 + 16, v106, 0, 0);
  v14 = *(double *)(v12 + 16);
  v15 = *(_BYTE *)(v12 + 24);
  swift_beginAccess(v13 + 16, v105, 0, 0);
  v16 = *(_BYTE *)(v13 + 24);
  if ((v15 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 24))
      goto LABEL_105;
  }
  else
  {
    if (v14 != *(double *)(v13 + 16))
      v16 = 1;
    if ((v16 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 32, v104, 0, 0);
  v17 = *(double *)(v12 + 32);
  v18 = *(_BYTE *)(v12 + 40);
  swift_beginAccess(v13 + 32, v103, 0, 0);
  v19 = *(_BYTE *)(v13 + 40);
  if ((v18 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 40))
      goto LABEL_105;
  }
  else
  {
    if (v17 != *(double *)(v13 + 32))
      v19 = 1;
    if ((v19 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 48, v102, 0, 0);
  v20 = *(double *)(v12 + 48);
  v21 = *(_BYTE *)(v12 + 56);
  swift_beginAccess(v13 + 48, v101, 0, 0);
  v22 = *(_BYTE *)(v13 + 56);
  if ((v21 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 56))
      goto LABEL_105;
  }
  else
  {
    if (v20 != *(double *)(v13 + 48))
      v22 = 1;
    if ((v22 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 64, &v100, 0, 0);
  v23 = *(double *)(v12 + 64);
  v24 = *(_BYTE *)(v12 + 72);
  swift_beginAccess(v13 + 64, &v99, 0, 0);
  v25 = *(_BYTE *)(v13 + 72);
  if ((v24 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 72))
      goto LABEL_105;
  }
  else
  {
    if (v23 != *(double *)(v13 + 64))
      v25 = 1;
    if ((v25 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 80, &v98, 0, 0);
  v26 = *(double *)(v12 + 80);
  v27 = *(_BYTE *)(v12 + 88);
  swift_beginAccess(v13 + 80, &v97, 0, 0);
  v28 = *(_BYTE *)(v13 + 88);
  if ((v27 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 88))
      goto LABEL_105;
  }
  else
  {
    if (v26 != *(double *)(v13 + 80))
      v28 = 1;
    if ((v28 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 96, &v96, 0, 0);
  v29 = *(double *)(v12 + 96);
  v30 = *(_BYTE *)(v12 + 104);
  swift_beginAccess(v13 + 96, &v95, 0, 0);
  v31 = *(_BYTE *)(v13 + 104);
  if ((v30 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 104))
      goto LABEL_105;
  }
  else
  {
    if (v29 != *(double *)(v13 + 96))
      v31 = 1;
    if ((v31 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 108, &v94, 0, 0);
  LODWORD(v67) = *(_DWORD *)(v12 + 108);
  v32 = *(_BYTE *)(v12 + 112);
  swift_beginAccess(v13 + 108, &v93, 0, 0);
  v33 = *(_BYTE *)(v13 + 112);
  if ((v32 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 112))
      goto LABEL_105;
  }
  else
  {
    if ((_DWORD)v67 != *(_DWORD *)(v13 + 108))
      v33 = 1;
    if ((v33 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 113, &v92, 0, 0);
  v34 = *(unsigned __int8 *)(v12 + 113);
  swift_beginAccess(v13 + 113, &v91, 0, 0);
  v35 = *(unsigned __int8 *)(v13 + 113);
  if (v34 == 18)
  {
    if (v35 != 18)
      goto LABEL_105;
  }
  else
  {
    v36 = 0;
    if (v35 == 18 || v34 != v35)
      return v36 & 1;
  }
  swift_beginAccess(v12 + 114, &v90, 0, 0);
  v37 = *(unsigned __int8 *)(v12 + 114);
  swift_beginAccess(v13 + 114, &v89, 0, 0);
  v38 = *(unsigned __int8 *)(v13 + 114);
  if (v37 == 4)
  {
    if (v38 != 4)
      goto LABEL_105;
  }
  else
  {
    v36 = 0;
    if (v38 == 4 || v37 != v38)
      return v36 & 1;
  }
  swift_beginAccess(v12 + 115, &v88, 0, 0);
  v39 = *(unsigned __int8 *)(v12 + 115);
  swift_beginAccess(v13 + 115, &v87, 0, 0);
  v40 = *(unsigned __int8 *)(v13 + 115);
  if (v39 == 7)
  {
    if (v40 != 7)
      goto LABEL_105;
  }
  else
  {
    v36 = 0;
    if (v40 == 7 || v39 != v40)
      return v36 & 1;
  }
  swift_beginAccess(v12 + 120, &v86, 0, 0);
  v41 = *(double *)(v12 + 120);
  v42 = *(_BYTE *)(v12 + 128);
  swift_beginAccess(v13 + 120, &v85, 0, 0);
  v43 = *(_BYTE *)(v13 + 128);
  if ((v42 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 128))
      goto LABEL_105;
  }
  else
  {
    if (v41 != *(double *)(v13 + 120))
      v43 = 1;
    if ((v43 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 136, &v84, 0, 0);
  v44 = *(double *)(v12 + 136);
  v45 = *(_BYTE *)(v12 + 144);
  swift_beginAccess(v13 + 136, &v83, 0, 0);
  v46 = *(_BYTE *)(v13 + 144);
  if ((v45 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 144))
      goto LABEL_105;
  }
  else
  {
    if (v44 != *(double *)(v13 + 136))
      v46 = 1;
    if ((v46 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 152, &v82, 0, 0);
  v47 = *(double *)(v12 + 152);
  v48 = *(_BYTE *)(v12 + 160);
  swift_beginAccess(v13 + 152, &v81, 0, 0);
  v49 = *(_BYTE *)(v13 + 160);
  if ((v48 & 1) != 0)
  {
    if (!*(_BYTE *)(v13 + 160))
      goto LABEL_105;
  }
  else
  {
    if (v47 != *(double *)(v13 + 152))
      v49 = 1;
    if ((v49 & 1) != 0)
      goto LABEL_105;
  }
  swift_beginAccess(v12 + 161, &v80, 0, 0);
  v50 = *(unsigned __int8 *)(v12 + 161);
  swift_beginAccess(v13 + 161, &v79, 0, 0);
  v51 = *(unsigned __int8 *)(v13 + 161);
  if (v50 == 8)
  {
    if (v51 != 8)
      goto LABEL_105;
  }
  else
  {
    v36 = 0;
    if (v51 == 8 || v50 != v51)
      return v36 & 1;
  }
  swift_beginAccess(v12 + 162, &v78, 0, 0);
  v52 = *(unsigned __int8 *)(v12 + 162);
  swift_beginAccess(v13 + 162, &v77, 0, 0);
  v53 = *(unsigned __int8 *)(v13 + 162);
  if (v52 == 17)
  {
    if (v53 != 17)
      goto LABEL_105;
    goto LABEL_87;
  }
  v36 = 0;
  if (v53 != 17 && v52 == v53)
  {
LABEL_87:
    swift_beginAccess(v12 + 163, &v76, 0, 0);
    v54 = *(unsigned __int8 *)(v12 + 163);
    swift_beginAccess(v13 + 163, &v75, 0, 0);
    v55 = *(unsigned __int8 *)(v13 + 163);
    if (v54 == 2)
    {
      if (v55 != 2)
        goto LABEL_105;
    }
    else if (v55 == 2 || ((v54 ^ ((v55 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_105;
    }
    swift_beginAccess(v12 + 164, &v74, 0, 0);
    v56 = *(unsigned __int8 *)(v12 + 164);
    swift_beginAccess(v13 + 164, &v73, 0, 0);
    v57 = *(unsigned __int8 *)(v13 + 164);
    if (v56 == 2)
    {
      if (v57 != 2)
        goto LABEL_105;
    }
    else if (v57 == 2 || ((v56 ^ ((v57 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_105;
    }
    swift_beginAccess(v12 + 168, &v72, 0, 0);
    v67 = *(_QWORD *)(v12 + 168);
    v58 = *(_BYTE *)(v12 + 176);
    swift_beginAccess(v13 + 168, &v71, 0, 0);
    v59 = *(_BYTE *)(v13 + 176);
    if ((v58 & 1) == 0)
    {
      if (v67 != *(_QWORD *)(v13 + 168))
        v59 = 1;
      if ((v59 & 1) != 0)
        goto LABEL_105;
LABEL_103:
      swift_beginAccess(v12 + 180, &v70, 0, 0);
      LODWORD(v67) = *(_DWORD *)(v12 + 180);
      v60 = *(_BYTE *)(v12 + 184);
      swift_beginAccess(v13 + 180, &v69, 0, 0);
      v61 = *(_BYTE *)(v13 + 184);
      if ((v60 & 1) != 0)
      {
        a2 = v68;
        if (!*(_BYTE *)(v13 + 184))
          goto LABEL_105;
      }
      else
      {
        if ((_DWORD)v67 != *(_DWORD *)(v13 + 180))
          v61 = 1;
        a2 = v68;
        if ((v61 & 1) != 0)
          goto LABEL_105;
      }
LABEL_109:
      v62 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v62(v10, a1, v4);
      v62(v8, a2, v4);
      v63 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v63);
      v64 = *(void (**)(char *, uint64_t))(v5 + 8);
      v64(v8, v4);
      v64(v10, v4);
      return v36 & 1;
    }
    if (*(_BYTE *)(v13 + 176))
      goto LABEL_103;
LABEL_105:
    v36 = 0;
  }
  return v36 & 1;
}

uint64_t sub_1001CEB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  double *v28;
  char v29;
  double *v30;
  int v31;
  uint64_t v32;
  double *v33;
  char v34;
  double *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  _DWORD *v43;
  char v44;
  _DWORD *v45;
  int v46;
  char v47;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v52 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  v12 = v11[5];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_39;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_39;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_39;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_39;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_39;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_39;
  }
  v27 = v11[8];
  v28 = (double *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (double *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_39;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_39;
  }
  v32 = v11[9];
  v33 = (double *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 8);
  v35 = (double *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 8);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_39;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_39;
  }
  v37 = v11[10];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) == 0)
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_39;
LABEL_37:
    v42 = v11[11];
    v43 = (_DWORD *)(a1 + v42);
    v44 = *(_BYTE *)(a1 + v42 + 4);
    v45 = (_DWORD *)(a2 + v42);
    v46 = *(unsigned __int8 *)(a2 + v42 + 4);
    if ((v44 & 1) != 0)
    {
      if (!v46)
        goto LABEL_39;
    }
    else
    {
      if (*v43 != *v45)
        LOBYTE(v46) = 1;
      if ((v46 & 1) != 0)
        goto LABEL_39;
    }
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v49(v10, a1, v4);
    v49(v8, a2, v4);
    v50 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v47 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v50);
    v51 = *(void (**)(char *, uint64_t))(v5 + 8);
    v51(v8, v4);
    v51(v10, v4);
    return v47 & 1;
  }
  if (v41)
    goto LABEL_37;
LABEL_39:
  v47 = 0;
  return v47 & 1;
}

uint64_t sub_1001CED8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  uint64_t v21;
  _DWORD *v22;
  char v23;
  _DWORD *v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  uint64_t v29;
  _DWORD *v30;
  char v31;
  _DWORD *v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  uint64_t v41;
  _DWORD *v42;
  char v43;
  _DWORD *v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  uint64_t v49;
  _DWORD *v50;
  char v51;
  _DWORD *v52;
  uint64_t v53;
  _DWORD *v54;
  char v55;
  _DWORD *v56;
  uint64_t v57;
  _DWORD *v58;
  char v59;
  _DWORD *v60;
  uint64_t v61;
  int v62;
  int v63;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  char v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v69 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v16 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v21 = v11[7];
  v22 = (_DWORD *)(a1 + v21);
  v23 = *(_BYTE *)(a1 + v21 + 4);
  v24 = (_DWORD *)(a2 + v21);
  v16 = *(unsigned __int8 *)(a2 + v21 + 4);
  if ((v23 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v22 != *v24)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v25 = v11[8];
  v26 = (_DWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 4);
  v28 = (_DWORD *)(a2 + v25);
  v16 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v29 = v11[9];
  v30 = (_DWORD *)(a1 + v29);
  v31 = *(_BYTE *)(a1 + v29 + 4);
  v32 = (_DWORD *)(a2 + v29);
  v16 = *(unsigned __int8 *)(a2 + v29 + 4);
  if ((v31 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v30 != *v32)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v33 = v11[10];
  v34 = (_DWORD *)(a1 + v33);
  v35 = *(_BYTE *)(a1 + v33 + 4);
  v36 = (_DWORD *)(a2 + v33);
  v16 = *(unsigned __int8 *)(a2 + v33 + 4);
  if ((v35 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v34 != *v36)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v37 = v11[11];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v16 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v41 = v11[12];
  v42 = (_DWORD *)(a1 + v41);
  v43 = *(_BYTE *)(a1 + v41 + 4);
  v44 = (_DWORD *)(a2 + v41);
  v16 = *(unsigned __int8 *)(a2 + v41 + 4);
  if ((v43 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v42 != *v44)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v45 = v11[13];
  v46 = (_DWORD *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 4);
  v48 = (_DWORD *)(a2 + v45);
  v16 = *(unsigned __int8 *)(a2 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v49 = v11[14];
  v50 = (_DWORD *)(a1 + v49);
  v51 = *(_BYTE *)(a1 + v49 + 4);
  v52 = (_DWORD *)(a2 + v49);
  v16 = *(unsigned __int8 *)(a2 + v49 + 4);
  if ((v51 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v50 != *v52)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v53 = v11[15];
  v54 = (_DWORD *)(a1 + v53);
  v55 = *(_BYTE *)(a1 + v53 + 4);
  v56 = (_DWORD *)(a2 + v53);
  v16 = *(unsigned __int8 *)(a2 + v53 + 4);
  if ((v55 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v54 != *v56)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v57 = v11[16];
  v58 = (_DWORD *)(a1 + v57);
  v59 = *(_BYTE *)(a1 + v57 + 4);
  v60 = (_DWORD *)(a2 + v57);
  v16 = *(unsigned __int8 *)(a2 + v57 + 4);
  if ((v59 & 1) != 0)
  {
    if (!v16)
      return v16 & 1;
  }
  else
  {
    if (*v58 != *v60)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_75;
  }
  v61 = v11[17];
  v62 = *(unsigned __int8 *)(a1 + v61);
  v63 = *(unsigned __int8 *)(a2 + v61);
  if (v62 == 7)
  {
    if (v63 != 7)
    {
LABEL_75:
      LOBYTE(v16) = 0;
      return v16 & 1;
    }
LABEL_79:
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v65(v10, a1, v4);
    v65(v8, a2, v4);
    v66 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v67 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v66);
    v68 = *(void (**)(char *, uint64_t))(v5 + 8);
    v68(v8, v4);
    v68(v10, v4);
    LOBYTE(v16) = v67;
    return v16 & 1;
  }
  LOBYTE(v16) = 0;
  if (v63 != 7 && v62 == v63)
    goto LABEL_79;
  return v16 & 1;
}

uint64_t sub_1001CF148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a1;
  v69 = a2;
  v2 = type metadata accessor for UnknownStorage(0);
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  v3 = __chkstk_darwin(v2);
  v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v57 = (char *)&v56 - v5;
  v66 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v63 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v56 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000039AC(&qword_10037BEA0);
  __chkstk_darwin(v62);
  v67 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_1003756E8);
  v9 = __chkstk_darwin(v8);
  v61 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v64 = (uint64_t)&v56 - v12;
  __chkstk_darwin(v11);
  v65 = (uint64_t)&v56 - v13;
  v14 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000039AC(&qword_10037BEA8);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_100375560);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v56 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v56 - v28;
  v30 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  sub_10000E660(v68 + *(int *)(v30 + 20), (uint64_t)v29, &qword_100375560);
  sub_10000E660(v69 + *(int *)(v30 + 20), (uint64_t)v27, &qword_100375560);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_10000E660((uint64_t)v29, (uint64_t)v20, &qword_100375560);
  sub_10000E660((uint64_t)v27, v31, &qword_100375560);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) != 1)
  {
    sub_10000E660((uint64_t)v20, (uint64_t)v24, &qword_100375560);
    if (v32(v31, 1, v14) != 1)
    {
      sub_100003E08(v31, (uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_Configuration);
      v35 = sub_1001D5634((uint64_t)v24, (uint64_t)v17);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_Configuration);
      sub_100015704((uint64_t)v27, &qword_100375560);
      sub_100015704((uint64_t)v29, &qword_100375560);
      sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Configuration);
      sub_100015704((uint64_t)v20, &qword_100375560);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_100015704((uint64_t)v27, &qword_100375560);
    sub_100015704((uint64_t)v29, &qword_100375560);
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Configuration);
LABEL_6:
    v33 = &qword_10037BEA8;
    v34 = (uint64_t)v20;
LABEL_14:
    sub_100015704(v34, v33);
    goto LABEL_15;
  }
  sub_100015704((uint64_t)v27, &qword_100375560);
  sub_100015704((uint64_t)v29, &qword_100375560);
  if (v32(v31, 1, v14) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v20, &qword_100375560);
LABEL_8:
  v36 = v68;
  v37 = v65;
  sub_10000E660(v68 + *(int *)(v30 + 24), v65, &qword_1003756E8);
  v38 = v69;
  v39 = v64;
  sub_10000E660(v69 + *(int *)(v30 + 24), v64, &qword_1003756E8);
  v40 = v67;
  v41 = v67 + *(int *)(v62 + 48);
  sub_10000E660(v37, v67, &qword_1003756E8);
  sub_10000E660(v39, v41, &qword_1003756E8);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v43 = v66;
  if (v42(v40, 1, v66) == 1)
  {
    sub_100015704(v39, &qword_1003756E8);
    sub_100015704(v37, &qword_1003756E8);
    if (v42(v41, 1, v43) == 1)
    {
      sub_100015704(v40, &qword_1003756E8);
LABEL_18:
      v50 = v59;
      v49 = v60;
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v52 = v57;
      v51(v57, v36, v60);
      v53 = v58;
      v51(v58, v38, v49);
      v54 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v53, v49, v54);
      v55 = *(void (**)(char *, uint64_t))(v50 + 8);
      v55(v53, v49);
      v55(v52, v49);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  v44 = v61;
  sub_10000E660(v40, v61, &qword_1003756E8);
  if (v42(v41, 1, v43) == 1)
  {
    sub_100015704(v39, &qword_1003756E8);
    sub_100015704(v37, &qword_1003756E8);
    sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
LABEL_13:
    v33 = &qword_10037BEA0;
    v34 = v40;
    goto LABEL_14;
  }
  v47 = v56;
  sub_100003E08(v41, v56, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  v48 = sub_1001CFDAC(v44, v47);
  sub_100004030(v47, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  sub_100015704(v39, &qword_1003756E8);
  sub_100015704(v37, &qword_1003756E8);
  sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
  sub_100015704(v40, &qword_1003756E8);
  if ((v48 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_1001CF7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  _DWORD *v43;
  char v44;
  _DWORD *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char v51;
  char v53;
  uint64_t v54;
  _DWORD *v55;
  char v56;
  uint64_t v57;
  _DWORD *v58;
  int v59;
  uint64_t v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  int v64;
  uint64_t v65;
  _DWORD *v66;
  char v67;
  _DWORD *v68;
  int v69;
  uint64_t v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  int v74;
  uint64_t v75;
  _DWORD *v76;
  char v77;
  _DWORD *v78;
  int v79;
  uint64_t v80;
  _DWORD *v81;
  char v82;
  _DWORD *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;

  v4 = type metadata accessor for UnknownStorage(0);
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  v5 = __chkstk_darwin(v4);
  v95 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v94 = (char *)&v92 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_10037BFC8);
  __chkstk_darwin(v12);
  v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_1003755B0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v92 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v92 - v22;
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  v25 = a2;
  v26 = v24;
  v27 = v24[5];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(v25 + v27);
  v31 = *(unsigned __int8 *)(v25 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_31;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_31;
  }
  v32 = v24[6];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(v25 + v32);
  v36 = *(unsigned __int8 *)(v25 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_31;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_31;
  }
  v37 = v24[7];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(v25 + v37);
  v41 = *(unsigned __int8 *)(v25 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_31;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_31;
  }
  v42 = v24[8];
  v43 = (_DWORD *)(a1 + v42);
  v44 = *(_BYTE *)(a1 + v42 + 4);
  v45 = (_DWORD *)(v25 + v42);
  v46 = *(unsigned __int8 *)(v25 + v42 + 4);
  if ((v44 & 1) != 0)
  {
    if (!v46)
      goto LABEL_31;
  }
  else
  {
    if (*v43 != *v45)
      LOBYTE(v46) = 1;
    if ((v46 & 1) != 0)
      goto LABEL_31;
  }
  v47 = a1 + v24[9];
  v93 = v25;
  sub_10000E660(v47, (uint64_t)v23, &qword_1003755B0);
  sub_10000E660(v93 + v26[9], (uint64_t)v21, &qword_1003755B0);
  v48 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10000E660((uint64_t)v23, (uint64_t)v14, &qword_1003755B0);
  v92 = v48;
  sub_10000E660((uint64_t)v21, v48, &qword_1003755B0);
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v49((uint64_t)v14, 1, v8) != 1)
  {
    sub_10000E660((uint64_t)v14, (uint64_t)v18, &qword_1003755B0);
    v50 = v92;
    if (v49(v92, 1, v8) != 1)
    {
      sub_100003E08(v50, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      v53 = sub_1001D47B8((uint64_t)v18, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      sub_100004030((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      sub_100015704((uint64_t)v21, &qword_1003755B0);
      sub_100015704((uint64_t)v23, &qword_1003755B0);
      sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      sub_100015704((uint64_t)v14, &qword_1003755B0);
      if ((v53 & 1) == 0)
        goto LABEL_31;
      goto LABEL_34;
    }
    sub_100015704((uint64_t)v21, &qword_1003755B0);
    sub_100015704((uint64_t)v23, &qword_1003755B0);
    sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_Plmn);
LABEL_30:
    sub_100015704((uint64_t)v14, &qword_10037BFC8);
    goto LABEL_31;
  }
  sub_100015704((uint64_t)v21, &qword_1003755B0);
  sub_100015704((uint64_t)v23, &qword_1003755B0);
  if (v49(v92, 1, v8) != 1)
    goto LABEL_30;
  sub_100015704((uint64_t)v14, &qword_1003755B0);
LABEL_34:
  v54 = v26[10];
  v55 = (_DWORD *)(a1 + v54);
  v56 = *(_BYTE *)(a1 + v54 + 4);
  v57 = v93;
  v58 = (_DWORD *)(v93 + v54);
  v59 = *(unsigned __int8 *)(v93 + v54 + 4);
  if ((v56 & 1) != 0)
  {
    if (!v59)
      goto LABEL_31;
  }
  else
  {
    if (*v55 != *v58)
      LOBYTE(v59) = 1;
    if ((v59 & 1) != 0)
      goto LABEL_31;
  }
  v60 = v26[11];
  v61 = (_DWORD *)(a1 + v60);
  v62 = *(_BYTE *)(a1 + v60 + 4);
  v63 = (_DWORD *)(v93 + v60);
  v64 = *(unsigned __int8 *)(v93 + v60 + 4);
  if ((v62 & 1) != 0)
  {
    if (!v64)
      goto LABEL_31;
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    if ((v64 & 1) != 0)
      goto LABEL_31;
  }
  v65 = v26[12];
  v66 = (_DWORD *)(a1 + v65);
  v67 = *(_BYTE *)(a1 + v65 + 4);
  v68 = (_DWORD *)(v93 + v65);
  v69 = *(unsigned __int8 *)(v93 + v65 + 4);
  if ((v67 & 1) != 0)
  {
    if (!v69)
      goto LABEL_31;
  }
  else
  {
    if (*v66 != *v68)
      LOBYTE(v69) = 1;
    if ((v69 & 1) != 0)
      goto LABEL_31;
  }
  v70 = v26[13];
  v71 = (_DWORD *)(a1 + v70);
  v72 = *(_BYTE *)(a1 + v70 + 4);
  v73 = (_DWORD *)(v93 + v70);
  v74 = *(unsigned __int8 *)(v93 + v70 + 4);
  if ((v72 & 1) != 0)
  {
    if (!v74)
      goto LABEL_31;
  }
  else
  {
    if (*v71 != *v73)
      LOBYTE(v74) = 1;
    if ((v74 & 1) != 0)
      goto LABEL_31;
  }
  v75 = v26[14];
  v76 = (_DWORD *)(a1 + v75);
  v77 = *(_BYTE *)(a1 + v75 + 4);
  v78 = (_DWORD *)(v93 + v75);
  v79 = *(unsigned __int8 *)(v93 + v75 + 4);
  if ((v77 & 1) != 0)
  {
    if (!v79)
      goto LABEL_31;
  }
  else
  {
    if (*v76 != *v78)
      LOBYTE(v79) = 1;
    if ((v79 & 1) != 0)
      goto LABEL_31;
  }
  v80 = v26[15];
  v81 = (_DWORD *)(a1 + v80);
  v82 = *(_BYTE *)(a1 + v80 + 4);
  v83 = (_DWORD *)(v93 + v80);
  v84 = *(unsigned __int8 *)(v93 + v80 + 4);
  if ((v82 & 1) == 0)
  {
    if (*v81 != *v83)
      LOBYTE(v84) = 1;
    if ((v84 & 1) != 0)
      goto LABEL_31;
LABEL_70:
    v86 = v96;
    v85 = v97;
    v87 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
    v88 = v94;
    v87(v94, a1, v97);
    v89 = v95;
    v87(v95, v57, v85);
    v90 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v51 = dispatch thunk of static Equatable.== infix(_:_:)(v88, v89, v85, v90);
    v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    v91(v89, v85);
    v91(v88, v85);
    return v51 & 1;
  }
  if (v84)
    goto LABEL_70;
LABEL_31:
  v51 = 0;
  return v51 & 1;
}

uint64_t sub_1001CFDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v29 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_22;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_22;
  }
  v15 = v11[6];
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
      goto LABEL_22;
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_22;
  }
  v18 = v11[7];
  v19 = *(unsigned __int8 *)(a1 + v18);
  v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2)
      goto LABEL_22;
  }
  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_22;
  }
  v21 = v11[8];
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 == 2)
      goto LABEL_21;
LABEL_22:
    v26 = 0;
    return v26 & 1;
  }
  if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
    goto LABEL_22;
LABEL_21:
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v24(v10, a1, v4);
  v24(v8, a2, v4);
  v25 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v25);
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v8, v4);
  v27(v10, v4);
  return v26 & 1;
}

uint64_t sub_1001CFFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char v87;
  uint64_t v89;
  char v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;

  v128 = a2;
  v103 = type metadata accessor for UnknownStorage(0);
  v102 = *(_QWORD *)(v103 - 8);
  v3 = __chkstk_darwin(v103);
  v101 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v100 = (char *)&v98 - v5;
  v107 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v99 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1000039AC(&qword_10037BF48);
  __chkstk_darwin(v105);
  v108 = (uint64_t)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_100375638);
  v9 = __chkstk_darwin(v8);
  v117 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v116 = (char *)&v98 - v12;
  __chkstk_darwin(v11);
  v111 = (char *)&v98 - v13;
  v14 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  v113 = *(_QWORD *)(v14 - 8);
  v114 = v14;
  __chkstk_darwin(v14);
  v104 = (uint64_t)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1000039AC(&qword_10037BF50);
  __chkstk_darwin(v112);
  v115 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000039AC(&qword_100375630);
  v18 = __chkstk_darwin(v17);
  v109 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v120 = (uint64_t)&v98 - v21;
  __chkstk_darwin(v20);
  v118 = (uint64_t)&v98 - v22;
  v124 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  v122 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v110 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1000039AC(&qword_10037BF58);
  __chkstk_darwin(v121);
  v125 = (uint64_t)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000039AC(&qword_100375628);
  v26 = __chkstk_darwin(v25);
  v119 = (uint64_t)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v127 = (int *)((char *)&v98 - v29);
  __chkstk_darwin(v28);
  v123 = (uint64_t)&v98 - v30;
  v31 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1000039AC(&qword_10037BF60);
  __chkstk_darwin(v35);
  v37 = (char *)&v98 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000039AC(&qword_100375620);
  v39 = __chkstk_darwin(v38);
  v41 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v39);
  v44 = (char *)&v98 - v43;
  __chkstk_darwin(v42);
  v46 = (char *)&v98 - v45;
  v47 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  v48 = *(int *)(v47 + 20);
  v126 = a1;
  v49 = a1 + v48;
  v50 = (int *)v47;
  sub_10000E660(v49, (uint64_t)v46, &qword_100375620);
  sub_10000E660(v128 + v50[5], (uint64_t)v44, &qword_100375620);
  v51 = (uint64_t)&v37[*(int *)(v35 + 48)];
  sub_10000E660((uint64_t)v46, (uint64_t)v37, &qword_100375620);
  sub_10000E660((uint64_t)v44, v51, &qword_100375620);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v52((uint64_t)v37, 1, v31) == 1)
  {
    sub_100015704((uint64_t)v44, &qword_100375620);
    sub_100015704((uint64_t)v46, &qword_100375620);
    if (v52(v51, 1, v31) == 1)
    {
      sub_100015704((uint64_t)v37, &qword_100375620);
      goto LABEL_8;
    }
LABEL_6:
    v53 = &qword_10037BF60;
    v54 = (uint64_t)v37;
LABEL_28:
    sub_100015704(v54, v53);
    goto LABEL_29;
  }
  sub_10000E660((uint64_t)v37, (uint64_t)v41, &qword_100375620);
  if (v52(v51, 1, v31) == 1)
  {
    sub_100015704((uint64_t)v44, &qword_100375620);
    sub_100015704((uint64_t)v46, &qword_100375620);
    sub_100004030((uint64_t)v41, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
    goto LABEL_6;
  }
  sub_100003E08(v51, (uint64_t)v34, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  v55 = sub_1001D3C4C((uint64_t)v41, (uint64_t)v34, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  sub_100004030((uint64_t)v34, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  sub_100015704((uint64_t)v44, &qword_100375620);
  sub_100015704((uint64_t)v46, &qword_100375620);
  sub_100004030((uint64_t)v41, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  sub_100015704((uint64_t)v37, &qword_100375620);
  if ((v55 & 1) == 0)
    goto LABEL_29;
LABEL_8:
  v56 = v126;
  v57 = v123;
  sub_10000E660(v126 + v50[6], v123, &qword_100375628);
  v59 = (uint64_t)v127;
  v58 = v128;
  sub_10000E660(v128 + v50[6], (uint64_t)v127, &qword_100375628);
  v60 = v125;
  v61 = v125 + *(int *)(v121 + 48);
  sub_10000E660(v57, v125, &qword_100375628);
  sub_10000E660(v59, v61, &qword_100375628);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  v63 = v124;
  if (v62(v60, 1, v124) == 1)
  {
    sub_100015704(v59, &qword_100375628);
    sub_100015704(v57, &qword_100375628);
    if (v62(v61, 1, v63) == 1)
    {
      sub_100015704(v60, &qword_100375628);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v64 = v119;
  sub_10000E660(v60, v119, &qword_100375628);
  if (v62(v61, 1, v63) == 1)
  {
    sub_100015704((uint64_t)v127, &qword_100375628);
    sub_100015704(v57, &qword_100375628);
    sub_100004030(v64, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
LABEL_13:
    v53 = &qword_10037BF58;
    v54 = v60;
    goto LABEL_28;
  }
  v65 = v110;
  sub_100003E08(v61, v110, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  v66 = sub_1001C6F68(v64, v65, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  sub_100004030(v65, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  sub_100015704((uint64_t)v127, &qword_100375628);
  sub_100015704(v57, &qword_100375628);
  sub_100004030(v64, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  sub_100015704(v60, &qword_100375628);
  if ((v66 & 1) == 0)
    goto LABEL_29;
LABEL_15:
  v67 = v118;
  sub_10000E660(v56 + v50[7], v118, &qword_100375630);
  v127 = v50;
  v68 = v120;
  sub_10000E660(v58 + v50[7], v120, &qword_100375630);
  v69 = v115;
  v70 = v115 + *(int *)(v112 + 48);
  sub_10000E660(v67, v115, &qword_100375630);
  sub_10000E660(v68, v70, &qword_100375630);
  v71 = v114;
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48);
  if (v72(v69, 1, v114) != 1)
  {
    v77 = v109;
    sub_10000E660(v69, v109, &qword_100375630);
    v78 = v72(v70, 1, v71);
    v75 = (uint64_t)v116;
    v79 = v117;
    if (v78 != 1)
    {
      v80 = v104;
      sub_100003E08(v70, v104, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
      v81 = sub_1001D47B8(v77, v80, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
      sub_100004030(v80, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
      sub_100015704(v120, &qword_100375630);
      sub_100015704(v118, &qword_100375630);
      sub_100004030(v77, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
      sub_100015704(v69, &qword_100375630);
      v74 = (uint64_t)v79;
      v76 = (uint64_t)v111;
      if ((v81 & 1) == 0)
        goto LABEL_29;
      goto LABEL_22;
    }
    sub_100015704(v120, &qword_100375630);
    sub_100015704(v67, &qword_100375630);
    sub_100004030(v77, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
    goto LABEL_20;
  }
  sub_100015704(v68, &qword_100375630);
  sub_100015704(v67, &qword_100375630);
  v73 = v72(v70, 1, v71);
  v75 = (uint64_t)v116;
  v74 = (uint64_t)v117;
  v76 = (uint64_t)v111;
  if (v73 != 1)
  {
LABEL_20:
    v53 = &qword_10037BF50;
    v54 = v69;
    goto LABEL_28;
  }
  sub_100015704(v69, &qword_100375630);
LABEL_22:
  v82 = (uint64_t)v127;
  sub_10000E660(v56 + v127[8], v76, &qword_100375638);
  sub_10000E660(v58 + *(int *)(v82 + 32), v75, &qword_100375638);
  v83 = v108;
  v84 = v108 + *(int *)(v105 + 48);
  sub_10000E660(v76, v108, &qword_100375638);
  sub_10000E660(v75, v84, &qword_100375638);
  v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  v86 = v107;
  if (v85(v83, 1, v107) == 1)
  {
    sub_100015704(v75, &qword_100375638);
    sub_100015704(v76, &qword_100375638);
    if (v85(v84, 1, v86) == 1)
    {
      sub_100015704(v83, &qword_100375638);
LABEL_32:
      v91 = v102;
      v92 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
      v93 = v100;
      v94 = v103;
      v92(v100, v56, v103);
      v95 = v101;
      v92(v101, v58, v94);
      v96 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v87 = dispatch thunk of static Equatable.== infix(_:_:)(v93, v95, v94, v96);
      v97 = *(void (**)(char *, uint64_t))(v91 + 8);
      v97(v95, v94);
      v97(v93, v94);
      return v87 & 1;
    }
    goto LABEL_27;
  }
  sub_10000E660(v83, v74, &qword_100375638);
  if (v85(v84, 1, v86) == 1)
  {
    sub_100015704(v75, &qword_100375638);
    sub_100015704(v76, &qword_100375638);
    sub_100004030(v74, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
LABEL_27:
    v53 = &qword_10037BF48;
    v54 = v83;
    goto LABEL_28;
  }
  v89 = v99;
  sub_100003E08(v84, v99, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  v90 = sub_1001C5624(v74, v89);
  sub_100004030(v89, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  sub_100015704(v75, &qword_100375638);
  sub_100015704(v76, &qword_100375638);
  sub_100004030(v74, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  sub_100015704(v83, &qword_100375638);
  if ((v90 & 1) != 0)
    goto LABEL_32;
LABEL_29:
  v87 = 0;
  return v87 & 1;
}

uint64_t sub_1001D0BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  v12 = *(int *)(v11 + 20);
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_12;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_12;
  }
  v15 = *(int *)(v11 + 24);
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
    {
LABEL_12:
      v20 = 0;
      return v20 & 1;
    }
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_12;
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  v19 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_1001D0D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  int *v23;
  uint64_t v24;
  _DWORD *v25;
  char v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  char v31;
  _DWORD *v32;
  int v33;
  uint64_t v34;
  _DWORD *v35;
  char v36;
  _DWORD *v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  char v42;
  uint64_t v43;
  _DWORD *v44;
  char v45;
  _DWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v4 = type metadata accessor for UnknownStorage(0);
  v65 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v64 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v63 = (char *)&v61 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BEF8);
  __chkstk_darwin(v11);
  v66 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_1003755A8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v61 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v61 - v20;
  v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  v23 = v22;
  v24 = v22[5];
  v25 = (_DWORD *)(a1 + v24);
  v26 = *(_BYTE *)(a1 + v24 + 4);
  v27 = (_DWORD *)(a2 + v24);
  v28 = *(unsigned __int8 *)(a2 + v24 + 4);
  if ((v26 & 1) != 0)
  {
    if (!v28)
      goto LABEL_36;
  }
  else
  {
    if (*v25 != *v27)
      LOBYTE(v28) = 1;
    if ((v28 & 1) != 0)
      goto LABEL_36;
  }
  v29 = v22[6];
  v30 = (_DWORD *)(a1 + v29);
  v31 = *(_BYTE *)(a1 + v29 + 4);
  v32 = (_DWORD *)(a2 + v29);
  v33 = *(unsigned __int8 *)(a2 + v29 + 4);
  if ((v31 & 1) != 0)
  {
    if (!v33)
      goto LABEL_36;
  }
  else
  {
    if (*v30 != *v32)
      LOBYTE(v33) = 1;
    if ((v33 & 1) != 0)
      goto LABEL_36;
  }
  v34 = v22[7];
  v35 = (_DWORD *)(a1 + v34);
  v36 = *(_BYTE *)(a1 + v34 + 4);
  v37 = (_DWORD *)(a2 + v34);
  v38 = *(unsigned __int8 *)(a2 + v34 + 4);
  if ((v36 & 1) != 0)
  {
    if (!v38)
      goto LABEL_36;
  }
  else
  {
    if (*v35 != *v37)
      LOBYTE(v38) = 1;
    if ((v38 & 1) != 0)
      goto LABEL_36;
  }
  v61 = v4;
  v39 = v22[8];
  v40 = *(unsigned __int8 *)(a1 + v39);
  v41 = *(unsigned __int8 *)(a2 + v39);
  if (v40 == 4)
  {
    if (v41 != 4)
      goto LABEL_36;
LABEL_24:
    v43 = v22[9];
    v44 = (_DWORD *)(a1 + v43);
    v45 = *(_BYTE *)(a1 + v43 + 4);
    v46 = (_DWORD *)(a2 + v43);
    v47 = *(unsigned __int8 *)(a2 + v43 + 4);
    if ((v45 & 1) != 0)
    {
      if (!v47)
        goto LABEL_36;
    }
    else
    {
      if (*v44 != *v46)
        LOBYTE(v47) = 1;
      if ((v47 & 1) != 0)
        goto LABEL_36;
    }
    sub_10000E660(a1 + v22[10], (uint64_t)v21, &qword_1003755A8);
    sub_10000E660(a2 + v23[10], (uint64_t)v19, &qword_1003755A8);
    v48 = v66;
    v49 = v66 + *(int *)(v11 + 48);
    sub_10000E660((uint64_t)v21, v66, &qword_1003755A8);
    sub_10000E660((uint64_t)v19, v49, &qword_1003755A8);
    v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v50(v48, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v19, &qword_1003755A8);
      sub_100015704((uint64_t)v21, &qword_1003755A8);
      if (v50(v49, 1, v8) == 1)
      {
        sub_100015704(v48, &qword_1003755A8);
LABEL_39:
        v54 = v65;
        v55 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
        v56 = v63;
        v57 = v61;
        v55(v63, a1, v61);
        v58 = v64;
        v55(v64, a2, v57);
        v59 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v58, v57, v59);
        v60 = *(void (**)(char *, uint64_t))(v54 + 8);
        v60(v58, v57);
        v60(v56, v57);
        return v42 & 1;
      }
    }
    else
    {
      sub_10000E660(v48, (uint64_t)v16, &qword_1003755A8);
      if (v50(v49, 1, v8) != 1)
      {
        v52 = v62;
        sub_100003E08(v49, v62, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
        v53 = sub_1001D47B8((uint64_t)v16, v52, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
        sub_100004030(v52, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
        sub_100015704((uint64_t)v19, &qword_1003755A8);
        sub_100015704((uint64_t)v21, &qword_1003755A8);
        sub_100004030((uint64_t)v16, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
        sub_100015704(v48, &qword_1003755A8);
        if ((v53 & 1) != 0)
          goto LABEL_39;
LABEL_36:
        v42 = 0;
        return v42 & 1;
      }
      sub_100015704((uint64_t)v19, &qword_1003755A8);
      sub_100015704((uint64_t)v21, &qword_1003755A8);
      sub_100004030((uint64_t)v16, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    }
    sub_100015704(v48, &qword_10037BEF8);
    goto LABEL_36;
  }
  v42 = 0;
  if (v41 != 4 && v40 == v41)
    goto LABEL_24;
  return v42 & 1;
}

uint64_t sub_1001D1260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13 || (sub_1001B88C4(v12, v13) & 1) != 0)
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1, v4);
    v14(v8, a2, v4);
    v15 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v15);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1001D1394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  _DWORD *v53;
  int v54;
  uint64_t v55;
  _DWORD *v56;
  char v57;
  _DWORD *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *);
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;

  v4 = type metadata accessor for UnknownStorage(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = __chkstk_darwin(v4);
  v69 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v68 = (char *)&v67 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v74 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BF80);
  __chkstk_darwin(v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_1003755E0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v67 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v67 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  v24 = *(int *)(v23 + 20);
  v72 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  sub_10000E660(v25, (uint64_t)v22, &qword_1003755E0);
  v27 = v26[5];
  v73 = a2;
  sub_10000E660(a2 + v27, (uint64_t)v20, &qword_1003755E0);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_1003755E0);
  sub_10000E660((uint64_t)v20, v28, &qword_1003755E0);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    v30 = (uint64_t)v74;
    sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_1003755E0);
    if (v29(v28, 1, v8) != 1)
    {
      sub_100003E08(v28, v30, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      v33 = sub_1001D3C4C((uint64_t)v17, v30, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100004030(v30, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v20, &qword_1003755E0);
      sub_100015704((uint64_t)v22, &qword_1003755E0);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v13, &qword_1003755E0);
      if ((v33 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_100015704((uint64_t)v20, &qword_1003755E0);
    sub_100015704((uint64_t)v22, &qword_1003755E0);
    sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
LABEL_6:
    sub_100015704((uint64_t)v13, &qword_10037BF80);
    goto LABEL_7;
  }
  sub_100015704((uint64_t)v20, &qword_1003755E0);
  sub_100015704((uint64_t)v22, &qword_1003755E0);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v13, &qword_1003755E0);
LABEL_10:
  v34 = v26[6];
  v35 = v73;
  v36 = (_DWORD *)(v72 + v34);
  v37 = *(_BYTE *)(v72 + v34 + 4);
  v38 = (_DWORD *)(v73 + v34);
  v39 = *(unsigned __int8 *)(v73 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_7;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = (_DWORD *)(v72 + v40);
  v42 = *(_BYTE *)(v72 + v40 + 4);
  v43 = (_DWORD *)(v73 + v40);
  v44 = *(unsigned __int8 *)(v73 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_7;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_7;
  }
  v45 = v26[8];
  v46 = (_DWORD *)(v72 + v45);
  v47 = *(_BYTE *)(v72 + v45 + 4);
  v48 = (_DWORD *)(v73 + v45);
  v49 = *(unsigned __int8 *)(v73 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_7;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_7;
  }
  v50 = v26[9];
  v51 = (_DWORD *)(v72 + v50);
  v52 = *(_BYTE *)(v72 + v50 + 4);
  v53 = (_DWORD *)(v73 + v50);
  v54 = *(unsigned __int8 *)(v73 + v50 + 4);
  if ((v52 & 1) != 0)
  {
    if (!v54)
      goto LABEL_7;
  }
  else
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) != 0)
      goto LABEL_7;
  }
  v55 = v26[10];
  v56 = (_DWORD *)(v72 + v55);
  v57 = *(_BYTE *)(v72 + v55 + 4);
  v58 = (_DWORD *)(v73 + v55);
  v59 = *(unsigned __int8 *)(v73 + v55 + 4);
  if ((v57 & 1) != 0)
  {
    if (v59)
    {
LABEL_40:
      v61 = v70;
      v60 = v71;
      v62 = *(void (**)(char *))(v70 + 16);
      v63 = v68;
      v62(v68);
      v64 = v69;
      ((void (*)(char *, uint64_t, uint64_t))v62)(v69, v35, v60);
      v65 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v64, v60, v65);
      v66 = *(void (**)(char *, uint64_t))(v61 + 8);
      v66(v64, v60);
      v66(v63, v60);
      return v31 & 1;
    }
  }
  else
  {
    if (*v56 != *v58)
      LOBYTE(v59) = 1;
    if ((v59 & 1) == 0)
      goto LABEL_40;
  }
LABEL_7:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_1001D1868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a1;
  v69 = a2;
  v2 = type metadata accessor for UnknownStorage(0);
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  v3 = __chkstk_darwin(v2);
  v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v57 = (char *)&v56 - v5;
  v66 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v63 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v56 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000039AC(&qword_10037BEB0);
  __chkstk_darwin(v62);
  v67 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000039AC(&qword_1003756D8);
  v9 = __chkstk_darwin(v8);
  v61 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v64 = (uint64_t)&v56 - v12;
  __chkstk_darwin(v11);
  v65 = (uint64_t)&v56 - v13;
  v14 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000039AC(&qword_10037BEB8);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000039AC(&qword_1003756D0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v56 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v56 - v28;
  v30 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_10000E660(v68 + *(int *)(v30 + 20), (uint64_t)v29, &qword_1003756D0);
  sub_10000E660(v69 + *(int *)(v30 + 20), (uint64_t)v27, &qword_1003756D0);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_10000E660((uint64_t)v29, (uint64_t)v20, &qword_1003756D0);
  sub_10000E660((uint64_t)v27, v31, &qword_1003756D0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) != 1)
  {
    sub_10000E660((uint64_t)v20, (uint64_t)v24, &qword_1003756D0);
    if (v32(v31, 1, v14) != 1)
    {
      sub_100003E08(v31, (uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v35 = sub_1001D47B8((uint64_t)v24, (uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      sub_100015704((uint64_t)v27, &qword_1003756D0);
      sub_100015704((uint64_t)v29, &qword_1003756D0);
      sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      sub_100015704((uint64_t)v20, &qword_1003756D0);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_100015704((uint64_t)v27, &qword_1003756D0);
    sub_100015704((uint64_t)v29, &qword_1003756D0);
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
LABEL_6:
    v33 = &qword_10037BEB8;
    v34 = (uint64_t)v20;
LABEL_14:
    sub_100015704(v34, v33);
    goto LABEL_15;
  }
  sub_100015704((uint64_t)v27, &qword_1003756D0);
  sub_100015704((uint64_t)v29, &qword_1003756D0);
  if (v32(v31, 1, v14) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v20, &qword_1003756D0);
LABEL_8:
  v36 = v68;
  v37 = v65;
  sub_10000E660(v68 + *(int *)(v30 + 24), v65, &qword_1003756D8);
  v38 = v69;
  v39 = v64;
  sub_10000E660(v69 + *(int *)(v30 + 24), v64, &qword_1003756D8);
  v40 = v67;
  v41 = v67 + *(int *)(v62 + 48);
  sub_10000E660(v37, v67, &qword_1003756D8);
  sub_10000E660(v39, v41, &qword_1003756D8);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v43 = v66;
  if (v42(v40, 1, v66) == 1)
  {
    sub_100015704(v39, &qword_1003756D8);
    sub_100015704(v37, &qword_1003756D8);
    if (v42(v41, 1, v43) == 1)
    {
      sub_100015704(v40, &qword_1003756D8);
LABEL_18:
      v50 = v59;
      v49 = v60;
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v52 = v57;
      v51(v57, v36, v60);
      v53 = v58;
      v51(v58, v38, v49);
      v54 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v53, v49, v54);
      v55 = *(void (**)(char *, uint64_t))(v50 + 8);
      v55(v53, v49);
      v55(v52, v49);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  v44 = v61;
  sub_10000E660(v40, v61, &qword_1003756D8);
  if (v42(v41, 1, v43) == 1)
  {
    sub_100015704(v39, &qword_1003756D8);
    sub_100015704(v37, &qword_1003756D8);
    sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
LABEL_13:
    v33 = &qword_10037BEB0;
    v34 = v40;
    goto LABEL_14;
  }
  v47 = v56;
  sub_100003E08(v41, v56, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  v48 = sub_1001CD8A0(v44, v47);
  sub_100004030(v47, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  sub_100015704(v39, &qword_1003756D8);
  sub_100015704(v37, &qword_1003756D8);
  sub_100004030(v44, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  sub_100015704(v40, &qword_1003756D8);
  if ((v48 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_1001D1EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _DWORD *v27;
  char v28;
  _DWORD *v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;

  v4 = type metadata accessor for UnknownStorage(0);
  v88 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v87 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v86 = (char *)&v82 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_10037BEA8);
  __chkstk_darwin(v12);
  v89 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375560);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v82 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v82 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v24 = a2;
  v25 = (int *)v23;
  v26 = *(int *)(v23 + 20);
  v27 = (_DWORD *)(a1 + v26);
  v28 = *(_BYTE *)(a1 + v26 + 4);
  v29 = (_DWORD *)(v24 + v26);
  v30 = *(unsigned __int8 *)(v24 + v26 + 4);
  if ((v28 & 1) != 0)
  {
    if (!v30)
      goto LABEL_56;
  }
  else
  {
    if (*v27 != *v29)
      LOBYTE(v30) = 1;
    if ((v30 & 1) != 0)
      goto LABEL_56;
  }
  v31 = *(int *)(v23 + 24);
  v32 = (_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a1 + v31 + 8);
  v34 = (_QWORD *)(v24 + v31);
  v35 = v34[1];
  if (!v33)
  {
    v85 = v4;
    if (v35)
      goto LABEL_56;
    goto LABEL_14;
  }
  if (!v35)
    goto LABEL_56;
  v85 = v4;
  if (*v32 == *v34 && v33 == v35
    || (v36 = v24, v37 = _stringCompareWithSmolCheck(_:_:expecting:)(*v32, v33), v24 = v36, v38 = 0, (v37 & 1) != 0))
  {
LABEL_14:
    v39 = v25[7];
    v40 = *(unsigned __int8 *)(a1 + v39);
    v41 = *(unsigned __int8 *)(v24 + v39);
    if (v40 == 2)
    {
      if (v41 != 2)
        goto LABEL_56;
    }
    else if (v41 == 2 || ((((v41 & 1) == 0) ^ v40) & 1) == 0)
    {
      goto LABEL_56;
    }
    v42 = v25[8];
    v43 = (_QWORD *)(a1 + v42);
    v44 = *(_QWORD *)(a1 + v42 + 8);
    v45 = (_QWORD *)(v24 + v42);
    v46 = v45[1];
    if (v44)
    {
      if (!v46)
        goto LABEL_56;
      if (*v43 != *v45 || v44 != v46)
      {
        v47 = v24;
        v48 = _stringCompareWithSmolCheck(_:_:expecting:)(*v43, v44);
        v24 = v47;
        v38 = 0;
        if ((v48 & 1) == 0)
          return v38 & 1;
      }
    }
    else if (v46)
    {
      goto LABEL_56;
    }
    v49 = v25[9];
    v83 = a1;
    v50 = v24;
    sub_10000E660(a1 + v49, (uint64_t)v22, &qword_100375560);
    v51 = v25[9];
    v84 = v50;
    sub_10000E660(v50 + v51, (uint64_t)v20, &qword_100375560);
    v52 = v89;
    v53 = v89 + *(int *)(v12 + 48);
    sub_10000E660((uint64_t)v22, v89, &qword_100375560);
    sub_10000E660((uint64_t)v20, v53, &qword_100375560);
    v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v54(v52, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_100375560);
      v52 = v89;
      sub_100015704((uint64_t)v22, &qword_100375560);
      if (v54(v53, 1, v8) == 1)
      {
        sub_100015704(v52, &qword_100375560);
LABEL_33:
        v56 = v25[10];
        v58 = v83;
        v57 = v84;
        v59 = (_QWORD *)(v83 + v56);
        v60 = *(_QWORD *)(v83 + v56 + 8);
        v61 = (_QWORD *)(v84 + v56);
        v62 = v61[1];
        if (v60)
        {
          if (!v62)
            goto LABEL_56;
          if (*v59 != *v61 || v60 != v62)
          {
            v63 = _stringCompareWithSmolCheck(_:_:expecting:)(*v59, v60);
            v58 = v83;
            v57 = v84;
            v38 = 0;
            if ((v63 & 1) == 0)
              return v38 & 1;
          }
        }
        else if (v62)
        {
          goto LABEL_56;
        }
        v64 = v25[11];
        v65 = *(unsigned __int8 *)(v58 + v64);
        v66 = *(unsigned __int8 *)(v57 + v64);
        if (v65 == 2)
        {
          if (v66 != 2)
            goto LABEL_56;
        }
        else if (v66 == 2 || ((((v66 & 1) == 0) ^ v65) & 1) == 0)
        {
          goto LABEL_56;
        }
        v67 = v25[12];
        v68 = *(unsigned __int8 *)(v58 + v67);
        v69 = *(unsigned __int8 *)(v57 + v67);
        if (v68 == 2)
        {
          v70 = v85;
          if (v69 != 2)
            goto LABEL_56;
        }
        else
        {
          v70 = v85;
          if (v69 == 2 || ((((v69 & 1) == 0) ^ v68) & 1) == 0)
            goto LABEL_56;
        }
        v71 = v25[13];
        v72 = *(unsigned __int8 *)(v58 + v71);
        v73 = *(unsigned __int8 *)(v57 + v71);
        if (v72 != 2)
        {
          if (v73 == 2 || ((((v73 & 1) == 0) ^ v72) & 1) == 0)
            goto LABEL_56;
          goto LABEL_55;
        }
        if (v73 == 2)
        {
LABEL_55:
          v74 = v88;
          v75 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
          v76 = v86;
          v77 = v57;
          v75(v86, v58, v70);
          v78 = v87;
          v75(v87, v77, v70);
          v79 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
          v38 = dispatch thunk of static Equatable.== infix(_:_:)(v76, v78, v70, v79);
          v80 = *(void (**)(char *, uint64_t))(v74 + 8);
          v80(v78, v70);
          v80(v76, v70);
          return v38 & 1;
        }
LABEL_56:
        v38 = 0;
        return v38 & 1;
      }
    }
    else
    {
      sub_10000E660(v52, (uint64_t)v17, &qword_100375560);
      if (v54(v53, 1, v8) != 1)
      {
        sub_100003E08(v53, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Configuration);
        v55 = sub_1001D5634((uint64_t)v17, (uint64_t)v11);
        sub_100004030((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Configuration);
        sub_100015704((uint64_t)v20, &qword_100375560);
        sub_100015704((uint64_t)v22, &qword_100375560);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_Configuration);
        sub_100015704(v52, &qword_100375560);
        if ((v55 & 1) == 0)
          goto LABEL_56;
        goto LABEL_33;
      }
      sub_100015704((uint64_t)v20, &qword_100375560);
      sub_100015704((uint64_t)v22, &qword_100375560);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_Configuration);
    }
    sub_100015704(v52, &qword_10037BEA8);
    goto LABEL_56;
  }
  return v38 & 1;
}

uint64_t sub_1001D24EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v20;
  _DWORD *v21;
  char v22;
  _DWORD *v23;
  int v24;
  char v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 6)
  {
    if (v14 != 6)
      goto LABEL_19;
  }
  else if (v14 == 6 || v13 != v14)
  {
    goto LABEL_19;
  }
  v16 = v11[6];
  v17 = *(unsigned __int8 *)(a1 + v16);
  v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 != 7)
  {
    if (v18 == 7 || v17 != v18)
      goto LABEL_19;
LABEL_17:
    v20 = v11[7];
    v21 = (_DWORD *)(a1 + v20);
    v22 = *(_BYTE *)(a1 + v20 + 4);
    v23 = (_DWORD *)(a2 + v20);
    v24 = *(unsigned __int8 *)(a2 + v20 + 4);
    if ((v22 & 1) != 0)
    {
      if (!v24)
        goto LABEL_19;
    }
    else
    {
      if (*v21 != *v23)
        LOBYTE(v24) = 1;
      if ((v24 & 1) != 0)
        goto LABEL_19;
    }
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v27(v10, a1, v4);
    v27(v8, a2, v4);
    v28 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v25 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v28);
    v29 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29(v8, v4);
    v29(v10, v4);
    return v25 & 1;
  }
  if (v18 == 7)
    goto LABEL_17;
LABEL_19:
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_1001D268C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000039AC(&qword_10037BF68);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375618);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 9)
  {
    if (v27 != 9)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_100375618);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_100375618);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_100375618);
    sub_10000E660((uint64_t)v20, v29, &qword_100375618);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_100375618);
      sub_100015704((uint64_t)v22, &qword_100375618);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_100375618);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_100375618);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, v42, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
        v32 = sub_100065A60((uint64_t)v17, v31, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, sub_1001A0874);
        sub_100004030(v31, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
        sub_100015704((uint64_t)v20, &qword_100375618);
        sub_100015704((uint64_t)v22, &qword_100375618);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
        sub_100015704((uint64_t)v13, &qword_100375618);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_100375618);
      sub_100015704((uint64_t)v22, &qword_100375618);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
    }
    sub_100015704((uint64_t)v13, &qword_10037BF68);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 9 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001D2A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0) + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 2)
  {
    if (v13 != 2)
    {
LABEL_7:
      v16 = 0;
      return v16 & 1;
    }
  }
  else if (v13 == 2 || ((((v13 & 1) == 0) ^ v12) & 1) == 0)
  {
    goto LABEL_7;
  }
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  v15 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v15);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t sub_1001D2BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v4 = type metadata accessor for UnknownStorage(0);
  v75 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v74 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (char *)&v69 - v7;
  v82 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v79 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v72 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1000039AC(&qword_10037BE90);
  __chkstk_darwin(v78);
  v83 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000039AC(&qword_1003756F8);
  v11 = __chkstk_darwin(v10);
  v76 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v80 = (uint64_t)&v69 - v14;
  __chkstk_darwin(v13);
  v81 = (uint64_t)&v69 - v15;
  v16 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v77 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000039AC(&qword_10037BE98);
  __chkstk_darwin(v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000039AC(&qword_1003756F0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v69 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v69 - v29;
  v31 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  v32 = a1;
  v33 = v31;
  v34 = *(int *)(v31 + 20);
  v35 = *(unsigned __int8 *)(v32 + v34);
  v84 = a2;
  v36 = *(unsigned __int8 *)(a2 + v34);
  if (v35 == 2)
  {
    if (v36 != 2)
      goto LABEL_27;
  }
  else if (v36 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
  {
    goto LABEL_27;
  }
  v37 = *(int *)(v31 + 24);
  v38 = (_QWORD *)(v32 + v37);
  v39 = *(_QWORD *)(v32 + v37 + 8);
  v40 = (_QWORD *)(v84 + v37);
  v41 = v40[1];
  if (!v39)
  {
    v71 = v4;
    if (v41)
      goto LABEL_27;
    goto LABEL_13;
  }
  if (!v41)
    goto LABEL_27;
  v71 = v4;
  if (*v38 == *v40 && v39 == v41
    || (v42 = v32, v43 = _stringCompareWithSmolCheck(_:_:expecting:)(*v38, v39), v32 = v42, v44 = 0, (v43 & 1) != 0))
  {
LABEL_13:
    v45 = *(int *)(v33 + 28);
    v70 = v32;
    sub_10000E660(v32 + v45, (uint64_t)v30, &qword_1003756F0);
    sub_10000E660(v84 + *(int *)(v33 + 28), (uint64_t)v28, &qword_1003756F0);
    v46 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_10000E660((uint64_t)v30, (uint64_t)v21, &qword_1003756F0);
    sub_10000E660((uint64_t)v28, v46, &qword_1003756F0);
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v47((uint64_t)v21, 1, v16) == 1)
    {
      sub_100015704((uint64_t)v28, &qword_1003756F0);
      sub_100015704((uint64_t)v30, &qword_1003756F0);
      if (v47(v46, 1, v16) == 1)
      {
        sub_100015704((uint64_t)v21, &qword_1003756F0);
LABEL_20:
        v52 = v81;
        sub_10000E660(v70 + *(int *)(v33 + 32), v81, &qword_1003756F8);
        v53 = v80;
        sub_10000E660(v84 + *(int *)(v33 + 32), v80, &qword_1003756F8);
        v54 = v83;
        v55 = v83 + *(int *)(v78 + 48);
        sub_10000E660(v52, v83, &qword_1003756F8);
        sub_10000E660(v53, v55, &qword_1003756F8);
        v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
        v57 = v82;
        if (v56(v54, 1, v82) == 1)
        {
          sub_100015704(v53, &qword_1003756F8);
          sub_100015704(v52, &qword_1003756F8);
          if (v56(v55, 1, v57) == 1)
          {
            sub_100015704(v54, &qword_1003756F8);
LABEL_30:
            v62 = v75;
            v63 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
            v64 = v73;
            v65 = v71;
            v63(v73, v70, v71);
            v66 = v74;
            v63(v74, v84, v65);
            v67 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
            v44 = dispatch thunk of static Equatable.== infix(_:_:)(v64, v66, v65, v67);
            v68 = *(void (**)(char *, uint64_t))(v62 + 8);
            v68(v66, v65);
            v68(v64, v65);
            return v44 & 1;
          }
          goto LABEL_25;
        }
        v58 = v76;
        sub_10000E660(v54, v76, &qword_1003756F8);
        if (v56(v55, 1, v57) == 1)
        {
          sub_100015704(v53, &qword_1003756F8);
          sub_100015704(v52, &qword_1003756F8);
          sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
LABEL_25:
          v48 = &qword_10037BE90;
          v49 = v54;
          goto LABEL_26;
        }
        v60 = v72;
        sub_100003E08(v55, v72, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
        v61 = sub_1001D32FC(v58, v60);
        sub_100004030(v60, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
        sub_100015704(v53, &qword_1003756F8);
        sub_100015704(v52, &qword_1003756F8);
        sub_100004030(v58, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
        sub_100015704(v54, &qword_1003756F8);
        if ((v61 & 1) != 0)
          goto LABEL_30;
LABEL_27:
        v44 = 0;
        return v44 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v21, (uint64_t)v25, &qword_1003756F0);
      if (v47(v46, 1, v16) != 1)
      {
        v50 = v77;
        sub_100003E08(v46, v77, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
        v51 = sub_1001D2A98((uint64_t)v25, v50);
        sub_100004030(v50, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
        sub_100015704((uint64_t)v28, &qword_1003756F0);
        sub_100015704((uint64_t)v30, &qword_1003756F0);
        sub_100004030((uint64_t)v25, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
        sub_100015704((uint64_t)v21, &qword_1003756F0);
        if ((v51 & 1) == 0)
          goto LABEL_27;
        goto LABEL_20;
      }
      sub_100015704((uint64_t)v28, &qword_1003756F0);
      sub_100015704((uint64_t)v30, &qword_1003756F0);
      sub_100004030((uint64_t)v25, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
    }
    v48 = &qword_10037BE98;
    v49 = (uint64_t)v21;
LABEL_26:
    sub_100015704(v49, v48);
    goto LABEL_27;
  }
  return v44 & 1;
}

uint64_t sub_1001D32FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v41 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v12 = (int *)v11;
  v13 = *(int *)(v11 + 20);
  v14 = (_DWORD *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 4);
  v16 = (_DWORD *)(a2 + v13);
  v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_37;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_37;
  }
  v18 = *(int *)(v11 + 24);
  v19 = (_QWORD *)(a1 + v18);
  v20 = *(_QWORD *)(a1 + v18 + 8);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  if (!v20)
  {
    if (v22)
      goto LABEL_37;
    goto LABEL_16;
  }
  if (!v22)
    goto LABEL_37;
  v23 = *v19 == *v21 && v20 == v22;
  if (v23 || (v24 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20) & 1) != 0))
  {
LABEL_16:
    v25 = v12[7];
    v26 = *(unsigned __int8 *)(a1 + v25);
    v27 = *(unsigned __int8 *)(a2 + v25);
    if (v26 == 2)
    {
      if (v27 != 2)
        goto LABEL_37;
    }
    else if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
    {
      goto LABEL_37;
    }
    v28 = v12[8];
    v29 = *(unsigned __int8 *)(a1 + v28);
    v30 = *(unsigned __int8 *)(a2 + v28);
    if (v29 == 2)
    {
      if (v30 != 2)
        goto LABEL_37;
    }
    else if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0)
    {
      goto LABEL_37;
    }
    v31 = v12[9];
    v32 = *(unsigned __int8 *)(a1 + v31);
    v33 = *(unsigned __int8 *)(a2 + v31);
    if (v32 == 2)
    {
      if (v33 != 2)
        goto LABEL_37;
    }
    else if (v33 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
    {
      goto LABEL_37;
    }
    v34 = v12[10];
    v35 = *(unsigned __int8 *)(a1 + v34);
    v36 = *(unsigned __int8 *)(a2 + v34);
    if (v35 != 2)
    {
      if (v36 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
        goto LABEL_37;
      goto LABEL_36;
    }
    if (v36 == 2)
    {
LABEL_36:
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v37(v10, a1, v4);
      v37(v8, a2, v4);
      v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v38);
      v39 = *(void (**)(char *, uint64_t))(v5 + 8);
      v39(v8, v4);
      v39(v10, v4);
      return v24 & 1;
    }
LABEL_37:
    v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1001D3574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  char v17;
  _DWORD *v18;
  int v19;
  uint64_t v20;
  _DWORD *v21;
  char v22;
  _DWORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  int v29;
  uint64_t v30;
  _DWORD *v31;
  char v32;
  _DWORD *v33;
  int v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  _DWORD *v53;
  int v54;
  uint64_t v55;
  _DWORD *v56;
  char v57;
  _DWORD *v58;
  int v59;
  char v60;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v65 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_56;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_56;
  }
  v15 = v11[6];
  v16 = (_DWORD *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 4);
  v18 = (_DWORD *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) != 0)
  {
    if (!v19)
      goto LABEL_56;
  }
  else
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      goto LABEL_56;
  }
  v20 = v11[7];
  v21 = (_DWORD *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 4);
  v23 = (_DWORD *)(a2 + v20);
  v24 = *(unsigned __int8 *)(a2 + v20 + 4);
  if ((v22 & 1) != 0)
  {
    if (!v24)
      goto LABEL_56;
  }
  else
  {
    if (*v21 != *v23)
      LOBYTE(v24) = 1;
    if ((v24 & 1) != 0)
      goto LABEL_56;
  }
  v25 = v11[8];
  v26 = (_DWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 4);
  v28 = (_DWORD *)(a2 + v25);
  v29 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v29)
      goto LABEL_56;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v29) = 1;
    if ((v29 & 1) != 0)
      goto LABEL_56;
  }
  v30 = v11[9];
  v31 = (_DWORD *)(a1 + v30);
  v32 = *(_BYTE *)(a1 + v30 + 4);
  v33 = (_DWORD *)(a2 + v30);
  v34 = *(unsigned __int8 *)(a2 + v30 + 4);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_56;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_56;
  }
  v35 = v11[10];
  v36 = (_DWORD *)(a1 + v35);
  v37 = *(_BYTE *)(a1 + v35 + 4);
  v38 = (_DWORD *)(a2 + v35);
  v39 = *(unsigned __int8 *)(a2 + v35 + 4);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_56;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_56;
  }
  v40 = v11[11];
  v41 = (_DWORD *)(a1 + v40);
  v42 = *(_BYTE *)(a1 + v40 + 4);
  v43 = (_DWORD *)(a2 + v40);
  v44 = *(unsigned __int8 *)(a2 + v40 + 4);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_56;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_56;
  }
  v45 = v11[12];
  v46 = (_DWORD *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 4);
  v48 = (_DWORD *)(a2 + v45);
  v49 = *(unsigned __int8 *)(a2 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_56;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_56;
  }
  v50 = v11[13];
  v51 = (_DWORD *)(a1 + v50);
  v52 = *(_BYTE *)(a1 + v50 + 4);
  v53 = (_DWORD *)(a2 + v50);
  v54 = *(unsigned __int8 *)(a2 + v50 + 4);
  if ((v52 & 1) == 0)
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) != 0)
      goto LABEL_56;
LABEL_54:
    v55 = v11[14];
    v56 = (_DWORD *)(a1 + v55);
    v57 = *(_BYTE *)(a1 + v55 + 4);
    v58 = (_DWORD *)(a2 + v55);
    v59 = *(unsigned __int8 *)(a2 + v55 + 4);
    if ((v57 & 1) != 0)
    {
      if (!v59)
        goto LABEL_56;
    }
    else
    {
      if (*v56 != *v58)
        LOBYTE(v59) = 1;
      if ((v59 & 1) != 0)
        goto LABEL_56;
    }
    v62 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v62(v10, a1, v4);
    v62(v8, a2, v4);
    v63 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v60 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v63);
    v64 = *(void (**)(char *, uint64_t))(v5 + 8);
    v64(v8, v4);
    v64(v10, v4);
    return v60 & 1;
  }
  if (v54)
    goto LABEL_54;
LABEL_56:
  v60 = 0;
  return v60 & 1;
}

uint64_t sub_1001D3894(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  v12 = *(int *)(v11 + 32);
  v13 = *((unsigned __int8 *)a1 + v12);
  v14 = *((unsigned __int8 *)a2 + v12);
  if (v13 == 7)
  {
    if (v14 != 7)
    {
LABEL_13:
      v19 = 0;
      return v19 & 1;
    }
  }
  else if (v14 == 7 || v13 != v14)
  {
    goto LABEL_13;
  }
  if ((sub_10010B2D8(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t (*)(char *, char *))sub_1001D3574) & 1) == 0|| (sub_1001C1FE8(a1[1], a2[1]) & 1) == 0|| (sub_10010B2D8(a1[2], a2[2], type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t (*)(char *, char *))sub_1001CE090) & 1) == 0)
  {
    goto LABEL_13;
  }
  v16 = (char *)a1 + *(int *)(v11 + 28);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v10, v16, v4);
  v17(v8, (char *)a2 + *(int *)(v11 + 28), v4);
  v18 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v18);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t sub_1001D3A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  char v37;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v42 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_27;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_27;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_27;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_27;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_27;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_27;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) == 0)
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_27;
LABEL_25:
    v32 = v11[9];
    v33 = (_DWORD *)(a1 + v32);
    v34 = *(_BYTE *)(a1 + v32 + 4);
    v35 = (_DWORD *)(a2 + v32);
    v36 = *(unsigned __int8 *)(a2 + v32 + 4);
    if ((v34 & 1) != 0)
    {
      if (!v36)
        goto LABEL_27;
    }
    else
    {
      if (*v33 != *v35)
        LOBYTE(v36) = 1;
      if ((v36 & 1) != 0)
        goto LABEL_27;
    }
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39(v10, a1, v4);
    v39(v8, a2, v4);
    v40 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v37 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v40);
    v41 = *(void (**)(char *, uint64_t))(v5 + 8);
    v41(v8, v4);
    v41(v10, v4);
    return v37 & 1;
  }
  if (v31)
    goto LABEL_25;
LABEL_27:
  v37 = 0;
  return v37 & 1;
}

uint64_t sub_1001D3C4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  char v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  _DWORD *v20;
  char v21;
  _DWORD *v22;
  int v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  v13 = a3(0);
  v14 = *(int *)(v13 + 20);
  v15 = (_DWORD *)(a1 + v14);
  v16 = *(_BYTE *)(a1 + v14 + 4);
  v17 = (_DWORD *)(a2 + v14);
  v18 = *(unsigned __int8 *)(a2 + v14 + 4);
  if ((v16 & 1) == 0)
  {
    if (*v15 != *v17)
      LOBYTE(v18) = 1;
    if ((v18 & 1) != 0)
      goto LABEL_9;
LABEL_7:
    v19 = *(int *)(v13 + 24);
    v20 = (_DWORD *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 4);
    v22 = (_DWORD *)(a2 + v19);
    v23 = *(unsigned __int8 *)(a2 + v19 + 4);
    if ((v21 & 1) != 0)
    {
      if (!v23)
        goto LABEL_9;
    }
    else
    {
      if (*v20 != *v22)
        LOBYTE(v23) = 1;
      if ((v23 & 1) != 0)
        goto LABEL_9;
    }
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v25(v12, a1, v6);
    v25(v10, a2, v6);
    v26 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v24 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v26);
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v10, v6);
    v27(v12, v6);
    return v24 & 1;
  }
  if (v18)
    goto LABEL_7;
LABEL_9:
  v24 = 0;
  return v24 & 1;
}

uint64_t sub_1001D3DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  _DWORD *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *);
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v6 = type metadata accessor for UnknownStorage(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  v7 = __chkstk_darwin(v6);
  v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v47 = (char *)&v47 - v9;
  v10 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000039AC(&qword_10037BF80);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000039AC(&qword_1003755E0);
  v17 = __chkstk_darwin(v16);
  v54 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v47 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v47 - v22;
  v24 = a3(0);
  v25 = *(int *)(v24 + 20);
  v51 = a1;
  sub_10000E660(a1 + v25, (uint64_t)v23, &qword_1003755E0);
  v26 = *(int *)(v24 + 20);
  v52 = a2;
  sub_10000E660(a2 + v26, (uint64_t)v21, &qword_1003755E0);
  v27 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10000E660((uint64_t)v23, (uint64_t)v15, &qword_1003755E0);
  sub_10000E660((uint64_t)v21, v27, &qword_1003755E0);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v28((uint64_t)v15, 1, v10) != 1)
  {
    v29 = (uint64_t)v53;
    v30 = v54;
    sub_10000E660((uint64_t)v15, v54, &qword_1003755E0);
    if (v28(v27, 1, v10) != 1)
    {
      sub_100003E08(v27, v29, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      v33 = sub_1001D3C4C(v30, v29, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100004030(v29, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v21, &qword_1003755E0);
      sub_100015704((uint64_t)v23, &qword_1003755E0);
      sub_100004030(v30, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
      sub_100015704((uint64_t)v15, &qword_1003755E0);
      if ((v33 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_100015704((uint64_t)v21, &qword_1003755E0);
    sub_100015704((uint64_t)v23, &qword_1003755E0);
    sub_100004030(v30, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
LABEL_6:
    sub_100015704((uint64_t)v15, &qword_10037BF80);
    goto LABEL_7;
  }
  sub_100015704((uint64_t)v21, &qword_1003755E0);
  sub_100015704((uint64_t)v23, &qword_1003755E0);
  if (v28(v27, 1, v10) != 1)
    goto LABEL_6;
  sub_100015704((uint64_t)v15, &qword_1003755E0);
LABEL_10:
  v34 = *(int *)(v24 + 24);
  v35 = v52;
  v36 = (_DWORD *)(v51 + v34);
  v37 = *(_BYTE *)(v51 + v34 + 4);
  v38 = (_DWORD *)(v52 + v34);
  v39 = *(unsigned __int8 *)(v52 + v34 + 4);
  if ((v37 & 1) != 0)
  {
    if (v39)
    {
LABEL_16:
      v41 = v49;
      v40 = v50;
      v42 = *(void (**)(char *))(v49 + 16);
      v43 = v47;
      v42(v47);
      v44 = v48;
      ((void (*)(char *, uint64_t, uint64_t))v42)(v48, v35, v40);
      v45 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v44, v40, v45);
      v46 = *(void (**)(char *, uint64_t))(v41 + 8);
      v46(v44, v40);
      v46(v43, v40);
      return v31 & 1;
    }
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) == 0)
      goto LABEL_16;
  }
LABEL_7:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_1001D41D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v4 = type metadata accessor for UnknownStorage(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  v5 = __chkstk_darwin(v4);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v60 = (char *)&v58 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000039AC(&qword_10037BFC8);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000039AC(&qword_1003755B0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v58 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v58 - v22;
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v25 = a2;
  v26 = v24;
  v27 = v24[5];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(v25 + v27);
  v31 = *(unsigned __int8 *)(v25 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_25;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_25;
  }
  v32 = v24[6];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(v25 + v32);
  v36 = *(unsigned __int8 *)(v25 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_25;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_25;
  }
  v37 = v24[7];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(v25 + v37);
  v41 = *(unsigned __int8 *)(v25 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_25;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_25;
  }
  v42 = v24[8];
  v58 = a1;
  v43 = a1 + v42;
  v44 = v25;
  sub_10000E660(v43, (uint64_t)v23, &qword_1003755B0);
  v45 = v26[8];
  v59 = v44;
  sub_10000E660(v44 + v45, (uint64_t)v21, &qword_1003755B0);
  v46 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10000E660((uint64_t)v23, (uint64_t)v14, &qword_1003755B0);
  sub_10000E660((uint64_t)v21, v46, &qword_1003755B0);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v47((uint64_t)v14, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v21, &qword_1003755B0);
    sub_100015704((uint64_t)v23, &qword_1003755B0);
    if (v47(v46, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v14, &qword_1003755B0);
LABEL_28:
      v52 = v62;
      v51 = v63;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v54 = v60;
      v53(v60, v58, v63);
      v55 = v61;
      v53(v61, v59, v51);
      v56 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v48 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v55, v51, v56);
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v55, v51);
      v57(v54, v51);
      return v48 & 1;
    }
    goto LABEL_24;
  }
  sub_10000E660((uint64_t)v14, (uint64_t)v18, &qword_1003755B0);
  if (v47(v46, 1, v8) == 1)
  {
    sub_100015704((uint64_t)v21, &qword_1003755B0);
    sub_100015704((uint64_t)v23, &qword_1003755B0);
    sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_Plmn);
LABEL_24:
    sub_100015704((uint64_t)v14, &qword_10037BFC8);
    goto LABEL_25;
  }
  sub_100003E08(v46, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  v50 = sub_1001D47B8((uint64_t)v18, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  sub_100004030((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  sub_100015704((uint64_t)v21, &qword_1003755B0);
  sub_100015704((uint64_t)v23, &qword_1003755B0);
  sub_100004030((uint64_t)v18, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  sub_100015704((uint64_t)v14, &qword_1003755B0);
  if ((v50 & 1) != 0)
    goto LABEL_28;
LABEL_25:
  v48 = 0;
  return v48 & 1;
}

uint64_t sub_1001D4648(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  v12 = *(int *)(v11 + 24);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = *((_BYTE *)a1 + v12 + 4);
  v15 = (_DWORD *)((char *)a2 + v12);
  v16 = *((unsigned __int8 *)a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_9;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_9;
  }
  if ((sub_1001C2128(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint) & 1) == 0)
  {
LABEL_9:
    v20 = 0;
    return v20 & 1;
  }
  v17 = (char *)a1 + *(int *)(v11 + 20);
  v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v10, v17, v4);
  v18(v8, (char *)a2 + *(int *)(v11 + 20), v4);
  v19 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_1001D47B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _DWORD *v15;
  char v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  _DWORD *v20;
  char v21;
  _DWORD *v22;
  int v23;
  uint64_t v24;
  _DWORD *v25;
  char v26;
  _DWORD *v27;
  int v28;
  char v29;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v34 - v11;
  v13 = (int *)a3(0);
  v14 = v13[5];
  v15 = (_DWORD *)(a1 + v14);
  v16 = *(_BYTE *)(a1 + v14 + 4);
  v17 = (_DWORD *)(a2 + v14);
  v18 = *(unsigned __int8 *)(a2 + v14 + 4);
  if ((v16 & 1) != 0)
  {
    if (!v18)
      goto LABEL_15;
  }
  else
  {
    if (*v15 != *v17)
      LOBYTE(v18) = 1;
    if ((v18 & 1) != 0)
      goto LABEL_15;
  }
  v19 = v13[6];
  v20 = (_DWORD *)(a1 + v19);
  v21 = *(_BYTE *)(a1 + v19 + 4);
  v22 = (_DWORD *)(a2 + v19);
  v23 = *(unsigned __int8 *)(a2 + v19 + 4);
  if ((v21 & 1) == 0)
  {
    if (*v20 != *v22)
      LOBYTE(v23) = 1;
    if ((v23 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v24 = v13[7];
    v25 = (_DWORD *)(a1 + v24);
    v26 = *(_BYTE *)(a1 + v24 + 4);
    v27 = (_DWORD *)(a2 + v24);
    v28 = *(unsigned __int8 *)(a2 + v24 + 4);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        goto LABEL_15;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        goto LABEL_15;
    }
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v31(v12, a1, v6);
    v31(v10, a2, v6);
    v32 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v29 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v32);
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v10, v6);
    v33(v12, v6);
    return v29 & 1;
  }
  if (v23)
    goto LABEL_13;
LABEL_15:
  v29 = 0;
  return v29 & 1;
}

uint64_t sub_1001D496C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v32 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v12 = v11;
  v13 = v11[6];
  v14 = *((unsigned __int8 *)a1 + v13);
  v15 = *((unsigned __int8 *)a2 + v13);
  if (v14 == 2)
  {
    if (v15 != 2)
      goto LABEL_25;
  }
  else if (v15 == 2 || ((((v15 & 1) == 0) ^ v14) & 1) == 0)
  {
    goto LABEL_25;
  }
  v16 = v11[7];
  v17 = *((unsigned __int8 *)a1 + v16);
  v18 = *((unsigned __int8 *)a2 + v16);
  if (v17 == 5)
  {
    if (v18 != 5)
      goto LABEL_25;
  }
  else if (v18 == 5 || v17 != v18)
  {
    goto LABEL_25;
  }
  v20 = v11[8];
  v21 = (uint64_t *)((char *)a1 + v20);
  v22 = *(uint64_t *)((char *)a1 + v20 + 8);
  v23 = (uint64_t *)((char *)a2 + v20);
  v24 = v23[1];
  if (!v22)
  {
    if (v24)
      goto LABEL_25;
LABEL_23:
    if (sub_1001C1DE4(*a1, *a2))
    {
      v27 = (char *)a1 + v12[5];
      v28 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v28(v10, v27, v4);
      v28(v8, (char *)a2 + v12[5], v4);
      v29 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v29);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v8, v4);
      v30(v10, v4);
      return v26 & 1;
    }
LABEL_25:
    v26 = 0;
    return v26 & 1;
  }
  if (!v24)
    goto LABEL_25;
  if (*v21 == *v23 && v22 == v24)
    goto LABEL_23;
  v26 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22) & 1) != 0)
    goto LABEL_23;
  return v26 & 1;
}

uint64_t sub_1001D4B4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  char v37;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v42 - v11;
  v13 = (int *)a3(0);
  v14 = v13[5];
  v15 = *(unsigned __int8 *)(a1 + v14);
  v16 = *(unsigned __int8 *)(a2 + v14);
  if (v15 == 2)
  {
    if (v16 != 2)
      goto LABEL_26;
  }
  else if (v16 == 2 || ((((v16 & 1) == 0) ^ v15) & 1) == 0)
  {
    goto LABEL_26;
  }
  v17 = v13[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_26;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_26;
  }
  v22 = v13[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_26;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_26;
  }
  v27 = v13[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) == 0)
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_26;
LABEL_24:
    v32 = v13[9];
    v33 = (_DWORD *)(a1 + v32);
    v34 = *(_BYTE *)(a1 + v32 + 4);
    v35 = (_DWORD *)(a2 + v32);
    v36 = *(unsigned __int8 *)(a2 + v32 + 4);
    if ((v34 & 1) != 0)
    {
      if (!v36)
        goto LABEL_26;
    }
    else
    {
      if (*v33 != *v35)
        LOBYTE(v36) = 1;
      if ((v36 & 1) != 0)
        goto LABEL_26;
    }
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v39(v12, a1, v6);
    v39(v10, a2, v6);
    v40 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v37 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v40);
    v41 = *(void (**)(char *, uint64_t))(v7 + 8);
    v41(v10, v6);
    v41(v12, v6);
    return v37 & 1;
  }
  if (v31)
    goto LABEL_24;
LABEL_26:
  v37 = 0;
  return v37 & 1;
}

uint64_t sub_1001D4D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  char v35;
  uint64_t v36;
  _DWORD *v37;
  char v38;
  _DWORD *v39;
  int v40;
  uint64_t v41;
  _DWORD *v42;
  char v43;
  _DWORD *v44;
  int v45;
  uint64_t v46;
  _DWORD *v47;
  char v48;
  _DWORD *v49;
  int v50;
  uint64_t v51;
  _DWORD *v52;
  char v53;
  _DWORD *v54;
  int v55;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v60 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_50;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_50;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_50;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_50;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_50;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_50;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_50;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_50;
  }
  v32 = v11[9];
  v33 = *(unsigned __int8 *)(a1 + v32);
  v34 = *(unsigned __int8 *)(a2 + v32);
  if (v33 == 6)
  {
    if (v34 != 6)
      goto LABEL_50;
    goto LABEL_30;
  }
  v35 = 0;
  if (v34 != 6 && v33 == v34)
  {
LABEL_30:
    v36 = v11[10];
    v37 = (_DWORD *)(a1 + v36);
    v38 = *(_BYTE *)(a1 + v36 + 4);
    v39 = (_DWORD *)(a2 + v36);
    v40 = *(unsigned __int8 *)(a2 + v36 + 4);
    if ((v38 & 1) != 0)
    {
      if (!v40)
        goto LABEL_50;
    }
    else
    {
      if (*v37 != *v39)
        LOBYTE(v40) = 1;
      if ((v40 & 1) != 0)
        goto LABEL_50;
    }
    v41 = v11[11];
    v42 = (_DWORD *)(a1 + v41);
    v43 = *(_BYTE *)(a1 + v41 + 4);
    v44 = (_DWORD *)(a2 + v41);
    v45 = *(unsigned __int8 *)(a2 + v41 + 4);
    if ((v43 & 1) != 0)
    {
      if (!v45)
        goto LABEL_50;
    }
    else
    {
      if (*v42 != *v44)
        LOBYTE(v45) = 1;
      if ((v45 & 1) != 0)
        goto LABEL_50;
    }
    v46 = v11[12];
    v47 = (_DWORD *)(a1 + v46);
    v48 = *(_BYTE *)(a1 + v46 + 4);
    v49 = (_DWORD *)(a2 + v46);
    v50 = *(unsigned __int8 *)(a2 + v46 + 4);
    if ((v48 & 1) == 0)
    {
      if (*v47 != *v49)
        LOBYTE(v50) = 1;
      if ((v50 & 1) != 0)
        goto LABEL_50;
LABEL_48:
      v51 = v11[13];
      v52 = (_DWORD *)(a1 + v51);
      v53 = *(_BYTE *)(a1 + v51 + 4);
      v54 = (_DWORD *)(a2 + v51);
      v55 = *(unsigned __int8 *)(a2 + v51 + 4);
      if ((v53 & 1) != 0)
      {
        if (!v55)
          goto LABEL_50;
      }
      else
      {
        if (*v52 != *v54)
          LOBYTE(v55) = 1;
        if ((v55 & 1) != 0)
          goto LABEL_50;
      }
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v57(v10, a1, v4);
      v57(v8, a2, v4);
      v58 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v35 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v58);
      v59 = *(void (**)(char *, uint64_t))(v5 + 8);
      v59(v8, v4);
      v59(v10, v4);
      return v35 & 1;
    }
    if (v50)
      goto LABEL_48;
LABEL_50:
    v35 = 0;
  }
  return v35 & 1;
}

uint64_t sub_1001D5054(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  char v25;
  _DWORD *v26;
  int v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_21;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_21;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_21;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_21;
  }
  v23 = v11[8];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 4);
  v26 = (_DWORD *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (v27)
      goto LABEL_19;
LABEL_21:
    v31 = 0;
    return v31 & 1;
  }
  if (*v24 != *v26)
    LOBYTE(v27) = 1;
  if ((v27 & 1) != 0)
    goto LABEL_21;
LABEL_19:
  if ((sub_10010B2D8(*a1, *a2, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t (*)(char *, char *))sub_1001D4D6C) & 1) == 0)goto LABEL_21;
  v28 = (char *)a1 + v12[5];
  v29 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v29(v10, v28, v4);
  v29(v8, (char *)a2 + v12[5], v4);
  v30 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v31 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v30);
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v8, v4);
  v32(v10, v4);
  return v31 & 1;
}

uint64_t sub_1001D5234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1000039AC(&qword_10037BF18);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000039AC(&qword_100375670);
  v15 = __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v24 = v23;
  v25 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 7)
  {
    if (v27 != 7)
      goto LABEL_14;
LABEL_6:
    sub_10000E660(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_100375670);
    sub_10000E660(v48 + *(int *)(v24 + 24), (uint64_t)v20, &qword_100375670);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_10000E660((uint64_t)v22, (uint64_t)v13, &qword_100375670);
    sub_10000E660((uint64_t)v20, v29, &qword_100375670);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015704((uint64_t)v20, &qword_100375670);
      sub_100015704((uint64_t)v22, &qword_100375670);
      if (v30(v29, 1, v8) == 1)
      {
        sub_100015704((uint64_t)v13, &qword_100375670);
LABEL_13:
        v34 = v45;
        v33 = v46;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v36 = v43;
        v35(v43, v47, v46);
        v37 = v44;
        v35(v44, v48, v33);
        v38 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v33, v38);
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v33);
        v39(v36, v33);
        return v28 & 1;
      }
    }
    else
    {
      sub_10000E660((uint64_t)v13, (uint64_t)v17, &qword_100375670);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v42;
        sub_100003E08(v29, (uint64_t)v42, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
        v32 = sub_1001D5054(v17, v31);
        sub_100004030((uint64_t)v31, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
        sub_100015704((uint64_t)v20, &qword_100375670);
        sub_100015704((uint64_t)v22, &qword_100375670);
        sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
        sub_100015704((uint64_t)v13, &qword_100375670);
        if ((v32 & 1) != 0)
          goto LABEL_13;
LABEL_14:
        v28 = 0;
        return v28 & 1;
      }
      sub_100015704((uint64_t)v20, &qword_100375670);
      sub_100015704((uint64_t)v22, &qword_100375670);
      sub_100004030((uint64_t)v17, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
    }
    sub_100015704((uint64_t)v13, &qword_10037BF18);
    goto LABEL_14;
  }
  v28 = 0;
  if (v27 != 7 && v26 == v27)
    goto LABEL_6;
  return v28 & 1;
}

uint64_t sub_1001D5634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  double *v19;
  char v20;
  double *v21;
  int v22;
  char v23;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v28 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_13;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_13;
  }
  v15 = v11[6];
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 != 2)
  {
    if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
      goto LABEL_13;
LABEL_11:
    v18 = v11[7];
    v19 = (double *)(a1 + v18);
    v20 = *(_BYTE *)(a1 + v18 + 8);
    v21 = (double *)(a2 + v18);
    v22 = *(unsigned __int8 *)(a2 + v18 + 8);
    if ((v20 & 1) != 0)
    {
      if (!v22)
        goto LABEL_13;
    }
    else
    {
      if (*v19 != *v21)
        LOBYTE(v22) = 1;
      if ((v22 & 1) != 0)
        goto LABEL_13;
    }
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v25(v10, a1, v4);
    v25(v8, a2, v4);
    v26 = sub_10000FD38(&qword_10036A610, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v26);
    v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v8, v4);
    v27(v10, v4);
    return v23 & 1;
  }
  if (v17 == 2)
    goto LABEL_11;
LABEL_13:
  v23 = 0;
  return v23 & 1;
}

unint64_t sub_1001D57EC()
{
  unint64_t result;

  result = qword_100375970;
  if (!qword_100375970)
  {
    result = swift_getWitnessTable(&unk_1002DB878, &type metadata for Proto_Gnss_Emergency_LcsGanssId);
    atomic_store(result, (unint64_t *)&qword_100375970);
  }
  return result;
}

unint64_t sub_1001D5834()
{
  unint64_t result;

  result = qword_100375A88;
  if (!qword_100375A88)
  {
    result = swift_getWitnessTable(&unk_1002D9770, &type metadata for Proto_Gnss_Emergency_PositionMethod);
    atomic_store(result, (unint64_t *)&qword_100375A88);
  }
  return result;
}

unint64_t sub_1001D587C()
{
  unint64_t result;

  result = qword_100375A90;
  if (!qword_100375A90)
  {
    result = swift_getWitnessTable(&unk_1002D9798, &type metadata for Proto_Gnss_Emergency_PositionMethod);
    atomic_store(result, (unint64_t *)&qword_100375A90);
  }
  return result;
}

unint64_t sub_1001D58C4()
{
  unint64_t result;

  result = qword_100375A98;
  if (!qword_100375A98)
  {
    result = swift_getWitnessTable(&unk_1002D9820, &type metadata for Proto_Gnss_Emergency_PositionMethod);
    atomic_store(result, (unint64_t *)&qword_100375A98);
  }
  return result;
}

uint64_t sub_1001D5908()
{
  return sub_10000FFB4(&qword_100375AA0, &qword_100375AA8);
}

unint64_t sub_1001D5930()
{
  unint64_t result;

  result = qword_100375AB0;
  if (!qword_100375AB0)
  {
    result = swift_getWitnessTable(&unk_1002D9890, &type metadata for Proto_Gnss_Emergency_PositionReqType);
    atomic_store(result, (unint64_t *)&qword_100375AB0);
  }
  return result;
}

unint64_t sub_1001D5978()
{
  unint64_t result;

  result = qword_100375AB8;
  if (!qword_100375AB8)
  {
    result = swift_getWitnessTable(&unk_1002D98B8, &type metadata for Proto_Gnss_Emergency_PositionReqType);
    atomic_store(result, (unint64_t *)&qword_100375AB8);
  }
  return result;
}

unint64_t sub_1001D59C0()
{
  unint64_t result;

  result = qword_100375AC0;
  if (!qword_100375AC0)
  {
    result = swift_getWitnessTable(&unk_1002D9940, &type metadata for Proto_Gnss_Emergency_PositionReqType);
    atomic_store(result, (unint64_t *)&qword_100375AC0);
  }
  return result;
}

uint64_t sub_1001D5A04()
{
  return sub_10000FFB4(&qword_100375AC8, &qword_100375AD0);
}

unint64_t sub_1001D5A2C()
{
  unint64_t result;

  result = qword_100375AD8;
  if (!qword_100375AD8)
  {
    result = swift_getWitnessTable(&unk_1002D99B0, &type metadata for Proto_Gnss_Emergency_PositionSession);
    atomic_store(result, (unint64_t *)&qword_100375AD8);
  }
  return result;
}

unint64_t sub_1001D5A74()
{
  unint64_t result;

  result = qword_100375AE0;
  if (!qword_100375AE0)
  {
    result = swift_getWitnessTable(&unk_1002D99D8, &type metadata for Proto_Gnss_Emergency_PositionSession);
    atomic_store(result, (unint64_t *)&qword_100375AE0);
  }
  return result;
}

unint64_t sub_1001D5ABC()
{
  unint64_t result;

  result = qword_100375AE8;
  if (!qword_100375AE8)
  {
    result = swift_getWitnessTable(&unk_1002D9A60, &type metadata for Proto_Gnss_Emergency_PositionSession);
    atomic_store(result, (unint64_t *)&qword_100375AE8);
  }
  return result;
}

uint64_t sub_1001D5B00()
{
  return sub_10000FFB4(&qword_100375AF0, &qword_100375AF8);
}

unint64_t sub_1001D5B28()
{
  unint64_t result;

  result = qword_100375B00;
  if (!qword_100375B00)
  {
    result = swift_getWitnessTable(&unk_1002D9AD0, &type metadata for Proto_Gnss_Emergency_PositionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375B00);
  }
  return result;
}

unint64_t sub_1001D5B70()
{
  unint64_t result;

  result = qword_100375B08;
  if (!qword_100375B08)
  {
    result = swift_getWitnessTable(&unk_1002D9AF8, &type metadata for Proto_Gnss_Emergency_PositionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375B08);
  }
  return result;
}

unint64_t sub_1001D5BB8()
{
  unint64_t result;

  result = qword_100375B10;
  if (!qword_100375B10)
  {
    result = swift_getWitnessTable(&unk_1002D9B80, &type metadata for Proto_Gnss_Emergency_PositionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375B10);
  }
  return result;
}

uint64_t sub_1001D5BFC()
{
  return sub_10000FFB4(&qword_100375B18, &qword_100375B20);
}

unint64_t sub_1001D5C24()
{
  unint64_t result;

  result = qword_100375B28;
  if (!qword_100375B28)
  {
    result = swift_getWitnessTable(&unk_1002D9BF0, &type metadata for Proto_Gnss_Emergency_SessionErrorCode);
    atomic_store(result, (unint64_t *)&qword_100375B28);
  }
  return result;
}

unint64_t sub_1001D5C6C()
{
  unint64_t result;

  result = qword_100375B30;
  if (!qword_100375B30)
  {
    result = swift_getWitnessTable(&unk_1002D9C18, &type metadata for Proto_Gnss_Emergency_SessionErrorCode);
    atomic_store(result, (unint64_t *)&qword_100375B30);
  }
  return result;
}

unint64_t sub_1001D5CB4()
{
  unint64_t result;

  result = qword_100375B38;
  if (!qword_100375B38)
  {
    result = swift_getWitnessTable(&unk_1002D9CA0, &type metadata for Proto_Gnss_Emergency_SessionErrorCode);
    atomic_store(result, (unint64_t *)&qword_100375B38);
  }
  return result;
}

uint64_t sub_1001D5CF8()
{
  return sub_10000FFB4(&qword_100375B40, &qword_100375B48);
}

unint64_t sub_1001D5D20()
{
  unint64_t result;

  result = qword_100375B50;
  if (!qword_100375B50)
  {
    result = swift_getWitnessTable(&unk_1002D9D10, &type metadata for Proto_Gnss_Emergency_TriggerType);
    atomic_store(result, (unint64_t *)&qword_100375B50);
  }
  return result;
}

unint64_t sub_1001D5D68()
{
  unint64_t result;

  result = qword_100375B58;
  if (!qword_100375B58)
  {
    result = swift_getWitnessTable(&unk_1002D9D38, &type metadata for Proto_Gnss_Emergency_TriggerType);
    atomic_store(result, (unint64_t *)&qword_100375B58);
  }
  return result;
}

unint64_t sub_1001D5DB0()
{
  unint64_t result;

  result = qword_100375B60;
  if (!qword_100375B60)
  {
    result = swift_getWitnessTable(&unk_1002D9DC0, &type metadata for Proto_Gnss_Emergency_TriggerType);
    atomic_store(result, (unint64_t *)&qword_100375B60);
  }
  return result;
}

uint64_t sub_1001D5DF4()
{
  return sub_10000FFB4(&qword_100375B68, &qword_100375B70);
}

unint64_t sub_1001D5E1C()
{
  unint64_t result;

  result = qword_100375B78;
  if (!qword_100375B78)
  {
    result = swift_getWitnessTable(&unk_1002D9E30, &type metadata for Proto_Gnss_Emergency_Status);
    atomic_store(result, (unint64_t *)&qword_100375B78);
  }
  return result;
}

unint64_t sub_1001D5E64()
{
  unint64_t result;

  result = qword_100375B80;
  if (!qword_100375B80)
  {
    result = swift_getWitnessTable(&unk_1002D9E58, &type metadata for Proto_Gnss_Emergency_Status);
    atomic_store(result, (unint64_t *)&qword_100375B80);
  }
  return result;
}

unint64_t sub_1001D5EAC()
{
  unint64_t result;

  result = qword_100375B88;
  if (!qword_100375B88)
  {
    result = swift_getWitnessTable(&unk_1002D9EE0, &type metadata for Proto_Gnss_Emergency_Status);
    atomic_store(result, (unint64_t *)&qword_100375B88);
  }
  return result;
}

uint64_t sub_1001D5EF0()
{
  return sub_10000FFB4(&qword_100375B90, &qword_100375B98);
}

unint64_t sub_1001D5F18()
{
  unint64_t result;

  result = qword_100375BA0;
  if (!qword_100375BA0)
  {
    result = swift_getWitnessTable(&unk_1002D9F50, &type metadata for Proto_Gnss_Emergency_EndCause);
    atomic_store(result, (unint64_t *)&qword_100375BA0);
  }
  return result;
}

unint64_t sub_1001D5F60()
{
  unint64_t result;

  result = qword_100375BA8;
  if (!qword_100375BA8)
  {
    result = swift_getWitnessTable(&unk_1002D9F78, &type metadata for Proto_Gnss_Emergency_EndCause);
    atomic_store(result, (unint64_t *)&qword_100375BA8);
  }
  return result;
}

unint64_t sub_1001D5FA8()
{
  unint64_t result;

  result = qword_100375BB0;
  if (!qword_100375BB0)
  {
    result = swift_getWitnessTable(&unk_1002DA000, &type metadata for Proto_Gnss_Emergency_EndCause);
    atomic_store(result, (unint64_t *)&qword_100375BB0);
  }
  return result;
}

uint64_t sub_1001D5FEC()
{
  return sub_10000FFB4(&qword_100375BB8, &qword_100375BC0);
}

unint64_t sub_1001D6014()
{
  unint64_t result;

  result = qword_100375BC8;
  if (!qword_100375BC8)
  {
    result = swift_getWitnessTable(&unk_1002DA070, &type metadata for Proto_Gnss_Emergency_ConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_100375BC8);
  }
  return result;
}

unint64_t sub_1001D605C()
{
  unint64_t result;

  result = qword_100375BD0;
  if (!qword_100375BD0)
  {
    result = swift_getWitnessTable(&unk_1002DA098, &type metadata for Proto_Gnss_Emergency_ConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_100375BD0);
  }
  return result;
}

unint64_t sub_1001D60A4()
{
  unint64_t result;

  result = qword_100375BD8;
  if (!qword_100375BD8)
  {
    result = swift_getWitnessTable(&unk_1002DA120, &type metadata for Proto_Gnss_Emergency_ConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_100375BD8);
  }
  return result;
}

uint64_t sub_1001D60E8()
{
  return sub_10000FFB4(&qword_100375BE0, &qword_100375BE8);
}

unint64_t sub_1001D6110()
{
  unint64_t result;

  result = qword_100375BF0;
  if (!qword_100375BF0)
  {
    result = swift_getWitnessTable(&unk_1002DA190, &type metadata for Proto_Gnss_Emergency_CellType);
    atomic_store(result, (unint64_t *)&qword_100375BF0);
  }
  return result;
}

unint64_t sub_1001D6158()
{
  unint64_t result;

  result = qword_100375BF8;
  if (!qword_100375BF8)
  {
    result = swift_getWitnessTable(&unk_1002DA1B8, &type metadata for Proto_Gnss_Emergency_CellType);
    atomic_store(result, (unint64_t *)&qword_100375BF8);
  }
  return result;
}

unint64_t sub_1001D61A0()
{
  unint64_t result;

  result = qword_100375C00;
  if (!qword_100375C00)
  {
    result = swift_getWitnessTable(&unk_1002DA240, &type metadata for Proto_Gnss_Emergency_CellType);
    atomic_store(result, (unint64_t *)&qword_100375C00);
  }
  return result;
}

uint64_t sub_1001D61E4()
{
  return sub_10000FFB4(&qword_100375C08, &qword_100375C10);
}

unint64_t sub_1001D620C()
{
  unint64_t result;

  result = qword_100375C18;
  if (!qword_100375C18)
  {
    result = swift_getWitnessTable(&unk_1002DA2B0, &type metadata for Proto_Gnss_Emergency_FreqMode);
    atomic_store(result, (unint64_t *)&qword_100375C18);
  }
  return result;
}

unint64_t sub_1001D6254()
{
  unint64_t result;

  result = qword_100375C20;
  if (!qword_100375C20)
  {
    result = swift_getWitnessTable(&unk_1002DA2D8, &type metadata for Proto_Gnss_Emergency_FreqMode);
    atomic_store(result, (unint64_t *)&qword_100375C20);
  }
  return result;
}

unint64_t sub_1001D629C()
{
  unint64_t result;

  result = qword_100375C28;
  if (!qword_100375C28)
  {
    result = swift_getWitnessTable(&unk_1002DA360, &type metadata for Proto_Gnss_Emergency_FreqMode);
    atomic_store(result, (unint64_t *)&qword_100375C28);
  }
  return result;
}

uint64_t sub_1001D62E0()
{
  return sub_10000FFB4(&qword_100375C30, &qword_100375C38);
}

unint64_t sub_1001D6308()
{
  unint64_t result;

  result = qword_100375C40;
  if (!qword_100375C40)
  {
    result = swift_getWitnessTable(&unk_1002DA3D0, &type metadata for Proto_Gnss_Emergency_SLPAddressType);
    atomic_store(result, (unint64_t *)&qword_100375C40);
  }
  return result;
}

unint64_t sub_1001D6350()
{
  unint64_t result;

  result = qword_100375C48;
  if (!qword_100375C48)
  {
    result = swift_getWitnessTable(&unk_1002DA3F8, &type metadata for Proto_Gnss_Emergency_SLPAddressType);
    atomic_store(result, (unint64_t *)&qword_100375C48);
  }
  return result;
}

unint64_t sub_1001D6398()
{
  unint64_t result;

  result = qword_100375C50;
  if (!qword_100375C50)
  {
    result = swift_getWitnessTable(&unk_1002DA480, &type metadata for Proto_Gnss_Emergency_SLPAddressType);
    atomic_store(result, (unint64_t *)&qword_100375C50);
  }
  return result;
}

uint64_t sub_1001D63DC()
{
  return sub_10000FFB4(&qword_100375C58, &qword_100375C60);
}

unint64_t sub_1001D6404()
{
  unint64_t result;

  result = qword_100375C68;
  if (!qword_100375C68)
  {
    result = swift_getWitnessTable(&unk_1002DA4F0, &type metadata for Proto_Gnss_Emergency_ErrorCodes);
    atomic_store(result, (unint64_t *)&qword_100375C68);
  }
  return result;
}

unint64_t sub_1001D644C()
{
  unint64_t result;

  result = qword_100375C70;
  if (!qword_100375C70)
  {
    result = swift_getWitnessTable(&unk_1002DA518, &type metadata for Proto_Gnss_Emergency_ErrorCodes);
    atomic_store(result, (unint64_t *)&qword_100375C70);
  }
  return result;
}

unint64_t sub_1001D6494()
{
  unint64_t result;

  result = qword_100375C78;
  if (!qword_100375C78)
  {
    result = swift_getWitnessTable(&unk_1002DA5A0, &type metadata for Proto_Gnss_Emergency_ErrorCodes);
    atomic_store(result, (unint64_t *)&qword_100375C78);
  }
  return result;
}

uint64_t sub_1001D64D8()
{
  return sub_10000FFB4(&qword_100375C80, &qword_100375C88);
}

unint64_t sub_1001D6500()
{
  unint64_t result;

  result = qword_100375C90;
  if (!qword_100375C90)
  {
    result = swift_getWitnessTable(&unk_1002DA610, &type metadata for Proto_Gnss_Emergency_ClsModemState);
    atomic_store(result, (unint64_t *)&qword_100375C90);
  }
  return result;
}

unint64_t sub_1001D6548()
{
  unint64_t result;

  result = qword_100375C98;
  if (!qword_100375C98)
  {
    result = swift_getWitnessTable(&unk_1002DA638, &type metadata for Proto_Gnss_Emergency_ClsModemState);
    atomic_store(result, (unint64_t *)&qword_100375C98);
  }
  return result;
}

unint64_t sub_1001D6590()
{
  unint64_t result;

  result = qword_100375CA0;
  if (!qword_100375CA0)
  {
    result = swift_getWitnessTable(&unk_1002DA6C0, &type metadata for Proto_Gnss_Emergency_ClsModemState);
    atomic_store(result, (unint64_t *)&qword_100375CA0);
  }
  return result;
}

uint64_t sub_1001D65D4()
{
  return sub_10000FFB4(&qword_100375CA8, &qword_100375CB0);
}

unint64_t sub_1001D65FC()
{
  unint64_t result;

  result = qword_100375CB8;
  if (!qword_100375CB8)
  {
    result = swift_getWitnessTable(&unk_1002DA730, &type metadata for Proto_Gnss_Emergency_SessionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CB8);
  }
  return result;
}

unint64_t sub_1001D6644()
{
  unint64_t result;

  result = qword_100375CC0;
  if (!qword_100375CC0)
  {
    result = swift_getWitnessTable(&unk_1002DA758, &type metadata for Proto_Gnss_Emergency_SessionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CC0);
  }
  return result;
}

unint64_t sub_1001D668C()
{
  unint64_t result;

  result = qword_100375CC8;
  if (!qword_100375CC8)
  {
    result = swift_getWitnessTable(&unk_1002DA7E0, &type metadata for Proto_Gnss_Emergency_SessionProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CC8);
  }
  return result;
}

uint64_t sub_1001D66D0()
{
  return sub_10000FFB4(&qword_100375CD0, &qword_100375CD8);
}

unint64_t sub_1001D66F8()
{
  unint64_t result;

  result = qword_100375CE0;
  if (!qword_100375CE0)
  {
    result = swift_getWitnessTable(&unk_1002DA850, &type metadata for Proto_Gnss_Emergency_PosProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CE0);
  }
  return result;
}

unint64_t sub_1001D6740()
{
  unint64_t result;

  result = qword_100375CE8;
  if (!qword_100375CE8)
  {
    result = swift_getWitnessTable(&unk_1002DA878, &type metadata for Proto_Gnss_Emergency_PosProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CE8);
  }
  return result;
}

unint64_t sub_1001D6788()
{
  unint64_t result;

  result = qword_100375CF0;
  if (!qword_100375CF0)
  {
    result = swift_getWitnessTable(&unk_1002DA900, &type metadata for Proto_Gnss_Emergency_PosProtocol);
    atomic_store(result, (unint64_t *)&qword_100375CF0);
  }
  return result;
}

uint64_t sub_1001D67CC()
{
  return sub_10000FFB4(&qword_100375CF8, &qword_100375D00);
}

unint64_t sub_1001D67F4()
{
  unint64_t result;

  result = qword_100375D08;
  if (!qword_100375D08)
  {
    result = swift_getWitnessTable(&unk_1002DA970, &type metadata for Proto_Gnss_Emergency_MethodType);
    atomic_store(result, (unint64_t *)&qword_100375D08);
  }
  return result;
}

unint64_t sub_1001D683C()
{
  unint64_t result;

  result = qword_100375D10;
  if (!qword_100375D10)
  {
    result = swift_getWitnessTable(&unk_1002DA998, &type metadata for Proto_Gnss_Emergency_MethodType);
    atomic_store(result, (unint64_t *)&qword_100375D10);
  }
  return result;
}

unint64_t sub_1001D6884()
{
  unint64_t result;

  result = qword_100375D18;
  if (!qword_100375D18)
  {
    result = swift_getWitnessTable(&unk_1002DAA20, &type metadata for Proto_Gnss_Emergency_MethodType);
    atomic_store(result, (unint64_t *)&qword_100375D18);
  }
  return result;
}

uint64_t sub_1001D68C8()
{
  return sub_10000FFB4(&qword_100375D20, &qword_100375D28);
}

unint64_t sub_1001D68F0()
{
  unint64_t result;

  result = qword_100375D30;
  if (!qword_100375D30)
  {
    result = swift_getWitnessTable(&unk_1002DAA90, &type metadata for Proto_Gnss_Emergency_Environment);
    atomic_store(result, (unint64_t *)&qword_100375D30);
  }
  return result;
}

unint64_t sub_1001D6938()
{
  unint64_t result;

  result = qword_100375D38;
  if (!qword_100375D38)
  {
    result = swift_getWitnessTable(&unk_1002DAAB8, &type metadata for Proto_Gnss_Emergency_Environment);
    atomic_store(result, (unint64_t *)&qword_100375D38);
  }
  return result;
}

unint64_t sub_1001D6980()
{
  unint64_t result;

  result = qword_100375D40;
  if (!qword_100375D40)
  {
    result = swift_getWitnessTable(&unk_1002DAB40, &type metadata for Proto_Gnss_Emergency_Environment);
    atomic_store(result, (unint64_t *)&qword_100375D40);
  }
  return result;
}

uint64_t sub_1001D69C4()
{
  return sub_10000FFB4(&qword_100375D48, &qword_100375D50);
}

unint64_t sub_1001D69EC()
{
  unint64_t result;

  result = qword_100375D58;
  if (!qword_100375D58)
  {
    result = swift_getWitnessTable(&unk_1002DABB0, &type metadata for Proto_Gnss_Emergency_AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_100375D58);
  }
  return result;
}

unint64_t sub_1001D6A34()
{
  unint64_t result;

  result = qword_100375D60;
  if (!qword_100375D60)
  {
    result = swift_getWitnessTable(&unk_1002DABD8, &type metadata for Proto_Gnss_Emergency_AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_100375D60);
  }
  return result;
}

unint64_t sub_1001D6A7C()
{
  unint64_t result;

  result = qword_100375D68;
  if (!qword_100375D68)
  {
    result = swift_getWitnessTable(&unk_1002DAC60, &type metadata for Proto_Gnss_Emergency_AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_100375D68);
  }
  return result;
}

uint64_t sub_1001D6AC0()
{
  return sub_10000FFB4(&qword_100375D70, &qword_100375D78);
}

unint64_t sub_1001D6AE8()
{
  unint64_t result;

  result = qword_100375D80;
  if (!qword_100375D80)
  {
    result = swift_getWitnessTable(&unk_1002DACD0, &type metadata for Proto_Gnss_Emergency_GnssId);
    atomic_store(result, (unint64_t *)&qword_100375D80);
  }
  return result;
}

unint64_t sub_1001D6B30()
{
  unint64_t result;

  result = qword_100375D88;
  if (!qword_100375D88)
  {
    result = swift_getWitnessTable(&unk_1002DACF8, &type metadata for Proto_Gnss_Emergency_GnssId);
    atomic_store(result, (unint64_t *)&qword_100375D88);
  }
  return result;
}

unint64_t sub_1001D6B78()
{
  unint64_t result;

  result = qword_100375D90;
  if (!qword_100375D90)
  {
    result = swift_getWitnessTable(&unk_1002DAD80, &type metadata for Proto_Gnss_Emergency_GnssId);
    atomic_store(result, (unint64_t *)&qword_100375D90);
  }
  return result;
}

uint64_t sub_1001D6BBC()
{
  return sub_10000FFB4(&qword_100375D98, &qword_100375DA0);
}

unint64_t sub_1001D6BE4()
{
  unint64_t result;

  result = qword_100375DA8;
  if (!qword_100375DA8)
  {
    result = swift_getWitnessTable(&unk_1002DADF0, &type metadata for Proto_Gnss_Emergency_SupportedGADShapes);
    atomic_store(result, (unint64_t *)&qword_100375DA8);
  }
  return result;
}

unint64_t sub_1001D6C2C()
{
  unint64_t result;

  result = qword_100375DB0;
  if (!qword_100375DB0)
  {
    result = swift_getWitnessTable(&unk_1002DAE18, &type metadata for Proto_Gnss_Emergency_SupportedGADShapes);
    atomic_store(result, (unint64_t *)&qword_100375DB0);
  }
  return result;
}

unint64_t sub_1001D6C74()
{
  unint64_t result;

  result = qword_100375DB8;
  if (!qword_100375DB8)
  {
    result = swift_getWitnessTable(&unk_1002DAEA0, &type metadata for Proto_Gnss_Emergency_SupportedGADShapes);
    atomic_store(result, (unint64_t *)&qword_100375DB8);
  }
  return result;
}

uint64_t sub_1001D6CB8()
{
  return sub_10000FFB4(&qword_100375DC0, &qword_100375DC8);
}

unint64_t sub_1001D6CE0()
{
  unint64_t result;

  result = qword_100375DD0;
  if (!qword_100375DD0)
  {
    result = swift_getWitnessTable(&unk_1002DAF10, &type metadata for Proto_Gnss_Emergency_FixType);
    atomic_store(result, (unint64_t *)&qword_100375DD0);
  }
  return result;
}

unint64_t sub_1001D6D28()
{
  unint64_t result;

  result = qword_100375DD8;
  if (!qword_100375DD8)
  {
    result = swift_getWitnessTable(&unk_1002DAF38, &type metadata for Proto_Gnss_Emergency_FixType);
    atomic_store(result, (unint64_t *)&qword_100375DD8);
  }
  return result;
}

unint64_t sub_1001D6D70()
{
  unint64_t result;

  result = qword_100375DE0;
  if (!qword_100375DE0)
  {
    result = swift_getWitnessTable(&unk_1002DAFC0, &type metadata for Proto_Gnss_Emergency_FixType);
    atomic_store(result, (unint64_t *)&qword_100375DE0);
  }
  return result;
}

uint64_t sub_1001D6DB4()
{
  return sub_10000FFB4(&qword_100375DE8, &qword_100375DF0);
}

unint64_t sub_1001D6DDC()
{
  unint64_t result;

  result = qword_100375DF8;
  if (!qword_100375DF8)
  {
    result = swift_getWitnessTable(&unk_1002DB030, &type metadata for Proto_Gnss_Emergency_ClsNetworkType);
    atomic_store(result, (unint64_t *)&qword_100375DF8);
  }
  return result;
}

unint64_t sub_1001D6E24()
{
  unint64_t result;

  result = qword_100375E00;
  if (!qword_100375E00)
  {
    result = swift_getWitnessTable(&unk_1002DB058, &type metadata for Proto_Gnss_Emergency_ClsNetworkType);
    atomic_store(result, (unint64_t *)&qword_100375E00);
  }
  return result;
}

unint64_t sub_1001D6E6C()
{
  unint64_t result;

  result = qword_100375E08;
  if (!qword_100375E08)
  {
    result = swift_getWitnessTable(&unk_1002DB0E0, &type metadata for Proto_Gnss_Emergency_ClsNetworkType);
    atomic_store(result, (unint64_t *)&qword_100375E08);
  }
  return result;
}

uint64_t sub_1001D6EB0()
{
  return sub_10000FFB4(&qword_100375E10, &qword_100375E18);
}

unint64_t sub_1001D6ED8()
{
  unint64_t result;

  result = qword_100375E20;
  if (!qword_100375E20)
  {
    result = swift_getWitnessTable(&unk_1002DB150, &type metadata for Proto_Gnss_Emergency_GnssTimeId);
    atomic_store(result, (unint64_t *)&qword_100375E20);
  }
  return result;
}

unint64_t sub_1001D6F20()
{
  unint64_t result;

  result = qword_100375E28;
  if (!qword_100375E28)
  {
    result = swift_getWitnessTable(&unk_1002DB178, &type metadata for Proto_Gnss_Emergency_GnssTimeId);
    atomic_store(result, (unint64_t *)&qword_100375E28);
  }
  return result;
}

unint64_t sub_1001D6F68()
{
  unint64_t result;

  result = qword_100375E30;
  if (!qword_100375E30)
  {
    result = swift_getWitnessTable(&unk_1002DB200, &type metadata for Proto_Gnss_Emergency_GnssTimeId);
    atomic_store(result, (unint64_t *)&qword_100375E30);
  }
  return result;
}

uint64_t sub_1001D6FAC()
{
  return sub_10000FFB4(&qword_100375E38, &qword_100375E40);
}

unint64_t sub_1001D6FD4()
{
  unint64_t result;

  result = qword_100375E48;
  if (!qword_100375E48)
  {
    result = swift_getWitnessTable(&unk_1002DB270, &type metadata for Proto_Gnss_Emergency_ShapeType);
    atomic_store(result, (unint64_t *)&qword_100375E48);
  }
  return result;
}

unint64_t sub_1001D701C()
{
  unint64_t result;

  result = qword_100375E50;
  if (!qword_100375E50)
  {
    result = swift_getWitnessTable(&unk_1002DB298, &type metadata for Proto_Gnss_Emergency_ShapeType);
    atomic_store(result, (unint64_t *)&qword_100375E50);
  }
  return result;
}

unint64_t sub_1001D7064()
{
  unint64_t result;

  result = qword_100375E58;
  if (!qword_100375E58)
  {
    result = swift_getWitnessTable(&unk_1002DB320, &type metadata for Proto_Gnss_Emergency_ShapeType);
    atomic_store(result, (unint64_t *)&qword_100375E58);
  }
  return result;
}

uint64_t sub_1001D70A8()
{
  return sub_10000FFB4(&qword_100375E60, &qword_100375E68);
}

unint64_t sub_1001D70D0()
{
  unint64_t result;

  result = qword_100375E70;
  if (!qword_100375E70)
  {
    result = swift_getWitnessTable(&unk_1002DB390, &type metadata for Proto_Gnss_Emergency_VelocityType);
    atomic_store(result, (unint64_t *)&qword_100375E70);
  }
  return result;
}

unint64_t sub_1001D7118()
{
  unint64_t result;

  result = qword_100375E78;
  if (!qword_100375E78)
  {
    result = swift_getWitnessTable(&unk_1002DB3B8, &type metadata for Proto_Gnss_Emergency_VelocityType);
    atomic_store(result, (unint64_t *)&qword_100375E78);
  }
  return result;
}

unint64_t sub_1001D7160()
{
  unint64_t result;

  result = qword_100375E80;
  if (!qword_100375E80)
  {
    result = swift_getWitnessTable(&unk_1002DB440, &type metadata for Proto_Gnss_Emergency_VelocityType);
    atomic_store(result, (unint64_t *)&qword_100375E80);
  }
  return result;
}

uint64_t sub_1001D71A4()
{
  return sub_10000FFB4(&qword_100375E88, &qword_100375E90);
}

unint64_t sub_1001D71CC()
{
  unint64_t result;

  result = qword_100375E98;
  if (!qword_100375E98)
  {
    result = swift_getWitnessTable(&unk_1002DB4B0, &type metadata for Proto_Gnss_Emergency_MultipathIndicator);
    atomic_store(result, (unint64_t *)&qword_100375E98);
  }
  return result;
}

unint64_t sub_1001D7214()
{
  unint64_t result;

  result = qword_100375EA0;
  if (!qword_100375EA0)
  {
    result = swift_getWitnessTable(&unk_1002DB4D8, &type metadata for Proto_Gnss_Emergency_MultipathIndicator);
    atomic_store(result, (unint64_t *)&qword_100375EA0);
  }
  return result;
}

unint64_t sub_1001D725C()
{
  unint64_t result;

  result = qword_100375EA8;
  if (!qword_100375EA8)
  {
    result = swift_getWitnessTable(&unk_1002DB560, &type metadata for Proto_Gnss_Emergency_MultipathIndicator);
    atomic_store(result, (unint64_t *)&qword_100375EA8);
  }
  return result;
}

uint64_t sub_1001D72A0()
{
  return sub_10000FFB4(&qword_100375EB0, &qword_100375EB8);
}

unint64_t sub_1001D72C8()
{
  unint64_t result;

  result = qword_100375EC0;
  if (!qword_100375EC0)
  {
    result = swift_getWitnessTable(&unk_1002DB5D0, &type metadata for Proto_Gnss_Emergency_GanssId);
    atomic_store(result, (unint64_t *)&qword_100375EC0);
  }
  return result;
}

unint64_t sub_1001D7310()
{
  unint64_t result;

  result = qword_100375EC8;
  if (!qword_100375EC8)
  {
    result = swift_getWitnessTable(&unk_1002DB5F8, &type metadata for Proto_Gnss_Emergency_GanssId);
    atomic_store(result, (unint64_t *)&qword_100375EC8);
  }
  return result;
}

unint64_t sub_1001D7358()
{
  unint64_t result;

  result = qword_100375ED0;
  if (!qword_100375ED0)
  {
    result = swift_getWitnessTable(&unk_1002DB680, &type metadata for Proto_Gnss_Emergency_GanssId);
    atomic_store(result, (unint64_t *)&qword_100375ED0);
  }
  return result;
}

uint64_t sub_1001D739C()
{
  return sub_10000FFB4(&qword_100375ED8, &qword_100375EE0);
}

unint64_t sub_1001D73C4()
{
  unint64_t result;

  result = qword_100375EE8;
  if (!qword_100375EE8)
  {
    result = swift_getWitnessTable(&unk_1002DB6F0, &type metadata for Proto_Gnss_Emergency_MeasurementsResult);
    atomic_store(result, (unint64_t *)&qword_100375EE8);
  }
  return result;
}

unint64_t sub_1001D740C()
{
  unint64_t result;

  result = qword_100375EF0;
  if (!qword_100375EF0)
  {
    result = swift_getWitnessTable(&unk_1002DB718, &type metadata for Proto_Gnss_Emergency_MeasurementsResult);
    atomic_store(result, (unint64_t *)&qword_100375EF0);
  }
  return result;
}

unint64_t sub_1001D7454()
{
  unint64_t result;

  result = qword_100375EF8;
  if (!qword_100375EF8)
  {
    result = swift_getWitnessTable(&unk_1002DB7A0, &type metadata for Proto_Gnss_Emergency_MeasurementsResult);
    atomic_store(result, (unint64_t *)&qword_100375EF8);
  }
  return result;
}

uint64_t sub_1001D7498()
{
  return sub_10000FFB4(&qword_100375F00, &qword_100375F08);
}

unint64_t sub_1001D74C0()
{
  unint64_t result;

  result = qword_100375F10;
  if (!qword_100375F10)
  {
    result = swift_getWitnessTable(&unk_1002DB810, &type metadata for Proto_Gnss_Emergency_LcsGanssId);
    atomic_store(result, (unint64_t *)&qword_100375F10);
  }
  return result;
}

unint64_t sub_1001D7508()
{
  unint64_t result;

  result = qword_100375F18;
  if (!qword_100375F18)
  {
    result = swift_getWitnessTable(&unk_1002DB838, &type metadata for Proto_Gnss_Emergency_LcsGanssId);
    atomic_store(result, (unint64_t *)&qword_100375F18);
  }
  return result;
}

unint64_t sub_1001D7550()
{
  unint64_t result;

  result = qword_100375F20;
  if (!qword_100375F20)
  {
    result = swift_getWitnessTable(&unk_1002DB8C0, &type metadata for Proto_Gnss_Emergency_LcsGanssId);
    atomic_store(result, (unint64_t *)&qword_100375F20);
  }
  return result;
}

uint64_t sub_1001D7594()
{
  return sub_10000FFB4(&qword_100375F28, &qword_100375F30);
}

unint64_t sub_1001D75BC()
{
  unint64_t result;

  result = qword_100375F38;
  if (!qword_100375F38)
  {
    result = swift_getWitnessTable(&unk_1002DB930, &type metadata for Proto_Gnss_Emergency_AidMask);
    atomic_store(result, (unint64_t *)&qword_100375F38);
  }
  return result;
}

unint64_t sub_1001D7604()
{
  unint64_t result;

  result = qword_100375F40;
  if (!qword_100375F40)
  {
    result = swift_getWitnessTable(&unk_1002DB958, &type metadata for Proto_Gnss_Emergency_AidMask);
    atomic_store(result, (unint64_t *)&qword_100375F40);
  }
  return result;
}

unint64_t sub_1001D764C()
{
  unint64_t result;

  result = qword_100375F48;
  if (!qword_100375F48)
  {
    result = swift_getWitnessTable(&unk_1002DB9E0, &type metadata for Proto_Gnss_Emergency_AidMask);
    atomic_store(result, (unint64_t *)&qword_100375F48);
  }
  return result;
}

uint64_t sub_1001D7690()
{
  return sub_10000FFB4(&qword_100375F50, &qword_100375F58);
}

unint64_t sub_1001D76B8()
{
  unint64_t result;

  result = qword_100375F60;
  if (!qword_100375F60)
  {
    result = swift_getWitnessTable(&unk_1002DBA50, &type metadata for Proto_Gnss_Emergency_GanssCommonAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F60);
  }
  return result;
}

unint64_t sub_1001D7700()
{
  unint64_t result;

  result = qword_100375F68;
  if (!qword_100375F68)
  {
    result = swift_getWitnessTable(&unk_1002DBA78, &type metadata for Proto_Gnss_Emergency_GanssCommonAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F68);
  }
  return result;
}

unint64_t sub_1001D7748()
{
  unint64_t result;

  result = qword_100375F70;
  if (!qword_100375F70)
  {
    result = swift_getWitnessTable(&unk_1002DBB00, &type metadata for Proto_Gnss_Emergency_GanssCommonAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F70);
  }
  return result;
}

uint64_t sub_1001D778C()
{
  return sub_10000FFB4(&qword_100375F78, &qword_100375F80);
}

unint64_t sub_1001D77B4()
{
  unint64_t result;

  result = qword_100375F88;
  if (!qword_100375F88)
  {
    result = swift_getWitnessTable(&unk_1002DBB70, &type metadata for Proto_Gnss_Emergency_GanssGenericAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F88);
  }
  return result;
}

unint64_t sub_1001D77FC()
{
  unint64_t result;

  result = qword_100375F90;
  if (!qword_100375F90)
  {
    result = swift_getWitnessTable(&unk_1002DBB98, &type metadata for Proto_Gnss_Emergency_GanssGenericAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F90);
  }
  return result;
}

unint64_t sub_1001D7844()
{
  unint64_t result;

  result = qword_100375F98;
  if (!qword_100375F98)
  {
    result = swift_getWitnessTable(&unk_1002DBC20, &type metadata for Proto_Gnss_Emergency_GanssGenericAidMask);
    atomic_store(result, (unint64_t *)&qword_100375F98);
  }
  return result;
}

uint64_t sub_1001D7888()
{
  return sub_10000FFB4(&qword_100375FA0, &qword_100375FA8);
}

unint64_t sub_1001D78B0()
{
  unint64_t result;

  result = qword_100375FB0;
  if (!qword_100375FB0)
  {
    result = swift_getWitnessTable(&unk_1002DBC90, &type metadata for Proto_Gnss_Emergency_GanssSignalIdMask);
    atomic_store(result, (unint64_t *)&qword_100375FB0);
  }
  return result;
}

unint64_t sub_1001D78F8()
{
  unint64_t result;

  result = qword_100375FB8;
  if (!qword_100375FB8)
  {
    result = swift_getWitnessTable(&unk_1002DBCB8, &type metadata for Proto_Gnss_Emergency_GanssSignalIdMask);
    atomic_store(result, (unint64_t *)&qword_100375FB8);
  }
  return result;
}

unint64_t sub_1001D7940()
{
  unint64_t result;

  result = qword_100375FC0;
  if (!qword_100375FC0)
  {
    result = swift_getWitnessTable(&unk_1002DBD40, &type metadata for Proto_Gnss_Emergency_GanssSignalIdMask);
    atomic_store(result, (unint64_t *)&qword_100375FC0);
  }
  return result;
}

uint64_t sub_1001D7984()
{
  return sub_10000FFB4(&qword_100375FC8, &qword_100375FD0);
}

unint64_t sub_1001D79AC()
{
  unint64_t result;

  result = qword_100375FD8;
  if (!qword_100375FD8)
  {
    result = swift_getWitnessTable(&unk_1002DBDB0, &type metadata for Proto_Gnss_Emergency_AssistanceRequest);
    atomic_store(result, (unint64_t *)&qword_100375FD8);
  }
  return result;
}

unint64_t sub_1001D79F4()
{
  unint64_t result;

  result = qword_100375FE0;
  if (!qword_100375FE0)
  {
    result = swift_getWitnessTable(&unk_1002DBDD8, &type metadata for Proto_Gnss_Emergency_AssistanceRequest);
    atomic_store(result, (unint64_t *)&qword_100375FE0);
  }
  return result;
}

unint64_t sub_1001D7A3C()
{
  unint64_t result;

  result = qword_100375FE8;
  if (!qword_100375FE8)
  {
    result = swift_getWitnessTable(&unk_1002DBE60, &type metadata for Proto_Gnss_Emergency_AssistanceRequest);
    atomic_store(result, (unint64_t *)&qword_100375FE8);
  }
  return result;
}

uint64_t sub_1001D7A80()
{
  return sub_10000FFB4(&qword_100375FF0, &qword_100375FF8);
}

unint64_t sub_1001D7AA8()
{
  unint64_t result;

  result = qword_100376000;
  if (!qword_100376000)
  {
    result = swift_getWitnessTable(&unk_1002DBED0, &type metadata for Proto_Gnss_Emergency_UtranSfnGpsUncertainty);
    atomic_store(result, (unint64_t *)&qword_100376000);
  }
  return result;
}

unint64_t sub_1001D7AF0()
{
  unint64_t result;

  result = qword_100376008;
  if (!qword_100376008)
  {
    result = swift_getWitnessTable(&unk_1002DBEF8, &type metadata for Proto_Gnss_Emergency_UtranSfnGpsUncertainty);
    atomic_store(result, (unint64_t *)&qword_100376008);
  }
  return result;
}

unint64_t sub_1001D7B38()
{
  unint64_t result;

  result = qword_100376010;
  if (!qword_100376010)
  {
    result = swift_getWitnessTable(&unk_1002DBF80, &type metadata for Proto_Gnss_Emergency_UtranSfnGpsUncertainty);
    atomic_store(result, (unint64_t *)&qword_100376010);
  }
  return result;
}

uint64_t sub_1001D7B7C()
{
  return sub_10000FFB4(&qword_100376018, &qword_100376020);
}

unint64_t sub_1001D7BA4()
{
  unint64_t result;

  result = qword_100376028;
  if (!qword_100376028)
  {
    result = swift_getWitnessTable(&unk_1002DBFF0, &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt);
    atomic_store(result, (unint64_t *)&qword_100376028);
  }
  return result;
}

unint64_t sub_1001D7BEC()
{
  unint64_t result;

  result = qword_100376030;
  if (!qword_100376030)
  {
    result = swift_getWitnessTable(&unk_1002DC018, &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt);
    atomic_store(result, (unint64_t *)&qword_100376030);
  }
  return result;
}

unint64_t sub_1001D7C34()
{
  unint64_t result;

  result = qword_100376038;
  if (!qword_100376038)
  {
    result = swift_getWitnessTable(&unk_1002DC0A0, &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt);
    atomic_store(result, (unint64_t *)&qword_100376038);
  }
  return result;
}

uint64_t sub_1001D7C78()
{
  return sub_10000FFB4(&qword_100376040, &qword_100376048);
}

unint64_t sub_1001D7CA0()
{
  unint64_t result;

  result = qword_100376050;
  if (!qword_100376050)
  {
    result = swift_getWitnessTable(&unk_1002DC110, &type metadata for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType);
    atomic_store(result, (unint64_t *)&qword_100376050);
  }
  return result;
}

unint64_t sub_1001D7CE8()
{
  unint64_t result;

  result = qword_100376058;
  if (!qword_100376058)
  {
    result = swift_getWitnessTable(&unk_1002DC138, &type metadata for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType);
    atomic_store(result, (unint64_t *)&qword_100376058);
  }
  return result;
}

unint64_t sub_1001D7D30()
{
  unint64_t result;

  result = qword_100376060;
  if (!qword_100376060)
  {
    result = swift_getWitnessTable(&unk_1002DC1C0, &type metadata for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType);
    atomic_store(result, (unint64_t *)&qword_100376060);
  }
  return result;
}

uint64_t sub_1001D7D74()
{
  return sub_10000FFB4(&qword_100376068, &qword_100376070);
}

unint64_t sub_1001D7D9C()
{
  unint64_t result;

  result = qword_100376078;
  if (!qword_100376078)
  {
    result = swift_getWitnessTable(&unk_1002DC230, &type metadata for Proto_Gnss_Emergency_AfltAction);
    atomic_store(result, (unint64_t *)&qword_100376078);
  }
  return result;
}

unint64_t sub_1001D7DE4()
{
  unint64_t result;

  result = qword_100376080;
  if (!qword_100376080)
  {
    result = swift_getWitnessTable(&unk_1002DC258, &type metadata for Proto_Gnss_Emergency_AfltAction);
    atomic_store(result, (unint64_t *)&qword_100376080);
  }
  return result;
}

unint64_t sub_1001D7E2C()
{
  unint64_t result;

  result = qword_100376088;
  if (!qword_100376088)
  {
    result = swift_getWitnessTable(&unk_1002DC2E0, &type metadata for Proto_Gnss_Emergency_AfltAction);
    atomic_store(result, (unint64_t *)&qword_100376088);
  }
  return result;
}

uint64_t sub_1001D7E70()
{
  return sub_10000FFB4(&qword_100376090, &qword_100376098);
}

unint64_t sub_1001D7E98()
{
  unint64_t result;

  result = qword_1003760A0;
  if (!qword_1003760A0)
  {
    result = swift_getWitnessTable(&unk_1002DC350, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult);
    atomic_store(result, (unint64_t *)&qword_1003760A0);
  }
  return result;
}

unint64_t sub_1001D7EE0()
{
  unint64_t result;

  result = qword_1003760A8;
  if (!qword_1003760A8)
  {
    result = swift_getWitnessTable(&unk_1002DC378, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult);
    atomic_store(result, (unint64_t *)&qword_1003760A8);
  }
  return result;
}

unint64_t sub_1001D7F28()
{
  unint64_t result;

  result = qword_1003760B0;
  if (!qword_1003760B0)
  {
    result = swift_getWitnessTable(&unk_1002DC400, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult);
    atomic_store(result, (unint64_t *)&qword_1003760B0);
  }
  return result;
}

uint64_t sub_1001D7F6C()
{
  return sub_10000FFB4(&qword_1003760B8, &qword_1003760C0);
}

uint64_t sub_1001D7F90()
{
  return sub_10000FD38(&qword_1003760C8, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCB88);
}

uint64_t sub_1001D7FBC()
{
  return sub_10000FD38(&qword_1003760D0, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCAB0);
}

uint64_t sub_1001D7FE8()
{
  return sub_10000FD38(&qword_100375728, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCBB0);
}

uint64_t sub_1001D8014()
{
  return sub_10000FD38(&qword_1003760D8, type metadata accessor for Proto_Gnss_Emergency_Configuration, (uint64_t)&unk_1002DCBF0);
}

uint64_t sub_1001D8040()
{
  return sub_10000FD38(&qword_1003760E0, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCCF0);
}

uint64_t sub_1001D806C()
{
  return sub_10000FD38(&qword_1003760E8, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCC18);
}

uint64_t sub_1001D8098()
{
  return sub_10000FD38(&qword_100375730, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCD18);
}

uint64_t sub_1001D80C4()
{
  return sub_10000FD38(&qword_1003760F0, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&unk_1002DCD58);
}

uint64_t sub_1001D80F0()
{
  return sub_10000FD38(&qword_1003760F8, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCE58);
}

uint64_t sub_1001D811C()
{
  return sub_10000FD38(&qword_100376100, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCD80);
}

uint64_t sub_1001D8148()
{
  return sub_10000FD38(&qword_100375738, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCE80);
}

uint64_t sub_1001D8174()
{
  return sub_10000FD38(&qword_100376108, type metadata accessor for Proto_Gnss_Emergency_SuplConfig, (uint64_t)&unk_1002DCEC0);
}

uint64_t sub_1001D81A0()
{
  return sub_10000FD38(&qword_100376110, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCFC0);
}

uint64_t sub_1001D81CC()
{
  return sub_10000FD38(&qword_100375758, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCEE8);
}

uint64_t sub_1001D81F8()
{
  return sub_10000FD38(&qword_100375740, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DCFE8);
}

uint64_t sub_1001D8224()
{
  return sub_10000FD38(&qword_100376118, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo, (uint64_t)&unk_1002DD028);
}

uint64_t sub_1001D8250()
{
  return sub_10000FD38(&qword_100376120, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD128);
}

uint64_t sub_1001D827C()
{
  return sub_10000FD38(&qword_100375760, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD050);
}

uint64_t sub_1001D82A8()
{
  return sub_10000FD38(&qword_100375748, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD150);
}

uint64_t sub_1001D82D4()
{
  return sub_10000FD38(&qword_100376128, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, (uint64_t)&unk_1002DD190);
}

uint64_t sub_1001D8300()
{
  return sub_10000FD38(&qword_100376130, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD290);
}

uint64_t sub_1001D832C()
{
  return sub_10000FD38(&qword_100375768, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD1B8);
}

uint64_t sub_1001D8358()
{
  return sub_10000FD38(&qword_100375750, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD2B8);
}

uint64_t sub_1001D8384()
{
  return sub_10000FD38(&qword_100376138, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo, (uint64_t)&unk_1002DD2F8);
}

uint64_t sub_1001D83B0()
{
  return sub_10000FD38(&qword_100376140, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD3F8);
}

uint64_t sub_1001D83DC()
{
  return sub_10000FD38(&qword_100376148, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD320);
}

uint64_t sub_1001D8408()
{
  return sub_10000FD38(&qword_100375770, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD420);
}

uint64_t sub_1001D8434()
{
  return sub_10000FD38(&qword_100376150, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&unk_1002DD460);
}

uint64_t sub_1001D8460()
{
  return sub_10000FD38(&qword_100376158, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD560);
}

uint64_t sub_1001D848C()
{
  return sub_10000FD38(&qword_100376160, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD488);
}

uint64_t sub_1001D84B8()
{
  return sub_10000FD38(&qword_100375778, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD588);
}

uint64_t sub_1001D84E4()
{
  return sub_10000FD38(&qword_100376168, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&unk_1002DD5C8);
}

uint64_t sub_1001D8510()
{
  return sub_10000FD38(&qword_100376170, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD6C8);
}

uint64_t sub_1001D853C()
{
  return sub_10000FD38(&qword_100375788, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD5F0);
}

uint64_t sub_1001D8568()
{
  return sub_10000FD38(&qword_100375780, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD6F0);
}

uint64_t sub_1001D8594()
{
  return sub_10000FD38(&qword_100376178, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement, (uint64_t)&unk_1002DD730);
}

uint64_t sub_1001D85C0()
{
  return sub_10000FD38(&qword_100376180, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD830);
}

uint64_t sub_1001D85EC()
{
  return sub_10000FD38(&qword_100376188, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD758);
}

uint64_t sub_1001D8618()
{
  return sub_10000FD38(&qword_100375790, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD858);
}

uint64_t sub_1001D8644()
{
  return sub_10000FD38(&qword_100376190, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&unk_1002DD898);
}

uint64_t sub_1001D8670()
{
  return sub_10000FD38(&qword_100376198, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD998);
}

uint64_t sub_1001D869C()
{
  return sub_10000FD38(&qword_1003761A0, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD8C0);
}

uint64_t sub_1001D86C8()
{
  return sub_10000FD38(&qword_100375798, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DD9C0);
}

uint64_t sub_1001D86F4()
{
  return sub_10000FD38(&qword_1003761A8, type metadata accessor for Proto_Gnss_Emergency_QoP, (uint64_t)&unk_1002DDA00);
}

uint64_t sub_1001D8720()
{
  return sub_10000FD38(&qword_1003761B0, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDB00);
}

uint64_t sub_1001D874C()
{
  return sub_10000FD38(&qword_1003761B8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDA28);
}

uint64_t sub_1001D8778()
{
  return sub_10000FD38(&qword_1003757A0, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDB28);
}

uint64_t sub_1001D87A4()
{
  return sub_10000FD38(&qword_1003761C0, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002DDB68);
}

uint64_t sub_1001D87D0()
{
  return sub_10000FD38(&qword_1003761C8, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDC68);
}

uint64_t sub_1001D87FC()
{
  return sub_10000FD38(&qword_1003761D0, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDB90);
}

uint64_t sub_1001D8828()
{
  return sub_10000FD38(&qword_1003757A8, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDC90);
}

uint64_t sub_1001D8854()
{
  return sub_10000FD38(&qword_1003761D8, type metadata accessor for Proto_Gnss_Emergency_Notification, (uint64_t)&unk_1002DDCD0);
}

uint64_t sub_1001D8880()
{
  return sub_10000FD38(&qword_1003761E0, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDDD0);
}

uint64_t sub_1001D88AC()
{
  return sub_10000FD38(&qword_1003761E8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDCF8);
}

uint64_t sub_1001D88D8()
{
  return sub_10000FD38(&qword_1003757B0, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDDF8);
}

uint64_t sub_1001D8904()
{
  return sub_10000FD38(&qword_1003761F0, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, (uint64_t)&unk_1002DDE38);
}

uint64_t sub_1001D8930()
{
  return sub_10000FD38(&qword_1003761F8, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDF38);
}

uint64_t sub_1001D895C()
{
  return sub_10000FD38(&qword_100376200, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDE60);
}

uint64_t sub_1001D8988()
{
  return sub_10000FD38(&qword_1003757B8, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDF60);
}

uint64_t sub_1001D89B4()
{
  return sub_10000FD38(&qword_100376208, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002DDFA0);
}

uint64_t sub_1001D89E0()
{
  return sub_10000FD38(&qword_100376210, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DE0A0);
}

uint64_t sub_1001D8A0C()
{
  return sub_10000FD38(&qword_100376218, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DDFC8);
}

uint64_t sub_1001D8A38()
{
  return sub_10000FD38(&qword_1003757C0, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DE0C8);
}

uint64_t sub_1001D8A64()
{
  return sub_10000FD38(&qword_100376220, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&unk_1002DE108);
}

uint64_t sub_1001D8A90()
{
  return sub_10000FD38(&qword_100376228, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE208);
}

uint64_t sub_1001D8ABC()
{
  return sub_10000FD38(&qword_100376230, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE130);
}

uint64_t sub_1001D8AE8()
{
  return sub_10000FD38(&qword_1003757C8, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE230);
}

uint64_t sub_1001D8B14()
{
  return sub_10000FD38(&qword_100376238, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&unk_1002DE270);
}

uint64_t sub_1001D8B40()
{
  return sub_10000FD38(&qword_100376240, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE370);
}

uint64_t sub_1001D8B6C()
{
  return sub_10000FD38(&qword_100376248, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE298);
}

uint64_t sub_1001D8B98()
{
  return sub_10000FD38(&qword_1003757D0, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE398);
}

uint64_t sub_1001D8BC4()
{
  return sub_10000FD38(&qword_100376250, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002DE3D8);
}

uint64_t sub_1001D8BF0()
{
  return sub_10000FD38(&qword_100376258, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE4D8);
}

uint64_t sub_1001D8C1C()
{
  return sub_10000FD38(&qword_100376260, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE400);
}

uint64_t sub_1001D8C48()
{
  return sub_10000FD38(&qword_1003757D8, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE500);
}

uint64_t sub_1001D8C74()
{
  return sub_10000FD38(&qword_100376268, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (uint64_t)&unk_1002DE540);
}

uint64_t sub_1001D8CA0()
{
  return sub_10000FD38(&qword_100376270, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE640);
}

uint64_t sub_1001D8CCC()
{
  return sub_10000FD38(&qword_100376278, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE568);
}

uint64_t sub_1001D8CF8()
{
  return sub_10000FD38(&qword_1003757E0, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE668);
}

uint64_t sub_1001D8D24()
{
  return sub_10000FD38(&qword_100376280, type metadata accessor for Proto_Gnss_Emergency_Plmn, (uint64_t)&unk_1002DE6A8);
}

uint64_t sub_1001D8D50()
{
  return sub_10000FD38(&qword_100376288, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE7A8);
}

uint64_t sub_1001D8D7C()
{
  return sub_10000FD38(&qword_100376290, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE6D0);
}

uint64_t sub_1001D8DA8()
{
  return sub_10000FD38(&qword_1003757E8, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE7D0);
}

uint64_t sub_1001D8DD4()
{
  return sub_10000FD38(&qword_100376298, type metadata accessor for Proto_Gnss_Emergency_SessionInfo, (uint64_t)&unk_1002DE810);
}

uint64_t sub_1001D8E00()
{
  return sub_10000FD38(&qword_1003762A0, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE910);
}

uint64_t sub_1001D8E2C()
{
  return sub_10000FD38(&qword_1003762A8, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE838);
}

uint64_t sub_1001D8E58()
{
  return sub_10000FD38(&qword_1003757F0, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE938);
}

uint64_t sub_1001D8E84()
{
  return sub_10000FD38(&qword_1003762B0, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&unk_1002DE978);
}

uint64_t sub_1001D8EB0()
{
  return sub_10000FD38(&qword_1003762B8, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DEA78);
}

uint64_t sub_1001D8EDC()
{
  return sub_10000FD38(&qword_1003762C0, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DE9A0);
}

uint64_t sub_1001D8F08()
{
  return sub_10000FD38(&qword_1003757F8, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DEAA0);
}

uint64_t sub_1001D8F34()
{
  return sub_10000FD38(&qword_1003762C8, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, (uint64_t)&unk_1002DEAE0);
}

uint64_t sub_1001D8F60()
{
  return sub_10000FD38(&qword_1003762D0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEBE0);
}

uint64_t sub_1001D8F8C()
{
  return sub_10000FD38(&qword_1003762D8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEB08);
}

uint64_t sub_1001D8FB8()
{
  return sub_10000FD38(&qword_100375800, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEC08);
}

uint64_t sub_1001D8FE4()
{
  return sub_10000FD38(&qword_1003762E0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, (uint64_t)&unk_1002DEC48);
}

uint64_t sub_1001D9010()
{
  return sub_10000FD38(&qword_1003762E8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DED48);
}

uint64_t sub_1001D903C()
{
  return sub_10000FD38(&qword_1003762F0, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DEC70);
}

uint64_t sub_1001D9068()
{
  return sub_10000FD38(&qword_100375808, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DED70);
}

uint64_t sub_1001D9094()
{
  return sub_10000FD38(&qword_1003762F8, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, (uint64_t)&unk_1002DEDB0);
}

uint64_t sub_1001D90C0()
{
  return sub_10000FD38(&qword_100376300, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEEB0);
}

uint64_t sub_1001D90EC()
{
  return sub_10000FD38(&qword_100376308, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEDD8);
}

uint64_t sub_1001D9118()
{
  return sub_10000FD38(&qword_100375810, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEED8);
}

uint64_t sub_1001D9144()
{
  return sub_10000FD38(&qword_100376310, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, (uint64_t)&unk_1002DEF18);
}

uint64_t sub_1001D9170()
{
  return sub_10000FD38(&qword_100376318, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DF018);
}

uint64_t sub_1001D919C()
{
  return sub_10000FD38(&qword_100376320, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DEF40);
}

uint64_t sub_1001D91C8()
{
  return sub_10000FD38(&qword_100375818, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DF040);
}

uint64_t sub_1001D91F4()
{
  return sub_10000FD38(&qword_100376328, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, (uint64_t)&unk_1002DF080);
}

uint64_t sub_1001D9220()
{
  return sub_10000FD38(&qword_100376330, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF180);
}

uint64_t sub_1001D924C()
{
  return sub_10000FD38(&qword_100376338, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF0A8);
}

uint64_t sub_1001D9278()
{
  return sub_10000FD38(&qword_100375820, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF1A8);
}

uint64_t sub_1001D92A4()
{
  return sub_10000FD38(&qword_100376340, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, (uint64_t)&unk_1002DF1E8);
}

uint64_t sub_1001D92D0()
{
  return sub_10000FD38(&qword_100376348, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF2E8);
}

uint64_t sub_1001D92FC()
{
  return sub_10000FD38(&qword_100376350, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF210);
}

uint64_t sub_1001D9328()
{
  return sub_10000FD38(&qword_100375828, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF310);
}

uint64_t sub_1001D9354()
{
  return sub_10000FD38(&qword_100376358, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, (uint64_t)&unk_1002DF350);
}

uint64_t sub_1001D9380()
{
  return sub_10000FD38(&qword_100376360, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF450);
}

uint64_t sub_1001D93AC()
{
  return sub_10000FD38(&qword_100376368, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF378);
}

uint64_t sub_1001D93D8()
{
  return sub_10000FD38(&qword_100375830, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF478);
}

uint64_t sub_1001D9404()
{
  return sub_10000FD38(&qword_100376370, type metadata accessor for Proto_Gnss_Emergency_CellInfo, (uint64_t)&unk_1002DF4B8);
}

uint64_t sub_1001D9430()
{
  return sub_10000FD38(&qword_100376378, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF5B8);
}

uint64_t sub_1001D945C()
{
  return sub_10000FD38(&qword_100376380, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF4E0);
}

uint64_t sub_1001D9488()
{
  return sub_10000FD38(&qword_100375838, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF5E0);
}

uint64_t sub_1001D94B4()
{
  return sub_10000FD38(&qword_100376388, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, (uint64_t)&unk_1002DF620);
}

uint64_t sub_1001D94E0()
{
  return sub_10000FD38(&qword_100376390, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF720);
}

uint64_t sub_1001D950C()
{
  return sub_10000FD38(&qword_100376398, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF648);
}

uint64_t sub_1001D9538()
{
  return sub_10000FD38(&qword_100375840, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF748);
}

uint64_t sub_1001D9564()
{
  return sub_10000FD38(&qword_1003763A0, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, (uint64_t)&unk_1002DF788);
}

uint64_t sub_1001D9590()
{
  return sub_10000FD38(&qword_1003763A8, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF888);
}

uint64_t sub_1001D95BC()
{
  return sub_10000FD38(&qword_100375990, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF7B0);
}

uint64_t sub_1001D95E8()
{
  return sub_10000FD38(&qword_100375848, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF8B0);
}

uint64_t sub_1001D9614()
{
  return sub_10000FD38(&qword_1003763B0, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, (uint64_t)&unk_1002DF8F0);
}

uint64_t sub_1001D9640()
{
  return sub_10000FD38(&qword_1003763B8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF9F0);
}

uint64_t sub_1001D966C()
{
  return sub_10000FD38(&qword_1003763C0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DF918);
}

uint64_t sub_1001D9698()
{
  return sub_10000FD38(&qword_100375850, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DFA18);
}

uint64_t sub_1001D96C4()
{
  return sub_10000FD38(&qword_1003763C8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, (uint64_t)&unk_1002DFA58);
}

uint64_t sub_1001D96F0()
{
  return sub_10000FD38(&qword_1003763D0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFB58);
}

uint64_t sub_1001D971C()
{
  return sub_10000FD38(&qword_1003763D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFA80);
}

uint64_t sub_1001D9748()
{
  return sub_10000FD38(&qword_100375858, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFB80);
}

uint64_t sub_1001D9774()
{
  return sub_10000FD38(&qword_1003763E0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, (uint64_t)&unk_1002DFBC0);
}

uint64_t sub_1001D97A0()
{
  return sub_10000FD38(&qword_1003763E8, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFCC0);
}

uint64_t sub_1001D97CC()
{
  return sub_10000FD38(&qword_1003763F0, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFBE8);
}

uint64_t sub_1001D97F8()
{
  return sub_10000FD38(&qword_100375860, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFCE8);
}

uint64_t sub_1001D9824()
{
  return sub_10000FD38(&qword_1003763F8, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo, (uint64_t)&unk_1002DFD28);
}

uint64_t sub_1001D9850()
{
  return sub_10000FD38(&qword_100376400, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFE28);
}

uint64_t sub_1001D987C()
{
  return sub_10000FD38(&qword_100375898, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFD50);
}

uint64_t sub_1001D98A8()
{
  return sub_10000FD38(&qword_100375868, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFE50);
}

uint64_t sub_1001D98D4()
{
  return sub_10000FD38(&qword_100376408, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002DFE90);
}

uint64_t sub_1001D9900()
{
  return sub_10000FD38(&qword_100376410, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFF90);
}

uint64_t sub_1001D992C()
{
  return sub_10000FD38(&qword_100376418, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFEB8);
}

uint64_t sub_1001D9958()
{
  return sub_10000FD38(&qword_100375870, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFFB8);
}

uint64_t sub_1001D9984()
{
  return sub_10000FD38(&qword_100376420, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, (uint64_t)&unk_1002DFFF8);
}

uint64_t sub_1001D99B0()
{
  return sub_10000FD38(&qword_100376428, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E00F8);
}

uint64_t sub_1001D99DC()
{
  return sub_10000FD38(&qword_100376430, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0020);
}

uint64_t sub_1001D9A08()
{
  return sub_10000FD38(&qword_100375878, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0120);
}

uint64_t sub_1001D9A34()
{
  return sub_10000FD38(&qword_100376438, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, (uint64_t)&unk_1002E0160);
}

uint64_t sub_1001D9A60()
{
  return sub_10000FD38(&qword_100376440, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0260);
}

uint64_t sub_1001D9A8C()
{
  return sub_10000FD38(&qword_100376448, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0188);
}

uint64_t sub_1001D9AB8()
{
  return sub_10000FD38(&qword_100375880, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E0288);
}

uint64_t sub_1001D9AE4()
{
  return sub_10000FD38(&qword_100376450, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, (uint64_t)&unk_1002E02C8);
}

uint64_t sub_1001D9B10()
{
  return sub_10000FD38(&qword_100376458, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E03C8);
}

uint64_t sub_1001D9B3C()
{
  return sub_10000FD38(&qword_100376460, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E02F0);
}

uint64_t sub_1001D9B68()
{
  return sub_10000FD38(&qword_100375888, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E03F0);
}

uint64_t sub_1001D9B94()
{
  return sub_10000FD38(&qword_100376468, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, (uint64_t)&unk_1002E0430);
}

uint64_t sub_1001D9BC0()
{
  return sub_10000FD38(&qword_100376470, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0530);
}

uint64_t sub_1001D9BEC()
{
  return sub_10000FD38(&qword_100376478, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0458);
}

uint64_t sub_1001D9C18()
{
  return sub_10000FD38(&qword_100375890, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0558);
}

uint64_t sub_1001D9C44()
{
  return sub_10000FD38(&qword_100376480, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, (uint64_t)&unk_1002E0598);
}

uint64_t sub_1001D9C70()
{
  return sub_10000FD38(&qword_100376488, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E0698);
}

uint64_t sub_1001D9C9C()
{
  return sub_10000FD38(&qword_100376490, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E05C0);
}

uint64_t sub_1001D9CC8()
{
  return sub_10000FD38(&qword_1003758A0, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E06C0);
}

uint64_t sub_1001D9CF4()
{
  return sub_10000FD38(&qword_100376498, type metadata accessor for Proto_Gnss_Emergency_Polygon, (uint64_t)&unk_1002E0700);
}

uint64_t sub_1001D9D20()
{
  return sub_10000FD38(&qword_1003764A0, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0800);
}

uint64_t sub_1001D9D4C()
{
  return sub_10000FD38(&qword_1003764A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0728);
}

uint64_t sub_1001D9D78()
{
  return sub_10000FD38(&qword_1003758A8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0828);
}

uint64_t sub_1001D9DA4()
{
  return sub_10000FD38(&qword_1003764B0, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (uint64_t)&unk_1002E0868);
}

uint64_t sub_1001D9DD0()
{
  return sub_10000FD38(&qword_1003764B8, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0968);
}

uint64_t sub_1001D9DFC()
{
  return sub_10000FD38(&qword_1003764C0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0890);
}

uint64_t sub_1001D9E28()
{
  return sub_10000FD38(&qword_1003758B0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E0990);
}

uint64_t sub_1001D9E54()
{
  return sub_10000FD38(&qword_1003764C8, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, (uint64_t)&unk_1002E09D0);
}

uint64_t sub_1001D9E80()
{
  return sub_10000FD38(&qword_1003764D0, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E0AD0);
}

uint64_t sub_1001D9EAC()
{
  return sub_10000FD38(&qword_1003764D8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E09F8);
}

uint64_t sub_1001D9ED8()
{
  return sub_10000FD38(&qword_1003758B8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E0AF8);
}

uint64_t sub_1001D9F04()
{
  return sub_10000FD38(&qword_1003764E0, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, (uint64_t)&unk_1002E0B38);
}

uint64_t sub_1001D9F30()
{
  return sub_10000FD38(&qword_1003764E8, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0C38);
}

uint64_t sub_1001D9F5C()
{
  return sub_10000FD38(&qword_1003764F0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0B60);
}

uint64_t sub_1001D9F88()
{
  return sub_10000FD38(&qword_1003758C0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0C60);
}

uint64_t sub_1001D9FB4()
{
  return sub_10000FD38(&qword_1003764F8, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, (uint64_t)&unk_1002E0CA0);
}

uint64_t sub_1001D9FE0()
{
  return sub_10000FD38(&qword_100376500, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0DA0);
}

uint64_t sub_1001DA00C()
{
  return sub_10000FD38(&qword_100376508, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0CC8);
}

uint64_t sub_1001DA038()
{
  return sub_10000FD38(&qword_1003758C8, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0DC8);
}

uint64_t sub_1001DA064()
{
  return sub_10000FD38(&qword_100376510, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, (uint64_t)&unk_1002E0E08);
}

uint64_t sub_1001DA090()
{
  return sub_10000FD38(&qword_100376518, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0F08);
}

uint64_t sub_1001DA0BC()
{
  return sub_10000FD38(&qword_100376520, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0E30);
}

uint64_t sub_1001DA0E8()
{
  return sub_10000FD38(&qword_1003758D0, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0F30);
}

uint64_t sub_1001DA114()
{
  return sub_10000FD38(&qword_100376528, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, (uint64_t)&unk_1002E0F70);
}

uint64_t sub_1001DA140()
{
  return sub_10000FD38(&qword_100376530, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E1070);
}

uint64_t sub_1001DA16C()
{
  return sub_10000FD38(&qword_100376538, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E0F98);
}

uint64_t sub_1001DA198()
{
  return sub_10000FD38(&qword_1003758D8, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E1098);
}

uint64_t sub_1001DA1C4()
{
  return sub_10000FD38(&qword_100376540, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, (uint64_t)&unk_1002E10D8);
}

uint64_t sub_1001DA1F0()
{
  return sub_10000FD38(&qword_100376548, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E11D8);
}

uint64_t sub_1001DA21C()
{
  return sub_10000FD38(&qword_100376550, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1100);
}

uint64_t sub_1001DA248()
{
  return sub_10000FD38(&qword_1003758E0, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1200);
}

uint64_t sub_1001DA274()
{
  return sub_10000FD38(&qword_100376558, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, (uint64_t)&unk_1002E1240);
}

uint64_t sub_1001DA2A0()
{
  return sub_10000FD38(&qword_100376560, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E1340);
}

uint64_t sub_1001DA2CC()
{
  return sub_10000FD38(&qword_100376568, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E1268);
}

uint64_t sub_1001DA2F8()
{
  return sub_10000FD38(&qword_1003758E8, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E1368);
}

uint64_t sub_1001DA324()
{
  return sub_10000FD38(&qword_100376570, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&unk_1002E13A8);
}

uint64_t sub_1001DA350()
{
  return sub_10000FD38(&qword_100376578, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E14A8);
}

uint64_t sub_1001DA37C()
{
  return sub_10000FD38(&qword_1003758F8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E13D0);
}

uint64_t sub_1001DA3A8()
{
  return sub_10000FD38(&qword_1003758F0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E14D0);
}

uint64_t sub_1001DA3D4()
{
  return sub_10000FD38(&qword_100376580, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement, (uint64_t)&unk_1002E1510);
}

uint64_t sub_1001DA400()
{
  return sub_10000FD38(&qword_100376588, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1610);
}

uint64_t sub_1001DA42C()
{
  return sub_10000FD38(&qword_100376590, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1538);
}

uint64_t sub_1001DA458()
{
  return sub_10000FD38(&qword_100375900, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1638);
}

uint64_t sub_1001DA484()
{
  return sub_10000FD38(&qword_100376598, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, (uint64_t)&unk_1002E1678);
}

uint64_t sub_1001DA4B0()
{
  return sub_10000FD38(&qword_1003765A0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E1778);
}

uint64_t sub_1001DA4DC()
{
  return sub_10000FD38(&qword_1003765A8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E16A0);
}

uint64_t sub_1001DA508()
{
  return sub_10000FD38(&qword_100375908, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E17A0);
}

uint64_t sub_1001DA534()
{
  return sub_10000FD38(&qword_1003765B0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, (uint64_t)&unk_1002E17E0);
}

uint64_t sub_1001DA560()
{
  return sub_10000FD38(&qword_1003765B8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E18E0);
}

uint64_t sub_1001DA58C()
{
  return sub_10000FD38(&qword_1003765C0, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1808);
}

uint64_t sub_1001DA5B8()
{
  return sub_10000FD38(&qword_100375910, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1908);
}

uint64_t sub_1001DA5E4()
{
  return sub_10000FD38(&qword_1003765C8, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, (uint64_t)&unk_1002E1948);
}

uint64_t sub_1001DA610()
{
  return sub_10000FD38(&qword_1003765D0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1A48);
}

uint64_t sub_1001DA63C()
{
  return sub_10000FD38(&qword_1003765D8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1970);
}

uint64_t sub_1001DA668()
{
  return sub_10000FD38(&qword_100375918, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1A70);
}

uint64_t sub_1001DA694()
{
  return sub_10000FD38(&qword_1003765E0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement, (uint64_t)&unk_1002E1AB0);
}

uint64_t sub_1001DA6C0()
{
  return sub_10000FD38(&qword_1003765E8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1BB0);
}

uint64_t sub_1001DA6EC()
{
  return sub_10000FD38(&qword_1003765F0, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1AD8);
}

uint64_t sub_1001DA718()
{
  return sub_10000FD38(&qword_100375920, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1BD8);
}

uint64_t sub_1001DA744()
{
  return sub_10000FD38(&qword_1003765F8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (uint64_t)&unk_1002E1C18);
}

uint64_t sub_1001DA770()
{
  return sub_10000FD38(&qword_100376600, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1D18);
}

uint64_t sub_1001DA79C()
{
  return sub_10000FD38(&qword_100376608, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1C40);
}

uint64_t sub_1001DA7C8()
{
  return sub_10000FD38(&qword_100375928, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1D40);
}

uint64_t sub_1001DA7F4()
{
  return sub_10000FD38(&qword_100376610, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&unk_1002E1D80);
}

uint64_t sub_1001DA820()
{
  return sub_10000FD38(&qword_100376618, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1E80);
}

uint64_t sub_1001DA84C()
{
  return sub_10000FD38(&qword_100376620, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1DA8);
}

uint64_t sub_1001DA878()
{
  return sub_10000FD38(&qword_100375930, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1EA8);
}

uint64_t sub_1001DA8A4()
{
  return sub_10000FD38(&qword_100376628, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, (uint64_t)&unk_1002E1EE8);
}

uint64_t sub_1001DA8D0()
{
  return sub_10000FD38(&qword_100376630, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1FE8);
}

uint64_t sub_1001DA8FC()
{
  return sub_10000FD38(&qword_100376638, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E1F10);
}

uint64_t sub_1001DA928()
{
  return sub_10000FD38(&qword_100375938, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E2010);
}

uint64_t sub_1001DA954()
{
  return sub_10000FD38(&qword_100376640, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, (uint64_t)&unk_1002E2050);
}

uint64_t sub_1001DA980()
{
  return sub_10000FD38(&qword_100376648, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2150);
}

uint64_t sub_1001DA9AC()
{
  return sub_10000FD38(&qword_100376650, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2078);
}

uint64_t sub_1001DA9D8()
{
  return sub_10000FD38(&qword_100375940, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E2178);
}

uint64_t sub_1001DAA04()
{
  return sub_10000FD38(&qword_100376658, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, (uint64_t)&unk_1002E21B8);
}

uint64_t sub_1001DAA30()
{
  return sub_10000FD38(&qword_100376660, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E22B8);
}

uint64_t sub_1001DAA5C()
{
  return sub_10000FD38(&qword_100375950, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E21E0);
}

uint64_t sub_1001DAA88()
{
  return sub_10000FD38(&qword_100375948, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E22E0);
}

uint64_t sub_1001DAAB4()
{
  return sub_10000FD38(&qword_100376668, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, (uint64_t)&unk_1002E2320);
}

uint64_t sub_1001DAAE0()
{
  return sub_10000FD38(&qword_100376670, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2420);
}

uint64_t sub_1001DAB0C()
{
  return sub_10000FD38(&qword_100376678, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2348);
}

uint64_t sub_1001DAB38()
{
  return sub_10000FD38(&qword_100375958, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2448);
}

uint64_t sub_1001DAB64()
{
  return sub_10000FD38(&qword_100376680, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, (uint64_t)&unk_1002E2488);
}

uint64_t sub_1001DAB90()
{
  return sub_10000FD38(&qword_100376688, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E2588);
}

uint64_t sub_1001DABBC()
{
  return sub_10000FD38(&qword_100376690, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E24B0);
}

uint64_t sub_1001DABE8()
{
  return sub_10000FD38(&qword_100375960, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E25B0);
}

uint64_t sub_1001DAC14()
{
  return sub_10000FD38(&qword_100376698, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, (uint64_t)&unk_1002E25F0);
}

uint64_t sub_1001DAC40()
{
  return sub_10000FD38(&qword_1003766A0, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E26F0);
}

uint64_t sub_1001DAC6C()
{
  return sub_10000FD38(&qword_100375978, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2618);
}

uint64_t sub_1001DAC98()
{
  return sub_10000FD38(&qword_100375968, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2718);
}

uint64_t sub_1001DACC4()
{
  return sub_10000FD38(&qword_1003766A8, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (uint64_t)&unk_1002E2758);
}

uint64_t sub_1001DACF0()
{
  return sub_10000FD38(&qword_1003766B0, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2858);
}

uint64_t sub_1001DAD1C()
{
  return sub_10000FD38(&qword_1003766B8, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2780);
}

uint64_t sub_1001DAD48()
{
  return sub_10000FD38(&qword_100375980, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E2880);
}

uint64_t sub_1001DAD74()
{
  return sub_10000FD38(&qword_1003766C0, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, (uint64_t)&unk_1002E28C0);
}

uint64_t sub_1001DADA0()
{
  return sub_10000FD38(&qword_1003766C8, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E29C0);
}

uint64_t sub_1001DADCC()
{
  return sub_10000FD38(&qword_1003766D0, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E28E8);
}

uint64_t sub_1001DADF8()
{
  return sub_10000FD38(&qword_100375988, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E29E8);
}

uint64_t sub_1001DAE24()
{
  return sub_10000FD38(&qword_1003766D8, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&unk_1002E2A28);
}

uint64_t sub_1001DAE50()
{
  return sub_10000FD38(&qword_1003766E0, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2B28);
}

uint64_t sub_1001DAE7C()
{
  return sub_10000FD38(&qword_1003766E8, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2A50);
}

uint64_t sub_1001DAEA8()
{
  return sub_10000FD38(&qword_100375998, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2B50);
}

uint64_t sub_1001DAED4()
{
  return sub_10000FD38(&qword_1003766F0, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, (uint64_t)&unk_1002E2B90);
}

uint64_t sub_1001DAF00()
{
  return sub_10000FD38(&qword_1003766F8, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2C90);
}

uint64_t sub_1001DAF2C()
{
  return sub_10000FD38(&qword_100376700, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2BB8);
}

uint64_t sub_1001DAF58()
{
  return sub_10000FD38(&qword_1003759A0, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2CB8);
}

uint64_t sub_1001DAF84()
{
  return sub_10000FD38(&qword_100376708, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime, (uint64_t)&unk_1002E2CF8);
}

uint64_t sub_1001DAFB0()
{
  return sub_10000FD38(&qword_100376710, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2DF8);
}

uint64_t sub_1001DAFDC()
{
  return sub_10000FD38(&qword_100376718, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2D20);
}

uint64_t sub_1001DB008()
{
  return sub_10000FD38(&qword_1003759A8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2E20);
}

uint64_t sub_1001DB034()
{
  return sub_10000FD38(&qword_100376720, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, (uint64_t)&unk_1002E2E60);
}

uint64_t sub_1001DB060()
{
  return sub_10000FD38(&qword_100376728, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2F60);
}

uint64_t sub_1001DB08C()
{
  return sub_10000FD38(&qword_100376730, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2E88);
}

uint64_t sub_1001DB0B8()
{
  return sub_10000FD38(&qword_1003759B0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2F88);
}

uint64_t sub_1001DB0E4()
{
  return sub_10000FD38(&qword_100376738, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, (uint64_t)&unk_1002E2FC8);
}

uint64_t sub_1001DB110()
{
  return sub_10000FD38(&qword_100376740, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E30C8);
}

uint64_t sub_1001DB13C()
{
  return sub_10000FD38(&qword_100376748, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E2FF0);
}

uint64_t sub_1001DB168()
{
  return sub_10000FD38(&qword_1003759B8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E30F0);
}

uint64_t sub_1001DB194()
{
  return sub_10000FD38(&qword_100376750, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, (uint64_t)&unk_1002E3130);
}

uint64_t sub_1001DB1C0()
{
  return sub_10000FD38(&qword_100376758, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3230);
}

uint64_t sub_1001DB1EC()
{
  return sub_10000FD38(&qword_100376760, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3158);
}

uint64_t sub_1001DB218()
{
  return sub_10000FD38(&qword_1003759C0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3258);
}

uint64_t sub_1001DB244()
{
  return sub_10000FD38(&qword_100376768, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, (uint64_t)&unk_1002E3298);
}

uint64_t sub_1001DB270()
{
  return sub_10000FD38(&qword_100376770, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E3398);
}

uint64_t sub_1001DB29C()
{
  return sub_10000FD38(&qword_100376778, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E32C0);
}

uint64_t sub_1001DB2C8()
{
  return sub_10000FD38(&qword_1003759C8, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E33C0);
}

uint64_t sub_1001DB2F4()
{
  return sub_10000FD38(&qword_100376780, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, (uint64_t)&unk_1002E3400);
}

uint64_t sub_1001DB320()
{
  return sub_10000FD38(&qword_100376788, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3500);
}

uint64_t sub_1001DB34C()
{
  return sub_10000FD38(&qword_1003759D8, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3428);
}

uint64_t sub_1001DB378()
{
  return sub_10000FD38(&qword_1003759D0, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3528);
}

uint64_t sub_1001DB3A4()
{
  return sub_10000FD38(&qword_100376790, type metadata accessor for Proto_Gnss_Emergency_TowAssist, (uint64_t)&unk_1002E3568);
}

uint64_t sub_1001DB3D0()
{
  return sub_10000FD38(&qword_100376798, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3668);
}

uint64_t sub_1001DB3FC()
{
  return sub_10000FD38(&qword_1003767A0, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3590);
}

uint64_t sub_1001DB428()
{
  return sub_10000FD38(&qword_1003759E0, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E3690);
}

uint64_t sub_1001DB454()
{
  return sub_10000FD38(&qword_1003767A8, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&unk_1002E36D0);
}

uint64_t sub_1001DB480()
{
  return sub_10000FD38(&qword_1003767B0, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E37D0);
}

uint64_t sub_1001DB4AC()
{
  return sub_10000FD38(&qword_1003767B8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E36F8);
}

uint64_t sub_1001DB4D8()
{
  return sub_10000FD38(&qword_1003759E8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E37F8);
}

uint64_t sub_1001DB504()
{
  return sub_10000FD38(&qword_1003767C0, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&unk_1002E3838);
}

uint64_t sub_1001DB530()
{
  return sub_10000FD38(&qword_1003767C8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3938);
}

uint64_t sub_1001DB55C()
{
  return sub_10000FD38(&qword_1003759F8, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3860);
}

uint64_t sub_1001DB588()
{
  return sub_10000FD38(&qword_1003759F0, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E3960);
}

uint64_t sub_1001DB5B4()
{
  return sub_10000FD38(&qword_1003767D0, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (uint64_t)&unk_1002E39A0);
}

uint64_t sub_1001DB5E0()
{
  return sub_10000FD38(&qword_1003767D8, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E3AA0);
}

uint64_t sub_1001DB60C()
{
  return sub_10000FD38(&qword_1003767E0, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E39C8);
}

uint64_t sub_1001DB638()
{
  return sub_10000FD38(&qword_100375A00, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E3AC8);
}

uint64_t sub_1001DB664()
{
  return sub_10000FD38(&qword_1003767E8, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&unk_1002E3B08);
}

uint64_t sub_1001DB690()
{
  return sub_10000FD38(&qword_1003767F0, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3C08);
}

uint64_t sub_1001DB6BC()
{
  return sub_10000FD38(&qword_1003767F8, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3B30);
}

uint64_t sub_1001DB6E8()
{
  return sub_10000FD38(&qword_100375A08, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3C30);
}

uint64_t sub_1001DB714()
{
  return sub_10000FD38(&qword_100376800, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig, (uint64_t)&unk_1002E3C70);
}

uint64_t sub_1001DB740()
{
  return sub_10000FD38(&qword_100376808, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3D70);
}

uint64_t sub_1001DB76C()
{
  return sub_10000FD38(&qword_100376810, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3C98);
}

uint64_t sub_1001DB798()
{
  return sub_10000FD38(&qword_100375A10, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3D98);
}

uint64_t sub_1001DB7C4()
{
  return sub_10000FD38(&qword_100376818, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&unk_1002E3DD8);
}

uint64_t sub_1001DB7F0()
{
  return sub_10000FD38(&qword_100376820, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3ED8);
}

uint64_t sub_1001DB81C()
{
  return sub_10000FD38(&qword_100376828, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3E00);
}

uint64_t sub_1001DB848()
{
  return sub_10000FD38(&qword_100375A18, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3F00);
}

uint64_t sub_1001DB874()
{
  return sub_10000FD38(&qword_100376830, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&unk_1002E3F40);
}

uint64_t sub_1001DB8A0()
{
  return sub_10000FD38(&qword_100376838, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E4040);
}

uint64_t sub_1001DB8CC()
{
  return sub_10000FD38(&qword_100375A28, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E3F68);
}

uint64_t sub_1001DB8F8()
{
  return sub_10000FD38(&qword_100375A20, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E4068);
}

uint64_t sub_1001DB924()
{
  return sub_10000FD38(&qword_100376840, type metadata accessor for Proto_Gnss_Emergency_GpsAcqElement, (uint64_t)&unk_1002E40A8);
}

uint64_t sub_1001DB950()
{
  return sub_10000FD38(&qword_100376848, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E41A8);
}

uint64_t sub_1001DB97C()
{
  return sub_10000FD38(&qword_100376850, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E40D0);
}

uint64_t sub_1001DB9A8()
{
  return sub_10000FD38(&qword_100375A30, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E41D0);
}

uint64_t sub_1001DB9D4()
{
  return sub_10000FD38(&qword_100376858, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&unk_1002E4210);
}

uint64_t sub_1001DBA00()
{
  return sub_10000FD38(&qword_100376860, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4310);
}

uint64_t sub_1001DBA2C()
{
  return sub_10000FD38(&qword_100376868, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4238);
}

uint64_t sub_1001DBA58()
{
  return sub_10000FD38(&qword_100375A38, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4338);
}

uint64_t sub_1001DBA84()
{
  return sub_10000FD38(&qword_100376870, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&unk_1002E4378);
}

uint64_t sub_1001DBAB0()
{
  return sub_10000FD38(&qword_100376878, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E4478);
}

uint64_t sub_1001DBADC()
{
  return sub_10000FD38(&qword_100376880, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E43A0);
}

uint64_t sub_1001DBB08()
{
  return sub_10000FD38(&qword_100375A40, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E44A0);
}

uint64_t sub_1001DBB34()
{
  return sub_10000FD38(&qword_100376888, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&unk_1002E44E0);
}

uint64_t sub_1001DBB60()
{
  return sub_10000FD38(&qword_100376890, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E45E0);
}

uint64_t sub_1001DBB8C()
{
  return sub_10000FD38(&qword_100376898, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4508);
}

uint64_t sub_1001DBBB8()
{
  return sub_10000FD38(&qword_100375A48, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4608);
}

uint64_t sub_1001DBBE4()
{
  return sub_10000FD38(&qword_1003768A0, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation, (uint64_t)&unk_1002E4648);
}

uint64_t sub_1001DBC10()
{
  return sub_10000FD38(&qword_1003768A8, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4748);
}

uint64_t sub_1001DBC3C()
{
  return sub_10000FD38(&qword_1003768B0, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4670);
}

uint64_t sub_1001DBC68()
{
  return sub_10000FD38(&qword_100375A50, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E4770);
}

uint64_t sub_1001DBC94()
{
  return sub_10000FD38(&qword_1003768B8, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime, (uint64_t)&unk_1002E47B0);
}

uint64_t sub_1001DBCC0()
{
  return sub_10000FD38(&qword_1003768C0, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E48B0);
}

uint64_t sub_1001DBCEC()
{
  return sub_10000FD38(&qword_1003768C8, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E47D8);
}

uint64_t sub_1001DBD18()
{
  return sub_10000FD38(&qword_100375A58, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E48D8);
}

uint64_t sub_1001DBD44()
{
  return sub_10000FD38(&qword_1003768D0, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo, (uint64_t)&unk_1002E4918);
}

uint64_t sub_1001DBD70()
{
  return sub_10000FD38(&qword_1003768D8, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4A18);
}

uint64_t sub_1001DBD9C()
{
  return sub_10000FD38(&qword_1003768E0, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4940);
}

uint64_t sub_1001DBDC8()
{
  return sub_10000FD38(&qword_100375A60, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4A40);
}

uint64_t sub_1001DBDF4()
{
  return sub_10000FD38(&qword_1003768E8, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo, (uint64_t)&unk_1002E4A80);
}

uint64_t sub_1001DBE20()
{
  return sub_10000FD38(&qword_1003768F0, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4B80);
}

uint64_t sub_1001DBE4C()
{
  return sub_10000FD38(&qword_1003768F8, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4AA8);
}

uint64_t sub_1001DBE78()
{
  return sub_10000FD38(&qword_100375A68, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4BA8);
}

uint64_t sub_1001DBEA4()
{
  return sub_10000FD38(&qword_100376900, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo, (uint64_t)&unk_1002E4BE8);
}

uint64_t sub_1001DBED0()
{
  return sub_10000FD38(&qword_100376908, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4CE8);
}

uint64_t sub_1001DBEFC()
{
  return sub_10000FD38(&qword_100376910, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4C10);
}

uint64_t sub_1001DBF28()
{
  return sub_10000FD38(&qword_100375A70, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4D10);
}

uint64_t sub_1001DBF54()
{
  return sub_10000FD38(&qword_100376918, type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd, (uint64_t)&unk_1002E4D50);
}

uint64_t sub_1001DBF80()
{
  return sub_10000FD38(&qword_100376920, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4E50);
}

uint64_t sub_1001DBFAC()
{
  return sub_10000FD38(&qword_100376928, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4D78);
}

uint64_t sub_1001DBFD8()
{
  return sub_10000FD38(&qword_100375A78, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4E78);
}

uint64_t sub_1001DC004()
{
  return sub_10000FD38(&qword_100376930, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&unk_1002E4EB8);
}

uint64_t sub_1001DC030()
{
  return sub_10000FD38(&qword_100376938, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4FB8);
}

uint64_t sub_1001DC05C()
{
  return sub_10000FD38(&qword_100376940, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4EE0);
}

uint64_t sub_1001DC088()
{
  return sub_10000FD38(&qword_100375A80, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E4FE0);
}

uint64_t sub_1001DC0B4()
{
  return sub_10000FD38(&qword_100376948, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext, (uint64_t)&unk_1002E5020);
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_PositionMethod(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_PositionMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1001DC1BC + 4 * byte_1002D96FC[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1001DC1F0 + 4 * byte_1002D96F7[v4]))();
}

uint64_t sub_1001DC1F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC1F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC200);
  return result;
}

uint64_t sub_1001DC20C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC214);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1001DC218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_PositionMethod()
{
  return &type metadata for Proto_Gnss_Emergency_PositionMethod;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_PositionReqType()
{
  return &type metadata for Proto_Gnss_Emergency_PositionReqType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_PositionSession()
{
  return &type metadata for Proto_Gnss_Emergency_PositionSession;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_PositionProtocol()
{
  return &type metadata for Proto_Gnss_Emergency_PositionProtocol;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_SessionErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_SessionErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1001DC354 + 4 * byte_1002D9706[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1001DC388 + 4 * byte_1002D9701[v4]))();
}

uint64_t sub_1001DC388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC398);
  return result;
}

uint64_t sub_1001DC3A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC3ACLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1001DC3B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC3B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_SessionErrorCode()
{
  return &type metadata for Proto_Gnss_Emergency_SessionErrorCode;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_TriggerType()
{
  return &type metadata for Proto_Gnss_Emergency_TriggerType;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Status(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE0)
    goto LABEL_17;
  if (a2 + 32 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 32) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 32;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 32;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 32;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v8 = v6 - 33;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_1001DC4C0 + 4 * byte_1002D9710[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_1001DC4F4 + 4 * byte_1002D970B[v4]))();
}

uint64_t sub_1001DC4F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC4FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC504);
  return result;
}

uint64_t sub_1001DC510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC518);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_1001DC51C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_Status()
{
  return &type metadata for Proto_Gnss_Emergency_Status;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Indication.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_EndCause(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1001DC61C + 4 * byte_1002D971A[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1001DC650 + 4 * byte_1002D9715[v4]))();
}

uint64_t sub_1001DC650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC660);
  return result;
}

uint64_t sub_1001DC66C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC674);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1001DC678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_EndCause()
{
  return &type metadata for Proto_Gnss_Emergency_EndCause;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_ConnectionStatus()
{
  return &type metadata for Proto_Gnss_Emergency_ConnectionStatus;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_CellType()
{
  return &type metadata for Proto_Gnss_Emergency_CellType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_FreqMode()
{
  return &type metadata for Proto_Gnss_Emergency_FreqMode;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_SLPAddressType()
{
  return &type metadata for Proto_Gnss_Emergency_SLPAddressType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_ErrorCodes()
{
  return &type metadata for Proto_Gnss_Emergency_ErrorCodes;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_ClsModemState()
{
  return &type metadata for Proto_Gnss_Emergency_ClsModemState;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_SessionProtocol()
{
  return &type metadata for Proto_Gnss_Emergency_SessionProtocol;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_PosProtocol()
{
  return &type metadata for Proto_Gnss_Emergency_PosProtocol;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_MethodType()
{
  return &type metadata for Proto_Gnss_Emergency_MethodType;
}

uint64_t _s10ALProtobuf31Proto_Gnss_Emergency_MethodTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001DC788 + 4 * byte_1002D9724[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001DC7BC + 4 * byte_1002D971F[v4]))();
}

uint64_t sub_1001DC7BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC7C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC7CCLL);
  return result;
}

uint64_t sub_1001DC7D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC7E0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001DC7E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC7EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_Environment()
{
  return &type metadata for Proto_Gnss_Emergency_Environment;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_AdditionalInfo()
{
  return &type metadata for Proto_Gnss_Emergency_AdditionalInfo;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GnssId()
{
  return &type metadata for Proto_Gnss_Emergency_GnssId;
}

uint64_t _s10ALProtobuf36Proto_Gnss_Emergency_PositionReqTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1001DC874 + 4 * byte_1002D972E[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1001DC8A8 + 4 * byte_1002D9729[v4]))();
}

uint64_t sub_1001DC8A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC8B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC8B8);
  return result;
}

uint64_t sub_1001DC8C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC8CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1001DC8D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC8D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_SupportedGADShapes()
{
  return &type metadata for Proto_Gnss_Emergency_SupportedGADShapes;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_FixType()
{
  return &type metadata for Proto_Gnss_Emergency_FixType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_ClsNetworkType()
{
  return &type metadata for Proto_Gnss_Emergency_ClsNetworkType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GnssTimeId()
{
  return &type metadata for Proto_Gnss_Emergency_GnssTimeId;
}

uint64_t _s10ALProtobuf31Proto_Gnss_Emergency_ErrorCodesOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ALProtobuf31Proto_Gnss_Emergency_ErrorCodesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1001DCA00 + 4 * byte_1002D9738[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1001DCA34 + 4 * byte_1002D9733[v4]))();
}

uint64_t sub_1001DCA34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCA3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCA44);
  return result;
}

uint64_t sub_1001DCA50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCA58);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1001DCA5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCA64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_ShapeType()
{
  return &type metadata for Proto_Gnss_Emergency_ShapeType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_VelocityType()
{
  return &type metadata for Proto_Gnss_Emergency_VelocityType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_MultipathIndicator()
{
  return &type metadata for Proto_Gnss_Emergency_MultipathIndicator;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GanssId()
{
  return &type metadata for Proto_Gnss_Emergency_GanssId;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_MeasurementsResult()
{
  return &type metadata for Proto_Gnss_Emergency_MeasurementsResult;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_LcsGanssId()
{
  return &type metadata for Proto_Gnss_Emergency_LcsGanssId;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_AidMask()
{
  return &type metadata for Proto_Gnss_Emergency_AidMask;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GanssCommonAidMask()
{
  return &type metadata for Proto_Gnss_Emergency_GanssCommonAidMask;
}

uint64_t _s10ALProtobuf32Proto_Gnss_MotionActivityContextOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ALProtobuf28Proto_Gnss_Emergency_AidMaskOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1001DCBD4 + 4 * byte_1002D9742[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1001DCC08 + 4 * byte_1002D973D[v4]))();
}

uint64_t sub_1001DCC08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCC10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCC18);
  return result;
}

uint64_t sub_1001DCC24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCC2CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1001DCC30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCC38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GanssGenericAidMask()
{
  return &type metadata for Proto_Gnss_Emergency_GanssGenericAidMask;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GanssSignalIdMask()
{
  return &type metadata for Proto_Gnss_Emergency_GanssSignalIdMask;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_AssistanceRequest(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001DCCB0 + 4 * byte_1002D974C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001DCCE4 + 4 * byte_1002D9747[v4]))();
}

uint64_t sub_1001DCCE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCCEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCCF4);
  return result;
}

uint64_t sub_1001DCD00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCD08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001DCD0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCD14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_AssistanceRequest()
{
  return &type metadata for Proto_Gnss_Emergency_AssistanceRequest;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_UtranSfnGpsUncertainty()
{
  return &type metadata for Proto_Gnss_Emergency_UtranSfnGpsUncertainty;
}

uint64_t _s10ALProtobuf32Proto_Gnss_Emergency_PosProtocolOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1001DCD8C + 4 * byte_1002D9756[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1001DCDC0 + 4 * byte_1002D9751[v4]))();
}

uint64_t sub_1001DCDC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCDC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCDD0);
  return result;
}

uint64_t sub_1001DCDDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCDE4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1001DCDE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCDF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_GpsDopplerUncMpsExt()
{
  return &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType()
{
  return &type metadata for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType;
}

uint64_t _s10ALProtobuf29Proto_Gnss_Emergency_FreqModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001DCE68 + 4 * byte_1002D9760[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001DCE9C + 4 * byte_1002D975B[v4]))();
}

uint64_t sub_1001DCE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCEACLL);
  return result;
}

uint64_t sub_1001DCEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCEC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001DCEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_AfltAction()
{
  return &type metadata for Proto_Gnss_Emergency_AfltAction;
}

uint64_t _s10ALProtobuf36Proto_Gnss_Emergency_SessionProtocolOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001DCF34 + 4 * byte_1002D976A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001DCF68 + 4 * byte_1002D9765[v4]))();
}

uint64_t sub_1001DCF68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCF70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCF78);
  return result;
}

uint64_t sub_1001DCF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCF8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001DCF90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCF98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementResult()
{
  return &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult;
}

_QWORD *sub_1001DCFB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
  }
  return a1;
}

uint64_t sub_1001DD060(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1001DD0E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_1001DD164(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1001DD1E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1001DD264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DD270);
}

uint64_t sub_1001DD274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DD280);
}

uint64_t sub_1001DD284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100209860(a1, a2, a3, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E5750);
}

uint64_t sub_1001DD29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DD2A8);
}

uint64_t sub_1001DD2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DD2B8);
}

_QWORD *sub_1001DD2BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (_QWORD *)((char *)a1 + v9);
    v13 = (_QWORD *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    v16 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    swift_bridgeObjectRetain(v14);
  }
  return a1;
}

uint64_t sub_1001DD390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t sub_1001DD438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1001DD500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_1001DD59C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  v15 = v11[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease(v15);
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_1001DD648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DD654);
}

uint64_t sub_1001DD654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1001DD6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DD6EC);
}

uint64_t sub_1001DD6EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_1001DD768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1EEC(a1, a2, a3, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57D8, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E5738);
}

_QWORD *sub_1001DD788(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v35);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = a3[7];
    v12 = a3[8];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[9];
    v18 = a3[10];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = (char *)a1 + v18;
    v22 = (char *)a2 + v18;
    LODWORD(v19) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)v21 = (_DWORD)v19;
    v23 = a3[11];
    v24 = a3[12];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    v27 = (char *)a1 + v24;
    v28 = (char *)a2 + v24;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = a3[13];
    v30 = a3[14];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = (char *)a1 + v30;
    v34 = (char *)a2 + v30;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
  }
  return a1;
}

uint64_t sub_1001DD8F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a1 + v23;
  v27 = a2 + v23;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  return a1;
}

uint64_t sub_1001DDA3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int v42;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = (int *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 4) = *((_BYTE *)v29 + 4);
  *(_DWORD *)v28 = v30;
  v31 = a3[12];
  v32 = a1 + v31;
  v33 = (int *)(a2 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 4) = *((_BYTE *)v33 + 4);
  *(_DWORD *)v32 = v34;
  v35 = a3[13];
  v36 = a1 + v35;
  v37 = (int *)(a2 + v35);
  v38 = *v37;
  *(_BYTE *)(v36 + 4) = *((_BYTE *)v37 + 4);
  *(_DWORD *)v36 = v38;
  v39 = a3[14];
  v40 = a1 + v39;
  v41 = (int *)(a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 4) = *((_BYTE *)v41 + 4);
  *(_DWORD *)v40 = v42;
  return a1;
}

uint64_t sub_1001DDB94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a1 + v23;
  v27 = a2 + v23;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  return a1;
}

uint64_t sub_1001DDCD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a1 + v23;
  v27 = a2 + v23;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  return a1;
}

uint64_t sub_1001DDE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DDE28);
}

uint64_t sub_1001DDE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DDE38);
}

uint64_t sub_1001DDE3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  result = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1002E5738;
    v4[2] = &unk_1002E57C0;
    v4[3] = &unk_1002E57C0;
    v4[4] = &unk_1002E57C0;
    v4[5] = &unk_1002E57C0;
    v4[6] = &unk_1002E57C0;
    v4[7] = &unk_1002E57C0;
    v4[8] = &unk_1002E57C0;
    v4[9] = &unk_1002E57C0;
    v4[10] = &unk_1002E57C0;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001DDEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DDEE8);
}

uint64_t sub_1001DDEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DDEF8);
}

uint64_t sub_1001DDEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002001E0(a1, a2, a3, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E57C0);
}

_QWORD *sub_1001DDF10(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = a3[7];
    v12 = a3[8];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[9];
    v18 = a3[10];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = (char *)a1 + v18;
    v22 = (char *)a2 + v18;
    LODWORD(v19) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)v21 = (_DWORD)v19;
    v23 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v24[4] = v25[4];
    *(_DWORD *)v24 = *(_DWORD *)v25;
  }
  return a1;
}

uint64_t sub_1001DE03C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  return a1;
}

uint64_t sub_1001DE13C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v27 = a3[12];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  return a1;
}

uint64_t sub_1001DE24C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  return a1;
}

uint64_t sub_1001DE34C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v18;
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  return a1;
}

uint64_t sub_1001DE44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DE458);
}

uint64_t sub_1001DE45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DE468);
}

uint64_t sub_1001DE46C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1002E5738;
    v4[2] = &unk_1002E57C0;
    v4[3] = &unk_1002E57C0;
    v4[4] = &unk_1002E57C0;
    v4[5] = &unk_1002E57C0;
    v4[6] = &unk_1002E57C0;
    v4[7] = &unk_1002E5878;
    v4[8] = &unk_1002E57C0;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_1001DE4FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    a1[1] = v8;
    a1[2] = v9;
    v10 = *(int *)(a3 + 28);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UnknownStorage(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13);
    *((_BYTE *)v7 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  }
  return v7;
}

_QWORD *sub_1001DE5D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[2];
  a1[2] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UnknownStorage(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  *((_BYTE *)a1 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_1001DE67C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[2];
  v11 = a1[2];
  a1[2] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *((_BYTE *)a1 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1001DE734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_1001DE7B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v8);
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *((_BYTE *)a1 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1001DE854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DE860);
}

uint64_t sub_1001DE860(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1001DE8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DE8E8);
}

char *sub_1001DE8E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001DE95C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_1002E58B0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001DE9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DE9EC);
}

uint64_t sub_1001DE9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DE9FC);
}

uint64_t sub_1001DEA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000780DC(a1, a2, a3, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E5738);
}

_QWORD *sub_1001DEA14(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_100017EF8(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
  }
  return a1;
}

uint64_t sub_1001DEB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = type metadata accessor for UnknownStorage(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return sub_100017F3C(*v6, v7);
  return result;
}

uint64_t sub_1001DEB80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_100017EF8(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[8];
  v14 = a3[9];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001DEC5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      v12 = *v9;
      sub_100017EF8(v12, v10);
      v13 = *v8;
      v14 = v8[1];
      *v8 = v12;
      v8[1] = v10;
      sub_100017F3C(v13, v14);
      goto LABEL_8;
    }
    sub_1001DED84((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v11 = *v9;
  sub_100017EF8(v11, v10);
  *v8 = v11;
  v8[1] = v10;
LABEL_8:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (int *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 4) = *((_BYTE *)v17 + 4);
  *(_DWORD *)v16 = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (int *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 4) = *((_BYTE *)v21 + 4);
  *(_DWORD *)v20 = v22;
  return a1;
}

uint64_t sub_1001DED84(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Data - 1) + 8))();
  return a1;
}

uint64_t sub_1001DEDB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  return a1;
}

uint64_t sub_1001DEE5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      v12 = *v8;
      *v8 = *v9;
      v8[1] = v11;
      sub_100017F3C(v12, v10);
      goto LABEL_6;
    }
    sub_1001DED84((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_6:
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  return a1;
}

uint64_t sub_1001DEF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DEF58);
}

uint64_t sub_1001DEF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DEF68);
}

uint64_t sub_1001DEF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002001E0(a1, a2, a3, (uint64_t)&unk_1002E5930, (uint64_t)&unk_1002E5738);
}

_QWORD *sub_1001DEF80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    *((_BYTE *)v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

_QWORD *sub_1001DF034(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1001DF0C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1001DF148(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1001DF1C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001DF240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DF24C);
}

uint64_t sub_1001DF250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DF25C);
}

uint64_t sub_1001DF260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FBAF4(a1, a2, a3, (uint64_t)&unk_1002E5980);
}

_QWORD *sub_1001DF26C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = a3[7];
    v12 = a3[8];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t sub_1001DF35C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001DF420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t sub_1001DF4EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001DF5B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001DF674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DF680);
}

uint64_t sub_1001DF684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DF690);
}

_QWORD *sub_1001DF694(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v7 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[8];
    v15 = (_QWORD *)((char *)v7 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain(v17);
  }
  return v7;
}

uint64_t sub_1001DF768(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 32) + 8));
}

_QWORD *sub_1001DF7C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

_QWORD *sub_1001DF874(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

_QWORD *sub_1001DF934(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1001DF9C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1001DFA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DFA70);
}

uint64_t sub_1001DFA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DFA80);
}

uint64_t sub_1001DFA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F7104(a1, a2, a3, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E59E0, (uint64_t)&unk_1002E57D8);
}

uint64_t sub_1001DFAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DFAAC);
}

uint64_t sub_1001DFAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DFABC);
}

uint64_t sub_1001DFAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000780DC(a1, a2, a3, (uint64_t)&unk_1002E5738, (uint64_t)&unk_1002E5738);
}

char *sub_1001DFAD0(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t, int *);
  char *v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)&a1[v9];
    v11 = (uint64_t *)&a2[v9];
    v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_100375540);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = *v11;
      *v10 = *v11;
      v17 = v12[5];
      v25 = (char *)v10 + v17;
      v18 = (char *)v11 + v17;
      swift_bridgeObjectRetain(v16);
      v8(v25, v18, v7);
      *((_BYTE *)v10 + v12[6]) = *((_BYTE *)v11 + v12[6]);
      *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
      v19 = v12[8];
      v20 = (uint64_t *)((char *)v10 + v19);
      v21 = (uint64_t *)((char *)v11 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain(v22);
      v23(v10, 0, 1, v12);
    }
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_1001DFC48(char *a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  char *v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = &a1[*(int *)(a2 + 20)];
  v7 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(_QWORD *)v6);
    v5(&v6[*(int *)(v7 + 20)], v4);
    return swift_bridgeObjectRelease(*(_QWORD *)&v6[*(int *)(v7 + 32) + 8]);
  }
  return result;
}

uint64_t sub_1001DFCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375540);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    v15 = v11[5];
    v25 = a3;
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    swift_bridgeObjectRetain(v14);
    v18 = v16;
    a3 = v25;
    v7((uint64_t)v18, (uint64_t)v17, v6);
    *((_BYTE *)v9 + v11[6]) = *((_BYTE *)v10 + v11[6]);
    *((_BYTE *)v9 + v11[7]) = *((_BYTE *)v10 + v11[7]);
    v19 = v11[8];
    v20 = (uint64_t *)((char *)v9 + v19);
    v21 = (uint64_t *)((char *)v10 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain(v22);
    v23(v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001DFE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v36 = a3;
  v37 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v29 = *v11;
      v30 = *v10;
      *v10 = *v11;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease(v30);
      v8((uint64_t)v10 + v12[5], (uint64_t)v11 + v12[5], v6);
      *((_BYTE *)v10 + v12[6]) = *((_BYTE *)v11 + v12[6]);
      *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
      v31 = v12[8];
      v32 = (_QWORD *)((char *)v10 + v31);
      v33 = (_QWORD *)((char *)v11 + v31);
      *v32 = *v33;
      v34 = v33[1];
      v35 = v32[1];
      v32[1] = v34;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRelease(v35);
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v27 = sub_1000039AC(&qword_100375540);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v17 = *v11;
  *v10 = *v11;
  v18 = v12[5];
  v19 = (char *)v10 + v18;
  v20 = (char *)v11 + v18;
  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain(v17);
  v21(v19, v20, v6);
  *((_BYTE *)v10 + v12[6]) = *((_BYTE *)v11 + v12[6]);
  *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
  v22 = v12[8];
  v23 = (_QWORD *)((char *)v10 + v22);
  v24 = (_QWORD *)((char *)v11 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v23[1] = v25;
  v26 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
  swift_bridgeObjectRetain(v25);
  v26(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v36 + 24)) = *(_BYTE *)(v37 + *(int *)(v36 + 24));
  return a1;
}

char *sub_1001E0040(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375540);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v7(&v9[v11[5]], &v10[v11[5]], v6);
    v9[v11[6]] = v10[v11[6]];
    v9[v11[7]] = v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1001E0168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v26 = a3;
  v27 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v19 = *v10;
      *v10 = *v11;
      swift_bridgeObjectRelease(v19);
      v8((uint64_t)v10 + v12[5], (uint64_t)v11 + v12[5], v6);
      *((_BYTE *)v10 + v12[6]) = *((_BYTE *)v11 + v12[6]);
      *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
      v20 = v12[8];
      v21 = (_QWORD *)((char *)v10 + v20);
      v22 = (_QWORD *)((char *)v11 + v20);
      v24 = *v22;
      v23 = v22[1];
      v25 = v21[1];
      *v21 = v24;
      v21[1] = v23;
      swift_bridgeObjectRelease(v25);
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1000039AC(&qword_100375540);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v10 = *v11;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v10 + v12[5], (char *)v11 + v12[5], v6);
  *((_BYTE *)v10 + v12[6]) = *((_BYTE *)v11 + v12[6]);
  *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
  *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v26 + 24)) = *(_BYTE *)(v27 + *(int *)(v26 + 24));
  return a1;
}

uint64_t sub_1001E032C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E0338);
}

uint64_t sub_1001E0338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1000039AC(&qword_100375540);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 4u)
    v14 = 4;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v15 = v14 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 4u)
    return v15;
  else
    return 0;
}

uint64_t sub_1001E03EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E03F8);
}

uint64_t sub_1001E03F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1000039AC(&qword_100375540);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 4;
  return result;
}

void sub_1001E04A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001F0FBC(a1, a2, a3, (unint64_t *)&unk_1003770F8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, (uint64_t)&unk_1002E5878);
}

uint64_t sub_1001E04BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E04C8);
}

uint64_t sub_1001E04CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E04D8);
}

char *sub_1001E04DC(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  unsigned int (*v25)(char *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v39(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = &a1[v8];
    v11 = &a2[v8];
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = &a1[v9];
    v13 = (uint64_t *)&a2[v9];
    v14 = *v13;
    v15 = v13[1];
    v16 = a3[7];
    v17 = a3[8];
    v18 = a2[v16];
    *(_QWORD *)v12 = v14;
    *((_QWORD *)v12 + 1) = v15;
    a1[v16] = v18;
    v19 = &a1[v17];
    v20 = *(_QWORD *)&a2[v17 + 8];
    *(_QWORD *)v19 = *(_QWORD *)&a2[v17];
    *((_QWORD *)v19 + 1) = v20;
    v21 = a3[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
    v38 = *((_QWORD *)v24 - 1);
    v25 = *(unsigned int (**)(char *, uint64_t, int *))(v38 + 48);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v20);
    if (v25(v23, 1, v24))
    {
      v26 = sub_1000039AC(&qword_100375560);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v39(v22, v23, v7);
      v22[v24[5]] = v23[v24[5]];
      v22[v24[6]] = v23[v24[6]];
      v28 = v24[7];
      v29 = &v22[v28];
      v30 = &v23[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56))(v22, 0, 1, v24);
    }
    v31 = a3[10];
    v32 = a3[11];
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    a1[v32] = a2[v32];
    v36 = a3[13];
    a1[a3[12]] = a2[a3[12]];
    a1[v36] = a2[v36];
    swift_bridgeObjectRetain(v35);
  }
  return a1;
}

uint64_t sub_1001E06CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  v6 = a1 + a2[9];
  v7 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    v5(v6, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

uint64_t sub_1001E0780(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  unsigned int (*v24)(char *, uint64_t, int *);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v37(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v13 = *v12;
  v14 = v12[1];
  v15 = a3[7];
  v16 = a3[8];
  v17 = *(_BYTE *)(a2 + v15);
  *v11 = v13;
  v11[1] = v14;
  *(_BYTE *)(a1 + v15) = v17;
  v18 = (_QWORD *)(a1 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *v18 = *(_QWORD *)(a2 + v16);
  v18[1] = v19;
  v20 = a3[9];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v36 = *((_QWORD *)v23 - 1);
  v24 = *(unsigned int (**)(char *, uint64_t, int *))(v36 + 48);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v19);
  if (v24(v22, 1, v23))
  {
    v25 = sub_1000039AC(&qword_100375560);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v37((uint64_t)v21, (uint64_t)v22, v6);
    v21[v23[5]] = v22[v23[5]];
    v21[v23[6]] = v22[v23[6]];
    v26 = v23[7];
    v27 = &v21[v26];
    v28 = &v22[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v36 + 56))(v21, 0, 1, v23);
  }
  v29 = a3[10];
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v34 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  swift_bridgeObjectRetain(v33);
  return a1;
}

uint64_t sub_1001E0944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 24);
  v45(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[9];
  v22 = (_BYTE *)(a1 + v21);
  v23 = (_BYTE *)(a2 + v21);
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v45((uint64_t)v22, (uint64_t)v23, v6);
      v22[v24[5]] = v23[v24[5]];
      v22[v24[6]] = v23[v24[6]];
      v40 = v24[7];
      v41 = &v22[v40];
      v42 = &v23[v40];
      v43 = v42[8];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v43;
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v22, type metadata accessor for Proto_Gnss_Emergency_Configuration);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v33 = sub_1000039AC(&qword_100375560);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v44 + 16))(v22, v23, v6);
  v22[v24[5]] = v23[v24[5]];
  v22[v24[6]] = v23[v24[6]];
  v29 = v24[7];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v32;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  v34 = a3[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v37 = v36[1];
  v38 = v35[1];
  v35[1] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1001E0BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1000039AC(&qword_100375560);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    v14[v16[5]] = v15[v16[5]];
    v14[v16[6]] = v15[v16[6]];
    v19 = v16[7];
    v20 = &v14[v19];
    v21 = &v15[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v22 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t sub_1001E0D44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40);
  v46(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  v15 = v11[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease(v15);
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[9];
  v23 = (_BYTE *)(a1 + v22);
  v24 = (_BYTE *)(a2 + v22);
  v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      v46((uint64_t)v23, (uint64_t)v24, v6);
      v23[v25[5]] = v24[v25[5]];
      v23[v25[6]] = v24[v25[6]];
      v42 = v25[7];
      v43 = &v23[v42];
      v44 = &v24[v42];
      *(_QWORD *)v43 = *(_QWORD *)v44;
      v43[8] = v44[8];
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v23, type metadata accessor for Proto_Gnss_Emergency_Configuration);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v33 = sub_1000039AC(&qword_100375560);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 32))(v23, v24, v6);
  v23[v25[5]] = v24[v25[5]];
  v23[v25[6]] = v24[v25[6]];
  v30 = v25[7];
  v31 = &v23[v30];
  v32 = &v24[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  v34 = a3[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  v39 = v35[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease(v39);
  v40 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1001E0F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E0F94);
}

uint64_t sub_1001E0F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_1000039AC(&qword_100375560);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v11);
  }
}

uint64_t sub_1001E1050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E105C);
}

uint64_t sub_1001E105C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = sub_1000039AC(&qword_100375560);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001E1108(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1002E57C0;
    v6[2] = &unk_1002E57D8;
    v6[3] = &unk_1002E5738;
    v6[4] = &unk_1002E57D8;
    sub_10001198C(319, (unint64_t *)&unk_100377208, type metadata accessor for Proto_Gnss_Emergency_Configuration);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_1002E57D8;
      v6[7] = &unk_1002E5738;
      v6[8] = &unk_1002E5738;
      v6[9] = &unk_1002E5738;
      swift_initStructMetadata(a1, 256, 10, v6, a1 + 16);
    }
  }
}

uint64_t sub_1001E11CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E11D8);
}

uint64_t sub_1001E11DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E11E8);
}

uint64_t sub_1001E1200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E120C);
}

uint64_t sub_1001E1210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E121C);
}

uint64_t sub_1001E1220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000780DC(a1, a2, a3, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57C0);
}

char *sub_1001E1230(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_100375578);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      v19 = *(int *)(v12 + 24);
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v22 = a3[6];
    v23 = a3[7];
    v24 = &a1[v22];
    v25 = &a2[v22];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = &a1[v23];
    v27 = &a2[v23];
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = a3[8];
    v29 = a3[9];
    v30 = &a1[v28];
    v31 = &a2[v28];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    a1[v29] = a2[v29];
  }
  return a1;
}

uint64_t sub_1001E13D8(uint64_t a1, uint64_t a2)
{
  return sub_1001EE73C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001E13E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375578);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[8];
  v27 = a3[9];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  return a1;
}

uint64_t sub_1001E1560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  int *v47;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v47 = a3;
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v46 = *(_QWORD *)(v12 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v38 = *(int *)(v12 + 20);
      v39 = &v10[v38];
      v40 = &v11[v38];
      v41 = v40[4];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v41;
      v42 = *(int *)(v12 + 24);
      v43 = &v10[v42];
      v44 = &v11[v42];
      v45 = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v43[4] = v45;
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v24 = sub_1000039AC(&qword_100375578);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v16 = *(int *)(v12 + 20);
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = v18[4];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v19;
  v20 = *(int *)(v12 + 24);
  v21 = &v10[v20];
  v22 = &v11[v20];
  v23 = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v23;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v10, 0, 1, v12);
LABEL_7:
  v25 = v47[6];
  v26 = a1 + v25;
  v27 = (int *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 4) = *((_BYTE *)v27 + 4);
  *(_DWORD *)v26 = v28;
  v29 = v47[7];
  v30 = a1 + v29;
  v31 = (int *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 4) = *((_BYTE *)v31 + 4);
  *(_DWORD *)v30 = v32;
  v33 = v47[8];
  v34 = a1 + v33;
  v35 = (int *)(a2 + v33);
  v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)v34 = v36;
  *(_BYTE *)(a1 + v47[9]) = *(_BYTE *)(a2 + v47[9]);
  return a1;
}

uint64_t sub_1001E1784(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375578);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[8];
  v27 = a3[9];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  return a1;
}

uint64_t sub_1001E1900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int *v41;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v41 = a3;
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v40 = *(_QWORD *)(v12 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v34 = *(int *)(v12 + 20);
      v35 = &v10[v34];
      v36 = &v11[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      v37 = *(int *)(v12 + 24);
      v38 = &v10[v37];
      v39 = &v11[v37];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v22 = sub_1000039AC(&qword_100375578);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  v16 = *(int *)(v12 + 20);
  v17 = &v10[v16];
  v18 = &v11[v16];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  v19 = *(int *)(v12 + 24);
  v20 = &v10[v19];
  v21 = &v11[v19];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v10, 0, 1, v12);
LABEL_7:
  v23 = v41[6];
  v24 = v41[7];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = v41[8];
  v30 = v41[9];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  return a1;
}

uint64_t sub_1001E1B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1B28);
}

uint64_t sub_1001E1B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1000039AC(&qword_100375578);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) <= 5u)
    v14 = 5;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  v15 = v14 - 5;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) >= 5u)
    return v15;
  else
    return 0;
}

uint64_t sub_1001E1BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1BE8);
}

uint64_t sub_1001E1BE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1000039AC(&qword_100375578);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 5;
  return result;
}

void sub_1001E1C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EF1B8(a1, a2, a3, (unint64_t *)&unk_1003773B8, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, (uint64_t)&unk_1002E59E0);
}

uint64_t sub_1001E1CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1CCC);
}

uint64_t sub_1001E1CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1CDC);
}

uint64_t sub_1001E1CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100209860(a1, a2, a3, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57C0);
}

_QWORD *sub_1001E1CF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
  }
  return a1;
}

uint64_t sub_1001E1DA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  return a1;
}

uint64_t sub_1001E1E20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_1001E1EA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  return a1;
}

uint64_t sub_1001E1F24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  return a1;
}

uint64_t sub_1001E1FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1FB0);
}

uint64_t sub_1001E1FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1FC0);
}

uint64_t sub_1001E1FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100209860(a1, a2, a3, (uint64_t)&unk_1002E5980, (uint64_t)&unk_1002E58B0, (uint64_t)&unk_1002E57C0);
}

uint64_t sub_1001E1FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1FEC);
}

uint64_t sub_1001E1FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1FFC);
}

uint64_t *sub_1001E2000(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8((char *)a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_100375580);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v50 = v13;
      v8(v10, v11, v7);
      v16 = v12[5];
      __dst = &v10[v16];
      v17 = v8;
      v18 = &v11[v16];
      v19 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v49 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v18, 1, v19))
      {
        v20 = sub_1000039AC(&qword_100375578);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v17(__dst, v18, v7);
        v21 = *(int *)(v19 + 20);
        v22 = &__dst[v21];
        v23 = &v18[v21];
        *(_DWORD *)v22 = *(_DWORD *)v23;
        v22[4] = v23[4];
        v24 = *(int *)(v19 + 24);
        v25 = &__dst[v24];
        v26 = &v18[v24];
        *(_DWORD *)v25 = *(_DWORD *)v26;
        v25[4] = v26[4];
        (*(void (**)(void))(v49 + 56))();
      }
      v27 = v12[6];
      v28 = &v10[v27];
      v29 = &v11[v27];
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      v30 = v12[7];
      v31 = &v10[v30];
      v32 = &v11[v30];
      v31[4] = v32[4];
      *(_DWORD *)v31 = *(_DWORD *)v32;
      v33 = v12[8];
      v34 = &v10[v33];
      v35 = &v11[v33];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v34[4] = v35[4];
      v10[v12[9]] = v11[v12[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v50 + 56))(v10, 0, 1, v12);
      v8 = v17;
    }
    v36 = *(int *)(a3 + 24);
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_1000039AC(&qword_100375578);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v8(v37, v38, v7);
      v42 = *(int *)(v39 + 20);
      v43 = &v37[v42];
      v44 = &v38[v42];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v43[4] = v44[4];
      v45 = *(int *)(v39 + 24);
      v46 = &v37[v45];
      v47 = &v38[v45];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
  }
  return a1;
}

uint64_t sub_1001E2310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v12(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v12(v5, v4);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      v12(v7, v4);
  }
  v9 = a1 + *(int *)(a2 + 24);
  v10 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v4);
  return result;
}

uint64_t sub_1001E2438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  char *__dst;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375580);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v48 = a3;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    __dst = &v9[v14];
    v15 = v7;
    v16 = &v10[v14];
    v17 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v47 = *(_QWORD *)(v17 - 8);
    v49 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v17))
    {
      v18 = sub_1000039AC(&qword_100375578);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v15((uint64_t)__dst, (uint64_t)v16, v6);
      v19 = *(int *)(v17 + 20);
      v20 = &__dst[v19];
      v21 = &v16[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v22 = *(int *)(v17 + 24);
      v23 = &__dst[v22];
      v24 = &v16[v22];
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      (*(void (**)(void))(v47 + 56))();
    }
    v25 = v11[6];
    v26 = &v9[v25];
    v27 = &v10[v25];
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = v11[7];
    v29 = &v9[v28];
    v30 = &v10[v28];
    v29[4] = v30[4];
    *(_DWORD *)v29 = *(_DWORD *)v30;
    v31 = v11[8];
    v32 = &v9[v31];
    v33 = &v10[v31];
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v9[v11[9]] = v10[v11[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    a3 = v48;
    v7 = v49;
  }
  v34 = *(int *)(a3 + 24);
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_1000039AC(&qword_100375578);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v35, (uint64_t)v36, v6);
    v40 = *(int *)(v37 + 20);
    v41 = &v35[v40];
    v42 = &v36[v40];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = *(int *)(v37 + 24);
    v44 = &v35[v43];
    v45 = &v36[v43];
    *(_DWORD *)v44 = *(_DWORD *)v45;
    v44[4] = v45[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  return a1;
}

uint64_t sub_1001E2718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v88;
  char *v89;
  char *v90;
  char v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  char *__dst;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  void (*v109)(uint64_t, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;

  v6 = type metadata accessor for UnknownStorage(0);
  v110 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 24);
  v7(a1, a2, v6);
  v111 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100004030((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      goto LABEL_7;
    }
    v109 = (void (*)(uint64_t, char *, uint64_t))v7;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v22 = v11[5];
    v23 = &v9[v22];
    v24 = &v10[v22];
    v25 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v104 = *(_QWORD *)(v25 - 8);
    v106 = (uint64_t)v23;
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
    LODWORD(v23) = v26(v23, 1, v25);
    v27 = v26(v24, 1, v25);
    if ((_DWORD)v23)
    {
      if (!v27)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v110 + 16))(v106, v24, v6);
        v50 = *(int *)(v25 + 20);
        v51 = v106 + v50;
        v52 = &v24[v50];
        v53 = v52[4];
        *(_DWORD *)v51 = *(_DWORD *)v52;
        *(_BYTE *)(v51 + 4) = v53;
        v54 = *(int *)(v25 + 24);
        v55 = v106 + v54;
        v56 = &v24[v54];
        v57 = v56[4];
        *(_DWORD *)v55 = *(_DWORD *)v56;
        *(_BYTE *)(v55 + 4) = v57;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v25);
        goto LABEL_17;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v29 = (void *)v106;
    }
    else
    {
      if (!v27)
      {
        v109(v106, v24, v6);
        v96 = *(int *)(v25 + 20);
        v97 = v106 + v96;
        v98 = &v24[v96];
        v99 = v98[4];
        *(_DWORD *)v97 = *(_DWORD *)v98;
        *(_BYTE *)(v97 + 4) = v99;
        v100 = *(int *)(v25 + 24);
        v7 = (void (*)(uint64_t, uint64_t, uint64_t))v109;
        v101 = v106 + v100;
        v102 = &v24[v100];
        v103 = v102[4];
        *(_DWORD *)v101 = *(_DWORD *)v102;
        *(_BYTE *)(v101 + 4) = v103;
        goto LABEL_18;
      }
      sub_100004030(v106, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v28 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v29 = (void *)v106;
    }
    memcpy(v29, v24, v28);
LABEL_17:
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))v109;
LABEL_18:
    v58 = v11[6];
    v59 = &v9[v58];
    v60 = &v10[v58];
    v61 = *(_DWORD *)v60;
    v59[4] = v60[4];
    *(_DWORD *)v59 = v61;
    v62 = v11[7];
    v63 = &v9[v62];
    v64 = &v10[v62];
    v65 = *(_DWORD *)v64;
    v63[4] = v64[4];
    *(_DWORD *)v63 = v65;
    v66 = v11[8];
    v67 = &v9[v66];
    v68 = &v10[v66];
    v69 = *(_DWORD *)v68;
    v67[4] = v68[4];
    *(_DWORD *)v67 = v69;
    v9[v11[9]] = v10[v11[9]];
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    v21 = sub_1000039AC(&qword_100375580);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v108 = v7;
  v105 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v105(v9, v10, v6);
  v16 = v11[5];
  __dst = &v9[v16];
  v17 = &v10[v16];
  v18 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_1000039AC(&qword_100375578);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v105(__dst, v17, v6);
    v30 = *(int *)(v18 + 20);
    v31 = &__dst[v30];
    v32 = &v17[v30];
    v33 = v32[4];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v33;
    v34 = *(int *)(v18 + 24);
    v35 = &__dst[v34];
    v36 = &v17[v34];
    v37 = v36[4];
    *(_DWORD *)v35 = *(_DWORD *)v36;
    v35[4] = v37;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v38 = v11[6];
  v39 = &v9[v38];
  v40 = &v10[v38];
  v41 = *(_DWORD *)v40;
  v39[4] = v40[4];
  *(_DWORD *)v39 = v41;
  v42 = v11[7];
  v43 = &v9[v42];
  v44 = &v10[v42];
  v45 = *(_DWORD *)v44;
  v43[4] = v44[4];
  *(_DWORD *)v43 = v45;
  v46 = v11[8];
  v47 = &v9[v46];
  v48 = &v10[v46];
  v49 = *(_DWORD *)v48;
  v47[4] = v48[4];
  *(_DWORD *)v47 = v49;
  v9[v11[9]] = v10[v11[9]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  v7 = v108;
LABEL_19:
  v70 = *(int *)(v111 + 24);
  v71 = (char *)(a1 + v70);
  v72 = (char *)(a2 + v70);
  v73 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v76 = v75(v71, 1, v73);
  v77 = v75(v72, 1, v73);
  if (!v76)
  {
    if (!v77)
    {
      v7((uint64_t)v71, (uint64_t)v72, v6);
      v88 = *(int *)(v73 + 20);
      v89 = &v71[v88];
      v90 = &v72[v88];
      v91 = v90[4];
      *(_DWORD *)v89 = *(_DWORD *)v90;
      v89[4] = v91;
      v92 = *(int *)(v73 + 24);
      v93 = &v71[v92];
      v94 = &v72[v92];
      v95 = v94[4];
      *(_DWORD *)v93 = *(_DWORD *)v94;
      v93[4] = v95;
      return a1;
    }
    sub_100004030((uint64_t)v71, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    goto LABEL_24;
  }
  if (v77)
  {
LABEL_24:
    v86 = sub_1000039AC(&qword_100375578);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v71, v72, v6);
  v78 = *(int *)(v73 + 20);
  v79 = &v71[v78];
  v80 = &v72[v78];
  v81 = v80[4];
  *(_DWORD *)v79 = *(_DWORD *)v80;
  v79[4] = v81;
  v82 = *(int *)(v73 + 24);
  v83 = &v71[v82];
  v84 = &v72[v82];
  v85 = v84[4];
  *(_DWORD *)v83 = *(_DWORD *)v84;
  v83[4] = v85;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  return a1;
}

uint64_t sub_1001E2CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  char *__dst;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375580);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v48 = a3;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    __dst = &v9[v14];
    v15 = v7;
    v16 = &v10[v14];
    v17 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v47 = *(_QWORD *)(v17 - 8);
    v49 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v17))
    {
      v18 = sub_1000039AC(&qword_100375578);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v15((uint64_t)__dst, (uint64_t)v16, v6);
      v19 = *(int *)(v17 + 20);
      v20 = &__dst[v19];
      v21 = &v16[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v22 = *(int *)(v17 + 24);
      v23 = &__dst[v22];
      v24 = &v16[v22];
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      (*(void (**)(void))(v47 + 56))();
    }
    v25 = v11[6];
    v26 = &v9[v25];
    v27 = &v10[v25];
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = v11[7];
    v29 = &v9[v28];
    v30 = &v10[v28];
    v29[4] = v30[4];
    *(_DWORD *)v29 = *(_DWORD *)v30;
    v31 = v11[8];
    v32 = &v9[v31];
    v33 = &v10[v31];
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v9[v11[9]] = v10[v11[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    a3 = v48;
    v7 = v49;
  }
  v34 = *(int *)(a3 + 24);
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_1000039AC(&qword_100375578);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v35, (uint64_t)v36, v6);
    v40 = *(int *)(v37 + 20);
    v41 = &v35[v40];
    v42 = &v36[v40];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = *(int *)(v37 + 24);
    v44 = &v35[v43];
    v45 = &v36[v43];
    *(_DWORD *)v44 = *(_DWORD *)v45;
    v44[4] = v45[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  return a1;
}

uint64_t sub_1001E2F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *__dst;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  void (*v93)(uint64_t, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;

  v6 = type metadata accessor for UnknownStorage(0);
  v94 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 40);
  v7(a1, a2, v6);
  v95 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100004030((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      goto LABEL_7;
    }
    v93 = (void (*)(uint64_t, char *, uint64_t))v7;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v22 = v11[5];
    v23 = &v9[v22];
    v24 = &v10[v22];
    v25 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v88 = *(_QWORD *)(v25 - 8);
    v90 = (uint64_t)v23;
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    LODWORD(v23) = v26(v23, 1, v25);
    v27 = v26(v24, 1, v25);
    if ((_DWORD)v23)
    {
      if (!v27)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v90, v24, v6);
        v45 = *(int *)(v25 + 20);
        v46 = v90 + v45;
        v47 = &v24[v45];
        *(_DWORD *)v46 = *(_DWORD *)v47;
        *(_BYTE *)(v46 + 4) = v47[4];
        v48 = *(int *)(v25 + 24);
        v49 = v90 + v48;
        v50 = &v24[v48];
        *(_DWORD *)v49 = *(_DWORD *)v50;
        *(_BYTE *)(v49 + 4) = v50[4];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v90, 0, 1, v25);
        goto LABEL_17;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v29 = (void *)v90;
    }
    else
    {
      if (!v27)
      {
        v93(v90, v24, v6);
        v82 = *(int *)(v25 + 20);
        v83 = v90 + v82;
        v84 = &v24[v82];
        *(_DWORD *)v83 = *(_DWORD *)v84;
        *(_BYTE *)(v83 + 4) = v84[4];
        v85 = *(int *)(v25 + 24);
        v7 = (void (*)(uint64_t, uint64_t, uint64_t))v93;
        v86 = v90 + v85;
        v87 = &v24[v85];
        *(_DWORD *)v86 = *(_DWORD *)v87;
        *(_BYTE *)(v86 + 4) = v87[4];
        goto LABEL_18;
      }
      sub_100004030(v90, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v28 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v29 = (void *)v90;
    }
    memcpy(v29, v24, v28);
LABEL_17:
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))v93;
LABEL_18:
    v51 = v11[6];
    v52 = &v9[v51];
    v53 = &v10[v51];
    *(_DWORD *)v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
    v54 = v11[7];
    v55 = &v9[v54];
    v56 = &v10[v54];
    v55[4] = v56[4];
    *(_DWORD *)v55 = *(_DWORD *)v56;
    v57 = v11[8];
    v58 = &v9[v57];
    v59 = &v10[v57];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    v9[v11[9]] = v10[v11[9]];
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    v21 = sub_1000039AC(&qword_100375580);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v92 = v7;
  v89 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
  v89(v9, v10, v6);
  v16 = v11[5];
  __dst = &v9[v16];
  v17 = &v10[v16];
  v18 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_1000039AC(&qword_100375578);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v89(__dst, v17, v6);
    v30 = *(int *)(v18 + 20);
    v31 = &__dst[v30];
    v32 = &v17[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = *(int *)(v18 + 24);
    v34 = &__dst[v33];
    v35 = &v17[v33];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v36 = v11[6];
  v37 = &v9[v36];
  v38 = &v10[v36];
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  v39 = v11[7];
  v40 = &v9[v39];
  v41 = &v10[v39];
  v40[4] = v41[4];
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v42 = v11[8];
  v43 = &v9[v42];
  v44 = &v10[v42];
  *(_DWORD *)v43 = *(_DWORD *)v44;
  v43[4] = v44[4];
  v9[v11[9]] = v10[v11[9]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  v7 = v92;
LABEL_19:
  v60 = *(int *)(v95 + 24);
  v61 = (char *)(a1 + v60);
  v62 = (char *)(a2 + v60);
  v63 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      v7((uint64_t)v61, (uint64_t)v62, v6);
      v76 = *(int *)(v63 + 20);
      v77 = &v61[v76];
      v78 = &v62[v76];
      *(_DWORD *)v77 = *(_DWORD *)v78;
      v77[4] = v78[4];
      v79 = *(int *)(v63 + 24);
      v80 = &v61[v79];
      v81 = &v62[v79];
      *(_DWORD *)v80 = *(_DWORD *)v81;
      v80[4] = v81[4];
      return a1;
    }
    sub_100004030((uint64_t)v61, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    goto LABEL_24;
  }
  if (v67)
  {
LABEL_24:
    v74 = sub_1000039AC(&qword_100375578);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v61, v62, v6);
  v68 = *(int *)(v63 + 20);
  v69 = &v61[v68];
  v70 = &v62[v68];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v71 = *(int *)(v63 + 24);
  v72 = &v61[v71];
  v73 = &v62[v71];
  *(_DWORD *)v72 = *(_DWORD *)v73;
  v72[4] = v73[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  return a1;
}

uint64_t sub_1001E3518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E3524);
}

uint64_t sub_1001E3524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002024A0(a1, a2, a3, &qword_100375580, &qword_100375578);
}

uint64_t sub_1001E3538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E3544);
}

uint64_t sub_1001E3544(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100202568(a1, a2, a3, a4, &qword_100375580, &qword_100375578);
}

void sub_1001E3558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10020263C(a1, a2, a3, (unint64_t *)&unk_1003775E0, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, (unint64_t *)&unk_1003773B8, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001E357C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E3588);
}

uint64_t sub_1001E358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E3598);
}

uint64_t sub_1001E359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E35A8);
}

uint64_t sub_1001E35AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E35B8);
}

uint64_t *sub_1001E35BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v82;
  uint64_t v83;
  char *__dst;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_100375588);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v88 = v13;
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v87 = v10;
      v17 = &v10[v16];
      v89 = (void (*)(char *, char *, uint64_t))v8;
      v18 = &v11[v16];
      v19 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      v20 = v7;
      v21 = *((_QWORD *)v19 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v18, 1, v19))
      {
        v22 = sub_1000039AC(&qword_100375580);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = v87;
        v7 = v20;
      }
      else
      {
        v85 = v21;
        v89(v17, v18, v20);
        v24 = v19[5];
        v86 = v17;
        __dst = &v17[v24];
        v25 = &v18[v24];
        v26 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v82 = *(_QWORD *)(v26 - 8);
        v83 = v26;
        v27 = v25;
        v28 = (*(uint64_t (**)(char *, uint64_t))(v82 + 48))(v25, 1);
        v7 = v20;
        if (v28)
        {
          v29 = sub_1000039AC(&qword_100375578);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v89(__dst, v27, v20);
          v30 = *(int *)(v83 + 20);
          v31 = &__dst[v30];
          v32 = &v27[v30];
          *(_DWORD *)v31 = *(_DWORD *)v32;
          v31[4] = v32[4];
          v33 = *(int *)(v83 + 24);
          v34 = &__dst[v33];
          v35 = &v27[v33];
          *(_DWORD *)v34 = *(_DWORD *)v35;
          v34[4] = v35[4];
          (*(void (**)(char *, _QWORD, uint64_t))(v82 + 56))(__dst, 0, 1);
        }
        v23 = v87;
        v36 = v19[6];
        v37 = &v86[v36];
        v38 = &v18[v36];
        *(_DWORD *)v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        v39 = v19[7];
        v40 = &v86[v39];
        v41 = &v18[v39];
        v40[4] = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v42 = v19[8];
        v43 = &v86[v42];
        v44 = &v18[v42];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        v86[v19[9]] = v18[v19[9]];
        (*(void (**)(void))(v85 + 56))();
      }
      v45 = *(int *)(v12 + 24);
      v46 = &v23[v45];
      v47 = &v11[v45];
      v48 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_1000039AC(&qword_100375578);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v89(v46, v47, v7);
        v51 = *(int *)(v48 + 20);
        v52 = &v46[v51];
        v53 = &v47[v51];
        *(_DWORD *)v52 = *(_DWORD *)v53;
        v52[4] = v53[4];
        v54 = *(int *)(v48 + 24);
        v55 = &v46[v54];
        v56 = &v47[v54];
        *(_DWORD *)v55 = *(_DWORD *)v56;
        v55[4] = v56[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v23, 0, 1, v12);
      v8 = (void (*)(uint64_t *, uint64_t *, uint64_t))v89;
    }
    v57 = a3[6];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = sub_1000039AC(&qword_100375590);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v58, (uint64_t *)v59, v7);
      v63 = *(int *)(v60 + 20);
      v64 = &v58[v63];
      v65 = &v59[v63];
      *(_DWORD *)v64 = *(_DWORD *)v65;
      v64[4] = v65[4];
      v66 = *(int *)(v60 + 24);
      v67 = &v58[v66];
      v68 = &v59[v66];
      *(_DWORD *)v67 = *(_DWORD *)v68;
      v67[4] = v68[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    v69 = a3[7];
    v70 = (char *)a1 + v69;
    v71 = (char *)a2 + v69;
    v72 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = sub_1000039AC(&qword_100375598);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v70, (uint64_t *)v71, v7);
      v75 = *(int *)(v72 + 20);
      v76 = &v70[v75];
      v77 = &v71[v75];
      *(_DWORD *)v76 = *(_DWORD *)v77;
      v76[4] = v77[4];
      v78 = *(int *)(v72 + 24);
      v79 = &v70[v78];
      v80 = &v71[v78];
      *(_DWORD *)v79 = *(_DWORD *)v80;
      v79[4] = v80[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
  }
  return a1;
}

uint64_t sub_1001E3AE8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v18(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v18(v5, v4);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      v18(v7, v4);
      v9 = v7 + *(int *)(v8 + 20);
      v10 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
        v18(v9, v4);
    }
    v11 = v5 + *(int *)(v6 + 24);
    v12 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      v18(v11, v4);
  }
  v13 = a1 + a2[6];
  v14 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    v18(v13, v4);
  v15 = a1 + a2[7];
  v16 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v18)(v15, v4);
  return result;
}

uint64_t sub_1001E3CD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375588);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v84 = a3;
    v85 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v83 = v9;
    v15 = &v9[v14];
    v16 = v7;
    v17 = &v10[v14];
    v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v19 = *((_QWORD *)v18 - 1);
    v86 = (void (*)(char *, char *, uint64_t))v16;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1000039AC(&qword_100375580);
      memcpy(v15, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v83;
      a3 = v84;
    }
    else
    {
      v81 = v19;
      v16((uint64_t)v15, (uint64_t)v17, v6);
      v22 = v18[5];
      v82 = v15;
      v23 = &v15[v22];
      v24 = &v17[v22];
      v25 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v79 = *(_QWORD *)(v25 - 8);
      v80 = v25;
      if ((*(unsigned int (**)(char *, uint64_t))(v79 + 48))(v24, 1))
      {
        v26 = sub_1000039AC(&qword_100375578);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v16((uint64_t)v23, (uint64_t)v24, v6);
        v27 = *(int *)(v80 + 20);
        v28 = &v23[v27];
        v29 = &v24[v27];
        *(_DWORD *)v28 = *(_DWORD *)v29;
        v28[4] = v29[4];
        v30 = *(int *)(v80 + 24);
        v31 = &v23[v30];
        v32 = &v24[v30];
        *(_DWORD *)v31 = *(_DWORD *)v32;
        v31[4] = v32[4];
        (*(void (**)(char *, _QWORD, uint64_t))(v79 + 56))(v23, 0, 1);
      }
      v21 = v83;
      a3 = v84;
      v33 = v18[6];
      v34 = &v82[v33];
      v35 = &v17[v33];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v34[4] = v35[4];
      v36 = v18[7];
      v37 = &v82[v36];
      v38 = &v17[v36];
      v37[4] = v38[4];
      *(_DWORD *)v37 = *(_DWORD *)v38;
      v39 = v18[8];
      v40 = &v82[v39];
      v41 = &v17[v39];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      v82[v18[9]] = v17[v18[9]];
      (*(void (**)(void))(v81 + 56))();
    }
    v42 = *(int *)(v11 + 24);
    v43 = &v21[v42];
    v44 = &v10[v42];
    v45 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_1000039AC(&qword_100375578);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v86(v43, v44, v6);
      v48 = *(int *)(v45 + 20);
      v49 = &v43[v48];
      v50 = &v44[v48];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      v49[4] = v50[4];
      v51 = *(int *)(v45 + 24);
      v52 = &v43[v51];
      v53 = &v44[v51];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      v52[4] = v53[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v21, 0, 1, v11);
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))v86;
  }
  v54 = a3[6];
  v55 = (char *)(a1 + v54);
  v56 = (char *)(a2 + v54);
  v57 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_1000039AC(&qword_100375590);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v55, (uint64_t)v56, v6);
    v60 = *(int *)(v57 + 20);
    v61 = &v55[v60];
    v62 = &v56[v60];
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    v63 = *(int *)(v57 + 24);
    v64 = &v55[v63];
    v65 = &v56[v63];
    *(_DWORD *)v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v66 = a3[7];
  v67 = (char *)(a1 + v66);
  v68 = (char *)(a2 + v66);
  v69 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = sub_1000039AC(&qword_100375598);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v67, (uint64_t)v68, v6);
    v72 = *(int *)(v69 + 20);
    v73 = &v67[v72];
    v74 = &v68[v72];
    *(_DWORD *)v73 = *(_DWORD *)v74;
    v73[4] = v74[4];
    v75 = *(int *)(v69 + 24);
    v76 = &v67[v75];
    v77 = &v68[v75];
    *(_DWORD *)v76 = *(_DWORD *)v77;
    v76[4] = v77[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  return a1;
}

char *sub_1001E41BC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, int *);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  int v101;
  int v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char v110;
  uint64_t v111;
  uint64_t v113;
  char *v114;
  char *v115;
  char v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t (*v132)(char *, uint64_t, uint64_t);
  int v133;
  size_t v134;
  void *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char v143;
  uint64_t v144;
  char *v145;
  char *v146;
  int v147;
  uint64_t v148;
  char *v149;
  char *v150;
  int v151;
  uint64_t v152;
  char *v153;
  char *v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char v171;
  uint64_t v172;
  char *v173;
  char *v174;
  int v175;
  uint64_t v176;
  char *v177;
  char *v178;
  int v179;
  uint64_t v180;
  char *v181;
  char *v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(uint64_t, uint64_t, uint64_t);
  int v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(char *, char *, uint64_t);
  char *v213;
  void (*v214)(char *, char *, uint64_t);
  uint64_t v215;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v219;
  void (*v220)(char *, uint64_t, uint64_t);
  void (*v221)(char *, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v224 = a3;
  v225 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t)&a1[v9];
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a2) = v14(v10, 1, v12);
  v15 = v14((uint64_t)v11, 1, v12);
  if (!(_DWORD)a2)
  {
    if (v15)
    {
      sub_100004030(v10, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
      goto LABEL_7;
    }
    v221 = v8;
    v223 = v7;
    v219 = v6;
    v8((char *)v10, (uint64_t)v11, v6);
    v27 = *(int *)(v12 + 20);
    v28 = (char *)(v10 + v27);
    v29 = &v11[v27];
    v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v31 = *((_QWORD *)v30 - 1);
    v32 = *(uint64_t (**)(char *, uint64_t, int *))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        v212 = *(void (**)(char *, char *, uint64_t))(v223 + 16);
        v212(v28, v29, v219);
        v35 = v30[5];
        __srca = &v28[v35];
        v36 = &v29[v35];
        v37 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v210 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v36, 1, v37))
        {
          v38 = sub_1000039AC(&qword_100375578);
          memcpy(__srca, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v212(__srca, v36, v219);
          v136 = *(int *)(v37 + 20);
          v137 = &__srca[v136];
          v138 = &v36[v136];
          v139 = v138[4];
          *(_DWORD *)v137 = *(_DWORD *)v138;
          v137[4] = v139;
          v140 = *(int *)(v37 + 24);
          v141 = &__srca[v140];
          v142 = &v36[v140];
          v143 = v142[4];
          *(_DWORD *)v141 = *(_DWORD *)v142;
          v141[4] = v143;
          (*(void (**)(void))(v210 + 56))();
        }
        v144 = v30[6];
        v145 = &v28[v144];
        v146 = &v29[v144];
        v147 = *(_DWORD *)v146;
        v145[4] = v146[4];
        *(_DWORD *)v145 = v147;
        v148 = v30[7];
        v149 = &v28[v148];
        v150 = &v29[v148];
        v151 = *(_DWORD *)v150;
        v149[4] = v150[4];
        *(_DWORD *)v149 = v151;
        v152 = v30[8];
        v153 = &v28[v152];
        v154 = &v29[v152];
        v155 = *(_DWORD *)v154;
        v153[4] = v154[4];
        *(_DWORD *)v153 = v155;
        v28[v30[9]] = v29[v30[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_50;
      }
      goto LABEL_17;
    }
    if (v34)
    {
      sub_100004030((uint64_t)v28, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
LABEL_17:
      v43 = sub_1000039AC(&qword_100375580);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_50:
      v6 = v219;
      v8 = v221;
      v7 = v223;
      v184 = *(int *)(v12 + 24);
      v185 = v10 + v184;
      v186 = &v11[v184];
      v187 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v188 = *(_QWORD *)(v187 - 8);
      v189 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v188 + 48);
      v190 = v189(v185, 1, v187);
      v191 = v189((uint64_t)v186, 1, v187);
      if (v190)
      {
        if (!v191)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v223 + 16))(v185, v186, v219);
          v192 = *(int *)(v187 + 20);
          v193 = v185 + v192;
          v194 = &v186[v192];
          v195 = v194[4];
          *(_DWORD *)v193 = *(_DWORD *)v194;
          *(_BYTE *)(v193 + 4) = v195;
          v196 = *(int *)(v187 + 24);
          v197 = v185 + v196;
          v198 = &v186[v196];
          v199 = v198[4];
          *(_DWORD *)v197 = *(_DWORD *)v198;
          *(_BYTE *)(v197 + 4) = v199;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
          goto LABEL_24;
        }
      }
      else
      {
        if (!v191)
        {
          v221((char *)v185, (uint64_t)v186, v219);
          v200 = *(int *)(v187 + 20);
          v201 = v185 + v200;
          v202 = &v186[v200];
          v203 = v202[4];
          *(_DWORD *)v201 = *(_DWORD *)v202;
          *(_BYTE *)(v201 + 4) = v203;
          v204 = *(int *)(v187 + 24);
          v205 = v185 + v204;
          v206 = &v186[v204];
          v207 = v206[4];
          *(_DWORD *)v205 = *(_DWORD *)v206;
          *(_BYTE *)(v205 + 4) = v207;
          goto LABEL_24;
        }
        sub_100004030(v185, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v25 = (void *)v185;
      v26 = v186;
LABEL_8:
      memcpy(v25, v26, v24);
      goto LABEL_24;
    }
    v221(v28, (uint64_t)v29, v219);
    v129 = v30[5];
    v130 = &v28[v129];
    __srcb = &v29[v129];
    v131 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v211 = *(_QWORD *)(v131 - 8);
    v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48);
    v215 = (uint64_t)v130;
    LODWORD(v130) = v132(v130, 1, v131);
    v133 = v132(__srcb, 1, v131);
    if ((_DWORD)v130)
    {
      if (!v133)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v223 + 16))(v215, __srcb, v219);
        v156 = *(int *)(v131 + 20);
        v157 = v215 + v156;
        v158 = &__srcb[v156];
        v159 = v158[4];
        *(_DWORD *)v157 = *(_DWORD *)v158;
        *(_BYTE *)(v157 + 4) = v159;
        v160 = *(int *)(v131 + 24);
        v161 = v215 + v160;
        v162 = &__srcb[v160];
        v163 = v162[4];
        *(_DWORD *)v161 = *(_DWORD *)v162;
        *(_BYTE *)(v161 + 4) = v163;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v211 + 56))(v215, 0, 1);
        goto LABEL_49;
      }
      v134 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v135 = (void *)v215;
    }
    else
    {
      if (!v133)
      {
        v221((char *)v215, (uint64_t)__srcb, v219);
        v164 = *(int *)(v131 + 20);
        v165 = v215 + v164;
        v166 = &__srcb[v164];
        v167 = v166[4];
        *(_DWORD *)v165 = *(_DWORD *)v166;
        *(_BYTE *)(v165 + 4) = v167;
        v168 = *(int *)(v131 + 24);
        v169 = v215 + v168;
        v170 = &__srcb[v168];
        v171 = v170[4];
        *(_DWORD *)v169 = *(_DWORD *)v170;
        *(_BYTE *)(v169 + 4) = v171;
        goto LABEL_49;
      }
      sub_100004030(v215, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v134 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v135 = (void *)v215;
    }
    memcpy(v135, __srcb, v134);
LABEL_49:
    v172 = v30[6];
    v173 = &v28[v172];
    v174 = &v29[v172];
    v175 = *(_DWORD *)v174;
    v173[4] = v174[4];
    *(_DWORD *)v173 = v175;
    v176 = v30[7];
    v177 = &v28[v176];
    v178 = &v29[v176];
    v179 = *(_DWORD *)v178;
    v177[4] = v178[4];
    *(_DWORD *)v177 = v179;
    v180 = v30[8];
    v181 = &v28[v180];
    v182 = &v29[v180];
    v183 = *(_DWORD *)v182;
    v181[4] = v182[4];
    *(_DWORD *)v181 = v183;
    v28[v30[9]] = v29[v30[9]];
    goto LABEL_50;
  }
  if (v15)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
    v25 = (void *)v10;
    v26 = v11;
    goto LABEL_8;
  }
  __src = a1;
  v220 = v8;
  v222 = v7;
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v16(v10, v11, v6);
  v17 = *(int *)(v12 + 20);
  v18 = (char *)(v10 + v17);
  v19 = v6;
  v20 = &v11[v17];
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v22 = *((_QWORD *)v21 - 1);
  v214 = (void (*)(char *, char *, uint64_t))v16;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_1000039AC(&qword_100375580);
    memcpy(v18, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v6 = v19;
    v7 = v222;
    a1 = __src;
  }
  else
  {
    v209 = v22;
    v16((uint64_t)v18, v20, v19);
    v39 = v21[5];
    v213 = &v18[v39];
    v40 = &v20[v39];
    v41 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v208 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v40, 1, v41))
    {
      v42 = sub_1000039AC(&qword_100375578);
      memcpy(v213, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v214(v213, v40, v19);
      v44 = *(int *)(v41 + 20);
      v45 = &v213[v44];
      v46 = &v40[v44];
      v47 = v46[4];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v47;
      v48 = *(int *)(v41 + 24);
      v49 = &v213[v48];
      v50 = &v40[v48];
      v51 = v50[4];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      v49[4] = v51;
      (*(void (**)(void))(v208 + 56))();
    }
    a1 = __src;
    v52 = v21[6];
    v53 = &v18[v52];
    v54 = &v20[v52];
    v55 = *(_DWORD *)v54;
    v53[4] = v54[4];
    *(_DWORD *)v53 = v55;
    v56 = v21[7];
    v57 = &v18[v56];
    v58 = &v20[v56];
    v59 = *(_DWORD *)v58;
    v57[4] = v58[4];
    *(_DWORD *)v57 = v59;
    v60 = v21[8];
    v61 = &v18[v60];
    v62 = &v20[v60];
    v63 = *(_DWORD *)v62;
    v61[4] = v62[4];
    *(_DWORD *)v61 = v63;
    v18[v21[9]] = v20[v21[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v209 + 56))(v18, 0, 1, v21);
    v6 = v19;
    v7 = v222;
  }
  v64 = *(int *)(v12 + 24);
  v65 = (char *)(v10 + v64);
  v66 = &v11[v64];
  v67 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = sub_1000039AC(&qword_100375578);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v214(v65, v66, v6);
    v70 = *(int *)(v67 + 20);
    v71 = &v65[v70];
    v72 = &v66[v70];
    v73 = v72[4];
    *(_DWORD *)v71 = *(_DWORD *)v72;
    v71[4] = v73;
    v74 = *(int *)(v67 + 24);
    v75 = &v65[v74];
    v76 = &v66[v74];
    v77 = v76[4];
    *(_DWORD *)v75 = *(_DWORD *)v76;
    v75[4] = v77;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  v8 = v220;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_24:
  v78 = *(int *)(v224 + 24);
  v79 = &a1[v78];
  v80 = (char *)(v225 + v78);
  v81 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  v84 = v83(v79, 1, v81);
  v85 = v83(v80, 1, v81);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v79, v80, v6);
      v86 = *(int *)(v81 + 20);
      v87 = &v79[v86];
      v88 = &v80[v86];
      v89 = v88[4];
      *(_DWORD *)v87 = *(_DWORD *)v88;
      v87[4] = v89;
      v90 = *(int *)(v81 + 24);
      v91 = &v79[v90];
      v92 = &v80[v90];
      v93 = v92[4];
      *(_DWORD *)v91 = *(_DWORD *)v92;
      v91[4] = v93;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v85)
  {
    sub_100004030((uint64_t)v79, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
LABEL_29:
    v94 = sub_1000039AC(&qword_100375590);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_30;
  }
  v8(v79, (uint64_t)v80, v6);
  v113 = *(int *)(v81 + 20);
  v114 = &v79[v113];
  v115 = &v80[v113];
  v116 = v115[4];
  *(_DWORD *)v114 = *(_DWORD *)v115;
  v114[4] = v116;
  v117 = *(int *)(v81 + 24);
  v118 = &v79[v117];
  v119 = &v80[v117];
  v120 = v119[4];
  *(_DWORD *)v118 = *(_DWORD *)v119;
  v118[4] = v120;
LABEL_30:
  v95 = *(int *)(v224 + 28);
  v96 = &a1[v95];
  v97 = (char *)(v225 + v95);
  v98 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v99 = *(_QWORD *)(v98 - 8);
  v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
  v101 = v100(v96, 1, v98);
  v102 = v100(v97, 1, v98);
  if (!v101)
  {
    if (!v102)
    {
      v8(v96, (uint64_t)v97, v6);
      v121 = *(int *)(v98 + 20);
      v122 = &v96[v121];
      v123 = &v97[v121];
      v124 = v123[4];
      *(_DWORD *)v122 = *(_DWORD *)v123;
      v122[4] = v124;
      v125 = *(int *)(v98 + 24);
      v126 = &v96[v125];
      v127 = &v97[v125];
      v128 = v127[4];
      *(_DWORD *)v126 = *(_DWORD *)v127;
      v126[4] = v128;
      return a1;
    }
    sub_100004030((uint64_t)v96, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
    goto LABEL_35;
  }
  if (v102)
  {
LABEL_35:
    v111 = sub_1000039AC(&qword_100375598);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v96, v97, v6);
  v103 = *(int *)(v98 + 20);
  v104 = &v96[v103];
  v105 = &v97[v103];
  v106 = v105[4];
  *(_DWORD *)v104 = *(_DWORD *)v105;
  v104[4] = v106;
  v107 = *(int *)(v98 + 24);
  v108 = &v96[v107];
  v109 = &v97[v107];
  v110 = v109[4];
  *(_DWORD *)v108 = *(_DWORD *)v109;
  v108[4] = v110;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  return a1;
}

uint64_t sub_1001E4D0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_100375588);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v84 = a3;
    v85 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v83 = v9;
    v15 = &v9[v14];
    v16 = v7;
    v17 = &v10[v14];
    v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v19 = *((_QWORD *)v18 - 1);
    v86 = (void (*)(char *, char *, uint64_t))v16;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1000039AC(&qword_100375580);
      memcpy(v15, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v83;
      a3 = v84;
    }
    else
    {
      v81 = v19;
      v16((uint64_t)v15, (uint64_t)v17, v6);
      v22 = v18[5];
      v82 = v15;
      v23 = &v15[v22];
      v24 = &v17[v22];
      v25 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v79 = *(_QWORD *)(v25 - 8);
      v80 = v25;
      if ((*(unsigned int (**)(char *, uint64_t))(v79 + 48))(v24, 1))
      {
        v26 = sub_1000039AC(&qword_100375578);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v16((uint64_t)v23, (uint64_t)v24, v6);
        v27 = *(int *)(v80 + 20);
        v28 = &v23[v27];
        v29 = &v24[v27];
        *(_DWORD *)v28 = *(_DWORD *)v29;
        v28[4] = v29[4];
        v30 = *(int *)(v80 + 24);
        v31 = &v23[v30];
        v32 = &v24[v30];
        *(_DWORD *)v31 = *(_DWORD *)v32;
        v31[4] = v32[4];
        (*(void (**)(char *, _QWORD, uint64_t))(v79 + 56))(v23, 0, 1);
      }
      v21 = v83;
      a3 = v84;
      v33 = v18[6];
      v34 = &v82[v33];
      v35 = &v17[v33];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v34[4] = v35[4];
      v36 = v18[7];
      v37 = &v82[v36];
      v38 = &v17[v36];
      v37[4] = v38[4];
      *(_DWORD *)v37 = *(_DWORD *)v38;
      v39 = v18[8];
      v40 = &v82[v39];
      v41 = &v17[v39];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      v82[v18[9]] = v17[v18[9]];
      (*(void (**)(void))(v81 + 56))();
    }
    v42 = *(int *)(v11 + 24);
    v43 = &v21[v42];
    v44 = &v10[v42];
    v45 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_1000039AC(&qword_100375578);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v86(v43, v44, v6);
      v48 = *(int *)(v45 + 20);
      v49 = &v43[v48];
      v50 = &v44[v48];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      v49[4] = v50[4];
      v51 = *(int *)(v45 + 24);
      v52 = &v43[v51];
      v53 = &v44[v51];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      v52[4] = v53[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v21, 0, 1, v11);
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))v86;
  }
  v54 = a3[6];
  v55 = (char *)(a1 + v54);
  v56 = (char *)(a2 + v54);
  v57 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_1000039AC(&qword_100375590);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v55, (uint64_t)v56, v6);
    v60 = *(int *)(v57 + 20);
    v61 = &v55[v60];
    v62 = &v56[v60];
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    v63 = *(int *)(v57 + 24);
    v64 = &v55[v63];
    v65 = &v56[v63];
    *(_DWORD *)v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v66 = a3[7];
  v67 = (char *)(a1 + v66);
  v68 = (char *)(a2 + v66);
  v69 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = sub_1000039AC(&qword_100375598);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v67, (uint64_t)v68, v6);
    v72 = *(int *)(v69 + 20);
    v73 = &v67[v72];
    v74 = &v68[v72];
    *(_DWORD *)v73 = *(_DWORD *)v74;
    v73[4] = v74[4];
    v75 = *(int *)(v69 + 24);
    v76 = &v67[v75];
    v77 = &v68[v75];
    *(_DWORD *)v76 = *(_DWORD *)v77;
    v76[4] = v77[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  return a1;
}

char *sub_1001E51F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, int *);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t, uint64_t);
  int v118;
  size_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(uint64_t, uint64_t, uint64_t);
  int v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  char *v182;
  void (*v183)(char *, char *, uint64_t);
  uint64_t v184;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v188;
  void (*v189)(char *, uint64_t, uint64_t);
  void (*v190)(char *, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v193 = a3;
  v194 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t)&a1[v9];
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a2) = v14(v10, 1, v12);
  v15 = v14((uint64_t)v11, 1, v12);
  if (!(_DWORD)a2)
  {
    if (v15)
    {
      sub_100004030(v10, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
      goto LABEL_7;
    }
    v190 = v8;
    v192 = v7;
    v188 = v6;
    v8((char *)v10, (uint64_t)v11, v6);
    v27 = *(int *)(v12 + 20);
    v28 = (char *)(v10 + v27);
    v29 = &v11[v27];
    v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v31 = *((_QWORD *)v30 - 1);
    v32 = *(uint64_t (**)(char *, uint64_t, int *))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        v181 = *(void (**)(char *, char *, uint64_t))(v192 + 32);
        v181(v28, v29, v188);
        v35 = v30[5];
        __srca = &v28[v35];
        v36 = &v29[v35];
        v37 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v179 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v36, 1, v37))
        {
          v38 = sub_1000039AC(&qword_100375578);
          memcpy(__srca, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v181(__srca, v36, v188);
          v121 = *(int *)(v37 + 20);
          v122 = &__srca[v121];
          v123 = &v36[v121];
          *(_DWORD *)v122 = *(_DWORD *)v123;
          v122[4] = v123[4];
          v124 = *(int *)(v37 + 24);
          v125 = &__srca[v124];
          v126 = &v36[v124];
          *(_DWORD *)v125 = *(_DWORD *)v126;
          v125[4] = v126[4];
          (*(void (**)(void))(v179 + 56))();
        }
        v127 = v30[6];
        v128 = &v28[v127];
        v129 = &v29[v127];
        *(_DWORD *)v128 = *(_DWORD *)v129;
        v128[4] = v129[4];
        v130 = v30[7];
        v131 = &v28[v130];
        v132 = &v29[v130];
        v131[4] = v132[4];
        *(_DWORD *)v131 = *(_DWORD *)v132;
        v133 = v30[8];
        v134 = &v28[v133];
        v135 = &v29[v133];
        *(_DWORD *)v134 = *(_DWORD *)v135;
        v134[4] = v135[4];
        v28[v30[9]] = v29[v30[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_50;
      }
      goto LABEL_17;
    }
    if (v34)
    {
      sub_100004030((uint64_t)v28, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
LABEL_17:
      v43 = sub_1000039AC(&qword_100375580);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_50:
      v6 = v188;
      v8 = v190;
      v7 = v192;
      v157 = *(int *)(v12 + 24);
      v158 = v10 + v157;
      v159 = &v11[v157];
      v160 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v161 = *(_QWORD *)(v160 - 8);
      v162 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
      v163 = v162(v158, 1, v160);
      v164 = v162((uint64_t)v159, 1, v160);
      if (v163)
      {
        if (!v164)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v192 + 32))(v158, v159, v188);
          v165 = *(int *)(v160 + 20);
          v166 = v158 + v165;
          v167 = &v159[v165];
          *(_DWORD *)v166 = *(_DWORD *)v167;
          *(_BYTE *)(v166 + 4) = v167[4];
          v168 = *(int *)(v160 + 24);
          v169 = v158 + v168;
          v170 = &v159[v168];
          *(_DWORD *)v169 = *(_DWORD *)v170;
          *(_BYTE *)(v169 + 4) = v170[4];
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v161 + 56))(v158, 0, 1, v160);
          goto LABEL_24;
        }
      }
      else
      {
        if (!v164)
        {
          v190((char *)v158, (uint64_t)v159, v188);
          v171 = *(int *)(v160 + 20);
          v172 = v158 + v171;
          v173 = &v159[v171];
          *(_DWORD *)v172 = *(_DWORD *)v173;
          *(_BYTE *)(v172 + 4) = v173[4];
          v174 = *(int *)(v160 + 24);
          v175 = v158 + v174;
          v176 = &v159[v174];
          *(_DWORD *)v175 = *(_DWORD *)v176;
          *(_BYTE *)(v175 + 4) = v176[4];
          goto LABEL_24;
        }
        sub_100004030(v158, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v25 = (void *)v158;
      v26 = v159;
LABEL_8:
      memcpy(v25, v26, v24);
      goto LABEL_24;
    }
    v190(v28, (uint64_t)v29, v188);
    v114 = v30[5];
    v115 = &v28[v114];
    __srcb = &v29[v114];
    v116 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v180 = *(_QWORD *)(v116 - 8);
    v117 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v180 + 48);
    v184 = (uint64_t)v115;
    LODWORD(v115) = v117(v115, 1, v116);
    v118 = v117(__srcb, 1, v116);
    if ((_DWORD)v115)
    {
      if (!v118)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v192 + 32))(v184, __srcb, v188);
        v136 = *(int *)(v116 + 20);
        v137 = v184 + v136;
        v138 = &__srcb[v136];
        *(_DWORD *)v137 = *(_DWORD *)v138;
        *(_BYTE *)(v137 + 4) = v138[4];
        v139 = *(int *)(v116 + 24);
        v140 = v184 + v139;
        v141 = &__srcb[v139];
        *(_DWORD *)v140 = *(_DWORD *)v141;
        *(_BYTE *)(v140 + 4) = v141[4];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v180 + 56))(v184, 0, 1);
        goto LABEL_49;
      }
      v119 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v120 = (void *)v184;
    }
    else
    {
      if (!v118)
      {
        v190((char *)v184, (uint64_t)__srcb, v188);
        v142 = *(int *)(v116 + 20);
        v143 = v184 + v142;
        v144 = &__srcb[v142];
        *(_DWORD *)v143 = *(_DWORD *)v144;
        *(_BYTE *)(v143 + 4) = v144[4];
        v145 = *(int *)(v116 + 24);
        v146 = v184 + v145;
        v147 = &__srcb[v145];
        *(_DWORD *)v146 = *(_DWORD *)v147;
        *(_BYTE *)(v146 + 4) = v147[4];
        goto LABEL_49;
      }
      sub_100004030(v184, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v119 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v120 = (void *)v184;
    }
    memcpy(v120, __srcb, v119);
LABEL_49:
    v148 = v30[6];
    v149 = &v28[v148];
    v150 = &v29[v148];
    *(_DWORD *)v149 = *(_DWORD *)v150;
    v149[4] = v150[4];
    v151 = v30[7];
    v152 = &v28[v151];
    v153 = &v29[v151];
    v152[4] = v153[4];
    *(_DWORD *)v152 = *(_DWORD *)v153;
    v154 = v30[8];
    v155 = &v28[v154];
    v156 = &v29[v154];
    *(_DWORD *)v155 = *(_DWORD *)v156;
    v155[4] = v156[4];
    v28[v30[9]] = v29[v30[9]];
    goto LABEL_50;
  }
  if (v15)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
    v25 = (void *)v10;
    v26 = v11;
    goto LABEL_8;
  }
  __src = a1;
  v189 = v8;
  v191 = v7;
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v16(v10, v11, v6);
  v17 = *(int *)(v12 + 20);
  v18 = (char *)(v10 + v17);
  v19 = v6;
  v20 = &v11[v17];
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v22 = *((_QWORD *)v21 - 1);
  v183 = (void (*)(char *, char *, uint64_t))v16;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_1000039AC(&qword_100375580);
    memcpy(v18, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v6 = v19;
    v7 = v191;
    a1 = __src;
  }
  else
  {
    v178 = v22;
    v16((uint64_t)v18, v20, v19);
    v39 = v21[5];
    v182 = &v18[v39];
    v40 = &v20[v39];
    v41 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v177 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v40, 1, v41))
    {
      v42 = sub_1000039AC(&qword_100375578);
      memcpy(v182, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v183(v182, v40, v19);
      v44 = *(int *)(v41 + 20);
      v45 = &v182[v44];
      v46 = &v40[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      v47 = *(int *)(v41 + 24);
      v48 = &v182[v47];
      v49 = &v40[v47];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      (*(void (**)(void))(v177 + 56))();
    }
    a1 = __src;
    v50 = v21[6];
    v51 = &v18[v50];
    v52 = &v20[v50];
    *(_DWORD *)v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    v53 = v21[7];
    v54 = &v18[v53];
    v55 = &v20[v53];
    v54[4] = v55[4];
    *(_DWORD *)v54 = *(_DWORD *)v55;
    v56 = v21[8];
    v57 = &v18[v56];
    v58 = &v20[v56];
    *(_DWORD *)v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
    v18[v21[9]] = v20[v21[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v178 + 56))(v18, 0, 1, v21);
    v6 = v19;
    v7 = v191;
  }
  v59 = *(int *)(v12 + 24);
  v60 = (char *)(v10 + v59);
  v61 = &v11[v59];
  v62 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v64 = sub_1000039AC(&qword_100375578);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v183(v60, v61, v6);
    v65 = *(int *)(v62 + 20);
    v66 = &v60[v65];
    v67 = &v61[v65];
    *(_DWORD *)v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v68 = *(int *)(v62 + 24);
    v69 = &v60[v68];
    v70 = &v61[v68];
    *(_DWORD *)v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v8 = v189;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_24:
  v71 = *(int *)(v193 + 24);
  v72 = &a1[v71];
  v73 = (char *)(v194 + v71);
  v74 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v77 = v76(v72, 1, v74);
  v78 = v76(v73, 1, v74);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v72, v73, v6);
      v79 = *(int *)(v74 + 20);
      v80 = &v72[v79];
      v81 = &v73[v79];
      *(_DWORD *)v80 = *(_DWORD *)v81;
      v80[4] = v81[4];
      v82 = *(int *)(v74 + 24);
      v83 = &v72[v82];
      v84 = &v73[v82];
      *(_DWORD *)v83 = *(_DWORD *)v84;
      v83[4] = v84[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v78)
  {
    sub_100004030((uint64_t)v72, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
LABEL_29:
    v85 = sub_1000039AC(&qword_100375590);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_30;
  }
  v8(v72, (uint64_t)v73, v6);
  v102 = *(int *)(v74 + 20);
  v103 = &v72[v102];
  v104 = &v73[v102];
  *(_DWORD *)v103 = *(_DWORD *)v104;
  v103[4] = v104[4];
  v105 = *(int *)(v74 + 24);
  v106 = &v72[v105];
  v107 = &v73[v105];
  *(_DWORD *)v106 = *(_DWORD *)v107;
  v106[4] = v107[4];
LABEL_30:
  v86 = *(int *)(v193 + 28);
  v87 = &a1[v86];
  v88 = (char *)(v194 + v86);
  v89 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
  v92 = v91(v87, 1, v89);
  v93 = v91(v88, 1, v89);
  if (!v92)
  {
    if (!v93)
    {
      v8(v87, (uint64_t)v88, v6);
      v108 = *(int *)(v89 + 20);
      v109 = &v87[v108];
      v110 = &v88[v108];
      *(_DWORD *)v109 = *(_DWORD *)v110;
      v109[4] = v110[4];
      v111 = *(int *)(v89 + 24);
      v112 = &v87[v111];
      v113 = &v88[v111];
      *(_DWORD *)v112 = *(_DWORD *)v113;
      v112[4] = v113[4];
      return a1;
    }
    sub_100004030((uint64_t)v87, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
    goto LABEL_35;
  }
  if (v93)
  {
LABEL_35:
    v100 = sub_1000039AC(&qword_100375598);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v87, v88, v6);
  v94 = *(int *)(v89 + 20);
  v95 = &v87[v94];
  v96 = &v88[v94];
  *(_DWORD *)v95 = *(_DWORD *)v96;
  v95[4] = v96[4];
  v97 = *(int *)(v89 + 24);
  v98 = &v87[v97];
  v99 = &v88[v97];
  *(_DWORD *)v98 = *(_DWORD *)v99;
  v98[4] = v99[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
  return a1;
}

uint64_t sub_1001E5D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E5D50);
}

uint64_t sub_1001E5D50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_1000039AC(&qword_100375588);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_1000039AC(&qword_100375590);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = sub_1000039AC(&qword_100375598);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001E5E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E5E24);
}

uint64_t sub_1001E5E24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1000039AC(&qword_100375588);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_1000039AC(&qword_100375590);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = sub_1000039AC(&qword_100375598);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001E5EF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10001198C(319, &qword_100377780, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10001198C(319, &qword_100377788, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10001198C(319, (unint64_t *)&unk_100377790, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 4, v10, a1 + 16);
        }
      }
    }
  }
}

char *sub_1001E5FE0(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v91;
  uint64_t v92;
  char *__dst;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_1003755A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      v16 = v12[5];
      v100 = v10;
      v17 = &v10[v16];
      v18 = v8;
      v19 = &v11[v16];
      v20 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
      v21 = *(_QWORD *)(v20 - 8);
      v101 = v13;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_1000039AC(&qword_100375588);
        memcpy(v17, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = v18;
        v24 = v100;
      }
      else
      {
        v97 = v21;
        v18(v17, v19, v7);
        v25 = *(int *)(v20 + 20);
        v99 = v17;
        v26 = &v17[v25];
        v95 = v19;
        v27 = &v19[v25];
        v28 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
        v29 = *((_QWORD *)v28 - 1);
        v96 = v20;
        v98 = v18;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_1000039AC(&qword_100375580);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          v31 = v95;
        }
        else
        {
          v94 = v29;
          v18(v26, v27, v7);
          v32 = v28[5];
          __dst = &v26[v32];
          v33 = &v27[v32];
          v34 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
          v91 = *(_QWORD *)(v34 - 8);
          v92 = v34;
          v35 = v33;
          v36 = (*(uint64_t (**)(char *, uint64_t))(v91 + 48))(v33, 1);
          v37 = v26;
          if (v36)
          {
            v38 = sub_1000039AC(&qword_100375578);
            memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            v18(__dst, v35, v7);
            v39 = *(int *)(v92 + 20);
            v40 = &__dst[v39];
            v41 = &v35[v39];
            *(_DWORD *)v40 = *(_DWORD *)v41;
            v40[4] = v41[4];
            v42 = *(int *)(v92 + 24);
            v43 = &__dst[v42];
            v44 = &v35[v42];
            *(_DWORD *)v43 = *(_DWORD *)v44;
            v43[4] = v44[4];
            (*(void (**)(char *, _QWORD, uint64_t))(v91 + 56))(__dst, 0, 1);
          }
          v31 = v95;
          v45 = v28[6];
          v46 = &v37[v45];
          v47 = &v27[v45];
          *(_DWORD *)v46 = *(_DWORD *)v47;
          v46[4] = v47[4];
          v48 = v28[7];
          v49 = &v37[v48];
          v50 = &v27[v48];
          v49[4] = v50[4];
          *(_DWORD *)v49 = *(_DWORD *)v50;
          v51 = v28[8];
          v52 = &v37[v51];
          v53 = &v27[v51];
          *(_DWORD *)v52 = *(_DWORD *)v53;
          v52[4] = v53[4];
          v37[v28[9]] = v27[v28[9]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v94 + 56))(v37, 0, 1, v28);
        }
        v24 = v100;
        v54 = *(int *)(v96 + 24);
        v55 = &v99[v54];
        v56 = &v31[v54];
        v57 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v59 = sub_1000039AC(&qword_100375578);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          v98(v55, v56, v7);
          v60 = *(int *)(v57 + 20);
          v61 = &v55[v60];
          v62 = &v56[v60];
          *(_DWORD *)v61 = *(_DWORD *)v62;
          v61[4] = v62[4];
          v63 = *(int *)(v57 + 24);
          v64 = &v55[v63];
          v65 = &v56[v63];
          *(_DWORD *)v64 = *(_DWORD *)v65;
          v64[4] = v65[4];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v99, 0, 1, v96);
        v23 = v98;
      }
      v66 = v12[6];
      v67 = &v24[v66];
      v68 = &v11[v66];
      v69 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = sub_1000039AC(&qword_100375590);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v23(v67, v68, v7);
        v72 = *(int *)(v69 + 20);
        v73 = &v67[v72];
        v74 = &v68[v72];
        *(_DWORD *)v73 = *(_DWORD *)v74;
        v73[4] = v74[4];
        v75 = *(int *)(v69 + 24);
        v76 = &v67[v75];
        v77 = &v68[v75];
        *(_DWORD *)v76 = *(_DWORD *)v77;
        v76[4] = v77[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v78 = v12[7];
      v79 = &v24[v78];
      v80 = &v11[v78];
      v81 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
      v82 = *(_QWORD *)(v81 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
      {
        v83 = sub_1000039AC(&qword_100375598);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v23(v79, v80, v7);
        v84 = *(int *)(v81 + 20);
        v85 = &v79[v84];
        v86 = &v80[v84];
        *(_DWORD *)v85 = *(_DWORD *)v86;
        v85[4] = v86[4];
        v87 = *(int *)(v81 + 24);
        v88 = &v79[v87];
        v89 = &v80[v87];
        *(_DWORD *)v88 = *(_DWORD *)v89;
        v88[4] = v89[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v101 + 56))(v24, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_1001E65A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v20(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v20(v5, v4);
    v8 = v5 + v6[5];
    v9 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      v20(v8, v4);
      v10 = v8 + *(int *)(v9 + 20);
      v11 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        v20(v10, v4);
        v12 = v10 + *(int *)(v11 + 20);
        v13 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
          v20(v12, v4);
      }
      v14 = v8 + *(int *)(v9 + 24);
      v15 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
        v20(v14, v4);
    }
    v16 = v5 + v6[6];
    v17 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
      v20(v16, v4);
    v18 = v5 + v6[7];
    v19 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v20)(v18, v4);
  }
  return result;
}

uint64_t sub_1001E67D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v90;
  uint64_t v91;
  char *__dst;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_1003755A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v99 = v9;
    v15 = &v9[v14];
    v16 = v7;
    v17 = &v10[v14];
    v18 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    v19 = *(_QWORD *)(v18 - 8);
    v100 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1000039AC(&qword_100375588);
      memcpy(v15, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = (void (*)(char *, char *, uint64_t))v16;
      v22 = v99;
    }
    else
    {
      v95 = v19;
      v16((uint64_t)v15, (uint64_t)v17, v6);
      v23 = *(int *)(v18 + 20);
      v98 = v15;
      v24 = &v15[v23];
      v94 = v17;
      v25 = &v17[v23];
      v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      v27 = *((_QWORD *)v26 - 1);
      v96 = (void (*)(char *, char *, uint64_t))v16;
      v97 = v18;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_1000039AC(&qword_100375580);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        v29 = v94;
        v22 = v99;
        v30 = v18;
      }
      else
      {
        v93 = v27;
        v16((uint64_t)v24, (uint64_t)v25, v6);
        v31 = v26[5];
        __dst = &v24[v31];
        v32 = &v25[v31];
        v33 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v90 = *(_QWORD *)(v33 - 8);
        v91 = v33;
        v34 = v32;
        v35 = (*(uint64_t (**)(char *, uint64_t))(v90 + 48))(v32, 1);
        v36 = v24;
        if (v35)
        {
          v37 = sub_1000039AC(&qword_100375578);
          memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v16((uint64_t)__dst, (uint64_t)v34, v6);
          v38 = *(int *)(v91 + 20);
          v39 = &__dst[v38];
          v40 = &v34[v38];
          *(_DWORD *)v39 = *(_DWORD *)v40;
          v39[4] = v40[4];
          v41 = *(int *)(v91 + 24);
          v42 = &__dst[v41];
          v43 = &v34[v41];
          *(_DWORD *)v42 = *(_DWORD *)v43;
          v42[4] = v43[4];
          (*(void (**)(char *, _QWORD, uint64_t))(v90 + 56))(__dst, 0, 1);
        }
        v29 = v94;
        v30 = v97;
        v44 = v26[6];
        v45 = &v36[v44];
        v46 = &v25[v44];
        *(_DWORD *)v45 = *(_DWORD *)v46;
        v45[4] = v46[4];
        v47 = v26[7];
        v48 = &v36[v47];
        v49 = &v25[v47];
        v48[4] = v49[4];
        *(_DWORD *)v48 = *(_DWORD *)v49;
        v50 = v26[8];
        v51 = &v36[v50];
        v52 = &v25[v50];
        *(_DWORD *)v51 = *(_DWORD *)v52;
        v51[4] = v52[4];
        v36[v26[9]] = v25[v26[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v93 + 56))(v36, 0, 1, v26);
        v22 = v99;
      }
      v53 = *(int *)(v30 + 24);
      v54 = &v98[v53];
      v55 = &v29[v53];
      v56 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_1000039AC(&qword_100375578);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v96(v54, v55, v6);
        v59 = *(int *)(v56 + 20);
        v60 = &v54[v59];
        v61 = &v55[v59];
        *(_DWORD *)v60 = *(_DWORD *)v61;
        v60[4] = v61[4];
        v62 = *(int *)(v56 + 24);
        v63 = &v54[v62];
        v64 = &v55[v62];
        *(_DWORD *)v63 = *(_DWORD *)v64;
        v63[4] = v64[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v98, 0, 1, v97);
      v21 = v96;
    }
    v65 = v11[6];
    v66 = &v22[v65];
    v67 = &v10[v65];
    v68 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = sub_1000039AC(&qword_100375590);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v21(v66, v67, v6);
      v71 = *(int *)(v68 + 20);
      v72 = &v66[v71];
      v73 = &v67[v71];
      *(_DWORD *)v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      v74 = *(int *)(v68 + 24);
      v75 = &v66[v74];
      v76 = &v67[v74];
      *(_DWORD *)v75 = *(_DWORD *)v76;
      v75[4] = v76[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v77 = v11[7];
    v78 = &v22[v77];
    v79 = &v10[v77];
    v80 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      v82 = sub_1000039AC(&qword_100375598);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v21(v78, v79, v6);
      v83 = *(int *)(v80 + 20);
      v84 = &v78[v83];
      v85 = &v79[v83];
      *(_DWORD *)v84 = *(_DWORD *)v85;
      v84[4] = v85[4];
      v86 = *(int *)(v80 + 24);
      v87 = &v78[v86];
      v88 = &v79[v86];
      *(_DWORD *)v87 = *(_DWORD *)v88;
      v87[4] = v88[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v100 + 56))(v22, 0, 1, v11);
  }
  return a1;
}

_BYTE *sub_1001E6D78(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned int (**v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  unsigned int (**v47)(const void *, uint64_t, int *);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int *v59;
  uint64_t (*v60)(uint64_t, uint64_t, int *);
  int v61;
  int v62;
  size_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char v133;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int v154;
  uint64_t v155;
  char *v156;
  char *v157;
  int v158;
  uint64_t v159;
  char *v160;
  char *v161;
  int v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t (*v181)(char *, uint64_t, uint64_t);
  int v182;
  size_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  int v204;
  char *v205;
  char *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(char *, uint64_t, uint64_t);
  int v213;
  int v214;
  uint64_t v215;
  char *v216;
  char *v217;
  char v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t (*v229)(char *, uint64_t, uint64_t);
  int v230;
  int v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  char v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(uint64_t, uint64_t, uint64_t);
  int v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char v257;
  uint64_t v258;
  char *v259;
  char *v260;
  char v261;
  uint64_t v262;
  char *v263;
  char *v264;
  char v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char v273;
  uint64_t v274;
  char *v275;
  char *v276;
  char v277;
  uint64_t v278;
  char *v279;
  char *v280;
  char v281;
  uint64_t v282;
  char *v283;
  char *v284;
  char v285;
  uint64_t v286;
  char *v287;
  char *v288;
  char v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char v293;
  uint64_t v294;
  char *v295;
  char *v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  int v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  int v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  int v309;
  uint64_t v310;
  uint64_t v311;
  void (*v312)(uint64_t, char *, uint64_t);
  uint64_t v313;
  int *v314;
  int *v315;
  char *v316;
  char *v317;
  char *__src;
  _QWORD *__srca;
  void (**__srcb)(void);
  uint64_t v321;
  int *v322;
  char *v323;
  void (*v324)(char *, char *, uint64_t);
  char *v325;
  uint64_t v326;
  char *__dst;
  char *__dsta;
  _QWORD *v329;
  unsigned int (**v330)(const void *, uint64_t, uint64_t);
  char *v331;
  void (*v332)(uint64_t, char *, uint64_t);
  char *v333;
  char *v334;
  void (*v335)(char *, char *, uint64_t);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  _BYTE *v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 24);
  v8((uint64_t)a1, a2, v6);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v9 = *(int *)(a3 + 24);
  v10 = (uint64_t)&a1[v9];
  v11 = &a2[v9];
  v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100004030(v10, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
      goto LABEL_7;
    }
    v332 = v8;
    v8(v10, v11, v6);
    v27 = v12[5];
    v28 = (char *)(v10 + v27);
    v334 = v11;
    v29 = &v11[v27];
    v30 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    v329 = *(_QWORD **)(v30 - 8);
    v31 = (uint64_t (*)(char *, uint64_t, uint64_t))v329[6];
    v340 = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v338 = v30;
    v32 = v31(v29, 1, v30);
    v342 = v6;
    v336 = v7;
    if ((_DWORD)v28)
    {
      if (v32)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
        v34 = v340;
LABEL_16:
        memcpy(v34, v29, v33);
        goto LABEL_63;
      }
      v42 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v42(v340, v29, v6);
      v43 = *(int *)(v30 + 20);
      v44 = &v340[v43];
      v45 = &v29[v43];
      v46 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      v47 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v46 - 1);
      v324 = v42;
      if (v47[6](v45, 1, v46))
      {
        v48 = sub_1000039AC(&qword_100375580);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v11 = v334;
        v49 = v29;
      }
      else
      {
        __srcb = (void (**)(void))v47;
        v42(v44, v45, v6);
        v65 = v46[5];
        v323 = v44;
        v66 = &v44[v65];
        v67 = &v45[v65];
        v68 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v311 = *(_QWORD *)(v68 - 8);
        v315 = (int *)v68;
        v69 = (*(uint64_t (**)(char *, uint64_t))(v311 + 48))(v67, 1);
        v70 = v42;
        v11 = v334;
        if (v69)
        {
          v71 = sub_1000039AC(&qword_100375578);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v70(v66, v67, v6);
          v143 = v315[5];
          v144 = &v66[v143];
          v145 = &v67[v143];
          v146 = v145[4];
          *(_DWORD *)v144 = *(_DWORD *)v145;
          v144[4] = v146;
          v147 = v315[6];
          v148 = &v66[v147];
          v149 = &v67[v147];
          v150 = v149[4];
          *(_DWORD *)v148 = *(_DWORD *)v149;
          v148[4] = v150;
          (*(void (**)(char *, _QWORD, uint64_t))(v311 + 56))(v66, 0, 1);
        }
        v49 = v29;
        v151 = v46[6];
        v152 = &v323[v151];
        v153 = &v45[v151];
        v154 = *(_DWORD *)v153;
        v152[4] = v153[4];
        *(_DWORD *)v152 = v154;
        v155 = v46[7];
        v156 = &v323[v155];
        v157 = &v45[v155];
        v158 = *(_DWORD *)v157;
        v156[4] = v157[4];
        *(_DWORD *)v156 = v158;
        v159 = v46[8];
        v160 = &v323[v159];
        v161 = &v45[v159];
        v162 = *(_DWORD *)v161;
        v160[4] = v161[4];
        *(_DWORD *)v160 = v162;
        v323[v46[9]] = v45[v46[9]];
        __srcb[7]();
      }
      v163 = *(int *)(v338 + 24);
      v164 = &v340[v163];
      v165 = &v49[v163];
      v166 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v167 = *(_QWORD *)(v166 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
      {
        v168 = sub_1000039AC(&qword_100375578);
        memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        v324(v164, v165, v6);
        v169 = *(int *)(v166 + 20);
        v170 = &v164[v169];
        v171 = &v165[v169];
        v172 = v171[4];
        *(_DWORD *)v170 = *(_DWORD *)v171;
        v170[4] = v172;
        v173 = *(int *)(v166 + 24);
        v174 = &v164[v173];
        v175 = &v165[v173];
        v176 = v175[4];
        *(_DWORD *)v174 = *(_DWORD *)v175;
        v174[4] = v176;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
      }
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v329[7])(v340, 0, 1, v338);
LABEL_63:
      v224 = v12[6];
      v225 = (char *)(v10 + v224);
      v226 = &v11[v224];
      v227 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
      v228 = *(_QWORD *)(v227 - 8);
      v229 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v228 + 48);
      v230 = v229(v225, 1, v227);
      v231 = v229(v226, 1, v227);
      if (v230)
      {
        v232 = v342;
        if (!v231)
        {
          (*(void (**)(char *, char *, uint64_t))(v336 + 16))(v225, v226, v342);
          v233 = *(int *)(v227 + 20);
          v234 = &v225[v233];
          v235 = &v226[v233];
          v236 = v235[4];
          *(_DWORD *)v234 = *(_DWORD *)v235;
          v234[4] = v236;
          v237 = *(int *)(v227 + 24);
          v238 = &v225[v237];
          v239 = &v226[v237];
          v240 = v239[4];
          *(_DWORD *)v238 = *(_DWORD *)v239;
          v238[4] = v240;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
LABEL_69:
          v242 = v12[7];
          v243 = v10 + v242;
          v244 = &v11[v242];
          v245 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
          v246 = *(_QWORD *)(v245 - 8);
          v247 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v246 + 48);
          v248 = v247(v243, 1, v245);
          v249 = v247((uint64_t)v244, 1, v245);
          if (v248)
          {
            if (!v249)
            {
              (*(void (**)(uint64_t, char *, uint64_t))(v336 + 16))(v243, v244, v232);
              v250 = *(int *)(v245 + 20);
              v251 = v243 + v250;
              v252 = &v244[v250];
              v253 = v252[4];
              *(_DWORD *)v251 = *(_DWORD *)v252;
              *(_BYTE *)(v251 + 4) = v253;
              v254 = *(int *)(v245 + 24);
              v255 = v243 + v254;
              v256 = &v244[v254];
              v257 = v256[4];
              *(_DWORD *)v255 = *(_DWORD *)v256;
              *(_BYTE *)(v255 + 4) = v257;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
              return a1;
            }
          }
          else
          {
            if (!v249)
            {
              v332(v243, v244, v232);
              v266 = *(int *)(v245 + 20);
              v267 = v243 + v266;
              v268 = &v244[v266];
              v269 = v268[4];
              *(_DWORD *)v267 = *(_DWORD *)v268;
              *(_BYTE *)(v267 + 4) = v269;
              v270 = *(int *)(v245 + 24);
              v271 = v243 + v270;
              v272 = &v244[v270];
              v273 = v272[4];
              *(_DWORD *)v271 = *(_DWORD *)v272;
              *(_BYTE *)(v271 + 4) = v273;
              return a1;
            }
            sub_100004030(v243, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
          }
          v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375598) - 8) + 64);
          v25 = (void *)v243;
          v26 = v244;
          goto LABEL_8;
        }
      }
      else
      {
        v232 = v342;
        if (!v231)
        {
          v332((uint64_t)v225, v226, v342);
          v258 = *(int *)(v227 + 20);
          v259 = &v225[v258];
          v260 = &v226[v258];
          v261 = v260[4];
          *(_DWORD *)v259 = *(_DWORD *)v260;
          v259[4] = v261;
          v262 = *(int *)(v227 + 24);
          v263 = &v225[v262];
          v264 = &v226[v262];
          v265 = v264[4];
          *(_DWORD *)v263 = *(_DWORD *)v264;
          v263[4] = v265;
          goto LABEL_69;
        }
        sub_100004030((uint64_t)v225, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      }
      v241 = sub_1000039AC(&qword_100375590);
      memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
      goto LABEL_69;
    }
    if (v32)
    {
      sub_100004030((uint64_t)v340, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
      v34 = v340;
      goto LABEL_16;
    }
    v332((uint64_t)v340, v29, v6);
    v56 = *(int *)(v30 + 20);
    v57 = (uint64_t)&v340[v56];
    __dsta = v29;
    v58 = &v29[v56];
    v59 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    __srca = (_QWORD *)*((_QWORD *)v59 - 1);
    v60 = (uint64_t (*)(uint64_t, uint64_t, int *))__srca[6];
    v326 = v57;
    v61 = v60(v57, 1, v59);
    v331 = v58;
    v322 = v59;
    v62 = v60((uint64_t)v58, 1, v59);
    if (v61)
    {
      if (!v62)
      {
        v312 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
        v312(v57, v58, v6);
        v135 = v59[5];
        v316 = (char *)(v57 + v135);
        v136 = &v58[v135];
        v137 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v138 = *(_QWORD *)(v137 - 8);
        v139 = v136;
        v140 = v136;
        v141 = v137;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v140, 1, v137))
        {
          v142 = sub_1000039AC(&qword_100375578);
          memcpy(v316, v139, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          v312((uint64_t)v316, v139, v6);
          v185 = *(int *)(v141 + 20);
          v186 = &v316[v185];
          v187 = &v139[v185];
          v188 = v187[4];
          *(_DWORD *)v186 = *(_DWORD *)v187;
          v186[4] = v188;
          v189 = *(int *)(v141 + 24);
          v190 = &v316[v189];
          v191 = &v139[v189];
          v192 = v191[4];
          *(_DWORD *)v190 = *(_DWORD *)v191;
          v190[4] = v192;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v316, 0, 1, v141);
        }
        v193 = v59[6];
        v194 = v326 + v193;
        v195 = &v58[v193];
        v196 = *(_DWORD *)v195;
        *(_BYTE *)(v194 + 4) = v195[4];
        *(_DWORD *)v194 = v196;
        v197 = v59[7];
        v198 = v326 + v197;
        v199 = &v58[v197];
        v200 = *(_DWORD *)v199;
        *(_BYTE *)(v198 + 4) = v199[4];
        *(_DWORD *)v198 = v200;
        v201 = v59[8];
        v202 = v326 + v201;
        v203 = &v58[v201];
        v204 = *(_DWORD *)v203;
        *(_BYTE *)(v202 + 4) = v203[4];
        *(_DWORD *)v202 = v204;
        *(_BYTE *)(v326 + v59[9]) = v58[v59[9]];
        ((void (*)(uint64_t, _QWORD, uint64_t))__srca[7])(v326, 0, 1);
        goto LABEL_56;
      }
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375580) - 8) + 64);
      v64 = (void *)v57;
LABEL_42:
      memcpy(v64, v58, v63);
LABEL_56:
      v205 = v340;
      v206 = __dsta;
      goto LABEL_57;
    }
    if (v62)
    {
      sub_100004030(v57, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375580) - 8) + 64);
      v64 = (void *)v57;
      goto LABEL_42;
    }
    v332(v57, v58, v6);
    v177 = v59[5];
    v178 = (char *)(v57 + v177);
    v179 = &v58[v177];
    v180 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v313 = *(_QWORD *)(v180 - 8);
    v317 = v178;
    v181 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v313 + 48);
    LODWORD(v178) = v181(v178, 1, v180);
    v182 = v181(v179, 1, v180);
    if ((_DWORD)v178)
    {
      if (!v182)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v317, v179, v6);
        v282 = *(int *)(v180 + 20);
        v283 = &v317[v282];
        v284 = &v179[v282];
        v285 = v284[4];
        *(_DWORD *)v283 = *(_DWORD *)v284;
        v283[4] = v285;
        v286 = *(int *)(v180 + 24);
        v287 = &v317[v286];
        v288 = &v179[v286];
        v289 = v288[4];
        *(_DWORD *)v287 = *(_DWORD *)v288;
        v287[4] = v289;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v313 + 56))(v317, 0, 1, v180);
        goto LABEL_83;
      }
      v183 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v184 = v317;
    }
    else
    {
      if (!v182)
      {
        v332((uint64_t)v317, v179, v6);
        v290 = *(int *)(v180 + 20);
        v291 = &v317[v290];
        v292 = &v179[v290];
        v293 = v292[4];
        *(_DWORD *)v291 = *(_DWORD *)v292;
        v291[4] = v293;
        v294 = *(int *)(v180 + 24);
        v295 = &v317[v294];
        v296 = &v179[v294];
        v297 = v296[4];
        *(_DWORD *)v295 = *(_DWORD *)v296;
        v295[4] = v297;
        goto LABEL_83;
      }
      sub_100004030((uint64_t)v317, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v183 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v184 = v317;
    }
    memcpy(v184, v179, v183);
LABEL_83:
    v205 = v340;
    v206 = __dsta;
    v298 = v322[6];
    v299 = v57 + v298;
    v300 = &v331[v298];
    v301 = *(_DWORD *)v300;
    *(_BYTE *)(v299 + 4) = v300[4];
    *(_DWORD *)v299 = v301;
    v302 = v322[7];
    v303 = v57 + v302;
    v304 = &v331[v302];
    v305 = *(_DWORD *)v304;
    *(_BYTE *)(v303 + 4) = v304[4];
    *(_DWORD *)v303 = v305;
    v306 = v322[8];
    v307 = v57 + v306;
    v308 = &v331[v306];
    v309 = *(_DWORD *)v308;
    *(_BYTE *)(v307 + 4) = v308[4];
    *(_DWORD *)v307 = v309;
    *(_BYTE *)(v57 + v322[9]) = v331[v322[9]];
LABEL_57:
    v207 = *(int *)(v338 + 24);
    v208 = &v205[v207];
    v209 = &v206[v207];
    v210 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v211 = *(_QWORD *)(v210 - 8);
    v212 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48);
    v213 = v212(v208, 1, v210);
    v341 = v209;
    v214 = v212(v209, 1, v210);
    if (v213)
    {
      v11 = v334;
      if (!v214)
      {
        (*(void (**)(char *, char *, uint64_t))(v336 + 16))(v208, v341, v6);
        v215 = *(int *)(v210 + 20);
        v216 = &v208[v215];
        v217 = &v341[v215];
        v218 = v217[4];
        *(_DWORD *)v216 = *(_DWORD *)v217;
        v216[4] = v218;
        v219 = *(int *)(v210 + 24);
        v220 = &v208[v219];
        v221 = &v341[v219];
        v11 = v334;
        v222 = v221[4];
        *(_DWORD *)v220 = *(_DWORD *)v221;
        v220[4] = v222;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v208, 0, 1, v210);
        goto LABEL_63;
      }
    }
    else
    {
      v11 = v334;
      if (!v214)
      {
        v332((uint64_t)v208, v341, v6);
        v274 = *(int *)(v210 + 20);
        v275 = &v208[v274];
        v276 = &v341[v274];
        v277 = v276[4];
        *(_DWORD *)v275 = *(_DWORD *)v276;
        v275[4] = v277;
        v278 = *(int *)(v210 + 24);
        v279 = &v208[v278];
        v280 = &v341[v278];
        v281 = v280[4];
        *(_DWORD *)v279 = *(_DWORD *)v280;
        v279[4] = v281;
        goto LABEL_63;
      }
      sub_100004030((uint64_t)v208, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    }
    v223 = sub_1000039AC(&qword_100375578);
    memcpy(v208, v341, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
    goto LABEL_63;
  }
  if (v16)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755A0) - 8) + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  v339 = a1;
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v17(v10, v11, v6);
  v18 = v12[5];
  v337 = v10;
  v19 = (char *)(v10 + v18);
  v20 = &v11[v18];
  v21 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v22 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v21 - 8);
  v335 = (void (*)(char *, char *, uint64_t))v17;
  if (v22[6](v20, 1, v21))
  {
    v23 = sub_1000039AC(&qword_100375588);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    a1 = v339;
  }
  else
  {
    v330 = v22;
    v17((uint64_t)v19, v20, v6);
    v35 = *(int *)(v21 + 20);
    v333 = v19;
    v36 = &v19[v35];
    v37 = (void (*)(char *, char *, uint64_t))v17;
    v343 = v6;
    v38 = &v20[v35];
    v39 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_1000039AC(&qword_100375580);
      memcpy(v36, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v10 = v337;
      a1 = v339;
    }
    else
    {
      v321 = v40;
      v37(v36, v38, v343);
      v50 = *(int *)(v39 + 20);
      v325 = v36;
      __dst = &v36[v50];
      v51 = &v38[v50];
      v52 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v310 = *(_QWORD *)(v52 - 8);
      v314 = (int *)v52;
      __src = v51;
      v53 = (*(uint64_t (**)(char *, uint64_t))(v310 + 48))(v51, 1);
      a1 = v339;
      v54 = (int *)v39;
      if (v53)
      {
        v55 = sub_1000039AC(&qword_100375578);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v37(__dst, __src, v343);
        v72 = v314[5];
        v73 = &__dst[v72];
        v74 = &__src[v72];
        v75 = v74[4];
        *(_DWORD *)v73 = *(_DWORD *)v74;
        v73[4] = v75;
        v76 = v314[6];
        v77 = &__dst[v76];
        v78 = &__src[v76];
        v79 = v78[4];
        *(_DWORD *)v77 = *(_DWORD *)v78;
        v77[4] = v79;
        (*(void (**)(void))(v310 + 56))();
      }
      v10 = v337;
      v80 = v54[6];
      v81 = &v325[v80];
      v82 = &v38[v80];
      v83 = *(_DWORD *)v82;
      v81[4] = v82[4];
      *(_DWORD *)v81 = v83;
      v84 = v54[7];
      v85 = &v325[v84];
      v86 = &v38[v84];
      v87 = *(_DWORD *)v86;
      v85[4] = v86[4];
      *(_DWORD *)v85 = v87;
      v88 = v54[8];
      v89 = &v325[v88];
      v90 = &v38[v88];
      v91 = *(_DWORD *)v90;
      v89[4] = v90[4];
      *(_DWORD *)v89 = v91;
      v325[v54[9]] = v38[v54[9]];
      (*(void (**)(void))(v321 + 56))();
    }
    v92 = *(int *)(v21 + 24);
    v93 = &v333[v92];
    v94 = &v20[v92];
    v95 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v96 = *(_QWORD *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      v97 = sub_1000039AC(&qword_100375578);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v335(v93, v94, v343);
      v98 = *(int *)(v95 + 20);
      v99 = &v93[v98];
      v100 = &v94[v98];
      v101 = v100[4];
      *(_DWORD *)v99 = *(_DWORD *)v100;
      v99[4] = v101;
      v102 = *(int *)(v95 + 24);
      v103 = &v93[v102];
      v104 = &v94[v102];
      v105 = v104[4];
      *(_DWORD *)v103 = *(_DWORD *)v104;
      v103[4] = v105;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v330[7])(v333, 0, 1, v21);
    v6 = v343;
  }
  v106 = v12[6];
  v107 = (char *)(v10 + v106);
  v108 = &v11[v106];
  v109 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v110 = *(_QWORD *)(v109 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    v111 = sub_1000039AC(&qword_100375590);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    v335(v107, v108, v6);
    v112 = *(int *)(v109 + 20);
    v113 = &v107[v112];
    v114 = &v108[v112];
    v115 = v114[4];
    *(_DWORD *)v113 = *(_DWORD *)v114;
    v113[4] = v115;
    v116 = *(int *)(v109 + 24);
    v117 = &v107[v116];
    v118 = &v108[v116];
    v119 = v118[4];
    *(_DWORD *)v117 = *(_DWORD *)v118;
    v117[4] = v119;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
  }
  v120 = v12[7];
  v121 = (char *)(v10 + v120);
  v122 = &v11[v120];
  v123 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v124 = *(_QWORD *)(v123 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
  {
    v125 = sub_1000039AC(&qword_100375598);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    v335(v121, v122, v6);
    v126 = *(int *)(v123 + 20);
    v127 = &v121[v126];
    v128 = &v122[v126];
    v129 = v128[4];
    *(_DWORD *)v127 = *(_DWORD *)v128;
    v127[4] = v129;
    v130 = *(int *)(v123 + 24);
    v131 = &v121[v130];
    v132 = &v122[v130];
    v133 = v132[4];
    *(_DWORD *)v131 = *(_DWORD *)v132;
    v131[4] = v133;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1001E7EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v90;
  uint64_t v91;
  char *__dst;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_1003755A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v99 = v9;
    v15 = &v9[v14];
    v16 = v7;
    v17 = &v10[v14];
    v18 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    v19 = *(_QWORD *)(v18 - 8);
    v100 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1000039AC(&qword_100375588);
      memcpy(v15, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = (void (*)(char *, char *, uint64_t))v16;
      v22 = v99;
    }
    else
    {
      v95 = v19;
      v16((uint64_t)v15, (uint64_t)v17, v6);
      v23 = *(int *)(v18 + 20);
      v98 = v15;
      v24 = &v15[v23];
      v94 = v17;
      v25 = &v17[v23];
      v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      v27 = *((_QWORD *)v26 - 1);
      v96 = (void (*)(char *, char *, uint64_t))v16;
      v97 = v18;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_1000039AC(&qword_100375580);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        v29 = v94;
        v22 = v99;
        v30 = v18;
      }
      else
      {
        v93 = v27;
        v16((uint64_t)v24, (uint64_t)v25, v6);
        v31 = v26[5];
        __dst = &v24[v31];
        v32 = &v25[v31];
        v33 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v90 = *(_QWORD *)(v33 - 8);
        v91 = v33;
        v34 = v32;
        v35 = (*(uint64_t (**)(char *, uint64_t))(v90 + 48))(v32, 1);
        v36 = v24;
        if (v35)
        {
          v37 = sub_1000039AC(&qword_100375578);
          memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v16((uint64_t)__dst, (uint64_t)v34, v6);
          v38 = *(int *)(v91 + 20);
          v39 = &__dst[v38];
          v40 = &v34[v38];
          *(_DWORD *)v39 = *(_DWORD *)v40;
          v39[4] = v40[4];
          v41 = *(int *)(v91 + 24);
          v42 = &__dst[v41];
          v43 = &v34[v41];
          *(_DWORD *)v42 = *(_DWORD *)v43;
          v42[4] = v43[4];
          (*(void (**)(char *, _QWORD, uint64_t))(v90 + 56))(__dst, 0, 1);
        }
        v29 = v94;
        v30 = v97;
        v44 = v26[6];
        v45 = &v36[v44];
        v46 = &v25[v44];
        *(_DWORD *)v45 = *(_DWORD *)v46;
        v45[4] = v46[4];
        v47 = v26[7];
        v48 = &v36[v47];
        v49 = &v25[v47];
        v48[4] = v49[4];
        *(_DWORD *)v48 = *(_DWORD *)v49;
        v50 = v26[8];
        v51 = &v36[v50];
        v52 = &v25[v50];
        *(_DWORD *)v51 = *(_DWORD *)v52;
        v51[4] = v52[4];
        v36[v26[9]] = v25[v26[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v93 + 56))(v36, 0, 1, v26);
        v22 = v99;
      }
      v53 = *(int *)(v30 + 24);
      v54 = &v98[v53];
      v55 = &v29[v53];
      v56 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_1000039AC(&qword_100375578);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v96(v54, v55, v6);
        v59 = *(int *)(v56 + 20);
        v60 = &v54[v59];
        v61 = &v55[v59];
        *(_DWORD *)v60 = *(_DWORD *)v61;
        v60[4] = v61[4];
        v62 = *(int *)(v56 + 24);
        v63 = &v54[v62];
        v64 = &v55[v62];
        *(_DWORD *)v63 = *(_DWORD *)v64;
        v63[4] = v64[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v98, 0, 1, v97);
      v21 = v96;
    }
    v65 = v11[6];
    v66 = &v22[v65];
    v67 = &v10[v65];
    v68 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = sub_1000039AC(&qword_100375590);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v21(v66, v67, v6);
      v71 = *(int *)(v68 + 20);
      v72 = &v66[v71];
      v73 = &v67[v71];
      *(_DWORD *)v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      v74 = *(int *)(v68 + 24);
      v75 = &v66[v74];
      v76 = &v67[v74];
      *(_DWORD *)v75 = *(_DWORD *)v76;
      v75[4] = v76[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v77 = v11[7];
    v78 = &v22[v77];
    v79 = &v10[v77];
    v80 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      v82 = sub_1000039AC(&qword_100375598);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v21(v78, v79, v6);
      v83 = *(int *)(v80 + 20);
      v84 = &v78[v83];
      v85 = &v79[v83];
      *(_DWORD *)v84 = *(_DWORD *)v85;
      v84[4] = v85[4];
      v86 = *(int *)(v80 + 24);
      v87 = &v78[v86];
      v88 = &v79[v86];
      *(_DWORD *)v87 = *(_DWORD *)v88;
      v87[4] = v88[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v100 + 56))(v22, 0, 1, v11);
  }
  return a1;
}

_BYTE *sub_1001E849C(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned int (**v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  unsigned int (**v47)(const void *, uint64_t, int *);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int *v59;
  uint64_t (*v60)(uint64_t, uint64_t, int *);
  int v61;
  int v62;
  size_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t (*v163)(char *, uint64_t, uint64_t);
  int v164;
  size_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(char *, uint64_t, uint64_t);
  int v190;
  int v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(char *, uint64_t, uint64_t);
  int v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t (*v220)(uint64_t, uint64_t, uint64_t);
  int v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(uint64_t, char *, uint64_t);
  uint64_t v271;
  int *v272;
  int *v273;
  char *v274;
  char *v275;
  char *__src;
  _QWORD *__srca;
  void (**__srcb)(void);
  uint64_t v279;
  int *v280;
  char *v281;
  void (*v282)(char *, char *, uint64_t);
  char *v283;
  uint64_t v284;
  char *__dst;
  char *__dsta;
  _QWORD *v287;
  unsigned int (**v288)(const void *, uint64_t, uint64_t);
  char *v289;
  void (*v290)(uint64_t, char *, uint64_t);
  char *v291;
  char *v292;
  void (*v293)(char *, char *, uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _BYTE *v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 40);
  v8((uint64_t)a1, a2, v6);
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = (uint64_t)&a1[v9];
  v11 = &a2[v9];
  v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100004030(v10, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
      goto LABEL_7;
    }
    v290 = v8;
    v8(v10, v11, v6);
    v27 = v12[5];
    v28 = (char *)(v10 + v27);
    v292 = v11;
    v29 = &v11[v27];
    v30 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    v287 = *(_QWORD **)(v30 - 8);
    v31 = (uint64_t (*)(char *, uint64_t, uint64_t))v287[6];
    v298 = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v296 = v30;
    v32 = v31(v29, 1, v30);
    v300 = v6;
    v294 = v7;
    if ((_DWORD)v28)
    {
      if (v32)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
        v34 = v298;
LABEL_16:
        memcpy(v34, v29, v33);
        goto LABEL_63;
      }
      v42 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v42(v298, v29, v6);
      v43 = *(int *)(v30 + 20);
      v44 = &v298[v43];
      v45 = &v29[v43];
      v46 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
      v47 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v46 - 1);
      v282 = v42;
      if (v47[6](v45, 1, v46))
      {
        v48 = sub_1000039AC(&qword_100375580);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v11 = v292;
        v49 = v29;
      }
      else
      {
        __srcb = (void (**)(void))v47;
        v42(v44, v45, v6);
        v65 = v46[5];
        v281 = v44;
        v66 = &v44[v65];
        v67 = &v45[v65];
        v68 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v269 = *(_QWORD *)(v68 - 8);
        v273 = (int *)v68;
        v69 = (*(uint64_t (**)(char *, uint64_t))(v269 + 48))(v67, 1);
        v70 = v42;
        v11 = v292;
        if (v69)
        {
          v71 = sub_1000039AC(&qword_100375578);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v70(v66, v67, v6);
          v132 = v273[5];
          v133 = &v66[v132];
          v134 = &v67[v132];
          *(_DWORD *)v133 = *(_DWORD *)v134;
          v133[4] = v134[4];
          v135 = v273[6];
          v136 = &v66[v135];
          v137 = &v67[v135];
          *(_DWORD *)v136 = *(_DWORD *)v137;
          v136[4] = v137[4];
          (*(void (**)(char *, _QWORD, uint64_t))(v269 + 56))(v66, 0, 1);
        }
        v49 = v29;
        v138 = v46[6];
        v139 = &v281[v138];
        v140 = &v45[v138];
        *(_DWORD *)v139 = *(_DWORD *)v140;
        v139[4] = v140[4];
        v141 = v46[7];
        v142 = &v281[v141];
        v143 = &v45[v141];
        v142[4] = v143[4];
        *(_DWORD *)v142 = *(_DWORD *)v143;
        v144 = v46[8];
        v145 = &v281[v144];
        v146 = &v45[v144];
        *(_DWORD *)v145 = *(_DWORD *)v146;
        v145[4] = v146[4];
        v281[v46[9]] = v45[v46[9]];
        __srcb[7]();
      }
      v147 = *(int *)(v296 + 24);
      v148 = &v298[v147];
      v149 = &v49[v147];
      v150 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v151 = *(_QWORD *)(v150 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v149, 1, v150))
      {
        v152 = sub_1000039AC(&qword_100375578);
        memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
      }
      else
      {
        v282(v148, v149, v6);
        v153 = *(int *)(v150 + 20);
        v154 = &v148[v153];
        v155 = &v149[v153];
        *(_DWORD *)v154 = *(_DWORD *)v155;
        v154[4] = v155[4];
        v156 = *(int *)(v150 + 24);
        v157 = &v148[v156];
        v158 = &v149[v156];
        *(_DWORD *)v157 = *(_DWORD *)v158;
        v157[4] = v158[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
      }
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v287[7])(v298, 0, 1, v296);
LABEL_63:
      v199 = v12[6];
      v200 = (char *)(v10 + v199);
      v201 = &v11[v199];
      v202 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
      v203 = *(_QWORD *)(v202 - 8);
      v204 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v203 + 48);
      v205 = v204(v200, 1, v202);
      v206 = v204(v201, 1, v202);
      if (v205)
      {
        v207 = v300;
        if (!v206)
        {
          (*(void (**)(char *, char *, uint64_t))(v294 + 32))(v200, v201, v300);
          v208 = *(int *)(v202 + 20);
          v209 = &v200[v208];
          v210 = &v201[v208];
          *(_DWORD *)v209 = *(_DWORD *)v210;
          v209[4] = v210[4];
          v211 = *(int *)(v202 + 24);
          v212 = &v200[v211];
          v213 = &v201[v211];
          *(_DWORD *)v212 = *(_DWORD *)v213;
          v212[4] = v213[4];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
LABEL_69:
          v215 = v12[7];
          v216 = v10 + v215;
          v217 = &v11[v215];
          v218 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
          v219 = *(_QWORD *)(v218 - 8);
          v220 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v219 + 48);
          v221 = v220(v216, 1, v218);
          v222 = v220((uint64_t)v217, 1, v218);
          if (v221)
          {
            if (!v222)
            {
              (*(void (**)(uint64_t, char *, uint64_t))(v294 + 32))(v216, v217, v207);
              v223 = *(int *)(v218 + 20);
              v224 = v216 + v223;
              v225 = &v217[v223];
              *(_DWORD *)v224 = *(_DWORD *)v225;
              *(_BYTE *)(v224 + 4) = v225[4];
              v226 = *(int *)(v218 + 24);
              v227 = v216 + v226;
              v228 = &v217[v226];
              *(_DWORD *)v227 = *(_DWORD *)v228;
              *(_BYTE *)(v227 + 4) = v228[4];
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v219 + 56))(v216, 0, 1, v218);
              return a1;
            }
          }
          else
          {
            if (!v222)
            {
              v290(v216, v217, v207);
              v235 = *(int *)(v218 + 20);
              v236 = v216 + v235;
              v237 = &v217[v235];
              *(_DWORD *)v236 = *(_DWORD *)v237;
              *(_BYTE *)(v236 + 4) = v237[4];
              v238 = *(int *)(v218 + 24);
              v239 = v216 + v238;
              v240 = &v217[v238];
              *(_DWORD *)v239 = *(_DWORD *)v240;
              *(_BYTE *)(v239 + 4) = v240[4];
              return a1;
            }
            sub_100004030(v216, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
          }
          v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375598) - 8) + 64);
          v25 = (void *)v216;
          v26 = v217;
          goto LABEL_8;
        }
      }
      else
      {
        v207 = v300;
        if (!v206)
        {
          v290((uint64_t)v200, v201, v300);
          v229 = *(int *)(v202 + 20);
          v230 = &v200[v229];
          v231 = &v201[v229];
          *(_DWORD *)v230 = *(_DWORD *)v231;
          v230[4] = v231[4];
          v232 = *(int *)(v202 + 24);
          v233 = &v200[v232];
          v234 = &v201[v232];
          *(_DWORD *)v233 = *(_DWORD *)v234;
          v233[4] = v234[4];
          goto LABEL_69;
        }
        sub_100004030((uint64_t)v200, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
      }
      v214 = sub_1000039AC(&qword_100375590);
      memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
      goto LABEL_69;
    }
    if (v32)
    {
      sub_100004030((uint64_t)v298, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375588) - 8) + 64);
      v34 = v298;
      goto LABEL_16;
    }
    v290((uint64_t)v298, v29, v6);
    v56 = *(int *)(v30 + 20);
    v57 = (uint64_t)&v298[v56];
    __dsta = v29;
    v58 = &v29[v56];
    v59 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    __srca = (_QWORD *)*((_QWORD *)v59 - 1);
    v60 = (uint64_t (*)(uint64_t, uint64_t, int *))__srca[6];
    v284 = v57;
    v61 = v60(v57, 1, v59);
    v289 = v58;
    v280 = v59;
    v62 = v60((uint64_t)v58, 1, v59);
    if (v61)
    {
      if (!v62)
      {
        v270 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
        v270(v57, v58, v6);
        v124 = v59[5];
        v274 = (char *)(v57 + v124);
        v125 = &v58[v124];
        v126 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
        v127 = *(_QWORD *)(v126 - 8);
        v128 = v125;
        v129 = v125;
        v130 = v126;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v129, 1, v126))
        {
          v131 = sub_1000039AC(&qword_100375578);
          memcpy(v274, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          v270((uint64_t)v274, v128, v6);
          v167 = *(int *)(v130 + 20);
          v168 = &v274[v167];
          v169 = &v128[v167];
          *(_DWORD *)v168 = *(_DWORD *)v169;
          v168[4] = v169[4];
          v170 = *(int *)(v130 + 24);
          v171 = &v274[v170];
          v172 = &v128[v170];
          *(_DWORD *)v171 = *(_DWORD *)v172;
          v171[4] = v172[4];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v274, 0, 1, v130);
        }
        v173 = v59[6];
        v174 = v284 + v173;
        v175 = &v58[v173];
        *(_DWORD *)v174 = *(_DWORD *)v175;
        *(_BYTE *)(v174 + 4) = v175[4];
        v176 = v59[7];
        v177 = v284 + v176;
        v178 = &v58[v176];
        *(_BYTE *)(v177 + 4) = v178[4];
        *(_DWORD *)v177 = *(_DWORD *)v178;
        v179 = v59[8];
        v180 = v284 + v179;
        v181 = &v58[v179];
        *(_DWORD *)v180 = *(_DWORD *)v181;
        *(_BYTE *)(v180 + 4) = v181[4];
        *(_BYTE *)(v284 + v59[9]) = v58[v59[9]];
        ((void (*)(uint64_t, _QWORD, uint64_t))__srca[7])(v284, 0, 1);
        goto LABEL_56;
      }
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375580) - 8) + 64);
      v64 = (void *)v57;
LABEL_42:
      memcpy(v64, v58, v63);
LABEL_56:
      v182 = v298;
      v183 = __dsta;
      goto LABEL_57;
    }
    if (v62)
    {
      sub_100004030(v57, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375580) - 8) + 64);
      v64 = (void *)v57;
      goto LABEL_42;
    }
    v290(v57, v58, v6);
    v159 = v59[5];
    v160 = (char *)(v57 + v159);
    v161 = &v58[v159];
    v162 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v271 = *(_QWORD *)(v162 - 8);
    v275 = v160;
    v163 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v271 + 48);
    LODWORD(v160) = v163(v160, 1, v162);
    v164 = v163(v161, 1, v162);
    if ((_DWORD)v160)
    {
      if (!v164)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v275, v161, v6);
        v247 = *(int *)(v162 + 20);
        v248 = &v275[v247];
        v249 = &v161[v247];
        *(_DWORD *)v248 = *(_DWORD *)v249;
        v248[4] = v249[4];
        v250 = *(int *)(v162 + 24);
        v251 = &v275[v250];
        v252 = &v161[v250];
        *(_DWORD *)v251 = *(_DWORD *)v252;
        v251[4] = v252[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v275, 0, 1, v162);
        goto LABEL_83;
      }
      v165 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v166 = v275;
    }
    else
    {
      if (!v164)
      {
        v290((uint64_t)v275, v161, v6);
        v253 = *(int *)(v162 + 20);
        v254 = &v275[v253];
        v255 = &v161[v253];
        *(_DWORD *)v254 = *(_DWORD *)v255;
        v254[4] = v255[4];
        v256 = *(int *)(v162 + 24);
        v257 = &v275[v256];
        v258 = &v161[v256];
        *(_DWORD *)v257 = *(_DWORD *)v258;
        v257[4] = v258[4];
        goto LABEL_83;
      }
      sub_100004030((uint64_t)v275, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
      v165 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_100375578) - 8) + 64);
      v166 = v275;
    }
    memcpy(v166, v161, v165);
LABEL_83:
    v182 = v298;
    v183 = __dsta;
    v259 = v280[6];
    v260 = v57 + v259;
    v261 = &v289[v259];
    *(_DWORD *)v260 = *(_DWORD *)v261;
    *(_BYTE *)(v260 + 4) = v261[4];
    v262 = v280[7];
    v263 = v57 + v262;
    v264 = &v289[v262];
    *(_BYTE *)(v263 + 4) = v264[4];
    *(_DWORD *)v263 = *(_DWORD *)v264;
    v265 = v280[8];
    v266 = v57 + v265;
    v267 = &v289[v265];
    *(_DWORD *)v266 = *(_DWORD *)v267;
    *(_BYTE *)(v266 + 4) = v267[4];
    *(_BYTE *)(v57 + v280[9]) = v289[v280[9]];
LABEL_57:
    v184 = *(int *)(v296 + 24);
    v185 = &v182[v184];
    v186 = &v183[v184];
    v187 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v188 = *(_QWORD *)(v187 - 8);
    v189 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v188 + 48);
    v190 = v189(v185, 1, v187);
    v299 = v186;
    v191 = v189(v186, 1, v187);
    if (v190)
    {
      v11 = v292;
      if (!v191)
      {
        (*(void (**)(char *, char *, uint64_t))(v294 + 32))(v185, v299, v6);
        v192 = *(int *)(v187 + 20);
        v193 = &v185[v192];
        v194 = &v299[v192];
        *(_DWORD *)v193 = *(_DWORD *)v194;
        v193[4] = v194[4];
        v195 = *(int *)(v187 + 24);
        v196 = &v185[v195];
        v197 = &v299[v195];
        v11 = v292;
        *(_DWORD *)v196 = *(_DWORD *)v197;
        v196[4] = v197[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
        goto LABEL_63;
      }
    }
    else
    {
      v11 = v292;
      if (!v191)
      {
        v290((uint64_t)v185, v299, v6);
        v241 = *(int *)(v187 + 20);
        v242 = &v185[v241];
        v243 = &v299[v241];
        *(_DWORD *)v242 = *(_DWORD *)v243;
        v242[4] = v243[4];
        v244 = *(int *)(v187 + 24);
        v245 = &v185[v244];
        v246 = &v299[v244];
        *(_DWORD *)v245 = *(_DWORD *)v246;
        v245[4] = v246[4];
        goto LABEL_63;
      }
      sub_100004030((uint64_t)v185, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
    }
    v198 = sub_1000039AC(&qword_100375578);
    memcpy(v185, v299, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
    goto LABEL_63;
  }
  if (v16)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755A0) - 8) + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  v297 = a1;
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v17(v10, v11, v6);
  v18 = v12[5];
  v295 = v10;
  v19 = (char *)(v10 + v18);
  v20 = &v11[v18];
  v21 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v22 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v21 - 8);
  v293 = (void (*)(char *, char *, uint64_t))v17;
  if (v22[6](v20, 1, v21))
  {
    v23 = sub_1000039AC(&qword_100375588);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    a1 = v297;
  }
  else
  {
    v288 = v22;
    v17((uint64_t)v19, v20, v6);
    v35 = *(int *)(v21 + 20);
    v291 = v19;
    v36 = &v19[v35];
    v37 = (void (*)(char *, char *, uint64_t))v17;
    v301 = v6;
    v38 = &v20[v35];
    v39 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_1000039AC(&qword_100375580);
      memcpy(v36, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v10 = v295;
      a1 = v297;
    }
    else
    {
      v279 = v40;
      v37(v36, v38, v301);
      v50 = *(int *)(v39 + 20);
      v283 = v36;
      __dst = &v36[v50];
      v51 = &v38[v50];
      v52 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
      v268 = *(_QWORD *)(v52 - 8);
      v272 = (int *)v52;
      __src = v51;
      v53 = (*(uint64_t (**)(char *, uint64_t))(v268 + 48))(v51, 1);
      a1 = v297;
      v54 = (int *)v39;
      if (v53)
      {
        v55 = sub_1000039AC(&qword_100375578);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v37(__dst, __src, v301);
        v72 = v272[5];
        v73 = &__dst[v72];
        v74 = &__src[v72];
        *(_DWORD *)v73 = *(_DWORD *)v74;
        v73[4] = v74[4];
        v75 = v272[6];
        v76 = &__dst[v75];
        v77 = &__src[v75];
        *(_DWORD *)v76 = *(_DWORD *)v77;
        v76[4] = v77[4];
        (*(void (**)(void))(v268 + 56))();
      }
      v10 = v295;
      v78 = v54[6];
      v79 = &v283[v78];
      v80 = &v38[v78];
      *(_DWORD *)v79 = *(_DWORD *)v80;
      v79[4] = v80[4];
      v81 = v54[7];
      v82 = &v283[v81];
      v83 = &v38[v81];
      v82[4] = v83[4];
      *(_DWORD *)v82 = *(_DWORD *)v83;
      v84 = v54[8];
      v85 = &v283[v84];
      v86 = &v38[v84];
      *(_DWORD *)v85 = *(_DWORD *)v86;
      v85[4] = v86[4];
      v283[v54[9]] = v38[v54[9]];
      (*(void (**)(void))(v279 + 56))();
    }
    v87 = *(int *)(v21 + 24);
    v88 = &v291[v87];
    v89 = &v20[v87];
    v90 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    v91 = *(_QWORD *)(v90 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
    {
      v92 = sub_1000039AC(&qword_100375578);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      v293(v88, v89, v301);
      v93 = *(int *)(v90 + 20);
      v94 = &v88[v93];
      v95 = &v89[v93];
      *(_DWORD *)v94 = *(_DWORD *)v95;
      v94[4] = v95[4];
      v96 = *(int *)(v90 + 24);
      v97 = &v88[v96];
      v98 = &v89[v96];
      *(_DWORD *)v97 = *(_DWORD *)v98;
      v97[4] = v98[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
    }
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v288[7])(v291, 0, 1, v21);
    v6 = v301;
  }
  v99 = v12[6];
  v100 = (char *)(v10 + v99);
  v101 = &v11[v99];
  v102 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v103 = *(_QWORD *)(v102 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
  {
    v104 = sub_1000039AC(&qword_100375590);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    v293(v100, v101, v6);
    v105 = *(int *)(v102 + 20);
    v106 = &v100[v105];
    v107 = &v101[v105];
    *(_DWORD *)v106 = *(_DWORD *)v107;
    v106[4] = v107[4];
    v108 = *(int *)(v102 + 24);
    v109 = &v100[v108];
    v110 = &v101[v108];
    *(_DWORD *)v109 = *(_DWORD *)v110;
    v109[4] = v110[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  v111 = v12[7];
  v112 = (char *)(v10 + v111);
  v113 = &v11[v111];
  v114 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v115 = *(_QWORD *)(v114 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
  {
    v116 = sub_1000039AC(&qword_100375598);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
  }
  else
  {
    v293(v112, v113, v6);
    v117 = *(int *)(v114 + 20);
    v118 = &v112[v117];
    v119 = &v113[v117];
    *(_DWORD *)v118 = *(_DWORD *)v119;
    v118[4] = v119[4];
    v120 = *(int *)(v114 + 24);
    v121 = &v112[v120];
    v122 = &v113[v120];
    *(_DWORD *)v121 = *(_DWORD *)v122;
    v121[4] = v122[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1001E9618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E9624);
}

uint64_t sub_1001E9624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FFBC4(a1, a2, a3, &qword_1003755A0);
}

uint64_t sub_1001E9630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E963C);
}

uint64_t sub_1001E963C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FFC8C(a1, a2, a3, a4, &qword_1003755A0);
}

void sub_1001E9648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100074B60(a1, a2, a3, (uint64_t)&unk_1002E5980, (unint64_t *)&unk_100377820, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

uint64_t sub_1001E9664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E9670);
}

uint64_t sub_1001E9674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E9680);
}

char *sub_1001E9684(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v28);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    v13 = &a1[v10];
    v14 = &a2[v10];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = &a1[v15];
    v18 = &a2[v15];
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    a1[v16] = a2[v16];
    v19 = a3[9];
    v20 = a3[10];
    v21 = &a1[v19];
    v22 = &a2[v19];
    v21[4] = v22[4];
    v23 = &a1[v20];
    v24 = &a2[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
    v26 = *((_QWORD *)v25 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_1000039AC(&qword_1003755A8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v8(v23, v24, v7);
      v29 = v25[5];
      v30 = &v23[v29];
      v31 = &v24[v29];
      *(_DWORD *)v30 = *(_DWORD *)v31;
      v30[4] = v31[4];
      v32 = v25[6];
      v33 = &v23[v32];
      v34 = &v24[v32];
      *(_DWORD *)v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      v35 = v25[7];
      v36 = &v23[v35];
      v37 = &v24[v35];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t sub_1001E9858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 40);
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  return result;
}

uint64_t sub_1001E98F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v18 = a3[9];
  v19 = a3[10];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = (char *)(a1 + v19);
  v23 = (char *)(a2 + v19);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v25 = *((_QWORD *)v24 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_1000039AC(&qword_1003755A8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v22, (uint64_t)v23, v6);
    v27 = v24[5];
    v28 = &v22[v27];
    v29 = &v23[v27];
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = v24[6];
    v31 = &v22[v30];
    v32 = &v23[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v24[7];
    v34 = &v22[v33];
    v35 = &v23[v33];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_1001E9AA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = (int *)(a2 + v9);
  v12 = *v11;
  *(_BYTE *)(v10 + 4) = *((_BYTE *)v11 + 4);
  *(_DWORD *)v10 = v12;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  LOBYTE(v12) = *(_BYTE *)(v15 + 4);
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v12;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  LOBYTE(v12) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = v12;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (int *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 4) = *((_BYTE *)v21 + 4);
  *(_DWORD *)v20 = v22;
  v23 = a3[10];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      v8((uint64_t)v24, (uint64_t)v25, v6);
      v45 = v26[5];
      v46 = &v24[v45];
      v47 = &v25[v45];
      v48 = v47[4];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      v46[4] = v48;
      v49 = v26[6];
      v50 = &v24[v49];
      v51 = &v25[v49];
      v52 = v51[4];
      *(_DWORD *)v50 = *(_DWORD *)v51;
      v50[4] = v52;
      v53 = v26[7];
      v54 = &v24[v53];
      v55 = &v25[v53];
      v56 = v55[4];
      *(_DWORD *)v54 = *(_DWORD *)v55;
      v54[4] = v56;
      return a1;
    }
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v43 = sub_1000039AC(&qword_1003755A8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v24, v25, v6);
  v31 = v26[5];
  v32 = &v24[v31];
  v33 = &v25[v31];
  v34 = v33[4];
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v32[4] = v34;
  v35 = v26[6];
  v36 = &v24[v35];
  v37 = &v25[v35];
  v38 = v37[4];
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v36[4] = v38;
  v39 = v26[7];
  v40 = &v24[v39];
  v41 = &v25[v39];
  v42 = v41[4];
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v40[4] = v42;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1001E9CF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v18 = a3[9];
  v19 = a3[10];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = (char *)(a1 + v19);
  v23 = (char *)(a2 + v19);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v25 = *((_QWORD *)v24 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_1000039AC(&qword_1003755A8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v22, (uint64_t)v23, v6);
    v27 = v24[5];
    v28 = &v22[v27];
    v29 = &v23[v27];
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = v24[6];
    v31 = &v22[v30];
    v32 = &v23[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v24[7];
    v34 = &v22[v33];
    v35 = &v23[v33];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_1001E9E9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = (char *)(a1 + v20);
  v24 = (char *)(a2 + v20);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(char *, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      v8((uint64_t)v23, (uint64_t)v24, v6);
      v41 = v25[5];
      v42 = &v23[v41];
      v43 = &v24[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v44 = v25[6];
      v45 = &v23[v44];
      v46 = &v24[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      v47 = v25[7];
      v48 = &v23[v47];
      v49 = &v24[v47];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      return a1;
    }
    sub_100004030((uint64_t)v23, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v39 = sub_1000039AC(&qword_1003755A8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
  v30 = v25[5];
  v31 = &v23[v30];
  v32 = &v24[v30];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  v33 = v25[6];
  v34 = &v23[v33];
  v35 = &v24[v33];
  *(_DWORD *)v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  v36 = v25[7];
  v37 = &v23[v36];
  v38 = &v24[v36];
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1001EA0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EA0F0);
}

uint64_t sub_1001EA0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 251)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) <= 4u)
      v9 = 4;
    else
      v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
    v10 = v9 - 4;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) >= 4u)
      return v10;
    else
      return 0;
  }
  else
  {
    v11 = sub_1000039AC(&qword_1003755A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v11);
  }
}

uint64_t sub_1001EA1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EA1AC);
}

uint64_t sub_1001EA1AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 251)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 4;
      return result;
    }
    v10 = sub_1000039AC(&qword_1003755A8);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001EA250(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1002E57C0;
    v6[2] = &unk_1002E57C0;
    v6[3] = &unk_1002E57C0;
    v6[4] = &unk_1002E5878;
    v6[5] = &unk_1002E57C0;
    sub_10001198C(319, (unint64_t *)&unk_100377938, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1001EA2FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    v13 = (char *)a1 + v10;
    v14 = (char *)a2 + v10;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v22 = *((_QWORD *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_1000039AC(&qword_1003755B0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v19, (uint64_t *)v20, v7);
      v25 = v21[5];
      v26 = &v19[v25];
      v27 = &v20[v25];
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      v28 = v21[6];
      v29 = &v19[v28];
      v30 = &v20[v28];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      v31 = v21[7];
      v32 = &v19[v31];
      v33 = &v20[v31];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1001EA4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 32);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  return result;
}

uint64_t sub_1001EA54C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = (char *)(a1 + v15);
  v19 = (char *)(a2 + v15);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1000039AC(&qword_1003755B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v20[7];
    v30 = &v18[v29];
    v31 = &v19[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001EA6D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char v54;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 4);
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = v12;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 4);
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v20;
  v21 = a3[8];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v8((uint64_t)v22, (uint64_t)v23, v6);
      v43 = v24[5];
      v44 = &v22[v43];
      v45 = &v23[v43];
      v46 = v45[4];
      *(_DWORD *)v44 = *(_DWORD *)v45;
      v44[4] = v46;
      v47 = v24[6];
      v48 = &v22[v47];
      v49 = &v23[v47];
      v50 = v49[4];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v48[4] = v50;
      v51 = v24[7];
      v52 = &v22[v51];
      v53 = &v23[v51];
      v54 = v53[4];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      v52[4] = v54;
      return a1;
    }
    sub_100004030((uint64_t)v22, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v41 = sub_1000039AC(&qword_1003755B0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
  v29 = v24[5];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = v31[4];
  *(_DWORD *)v30 = *(_DWORD *)v31;
  v30[4] = v32;
  v33 = v24[6];
  v34 = &v22[v33];
  v35 = &v23[v33];
  v36 = v35[4];
  *(_DWORD *)v34 = *(_DWORD *)v35;
  v34[4] = v36;
  v37 = v24[7];
  v38 = &v22[v37];
  v39 = &v23[v37];
  v40 = v39[4];
  *(_DWORD *)v38 = *(_DWORD *)v39;
  v38[4] = v40;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1001EA8FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = (char *)(a1 + v15);
  v19 = (char *)(a2 + v15);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1000039AC(&qword_1003755B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v20[7];
    v30 = &v18[v29];
    v31 = &v19[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001EAA80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = (char *)(a1 + v16);
  v20 = (char *)(a2 + v16);
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(char *, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      v8((uint64_t)v19, (uint64_t)v20, v6);
      v37 = v21[5];
      v38 = &v19[v37];
      v39 = &v20[v37];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      v40 = v21[6];
      v41 = &v19[v40];
      v42 = &v20[v40];
      *(_DWORD *)v41 = *(_DWORD *)v42;
      v41[4] = v42[4];
      v43 = v21[7];
      v44 = &v19[v43];
      v45 = &v20[v43];
      *(_DWORD *)v44 = *(_DWORD *)v45;
      v44[4] = v45[4];
      return a1;
    }
    sub_100004030((uint64_t)v19, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v35 = sub_1000039AC(&qword_1003755B0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  v26 = v21[5];
  v27 = &v19[v26];
  v28 = &v20[v26];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[4] = v28[4];
  v29 = v21[6];
  v30 = &v19[v29];
  v31 = &v20[v29];
  *(_DWORD *)v30 = *(_DWORD *)v31;
  v30[4] = v31[4];
  v32 = v21[7];
  v33 = &v19[v32];
  v34 = &v20[v32];
  *(_DWORD *)v33 = *(_DWORD *)v34;
  v33[4] = v34[4];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1001EACA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EACB0);
}

uint64_t sub_1001EACB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EBDF4(a1, a2, a3, &qword_1003755B0);
}

uint64_t sub_1001EACBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EACC8);
}

uint64_t sub_1001EACC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001EBE84(a1, a2, a3, a4, &qword_1003755B0);
}

void sub_1001EACD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EBF28(a1, a2, a3, (uint64_t)&unk_1002E57C0, (unint64_t *)&unk_1003779D8, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t *sub_1001EACF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v13 = (char *)a1 + v10;
    v14 = (char *)a2 + v10;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
    v22 = *((_QWORD *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_1000039AC(&qword_1003755B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v19, (uint64_t *)v20, v7);
      v25 = v21[5];
      v26 = &v19[v25];
      v27 = &v20[v25];
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      v28 = v21[6];
      v29 = &v19[v28];
      v30 = &v20[v28];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      v31 = v21[7];
      v32 = &v19[v31];
      v33 = &v20[v31];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      v34 = v21[8];
      v35 = &v19[v34];
      v36 = &v20[v34];
      v37 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v38 = *((_QWORD *)v37 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
      {
        v39 = sub_1000039AC(&qword_1003755B0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v35, (uint64_t *)v36, v7);
        v40 = v37[5];
        v41 = &v35[v40];
        v42 = &v36[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        v43 = v37[6];
        v44 = &v35[v43];
        v45 = &v36[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        v46 = v37[7];
        v47 = &v35[v46];
        v48 = &v36[v46];
        *(_DWORD *)v47 = *(_DWORD *)v48;
        v47[4] = v48[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1001EAF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 32);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v10(v5, v4);
    v8 = v5 + *(int *)(v6 + 32);
    v9 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

uint64_t sub_1001EB05C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = (char *)(a1 + v15);
  v19 = (char *)(a2 + v15);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1000039AC(&qword_1003755B8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v20[7];
    v30 = &v18[v29];
    v31 = &v19[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = v20[8];
    v33 = &v18[v32];
    v34 = &v19[v32];
    v35 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v36 = *((_QWORD *)v35 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_1000039AC(&qword_1003755B0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v33, (uint64_t)v34, v6);
      v38 = v35[5];
      v39 = &v33[v38];
      v40 = &v34[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      v41 = v35[6];
      v42 = &v33[v41];
      v43 = &v34[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v44 = v35[7];
      v45 = &v33[v44];
      v46 = &v34[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001EB2BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, int *);
  int v27;
  int v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  size_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, int *);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char v107;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 4);
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v20;
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = (char *)(a2 + v21);
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v8(v22, (uint64_t)v23, v6);
      v51 = v24[5];
      v52 = v22 + v51;
      v53 = &v23[v51];
      v54 = v53[4];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v54;
      v55 = v24[6];
      v56 = v22 + v55;
      v57 = &v23[v55];
      v58 = v57[4];
      *(_DWORD *)v56 = *(_DWORD *)v57;
      *(_BYTE *)(v56 + 4) = v58;
      v59 = v24[7];
      v60 = v22 + v59;
      v61 = &v23[v59];
      v62 = v61[4];
      *(_DWORD *)v60 = *(_DWORD *)v61;
      *(_BYTE *)(v60 + 4) = v62;
      v63 = v24[8];
      v64 = v22 + v63;
      v65 = &v23[v63];
      v66 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v67 = *((_QWORD *)v66 - 1);
      v68 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v67 + 48);
      v69 = v68(v64, 1, v66);
      v70 = v68((uint64_t)v65, 1, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v64, v65, v6);
          v71 = v66[5];
          v72 = v64 + v71;
          v73 = &v65[v71];
          v74 = v73[4];
          *(_DWORD *)v72 = *(_DWORD *)v73;
          *(_BYTE *)(v72 + 4) = v74;
          v75 = v66[6];
          v76 = v64 + v75;
          v77 = &v65[v75];
          v78 = v77[4];
          *(_DWORD *)v76 = *(_DWORD *)v77;
          *(_BYTE *)(v76 + 4) = v78;
          v79 = v66[7];
          v80 = v64 + v79;
          v81 = &v65[v79];
          v82 = v81[4];
          *(_DWORD *)v80 = *(_DWORD *)v81;
          *(_BYTE *)(v80 + 4) = v82;
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v67 + 56))(v64, 0, 1, v66);
          return a1;
        }
      }
      else
      {
        if (!v70)
        {
          v8(v64, (uint64_t)v65, v6);
          v96 = v66[5];
          v97 = v64 + v96;
          v98 = &v65[v96];
          v99 = v98[4];
          *(_DWORD *)v97 = *(_DWORD *)v98;
          *(_BYTE *)(v97 + 4) = v99;
          v100 = v66[6];
          v101 = v64 + v100;
          v102 = &v65[v100];
          v103 = v102[4];
          *(_DWORD *)v101 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = v103;
          v104 = v66[7];
          v105 = v64 + v104;
          v106 = &v65[v104];
          v107 = v106[4];
          *(_DWORD *)v105 = *(_DWORD *)v106;
          *(_BYTE *)(v105 + 4) = v107;
          return a1;
        }
        sub_100004030(v64, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }
      v48 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B0) - 8) + 64);
      v49 = (void *)v64;
      v50 = v65;
      goto LABEL_8;
    }
    sub_100004030(v22, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    v48 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B8) - 8) + 64);
    v49 = (void *)v22;
    v50 = v23;
LABEL_8:
    memcpy(v49, v50, v48);
    return a1;
  }
  if (v28)
    goto LABEL_7;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v29(v22, v23, v6);
  v30 = v24[5];
  v31 = v22 + v30;
  v32 = &v23[v30];
  v33 = v32[4];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v33;
  v34 = v24[6];
  v35 = v22 + v34;
  v36 = &v23[v34];
  v37 = v36[4];
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = v37;
  v38 = v24[7];
  v39 = v22 + v38;
  v40 = &v23[v38];
  v41 = v40[4];
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v41;
  v42 = v24[8];
  v43 = (char *)(v22 + v42);
  v44 = &v23[v42];
  v45 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v46 = *((_QWORD *)v45 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_1000039AC(&qword_1003755B0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v29((uint64_t)v43, v44, v6);
    v83 = v45[5];
    v84 = &v43[v83];
    v85 = &v44[v83];
    v86 = v85[4];
    *(_DWORD *)v84 = *(_DWORD *)v85;
    v84[4] = v86;
    v87 = v45[6];
    v88 = &v43[v87];
    v89 = &v44[v87];
    v90 = v89[4];
    *(_DWORD *)v88 = *(_DWORD *)v89;
    v88[4] = v90;
    v91 = v45[7];
    v92 = &v43[v91];
    v93 = &v44[v91];
    v94 = v93[4];
    *(_DWORD *)v92 = *(_DWORD *)v93;
    v92[4] = v94;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v46 + 56))(v43, 0, 1, v45);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1001EB720(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = (char *)(a1 + v15);
  v19 = (char *)(a2 + v15);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1000039AC(&qword_1003755B8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v20[7];
    v30 = &v18[v29];
    v31 = &v19[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = v20[8];
    v33 = &v18[v32];
    v34 = &v19[v32];
    v35 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v36 = *((_QWORD *)v35 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_1000039AC(&qword_1003755B0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v33, (uint64_t)v34, v6);
      v38 = v35[5];
      v39 = &v33[v38];
      v40 = &v34[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      v41 = v35[6];
      v42 = &v33[v41];
      v43 = &v34[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v44 = v35[7];
      v45 = &v33[v44];
      v46 = &v34[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001EB980(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int *v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, int *);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a1 + v16;
  v20 = (char *)(a2 + v16);
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      v8(v19, (uint64_t)v20, v6);
      v45 = v21[5];
      v46 = v19 + v45;
      v47 = &v20[v45];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      *(_BYTE *)(v46 + 4) = v47[4];
      v48 = v21[6];
      v49 = v19 + v48;
      v50 = &v20[v48];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      *(_BYTE *)(v49 + 4) = v50[4];
      v51 = v21[7];
      v52 = v19 + v51;
      v53 = &v20[v51];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v53[4];
      v54 = v21[8];
      v55 = v19 + v54;
      v56 = &v20[v54];
      v57 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v58 = *((_QWORD *)v57 - 1);
      v59 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v58 + 48);
      v60 = v59(v55, 1, v57);
      v61 = v59((uint64_t)v56, 1, v57);
      if (v60)
      {
        if (!v61)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v55, v56, v6);
          v62 = v57[5];
          v63 = v55 + v62;
          v64 = &v56[v62];
          *(_DWORD *)v63 = *(_DWORD *)v64;
          *(_BYTE *)(v63 + 4) = v64[4];
          v65 = v57[6];
          v66 = v55 + v65;
          v67 = &v56[v65];
          *(_DWORD *)v66 = *(_DWORD *)v67;
          *(_BYTE *)(v66 + 4) = v67[4];
          v68 = v57[7];
          v69 = v55 + v68;
          v70 = &v56[v68];
          *(_DWORD *)v69 = *(_DWORD *)v70;
          *(_BYTE *)(v69 + 4) = v70[4];
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v58 + 56))(v55, 0, 1, v57);
          return a1;
        }
      }
      else
      {
        if (!v61)
        {
          v8(v55, (uint64_t)v56, v6);
          v81 = v57[5];
          v82 = v55 + v81;
          v83 = &v56[v81];
          *(_DWORD *)v82 = *(_DWORD *)v83;
          *(_BYTE *)(v82 + 4) = v83[4];
          v84 = v57[6];
          v85 = v55 + v84;
          v86 = &v56[v84];
          *(_DWORD *)v85 = *(_DWORD *)v86;
          *(_BYTE *)(v85 + 4) = v86[4];
          v87 = v57[7];
          v88 = v55 + v87;
          v89 = &v56[v87];
          *(_DWORD *)v88 = *(_DWORD *)v89;
          *(_BYTE *)(v88 + 4) = v89[4];
          return a1;
        }
        sub_100004030(v55, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B0) - 8) + 64);
      v43 = (void *)v55;
      v44 = v56;
      goto LABEL_8;
    }
    sub_100004030(v19, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    v42 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B8) - 8) + 64);
    v43 = (void *)v19;
    v44 = v20;
LABEL_8:
    memcpy(v43, v44, v42);
    return a1;
  }
  if (v25)
    goto LABEL_7;
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v26(v19, v20, v6);
  v27 = v21[5];
  v28 = v19 + v27;
  v29 = &v20[v27];
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v29[4];
  v30 = v21[6];
  v31 = v19 + v30;
  v32 = &v20[v30];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v32[4];
  v33 = v21[7];
  v34 = v19 + v33;
  v35 = &v20[v33];
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = v35[4];
  v36 = v21[8];
  v37 = (char *)(v19 + v36);
  v38 = &v20[v36];
  v39 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v40 = *((_QWORD *)v39 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_1000039AC(&qword_1003755B0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v37, v38, v6);
    v71 = v39[5];
    v72 = &v37[v71];
    v73 = &v38[v71];
    *(_DWORD *)v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    v74 = v39[6];
    v75 = &v37[v74];
    v76 = &v38[v74];
    *(_DWORD *)v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    v77 = v39[7];
    v78 = &v37[v77];
    v79 = &v38[v77];
    *(_DWORD *)v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1001EBDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EBDE8);
}

uint64_t sub_1001EBDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EBDF4(a1, a2, a3, &qword_1003755B8);
}

uint64_t sub_1001EBDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = a1;
  }
  else
  {
    v10 = sub_1000039AC(a4);
    v12 = a1 + *(int *)(a3 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  }
  return v11(v12, a2, v10);
}

uint64_t sub_1001EBE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EBE78);
}

uint64_t sub_1001EBE78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001EBE84(a1, a2, a3, a4, &qword_1003755B8);
}

uint64_t sub_1001EBE84(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = v10;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    v12 = sub_1000039AC(a5);
    v14 = a1 + *(int *)(a4 + 32);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

void sub_1001EBF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EBF28(a1, a2, a3, (uint64_t)&unk_1002E5750, (unint64_t *)&unk_100377A70, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

void sub_1001EBF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[5];

  v10 = type metadata accessor for UnknownStorage(319);
  if (v11 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v10 - 8) + 64;
    v14[1] = a4;
    v14[2] = &unk_1002E57C0;
    v14[3] = &unk_1002E57C0;
    sub_10001198C(319, a5, a6);
    if (v13 <= 0x3F)
    {
      v14[4] = *(_QWORD *)(v12 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v14, a1 + 16);
    }
  }
}

uint64_t *sub_1001EBFD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    v13 = (char *)a1 + v10;
    v14 = (char *)a2 + v10;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
    v19 = *((_QWORD *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1000039AC(&qword_1003755B8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v16, (uint64_t *)v17, v7);
      v22 = v18[5];
      v23 = &v16[v22];
      v24 = &v17[v22];
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      v25 = v18[6];
      v26 = &v16[v25];
      v27 = &v17[v25];
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      v28 = v18[7];
      v29 = &v16[v28];
      v30 = &v17[v28];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      v31 = v18[8];
      v32 = &v16[v31];
      v33 = &v17[v31];
      v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v35 = *((_QWORD *)v34 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_1000039AC(&qword_1003755B0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v32, (uint64_t *)v33, v7);
        v37 = v34[5];
        v38 = &v32[v37];
        v39 = &v33[v37];
        *(_DWORD *)v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        v40 = v34[6];
        v41 = &v32[v40];
        v42 = &v33[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        v43 = v34[7];
        v44 = &v32[v43];
        v45 = &v33[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_1001EC248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v10(v5, v4);
    v8 = v5 + *(int *)(v6 + 32);
    v9 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

uint64_t sub_1001EC328(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1000039AC(&qword_1003755B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    v20 = v17[5];
    v21 = &v15[v20];
    v22 = &v16[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = v17[6];
    v24 = &v15[v23];
    v25 = &v16[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v17[7];
    v27 = &v15[v26];
    v28 = &v16[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v17[8];
    v30 = &v15[v29];
    v31 = &v16[v29];
    v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v33 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_1000039AC(&qword_1003755B0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v30, (uint64_t)v31, v6);
      v35 = v32[5];
      v36 = &v30[v35];
      v37 = &v31[v35];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      v38 = v32[6];
      v39 = &v30[v38];
      v40 = &v31[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      v41 = v32[7];
      v42 = &v30[v41];
      v43 = &v31[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1001EC570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int *v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, int *);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char v90;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char v103;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 4);
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = v12;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 4);
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      v8(v18, (uint64_t)v19, v6);
      v47 = v20[5];
      v48 = v18 + v47;
      v49 = &v19[v47];
      v50 = v49[4];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      *(_BYTE *)(v48 + 4) = v50;
      v51 = v20[6];
      v52 = v18 + v51;
      v53 = &v19[v51];
      v54 = v53[4];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v54;
      v55 = v20[7];
      v56 = v18 + v55;
      v57 = &v19[v55];
      v58 = v57[4];
      *(_DWORD *)v56 = *(_DWORD *)v57;
      *(_BYTE *)(v56 + 4) = v58;
      v59 = v20[8];
      v60 = v18 + v59;
      v61 = &v19[v59];
      v62 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v63 = *((_QWORD *)v62 - 1);
      v64 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48);
      v65 = v64(v60, 1, v62);
      v66 = v64((uint64_t)v61, 1, v62);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v60, v61, v6);
          v67 = v62[5];
          v68 = v60 + v67;
          v69 = &v61[v67];
          v70 = v69[4];
          *(_DWORD *)v68 = *(_DWORD *)v69;
          *(_BYTE *)(v68 + 4) = v70;
          v71 = v62[6];
          v72 = v60 + v71;
          v73 = &v61[v71];
          v74 = v73[4];
          *(_DWORD *)v72 = *(_DWORD *)v73;
          *(_BYTE *)(v72 + 4) = v74;
          v75 = v62[7];
          v76 = v60 + v75;
          v77 = &v61[v75];
          v78 = v77[4];
          *(_DWORD *)v76 = *(_DWORD *)v77;
          *(_BYTE *)(v76 + 4) = v78;
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v63 + 56))(v60, 0, 1, v62);
          return a1;
        }
      }
      else
      {
        if (!v66)
        {
          v8(v60, (uint64_t)v61, v6);
          v92 = v62[5];
          v93 = v60 + v92;
          v94 = &v61[v92];
          v95 = v94[4];
          *(_DWORD *)v93 = *(_DWORD *)v94;
          *(_BYTE *)(v93 + 4) = v95;
          v96 = v62[6];
          v97 = v60 + v96;
          v98 = &v61[v96];
          v99 = v98[4];
          *(_DWORD *)v97 = *(_DWORD *)v98;
          *(_BYTE *)(v97 + 4) = v99;
          v100 = v62[7];
          v101 = v60 + v100;
          v102 = &v61[v100];
          v103 = v102[4];
          *(_DWORD *)v101 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = v103;
          return a1;
        }
        sub_100004030(v60, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }
      v44 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B0) - 8) + 64);
      v45 = (void *)v60;
      v46 = v61;
      goto LABEL_8;
    }
    sub_100004030(v18, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B8) - 8) + 64);
    v45 = (void *)v18;
    v46 = v19;
LABEL_8:
    memcpy(v45, v46, v44);
    return a1;
  }
  if (v24)
    goto LABEL_7;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v25(v18, v19, v6);
  v26 = v20[5];
  v27 = v18 + v26;
  v28 = &v19[v26];
  v29 = v28[4];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v29;
  v30 = v20[6];
  v31 = v18 + v30;
  v32 = &v19[v30];
  v33 = v32[4];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v33;
  v34 = v20[7];
  v35 = v18 + v34;
  v36 = &v19[v34];
  v37 = v36[4];
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = v37;
  v38 = v20[8];
  v39 = (char *)(v18 + v38);
  v40 = &v19[v38];
  v41 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v42 = *((_QWORD *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_1000039AC(&qword_1003755B0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v39, v40, v6);
    v79 = v41[5];
    v80 = &v39[v79];
    v81 = &v40[v79];
    v82 = v81[4];
    *(_DWORD *)v80 = *(_DWORD *)v81;
    v80[4] = v82;
    v83 = v41[6];
    v84 = &v39[v83];
    v85 = &v40[v83];
    v86 = v85[4];
    *(_DWORD *)v84 = *(_DWORD *)v85;
    v84[4] = v86;
    v87 = v41[7];
    v88 = &v39[v87];
    v89 = &v40[v87];
    v90 = v89[4];
    *(_DWORD *)v88 = *(_DWORD *)v89;
    v88[4] = v90;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_1001EC9B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1000039AC(&qword_1003755B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    v20 = v17[5];
    v21 = &v15[v20];
    v22 = &v16[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = v17[6];
    v24 = &v15[v23];
    v25 = &v16[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = v17[7];
    v27 = &v15[v26];
    v28 = &v16[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v17[8];
    v30 = &v15[v29];
    v31 = &v16[v29];
    v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v33 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_1000039AC(&qword_1003755B0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v30, (uint64_t)v31, v6);
      v35 = v32[5];
      v36 = &v30[v35];
      v37 = &v31[v35];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      v38 = v32[6];
      v39 = &v30[v38];
      v40 = &v31[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      v41 = v32[7];
      v42 = &v30[v41];
      v43 = &v31[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1001ECC00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, int *);
  int v21;
  int v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, int *);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (char *)(a2 + v15);
  v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20((uint64_t)v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v8(v16, (uint64_t)v17, v6);
      v42 = v18[5];
      v43 = v16 + v42;
      v44 = &v17[v42];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      *(_BYTE *)(v43 + 4) = v44[4];
      v45 = v18[6];
      v46 = v16 + v45;
      v47 = &v17[v45];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      *(_BYTE *)(v46 + 4) = v47[4];
      v48 = v18[7];
      v49 = v16 + v48;
      v50 = &v17[v48];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      *(_BYTE *)(v49 + 4) = v50[4];
      v51 = v18[8];
      v52 = v16 + v51;
      v53 = &v17[v51];
      v54 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
      v55 = *((_QWORD *)v54 - 1);
      v56 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v55 + 48);
      v57 = v56(v52, 1, v54);
      v58 = v56((uint64_t)v53, 1, v54);
      if (v57)
      {
        if (!v58)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v52, v53, v6);
          v59 = v54[5];
          v60 = v52 + v59;
          v61 = &v53[v59];
          *(_DWORD *)v60 = *(_DWORD *)v61;
          *(_BYTE *)(v60 + 4) = v61[4];
          v62 = v54[6];
          v63 = v52 + v62;
          v64 = &v53[v62];
          *(_DWORD *)v63 = *(_DWORD *)v64;
          *(_BYTE *)(v63 + 4) = v64[4];
          v65 = v54[7];
          v66 = v52 + v65;
          v67 = &v53[v65];
          *(_DWORD *)v66 = *(_DWORD *)v67;
          *(_BYTE *)(v66 + 4) = v67[4];
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v55 + 56))(v52, 0, 1, v54);
          return a1;
        }
      }
      else
      {
        if (!v58)
        {
          v8(v52, (uint64_t)v53, v6);
          v78 = v54[5];
          v79 = v52 + v78;
          v80 = &v53[v78];
          *(_DWORD *)v79 = *(_DWORD *)v80;
          *(_BYTE *)(v79 + 4) = v80[4];
          v81 = v54[6];
          v82 = v52 + v81;
          v83 = &v53[v81];
          *(_DWORD *)v82 = *(_DWORD *)v83;
          *(_BYTE *)(v82 + 4) = v83[4];
          v84 = v54[7];
          v85 = v52 + v84;
          v86 = &v53[v84];
          *(_DWORD *)v85 = *(_DWORD *)v86;
          *(_BYTE *)(v85 + 4) = v86[4];
          return a1;
        }
        sub_100004030(v52, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B0) - 8) + 64);
      v40 = (void *)v52;
      v41 = v53;
      goto LABEL_8;
    }
    sub_100004030(v16, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    v39 = *(_QWORD *)(*(_QWORD *)(sub_1000039AC(&qword_1003755B8) - 8) + 64);
    v40 = (void *)v16;
    v41 = v17;
LABEL_8:
    memcpy(v40, v41, v39);
    return a1;
  }
  if (v22)
    goto LABEL_7;
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v23(v16, v17, v6);
  v24 = v18[5];
  v25 = v16 + v24;
  v26 = &v17[v24];
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = v26[4];
  v27 = v18[6];
  v28 = v16 + v27;
  v29 = &v17[v27];
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v29[4];
  v30 = v18[7];
  v31 = v16 + v30;
  v32 = &v17[v30];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v32[4];
  v33 = v18[8];
  v34 = (char *)(v16 + v33);
  v35 = &v17[v33];
  v36 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v37 = *((_QWORD *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_1000039AC(&qword_1003755B0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v23((uint64_t)v34, v35, v6);
    v68 = v36[5];
    v69 = &v34[v68];
    v70 = &v35[v68];
    *(_DWORD *)v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    v71 = v36[6];
    v72 = &v34[v71];
    v73 = &v35[v71];
    *(_DWORD *)v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    v74 = v36[7];
    v75 = &v34[v74];
    v76 = &v35[v74];
    *(_DWORD *)v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_1001ED044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ED050);
}

uint64_t sub_1001ED050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1000039AC(&qword_1003755B8);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001ED0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ED0D4);
}

uint64_t sub_1001ED0D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1000039AC(&qword_1003755B8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001ED154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100208DFC(a1, a2, a3, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57C0, (unint64_t *)&unk_100377A70, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t *sub_1001ED174(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  char *v54;
  char *v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    v13 = (char *)a1 + v10;
    v14 = (char *)a2 + v10;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = a3[9];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    v25 = *((_QWORD *)v24 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_1000039AC(&qword_1003755B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v22, (uint64_t *)v23, v7);
      v28 = v24[5];
      v29 = &v22[v28];
      v30 = &v23[v28];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      v31 = v24[6];
      v32 = &v22[v31];
      v33 = &v23[v31];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      v34 = v24[7];
      v35 = &v22[v34];
      v36 = &v23[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
    }
    v37 = a3[10];
    v38 = a3[11];
    v39 = (char *)a1 + v37;
    v40 = (char *)a2 + v37;
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v41 = (char *)a1 + v38;
    v42 = (char *)a2 + v38;
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = a3[12];
    v44 = a3[13];
    v45 = (char *)a1 + v43;
    v46 = (char *)a2 + v43;
    *(_DWORD *)v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    v47 = (char *)a1 + v44;
    v48 = (char *)a2 + v44;
    *(_DWORD *)v47 = *(_DWORD *)v48;
    v47[4] = v48[4];
    v49 = a3[14];
    v50 = a3[15];
    v51 = (char *)a1 + v49;
    v52 = (char *)a2 + v49;
    v53 = *(_DWORD *)v52;
    v51[4] = v52[4];
    *(_DWORD *)v51 = v53;
    v54 = (char *)a1 + v50;
    v55 = (char *)a2 + v50;
    v54[4] = v55[4];
    *(_DWORD *)v54 = *(_DWORD *)v55;
  }
  return a1;
}

uint64_t sub_1001ED3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 36);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  return result;
}

uint64_t sub_1001ED484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[9];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v24 = *((_QWORD *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_1000039AC(&qword_1003755B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v26 = v23[5];
    v27 = &v21[v26];
    v28 = &v22[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v23[6];
    v30 = &v21[v29];
    v31 = &v22[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = v23[7];
    v33 = &v21[v32];
    v34 = &v22[v32];
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
  }
  v35 = a3[10];
  v36 = a3[11];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  v39 = a1 + v36;
  v40 = a2 + v36;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a3[12];
  v42 = a3[13];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  v45 = a1 + v42;
  v46 = a2 + v42;
  *(_DWORD *)v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  v47 = a3[14];
  v48 = a3[15];
  v49 = a1 + v47;
  v50 = (int *)(a2 + v47);
  v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)v49 = v51;
  v52 = a1 + v48;
  v53 = a2 + v48;
  *(_BYTE *)(v52 + 4) = *(_BYTE *)(v53 + 4);
  *(_DWORD *)v52 = *(_DWORD *)v53;
  return a1;
}

uint64_t sub_1001ED6C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  int v67;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 24);
  v82(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[9];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      v82((uint64_t)v24, (uint64_t)v25, v6);
      v69 = v26[5];
      v70 = &v24[v69];
      v71 = &v25[v69];
      v72 = v71[4];
      *(_DWORD *)v70 = *(_DWORD *)v71;
      v70[4] = v72;
      v73 = v26[6];
      v74 = &v24[v73];
      v75 = &v25[v73];
      v76 = v75[4];
      *(_DWORD *)v74 = *(_DWORD *)v75;
      v74[4] = v76;
      v77 = v26[7];
      v78 = &v24[v77];
      v79 = &v25[v77];
      v80 = v79[4];
      *(_DWORD *)v78 = *(_DWORD *)v79;
      v78[4] = v80;
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v43 = sub_1000039AC(&qword_1003755B0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v24, v25, v6);
  v31 = v26[5];
  v32 = &v24[v31];
  v33 = &v25[v31];
  v34 = v33[4];
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v32[4] = v34;
  v35 = v26[6];
  v36 = &v24[v35];
  v37 = &v25[v35];
  v38 = v37[4];
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v36[4] = v38;
  v39 = v26[7];
  v40 = &v24[v39];
  v41 = &v25[v39];
  v42 = v41[4];
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v40[4] = v42;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
LABEL_7:
  v44 = a3[10];
  v45 = a1 + v44;
  v46 = (int *)(a2 + v44);
  v47 = *v46;
  *(_BYTE *)(v45 + 4) = *((_BYTE *)v46 + 4);
  *(_DWORD *)v45 = v47;
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = (int *)(a2 + v48);
  v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)v49 = v51;
  v52 = a3[12];
  v53 = a1 + v52;
  v54 = (int *)(a2 + v52);
  v55 = *v54;
  *(_BYTE *)(v53 + 4) = *((_BYTE *)v54 + 4);
  *(_DWORD *)v53 = v55;
  v56 = a3[13];
  v57 = a1 + v56;
  v58 = (int *)(a2 + v56);
  v59 = *v58;
  *(_BYTE *)(v57 + 4) = *((_BYTE *)v58 + 4);
  *(_DWORD *)v57 = v59;
  v60 = a3[14];
  v61 = a1 + v60;
  v62 = (int *)(a2 + v60);
  v63 = *v62;
  *(_BYTE *)(v61 + 4) = *((_BYTE *)v62 + 4);
  *(_DWORD *)v61 = v63;
  v64 = a3[15];
  v65 = a1 + v64;
  v66 = (int *)(a2 + v64);
  v67 = *v66;
  *(_BYTE *)(v65 + 4) = *((_BYTE *)v66 + 4);
  *(_DWORD *)v65 = v67;
  return a1;
}

uint64_t sub_1001ED9D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[9];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v24 = *((_QWORD *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_1000039AC(&qword_1003755B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v26 = v23[5];
    v27 = &v21[v26];
    v28 = &v22[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = v23[6];
    v30 = &v21[v29];
    v31 = &v22[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = v23[7];
    v33 = &v21[v32];
    v34 = &v22[v32];
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
  }
  v35 = a3[10];
  v36 = a3[11];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  v39 = a1 + v36;
  v40 = a2 + v36;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a3[12];
  v42 = a3[13];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  v45 = a1 + v42;
  v46 = a2 + v42;
  *(_DWORD *)v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  v47 = a3[14];
  v48 = a3[15];
  v49 = a1 + v47;
  v50 = (int *)(a2 + v47);
  v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)v49 = v51;
  v52 = a1 + v48;
  v53 = a2 + v48;
  *(_BYTE *)(v52 + 4) = *(_BYTE *)(v53 + 4);
  *(_DWORD *)v52 = *(_DWORD *)v53;
  return a1;
}

uint64_t sub_1001EDC14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40);
  v67(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v67((uint64_t)v20, (uint64_t)v21, v6);
      v57 = v22[5];
      v58 = &v20[v57];
      v59 = &v21[v57];
      *(_DWORD *)v58 = *(_DWORD *)v59;
      v58[4] = v59[4];
      v60 = v22[6];
      v61 = &v20[v60];
      v62 = &v21[v60];
      *(_DWORD *)v61 = *(_DWORD *)v62;
      v61[4] = v62[4];
      v63 = v22[7];
      v64 = &v20[v63];
      v65 = &v21[v63];
      *(_DWORD *)v64 = *(_DWORD *)v65;
      v64[4] = v65[4];
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v36 = sub_1000039AC(&qword_1003755B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v20, v21, v6);
  v27 = v22[5];
  v28 = &v20[v27];
  v29 = &v21[v27];
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  v30 = v22[6];
  v31 = &v20[v30];
  v32 = &v21[v30];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  v33 = v22[7];
  v34 = &v20[v33];
  v35 = &v21[v33];
  *(_DWORD *)v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  v37 = a3[10];
  v38 = a3[11];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  v43 = a3[12];
  v44 = a3[13];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_DWORD *)v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  v47 = a1 + v44;
  v48 = a2 + v44;
  *(_DWORD *)v47 = *(_DWORD *)v48;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  v49 = a3[14];
  v50 = a3[15];
  v51 = a1 + v49;
  v52 = (int *)(a2 + v49);
  v53 = *v52;
  *(_BYTE *)(v51 + 4) = *((_BYTE *)v52 + 4);
  *(_DWORD *)v51 = v53;
  v54 = a1 + v50;
  v55 = a2 + v50;
  *(_BYTE *)(v54 + 4) = *(_BYTE *)(v55 + 4);
  *(_DWORD *)v54 = *(_DWORD *)v55;
  return a1;
}

uint64_t sub_1001EDF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EDF14);
}

uint64_t sub_1001EDF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1000039AC(&qword_1003755B0);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001EDF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EDF98);
}

uint64_t sub_1001EDF98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1000039AC(&qword_1003755B0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001EE018(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1002E57C0;
    v6[2] = &unk_1002E57C0;
    v6[3] = &unk_1002E57C0;
    v6[4] = &unk_1002E57C0;
    sub_10001198C(319, (unint64_t *)&unk_1003779D8, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_1002E57C0;
      v6[7] = &unk_1002E57C0;
      v6[8] = &unk_1002E57C0;
      v6[9] = &unk_1002E57C0;
      v6[10] = &unk_1002E57C0;
      v6[11] = &unk_1002E57C0;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

uint64_t sub_1001EE0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE0D4);
}

uint64_t sub_1001EE0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE0E4);
}

char *sub_1001EE0E8(char *a1, char *a2, uint64_t a3)
{
  return sub_1001F10D0(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003755D8);
}

uint64_t sub_1001EE0FC(uint64_t a1, uint64_t a2)
{
  return sub_1001F1208(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

uint64_t sub_1001EE108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F12C8(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003755D8);
}

uint64_t sub_1001EE11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F13DC(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003755D8);
}

uint64_t sub_1001EE130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1564(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003755D8);
}

uint64_t sub_1001EE144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1674(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_1003755D8);
}

uint64_t sub_1001EE158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE164);
}

uint64_t sub_1001EE164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FFBC4(a1, a2, a3, &qword_1003755D8);
}

uint64_t sub_1001EE170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE17C);
}

uint64_t sub_1001EE17C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FFC8C(a1, a2, a3, a4, &qword_1003755D8);
}

void sub_1001EE188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100074B60(a1, a2, a3, (uint64_t)&unk_1002E5980, (unint64_t *)&unk_100377CB8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

_QWORD *sub_1001EE1A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = a3[7];
    v12 = a3[8];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t sub_1001EE29C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t sub_1001EE440(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE50C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE5E4);
}

uint64_t sub_1001EE5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) <= 4u)
    v9 = 4;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  v10 = v9 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) >= 4u)
    return v10;
  else
    return 0;
}

uint64_t sub_1001EE668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE674);
}

uint64_t sub_1001EE674(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 4;
  return result;
}

uint64_t sub_1001EE6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1EEC(a1, a2, a3, (uint64_t)&unk_1002E5980, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E57C0, (uint64_t)&unk_1002E5878);
}

uint64_t sub_1001EE70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE718);
}

uint64_t sub_1001EE71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE728);
}

uint64_t sub_1001EE730(uint64_t a1, uint64_t a2)
{
  return sub_1001EE73C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001EE73C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v10(a1, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = a3(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v6);
  return result;
}

uint64_t sub_1001EE7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE7FC);
}

uint64_t sub_1001EE7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013E9C4(a1, a2, a3, &qword_1003755E0);
}

uint64_t sub_1001EE808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE814);
}

uint64_t sub_1001EE814(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EA54(a1, a2, a3, a4, &qword_1003755E0);
}

void sub_1001EE820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001F0FBC(a1, a2, a3, (unint64_t *)&unk_100377E68, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002E57C0);
}

uint64_t *sub_1001EE83C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_1003755E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      v19 = *(int *)(v12 + 24);
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v22 = a3[6];
    v23 = a3[7];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = a3[8];
    v29 = a3[9];
    v30 = (char *)a1 + v28;
    v31 = (char *)a2 + v28;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = (char *)a1 + v29;
    v33 = (char *)a2 + v29;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
  }
  return a1;
}

uint64_t sub_1001EE9F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_1003755E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[8];
  v27 = a3[9];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a1 + v27;
  v31 = a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  return a1;
}

uint64_t sub_1001EEB80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  int v40;
  uint64_t v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  uint64_t v50;
  int *v51;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v51 = a3;
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v50 = *(_QWORD *)(v12 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v42 = *(int *)(v12 + 20);
      v43 = &v10[v42];
      v44 = &v11[v42];
      v45 = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v43[4] = v45;
      v46 = *(int *)(v12 + 24);
      v47 = &v10[v46];
      v48 = &v11[v46];
      v49 = v48[4];
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v47[4] = v49;
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v24 = sub_1000039AC(&qword_1003755E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v16 = *(int *)(v12 + 20);
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = v18[4];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v19;
  v20 = *(int *)(v12 + 24);
  v21 = &v10[v20];
  v22 = &v11[v20];
  v23 = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v23;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v10, 0, 1, v12);
LABEL_7:
  v25 = v51[6];
  v26 = a1 + v25;
  v27 = (int *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 4) = *((_BYTE *)v27 + 4);
  *(_DWORD *)v26 = v28;
  v29 = v51[7];
  v30 = a1 + v29;
  v31 = (int *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 4) = *((_BYTE *)v31 + 4);
  *(_DWORD *)v30 = v32;
  v33 = v51[8];
  v34 = a1 + v33;
  v35 = (int *)(a2 + v33);
  v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)v34 = v36;
  v37 = v51[9];
  v38 = a1 + v37;
  v39 = (int *)(a2 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)v38 = v40;
  return a1;
}

uint64_t sub_1001EEDB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1000039AC(&qword_1003755E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[8];
  v27 = a3[9];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a1 + v27;
  v31 = a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  return a1;
}

uint64_t sub_1001EEF40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v43 = a3;
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v42 = *(_QWORD *)(v12 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v36 = *(int *)(v12 + 20);
      v37 = &v10[v36];
      v38 = &v11[v36];
      *(_DWORD *)v37 = *(_DWORD *)v38;
      v37[4] = v38[4];
      v39 = *(int *)(v12 + 24);
      v40 = &v10[v39];
      v41 = &v11[v39];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      goto LABEL_7;
    }
    sub_100004030((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v22 = sub_1000039AC(&qword_1003755E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  v16 = *(int *)(v12 + 20);
  v17 = &v10[v16];
  v18 = &v11[v16];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  v19 = *(int *)(v12 + 24);
  v20 = &v10[v19];
  v21 = &v11[v19];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v10, 0, 1, v12);
LABEL_7:
  v23 = v43[6];
  v24 = v43[7];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = v43[8];
  v30 = v43[9];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = a1 + v30;
  v34 = a2 + v30;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  return a1;
}

uint64_t sub_1001EF16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EF178);
}

uint64_t sub_1001EF178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013E9C4(a1, a2, a3, &qword_1003755E0);
}

uint64_t sub_1001EF184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EF190);
}

uint64_t sub_1001EF190(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EA54(a1, a2, a3, a4, &qword_1003755E0);
}

void sub_1001EF19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EF1B8(a1, a2, a3, (unint64_t *)&unk_100377E68, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, (uint64_t)&unk_1002E57C0);
}

void sub_1001EF1B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[6];

  v10 = type metadata accessor for UnknownStorage(319);
  if (v11 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v10 - 8) + 64;
    sub_10001198C(319, a4, a5);
    if (v13 <= 0x3F)
    {
      v14[1] = *(_QWORD *)(v12 - 8) + 64;
      v14[2] = &unk_1002E57C0;
      v14[3] = &unk_1002E57C0;
      v14[4] = &unk_1002E57C0;
      v14[5] = a6;
      swift_initStructMetadata(a1, 256, 6, v14, a1 + 16);
    }
  }
}

uint64_t *sub_1001EF268(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  char *v39;
  char *v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1000039AC(&qword_1003755E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      v19 = *(int *)(v12 + 24);
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v22 = a3[6];
    v23 = a3[7];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = a3[8];
    v29 = a3[9];
    v30 = (char *)a1 + v28;
    v31 = (char *)a2 + v28;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = (char *)a1 + v29;
    v33 = (char *)a2 + v29;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = a3[10];
    v35 = a3[11];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    v38 = *(_DWORD *)v37;
    v36[4] = v37[4];
    *(_DWORD *)v36 = v38;
    v39 = (char *)a1 + v35;
    v40 = (char *)a2 + v35;
    v39[4] = v40[4];
    *(_DWORD *)v39 = *(_DWORD *)v40;
  }
  return a1;
}

