uint64_t sub_1000C91B4(int a1, int a2, uint64_t a3, int a4)
{
  mach_port_t v8;
  uint64_t input[4];

  v8 = sub_1000C3BBC();
  if (v8)
  {
    input[0] = a1;
    input[1] = a2;
    input[2] = a3;
    input[3] = a4;
    return IOConnectCallMethod(v8, 5u, input, 4u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_system_with_passcode", ":", 950, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000C92B8(int a1, int a2)
{
  return sub_1000C91B4(a1, a2, 0, 0);
}

uint64_t sub_1000C92C4(int a1, uint64_t a2, unsigned int a3)
{
  return sub_1000C92E4(a1, a2, a3);
}

uint64_t sub_1000C92D8(int a1, uint64_t a2, unsigned int a3)
{
  return sub_1000C92E4(a1, a2, a3);
}

uint64_t sub_1000C92E4(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  mach_port_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  mach_port_t v13;
  void *v14;
  unsigned int inputStructCnt[3];
  uint64_t input[2];

  v6 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  v7 = sub_1000C3BBC();
  if (v7)
  {
    v13 = v7;
    input[0] = a1;
    input[1] = a3;
    sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 3, v8, v9, v10, v11, v12, a2);
    if (*(_QWORD *)&inputStructCnt[1])
    {
      v6 = IOConnectCallMethod(v13, 0x41u, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, 0, 0);
      v14 = *(void **)&inputStructCnt[1];
    }
    else
    {
      v14 = 0;
      v6 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_keybag_for_volume_with_cookie_persona", ":", 987, "", 0, "", "");
    v14 = 0;
  }
  free(v14);
  return v6;
}

uint64_t sub_1000C944C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, size_t *a5)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  uint64_t v18;
  void *v19;
  size_t __count;
  unsigned int inputStructCnt[3];
  uint64_t input[2];
  _BYTE __src[32768];

  v10 = 3758097085;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(__src, 0x8000uLL);
  __count = 0x8000;
  v11 = sub_1000C3BBC();
  if (v11)
  {
    v17 = v11;
    input[0] = a2;
    input[1] = a3;
    sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 1, v12, v13, v14, v15, v16, a1);
    if (*(_QWORD *)&inputStructCnt[1])
    {
      v18 = IOConnectCallMethod(v17, 0x6Eu, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
      if ((_DWORD)v18)
      {
        v10 = v18;
      }
      else
      {
        v19 = calloc(__count, 1uLL);
        *a4 = v19;
        if (v19)
        {
          memcpy(v19, __src, __count);
          v10 = 0;
          *a5 = __count;
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_enable_volume", ":", 1014, "", 0, "", "");
    v10 = 3758097084;
  }
  free(*(void **)&inputStructCnt[1]);
  return v10;
}

uint64_t sub_1000C95FC(uint64_t a1)
{
  uint64_t v2;
  mach_port_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  mach_port_t v9;
  char *v10;
  int v12;
  char *v13;

  v2 = 3758097084;
  v13 = 0;
  v12 = 0;
  v3 = sub_1000C3BBC();
  if (v3)
  {
    v9 = v3;
    sub_1000D72A4(&v13, (unsigned int *)&v12, 1, v4, v5, v6, v7, v8, a1);
    if (v13)
    {
      v2 = IOConnectCallMethod(v9, 0x6Fu, 0, 0, v13, v12, 0, 0, 0, 0);
      v10 = v13;
    }
    else
    {
      v10 = 0;
      v2 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_disable_volume", ":", 1044, "", 0, "", "");
    v10 = 0;
  }
  free(v10);
  return v2;
}

uint64_t sub_1000C9700(uint64_t a1, void *a2)
{
  uint64_t v4;
  mach_port_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  mach_port_t v11;
  char *v12;
  size_t v14;
  int v15;
  char *v16;

  v4 = 3758097084;
  v16 = 0;
  v15 = 0;
  v14 = 16;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    v11 = v5;
    sub_1000D72A4(&v16, (unsigned int *)&v15, 1, v6, v7, v8, v9, v10, a1);
    if (v16)
    {
      v4 = IOConnectCallMethod(v11, 0x70u, 0, 0, v16, v15, 0, 0, a2, &v14);
      v12 = v16;
    }
    else
    {
      v12 = 0;
      v4 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_copy_current_bag_uuid", ":", 1066, "", 0, "", "");
    v12 = 0;
  }
  free(v12);
  return v4;
}

uint64_t sub_1000C9814(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, void *a7)
{
  uint64_t v13;
  mach_port_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  mach_port_t v20;
  void *v21;
  size_t v23;
  unsigned int inputStructCnt[3];
  uint64_t input[3];

  v13 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  v14 = sub_1000C3BBC();
  if (v14)
  {
    v20 = v14;
    v21 = 0;
    v13 = 3758097090;
    if (a2 && a7)
    {
      input[0] = a4;
      input[1] = a5;
      input[2] = a6;
      sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 2, v15, v16, v17, v18, v19, a1);
      v23 = 108;
      v13 = IOConnectCallMethod(v20, 0x71u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, a7, &v23);
      v21 = *(void **)&inputStructCnt[1];
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_rewrap_key", ":", 1087, "", 0, "", "");
    v21 = 0;
  }
  free(v21);
  return v13;
}

uint64_t sub_1000C9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, void *outputStruct)
{
  uint64_t v15;
  mach_port_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  mach_port_t v22;
  void *v23;
  size_t v25;
  unsigned int inputStructCnt[3];
  uint64_t input[3];

  v15 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  v16 = sub_1000C3BBC();
  if (v16)
  {
    v22 = v16;
    v23 = 0;
    v15 = 3758097090;
    if (a2 && a4 && outputStruct)
    {
      input[0] = a6;
      input[1] = a7;
      input[2] = a8;
      sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 3, v17, v18, v19, v20, v21, a1);
      v25 = 108;
      v15 = IOConnectCallMethod(v22, 0x71u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, outputStruct, &v25);
      v23 = *(void **)&inputStructCnt[1];
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_rewrap_ek", ":", 1113, "", 0, "", "");
    v23 = 0;
  }
  free(v23);
  return v15;
}

uint64_t sub_1000C9B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[5];
  uint64_t v14;
  __int128 __s;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = 0u;
  v18 = 0u;
  __s = 0u;
  v16 = 0u;
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v8 = sub_1000C6834(a1, a2, v13);
  if ((_DWORD)v8)
  {
    v9 = v8;
  }
  else
  {
    v9 = sub_1000C6A44((uint64_t)v13, a3, a4, (uint64_t)&__s);
    if (!(_DWORD)v9)
    {
      v10 = v16;
      *a5 = __s;
      a5[1] = v10;
      v11 = v18;
      a5[2] = v17;
      a5[3] = v11;
    }
  }
  memset_s(v13, 0x58uLL, 0, 0x58uLL);
  memset_s(&__s, 0x40uLL, 0, 0x40uLL);
  return sub_1000D29FC(v9);
}

uint64_t sub_1000C9C14(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4;
  _OWORD v6[5];
  uint64_t v7;

  v7 = 0;
  memset(v6, 0, sizeof(v6));
  v4 = sub_1000C6834(a1, a2, v6);
  if (!(_DWORD)v4)
    uuid_copy(a3, (const unsigned __int8 *)v6 + 8);
  memset_s(v6, 0x58uLL, 0, 0x58uLL);
  return sub_1000D29FC(v4);
}

uint64_t sub_1000C9CBC(__int128 *a1, _QWORD *a2, unsigned int a3, _QWORD *a4, _QWORD *a5)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unsigned int v10;
  int __s;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = a1[1];
  v12 = *a1;
  v13 = v6;
  v7 = a1[3];
  v14 = a1[2];
  v15 = v7;
  v10 = *a5;
  __s = 1;
  v8 = sub_1000D3028((uint64_t)&__s, 0, 0, a2, a3, a4, &v10);
  *a5 = v10;
  memset_s(&__s, 0x44uLL, 0, 0x44uLL);
  return sub_1000D29FC(v8);
}

uint64_t sub_1000C9D78(uint64_t a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t input[2];

  v10 = 3758097084;
  v11 = sub_1000C3BBC();
  if (v11)
  {
    v10 = 3758097090;
    if (a2 && a4)
    {
      input[0] = a1;
      input[1] = 64;
      return IOConnectCallMethod(v11, 0x82u, input, 2u, a2, a3, 0, 0, a4, a5);
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_unwrap_key", ":", 1193, "", 0, "", "");
  }
  return v10;
}

uint64_t sub_1000C9E90(int a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t input;

  v10 = 3758097084;
  v11 = sub_1000C3BBC();
  if (v11)
  {
    v10 = 3758097090;
    if (a2 && a4)
    {
      input = a1;
      return IOConnectCallMethod(v11, 0x81u, &input, 1u, a2, a3, 0, 0, a4, a5);
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_wrap_key", ":", 1212, "", 0, "", "");
  }
  return v10;
}

uint64_t sub_1000C9FA8(int a1, _DWORD *a2)
{
  uint64_t v4;
  mach_port_t v5;
  uint32_t outputCnt;
  uint64_t output;
  uint64_t input;

  v4 = 3758097084;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    if (a2)
    {
      output = 0;
      input = a1;
      outputCnt = 1;
      v4 = IOConnectCallMethod(v5, 0x83u, &input, 1u, 0, 0, &output, &outputCnt, 0, 0);
      if (!(_DWORD)v4)
        *a2 = output;
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_get_handle", ":", 1231, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_1000CA0C0(int a1, unsigned __int8 *a2)
{
  uint64_t v4;
  mach_port_t v5;
  uint64_t v6;
  size_t v8;
  unsigned __int8 src[8];
  uint64_t v10;
  uint64_t input;

  v4 = 3758097084;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    if (a2)
    {
      v10 = 0;
      input = a1;
      v8 = 16;
      *(_QWORD *)src = 0;
      v6 = IOConnectCallMethod(v5, 0x84u, &input, 1u, 0, 0, 0, 0, src, &v8);
      if ((_DWORD)v6)
      {
        return v6;
      }
      else if (v8 == 16)
      {
        uuid_copy(a2, src);
        return 0;
      }
      else
      {
        return 3758604298;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_get_uuid", ":", 1253, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_1000CA204(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, _OWORD *a6)
{
  int v7;
  int v9;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  void **v17;

  v17 = 0;
  if (a5)
  {
    v7 = a4;
    v9 = a2;
    *a5 = -1;
    v11 = sub_1000C9B28((uint64_t)a1, a2, a3, a4, a6);
    if (!v11)
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s Unwrapped DER backup bag%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1302, "", 0, "", "");
      v15 = 0;
      goto LABEL_9;
    }
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unwrap backup bag as DER: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1290, "", 0, "", v11, "");
    v12 = sub_1000C80C8(a1, v9, a5);
    if ((_DWORD)v12)
    {
      v15 = v12;
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s Failed to load in-kernel backup bag: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1292, "", 0, "", v12, "");
    }
    else
    {
      v13 = sub_1000C772C(*a5, (uint64_t *)&v17);
      v14 = *a5;
      if (v13)
      {
        v15 = sub_1000C79EC(v14, a3, v7, v17);
        if (!(_DWORD)v15)
          goto LABEL_9;
        fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unlock in-kernel backup bag with prederived secret: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":");
      }
      else
      {
        v15 = sub_1000C7AB4(v14, a3, v7);
        if (!(_DWORD)v15)
          goto LABEL_9;
        fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unlock in-kernel backup bag: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":");
      }
    }
  }
  else
  {
    v15 = 3758097090;
  }
  if (*a5 != -1)
  {
    sub_1000C82AC(*a5);
    *a5 = -1;
  }
LABEL_9:
  sub_1000C7228(v17);
  return v15;
}

uint64_t sub_1000CA430(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  mach_port_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  mach_port_t v15;
  char *v16;
  int v18;
  char *v19;
  uint64_t input[3];

  v8 = 3758097084;
  v19 = 0;
  v18 = 0;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    v15 = v9;
    input[0] = a1;
    input[1] = a2;
    input[2] = a3;
    sub_1000D72A4(&v19, (unsigned int *)&v18, 1, v10, v11, v12, v13, v14, a4);
    if (v19)
    {
      v8 = IOConnectCallMethod(v15, 0x60u, input, 3u, v19, v18, 0, 0, 0, 0);
      v16 = v19;
    }
    else
    {
      v16 = 0;
      v8 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_create", ":", 1324, "", 0, "", "");
    v16 = 0;
  }
  free(v16);
  return v8;
}

uint64_t sub_1000CA580(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  void *v18;
  unsigned int inputStructCnt[3];
  uint64_t input[4];

  v10 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  v11 = sub_1000C3BBC();
  if (v11)
  {
    v17 = v11;
    input[0] = a1;
    input[1] = a2;
    input[2] = a3;
    input[3] = a5;
    sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 1, v12, v13, v14, v15, v16, a4);
    if (*(_QWORD *)&inputStructCnt[1])
    {
      v10 = IOConnectCallMethod(v17, 0x75u, input, 4u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, 0, 0);
      v18 = *(void **)&inputStructCnt[1];
    }
    else
    {
      v18 = 0;
      v10 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_create_with_flags", ":", 1346, "", 0, "", "");
    v18 = 0;
  }
  free(v18);
  return v10;
}

uint64_t sub_1000CA6E0(int a1, _QWORD *a2, size_t *a3)
{
  uint64_t v6;
  mach_port_t v7;
  uint64_t v8;
  void *v9;
  size_t v10;
  size_t __count;
  uint64_t input;
  _BYTE __src[8192];

  bzero(__src, 0x2000uLL);
  __count = 0x2000;
  input = a1;
  v6 = 3758097090;
  if (a2 && a3)
  {
    v7 = sub_1000C3BBC();
    if (v7)
    {
      v8 = IOConnectCallMethod(v7, 0x61u, &input, 1u, 0, 0, 0, 0, __src, &__count);
      if ((_DWORD)v8)
      {
        v6 = v8;
      }
      else
      {
        if (__count)
        {
          v9 = calloc(__count, 1uLL);
          *a2 = v9;
          if (!v9)
          {
            v6 = 3758097085;
            goto LABEL_10;
          }
          memcpy(v9, __src, __count);
          v10 = __count;
        }
        else
        {
          v10 = 0;
          *a2 = 0;
        }
        v6 = 0;
        *a3 = v10;
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_list", ":", 1372, "", 0, "", "");
      v6 = 3758097084;
    }
  }
LABEL_10:
  memset_s(__src, 0x2000uLL, 0, 0x2000uLL);
  return v6;
}

uint64_t sub_1000CA888(int a1, uint64_t a2)
{
  uint64_t v4;
  mach_port_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  mach_port_t v11;
  char *v12;
  int v14;
  char *v15;
  uint64_t input;

  v4 = 3758097084;
  v15 = 0;
  v14 = 0;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    v11 = v5;
    input = a1;
    sub_1000D72A4(&v15, (unsigned int *)&v14, 1, v6, v7, v8, v9, v10, a2);
    if (v15)
    {
      v4 = IOConnectCallMethod(v11, 0x62u, &input, 1u, v15, v14, 0, 0, 0, 0);
      v12 = v15;
    }
    else
    {
      v12 = 0;
      v4 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_delete", ":", 1394, "", 0, "", "");
    v12 = 0;
  }
  free(v12);
  return v4;
}

uint64_t sub_1000CA9C4(int a1, uint64_t a2, int a3, unsigned int a4, void *a5, size_t *a6)
{
  uint64_t v12;
  mach_port_t v13;
  uint64_t input[4];

  v12 = 3758097084;
  v13 = sub_1000C3BBC();
  if (v13)
  {
    v12 = 3758097090;
    if (a5 && a6)
    {
      input[0] = a1;
      input[1] = a4;
      input[2] = a2;
      input[3] = a3;
      return IOConnectCallMethod(v13, 0x26u, input, 4u, 0, 0, 0, 0, a5, a6);
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_auth_token_create", ":", 1415, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_1000CAAF4(int a1, uint64_t a2, int a3, const __CFDictionary *a4)
{
  uint64_t v8;
  mach_port_t v9;
  mach_port_t v10;
  CFTypeID TypeID;
  CFTypeID v12;
  CFTypeID v13;
  CFTypeID v14;
  CFTypeID v15;
  CFTypeID v16;
  CFTypeID v17;
  CFTypeID v18;
  CFTypeID v19;
  void *v21;
  rsize_t __n;
  void *__s;
  uint64_t input[3];

  __n = 0;
  __s = 0;
  v8 = 3758097090;
  v21 = 0;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    v10 = v9;
    TypeID = CFNumberGetTypeID();
    if (!sub_1000CAE2C(a4, CFSTR("GracePeriod"), TypeID, (uint64_t)off_1002A0D58, &v21))
    {
      v12 = CFNumberGetTypeID();
      if (!sub_1000CAE2C(a4, CFSTR("BackOffDelay"), v12, (uint64_t)off_1002A0D60, &v21))
      {
        v13 = CFNumberGetTypeID();
        if (!sub_1000CAE2C(a4, CFSTR("MaxUnlockAttempts"), v13, (uint64_t)off_1002A0D68, &v21))
        {
          v14 = CFNumberGetTypeID();
          if (!sub_1000CAE2C(a4, CFSTR("EscrowPasscodePeriod"), v14, (uint64_t)off_1002A0D70, &v21))
          {
            v15 = CFNumberGetTypeID();
            if (!sub_1000CAE2C(a4, CFSTR("EscrowTokenPeriod"), v15, (uint64_t)off_1002A0D78, &v21))
            {
              v16 = CFDataGetTypeID();
              if (!sub_1000CAE2C(a4, CFSTR("UserUUID"), v16, (uint64_t)off_1002A0F60, &v21))
              {
                v17 = CFDataGetTypeID();
                if (!sub_1000CAE2C(a4, CFSTR("BindKEKToKB"), v17, (uint64_t)off_1002A0FA0, &v21))
                {
                  v18 = CFBooleanGetTypeID();
                  if (!sub_1000CAE2C(a4, CFSTR("InactivityRebootEnabled"), v18, (uint64_t)off_1002A1178, &v21))
                  {
                    v19 = CFBooleanGetTypeID();
                    if (!sub_1000CAE2C(a4, CFSTR("OnenessAutomaticMode"), v19, (uint64_t)off_1002A1180, &v21)&& !sub_1000D4F04(&v21)&& (!a2 || !sub_1000D4624(&v21, (uint64_t)off_1002A0C00, a2, a3))&& !sub_1000D42E4(&v21, &__s, &__n))
                    {
                      input[0] = a1;
                      input[1] = (uint64_t)__s;
                      input[2] = __n;
                      v8 = IOConnectCallMethod(v10, 0x1Eu, input, 3u, 0, 0, 0, 0, 0, 0);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_configuration", ":", 1488, "", 0, "", "");
    v8 = 3758097084;
  }
  sub_1000D3C14(&v21);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v8;
}

uint64_t sub_1000CAE2C(const __CFDictionary *a1, const void *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  _BOOL4 v9;
  const UInt8 *BytePtr;
  CFIndex Length;
  uint64_t v12;
  void *value;

  value = 0;
  result = CFDictionaryGetValueIfPresent(a1, a2, (const void **)&value);
  if ((_DWORD)result)
  {
    if (CFGetTypeID(value) == a3)
    {
      if (CFNumberGetTypeID() == a3)
      {
        v12 = 0;
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberSInt64Type, &v12)
          || sub_1000D49E0(a5, a4, v12))
        {
          return 0xFFFFFFFFLL;
        }
        return 0;
      }
      if (CFBooleanGetTypeID() == a3)
      {
        v9 = CFBooleanGetValue((CFBooleanRef)value) != 0;
        if (sub_1000D487C(a5, a4, v9))
          return 0xFFFFFFFFLL;
      }
      else
      {
        if (CFDataGetTypeID() != a3)
          return 0xFFFFFFFFLL;
        BytePtr = CFDataGetBytePtr((CFDataRef)value);
        Length = CFDataGetLength((CFDataRef)value);
        if (sub_1000D4624(a5, a4, (uint64_t)BytePtr, Length))
          return 0xFFFFFFFFLL;
      }
      return 0;
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_1000CAF30(int a1, __CFDictionary **a2)
{
  uint64_t v4;
  mach_port_t v5;
  mach_port_t v6;
  uint64_t v7;
  __CFDictionary *Mutable;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CFTypeID TypeID;
  CFTypeID v19;
  CFTypeID v20;
  CFTypeID v21;
  CFTypeID v22;
  CFTypeID v23;
  CFTypeID v24;
  CFTypeID v25;
  CFTypeID v26;
  CFTypeID v27;
  CFTypeID v28;
  CFTypeID v29;
  CFTypeID v30;
  CFTypeID v31;
  CFTypeID v32;
  char v33;
  CFBooleanRef v34;
  CFBooleanRef v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __CFDictionary **v44;
  __int128 v45;
  uint64_t v46;
  void **v47;
  size_t v48;
  void *v49;
  _QWORD v50[74];
  uint64_t input;
  _BYTE outputStruct[32768];

  v4 = 3758097084;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    if (a2)
    {
      v6 = v5;
      bzero(outputStruct, 0x8000uLL);
      v48 = 0x8000;
      input = a1;
      v7 = IOConnectCallMethod(v6, 0x1Fu, &input, 1u, 0, 0, 0, 0, outputStruct, &v48);
      if ((_DWORD)v7)
      {
        return v7;
      }
      else if (v48 > 0x8000)
      {
        return 3758604298;
      }
      else
      {
        Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
        v9 = &outputStruct[v48];
        bzero(v50, 0x250uLL);
        v49 = off_1002A0D58;
        v50[4] = off_1002A0D60;
        v50[9] = off_1002A0D68;
        v50[14] = off_1002A0D70;
        v50[19] = off_1002A0D78;
        v50[24] = off_1002A0D80;
        v50[29] = off_1002A0F60;
        v50[34] = off_1002A0F98;
        v50[39] = off_1002A0FA8;
        v50[44] = off_1002A0FB0;
        v50[49] = off_1002A0FB8;
        v50[54] = off_1002A1138;
        v50[59] = off_1002A1140;
        v50[64] = off_1002A1170;
        v50[69] = off_1002A1168;
        v45 = xmmword_1002167A0;
        v46 = 0;
        v47 = &v49;
        sub_1000D3708((uint64_t)outputStruct, (uint64_t)v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v45);
        v10 = v50[0];
        v11 = v50[5];
        v12 = v50[10];
        v13 = v50[15];
        v14 = v50[20];
        v15 = v50[25];
        v16 = v50[30];
        v44 = a2;
        v17 = v50[35];
        v37 = v50[40];
        v38 = v50[45];
        v39 = v50[50];
        v40 = v50[55];
        v41 = v50[60];
        v42 = v50[65];
        v43 = v50[70];
        TypeID = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("GracePeriod"), TypeID, v10, (uint64_t)v9);
        v19 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("BackOffDelay"), v19, v11, (uint64_t)v9);
        v20 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("MaxUnlockAttempts"), v20, v12, (uint64_t)v9);
        v21 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("EscrowPasscodePeriod"), v21, v13, (uint64_t)v9);
        v22 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("EscrowTokenPeriod"), v22, v14, (uint64_t)v9);
        v23 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("ConfigFlags"), v23, v15, (uint64_t)v9);
        v24 = CFDataGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("UserUUID"), v24, v16, (uint64_t)v9);
        v25 = CFDataGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("GroupUUID"), v25, v17, (uint64_t)v9);
        v26 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("RecoveryIterations"), v26, v37, (uint64_t)v9);
        v27 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("RecoveryFlags"), v27, v38, (uint64_t)v9);
        v28 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("RecoveryTargetIterations"), v28, v39, (uint64_t)v9);
        v29 = CFBooleanGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("MementoSupported"), v29, v40, (uint64_t)v9);
        v30 = CFBooleanGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("MementoBlobExists"), v30, v41, (uint64_t)v9);
        v31 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("MementoPasscodeGeneration"), v31, v42, (uint64_t)v9);
        v32 = CFNumberGetTypeID();
        sub_1000CB4A8(Mutable, CFSTR("PasscodeGeneration"), v32, v43, (uint64_t)v9);
        v33 = sub_1000D3920(v15, (uint64_t)v9);
        if ((v33 & 2) != 0)
          v34 = kCFBooleanTrue;
        else
          v34 = kCFBooleanFalse;
        CFDictionarySetValue(Mutable, CFSTR("InactivityRebootEnabled"), v34);
        if ((v33 & 8) != 0)
          v35 = kCFBooleanTrue;
        else
          v35 = kCFBooleanFalse;
        CFDictionarySetValue(Mutable, CFSTR("OnenessAutomaticMode"), v35);
        v4 = 0;
        *v44 = Mutable;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_configuration", ":", 1556, "", 0, "", "");
  }
  return v4;
}

void sub_1000CB4A8(__CFDictionary *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CFNumberRef v10;
  _BOOL4 v11;
  const void **v12;
  const UInt8 *v13;
  CFNumberRef v14;
  CFIndex valuePtr;

  if (a4)
  {
    if (CFNumberGetTypeID() == a3)
    {
      valuePtr = sub_1000D3920(a4, a5);
      v10 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt64Type, &valuePtr);
      if (!v10)
        return;
LABEL_12:
      v14 = v10;
      CFDictionaryAddValue(a1, a2, v10);
      CFRelease(v14);
      return;
    }
    if (CFBooleanGetTypeID() == a3)
    {
      v11 = sub_1000D3BBC(a4, a5);
      v12 = (const void **)&kCFBooleanTrue;
      if (!v11)
        v12 = (const void **)&kCFBooleanFalse;
      CFDictionaryAddValue(a1, a2, *v12);
    }
    else if (CFDataGetTypeID() == a3)
    {
      valuePtr = 0;
      v13 = (const UInt8 *)ccder_decode_tl(4, &valuePtr, a4, a5);
      if (v13)
      {
        v10 = CFDataCreate(kCFAllocatorDefault, v13, valuePtr);
        goto LABEL_12;
      }
    }
  }
}

uint64_t sub_1000CB5DC(int a1, unsigned int a2, uint64_t a3)
{
  mach_port_t v3;
  uint64_t input[3];

  input[0] = a2;
  input[1] = a3;
  input[2] = a1;
  v3 = sub_1000C3BBC();
  if (v3)
    return IOConnectCallMethod(v3, 0x1Au, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_hold", ":", 1654, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CB6BC(int a1, unsigned int a2)
{
  mach_port_t v2;
  uint64_t input[2];

  input[0] = a2;
  input[1] = a1;
  v2 = sub_1000C3BBC();
  if (v2)
    return IOConnectCallMethod(v2, 0x1Bu, input, 2u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_drop", ":", 1672, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CB798(int a1, unsigned int a2)
{
  mach_port_t v4;
  uint64_t input[2];

  v4 = sub_1000C3BBC();
  if (v4)
  {
    input[0] = a2;
    input[1] = a1;
    return IOConnectCallMethod(v4, 0x64u, input, 2u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_promote", ":", 1687, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000CB884(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x91u, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_oneness_heartbeat", ":", 1707, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CB95C(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x65u, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_consume", ":", 1722, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CBA34(int a1, uint64_t a2)
{
  mach_port_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  mach_port_t v10;
  uint64_t v11;
  void *v12;
  int v14;
  void *v15;
  uint64_t input[3];

  v15 = 0;
  v14 = 0;
  v4 = sub_1000C3BBC();
  if (v4)
  {
    v10 = v4;
    sub_1000D72A4((char **)&v15, (unsigned int *)&v14, 3, v5, v6, v7, v8, v9, a2);
    input[0] = a1;
    input[1] = (uint64_t)v15;
    input[2] = v14;
    v11 = IOConnectCallMethod(v10, 0x12u, input, 3u, 0, 0, 0, 0, 0, 0);
    v12 = v15;
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_recover_with_escrow_bag", ":", 1739, "", 0, "", "");
    v12 = 0;
    v11 = 3758097084;
  }
  free(v12);
  return v11;
}

uint64_t sub_1000CBB94(const void *a1, int a2, _QWORD *a3, _DWORD *a4)
{
  uint64_t v8;
  mach_port_t v9;
  uint64_t v10;
  void *v11;
  size_t __count;
  _BYTE __src[32768];

  v8 = 3758097090;
  bzero(__src, 0x8000uLL);
  __count = 0x8000;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    if (a1 && a3 && a4)
    {
      v10 = IOConnectCallMethod(v9, 0x29u, 0, 0, a1, a2, 0, 0, __src, &__count);
      if ((_DWORD)v10)
      {
        v8 = v10;
      }
      else
      {
        v11 = calloc(__count, 1uLL);
        *a3 = v11;
        if (v11)
        {
          memcpy(v11, __src, __count);
          v8 = 0;
          *a4 = __count;
        }
        else
        {
          v8 = 3758097085;
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fdr_hmac_data", ":", 1758, "", 0, "", "");
    v8 = 3758097084;
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  return v8;
}

uint64_t sub_1000CBD30(int a1, unsigned int a2, _DWORD *a3)
{
  mach_port_t v6;
  uint64_t result;
  uint32_t outputCnt;
  uint64_t output;
  uint64_t input[2];

  v6 = sub_1000C3BBC();
  if (v6)
  {
    input[0] = a1;
    input[1] = a2;
    output = 0;
    outputCnt = 1;
    result = IOConnectCallMethod(v6, 0x28u, input, 2u, 0, 0, &output, &outputCnt, 0, 0);
    if (a3)
    {
      if (!(_DWORD)result)
        *a3 = output;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_generation", ":", 1781, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_1000CBE44(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v9;
  mach_port_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  mach_port_t v16;
  const char *v17;
  void *v18;
  int v20;
  void *v21;
  uint64_t input[4];

  v9 = 3758097084;
  v21 = 0;
  v20 = 0;
  v10 = sub_1000C3BBC();
  if (v10)
  {
    v16 = v10;
    if (a2)
      v17 = a2;
    else
      v17 = "";
    sub_1000D72A4((char **)&v21, (unsigned int *)&v20, 2, v11, v12, v13, v14, v15, (uint64_t)v17);
    if (v21)
    {
      input[0] = a1;
      input[1] = a6;
      input[2] = (uint64_t)v21;
      input[3] = v20;
      v9 = IOConnectCallMethod(v16, 0x2Au, input, 4u, 0, 0, 0, 0, 0, 0);
      v18 = v21;
    }
    else
    {
      v18 = 0;
      v9 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_aks_verify_password", ":", 1807, "", 0, "", "");
    v18 = 0;
  }
  free(v18);
  return v9;
}

uint64_t sub_1000CBFCC(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000CBE44(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_1000CBFD4(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000CBE44(a1, a2, a3, a4, a5, 1u);
}

uint64_t sub_1000CBFDC(mach_port_t a1, uintptr_t a2)
{
  io_connect_t v4;

  v4 = sub_1000C3BBC();
  if (v4)
    return IOConnectSetNotificationPort(v4, 0, a1, a2);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_register_for_notifications", ":", 1840, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CC084(int a1, int a2, _QWORD *a3, size_t *a4)
{
  uint64_t result;
  mach_port_t v7;
  void *v8;
  size_t __count;
  uint64_t input[2];
  _OWORD __src[16];

  __count = 256;
  input[0] = a1;
  input[1] = a2;
  result = 3758097090;
  if (a3 && a4)
  {
    v7 = sub_1000C3BBC();
    if (v7)
    {
      memset(__src, 0, sizeof(__src));
      result = IOConnectCallMethod(v7, 0x31u, input, 2u, 0, 0, 0, 0, __src, &__count);
      if (!(_DWORD)result)
      {
        if (__count > 0x100)
        {
          return 3758604298;
        }
        else
        {
          v8 = calloc(__count, 1uLL);
          *a3 = v8;
          if (v8)
          {
            memcpy(v8, __src, __count);
            result = 0;
            *a4 = __count;
          }
          else
          {
            return 3758097085;
          }
        }
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_create_signing_key", ":", 1859, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_1000CC214(int a1, int a2, const void *a3, size_t a4, _QWORD *a5, size_t *a6)
{
  uint64_t result;
  mach_port_t v11;
  mach_port_t v12;
  void *v13;
  size_t __count;
  uint64_t input[2];
  _BYTE __src[32768];

  __count = 0x8000;
  input[0] = a1;
  input[1] = a2;
  result = 3758097090;
  if (a5 && a6)
  {
    v11 = sub_1000C3BBC();
    if (v11)
    {
      v12 = v11;
      bzero(__src, 0x8000uLL);
      result = IOConnectCallMethod(v12, 0x31u, input, 2u, a3, a4, 0, 0, __src, &__count);
      if (!(_DWORD)result)
      {
        if (__count > 0x8000)
        {
          return 3758604298;
        }
        else
        {
          v13 = calloc(__count, 1uLL);
          *a5 = v13;
          if (v13)
          {
            memcpy(v13, __src, __count);
            result = 0;
            *a6 = __count;
          }
          else
          {
            return 3758097085;
          }
        }
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_create_signing_key_with_params", ":", 1881, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_1000CC3BC(int a1)
{
  return sub_1000CC3D4(a1, 0x6Du, 0, 0, 0, 0);
}

uint64_t sub_1000CC3D4(int a1, uint32_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, size_t *a6)
{
  mach_port_t v9;
  mach_port_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  size_t v14;
  size_t __count;
  uint64_t input[3];
  _BYTE __src[15360];

  __count = 15360;
  input[0] = a1;
  input[1] = a3;
  input[2] = a4;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    v10 = v9;
    bzero(__src, 0x3C00uLL);
    v11 = IOConnectCallMethod(v10, a2, input, 3u, 0, 0, 0, 0, __src, &__count);
    if ((_DWORD)v11)
    {
      return v11;
    }
    else if (__count > 0x3C00)
    {
      return 3758604298;
    }
    else
    {
      v12 = 0;
      if (a5 && a6)
      {
        if (__count)
        {
          v13 = calloc(__count, 1uLL);
          *a5 = v13;
          if (!v13)
            return 3758097085;
          memcpy(v13, __src, __count);
          v14 = __count;
        }
        else
        {
          v14 = 0;
        }
        v12 = 0;
        *a6 = v14;
      }
    }
  }
  else
  {
    v12 = 3758097084;
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "remote_session_operate", ":", 2017, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_1000CC58C(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, _QWORD *a8, size_t *a9)
{
  uint64_t v9;
  mach_port_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  mach_port_t v18;
  uint64_t v19;
  void *v20;
  unsigned int inputStructCnt[3];
  size_t __count;
  uint64_t input[3];
  _OWORD __src[16];

  memset(__src, 0, sizeof(__src));
  __count = 256;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  input[0] = a1;
  input[1] = a2;
  v9 = 3758097090;
  input[2] = a5;
  if (a8 && a9)
  {
    v12 = sub_1000C3BBC();
    if (v12)
    {
      v18 = v12;
      sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 2, v13, v14, v15, v16, v17, a3);
      if (*(_QWORD *)&inputStructCnt[1])
      {
        v19 = IOConnectCallMethod(v18, 0x32u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
        if ((_DWORD)v19)
        {
          v9 = v19;
        }
        else if (__count > 0x100)
        {
          v9 = 3758604298;
        }
        else
        {
          v20 = calloc(__count, 1uLL);
          *a8 = v20;
          v9 = 3758097085;
          if (v20)
          {
            memcpy(v20, __src, __count);
            v9 = 0;
            *a9 = __count;
          }
        }
      }
      else
      {
        v9 = 3758097085;
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_sign_signing_key", ":", 1911, "", 0, "", "");
      v9 = 3758097084;
    }
  }
  free(*(void **)&inputStructCnt[1]);
  return v9;
}

uint64_t sub_1000CC78C(int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  uint64_t v18;
  uint32_t outputCnt;
  unsigned int inputStructCnt[3];
  uint64_t output;
  uint64_t input[2];

  v10 = 3758097084;
  input[0] = a2;
  input[1] = a1;
  output = 0;
  outputCnt = 1;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  v11 = sub_1000C3BBC();
  if (v11)
  {
    v17 = v11;
    sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 3, v12, v13, v14, v15, v16, a3);
    if (*(_QWORD *)&inputStructCnt[1])
    {
      v18 = IOConnectCallMethod(v17, 0x2Cu, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], &output, &outputCnt, 0, 0);
      v10 = v18;
      if (a9 && !(_DWORD)v18)
        *a9 = output;
    }
    else
    {
      v10 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_session", ":", 1938, "", 0, "", "");
  }
  free(*(void **)&inputStructCnt[1]);
  return v10;
}

uint64_t sub_1000CC904(int a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v8;
  uint64_t v11;
  void *v12;
  rsize_t __smax;
  rsize_t __n;
  uint64_t v16;
  void *v17;
  void *__s;
  __int128 v19;

  v17 = 0;
  __s = 0;
  v4 = 3758097084;
  __n = 0;
  v16 = 0;
  v5 = 3758097090;
  __smax = 0;
  if (!a3 || !a4)
    goto LABEL_12;
  v8 = -536870212;
  *(_QWORD *)&v19 = a3;
  *((_QWORD *)&v19 + 1) = a3 + a4;
  if (!(a3 + a4))
    goto LABEL_19;
  v16 = 0;
  if ((ccder_blob_decode_range(&v19, 0x2000000000000010, &v19) & 1) == 0)
  {
    v8 = -536870198;
LABEL_19:
    syslog(3, "error parsing signing key: %d", v8);
    v5 = 3758097084;
LABEL_12:
    v12 = __s;
    v4 = v5;
    goto LABEL_13;
  }
  sub_1000D664C(&v19, 0x8000000000000001, &v16);
  if (v16)
  {
    v5 = sub_1000CC3D4(a1, 0x74u, a3, a4, 0, 0);
    if ((_DWORD)v5)
      syslog(3, "error: validating v1 local signing key failed: %d");
    goto LABEL_12;
  }
  v11 = sub_1000CC084(a1, 11, &__s, &__n);
  if ((_DWORD)v11)
  {
    v5 = v11;
    syslog(3, "error: validating (create) v0 local signing key failed: %d", v11);
    goto LABEL_12;
  }
  v12 = __s;
  if (__s && __n)
  {
    v5 = sub_1000CC58C(a1, a2, a3, a4, 11, (uint64_t)__s, __n, &v17, &__smax);
    if ((_DWORD)v5)
      syslog(3, "error: validating (sign) v0 local signing key failed: %d");
    goto LABEL_12;
  }
LABEL_13:
  if (v12)
  {
    memset_s(v12, __n, 0, __n);
    free(__s);
  }
  if (v17)
  {
    memset_s(v17, __smax, 0, __smax);
    free(v17);
  }
  return v4;
}

uint64_t sub_1000CCAD8(int a1, uint64_t a2, uint64_t a3, _QWORD *a4, size_t *a5)
{
  return sub_1000CC3D4(a1, 0x2Du, a2, a3, a4, a5);
}

uint64_t sub_1000CCAF0(int a1, uint64_t a2, uint64_t a3, _QWORD *a4, size_t *a5)
{
  return sub_1000CC3D4(a1, 0x2Eu, a2, a3, a4, a5);
}

uint64_t sub_1000CCB08(int a1, uint64_t a2, int a3, _QWORD *a4, size_t *a5)
{
  return sub_1000CC3D4(a1, 0x94u, a2, a3, a4, a5);
}

uint64_t sub_1000CCB24(int a1, _QWORD *a2, size_t *a3)
{
  return sub_1000CC3D4(a1, 0x30u, 0, 0, a2, a3);
}

uint64_t sub_1000CCB3C(int a1, _QWORD *a2, size_t *a3)
{
  return sub_1000CC3D4(a1, 0x38u, 0, 0, a2, a3);
}

uint64_t sub_1000CCB54(int a1, _QWORD *a2, _DWORD *a3)
{
  mach_port_t v6;
  mach_port_t v7;
  uint64_t result;
  void *v9;
  size_t __count;
  uint64_t input[2];
  _BYTE __src[32768];

  v6 = sub_1000C3BBC();
  if (v6)
  {
    v7 = v6;
    result = 3758097090;
    if (a2)
    {
      if (a3)
      {
        bzero(__src, 0x8000uLL);
        __count = 0x8000;
        input[0] = a1;
        input[1] = 0;
        result = IOConnectCallMethod(v7, 0x14u, input, 2u, 0, 0, 0, 0, __src, &__count);
        if (!(_DWORD)result)
        {
          if (__count)
          {
            v9 = calloc(__count, 1uLL);
            *a2 = v9;
            if (v9)
            {
              memcpy(v9, __src, __count);
              result = 0;
              *a3 = __count;
            }
            else
            {
              return 3758097085;
            }
          }
          else
          {
            return 3758097136;
          }
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drain_backup_keys", ":", 2072, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_1000CCCEC(int a1, _QWORD *a2, size_t *a3)
{
  mach_port_t v6;
  mach_port_t v7;
  uint64_t result;
  void *v9;
  size_t __count;
  uint64_t input[2];
  _BYTE __src[32768];

  v6 = sub_1000C3BBC();
  if (v6)
  {
    v7 = v6;
    result = 3758097090;
    if (a2)
    {
      if (a3)
      {
        bzero(__src, 0x8000uLL);
        __count = 0x8000;
        input[0] = a1;
        input[1] = 1;
        result = IOConnectCallMethod(v7, 0x14u, input, 2u, 0, 0, 0, 0, __src, &__count);
        if (!(_DWORD)result)
        {
          if (__count)
          {
            if (__ROR8__(0xEF7BDEF7BDEF7BDFLL * __count, 2) > 0x210842108421084uLL)
            {
              return 3758604298;
            }
            else
            {
              v9 = calloc(__count, 1uLL);
              *a2 = v9;
              if (v9)
              {
                memcpy(v9, __src, __count);
                result = 0;
                *a3 = __count / 0x7C;
              }
              else
              {
                return 3758097085;
              }
            }
          }
          else
          {
            return 3758097136;
          }
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drain_backup_keys_info", ":", 2100, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_1000CCEE0(int a1)
{
  mach_port_t v2;
  uint64_t input;

  v2 = sub_1000C3BBC();
  if (v2)
  {
    input = a1;
    return IOConnectCallMethod(v2, 0x16u, &input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_clear_backup_bag", ":", 2129, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000CCFC4(int a1, int a2, uint64_t a3, int a4, _QWORD *a5, _DWORD *a6)
{
  mach_port_t v12;
  mach_port_t v13;
  _BYTE *outputStruct;
  size_t *p_count;
  uint64_t v16;
  uint64_t result;
  void *v18;
  size_t __count;
  uint64_t input[5];
  _BYTE __src[32768];

  v12 = sub_1000C3BBC();
  if (!v12)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_backup_bag", ":", 2146, "", 0, "", "");
    return 3758097084;
  }
  v13 = v12;
  if (a5)
  {
    if (!a6)
      return 3758097090;
    outputStruct = __src;
    p_count = &__count;
    v16 = 1;
  }
  else
  {
    p_count = 0;
    outputStruct = 0;
    v16 = 0;
  }
  bzero(__src, 0x8000uLL);
  __count = 0x8000;
  input[0] = a1;
  input[1] = a2;
  input[2] = v16;
  input[3] = a3;
  input[4] = a4;
  result = IOConnectCallMethod(v13, 0x15u, input, 5u, 0, 0, 0, 0, outputStruct, p_count);
  if (a5 && !(_DWORD)result)
  {
    v18 = calloc(__count, 1uLL);
    *a5 = v18;
    if (v18)
    {
      memcpy(v18, __src, __count);
      result = 0;
      *a6 = __count;
    }
    else
    {
      return 3758097085;
    }
  }
  return result;
}

uint64_t sub_1000CD198(int a1, _DWORD *a2)
{
  uint64_t v4;
  mach_port_t v5;
  uint32_t outputCnt;
  uint64_t output;
  uint64_t input;

  v4 = 3758097084;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    if (a2)
    {
      output = 0;
      input = a1;
      outputCnt = 1;
      v4 = IOConnectCallMethod(v5, 0x52u, &input, 1u, 0, 0, &output, &outputCnt, 0, 0);
      if (!(_DWORD)v4)
        *a2 = output;
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_make_public_backup_bag", ":", 2178, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_1000CD2B0(int a1)
{
  return sub_1000CC3D4(a1, 0x34u, 0, 0, 0, 0);
}

uint64_t sub_1000CD2C8()
{
  return sub_1000CC3D4(0, 0x40u, 0, 0, 0, 0);
}

uint64_t sub_1000CD2E4(int a1, uint64_t a2)
{
  return sub_1000CD2F0(a1, 0x11u, a2);
}

uint64_t sub_1000CD2F0(int a1, uint32_t a2, uint64_t a3)
{
  uint64_t v5;
  mach_port_t v6;
  mach_port_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  int v12[2];
  __int128 __s;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  _BYTE outputStruct[4096];
  uint64_t input;

  input = a1;
  *(_QWORD *)v12 = 4096;
  v5 = 3758097084;
  v18 = 0;
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  __s = 0u;
  v6 = sub_1000C3BBC();
  if (v6)
  {
    if (a3)
    {
      v7 = v6;
      bzero(outputStruct, 0x1000uLL);
      v8 = IOConnectCallMethod(v7, a2, &input, 1u, 0, 0, 0, 0, outputStruct, (size_t *)v12);
      if ((_DWORD)v8)
      {
        return v8;
      }
      else
      {
        v5 = 0;
        if (!sub_1000D55C8((uint64_t)outputStruct, v12[0], (char *)&__s))
        {
          v9 = v16;
          *(_OWORD *)(a3 + 32) = v15;
          *(_OWORD *)(a3 + 48) = v9;
          *(_WORD *)(a3 + 64) = v17;
          v10 = v14;
          *(_OWORD *)a3 = __s;
          *(_OWORD *)(a3 + 16) = v10;
        }
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_get_device_state", ":", 2224, "", 0, "", "");
  }
  return v5;
}

uint64_t sub_1000CD484(int a1, uint64_t a2)
{
  return sub_1000CD2F0(a1, 0x23u, a2);
}

uint64_t sub_1000CD490(int a1, const void *a2, size_t a3, _DWORD *a4)
{
  uint64_t v7;
  mach_port_t v8;
  mach_port_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int128 v17;
  uint64_t v18;
  void **v19;
  size_t v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t input;
  _BYTE outputStruct[4096];

  v7 = 3758097084;
  v20 = 4096;
  input = a1;
  v8 = sub_1000C3BBC();
  if (v8)
  {
    if (a4)
    {
      v9 = v8;
      bzero(outputStruct, 0x1000uLL);
      memset_s(a4, 0x10uLL, 0, 0x10uLL);
      v10 = IOConnectCallMethod(v9, 0x39u, &input, 1u, a2, a3, 0, 0, outputStruct, &v20);
      if ((_DWORD)v10)
      {
        return v10;
      }
      else
      {
        v11 = &outputStruct[v20];
        v26 = 0;
        v30 = 0u;
        v22 = 0u;
        v23 = 0u;
        v25 = 0u;
        v28 = 0u;
        v29 = 0u;
        v31 = 0u;
        v32 = 0;
        v21 = off_1002A0EA0;
        v24 = (unint64_t)off_1002A0EA8;
        v27 = off_1002A0EB0;
        *(_QWORD *)&v30 = off_1002A0EB8;
        v17 = xmmword_1002167B0;
        v18 = 0;
        v19 = &v21;
        sub_1000D3708((uint64_t)outputStruct, (uint64_t)&outputStruct[v20], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v17);
        v12 = *((_QWORD *)&v24 + 1);
        v13 = v28;
        v14 = *((_QWORD *)&v30 + 1);
        *a4 = sub_1000D3920(v22, (uint64_t)v11);
        a4[1] = sub_1000D3920(v12, (uint64_t)v11);
        a4[2] = sub_1000D3920(v13, (uint64_t)v11);
        v15 = sub_1000D3920(v14, (uint64_t)v11);
        v7 = 0;
        a4[3] = v15;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_peer_get_state", ":", 2255, "", 0, "", "");
  }
  return v7;
}

uint64_t sub_1000CD6F4(int a1, const void *a2, size_t a3)
{
  mach_port_t v5;
  uint64_t input;

  input = a1;
  v5 = sub_1000C3BBC();
  if (v5)
    return IOConnectCallMethod(v5, 0x3Au, &input, 1u, a2, a3, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_peer_drop", ":", 2292, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CD7DC(int a1, int a2)
{
  mach_port_t v3;
  uint32_t v4;
  uint64_t input;

  input = a1;
  v3 = sub_1000C3BBC();
  if (v3)
  {
    if (a2)
      v4 = 32;
    else
      v4 = 8;
    return IOConnectCallMethod(v3, v4, &input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lock_device", ":", 2307, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000CD8CC(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x8Du, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lock_cx", ":", 2327, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CD9A4(int a1, uint64_t a2, int a3)
{
  mach_port_t v3;
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  v3 = sub_1000C3BBC();
  if (v3)
    return IOConnectCallMethod(v3, 9u, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unlock_device", ":", 2342, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CDA84()
{
  mach_port_t v0;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x13u, 0, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_obliterate_class_d", ":", 2355, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CDB28(int a1, unsigned int a2, uint64_t a3, unsigned int a4, const void *a5, int a6)
{
  mach_port_t v12;
  uint64_t input[4];

  v12 = sub_1000C3BBC();
  if (v12)
  {
    input[0] = a1;
    input[1] = a2;
    input[2] = a3;
    input[3] = a4;
    return IOConnectCallMethod(v12, 0x3Fu, input, 4u, a5, a6, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_migrate_s_key", ":", 2367, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000CDC3C(int a1, uint64_t a2, uint64_t a3, unsigned int a4, const void *a5, size_t a6, _QWORD *a7, size_t *a8)
{
  mach_port_t v12;
  mach_port_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  size_t v17;
  size_t __count;
  _BYTE __src[2048];
  uint64_t input[4];

  input[0] = a1;
  input[1] = a4;
  input[2] = a2;
  input[3] = a3;
  __count = 2048;
  v12 = sub_1000C3BBC();
  if (v12)
  {
    v13 = v12;
    bzero(__src, 0x800uLL);
    v14 = IOConnectCallMethod(v13, 0x3Bu, input, 4u, a5, a6, 0, 0, __src, &__count);
    if ((_DWORD)v14)
    {
      return v14;
    }
    else if (__count > 0x800)
    {
      return 3758604298;
    }
    else
    {
      v15 = 0;
      if (a7 && a8)
      {
        if (__count)
        {
          v16 = calloc(__count, 1uLL);
          *a7 = v16;
          if (!v16)
            return 3758097085;
          memcpy(v16, __src, __count);
          v17 = __count;
        }
        else
        {
          v17 = 0;
        }
        v15 = 0;
        *a8 = v17;
      }
    }
  }
  else
  {
    v15 = 3758097084;
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_register", ":", 2388, "", 0, "", "");
  }
  return v15;
}

uint64_t sub_1000CDDE8(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x3Cu, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_unregister", ":", 2412, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CDEC0(int a1, const void *a2, size_t a3, _QWORD *a4, size_t *a5)
{
  mach_port_t v9;
  mach_port_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  size_t v14;
  size_t __count;
  _BYTE __src[2048];
  uint64_t input;

  input = a1;
  __count = 2048;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    v10 = v9;
    bzero(__src, 0x800uLL);
    v11 = IOConnectCallMethod(v10, 0x3Du, &input, 1u, a2, a3, 0, 0, __src, &__count);
    if ((_DWORD)v11)
    {
      return v11;
    }
    else if (__count > 0x800)
    {
      return 3758604298;
    }
    else
    {
      v12 = 0;
      if (a4 && a5)
      {
        if (__count)
        {
          v13 = calloc(__count, 1uLL);
          *a4 = v13;
          if (!v13)
            return 3758097085;
          memcpy(v13, __src, __count);
          v14 = __count;
        }
        else
        {
          v14 = 0;
        }
        v12 = 0;
        *a5 = v14;
      }
    }
  }
  else
  {
    v12 = 3758097084;
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_request_unlock", ":", 2429, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_1000CE064(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, size_t *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  mach_port_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  size_t v19;
  size_t __count;
  unsigned int inputStructCnt[3];
  _BYTE __src[2048];
  uint64_t input;

  input = a1;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(__src, 0x800uLL);
  __count = 2048;
  sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 2, v10, v11, v12, v13, v14, a2);
  if (!*(_QWORD *)&inputStructCnt[1])
  {
    v17 = 3758097085;
    goto LABEL_12;
  }
  v15 = sub_1000C3BBC();
  if (!v15)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_unlock", ":", 2460, "", 0, "", "");
    v17 = 3758097084;
    goto LABEL_12;
  }
  v16 = IOConnectCallMethod(v15, 0x3Eu, &input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
  if ((_DWORD)v16)
  {
    v17 = v16;
    goto LABEL_12;
  }
  if (__count > 0x800)
  {
    v17 = 3758604298;
    goto LABEL_12;
  }
  v17 = 0;
  if (a6 && a7)
  {
    if (!__count)
    {
      v19 = 0;
      goto LABEL_11;
    }
    v18 = calloc(__count, 1uLL);
    *a6 = v18;
    v17 = 3758097085;
    if (v18)
    {
      memcpy(v18, __src, __count);
      v19 = __count;
LABEL_11:
      v17 = 0;
      *a7 = v19;
    }
  }
LABEL_12:
  free(*(void **)&inputStructCnt[1]);
  return v17;
}

uint64_t sub_1000CE248(unint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t result;

  result = 0xFFFFFFFFLL;
  if (a3 && a4)
  {
    if (sub_1000CE290((uint64_t)off_1002A0EC8, 0, a1, a2, a3, a4))
      return 0xFFFFFFFFLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1000CE290(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  result = 0xFFFFFFFFLL;
  if (a6)
  {
    if (a3)
    {
      if (a4)
      {
        if (a5)
        {
          v9 = a3 + a4;
          if (a3 + a4 > a3)
          {
            v21 = 0u;
            v20 = 0u;
            v19 = a1;
            v16 = xmmword_1002167C0;
            v17 = 0;
            v18 = &v19;
            sub_1000D3708(a3, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v16);
            if (a2)
            {
              if (*a6 == 8)
              {
                v12 = sub_1000D3920(v20, v9);
                result = 0;
                *a5 = v12;
                return result;
              }
              return 0xFFFFFFFFLL;
            }
            v15 = 0;
            v13 = ccder_decode_tl(4, &v15, v20, v9);
            if (!v13)
              return 0xFFFFFFFFLL;
            v14 = v13;
            result = 0;
            *a5 = v14;
            *a6 = v15;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000CE3B8(unint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t result;

  result = 0xFFFFFFFFLL;
  if (a3 && a4)
  {
    if (sub_1000CE290((uint64_t)off_1002A0EF8, 0, a1, a2, a3, a4))
      return 0xFFFFFFFFLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1000CE400(unint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v5 = 8;
  if (!a3)
    return 0xFFFFFFFFLL;
  v6 = 0;
  result = sub_1000CE290((uint64_t)off_1002A0EE0, 1, a1, a2, &v6, &v5);
  if ((_DWORD)result)
    return 0xFFFFFFFFLL;
  *a3 = v6;
  return result;
}

uint64_t sub_1000CE46C(unint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v5 = 8;
  if (!a3)
    return 0xFFFFFFFFLL;
  v6 = 0;
  result = sub_1000CE290((uint64_t)off_1002A0ED8, 1, a1, a2, &v6, &v5);
  if ((_DWORD)result)
    return 0xFFFFFFFFLL;
  *a3 = v6;
  return result;
}

uint64_t sub_1000CE4D8(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x47u, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_fail", ":", 2589, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CE5B0(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x49u, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_set_healthy", ":", 2605, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CE688(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CE690(a1, a2, a3, 0x45u);
}

uint64_t sub_1000CE690(int a1, uint64_t a2, uint64_t a3, uint32_t a4)
{
  mach_port_t v5;
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  v5 = sub_1000C3BBC();
  if (v5)
    return IOConnectCallMethod(v5, a4, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "__aks_se_set_secret", ":", 2621, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CE778(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CE690(a1, a2, a3, 0x8Cu);
}

uint64_t sub_1000CE780(int a1, uint64_t a2, uint64_t a3)
{
  mach_port_t v3;
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  v3 = sub_1000C3BBC();
  if (v3)
    return IOConnectCallMethod(v3, 0x46u, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_recover", ":", 2649, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CE85C(int a1, uint64_t a2, uint64_t a3)
{
  mach_port_t v3;
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  v3 = sub_1000C3BBC();
  if (v3)
    return IOConnectCallMethod(v3, 0x69u, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_change_secret_epilogue", ":", 2665, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CE938(int a1, uint64_t a2, uint64_t a3, _QWORD *a4, _BYTE *a5)
{
  mach_port_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void **v20;
  rsize_t __n;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _BYTE __s[4096];
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  bzero(__s, 0x1000uLL);
  __n = 4096;
  v7 = sub_1000C3BBC();
  if (!v7)
  {
    v15 = 3758097084;
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_token_for_memento_secret", ":", 2683, "", 0, "", "");
    goto LABEL_12;
  }
  v8 = IOConnectCallMethod(v7, 0x48u, input, 3u, 0, 0, 0, 0, __s, &__n);
  if ((_DWORD)v8)
  {
    v15 = v8;
    goto LABEL_12;
  }
  if (__n - 4097 < 0xFFFFFFFFFFFFF000)
  {
    v15 = 3758604298;
    goto LABEL_12;
  }
  v9 = &__s[__n];
  v27 = 0;
  v26 = 0u;
  v24 = 0u;
  v23 = 0u;
  v22 = off_1002A0F50;
  v25 = (unint64_t)off_1002A0F58;
  v18 = xmmword_1002167D0;
  v19 = 0;
  v20 = &v22;
  sub_1000D3708((uint64_t)__s, (uint64_t)&__s[__n], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v18);
  v10 = *((_QWORD *)&v25 + 1);
  if ((_QWORD)v23)
  {
    v17 = 0;
    v11 = ccder_decode_tl(4, &v17, v23, v9);
    if (v17 != 16)
    {
LABEL_11:
      v15 = 0;
      goto LABEL_12;
    }
    v12 = v11;
    v13 = calloc(0x10uLL, 1uLL);
    *a4 = v13;
    if (!v13)
    {
      v15 = 3758097085;
      goto LABEL_12;
    }
    __memcpy_chk(v13, v12, v17, 16);
  }
  if (!v10)
    goto LABEL_11;
  v14 = sub_1000D3920(v10, (uint64_t)v9);
  if (v14 > 0xFF)
    goto LABEL_11;
  v15 = 0;
  *a5 = v14;
LABEL_12:
  memset_s(__s, __n, 0, __n);
  return v15;
}

uint64_t sub_1000CEBA4(int a1, _QWORD *a2, _BYTE *a3)
{
  return sub_1000CE938(a1, 0, 0, a2, a3);
}

uint64_t sub_1000CEBB8(int a1, const void *a2, size_t a3)
{
  mach_port_t v5;
  size_t v6;
  uint64_t input;

  input = a1;
  v5 = sub_1000C3BBC();
  if (v5)
  {
    if (a2)
      v6 = a3;
    else
      v6 = 0;
    return IOConnectCallMethod(v5, 0x58u, &input, 1u, a2, v6, 0, 0, 0, 0);
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_set_nonce", ":", 2737, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_1000CECA4(int a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v9;
  mach_port_t v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  void *v14;
  size_t v15;
  size_t __n;
  int __s;
  char v19;
  _BYTE v20[3];
  uint64_t input;

  input = a1;
  bzero(&__s, 0x1000uLL);
  __n = 4096;
  v9 = 3758097090;
  if (a2)
  {
    if (a3)
    {
      v9 = 3758097090;
      if (a4)
      {
        if (a5)
        {
          v10 = sub_1000C3BBC();
          if (v10)
          {
            v11 = IOConnectCallMethod(v10, 0x5Au, &input, 1u, 0, 0, 0, 0, &__s, &__n);
            if ((_DWORD)v11)
            {
              v9 = v11;
            }
            else if (__n - 4097 < 0xFFFFFFFFFFFFF005)
            {
              v9 = 3758604298;
            }
            else
            {
              v12 = calloc(5uLL, 1uLL);
              *a4 = v12;
              if (v12)
              {
                *a5 = 5;
                v13 = __s;
                v12[4] = v19;
                *(_DWORD *)v12 = v13;
                v14 = calloc(__n - 5, 1uLL);
                *a2 = v14;
                v9 = 3758097085;
                if (v14)
                {
                  v15 = __n;
                  *a3 = __n - 5;
                  memcpy(v14, v20, v15);
                  v9 = 0;
                }
              }
              else
              {
                v9 = 3758097085;
              }
            }
          }
          else
          {
            fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_sig", ":", 2759, "", 0, "", "");
            v9 = 3758097084;
          }
        }
      }
    }
  }
  memset_s(&__s, __n, 0, __n);
  return v9;
}

uint64_t sub_1000CEEB4(int a1, _QWORD *a2, size_t *a3)
{
  size_t v5;
  uint64_t v6;
  mach_port_t v7;
  uint64_t v8;
  void *v9;
  size_t __count;
  _BYTE __src[4096];
  uint64_t input;

  input = a1;
  v5 = 4096;
  bzero(__src, 0x1000uLL);
  __count = 4096;
  v6 = 3758097090;
  if (a2 && a3)
  {
    v7 = sub_1000C3BBC();
    if (v7)
    {
      v8 = IOConnectCallMethod(v7, 0x59u, &input, 1u, 0, 0, 0, 0, __src, &__count);
      v5 = __count;
      if ((_DWORD)v8)
      {
        v6 = v8;
      }
      else if (__count - 4097 < 0xFFFFFFFFFFFFF000)
      {
        v6 = 3758604298;
      }
      else
      {
        v9 = calloc(__count, 1uLL);
        *a2 = v9;
        v5 = __count;
        if (v9)
        {
          *a3 = __count;
          memcpy(v9, __src, v5);
          v6 = 0;
          v5 = __count;
        }
        else
        {
          v6 = 3758097085;
        }
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_pubkey", ":", 2791, "", 0, "", "");
      v5 = 4096;
      v6 = 3758097084;
    }
  }
  memset_s(__src, v5, 0, v5);
  return v6;
}

uint64_t sub_1000CF074(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x5Bu, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_delete_reset_token", ":", 2815, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CF14C(unsigned int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x5Eu, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_support_in_rm", ":", 2832, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CF224(BOOL *a1)
{
  mach_port_t v2;
  uint64_t result;
  uint32_t outputCnt;
  uint64_t output;

  output = 0;
  outputCnt = 1;
  v2 = sub_1000C3BBC();
  if (v2)
  {
    result = IOConnectCallMethod(v2, 0x6Bu, 0, 0, 0, 0, &output, &outputCnt, 0, 0);
    if (a1)
    {
      if (!(_DWORD)result)
        *a1 = output != 0;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_support_in_rm_is_set", ":", 2848, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_1000CF324()
{
  mach_port_t v0;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x5Fu, 0, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_stage_stash", ":", 2865, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000CF3C8(_QWORD *a1)
{
  return sub_1000C4D8C(0, 0x19u, 0, 0, 0, a1, 0);
}

uint64_t sub_1000CF3E8(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  return sub_1000C4FD4(a1, 0, a2, a3, a4, 0, a5);
}

uint64_t sub_1000CF404(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v6;
  mach_port_t v7;
  mach_port_t v8;
  uint64_t v9;
  __int128 v11;
  int v12[2];
  _BYTE __s[4096];
  uint64_t v14;

  bzero(__s, 0x1000uLL);
  *(_QWORD *)&v11 = __s;
  *((_QWORD *)&v11 + 1) = &v14;
  *(_QWORD *)v12 = 4096;
  v6 = 3758097090;
  if (a2 && a3)
  {
    v7 = sub_1000C3BBC();
    if (v7)
    {
      v8 = v7;
      if (sub_1000D51B4(&v11, a2) && sub_1000D52CC(&v11, a1))
      {
        v6 = 3758097098;
        if (ccder_blob_encode_tl(&v11, 0x2000000000000010, (char *)&v14 - *((_QWORD *)&v11 + 1)))
        {
          v9 = IOConnectCallMethod(v8, 0x55u, 0, 0, *((const void **)&v11 + 1), (size_t)&v14 - *((_QWORD *)&v11 + 1), 0, 0, __s, (size_t *)v12);
          if (!(_DWORD)v9)
            v9 = sub_1000D5B0C((uint64_t)__s, *(uint64_t *)v12, a3);
          v6 = v9;
        }
      }
      else
      {
        v6 = 3758097098;
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_get_blob_state", ":", 2900, "", 0, "", "");
      v6 = 3758097084;
    }
  }
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v6;
}

uint64_t sub_1000CF5D8(__int128 *a1, char *a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v7 = 0;
  v6[0] = &v7;
  v6[1] = 1;
  v4 = 0uLL;
  v5 = 0;
  if (a1)
  {
    v4 = *a1;
    v5 = *((_QWORD *)a1 + 2);
    v2 = *((_QWORD *)&v4 + 1) | 0x10;
  }
  else
  {
    v2 = 16;
  }
  *((_QWORD *)&v4 + 1) = v2;
  return sub_1000CF404((uint64_t)&v4, v6, a2);
}

uint64_t sub_1000CF640(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v5;
  mach_port_t v6;
  mach_port_t v7;
  __int128 v9;
  uint32_t outputCnt;
  _BYTE __s[4096];
  uint64_t output;
  uint64_t input;

  v5 = 3758097098;
  output = 0;
  input = a2;
  outputCnt = 1;
  bzero(__s, 0x1000uLL);
  *(_QWORD *)&v9 = __s;
  *((_QWORD *)&v9 + 1) = &output;
  if (a3)
  {
    v6 = sub_1000C3BBC();
    if (v6)
    {
      v7 = v6;
      if (sub_1000D52CC(&v9, a1))
      {
        if (ccder_blob_encode_tl(&v9, 0x2000000000000010, (char *)&output - *((_QWORD *)&v9 + 1)))
        {
          v5 = IOConnectCallMethod(v7, 0x4Eu, &input, 1u, *((const void **)&v9 + 1), (size_t)&output - *((_QWORD *)&v9 + 1), &output, &outputCnt, 0, 0);
          if (!(_DWORD)v5)
            *a3 = output;
        }
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_get_size", ":", 2943, "", 0, "", "");
      v5 = 3758097084;
    }
  }
  else
  {
    v5 = 3758097090;
  }
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v5;
}

uint64_t sub_1000CF7DC(uint64_t a1, unsigned int a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  mach_port_t v10;
  mach_port_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  size_t v16;
  _BYTE __s[4096];
  uint64_t input;

  input = a2;
  bzero(__s, 0x1000uLL);
  *(_QWORD *)&v15 = __s;
  *((_QWORD *)&v15 + 1) = &input;
  v16 = 4096;
  v9 = 3758097090;
  if (a3 && a4)
  {
    v10 = sub_1000C3BBC();
    if (!v10)
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_import", ":", 2971, "", 0, "", "");
      v9 = 3758097084;
      goto LABEL_14;
    }
    v11 = v10;
    if (!ccder_blob_encode_body_tl(&v15, 4, 16, a4)
      || !sub_1000D51B4(&v15, a3)
      || !sub_1000D52CC(&v15, a1)
      || !ccder_blob_encode_tl(&v15, 0x2000000000000010, (char *)&input - *((_QWORD *)&v15 + 1)))
    {
      goto LABEL_12;
    }
    v12 = IOConnectCallMethod(v11, 0x4Fu, &input, 1u, *((const void **)&v15 + 1), (size_t)&input - *((_QWORD *)&v15 + 1), 0, 0, __s, &v16);
    if ((_DWORD)v12)
    {
      v9 = v12;
      goto LABEL_14;
    }
    *(_QWORD *)&v14 = __s;
    *((_QWORD *)&v14 + 1) = &__s[v16];
    if (!ccder_blob_decode_range(&v14, 0x2000000000000010, &v14))
      goto LABEL_12;
    if (!a5)
    {
      v9 = 0;
      goto LABEL_14;
    }
    v9 = 0;
    if ((sub_1000D5220(&v14, 0, a5) & 1) == 0)
LABEL_12:
      v9 = 3758097098;
  }
LABEL_14:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v9;
}

uint64_t sub_1000CFA0C(uint64_t *a1)
{
  return sub_1000CF640(0, 2u, a1);
}

uint64_t sub_1000CFA1C(uint64_t *a1)
{
  return sub_1000CF640(0, 1u, a1);
}

uint64_t sub_1000CFA2C(unsigned int a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C46AC(0, a1, a2, a3, a4);
}

uint64_t sub_1000CFA44(_QWORD *a1, _QWORD *a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  return sub_1000C4B30(0, a1, a2, a3, a4, a5);
}

uint64_t sub_1000CFA60(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];

  v5[0] = 0;
  v5[1] = 2;
  v5[2] = 0;
  return sub_1000C395C((uint64_t)v5, a1, a2, a3, a4, 0);
}

uint64_t sub_1000CFAA0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[3];

  v3 = 130;
  if ((a1 & 6) == 0)
    v3 = 2;
  v5[0] = 0;
  v5[1] = v3;
  v5[2] = 0;
  return sub_1000C395C((uint64_t)v5, 0, 0, a2, a3, 0);
}

uint64_t sub_1000CFAEC(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1000C4D8C(0, 3u, 0, a1, a2, a3, a4);
}

uint64_t sub_1000CFB0C(_QWORD *a1, BOOL *a2)
{
  uint64_t result;
  _QWORD v4[3];
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  memset(v4, 0, sizeof(v4));
  v9 = 0;
  v7 = 0u;
  v8 = 0u;
  v6 = 0u;
  memset(v5, 0, sizeof(v5));
  if (!a2)
    return 3758097090;
  result = sub_1000CF404((uint64_t)v4, a1, (char *)v5);
  if (!(_DWORD)result)
  {
    if (LODWORD(v5[0]) == 1)
    {
      result = 0;
      *a2 = (DWORD1(v6) & 0x8000000) != 0;
    }
    else
    {
      return 3758604312;
    }
  }
  return result;
}

uint64_t sub_1000CFBC4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  return sub_1000C4D8C(0, 0x12u, 4uLL, a1, a2, a3, 0);
}

uint64_t sub_1000CFBE4(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, unsigned int a5)
{
  return sub_1000C4FD4(0, a5, a1, a2, a3, a4, 0);
}

uint64_t sub_1000CFC08(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;
  _BYTE v16[4096];
  _BYTE v17[4096];
  _QWORD v18[2];

  v10 = 3758097098;
  bzero(v17, 0x1000uLL);
  bzero(v16, 0x1000uLL);
  *(_QWORD *)&v15 = v17;
  *((_QWORD *)&v15 + 1) = v18;
  *(_QWORD *)&v14 = v16;
  *((_QWORD *)&v14 + 1) = v17;
  if (sub_1000D51B4(&v15, a2)
    && sub_1000D51B4(&v15, a3)
    && ccder_blob_encode_tl(&v15, 0x2000000000000010, (char *)v18 - *((_QWORD *)&v15 + 1))
    && sub_1000D51B4(&v14, a4)
    && sub_1000D51B4(&v14, a5)
    && ccder_blob_encode_tl(&v14, 0x2000000000000010, &v17[-*((_QWORD *)&v14 + 1)]))
  {
    v13[0] = *((_QWORD *)&v15 + 1);
    v13[1] = (char *)v18 - *((_QWORD *)&v15 + 1);
    v12[0] = *((_QWORD *)&v14 + 1);
    v12[1] = &v17[-*((_QWORD *)&v14 + 1)];
    return sub_1000C4D8C(a1, 0x10u, 0, v13, v12, 0, 0);
  }
  return v10;
}

uint64_t sub_1000CFD98(uint64_t a1)
{
  return sub_1000C4D8C(a1, 0x11u, 0, 0, 0, 0, 0);
}

uint64_t sub_1000CFDB4(uint64_t a1)
{
  _QWORD v2[2];
  _QWORD v3[3];
  uint64_t v4;

  v4 = a1;
  memset(v3, 0, sizeof(v3));
  v2[0] = &v4;
  v2[1] = 16;
  return sub_1000C4D8C((uint64_t)v3, 0x1Cu, 0, v2, 0, 0, 0);
}

uint64_t sub_1000CFE04(uint64_t a1, BOOL *a2, _BYTE *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _BYTE *v11;
  unint64_t v12;
  _QWORD v13[3];
  _BYTE *v14;
  uint64_t v15;
  _BYTE v16[16384];

  bzero(v16, 0x4000uLL);
  v14 = v16;
  v15 = 0x4000;
  result = sub_1000C4D8C(a1, 0x1Au, 0, 0, 0, 0, (uint64_t)&v14);
  if (!(_DWORD)result)
  {
    memset(v13, 0, 21);
    v11 = &v14[v15];
    v12 = 0;
    v7 = ccder_decode_sequence_tl(&v11);
    if (v7 && (v8 = ccder_decode_tl(4, &v12, v7, v11)) != 0)
    {
      if (v12 >= 0x15)
        v9 = 21;
      else
        v9 = v12;
      __memcpy_chk(v13, v8, v9, 21);
      if (a2)
      {
        if (v13[1])
          v10 = 1;
        else
          v10 = HIDWORD(v13[0]) != 0;
        *a2 = v10;
      }
      if (a3)
        *a3 = v13[2];
      return 0;
    }
    else
    {
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_1000CFF5C()
{
  return sub_1000C4D8C(0, 7u, 0, 0, 0, 0, 0);
}

uint64_t sub_1000CFF7C(int a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = 8;
  if (a1)
    v3 = 12;
  v6 = 0;
  v7 = v3;
  v8 = 0;
  v4 = sub_1000C4D8C((uint64_t)&v6, 7u, 0, a2, a3, 0, 0);
  syslog(6, "aks_fv_prot_cmd_stash_kek(%llu) = %d", v7, v4);
  return v4;
}

uint64_t sub_1000CFFF4()
{
  uint64_t v0;

  v0 = sub_1000C4D8C(0, 0xDu, 0, 0, 0, 0, 0);
  syslog(6, "aks_fv_prot_cmd_stash_commit = %d", v0);
  return v0;
}

uint64_t sub_1000D0050()
{
  uint64_t v0;

  v0 = sub_1000C4D8C(0, 8u, 0, 0, 0, 0, 0);
  syslog(6, "aks_fv_prot_cmd_stash_destroy = %d", v0);
  return v0;
}

uint64_t sub_1000D00AC(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  return sub_1000C4FD4(0, 0, a1, a2, a3, a4, 0);
}

uint64_t sub_1000D00CC(_QWORD *a1)
{
  return sub_1000C4D8C(0, 0xBu, 0, 0, a1, 0, 0);
}

uint64_t sub_1000D00EC(unsigned int a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v10;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  unsigned int inputStructCnt[3];
  size_t __count;
  _BYTE __src[32768];
  uint64_t input;

  v10 = 3758097084;
  input = a1;
  bzero(__src, 0x8000uLL);
  __count = 0x8000;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  if (a6)
  {
    v11 = sub_1000C3BBC();
    if (v11)
    {
      v17 = v11;
      if (a4)
        v18 = a4;
      else
        v18 = "";
      sub_1000D72A4((char **)&inputStructCnt[1], inputStructCnt, 2, v12, v13, v14, v15, v16, (uint64_t)v18);
      v19 = IOConnectCallMethod(v17, 0x50u, &input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
      if ((_DWORD)v19)
      {
        v10 = v19;
      }
      else
      {
        v20 = calloc(__count, 1uLL);
        *a6 = v20;
        if (v20)
        {
          memcpy(v20, __src, __count);
          v10 = 0;
          *a7 = (int)__count;
        }
        else
        {
          v10 = 3758097085;
        }
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_collection", ":", 3220, "", 0, "", "");
    }
  }
  else
  {
    v10 = 3758097090;
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  free(*(void **)&inputStructCnt[1]);
  return v10;
}

uint64_t sub_1000D02EC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  uint64_t v7;
  mach_port_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  size_t v19;
  int v20;
  char *v21;
  uint64_t input;

  v21 = 0;
  input = a1;
  v20 = 0;
  v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    v11 = sub_1000C3BBC();
    if (v11)
    {
      v17 = v11;
      sub_1000D72A4(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      v19 = *a7;
      v7 = IOConnectCallMethod(v17, 0x51u, &input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!(_DWORD)v7)
        *a7 = (int)v19;
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

uint64_t sub_1000D0474(unsigned int a1)
{
  mach_port_t v1;
  uint64_t input[2];

  input[0] = 0;
  input[1] = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x53u, input, 2u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drop_auxiliary_auth_by_uid", ":", 3280, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D054C(int a1)
{
  mach_port_t v1;
  uint64_t input[2];

  input[0] = 1;
  input[1] = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x53u, input, 2u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drop_auxiliary_auth_by_handle", ":", 3296, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D0628()
{
  mach_port_t v0;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x5Cu, 0, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lower_iteration_count", ":", 3310, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D06CC(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x6Au, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_secret_drop", ":", 3326, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D07A4(_QWORD *a1, size_t *a2)
{
  uint64_t v2;
  BOOL v5;
  size_t v6;
  void *v7;
  size_t __count;
  void *__src;
  size_t v11;
  void *v12;

  v11 = 0;
  v12 = 0;
  v2 = 3758097084;
  __count = 0;
  __src = 0;
  if (a1 && a2 && !sub_1000C640C(-1, off_1002A10D8, &v12, &v11))
  {
    if (sub_1000D3988((uint64_t)off_1002A10D8, (uint64_t)v12, (uint64_t)v12 + v11, &__src, &__count))
      v5 = __src == 0;
    else
      v5 = 1;
    if (!v5)
    {
      v6 = __count;
      if (__count)
      {
        *a2 = __count;
        v7 = calloc(v6, 1uLL);
        *a1 = v7;
        if (v7)
        {
          memcpy(v7, __src, *a2);
          v2 = 0;
        }
      }
    }
  }
  free(v12);
  return v2;
}

uint64_t sub_1000D086C(int a1, _QWORD *a2, size_t *a3)
{
  return sub_1000C640C(a1, 0, a2, a3);
}

uint64_t sub_1000D087C(int a1, _QWORD *a2)
{
  uint64_t v3;
  time_t v4;
  time_t v5;
  uint64_t v7;
  size_t v8;
  void *v9;

  v3 = 3758097084;
  v8 = 0;
  v9 = 0;
  v7 = 0;
  if (!sub_1000C640C(a1, off_1002A1158, &v9, &v8)
    && sub_1000D38A8((uint64_t)off_1002A1158, (uint64_t)v9, (uint64_t)v9 + v8, &v7))
  {
    if (a2)
    {
      v4 = time(0);
      v3 = 0;
      v5 = v4 - v7;
      if (v4 <= v7)
        v5 = 0;
      *a2 = v5;
    }
    else
    {
      v3 = 0;
    }
  }
  free(v9);
  return v3;
}

uint64_t sub_1000D0920(int a1, char *a2)
{
  uint64_t v3;
  mach_port_t v4;
  uint64_t v5;
  rsize_t v6;
  rsize_t __n;
  _BYTE __s[4096];
  uint64_t input;

  v3 = 3758097090;
  input = a1;
  bzero(__s, 0x1000uLL);
  __n = 4096;
  v4 = sub_1000C3BBC();
  if (!v4)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_internal_state", ":", 3405, "", 0, "", "");
    v3 = 3758097084;
    goto LABEL_11;
  }
  if (!a2)
  {
LABEL_11:
    v6 = 4096;
    goto LABEL_9;
  }
  v5 = IOConnectCallMethod(v4, 0x8Eu, &input, 1u, 0, 0, 0, 0, __s, &__n);
  v6 = __n;
  if ((_DWORD)v5)
  {
    v3 = v5;
  }
  else if (__n - 4097 >= 0xFFFFFFFFFFFFF000)
  {
    if (sub_1000D55C8((uint64_t)__s, __n, a2))
      v3 = 3758097090;
    else
      v3 = 0;
    v6 = __n;
  }
LABEL_9:
  memset_s(__s, v6, 0, v6);
  return v3;
}

uint64_t sub_1000D0A98(const void *a1, size_t a2, void *a3, size_t *a4)
{
  uint64_t result;
  mach_port_t v9;
  size_t v10;
  uint64_t input;

  input = 266;
  result = 3758097090;
  if (a3 && a4)
  {
    v9 = sub_1000C3BBC();
    if (v9)
    {
      v10 = *a4;
      result = IOConnectCallMethod(v9, 0x68u, &input, 1u, a1, a2, 0, 0, a3, &v10);
      if (!(_DWORD)result)
        *a4 = (int)v10;
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fairplay_wrap", ":", 3431, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_1000D0BBC(unsigned int a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  uint64_t result;
  mach_port_t v10;
  size_t v11;
  uint64_t input;

  input = ((unint64_t)a1 << 8) | 1;
  result = 3758097090;
  if (a4 && a5)
  {
    v10 = sub_1000C3BBC();
    if (v10)
    {
      v11 = *a5;
      result = IOConnectCallMethod(v10, 0x68u, &input, 1u, a2, a3, 0, 0, a4, &v11);
      if (!(_DWORD)result)
        *a5 = (int)v11;
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_fairplay_generate_csk_internal", ":", 3455, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_1000D0CE8(const void *a1, size_t a2, void *a3, size_t *a4)
{
  return sub_1000D0BBC(0, a1, a2, a3, a4);
}

uint64_t sub_1000D0D00(const void *a1, size_t a2, void *a3, size_t *a4)
{
  return sub_1000D0BBC(1u, a1, a2, a3, a4);
}

uint64_t sub_1000D0D18(uint64_t a1, const void *a2, size_t a3, _QWORD *a4, _QWORD *a5)
{
  mach_port_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  size_t v16;
  uint64_t input[2];
  _BYTE __s[16384];
  _OWORD v19[3];

  memset(v19, 0, 44);
  bzero(__s, 0x4000uLL);
  v16 = 0x4000;
  input[0] = 1;
  input[1] = a1;
  v10 = sub_1000C3BBC();
  if (v10)
  {
    v11 = IOConnectCallMethod(v10, 0x87u, input, 2u, a2, a3, 0, 0, __s, &v16);
    if ((_DWORD)v11)
    {
      v14 = v11;
    }
    else
    {
      if (v16 >= 0x2C)
        v12 = 44;
      else
        v12 = v16;
      __memcpy_chk(v19, __s, v12, 44);
      *a5 = 44;
      v13 = calloc(0x2CuLL, 1uLL);
      *a4 = v13;
      if (v13)
      {
        __memcpy_chk(v13, v19, *a5, 44);
        v14 = 0;
      }
      else
      {
        v14 = 3758097085;
      }
    }
  }
  else
  {
    v14 = 3758097084;
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_bak_get_beacon_internal", ":", 3491, "", 0, "", "");
  }
  memset_s(__s, 0x4000uLL, 0, 0x4000uLL);
  return v14;
}

uint64_t sub_1000D0EE8(int a1, unsigned int a2, const void *a3, size_t a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v10;
  void *v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v17;
  rsize_t __n[6];

  v17 = 0;
  memset(__n, 0, 44);
  v10 = sub_1000D0D18(a1 ^ 1u | ((unint64_t)a2 << 16), a3, a4, &v17, __n);
  if ((_DWORD)v10)
  {
    v15 = v10;
    v11 = v17;
    goto LABEL_10;
  }
  v11 = v17;
  if (__n[0] != 44)
  {
    v15 = 3758604312;
LABEL_10:
    if (!v11)
      return v15;
    goto LABEL_6;
  }
  v12 = v17[1];
  *(_OWORD *)&__n[1] = *v17;
  *(_OWORD *)&__n[3] = v12;
  LODWORD(__n[5]) = *((_DWORD *)v17 + 8);
  v13 = *(_QWORD *)((char *)v17 + 36);
  v14 = calloc(0x1CuLL, 1uLL);
  *a5 = v14;
  if (v14)
  {
    *a6 = 28;
    *v14 = *(_OWORD *)&__n[2];
    *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)((char *)&__n[3] + 4);
    v15 = 0;
    if (a7)
      *a7 = v13;
  }
  else
  {
    v15 = 3758097085;
  }
LABEL_6:
  memset_s(v11, __n[0], 0, __n[0]);
  free(v11);
  return v15;
}

uint64_t sub_1000D1028(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  mach_port_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  size_t v25;
  _BYTE __s[16384];
  _QWORD v27[6];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int v37;
  uint64_t input[2];

  input[0] = 2;
  input[1] = a1;
  v37 = 0;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v28 = 0u;
  memset(v27, 0, sizeof(v27));
  bzero(__s, 0x4000uLL);
  v25 = 0x4000;
  v9 = sub_1000C3BBC();
  if (v9)
  {
    v10 = IOConnectCallMethod(v9, 0x87u, input, 2u, 0, 0, 0, 0, __s, &v25);
    if ((_DWORD)v10)
    {
      v11 = v10;
    }
    else
    {
      v11 = 3758097085;
      if (v25 >= 0xC4)
        v12 = 196;
      else
        v12 = v25;
      __memcpy_chk(v27, __s, v12, 196);
      v13 = calloc(0x28uLL, 1uLL);
      *a2 = v13;
      if (v13)
      {
        *a3 = 40;
        v14 = *(_OWORD *)&v27[1];
        v15 = *(_OWORD *)&v27[3];
        v13[4] = v27[5];
        *(_OWORD *)v13 = v14;
        *((_OWORD *)v13 + 1) = v15;
        v16 = calloc(0x91uLL, 1uLL);
        *a4 = v16;
        if (v16)
        {
          v11 = 0;
          *a5 = 145;
          v17 = v29;
          *v16 = v28;
          v16[1] = v17;
          v18 = v30;
          v19 = v31;
          v20 = v33;
          v16[4] = v32;
          v16[5] = v20;
          v16[2] = v18;
          v16[3] = v19;
          v21 = v34;
          v22 = v35;
          v23 = v36;
          *((_BYTE *)v16 + 144) = v37;
          v16[7] = v22;
          v16[8] = v23;
          v16[6] = v21;
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_bak_get_swizzler_internal", ":", 3551, "", 0, "", "");
    v11 = 3758097084;
  }
  memset_s(__s, 0x4000uLL, 0, 0x4000uLL);
  memset_s(v27, 0xC4uLL, 0, 0xC4uLL);
  return v11;
}

uint64_t sub_1000D1278(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  return sub_1000D1028(0, a1, a2, a3, a4);
}

uint64_t sub_1000D1290(uint64_t a1)
{
  mach_port_t v2;

  v2 = sub_1000C5B54();
  if (v2)
    return IOConnectCallMethod(v2, 0xCu, 0, 0, *(const void **)a1, *(_QWORD *)(a1 + 8), 0, 0, 0, 0);
  else
    return 3758097084;
}

uint64_t sub_1000D12E8(_QWORD *a1, size_t *a2)
{
  mach_port_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  size_t __count;
  _BYTE __src[16384];

  bzero(__src, 0x4000uLL);
  __count = 0x4000;
  v4 = sub_1000C3BBC();
  if (v4)
  {
    v5 = 3758097090;
    if (a1 && a2)
    {
      v6 = IOConnectCallMethod(v4, 0x96u, 0, 0, 0, 0, 0, 0, __src, &__count);
      if ((_DWORD)v6)
      {
        v5 = v6;
      }
      else
      {
        v7 = calloc(__count, 1uLL);
        *a1 = v7;
        if (v7)
        {
          v8 = __count;
          *a2 = __count;
          memcpy(v7, __src, v8);
          v5 = 0;
        }
        else
        {
          v5 = 3758097085;
        }
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_dsme_key", ":", 3600, "", 0, "", "");
    v5 = 3758097084;
  }
  memset_s(__src, 0x4000uLL, 0, 0x4000uLL);
  return v5;
}

BOOL sub_1000D1474(uint64_t a1, uint64_t a2)
{
  return a2 == 4 || a2 == 32;
}

uint64_t sub_1000D1488()
{
  mach_port_t v0;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x73u, 0, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_prewarm_sps", ":", 3627, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D152C(uint64_t a1, unsigned int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  mach_port_t v9;
  mach_port_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  size_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = 4294967285;
  if (a3 && a4 <= 0x30)
  {
    v4 = 3758097084;
    v9 = sub_1000C3BBC();
    if (v9)
    {
      v10 = v9;
      v11 = ccder_sizeof_raw_octet_string(16);
      v12 = a2;
      v13 = ccder_sizeof_uint64(a2);
      v14 = ccder_sizeof_raw_octet_string(a4);
      v15 = ccder_sizeof(0x2000000000000010, (v13 + v11 + v14));
      v16 = v15;
      v17 = v15;
      __chkstk_darwin(v15);
      v19 = (char *)&v25 - v18;
      bzero((char *)&v25 - v18, v17);
      v20 = &v19[v16];
      v21 = ccder_encode_raw_octet_string(a4, a3, v19, v20);
      v22 = ccder_encode_uint64(v12, v19, v21);
      v23 = ccder_encode_raw_octet_string(16, a1, v19, v22);
      if ((char *)ccder_encode_constructed_tl(0x2000000000000010, v20, v19, v23) == v19)
        return IOConnectCallMethod(v10, 0x72u, 0, 0, v19, v17, 0, 0, 0, 0);
      else
        return 3758097090;
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_sealed_hashes_set", ":", 3644, "", 0, "", "");
    }
  }
  return v4;
}

uint64_t sub_1000D173C(const void *a1, size_t a2)
{
  mach_port_t v4;

  v4 = sub_1000C3BBC();
  if (v4)
    return IOConnectCallMethod(v4, 0x90u, 0, 0, a1, a2, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_measure_and_seal_cryptex_manifest", ":", 3674, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D17F0()
{
  mach_port_t v0;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x95u, 0, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_seal_cryptex_manifest_lock", ":", 3688, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D1894(int a1, uint64_t a2, uint64_t a3)
{
  mach_port_t v3;
  uint64_t input[3];

  input[0] = a1;
  input[1] = a2;
  input[2] = a3;
  v3 = sub_1000C3BBC();
  if (v3)
    return IOConnectCallMethod(v3, 0x85u, input, 3u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lkgp_recover", ":", 3704, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D1970(int a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x8Au, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_memento_efface_blob", ":", 3720, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D1A48(int a1, _BYTE *a2)
{
  mach_port_t v3;
  uint64_t v4;
  rsize_t v5;
  uint64_t v6;
  rsize_t __n;
  _BYTE __s[4096];
  uint64_t input;

  input = a1;
  bzero(__s, 0x1000uLL);
  __n = 4096;
  v3 = sub_1000C3BBC();
  if (v3)
  {
    v4 = IOConnectCallMethod(v3, 0x8Bu, &input, 1u, 0, 0, 0, 0, __s, &__n);
    v5 = __n;
    if ((_DWORD)v4)
    {
      v6 = v4;
    }
    else
    {
      v6 = 3758097090;
      if (__n - 4097 >= 0xFFFFFFFFFFFFF000)
      {
        if (sub_1000D582C((uint64_t)__s, __n, a2))
          v6 = 3758097090;
        else
          v6 = 0;
        v5 = __n;
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_memento_get_state", ":", 3738, "", 0, "", "");
    v6 = 3758097084;
    v5 = 4096;
  }
  memset_s(__s, v5, 0, v5);
  return v6;
}

uint64_t sub_1000D1BC4()
{
  mach_port_t v0;
  uint64_t input;

  v0 = sub_1000C3BBC();
  if (v0)
    return IOConnectCallMethod(v0, 0x89u, &input, 0, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_jcop_supports_updated_kud_policy", ":", 3758, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D1C68(uint64_t a1)
{
  mach_port_t v1;
  uint64_t input;

  input = a1;
  v1 = sub_1000C3BBC();
  if (v1)
    return IOConnectCallMethod(v1, 0x97u, &input, 1u, 0, 0, 0, 0, 0, 0);
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_cx_window", ":", 3774, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_1000D1D3C(_QWORD *a1)
{
  mach_port_t v2;
  mach_port_t v3;
  uint64_t result;
  size_t v5;
  _QWORD outputStruct[512];

  v5 = 4096;
  if (!a1)
    return 4294967285;
  v2 = sub_1000C3BBC();
  if (v2)
  {
    v3 = v2;
    bzero(outputStruct, 0x1000uLL);
    result = IOConnectCallMethod(v3, 0x98u, 0, 0, 0, 0, 0, 0, outputStruct, &v5);
    if (!(_DWORD)result)
    {
      if (v5 == 8)
      {
        result = 0;
        *a1 = outputStruct[0];
      }
      else
      {
        return 3758604298;
      }
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_cx_window", ":", 3791, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_1000D1E94(uint64_t a1)
{
  uint64_t v2;
  _OWORD v4[2];

  memset(v4, 0, sizeof(v4));
  v2 = ccsha256_di(a1);
  ccdigest(v2, 16, a1, v4);
  return LODWORD(v4[0]);
}

unint64_t sub_1000D1F04(unsigned int a1)
{
  mach_timebase_info info;

  info = 0;
  mach_timebase_info(&info);
  return 1000000000 * info.denom * (unint64_t)a1 / info.numer;
}

unint64_t sub_1000D1F4C(uint64_t a1)
{
  mach_timebase_info info;

  info = 0;
  mach_timebase_info(&info);
  return (unint64_t)info.numer * a1 / info.denom;
}

uint64_t sub_1000D1F88()
{
  mach_timebase_info info;

  info = 0;
  mach_timebase_info(&info);
  return mach_continuous_time() * info.numer / info.denom / 0x3E8;
}

__darwin_time_t sub_1000D1FD8()
{
  timeval v1;

  v1.tv_sec = 0;
  *(_QWORD *)&v1.tv_usec = 0;
  gettimeofday(&v1, 0);
  return v1.tv_sec;
}

uint64_t sub_1000D2004(uint64_t a1)
{
  return 1000000 * a1;
}

unint64_t sub_1000D2014(uint64_t a1)
{
  return (a1 + 999999) / 0xF4240uLL;
}

_QWORD *sub_1000D202C(unsigned int a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  size_t v7;
  void *v8;

  v2 = a1 + 1;
  v3 = v2 << 31 >> 31;
  if (v3 != v2 || v3 < 0)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s overflow%s\n", "aks", "", "", "", "circular_queue_init", ":", 341, "", 0, "", "");
    return 0;
  }
  else
  {
    v5 = calloc(0x20uLL, 1uLL);
    v6 = v5;
    if (v5)
    {
      v5[1] = 0;
      v7 = (v3 & 0x1FFFFFFFFLL) * a2;
      *(_DWORD *)v5 = a2;
      *((_DWORD *)v5 + 1) = v2;
      v8 = calloc(v7, 1uLL);
      v6[2] = v7;
      v6[3] = v8;
    }
  }
  return v6;
}

uint64_t sub_1000D2108(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t result;

  v3 = a1[2];
  v2 = a1[3];
  result = v2 - v3;
  if (v2 < v3)
    return (result + a1[1]);
  return result;
}

uint64_t sub_1000D2124(unsigned int *a1, const void *a2)
{
  unsigned int v3;
  unsigned int v4;

  v3 = a1[3];
  v4 = (v3 + 1) % a1[1];
  memcpy((void *)(*((_QWORD *)a1 + 3) + *a1 * v3), a2, *a1);
  a1[3] = v4;
  if (v4 == a1[2])
    a1[2] = (v4 + 1) % a1[1];
  return 0;
}

uint64_t sub_1000D218C(unsigned int *a1, void *__dst)
{
  unsigned int v2;
  uint64_t result;

  v2 = a1[2];
  if (v2 == a1[3])
    return 0xFFFFFFFFLL;
  if (__dst)
  {
    memcpy(__dst, (const void *)(*((_QWORD *)a1 + 3) + *a1 * v2), *a1);
    v2 = a1[2];
  }
  memset_s((void *)(*((_QWORD *)a1 + 3) + *a1 * v2), *a1, 0, *a1);
  result = 0;
  a1[2] = (a1[2] + 1) % a1[1];
  return result;
}

uint64_t sub_1000D2214(unsigned int *a1, void *__dst)
{
  unsigned int v2;

  v2 = a1[2];
  if (v2 == a1[3])
    return 0xFFFFFFFFLL;
  memcpy(__dst, (const void *)(*((_QWORD *)a1 + 3) + *a1 * v2), *a1);
  return 0;
}

uint64_t sub_1000D2258(int *a1, _QWORD *a2, unsigned int *a3)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  char *v10;
  char *v11;
  unsigned int v12;
  unsigned int v13;
  const void *v14;
  size_t v15;
  uint64_t result;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = a1[2];
  v6 = a1[3];
  v8 = v6 - v7;
  if (v6 < v7)
    v8 += a1[1];
  if (!v8)
    return 0;
  v9 = *a1 * v8;
  v10 = (char *)calloc(v9, 1uLL);
  if (!v10)
    return 0xFFFFFFFFLL;
  v11 = v10;
  v12 = a1[2];
  v13 = a1[3];
  if (v13 <= v12)
  {
    if (v12 <= v13)
      goto LABEL_13;
    v17 = a1[1] - v12;
    memcpy(v10, (const void *)(*((_QWORD *)a1 + 3) + *a1 * v12), *a1 * v17);
    if (v8 <= v17)
      goto LABEL_13;
    v10 = &v11[*a1 * v17];
    v14 = (const void *)*((_QWORD *)a1 + 3);
    v15 = *a1 * (v8 - v17);
  }
  else
  {
    v14 = (const void *)(*((_QWORD *)a1 + 3) + *a1 * v12);
    v15 = *a1 * v8;
  }
  memcpy(v10, v14, v15);
LABEL_13:
  v18 = a1[1];
  v19 = *a1;
  a1[2] = (a1[2] + v8) % v18;
  memset_s(*((void **)a1 + 3), v19 * v18, 0, v19 * v18);
  result = 0;
  *a2 = v11;
  *a3 = v9;
  return result;
}

uint64_t sub_1000D2380(uint64_t a1)
{
  rsize_t v1;

  *(_QWORD *)(a1 + 8) = 0;
  v1 = (*(_DWORD *)a1 * *(_DWORD *)(a1 + 4));
  return memset_s(*(void **)(a1 + 24), v1, 0, v1);
}

void sub_1000D23A0(void *a1)
{
  rsize_t v2;

  *((_QWORD *)a1 + 1) = 0;
  v2 = (*(_DWORD *)a1 * *((_DWORD *)a1 + 1));
  memset_s(*((void **)a1 + 3), v2, 0, v2);
  memset_s(*((void **)a1 + 3), *((_QWORD *)a1 + 2), 0, *((_QWORD *)a1 + 2));
  free(*((void **)a1 + 3));
  memset_s(a1, 0x20uLL, 0, 0x20uLL);
  free(a1);
}

uint64_t sub_1000D2408(unsigned int a1)
{
  return (a1 >> 5) & 1;
}

BOOL sub_1000D2410(uint8x16_t *a1)
{
  int8x16_t v1;
  int8x16_t v2;
  int8x16_t v3;

  v1 = (int8x16_t)vmovl_high_u8(*a1);
  v2 = (int8x16_t)vmovl_u8(*(uint8x8_t *)a1->i8);
  v3 = (int8x16_t)vmovl_u16((uint16x4_t)vorr_s8(vorr_s8(*(int8x8_t *)v2.i8, *(int8x8_t *)v1.i8), vorr_s8((int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL))));
  return vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) != 0;
}

BOOL sub_1000D2454(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  v2 = 0;
  do
  {
    v3 = *a1++;
    v2 |= v3;
    --a2;
  }
  while (a2);
  return v2 != 0;
}

_DWORD *sub_1000D2480(_DWORD *result)
{
  if (result)
    return (_DWORD *)(*result != 0);
  return result;
}

uint64_t sub_1000D2494(char a1, int a2)
{
  return a1 & 0x1F | (32 * a2);
}

uint64_t sub_1000D249C(unsigned int a1)
{
  return (a1 >> 6) & 1;
}

uint64_t sub_1000D24A4(int a1)
{
  return a1 & 0xFFFFFFBF;
}

uint64_t sub_1000D24AC(int a1)
{
  return a1 | 0x40u;
}

uint64_t sub_1000D24B4(char a1)
{
  char v1;

  v1 = a1 & 0x1F;
  if ((a1 & 0x1Fu) >= 0x14)
    v1 = -1;
  return ((a1 & 0x1Fu) < 0x14) & (0xC3FC0u >> v1);
}

uint64_t sub_1000D24DC(char a1)
{
  if ((a1 & 0x1Fu) > 0x13)
    return 0xFFFFFFFFLL;
  else
    return a1 & 0x1F;
}

uint64_t sub_1000D24EC(char a1)
{
  unsigned int v1;

  v1 = a1 & 0x1F;
  if (v1 > 0x13)
    v1 = -1;
  return (v1 < 0x12) & (0x2E03Eu >> v1);
}

uint64_t sub_1000D2514(char a1)
{
  return a1 & 0xF;
}

BOOL sub_1000D251C(int a1, int a2)
{
  return ((a2 ^ a1) & 0xF) == 0;
}

uint64_t sub_1000D252C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return cc_cmp_safe(a3, a1, a2);
}

uint64_t sub_1000D2540(const char *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  const char *v4;
  FILE **v5;
  unint64_t v6;
  FILE **v7;
  uint64_t v8;
  unsigned __int8 *v9;
  char *v10;
  uint64_t v11;
  int v12;
  unint64_t v15;
  char __str[16];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v3 = a3;
  v4 = a1;
  v24 = 0;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  *(_OWORD *)__str = 0u;
  v17 = 0u;
  v5 = &__stdoutp;
  if (a3 >= 0x41)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s %sdump %s (len = %zd)%s%s\n", "aks", "", "", "", "dump_bytes_internal", ":", 786, "", 0, "", "", a1, a3, "", "");
    v4 = "";
  }
  else if (!a3)
  {
    return memset_s(__str, 0x81uLL, 0, 0x81uLL);
  }
  v6 = 0;
  v15 = v3;
  do
  {
    v7 = v5;
    if (v3 - v6 >= 0x40)
      v8 = 64;
    else
      v8 = v3 - v6;
    if (v8)
    {
      v9 = (unsigned __int8 *)(a2 + v6);
      v10 = __str;
      v11 = v8;
      do
      {
        v12 = *v9++;
        snprintf(v10, 3uLL, "%02x", v12);
        v10 += 2;
        --v11;
      }
      while (v11);
    }
    v5 = v7;
    fprintf(*v7, "%s%s:%s%s%s%s%u:%s%u:%s %s%s%s[%04zu,%04zu): %s%s%s%s\n", "aks", "", "", "", "dump_bytes_internal", ":", 796, "", 0, "", "", v4, "", v6, v8 + v6, "", __str,
      "",
      "");
    v6 += v8;
    v3 = v15;
  }
  while (v6 < v15);
  return memset_s(__str, 0x81uLL, 0, 0x81uLL);
}

_BYTE *sub_1000D271C(unsigned __int8 *a1, unint64_t a2)
{
  uint64_t v2;
  char *v4;
  uint64_t v5;
  int v6;

  if (a2 >= 0x10)
    v2 = 16;
  else
    v2 = a2;
  if (v2)
  {
    v4 = byte_1002A7330;
    v5 = v2;
    do
    {
      v6 = *a1++;
      snprintf(v4, 3uLL, "%02x", v6);
      v4 += 2;
      --v5;
    }
    while (v5);
  }
  byte_1002A7330[2 * v2] = 0;
  return byte_1002A7330;
}

uint64_t sub_1000D27AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _OWORD __s[2];

  memset(__s, 0, sizeof(__s));
  v10[0] = 0x101010101010101;
  v10[1] = 0x101010101010101;
  if (a4 == 3)
  {
    v7 = ccsha256_di(a1);
    cchmac(v7, a2 >> 1, a1, 16, v10, __s);
    v8 = 0;
    *(_WORD *)a3 = __s[0];
    *(_BYTE *)(a3 + 2) = BYTE2(__s[0]);
  }
  else
  {
    v8 = 0xFFFFFFFFLL;
  }
  memset_s(__s, 0x20uLL, 0, 0x20uLL);
  return v8;
}

uint64_t sub_1000D2874(const char *a1, uint64_t a2, unint64_t a3)
{
  __int16 v5;
  char v6;

  v6 = 0;
  v5 = 0;
  sub_1000D27AC(a2, a3, (uint64_t)&v5, 3);
  return sub_1000D2540(a1, (uint64_t)&v5, 3uLL);
}

char *sub_1000D28C8(char *result, unint64_t a2)
{
  unint64_t v2;
  char *v3;
  char v4;

  if (a2 >= 2)
  {
    v2 = a2 >> 1;
    v3 = &result[a2 - 1];
    do
    {
      v4 = *result;
      *result++ = *v3;
      *v3-- = v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1000D28F8(unsigned __int8 *a1, unint64_t a2, _QWORD *a3, unint64_t *a4)
{
  uint64_t v5;
  unsigned __int8 *v6;
  unint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  char v16;
  char v17;
  char v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  char v22;
  char v23;

  v5 = 0xFFFFFFFFLL;
  if ((a2 & 1) == 0)
  {
    v6 = a1;
    if (a1)
    {
      if (a3 && a4)
      {
        v9 = a2 >> 1;
        v10 = calloc(a2 >> 1, 1uLL);
        if (v10)
        {
          if (a2 >= 2)
          {
            if (v9 <= 1)
              v11 = 1;
            else
              v11 = a2 >> 1;
            v12 = v10;
            do
            {
              v13 = *v6;
              v14 = v13 - 48;
              v15 = v13 - 97;
              if ((v13 - 65) >= 6)
                v16 = -1;
              else
                v16 = v13 - 55;
              v17 = v13 - 87;
              if (v15 > 5)
                v17 = v16;
              if (v14 < 0xA)
                v17 = v14;
              v18 = 16 * v17;
              v19 = v6[1];
              v20 = v19 - 48;
              v21 = v19 - 97;
              if ((v19 - 65) >= 6)
                v22 = -1;
              else
                v22 = v19 - 55;
              v23 = v19 - 87;
              if (v21 > 5)
                v23 = v22;
              if (v20 < 0xA)
                v23 = v20;
              *v12++ = v23 | v18;
              v6 += 2;
              --v11;
            }
            while (v11);
          }
          v5 = 0;
          *a3 = v10;
          *a4 = v9;
        }
        else
        {
          return 4294967279;
        }
      }
    }
  }
  return v5;
}

uint64_t sub_1000D29FC(uint64_t result)
{
  if ((_DWORD)result == 0 || result >= 0xFFFFFFDA)
    return dword_100216800[(int)result + 38];
  return result;
}

uint64_t sub_1000D2A18(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t result;
  size_t v7;
  void *v8;
  const void *v9;

  memset_s(a1, 0x10uLL, 0, 0x10uLL);
  if ((a3 & 1) != 0)
    return 4294967285;
  if (a2 && *(_QWORD *)a2 && (v7 = *(_QWORD *)(a2 + 8)) != 0)
  {
    v8 = calloc(v7, 1uLL);
    if (v8)
    {
      *a1 = v8;
      v9 = *(const void **)a2;
      a1[1] = *(_QWORD *)(a2 + 8);
      memcpy(v8, v9, *(_QWORD *)(a2 + 8));
      return 0;
    }
    else
    {
      return 4294967279;
    }
  }
  else
  {
    result = 0;
    *a1 = 0;
    a1[1] = 0;
  }
  return result;
}

uint64_t sub_1000D2AAC(uint64_t result, int a2, const char *a3)
{
  if ((result & 1) == 0)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s failed REQUIRE condition (%s:%d)\n%s\n", "aks", "", "", "", "REQUIRE_func", ":", 1047, "", 0, "", a3, a2, "");
    abort();
  }
  return result;
}

uint64_t sub_1000D2B1C(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  int __s;
  _OWORD v10[6];
  _OWORD v11[2];

  memset(v11, 0, sizeof(v11));
  sub_1000D6964((uint64_t)v11, 0x20u);
  cccurve25519_make_pub(a2, v11);
  memset(v10, 0, 32);
  __s = 0x1000000;
  v4 = a2[1];
  v10[2] = *a2;
  v10[3] = v4;
  v5 = a1[1];
  v10[4] = *a1;
  v10[5] = v5;
  v6 = cccurve25519(v10, v11, a1);
  v7 = ccsha256_di(v6);
  ccdigest(v7, 100, &__s, a2 + 2);
  memset_s(&__s, 0x64uLL, 0, 0x64uLL);
  memset_s(v11, 0x20uLL, 0, 0x20uLL);
  return 0;
}

uint64_t sub_1000D2C04(uint64_t a1, uint64_t (*a2)(uint64_t, void *, uint64_t *, uint64_t *, uint64_t), char a3, uint64_t *a4, unsigned int a5, uint64_t a6, unsigned int *a7)
{
  uint64_t v8;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  _OWORD *v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t, void *, uint64_t *, uint64_t *, uint64_t);
  uint64_t *v23;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v36;
  int v37;
  unsigned int v38;
  _OWORD __s[2];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v38 = 0;
  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  memset(__s, 0, sizeof(__s));
  v8 = 0xFFFFFFFFLL;
  if (!a6 || !a7)
    goto LABEL_46;
  v13 = a1;
  if ((a3 & 0x10) != 0)
    v14 = "SEP derived_key";
  else
    v14 = "derived_key";
  if ((a3 & 0x10) != 0)
    v15 = 16;
  else
    v15 = 12;
  if (!a1)
  {
LABEL_20:
    if (a2)
    {
      if (sub_1000C38D8(a5, &v38))
      {
        if (*a7 < v38)
          goto LABEL_46;
        v20 = 0;
        v21 = 0;
        v22 = a2;
        v23 = a4;
        goto LABEL_44;
      }
    }
    else
    {
      if ((a3 & 4) != 0)
      {
        if ((a5 & 0xF) != 0 || *a7 < a5)
          goto LABEL_46;
        v38 = a5;
        v32 = ccaes_cbc_encrypt_mode(a1);
        sub_1000D347C(v32, 32, v13 + 8, (uint64_t)&unk_1002A7F10, a5 & 0xFFFFFFF0);
LABEL_45:
        v8 = 0;
        *a7 = v38;
        goto LABEL_46;
      }
      v25 = sub_1000C38D8(a5, &v38);
      if ((_DWORD)v25)
      {
        if (*a7 < v38)
          goto LABEL_46;
        if ((a3 & 8) != 0)
        {
          v34 = ccsha256_di(v25);
          cchkdf(v34, 32, v13 + 8, 0, 0, v15, v14, 32, __s);
          v20 = __s;
        }
        else
        {
          v20 = (_OWORD *)(v13 + 8);
        }
        v21 = 32;
        v22 = 0;
        v23 = a4;
LABEL_44:
        if (sub_1000C34AC((uint64_t)v20, v21, 0xA6A6A6A6A6A6A6A6, v22, v23, a5, (_QWORD *)a6, &v38))
          goto LABEL_46;
        goto LABEL_45;
      }
    }
    v8 = 4294967285;
    if ((a3 & 8) == 0)
      goto LABEL_48;
    goto LABEL_47;
  }
  v16 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 - 1) >= 2)
  {
    if (v16)
      goto LABEL_46;
    goto LABEL_20;
  }
  v36 = v14;
  if ((a3 & 4) != 0)
    v17 = 64;
  else
    v17 = 72;
  v38 = v17;
  if (!a2 && a5 == 32 && *a7 >= v17)
  {
    if (v16 == 1)
    {
      a1 = sub_1000D2B1C((_OWORD *)(a1 + 36), &v40);
    }
    else
    {
      v26 = *(_OWORD *)(a1 + 20);
      v40 = *(_OWORD *)(a1 + 4);
      v41 = v26;
      v27 = *(_OWORD *)(a1 + 52);
      v42 = *(_OWORD *)(a1 + 36);
      v43 = v27;
    }
    if ((a3 & 0x80) == 0)
    {
      v28 = v41;
      *(_OWORD *)a6 = v40;
      *(_OWORD *)(a6 + 16) = v28;
      if ((a3 & 4) != 0)
      {
        v31 = ccaes_cbc_encrypt_mode(a1);
        sub_1000D347C(v31, 32, (uint64_t)&v42, (uint64_t)&unk_1002A7F10, 0x20uLL);
        goto LABEL_40;
      }
      v37 = 40;
      if ((a3 & 8) != 0)
      {
        v33 = ccsha256_di(a1);
        cchkdf(v33, 32, &v42, 0, 0, v15, v36, 32, __s);
        v30 = (_QWORD *)(a6 + 32);
        v29 = __s;
      }
      else
      {
        v29 = &v42;
        v30 = (_QWORD *)(a6 + 32);
      }
      if (!sub_1000C34AC((uint64_t)v29, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, a4, 0x20u, v30, &v37))
      {
LABEL_40:
        v8 = 0;
        *a7 = v17;
        if ((a3 & 8) == 0)
          goto LABEL_48;
        goto LABEL_47;
      }
    }
  }
LABEL_46:
  if ((a3 & 8) != 0)
LABEL_47:
    memset_s(__s, 0x20uLL, 0, 0x20uLL);
LABEL_48:
  memset_s(&v40, 0x40uLL, 0, 0x40uLL);
  return v8;
}

uint64_t sub_1000D2F6C(_OWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  int __s;
  _OWORD v11[6];

  memset(v11, 0, 32);
  v5 = a1[1];
  v11[2] = *a1;
  v11[3] = v5;
  v6 = a3[1];
  v11[4] = *a3;
  __s = 0x1000000;
  v11[5] = v6;
  v7 = cccurve25519(v11, a2, a1);
  v8 = ccsha256_di(v7);
  ccdigest(v8, 100, &__s, a4);
  memset_s(&__s, 0x64uLL, 0, 0x64uLL);
  return 0;
}

uint64_t sub_1000D3028(uint64_t a1, uint64_t (*a2)(_QWORD, void *, unint64_t *, unint64_t *, uint64_t), char a3, _QWORD *a4, unsigned int a5, _QWORD *a6, unsigned int *a7)
{
  uint64_t v8;
  const char *v15;
  uint64_t v16;
  _OWORD *v17;
  unsigned int v18;
  uint64_t (*v19)(_QWORD, void *, unint64_t *, unint64_t *, uint64_t);
  _BOOL8 v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 *p_s;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  __int128 __s;
  __int128 v32;
  _OWORD v33[2];

  HIDWORD(v30) = 0;
  memset(v33, 0, sizeof(v33));
  v8 = 0xFFFFFFFFLL;
  if (a4 && a5)
  {
    if ((a3 & 0x10) != 0)
      v15 = "SEP derived_key";
    else
      v15 = "derived_key";
    if ((a3 & 0x10) != 0)
      v16 = 16;
    else
      v16 = 12;
    if (!a1)
    {
LABEL_12:
      if (a5 <= 0x28)
      {
        if (a2)
        {
          if (sub_1000C3934(a5, (unsigned int *)&v30 + 1) && *a7 >= HIDWORD(v30))
          {
            v17 = 0;
            v18 = 0;
            v19 = a2;
            goto LABEL_36;
          }
        }
        else if ((a3 & 4) != 0)
        {
          if ((a5 & 0xF) == 0 && *a7 >= a5)
          {
            HIDWORD(v30) = a5;
            v24 = ccaes_cbc_decrypt_mode(a1);
            sub_1000D347C(v24, 32, a1 + 8, (uint64_t)&unk_1002A7F10, a5 & 0xFFFFFFF0);
LABEL_37:
            v8 = 0;
            *a7 = HIDWORD(v30);
            goto LABEL_41;
          }
        }
        else
        {
          v20 = sub_1000C3934(a5, (unsigned int *)&v30 + 1);
          if (v20 && *a7 >= HIDWORD(v30))
          {
            if ((a3 & 8) != 0)
            {
              v27 = ccsha256_di(v20);
              ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, const char *, uint64_t, _OWORD *, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))cchkdf)(v27, 32, a1 + 8, 0, 0, v16, v15, 32, v33, v30, __s, *((_QWORD *)&__s + 1), v32, *((_QWORD *)&v32 + 1));
              v17 = v33;
            }
            else
            {
              v17 = (_OWORD *)(a1 + 8);
            }
            v18 = 32;
            v19 = 0;
LABEL_36:
            if (!sub_1000C3870((uint64_t)v17, v18, 0xA6A6A6A6A6A6A6A6, v19, a4, a5, a6, (_DWORD *)&v30 + 1))goto LABEL_37;
            goto LABEL_46;
          }
        }
      }
LABEL_44:
      v8 = 4294967285;
      goto LABEL_41;
    }
    if (*(_DWORD *)a1 != 1)
    {
      if (!*(_DWORD *)a1)
        goto LABEL_12;
LABEL_28:
      v8 = 0xFFFFFFFFLL;
      goto LABEL_41;
    }
    HIDWORD(v30) = 32;
    if (*a7 < 0x20)
      goto LABEL_44;
    __s = 0uLL;
    v32 = 0uLL;
    if ((a3 & 4) != 0)
    {
      if (a5 != 64)
        goto LABEL_44;
      v25 = sub_1000D2F6C(a4, a1 + 4, (_OWORD *)(a1 + 36), (uint64_t)&__s);
      v26 = ccaes_cbc_decrypt_mode(v25);
      sub_1000D347C(v26, 32, (uint64_t)&__s, (uint64_t)&unk_1002A7F10, 0x20uLL);
    }
    else
    {
      if (a5 != 72)
        goto LABEL_44;
      v21 = sub_1000D2F6C(a4, a1 + 4, (_OWORD *)(a1 + 36), (uint64_t)&__s);
      if (a3 < 0)
        goto LABEL_28;
      LODWORD(v30) = 32;
      if ((a3 & 8) != 0)
      {
        v28 = ccsha256_di(v21);
        ((void (*)(uint64_t, uint64_t, __int128 *, _QWORD, _QWORD, uint64_t, const char *, uint64_t, _OWORD *, uint64_t))cchkdf)(v28, 32, &__s, 0, 0, v16, v15, 32, v33, v30);
        v22 = a4 + 4;
        p_s = v33;
      }
      else
      {
        v22 = a4 + 4;
        p_s = &__s;
      }
      if (sub_1000C3870((uint64_t)p_s, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, v22, 0x28u, a6, &v30))
      {
        memset_s(&__s, 0x20uLL, 0, 0x20uLL);
LABEL_46:
        v8 = 4294967277;
        goto LABEL_41;
      }
    }
    memset_s(&__s, 0x20uLL, 0, 0x20uLL);
    v8 = 0;
    *a7 = 32;
  }
LABEL_41:
  if ((a3 & 8) != 0)
    memset_s(v33, 0x20uLL, 0, 0x20uLL);
  return v8;
}

uint64_t sub_1000D3378(_QWORD *a1, _QWORD *a2, size_t *a3)
{
  size_t v6;
  void *v7;
  void *v8;
  uint64_t result;

  v6 = ((unint64_t)(cczp_bitlen(*a1) + 7) >> 2) | 1;
  v7 = calloc(v6, 1uLL);
  if (!v7)
    return 4294967279;
  v8 = v7;
  ccec_export_pub(a1, v7);
  result = 0;
  *a2 = v8;
  *a3 = v6;
  return result;
}

unint64_t sub_1000D33F4(uint64_t a1)
{
  return (unint64_t)(cczp_bitlen(a1) + 7) >> 3;
}

unint64_t sub_1000D3414(uint64_t a1)
{
  return (((unint64_t)(cczp_bitlen(a1) + 7) >> 2) & 0x3FFFFFFFFFFFFFFELL) + 9;
}

unint64_t sub_1000D3438(_QWORD *a1)
{
  return ((unint64_t)(cczp_bitlen(*a1) + 7) >> 2) | 1;
}

unint64_t sub_1000D345C(_QWORD *a1)
{
  return (unint64_t)(cczp_bitlen(*a1) + 7) >> 3;
}

uint64_t sub_1000D347C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return cccbc_one_shot(a1, a2, a3, a4, a5 >> 4);
}

uint64_t sub_1000D3484(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ccecb_one_shot(a1, a2, a3, a4 >> 4);
}

uint64_t sub_1000D348C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return cccbc_update(a1, a2, a3, a4 >> 4);
}

BOOL sub_1000D3494(_QWORD *a1, _QWORD **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return !ccec_import_pub(a1, a3, a4, a2)
      && ccn_read_uint(*a1, &a2[3 * **a2 + 2], a5, a6) == 0;
}

uint64_t sub_1000D350C(_QWORD *a1, _QWORD **a2)
{
  ccn_write_uint_padded(*a1, &a2[3 * **a2 + 2]);
  return 1;
}

uint64_t sub_1000D3540(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char v13;
  char v14;
  _QWORD *v15;

  if (*(_QWORD *)(a5 + 8) >= *(_QWORD *)a5)
  {
    v14 = 0;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = (uint64_t)a1 + a2;
    while (1)
    {
      v12 = sub_1000D363C(*(const void **)(*(_QWORD *)(a5 + 24) + v9), *(_QWORD *)(*(_QWORD *)(a5 + 24) + v9)+ *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a5 + 24) + v9) + 1)+ 2, a1, v11);
      if (v12)
        break;
      ++v10;
      v9 += 40;
      if (v10 >= *(_QWORD *)a5)
        goto LABEL_10;
    }
    v15 = (_QWORD *)(*(_QWORD *)(a5 + 24) + v9);
    if (v15[1])
    {
      v13 = 0;
      *(_BYTE *)(a5 + 16) = 1;
    }
    else
    {
      ++*(_QWORD *)(a5 + 8);
      v15[1] = a3;
      v15[2] = a3 + a4;
      v15[3] = a3;
      v15[4] = a3 + a4;
      v13 = 1;
    }
LABEL_10:
    v14 = v13 | !v12;
  }
  return v14 & 1;
}

BOOL sub_1000D3624(unsigned __int8 *a1, const void *a2, uint64_t a3)
{
  return sub_1000D363C(a1, (uint64_t)&a1[a1[1] + 2], a2, a3);
}

BOOL sub_1000D363C(const void *a1, uint64_t a2, const void *a3, uint64_t a4)
{
  size_t v7;

  v7 = sub_1000D36A4((uint64_t)a1, a2);
  return v7 == sub_1000D36A4((uint64_t)a3, a4) && memcmp(a1, a3, v7) == 0;
}

uint64_t sub_1000D36A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v6[0] = a1;
  v6[1] = a2;
  v4 = 0;
  v5 = 0;
  if (ccder_blob_decode_tag(v6, &v5) && ccder_blob_decode_len(v6, &v4))
    return v6[0] + v4 - a1;
  else
    return 0;
}

uint64_t sub_1000D3708(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  v9 = 0;
  v10 = 0;
  v8 = 0;
  result = ccder_blob_decode_range(v11, 0x2000000000000011, v11);
  if ((_DWORD)result)
  {
    if (ccder_blob_decode_sequence_tl(v11, &v9))
    {
      while (1)
      {
        v7 = v9;
        result = ccder_blob_decode_tl(&v9, 12, &v8);
        if (!(_DWORD)result)
          break;
        if (v9 - v7 != 2)
          return 0;
        result = a3(v7, v10 - v7, v9 + v8, v10 - (v9 + v8), a4);
        if (!(_DWORD)result)
          return result;
        v11[0] = v10;
        if ((ccder_blob_decode_sequence_tl(v11, &v9) & 1) == 0)
          return 1;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1000D37DC(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  v10 = a1;
  v11 = 0;
  if (a1)
  {
    sub_1000D3708(a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3848, (uint64_t)&v10);
    if (a2)
    {
      if (a3)
      {
        v7 = v11;
        v8 = v12;
        *a2 = v11;
        *a3 = v8 - v7;
      }
    }
  }
  return v13;
}

BOOL sub_1000D3848(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BOOL4 v8;

  v8 = sub_1000D363C(*(const void **)a5, *(_QWORD *)a5 + *(unsigned __int8 *)(*(_QWORD *)a5 + 1) + 2, a1, (uint64_t)a1 + a2);
  if (v8)
  {
    *(_BYTE *)(a5 + 24) = 1;
    *(_QWORD *)(a5 + 8) = a3;
    *(_QWORD *)(a5 + 16) = a3 + a4;
  }
  return !v8;
}

uint64_t sub_1000D38A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!a4)
    return 0;
  v7 = 0;
  v8 = 0;
  v5 = result;
  v6 = 0;
  if (result)
  {
    sub_1000D3708(a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3848, (uint64_t)&v5);
    if ((_BYTE)v8)
    {
      *a4 = sub_1000D3920(v6, v7);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D3920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t result;
  unsigned int v5;
  _QWORD v6[2];
  uint64_t v7;

  v7 = 0;
  v6[0] = a1;
  v6[1] = a2;
  if (!ccder_blob_decode_tl(v6, 2, &v7))
    return 0;
  v2 = v7;
  if ((unint64_t)(v7 - 9) < 0xFFFFFFFFFFFFFFF8)
    return 0;
  v3 = (unsigned __int8 *)v6[0];
  result = (uint64_t)*(char *)v6[0] >> 7;
  do
  {
    v5 = *v3++;
    result = v5 | (unint64_t)(result << 8);
    --v2;
  }
  while (v2);
  return result;
}

uint64_t sub_1000D3988(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = 0;
  v11 = 0;
  v8 = result;
  v9 = 0;
  if (result)
  {
    sub_1000D3708(a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3848, (uint64_t)&v8);
    if ((_BYTE)v11 && (v8 = v9, v9 = v10, v12 = 0, v13 = 0, (ccder_blob_decode_range(&v8, 4, &v12) & 1) != 0))
    {
      result = 1;
      if (a4)
      {
        if (a5)
        {
          v7 = (v13 - v12);
          *a4 = v12;
          *a5 = v7;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double sub_1000D3A24(__int128 *a1, uint64_t a2, _DWORD *a3, _QWORD *a4)
{
  double result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v11 = *a1;
  v9 = 0;
  v10 = 0;
  if (ccder_blob_decode_range(&v11, a2, &v9))
  {
    v8 = v9;
    *a4 = v9;
    *a3 = v10 - v8;
    result = *(double *)&v11;
    *a1 = v11;
  }
  return result;
}

uint64_t sub_1000D3A90(uint64_t a1, uint64_t a2, unsigned int (*a3)(uint64_t, _QWORD, uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  *(_QWORD *)&v12 = a1;
  *((_QWORD *)&v12 + 1) = a2;
  v6 = ccder_blob_decode_range(&v12, 0x2000000000000010, &v12);
  if ((_DWORD)v6)
  {
    v11 = 0;
    v7 = v12;
    if (sub_1000D3B40(&v12, &v10, &v11))
    {
      do
      {
        v8 = v12 + v11;
        if (!a3(v7, v12 + v11 - v7, a4))
          break;
        *(_QWORD *)&v12 = v8;
        v7 = v8;
      }
      while ((sub_1000D3B40(&v12, &v10, &v11) & 1) != 0);
    }
  }
  return v6;
}

uint64_t sub_1000D3B40(__int128 *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v7 = *a1;
  result = ccder_blob_decode_tag(&v7, &v9);
  if ((_DWORD)result)
  {
    result = ccder_blob_decode_len(&v7, &v8);
    if ((_DWORD)result)
    {
      *a1 = v7;
      *a2 = v9;
      *a3 = v8;
      return 1;
    }
  }
  return result;
}

BOOL sub_1000D3BBC(uint64_t a1, uint64_t a2)
{
  int v2;
  _BOOL8 result;
  _QWORD v4[2];
  uint64_t v5;

  v5 = 0;
  v4[0] = a1;
  v4[1] = a2;
  v2 = ccder_blob_decode_tl(v4, 1, &v5);
  result = 0;
  if (v2)
  {
    if (v5 == 1)
      return *(_BYTE *)v4[0] != 0;
  }
  return result;
}

uint64_t sub_1000D3C14(void **a1)
{
  void *v2;
  void *v3;

  if (!a1)
    return 0xFFFFFFFFLL;
  while (1)
  {
    v2 = *a1;
    if (!*a1)
      break;
    v3 = (void *)*((_QWORD *)v2 + 1);
    *a1 = *(void **)v2;
    if (v3)
    {
      memset_s(v3, *((_QWORD *)v2 + 2), 0, *((_QWORD *)v2 + 2));
      free(*((void **)v2 + 1));
    }
    memset_s(v2, 0x18uLL, 0, 0x18uLL);
    free(v2);
  }
  return 0;
}

uint64_t sub_1000D3C8C(_QWORD *a1, unsigned __int8 *a2)
{
  _QWORD **v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *i;
  void *v6;

  if (!a1)
    return 0xFFFFFFFFLL;
  v2 = (_QWORD **)a1;
  result = (uint64_t)sub_1000D3D20(a1, a2);
  if (result)
  {
    v4 = result;
    for (i = *v2; i != (_QWORD *)result; i = (_QWORD *)*i)
      v2 = (_QWORD **)i;
    *v2 = *(_QWORD **)result;
    v6 = *(void **)(result + 8);
    if (v6)
    {
      memset_s(v6, *(_QWORD *)(v4 + 16), 0, *(_QWORD *)(v4 + 16));
      free(*(void **)(v4 + 8));
    }
    memset_s((void *)v4, 0x18uLL, 0, 0x18uLL);
    free((void *)v4);
    return 0;
  }
  return result;
}

_QWORD *sub_1000D3D20(_QWORD *a1, unsigned __int8 *a2)
{
  _QWORD *v2;
  uint64_t v4;
  const void *v6;
  uint64_t v7;

  if (!a1)
    return 0;
  v6 = 0;
  v7 = 0;
  v2 = (_QWORD *)*a1;
  if (*a1)
  {
    do
    {
      v4 = v2[1] + v2[2];
      v6 = (const void *)v2[1];
      v7 = v4;
      if (ccder_blob_decode_sequence_tl(&v6, &v6) && sub_1000D363C(a2, (uint64_t)&a2[a2[1] + 2], v6, v7))
        break;
      v2 = (_QWORD *)*v2;
    }
    while (v2);
  }
  return v2;
}

uint64_t sub_1000D3DA0(_QWORD *a1, unsigned __int8 *a2, int a3, _QWORD *a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v8 = sub_1000D3D20(a1, a2);
  if (!v8)
    return 0;
  v9 = 1;
  if (a4)
  {
    if (a5)
    {
      v10 = v8[1] + v8[2];
      *(_QWORD *)&v17 = v8[1];
      *((_QWORD *)&v17 + 1) = v10;
      v9 = ccder_blob_decode_sequence_tl(&v17, &v17);
      if ((_DWORD)v9)
      {
        if (sub_1000D3E7C(&v17, 12, 0, 0))
        {
          v11 = v17;
          v15 = 0;
          v16 = 0;
          if (ccder_blob_decode_tag(&v17, &v15))
          {
            if (ccder_blob_decode_len(&v17, &v16))
            {
              v13 = v16;
              v12 = v17;
              if (a3)
              {
                v13 = (v17 + v16 - v11);
                v12 = v11;
              }
              *a4 = v12;
              *a5 = v13;
            }
          }
        }
      }
    }
  }
  return v9;
}

uint64_t sub_1000D3E7C(__int128 *a1, uint64_t a2, void *a3, int a4)
{
  __int128 v8;
  const void *v9;
  uint64_t v10;
  __int128 v11;

  v11 = *a1;
  v9 = 0;
  v10 = 0;
  if ((ccder_blob_decode_range(&v11, a2, &v9) & 1) == 0)
    return 0;
  v8 = v11;
  if (a3)
  {
    if ((_DWORD)v10 - (_DWORD)v9 == a4)
    {
      memcpy(a3, v9, (v10 - (_DWORD)v9));
      goto LABEL_5;
    }
    return 0;
  }
LABEL_5:
  *a1 = v8;
  return 1;
}

uint64_t sub_1000D3F08(_QWORD *a1, char *__s, void *a3, size_t a4)
{
  unsigned __int8 *v8;
  uint64_t result;
  void *__src;
  uint64_t v11;
  _BYTE v12[2];
  _BYTE v13[127];
  uint64_t v14;

  memset(v13, 0, sizeof(v13));
  v12[0] = 12;
  v12[1] = strlen(__s);
  v8 = (unsigned __int8 *)sub_1000D4030((uint64_t)v12, (uint64_t)&v14);
  result = 0xFFFFFFFFLL;
  if (a3 && v8)
  {
    __memcpy_chk(v13, __s, v8[1], 127);
    __src = 0;
    v11 = 0;
    if (sub_1000D3DA0(a1, v8, 0, &__src, &v11))
    {
      if (v11 == a4)
      {
        memcpy(a3, __src, a4);
        return 0;
      }
      else
      {
        return 4294967277;
      }
    }
    else
    {
      return 4294967293;
    }
  }
  return result;
}

uint64_t sub_1000D4030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unint64_t v5;

  v2 = a1;
  v4[1] = a2;
  v5 = 0;
  v4[0] = a1;
  if ((ccder_blob_decode_tl(v4, 12, &v5) & 1) == 0)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s bad 1%s\n", "aks", "", "", "", "der_key_validate");
    return 0;
  }
  if (v5 >= 0x11)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s bad 2%s\n", "aks", "", "", "", "der_key_validate");
    return 0;
  }
  return v2;
}

uint64_t sub_1000D412C(_QWORD *a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  v4 = sub_1000D3DA0(a1, a2, 1, &v7, &v8);
  v5 = v4;
  if (a3 && (_DWORD)v4)
    *a3 = sub_1000D3920(v7, v7 + v8);
  return v5;
}

uint64_t sub_1000D4184(_QWORD *a1, unsigned __int8 *a2, BOOL *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  v4 = sub_1000D3DA0(a1, a2, 1, &v7, &v8);
  v5 = v4;
  if (a3 && (_DWORD)v4)
    *a3 = sub_1000D3BBC(v7, v7 + v8);
  return v5;
}

uint64_t sub_1000D41DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
    return sub_1000D3708(a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D4218, a1)- 1;
  else
    return 4294967285;
}

uint64_t sub_1000D4218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  unsigned __int8 *v8;
  uint64_t v9;

  v8 = (unsigned __int8 *)sub_1000D4030(a1, a1 + a2);
  if (v8)
  {
    v9 = (uint64_t)v8;
    if (!sub_1000D3C8C(a5, v8) && !sub_1000D44A8(a5, v9, a3, a3 + a4))
      return 1;
  }
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s fail%s\n", "aks", "", "", "", "_merge_dict_cb", ":", 647, "", 0, "", "");
  return 0;
}

uint64_t sub_1000D42E4(_QWORD *a1, _QWORD *a2, size_t *a3)
{
  uint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  rsize_t v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  size_t v16;
  char *v17;
  void *v18;
  unint64_t v19;
  char *v20;
  char *v22;
  char v23;
  char *v25;
  char *v26;

  v3 = 0xFFFFFFFFLL;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        v7 = (_QWORD *)*a1;
        if (*a1)
        {
          v8 = 0;
          v9 = 0;
          v10 = 0;
          do
          {
            v10 += v7[2];
            v7 = (_QWORD *)*v7;
            v9 -= 16;
            --v8;
          }
          while (v7);
          if (v8 >= 0xF000000000000001 && (v11 = -v9, (v12 = (char *)calloc(-v9, 1uLL)) != 0))
          {
            v13 = v12;
            v14 = (_QWORD *)*a1;
            if (*a1)
            {
              v15 = v12;
              do
              {
                *(_OWORD *)v15 = *(_OWORD *)(v14 + 1);
                v15 += 16;
                v14 = (_QWORD *)*v14;
              }
              while (v14);
            }
            qsort(v12, -(uint64_t)v8, 0x10uLL, (int (__cdecl *)(const void *, const void *))sub_1000D66D4);
            v16 = ccder_sizeof(0x2000000000000011, v10);
            v17 = (char *)calloc(v16, 1uLL);
            v18 = v17;
            if (v17)
            {
              v25 = v17;
              v26 = &v17[v16];
              v19 = v8 - 1;
              v20 = &v13[-v9 - 8];
              while (!__CFADD__(v19++, 1))
              {
                v22 = v20 - 16;
                v23 = ccder_blob_encode_body(&v25, *(_QWORD *)v20, *((_QWORD *)v20 - 1));
                v20 = v22;
                if ((v23 & 1) == 0)
                  goto LABEL_16;
              }
              if (!ccder_blob_encode_tl(&v25, 0x2000000000000011, v10) || v25 != v26)
              {
LABEL_16:
                v3 = 0xFFFFFFFFLL;
                goto LABEL_20;
              }
              v3 = 0;
              *a2 = v18;
              *a3 = v16;
              v18 = 0;
            }
            else
            {
              v3 = 4294967279;
            }
LABEL_20:
            memset_s(v13, v11, 0, v11);
            free(v13);
            if (v18)
            {
              memset_s(v18, v16, 0, v16);
              free(v18);
            }
          }
          else
          {
            return 0xFFFFFFFFLL;
          }
        }
      }
    }
  }
  return v3;
}

uint64_t sub_1000D44A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  char *v12;
  char *v13;
  char *v14;
  int v15;
  char *v16;
  int v17;
  char *v18;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;

  result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3 && a4)
  {
    v9 = sub_1000D36A4(a3, a4);
    if (v9 <= a4 - a3)
    {
      v10 = v9;
      v11 = ccder_sizeof(0x2000000000000010, v9 + *(unsigned __int8 *)(a2 + 1) + 2);
      v12 = (char *)calloc(v11, 1uLL);
      if (!v12)
        return 4294967279;
      v13 = v12;
      v14 = &v12[v11];
      v22 = v12;
      v23 = &v12[v11];
      if (ccder_blob_encode_body(&v22, v10, a3))
      {
        v24 = v13;
        v25 = v23;
        v15 = ccder_blob_encode_body(&v24, *(unsigned __int8 *)(a2 + 1) + 2, a2);
        v16 = v25;
        if (!v15)
          v16 = 0;
        v24 = v13;
        v25 = v16;
        v17 = ccder_blob_encode_tl(&v24, 0x2000000000000010, v14 - v16);
        v18 = v25;
        if (!v17)
          v18 = 0;
        if (v18 && v18 == v13)
        {
          v20 = calloc(0x18uLL, 1uLL);
          if (v20)
          {
            v21 = v20;
            result = 0;
            v21[1] = v13;
            v21[2] = v11;
            *v21 = *a1;
            *a1 = v21;
            return result;
          }
        }
      }
      memset_s(v13, v11, 0, v11);
      free(v13);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_1000D4614(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D44A8(a1, a2, a3, a3 + *(unsigned __int8 *)(a3 + 1) + 2);
}

uint64_t sub_1000D4624(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;
  char *v13;
  char *v14;
  int v15;
  char *v16;
  int v17;
  char *v18;
  BOOL v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;

  result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3)
  {
    v9 = *(unsigned __int8 *)(a2 + 1);
    v10 = ccder_sizeof(4, a4);
    v11 = ccder_sizeof(0x2000000000000010, v9 + v10 + 2);
    v12 = (char *)calloc(v11, 1uLL);
    if (v12)
    {
      v13 = v12;
      v14 = &v12[v11];
      v22 = v12;
      v23 = &v12[v11];
      if (!ccder_blob_encode_body(&v22, a4, a3) || !ccder_blob_encode_tl(&v22, 4, a4))
        goto LABEL_19;
      v24 = v13;
      v25 = v23;
      v15 = ccder_blob_encode_body(&v24, *(unsigned __int8 *)(a2 + 1) + 2, a2);
      v16 = v25;
      if (!v15)
        v16 = 0;
      v24 = v13;
      v25 = v16;
      v17 = ccder_blob_encode_tl(&v24, 0x2000000000000010, v14 - v16);
      v18 = v25;
      if (!v17)
        v18 = 0;
      v19 = v18 && v18 == v13;
      if (v19 && (v20 = calloc(0x18uLL, 1uLL)) != 0)
      {
        v21 = v20;
        result = 0;
        v21[1] = v13;
        v21[2] = v11;
        *v21 = *a1;
        *a1 = v21;
      }
      else
      {
LABEL_19:
        memset_s(v13, v11, 0, v11);
        free(v13);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_1000D4790(_QWORD *a1, char *__s, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  _BYTE v10[2];
  _BYTE v11[127];
  uint64_t v12;

  memset(v11, 0, sizeof(v11));
  v10[0] = 12;
  v10[1] = strlen(__s);
  v8 = sub_1000D4030((uint64_t)v10, (uint64_t)&v12);
  result = 4294967285;
  if (a3)
  {
    if (v8)
    {
      __memcpy_chk(v11, __s, *(unsigned __int8 *)(v8 + 1), 127);
      return sub_1000D4624(a1, v8, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1000D487C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  char *v10;
  char *v11;
  char *v12;
  int v13;
  char *v14;
  int v15;
  char *v16;
  BOOL v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  result = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    v7 = *(unsigned __int8 *)(a2 + 1);
    v8 = ccder_sizeof(1, 1);
    v9 = ccder_sizeof(0x2000000000000010, v7 + v8 + 2);
    v10 = (char *)calloc(v9, 1uLL);
    if (v10)
    {
      v11 = v10;
      v12 = &v10[v9];
      v21 = v10;
      v22 = &v10[v9];
      v20 = a3 << 31 >> 31;
      if (!ccder_blob_encode_body(&v21, 1, &v20) || !ccder_blob_encode_tl(&v21, 1, 1))
        goto LABEL_18;
      v23 = v11;
      v24 = v22;
      v13 = ccder_blob_encode_body(&v23, *(unsigned __int8 *)(a2 + 1) + 2, a2);
      v14 = v24;
      if (!v13)
        v14 = 0;
      v23 = v11;
      v24 = v14;
      v15 = ccder_blob_encode_tl(&v23, 0x2000000000000010, v12 - v14);
      v16 = v24;
      if (!v15)
        v16 = 0;
      v17 = v16 && v16 == v11;
      if (v17 && (v18 = calloc(0x18uLL, 1uLL)) != 0)
      {
        v19 = v18;
        result = 0;
        v19[1] = v11;
        v19[2] = v9;
        *v19 = *a1;
        *a1 = v19;
      }
      else
      {
LABEL_18:
        memset_s(v11, v9, 0, v9);
        free(v11);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_1000D49E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  char *v20;
  int v21;
  char *v22;
  BOOL v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v3 = a3;
  v6 = HIBYTE(a3);
  if ((HIBYTE(a3) + 1) > 1u)
  {
    v11 = 8;
  }
  else
  {
    v7 = 9;
    v8 = 48;
    v9 = 1;
    while ((unint64_t)(v7 - 2) >= 2)
    {
      v10 = a3 >> v8;
      --v7;
      v8 -= 8;
      if ((_DWORD)v6 != v10)
      {
        v9 = v7 - 1;
        goto LABEL_8;
      }
    }
    v7 = 2;
LABEL_8:
    if ((((a3 >> (8 * v9 - 8)) ^ v6) & 0x80) != 0)
      v11 = v7;
    else
      v11 = v9;
  }
  v30 = 0;
  result = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    v13 = *(unsigned __int8 *)(a2 + 1);
    v14 = ccder_sizeof(2, v11);
    v15 = ccder_sizeof(0x2000000000000010, v13 + v14 + 2);
    v16 = (char *)calloc(v15, 1uLL);
    if (v16)
    {
      v17 = v16;
      v18 = v11;
      do
      {
        *((_BYTE *)&v30 + v18 - 1) = v3;
        v3 >>= 8;
        --v18;
      }
      while (v18);
      v26 = v16;
      v27 = &v16[v15];
      if ((ccder_blob_encode_body(&v26, v11, &v30) & 1) == 0 || !ccder_blob_encode_tl(&v26, 2, v11))
        goto LABEL_30;
      v28 = v17;
      v29 = v27;
      v19 = ccder_blob_encode_body(&v28, *(unsigned __int8 *)(a2 + 1) + 2, a2);
      v20 = v29;
      if (!v19)
        v20 = 0;
      v28 = v17;
      v29 = v20;
      v21 = ccder_blob_encode_tl(&v28, 0x2000000000000010, &v17[v15] - v20);
      v22 = v29;
      if (!v21)
        v22 = 0;
      v23 = v22 && v22 == v17;
      if (v23 && (v24 = calloc(0x18uLL, 1uLL)) != 0)
      {
        v25 = v24;
        result = 0;
        v25[1] = v17;
        v25[2] = v15;
        *v25 = *a1;
        *a1 = v25;
      }
      else
      {
LABEL_30:
        memset_s(v17, v15, 0, v15);
        free(v17);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_1000D4BF4(_QWORD *a1, uint64_t a2, char *__s)
{
  uint64_t result;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  int v14;
  char *v15;
  int v16;
  char *v17;
  BOOL v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  result = 0xFFFFFFFFLL;
  if (a1 && a2 && __s)
  {
    v7 = strlen(__s);
    v8 = *(unsigned __int8 *)(a2 + 1);
    v9 = ccder_sizeof(12, v7);
    v10 = ccder_sizeof(0x2000000000000010, v8 + v9 + 2);
    v11 = (char *)calloc(v10, 1uLL);
    if (v11)
    {
      v12 = v11;
      v13 = &v11[v10];
      v21 = v11;
      v22 = &v11[v10];
      if (!ccder_blob_encode_body(&v21, v7, __s) || !ccder_blob_encode_tl(&v21, 12, v7))
        goto LABEL_19;
      v23 = v12;
      v24 = v22;
      v14 = ccder_blob_encode_body(&v23, *(unsigned __int8 *)(a2 + 1) + 2, a2);
      v15 = v24;
      if (!v14)
        v15 = 0;
      v23 = v12;
      v24 = v15;
      v16 = ccder_blob_encode_tl(&v23, 0x2000000000000010, v13 - v15);
      v17 = v24;
      if (!v16)
        v17 = 0;
      v18 = v17 && v17 == v12;
      if (v18 && (v19 = calloc(0x18uLL, 1uLL)) != 0)
      {
        v20 = v19;
        result = 0;
        v20[1] = v12;
        v20[2] = v10;
        *v20 = *a1;
        *a1 = v20;
      }
      else
      {
LABEL_19:
        memset_s(v12, v10, 0, v10);
        free(v12);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_1000D4D68(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  size_t v6;
  char *v8;
  int v9;
  char *v10;
  int v11;
  char *v12;
  BOOL v13;
  _QWORD *v14;
  char *v16;
  char *v17;
  void *__s;
  rsize_t __n;
  char *v20;
  char *v21;

  v3 = 0;
  __s = 0;
  __n = 0;
  v4 = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    v6 = 0;
    if (a3)
    {
      if (sub_1000D42E4(a3, &__s, &__n))
      {
        v3 = 0;
        v6 = 0;
      }
      else
      {
        v6 = ccder_sizeof(0x2000000000000010, *(unsigned __int8 *)(a2 + 1) + __n + 2);
        v8 = (char *)calloc(v6, 1uLL);
        v3 = v8;
        if (v8)
        {
          v16 = v8;
          v17 = &v8[v6];
          if (!ccder_blob_encode_body(&v16, __n, __s))
            goto LABEL_23;
          v20 = v3;
          v21 = v17;
          v9 = ccder_blob_encode_body(&v20, *(unsigned __int8 *)(a2 + 1) + 2, a2);
          v10 = v21;
          if (!v9)
            v10 = 0;
          v20 = v3;
          v21 = v10;
          v11 = ccder_blob_encode_tl(&v20, 0x2000000000000010, &v3[v6] - v10);
          v12 = v21;
          if (!v11)
            v12 = 0;
          v13 = v12 && v12 == v3;
          if (v13 && (v14 = calloc(0x18uLL, 1uLL)) != 0)
          {
            v4 = 0;
            v14[1] = v3;
            v14[2] = v6;
            *v14 = *a1;
            *a1 = v14;
            v3 = 0;
          }
          else
          {
LABEL_23:
            v4 = 0xFFFFFFFFLL;
          }
        }
        else
        {
          v4 = 4294967279;
        }
      }
    }
  }
  else
  {
    v6 = 0;
  }
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  if (v3)
  {
    memset_s(v3, v6, 0, v6);
    free(v3);
  }
  return v4;
}

BOOL sub_1000D4F04(_QWORD *a1)
{
  return *a1 == 0;
}

uint64_t sub_1000D4F14(uint64_t a1)
{
  uint64_t v1;

  if (a1)
    v1 = *(_QWORD *)(a1 + 8);
  else
    v1 = 0;
  return ccder_sizeof(4, v1);
}

uint64_t sub_1000D4F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
    v1 = *(_QWORD *)(a1 + 8);
  else
    v1 = 0;
  v2 = ccder_sizeof(4, v1);
  return ccder_sizeof(4, 4) + v2;
}

uint64_t sub_1000D4F70(__int128 *a1, _QWORD *a2)
{
  uint64_t result;
  int v5;
  __int128 v6;

  v6 = *a1;
  if (a2)
  {
    result = ccder_blob_encode_body_tl(&v6, 4, 4, a2 + 2);
    if (!(_DWORD)result)
      return result;
    if ((ccder_blob_encode_body_tl(&v6, 4, a2[1], *a2) & 1) == 0)
      return 0;
  }
  else
  {
    v5 = 0;
    if (!ccder_blob_encode_body_tl(&v6, 4, 4, &v5) || (ccder_blob_encode_tl(&v6, 4, 0) & 1) == 0)
      return 0;
  }
  *a1 = v6;
  return 1;
}

uint64_t sub_1000D5018(__int128 *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  int v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  __int128 v14;

  v6 = *(int **)a3;
  v5 = *(_QWORD *)(a3 + 8);
  v7 = *(_DWORD *)(a3 + 20);
  v11 = *a1;
  if (a2)
  {
    v14 = *a1;
    v12 = 0;
    v13 = 0;
    if ((ccder_blob_decode_range(&v14, 4, &v12) & 1) == 0)
      return 0;
    v6 = v12;
    v8 = v13 - (_DWORD)v12;
    v11 = v14;
  }
  else
  {
    LODWORD(v14) = v5;
    result = sub_1000D511C(&v11, 4, v6, &v14);
    if (!(_DWORD)result)
      return result;
    v8 = v14;
  }
  v14 = v11;
  v12 = 0;
  v13 = 0;
  if ((ccder_blob_decode_range(&v14, 4, &v12) & 1) == 0)
    return 0;
  v11 = v14;
  if ((v13 - (_DWORD)v12) > 4)
    return 0;
  v10 = *v12;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_DWORD *)(a3 + 16) = v10;
  *(_DWORD *)(a3 + 20) = v7;
  *a1 = v11;
  return 1;
}

uint64_t sub_1000D511C(__int128 *a1, uint64_t a2, void *a3, _DWORD *a4)
{
  int v7;
  __int128 v9;
  const void *v10;
  uint64_t v11;
  __int128 v12;

  v12 = *a1;
  v10 = 0;
  v11 = 0;
  if ((ccder_blob_decode_range(&v12, a2, &v10) & 1) == 0)
    return 0;
  v9 = v12;
  if (!a3 || !a4)
    goto LABEL_6;
  v7 = v11 - (_DWORD)v10;
  if (*a4 < (v11 - (_DWORD)v10))
    return 0;
  memcpy(a3, v10, (v11 - (_DWORD)v10));
  *a4 = v7;
LABEL_6:
  *a1 = v9;
  return 1;
}

uint64_t sub_1000D51B4(__int128 *a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v4;

  v4 = *a1;
  if (a2)
  {
    if ((ccder_blob_encode_body_tl(&v4, 4, a2[1], *a2) & 1) == 0)
      return 0;
  }
  else
  {
    result = ccder_blob_encode_tl(&v4, 4, 0);
    if (!(_DWORD)result)
      return result;
  }
  *a1 = v4;
  return 1;
}

uint64_t sub_1000D5220(__int128 *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t result;
  unsigned int v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  __int128 v12;

  v6 = *(void **)a3;
  v5 = *(_QWORD *)(a3 + 8);
  v9 = *a1;
  if (a2)
  {
    v12 = *a1;
    v10 = 0;
    v11 = 0;
    result = ccder_blob_decode_range(&v12, 4, &v10);
    if (!(_DWORD)result)
      return result;
    v6 = v10;
    v8 = v11 - (_DWORD)v10;
    v9 = v12;
  }
  else
  {
    LODWORD(v12) = v5;
    result = sub_1000D511C(&v9, 4, v6, &v12);
    if (!(_DWORD)result)
      return result;
    v8 = v12;
  }
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *a1 = v9;
  return 1;
}

uint64_t sub_1000D52CC(__int128 *a1, uint64_t a2)
{
  uint64_t result;
  __int128 v4;

  v4 = *a1;
  if (a2)
  {
    if ((ccder_blob_encode_body_tl(&v4, 4, 24, a2) & 1) == 0)
      return 0;
  }
  else
  {
    result = ccder_blob_encode_tl(&v4, 4, 0);
    if (!(_DWORD)result)
      return result;
  }
  *a1 = v4;
  return 1;
}

uint64_t sub_1000D533C(__int128 *a1, void *a2)
{
  __int128 v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;

  v8 = *a1;
  v6 = 0;
  v7 = 0;
  if ((ccder_blob_decode_range(&v8, 4, &v6) & 1) == 0)
    return 0;
  v5 = v8;
  if ((v7 - (_DWORD)v6) > 0x18)
    return 0;
  memcpy(a2, v6, (v7 - (_DWORD)v6));
  *a1 = v5;
  return 1;
}

uint64_t sub_1000D53BC(unsigned int *a1, int a2, _QWORD *a3, _DWORD *a4)
{
  uint64_t v8;
  uint64_t v10;
  size_t v11;
  void *v12;

  v12 = 0;
  if (sub_1000D49E0(&v12, (uint64_t)off_1002A0E48, *a1)
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E50, a1[1])
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E58, *((_QWORD *)a1 + 1))
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E68, a1[4])
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E78, a1[5])
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E90, *(_QWORD *)((char *)a1 + 26))
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0E98, *(_QWORD *)((char *)a1 + 34))
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0BA0, *(int *)((char *)a1 + 42))
    || sub_1000D49E0(&v12, (uint64_t)off_1002A0D68, *(unsigned int *)((char *)a1 + 46))
    || sub_1000D4624(&v12, (uint64_t)off_1002A0F60, (uint64_t)a1 + 50, 16)
    || a2
    && (sub_1000D49E0(&v12, (uint64_t)off_1002A0E80, *((char *)a1 + 66))
     || sub_1000D49E0(&v12, (uint64_t)off_1002A0E88, *((char *)a1 + 67))
     || sub_1000D49E0(&v12, (uint64_t)off_1002A1160, *(_QWORD *)(a1 + 17))
     || sub_1000D49E0(&v12, (uint64_t)off_1002A11A8, *(_QWORD *)(a1 + 19)))
    || (v10 = 0, v11 = 0, sub_1000D42E4(&v12, &v10, &v11)))
  {
    v8 = 0xFFFFFFFFLL;
  }
  else
  {
    v8 = 0;
    *a3 = v10;
    *a4 = v11;
  }
  sub_1000D3C14(&v12);
  return v8;
}

uint64_t sub_1000D55C8(uint64_t a1, unsigned int a2, char *__s)
{
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12[57];
  __int128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  result = 0xFFFFFFFFLL;
  if (a2 && a1)
  {
    if (__s)
    {
      memset_s(__s, 0x54uLL, 0, 0x54uLL);
      bzero(v12, 0x228uLL);
      v11 = off_1002A0E48;
      v12[4] = (uint64_t)off_1002A0E50;
      v12[9] = (uint64_t)off_1002A0E58;
      v12[14] = (uint64_t)off_1002A0E68;
      v12[19] = (uint64_t)off_1002A0E78;
      v12[24] = (uint64_t)off_1002A0E80;
      v12[29] = (uint64_t)off_1002A0E88;
      v12[34] = (uint64_t)off_1002A0E90;
      v12[39] = (uint64_t)off_1002A0E98;
      v12[44] = (uint64_t)off_1002A0BA0;
      v12[49] = (uint64_t)off_1002A0D68;
      v12[54] = (uint64_t)off_1002A0F60;
      v14 = off_1002A1160;
      v17 = off_1002A11A8;
      v8 = xmmword_1002168C0;
      v9 = 0;
      v10 = &v11;
      sub_1000D3708(a1, a1 + a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v8);
      *(_DWORD *)__s = sub_1000D3920(v12[0], v12[1]);
      *((_DWORD *)__s + 1) = sub_1000D3920(v12[5], v12[6]);
      *((_QWORD *)__s + 1) = sub_1000D3920(v12[10], v12[11]);
      *((_DWORD *)__s + 4) = sub_1000D3920(v12[15], v12[16]);
      *((_DWORD *)__s + 5) = sub_1000D3920(v12[20], v12[21]);
      *(_QWORD *)(__s + 26) = sub_1000D3920(v12[35], v12[36]);
      *(_QWORD *)(__s + 34) = sub_1000D3920(v12[40], v12[41]);
      *(_DWORD *)(__s + 42) = sub_1000D3920(v12[45], v12[46]);
      *(_DWORD *)(__s + 46) = sub_1000D3920(v12[50], v12[51]);
      sub_1000D3E7C(&v13, 4, __s + 50, 16);
      __s[66] = sub_1000D3920(v12[25], v12[26]);
      __s[67] = sub_1000D3920(v12[30], v12[31]);
      *(_QWORD *)(__s + 68) = sub_1000D3920(v15, v16);
      v7 = sub_1000D3920(v18, v19);
      result = 0;
      *(_QWORD *)(__s + 76) = v7;
    }
  }
  return result;
}

uint64_t sub_1000D582C(uint64_t a1, unsigned int a2, _BYTE *__s)
{
  uint64_t result;
  int v7;
  __int128 v8;
  uint64_t v9;
  void **v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    v13 = 0u;
    v15 = 0u;
    v16 = 0;
    v20 = 0u;
    v12 = 0u;
    v18 = 0u;
    v19 = 0u;
    v21 = 0u;
    v22 = 0;
    v11 = off_1002A0F58;
    v14 = (unint64_t)off_1002A0E68;
    v17 = off_1002A0D68;
    *(_QWORD *)&v20 = off_1002A0E48;
    v8 = xmmword_1002167B0;
    v9 = 0;
    v10 = &v11;
    if (sub_1000D3708(a1, a1 + a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v8))
    {
      *__s = sub_1000D3920(v12, *((uint64_t *)&v12 + 1));
      *((_DWORD *)__s + 1) = sub_1000D3920(*((uint64_t *)&v14 + 1), v15);
      *((_DWORD *)__s + 2) = sub_1000D3920(v18, *((uint64_t *)&v18 + 1));
      v7 = sub_1000D3920(*((uint64_t *)&v20 + 1), v21);
      result = 0;
      *((_DWORD *)__s + 3) = v7;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_1000D5990(uint64_t a1, unsigned int a2, void *__s, void *a4, void *a5)
{
  uint64_t result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void **v13;
  void *v14;
  __int128 v15;
  __int128 v16[2];
  __int128 v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;

  result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s && a4)
  {
    v10 = a1 + a2;
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    memset_s(a4, 0x10uLL, 0, 0x10uLL);
    v18 = 0;
    v15 = 0u;
    v16[0] = 0u;
    v17 = 0u;
    v20 = 0u;
    v21 = 0u;
    v14 = off_1002A1100;
    v16[1] = (unint64_t)off_1002A1108;
    v19 = off_1002A0C40;
    v11 = xmmword_100216790;
    v12 = 0;
    v13 = &v14;
    sub_1000D3708(a1, v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v11);
    if (sub_1000D3E7C(v16, 4, __s, 16)
      && sub_1000D3E7C((__int128 *)((char *)&v17 + 8), 4, a4, 16))
    {
      return sub_1000D3E7C(&v21, 4, a5, 16) - 1;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_1000D5B0C(uint64_t a1, uint64_t a2, char *__s)
{
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  void **v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  __int128 v45;
  __int128 v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;

  result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    v6 = a1 + a2;
    memset_s(__s, 0x58uLL, 0, 0x58uLL);
    v32 = 0u;
    v34 = 0;
    v35 = 0u;
    v36 = 0;
    v38 = 0u;
    v39 = 0u;
    v41 = 0;
    v42 = 0u;
    v43 = 0;
    v45 = 0u;
    v46 = 0u;
    v48 = 0;
    v49 = 0u;
    v50 = 0;
    v52 = 0u;
    v53 = 0u;
    v13 = 0u;
    v14 = 0u;
    v16 = 0u;
    v17 = 0;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0;
    v31 = 0u;
    v12 = off_1002A0C30;
    v15 = (unint64_t)off_1002A0C40;
    v18 = off_1002A0C20;
    *(_QWORD *)&v21 = off_1002A0C18;
    v24 = off_1002A0C38;
    *(_QWORD *)&v27 = off_1002A0EC0;
    v30 = off_1002A0E68;
    v33 = off_1002A0E70;
    v37 = off_1002A0D68;
    v40 = off_1002A0E58;
    v44 = off_1002A0E60;
    v47 = off_1002A1020;
    v51 = off_1002A1088;
    v9 = xmmword_1002168D0;
    v10 = 0;
    v11 = &v12;
    sub_1000D3708(a1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3540, (uint64_t)&v9);
    *(_DWORD *)__s = sub_1000D3920(v13, *((uint64_t *)&v13 + 1));
    if (sub_1000D3E7C((__int128 *)((char *)&v16 + 8), 4, __s + 4, 16)
      && sub_1000D3E7C(&v20, 4, __s + 20, 16)
      && (*((_DWORD *)__s + 9) = sub_1000D3920(*((uint64_t *)&v21 + 1), v22),
          *((_DWORD *)__s + 10) = sub_1000D3920(v25, *((uint64_t *)&v25 + 1)),
          *((_DWORD *)__s + 11) = sub_1000D3920(v31, *((uint64_t *)&v31 + 1)),
          *((_DWORD *)__s + 12) = sub_1000D3920(v34, v35),
          *((_DWORD *)__s + 15) = sub_1000D3920(v38, *((uint64_t *)&v38 + 1)),
          *((_DWORD *)__s + 13) = sub_1000D3920(v41, v42),
          *((_DWORD *)__s + 14) = sub_1000D3920(v45, *((uint64_t *)&v45 + 1)),
          sub_1000D5DF0((__int128 *)((char *)&v28 + 8), 4, __s + 64, 8u)))
    {
      v7 = *((_DWORD *)__s + 9);
      if ((v7 & 0x400) != 0)
      {
        *((_QWORD *)__s + 9) = sub_1000D3920(v48, v49);
        v7 = *((_DWORD *)__s + 9);
      }
      if ((v7 & 0x800) != 0)
      {
        v8 = sub_1000D3920(v52, *((uint64_t *)&v52 + 1));
        result = 0;
        *((_DWORD *)__s + 20) = v8;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_1000D5DF0(__int128 *a1, uint64_t a2, void *a3, unsigned int a4)
{
  uint64_t v7;
  size_t v8;
  __int128 v10;
  const void *v11;
  uint64_t v12;
  __int128 v13;

  v13 = *a1;
  v11 = 0;
  v12 = 0;
  v7 = ccder_blob_decode_range(&v13, a2, &v11);
  if ((v7 & 1) != 0)
  {
    v10 = v13;
    if (a3)
    {
      if ((int)v12 - (int)v11 >= a4)
        v8 = a4;
      else
        v8 = (v12 - (_DWORD)v11);
      memcpy(a3, v11, v8);
    }
    *a1 = v10;
  }
  return v7;
}

uint64_t sub_1000D5E74(int *a1, _QWORD *a2, _DWORD *a3)
{
  uint64_t v3;
  int v7;
  uint64_t v9;
  size_t v10;
  void *v11;

  v11 = 0;
  v3 = 4294967273;
  if (a2 && a3)
  {
    if (a1 && (v7 = *a1) != 0)
    {
      if ((v7 & 1) != 0)
      {
        sub_1000D4790(&v11, "persona_uuid", (uint64_t)(a1 + 1), 16);
        v7 = *a1;
      }
      if ((v7 & 2) != 0)
        sub_1000D4790(&v11, "volume_uuid", (uint64_t)(a1 + 5), 16);
      v9 = 0;
      v10 = 0;
      if (!sub_1000D42E4(&v11, &v9, &v10))
      {
        v3 = 0;
        *a2 = v9;
        *a3 = v10;
      }
    }
    else
    {
      v3 = 0;
      *a2 = 0;
      *a3 = 0;
    }
  }
  sub_1000D3C14(&v11);
  return v3;
}

uint64_t sub_1000D5F48(uint64_t a1, uint64_t a2, char *__s)
{
  uint64_t v3;
  uint64_t v6;
  void *v8;

  v8 = 0;
  v3 = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    v6 = a1 + a2;
    memset_s(__s, 0x24uLL, 0, 0x24uLL);
    if (sub_1000D3708(a1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D4218, (uint64_t)&v8))
    {
      if (!sub_1000D3F08(&v8, "volume_uuid", __s + 20, 0x10uLL))
        *(_DWORD *)__s |= 2u;
      v3 = 0;
      if (!sub_1000D3F08(&v8, "persona_uuid", __s + 4, 0x10uLL))
        *(_DWORD *)__s |= 1u;
    }
    else
    {
      v3 = 0xFFFFFFFFLL;
    }
  }
  sub_1000D3C14(&v8);
  return v3;
}

uint64_t sub_1000D6028(uint64_t a1, _QWORD *a2, _DWORD *a3)
{
  uint64_t v3;
  uint64_t v8;
  size_t v9;
  void *v10;

  v10 = 0;
  v3 = 4294967273;
  if (a2 && a3)
  {
    if (a1)
    {
      if (!sub_1000D4790(&v10, "options", a1, 8)
        && !sub_1000D4790(&v10, "kc", a1 + 8, 4))
      {
        v8 = 0;
        v9 = 0;
        if (!sub_1000D42E4(&v10, &v8, &v9))
        {
          v3 = 0;
          *a2 = v8;
          *a3 = v9;
        }
      }
    }
    else
    {
      v3 = 0;
      *a2 = 0;
      *a3 = 0;
    }
  }
  sub_1000D3C14(&v10);
  return v3;
}

uint64_t sub_1000D60F0(uint64_t a1, uint64_t a2, char *__s)
{
  uint64_t v3;
  uint64_t v6;
  void *v8;

  v8 = 0;
  v3 = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    v6 = a1 + a2;
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    if (sub_1000D3708(a1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D4218, (uint64_t)&v8))
    {
      sub_1000D3F08(&v8, "options", __s, 8uLL);
      sub_1000D3F08(&v8, "kc", __s + 8, 4uLL);
      v3 = 0;
    }
    else
    {
      v3 = 0xFFFFFFFFLL;
    }
  }
  sub_1000D3C14(&v8);
  return v3;
}

uint64_t sub_1000D61B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[59];

  result = 0;
  if (a1 && a2)
  {
    v9 = 0;
    v10 = 0;
    v7 = off_1002A0B98;
    v8 = 0;
    if (off_1002A0B98
      && (sub_1000D3708(a1, a1 + a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000D3848, (uint64_t)&v7), (_BYTE)v10))
    {
      v4 = 0;
      v11[0] = 6;
      v11[1] = off_1002A0CF0;
      v11[2] = 10;
      v11[3] = off_1002A0D10;
      v11[4] = 17;
      v11[5] = off_1002A0D28;
      v11[6] = 1;
      v11[7] = off_1002A0CB8;
      v11[8] = 2;
      v11[9] = off_1002A0CD0;
      v11[10] = 3;
      v11[11] = off_1002A0CE0;
      v11[12] = 4;
      v11[13] = off_1002A0CE8;
      v11[14] = 5;
      v11[15] = off_1002A0CC8;
      v11[16] = 7;
      v11[17] = off_1002A0CF8;
      v11[18] = 8;
      v11[19] = off_1002A0D00;
      v11[20] = 9;
      v11[21] = off_1002A0D08;
      v11[22] = 11;
      v11[23] = off_1002A0D18;
      v11[24] = 12;
      v11[25] = off_1002A0D90;
      v11[26] = 13;
      v11[27] = off_1002A0D88;
      v11[28] = 14;
      v11[29] = off_1002A0D98;
      v11[30] = 15;
      v11[31] = off_1002A0DA0;
      v11[32] = 16;
      v11[33] = off_1002A0D20;
      v11[34] = 18;
      v11[35] = off_1002A0DA8;
      v11[36] = 19;
      v11[37] = off_1002A0DB0;
      v11[38] = 20;
      v11[39] = off_1002A0DB8;
      v11[40] = 21;
      v11[41] = off_1002A0DC0;
      v11[42] = 22;
      v11[43] = off_1002A0DC8;
      v11[44] = 23;
      v11[45] = off_1002A0D30;
      v11[46] = 24;
      v11[47] = off_1002A0D38;
      v11[48] = 25;
      v11[49] = off_1002A0D40;
      v11[50] = 26;
      v11[51] = off_1002A0D48;
      v11[52] = 27;
      v11[53] = off_1002A10E8;
      v11[54] = 28;
      v11[55] = off_1002A11B0;
      v11[56] = 29;
      v11[57] = off_1002A11B8;
      v5 = v8;
      v6 = v9;
      while (!sub_1000D363C((const void *)v11[v4 + 1], v11[v4 + 1] + *(unsigned __int8 *)(v11[v4 + 1] + 1) + 2, v5, v6))
      {
        v4 += 2;
        if (v4 == 58)
          return 0;
      }
      return LODWORD(v11[v4]);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D6594(__int128 *a1, uint64_t a2, uint64_t *a3, _DWORD *a4)
{
  const void *v7;
  int v8;
  size_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  const void *v13;
  uint64_t v14;
  __int128 v15;

  v15 = *a1;
  v13 = 0;
  v14 = 0;
  if ((ccder_blob_decode_range(&v15, a2, &v13) & 1) == 0)
    return 0;
  v7 = v13;
  v12 = v15;
  if (a3 && a4)
  {
    v8 = v14 - (_DWORD)v13;
    v9 = (v14 - (_DWORD)v13);
    result = (uint64_t)calloc(v9, 1uLL);
    if (!result)
      return result;
    v11 = result;
    memcpy((void *)result, v7, v9);
    *a3 = v11;
    *a4 = v8;
  }
  *a1 = v12;
  return 1;
}

uint64_t sub_1000D664C(__int128 *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v9 = 0;
  if (a3)
    *a3 = 0;
  v8 = *a1;
  v6 = 0;
  v7 = 0;
  result = ccder_blob_decode_range(&v8, a2, &v6);
  if ((_DWORD)result)
  {
    if (ccn_read_uint(1, &v9, v7 - v6, v6))
    {
      return 0;
    }
    else
    {
      *a1 = v8;
      if (a3)
        *a3 = v9;
      return 1;
    }
  }
  return result;
}

uint64_t sub_1000D66D4(_QWORD *a1, void **a2)
{
  uint64_t v2;
  char *v3;
  const void *v4;
  unint64_t v6;
  unint64_t v7;
  size_t v8;
  int v9;
  int v11;
  void *__s2[2];
  _QWORD v13[2];
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v2 = *a1 + a1[1];
  v13[0] = *a1;
  v13[1] = v2;
  v3 = (char *)a2[1] + (_QWORD)*a2;
  __s2[0] = *a2;
  __s2[1] = v3;
  if (!ccder_blob_decode_sequence_tl(v13, v13))
    return 4294967293;
  if (!ccder_blob_decode_sequence_tl(__s2, __s2))
    return 4294967293;
  v17 = 0;
  v15 = 0;
  v16 = 0;
  v14 = 0;
  if (!ccder_blob_decode_tag(v13, &v17))
    return 4294967293;
  if (!ccder_blob_decode_len(v13, &v16))
    return 4294967293;
  v4 = (const void *)v13[0];
  if (!v13[0]
    || !ccder_blob_decode_tag(__s2, &v15)
    || !ccder_blob_decode_len(__s2, &v14)
    || !__s2[0])
  {
    return 4294967293;
  }
  if (v17 > v15)
    return 1;
  if (v15 > v17)
    return 0xFFFFFFFFLL;
  v6 = v16;
  v7 = v14;
  v8 = v16 >= v14 ? v14 : v16;
  v9 = memcmp(v4, __s2[0], v8);
  if (v9 > 0 || !v9 && v6 > v7)
    return 1;
  v11 = v9 < 0 || v6 < v7;
  return (v11 << 31 >> 31);
}

uint64_t sub_1000D67FC()
{
  sub_1000D2AAC(&off_1002433E8 != 0, 36, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return 4294967284;
}

uint64_t sub_1000D6908()
{
  sub_1000D2AAC(&off_1002433E8 != 0, 62, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(sub_1000C30E0 != 0, 63, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return sub_1000C30E0();
}

uint64_t sub_1000D6964(uint64_t a1, unsigned int a2)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 70, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(sub_1000C314C != 0, 71, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return sub_1000C314C(a1, a2);
}

uint64_t sub_1000D69D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 78, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 79, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000D6A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 86, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 87, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1000D6B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 94, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 95, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1000D6C1C(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 106, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 107, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1000D6CE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 115, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 116, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1000D6DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 123, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 124, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2, a3, a4, a5);
}

uint64_t sub_1000D6E50()
{
  sub_1000D2AAC(&off_1002433E8 != 0, 131, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 132, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0]();
}

uint64_t sub_1000D6EAC(uint64_t a1, uint64_t a2)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 139, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 140, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1, a2);
}

uint64_t sub_1000D6F20(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 147, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 148, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D6F8C(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 155, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 156, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D6FF8(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 163, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 164, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D7064(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 171, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 172, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D70D0(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 179, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 180, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D713C(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 187, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 188, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D71A8(uint64_t a1)
{
  sub_1000D2AAC(&off_1002433E8 != 0, 195, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_1000D2AAC(0, 196, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  return MEMORY[0](a1);
}

uint64_t sub_1000D7214(int a1)
{
  return -a1 & 3;
}

char *sub_1000D7220(_DWORD *a1, const void *a2, int a3)
{
  char *v3;
  int v5;
  size_t v6;
  int __s;

  v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    v5 = -a3;
    v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *sub_1000D72A4(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v12;
  int v13;
  uint64_t *v14;
  char *result;
  char *v16;
  int v17;
  uint64_t v18;
  const void **v19;
  const void *v20;
  uint64_t *v21;
  const void **v22;

  v21 = &a9;
  v12 = 4;
  if (a3)
  {
    v13 = a3;
    do
    {
      v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  result = (char *)calloc(1uLL, v12);
  v16 = result;
  v22 = (const void **)&a9;
  v17 = 0;
  if (a3)
  {
    v18 = 4;
    do
    {
      v19 = v22;
      v20 = *v22;
      v22 += 2;
      result = sub_1000D7220(&v16[v18], v20, *((_DWORD *)v19 + 2));
      v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

uint64_t sub_1000D7380(unsigned int *a1, unint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v9;
  char *v11;
  void **v12;
  void *v13;
  char *v14;
  size_t v15;
  unsigned int v16;
  size_t *v17;
  void **v19;

  if (a2 < 4)
    return 0xFFFFFFFFLL;
  v9 = a3;
  if (*a1 >= a3)
  {
    v19 = (void **)&a9;
    if (!a3)
      return 0;
    v11 = (char *)(a1 + 1);
    while (1)
    {
      v12 = v19;
      v13 = *v19;
      v19 += 2;
      v16 = *(_DWORD *)v11;
      v14 = v11 + 4;
      v15 = v16;
      if (v16 > a2)
        break;
      if (v13)
      {
        v17 = (size_t *)v12[1];
        if (*v17 < v15)
          return 0xFFFFFFFFLL;
        memcpy(v13, v14, v15);
        *v17 = v15;
      }
      v11 = &v14[v15];
      if (!--v9)
        return 0;
    }
  }
  return 0xFFFFFFFFLL;
}

BOOL sub_1000DB130(int a1)
{
  return a1 != -72499473;
}

double sub_1000DBFDC(_QWORD *a1)
{
  uint64_t v2;
  double result;

  sub_1000DC3EC(a1, 8);
  v2 = a1[2];
  result = *(double *)(*a1 + v2);
  a1[2] = v2 + 8;
  return result;
}

float sub_1000DC014(_QWORD *a1)
{
  uint64_t v2;
  float result;

  sub_1000DC3EC(a1, 4);
  v2 = a1[2];
  result = *(float *)(*a1 + v2);
  a1[2] = v2 + 4;
  return result;
}

uint64_t sub_1000DC050(uint64_t *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0;
  v3 = 0;
  while (v2 <= 0x3F)
  {
    sub_1000DC3EC(a1, 1);
    v4 = *a1;
    v5 = a1[2];
    a1[2] = v5 + 1;
    LOBYTE(v4) = *(_BYTE *)(v4 + v5);
    v3 |= (v4 & 0x7F) << v2;
    v2 += 7;
    if ((v4 & 0x80) == 0)
      return v3;
  }
  sub_1000DC268(-105, CFSTR("Invalid VarInt64"));
  return 0;
}

uint64_t sub_1000DC0D4(uint64_t *a1)
{
  return sub_1000DC050(a1);
}

uint64_t sub_1000DC0E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;

  sub_1000DC3EC(a1, 8);
  v2 = a1[2];
  result = *(_QWORD *)(*a1 + v2);
  a1[2] = v2 + 8;
  return result;
}

uint64_t sub_1000DC120(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;

  sub_1000DC3EC(a1, 4);
  v2 = a1[2];
  result = *(unsigned int *)(*a1 + v2);
  a1[2] = v2 + 4;
  return result;
}

uint64_t sub_1000DC158(uint64_t *a1)
{
  unsigned int v1;

  v1 = sub_1000DC050(a1);
  return -(v1 & 1) ^ (v1 >> 1);
}

unint64_t sub_1000DC178(uint64_t *a1)
{
  unint64_t v1;

  v1 = sub_1000DC050(a1);
  return -(uint64_t)(v1 & 1) ^ (v1 >> 1);
}

BOOL sub_1000DC198(uint64_t *a1)
{
  return sub_1000DC050(a1) != 0;
}

uint64_t sub_1000DC1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a1 + 8) || v2 == *(_QWORD *)(a1 + 24))
  {
    v3 = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  else
  {
    v3 = sub_1000DC050((uint64_t *)a1);
    *(_DWORD *)(a1 + 32) = v3;
    if (!sub_10010B5B4(v3))
    {
      sub_1000DC268(-103, CFSTR("Invalid wireformat in tag."));
      v3 = *(unsigned int *)(a1 + 32);
    }
    if (!sub_10010B5AC(v3))
    {
      sub_1000DC268(-103, CFSTR("A zero field number on the wire is invalid."));
      return *(unsigned int *)(a1 + 32);
    }
  }
  return v3;
}

BOOL sub_1000DC244(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[2];
  return v1 == a1[1] || v1 == a1[3];
}

id sub_1000DC268(uint64_t a1, void *a2)
{
  NSDictionary *v4;
  const __CFString *v6;
  NSError *v7;
  const __CFString *v8;
  void *v9;

  if (objc_msgSend(a2, "length"))
  {
    v8 = CFSTR("Reason");
    v9 = a2;
    v4 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
  }
  else
  {
    v4 = 0;
  }
  v6 = CFSTR("TransparencyGPBCodedInputStreamUnderlyingErrorKey");
  v7 = +[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("TransparencyGPBCodedInputStreamErrorDomain"), a1, v4);
  return -[NSException raise](+[NSException exceptionWithName:reason:userInfo:](NSException, "exceptionWithName:reason:userInfo:", CFSTR("TransparencyGPBCodedInputStreamException"), a2, +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v7, &v6, 1)), "raise");
}

const __CFString *sub_1000DC35C(uint64_t *a1)
{
  int v2;
  const __CFString *result;

  v2 = sub_1000DC050(a1);
  if (!v2)
    return &stru_1002508B8;
  sub_1000DC3EC(a1, v2);
  result = (const __CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithBytes:length:encoding:", *a1 + a1[2], v2, 4);
  a1[2] += v2;
  if (!result)
  {
    sub_1000DC268(-104, 0);
    return 0;
  }
  return result;
}

_QWORD *sub_1000DC3EC(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = result;
  v3 = result[2] + a2;
  if (v3 > result[1])
    result = sub_1000DC268(-100, 0);
  v4 = v2[3];
  if (v3 > v4)
  {
    v2[2] = v4;
    return sub_1000DC268(-101, 0);
  }
  return result;
}

id sub_1000DC448(uint64_t *a1)
{
  unsigned int v2;
  id result;

  v2 = sub_1000DC050(a1);
  if ((v2 & 0x80000000) != 0)
    return 0;
  sub_1000DC3EC(a1, v2);
  result = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", *a1 + a1[2], v2);
  a1[2] += v2;
  return result;
}

id sub_1000DC4BC(uint64_t *a1)
{
  unsigned int v2;
  id result;

  v2 = sub_1000DC050(a1);
  if ((v2 & 0x80000000) != 0)
    return 0;
  sub_1000DC3EC(a1, v2);
  result = objc_msgSend(objc_alloc((Class)NSData), "initWithBytesNoCopy:length:freeWhenDone:", *a1 + a1[2], v2, 0);
  a1[2] += v2;
  return result;
}

unint64_t sub_1000DC534(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 16) + a2;
  if (v4 > v3)
    sub_1000DC268(-102, 0);
  *(_QWORD *)(a1 + 24) = v4;
  return v3;
}

uint64_t sub_1000DC57C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1000DC584(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
}

_DWORD *sub_1000DC590(_DWORD *result, int a2)
{
  if (result[8] != a2)
    return sub_1000DC268(-103, CFSTR("Unexpected tag read"));
  return result;
}

uint64_t *sub_1000DCF38(uint64_t *result, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = result;
  v4 = result[2];
  if (v4 == result[1])
  {
    result = sub_1000DF974(result);
    v4 = v3[2];
  }
  v5 = *v3;
  v3[2] = v4 + 1;
  *(_BYTE *)(v5 + v4) = a2;
  v6 = v3[2];
  if (v6 == v3[1])
  {
    result = sub_1000DF974(v3);
    v6 = v3[2];
  }
  v7 = *v3;
  v3[2] = v6 + 1;
  *(_BYTE *)(v7 + v6) = BYTE1(a2);
  v8 = v3[2];
  if (v8 == v3[1])
  {
    result = sub_1000DF974(v3);
    v8 = v3[2];
  }
  v9 = *v3;
  v3[2] = v8 + 1;
  *(_BYTE *)(v9 + v8) = BYTE2(a2);
  v10 = v3[2];
  if (v10 == v3[1])
  {
    result = sub_1000DF974(v3);
    v10 = v3[2];
  }
  v11 = *v3;
  v3[2] = v10 + 1;
  *(_BYTE *)(v11 + v10) = BYTE3(a2);
  v12 = v3[2];
  if (v12 == v3[1])
  {
    result = sub_1000DF974(v3);
    v12 = v3[2];
  }
  v13 = *v3;
  v3[2] = v12 + 1;
  *(_BYTE *)(v13 + v12) = BYTE4(a2);
  v14 = v3[2];
  if (v14 == v3[1])
  {
    result = sub_1000DF974(v3);
    v14 = v3[2];
  }
  v15 = *v3;
  v3[2] = v14 + 1;
  *(_BYTE *)(v15 + v14) = BYTE5(a2);
  v16 = v3[2];
  if (v16 == v3[1])
  {
    result = sub_1000DF974(v3);
    v16 = v3[2];
  }
  v17 = *v3;
  v3[2] = v16 + 1;
  *(_BYTE *)(v17 + v16) = BYTE6(a2);
  v18 = v3[2];
  if (v18 == v3[1])
  {
    result = sub_1000DF974(v3);
    v18 = v3[2];
  }
  v19 = *v3;
  v3[2] = v18 + 1;
  *(_BYTE *)(v19 + v18) = HIBYTE(a2);
  return result;
}

uint64_t *sub_1000DD108(uint64_t *result, int a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = result;
  v4 = result[2];
  if (v4 == result[1])
  {
    result = sub_1000DF974(result);
    v4 = v3[2];
  }
  v5 = *v3;
  v3[2] = v4 + 1;
  *(_BYTE *)(v5 + v4) = a2;
  v6 = v3[2];
  if (v6 == v3[1])
  {
    result = sub_1000DF974(v3);
    v6 = v3[2];
  }
  v7 = *v3;
  v3[2] = v6 + 1;
  *(_BYTE *)(v7 + v6) = BYTE1(a2);
  v8 = v3[2];
  if (v8 == v3[1])
  {
    result = sub_1000DF974(v3);
    v8 = v3[2];
  }
  v9 = *v3;
  v3[2] = v8 + 1;
  *(_BYTE *)(v9 + v8) = BYTE2(a2);
  v10 = v3[2];
  if (v10 == v3[1])
  {
    result = sub_1000DF974(v3);
    v10 = v3[2];
  }
  v11 = *v3;
  v3[2] = v10 + 1;
  *(_BYTE *)(v11 + v10) = HIBYTE(a2);
  return result;
}

uint64_t *sub_1000DD228(uint64_t *result, unint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  v3 = result;
  if (a2 >= 0x80)
  {
    do
    {
      v5 = v3[2];
      if (v5 == v3[1])
      {
        result = sub_1000DF974(v3);
        v5 = v3[2];
      }
      v6 = *v3;
      v3[2] = v5 + 1;
      *(_BYTE *)(v6 + v5) = v2 | 0x80;
      v4 = v2 >> 7;
      v7 = v2 >= 0x4000;
      v2 >>= 7;
    }
    while (v7);
  }
  else
  {
    LOBYTE(v4) = a2;
  }
  v8 = v3[2];
  if (v8 == v3[1])
  {
    result = sub_1000DF974(v3);
    v8 = v3[2];
  }
  v9 = *v3;
  v3[2] = v8 + 1;
  *(_BYTE *)(v9 + v8) = v4;
  return result;
}

uint64_t *sub_1000DD35C(uint64_t *result, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0)
    return sub_1000DD228(result, (int)a2);
  else
    return sub_1000DD630(result, a2);
}

uint64_t *sub_1000DD630(uint64_t *result, unsigned int a2)
{
  unsigned int v2;
  uint64_t *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  v3 = result;
  if (a2 >= 0x80)
  {
    do
    {
      v5 = v3[2];
      if (v5 == v3[1])
      {
        result = sub_1000DF974(v3);
        v5 = v3[2];
      }
      v6 = *v3;
      v3[2] = v5 + 1;
      *(_BYTE *)(v6 + v5) = v2 | 0x80;
      v4 = v2 >> 7;
      v7 = v2 >= 0x4000;
      v2 >>= 7;
    }
    while (v7);
  }
  else
  {
    LOBYTE(v4) = a2;
  }
  v8 = v3[2];
  if (v8 == v3[1])
  {
    result = sub_1000DF974(v3);
    v8 = v3[2];
  }
  v9 = *v3;
  v3[2] = v8 + 1;
  *(_BYTE *)(v9 + v8) = v4;
  return result;
}

uint64_t *sub_1000DD98C(uint64_t *a1, int a2, unsigned int a3)
{
  unsigned int v5;

  v5 = sub_10010B59C(a2, 0);
  sub_1000DD630(a1, v5);
  return sub_1000DD630(a1, a3);
}

void sub_1000DDC9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DDCB4(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 8;
  return result;
}

uint64_t sub_1000DDCCC()
{
  return 8;
}

id sub_1000DDCD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeDoubleNoTag:");
}

id sub_1000DDCDC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeDouble:value:", *(unsigned int *)(a1 + 40));
}

void sub_1000DDE30(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DDE48(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 4;
  return result;
}

uint64_t sub_1000DDE60()
{
  return 4;
}

id sub_1000DDE68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFloatNoTag:");
}

id sub_1000DDE70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFloat:value:", *(unsigned int *)(a1 + 40));
}

void sub_1000DDFC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DDFDC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = sub_1000DFBF4(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

id sub_1000DE018(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeUInt64NoTag:", a2);
}

id sub_1000DE024(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeUInt64:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DE17C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE194(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = sub_1000DFBF4(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

id sub_1000DE1CC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeInt64NoTag:", a2);
}

id sub_1000DE1D8(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeInt64:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DE330(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE348(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 10;
  v3 = 1;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (a2 >> 28)
    v6 = 5;
  if (a2 >= 0x200000)
    v5 = v6;
  if (a2 >= 0x4000)
    v4 = v5;
  if (a2 >= 0x80)
    v3 = v4;
  if ((a2 & 0x80000000) == 0)
    v2 = v3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += v2;
  return result;
}

uint64_t sub_1000DE3A0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = 1;
  v2 = 2;
  v3 = 3;
  v4 = 4;
  if (a1 >> 28)
    v4 = 5;
  if (a1 >= 0x200000)
    v3 = v4;
  if (a1 >= 0x4000)
    v2 = v3;
  if (a1 >= 0x80)
    v1 = v2;
  if ((a1 & 0x80000000) == 0)
    return v1;
  else
    return 10;
}

id sub_1000DE3E4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeInt32NoTag:", a2);
}

id sub_1000DE3F0(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeInt32:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DE548(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE560(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 1;
  v3 = 2;
  v4 = 3;
  v5 = 4;
  if (a2 >> 28)
    v5 = 5;
  if (a2 >= 0x200000)
    v4 = v5;
  if (a2 >= 0x4000)
    v3 = v4;
  if (a2 >= 0x80)
    v2 = v3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += v2;
  return result;
}

uint64_t sub_1000DE5AC(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = 2;
  v2 = 3;
  v3 = 4;
  if (a1 >> 28)
    v3 = 5;
  if (a1 >= 0x200000)
    v2 = v3;
  if (a1 >= 0x4000)
    v1 = v2;
  if (a1 >= 0x80)
    return v1;
  else
    return 1;
}

id sub_1000DE5E4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeUInt32NoTag:", a2);
}

id sub_1000DE5F0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeUInt32:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DE748(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE760(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 8;
  return result;
}

id sub_1000DE778(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFixed64NoTag:", a2);
}

id sub_1000DE784(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFixed64:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DE8DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE8F4(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 4;
  return result;
}

id sub_1000DE90C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFixed32NoTag:", a2);
}

id sub_1000DE918(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeFixed32:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DEA70(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DEA88(uint64_t result, int a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (2 * a2) ^ (a2 >> 31);
  v3 = 2;
  v4 = 3;
  v5 = 4;
  if (v2 >> 28)
    v5 = 5;
  if (v2 >= 0x200000)
    v4 = v5;
  if (v2 >= 0x4000)
    v3 = v4;
  if (v2 >= 0x80)
    v6 = v3;
  else
    v6 = 1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += v6;
  return result;
}

uint64_t sub_1000DEADC(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (2 * a1) ^ (a1 >> 31);
  v2 = 2;
  v3 = 3;
  v4 = 4;
  if (v1 >> 28)
    v4 = 5;
  if (v1 >= 0x200000)
    v3 = v4;
  if (v1 >= 0x4000)
    v2 = v3;
  if (v1 >= 0x80)
    return v2;
  else
    return 1;
}

id sub_1000DEB1C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeSInt32NoTag:", a2);
}

id sub_1000DEB28(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeSInt32:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DEC80(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DEC98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1000DFBF4((2 * a2) ^ (a2 >> 63));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1000DECD4(uint64_t a1)
{
  return sub_1000DFBF4((2 * a1) ^ (a1 >> 63));
}

id sub_1000DECE0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeSInt64NoTag:", a2);
}

id sub_1000DECEC(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeSInt64:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DEE44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DEE5C(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 8;
  return result;
}

id sub_1000DEE74(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeSFixed64NoTag:", a2);
}

id sub_1000DEE80(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeSFixed64:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DEFD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DEFF0(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += 4;
  return result;
}

id sub_1000DF008(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeSFixed32NoTag:", a2);
}

id sub_1000DF014(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "writeSFixed32:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DF16C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DF184(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

id sub_1000DF19C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeBoolNoTag:", a2);
}

id sub_1000DF1A8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeBool:value:", *(unsigned int *)(a1 + 40), a2);
}

void sub_1000DF300(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DF318(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 10;
  v3 = 1;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (a2 >> 28)
    v6 = 5;
  if (a2 >= 0x200000)
    v5 = v6;
  if (a2 >= 0x4000)
    v4 = v5;
  if (a2 >= 0x80)
    v3 = v4;
  if ((a2 & 0x80000000) == 0)
    v2 = v3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) += v2;
  return result;
}

id sub_1000DF370(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeEnumNoTag:", a2);
}

id sub_1000DF37C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "writeEnum:value:", *(unsigned int *)(a1 + 40), a2);
}

_QWORD *sub_1000DF974(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (!result[3])
    result = +[NSException raise:format:](NSException, "raise:format:", CFSTR("OutOfSpace"), &stru_1002508B8);
  if (v1[2])
  {
    result = objc_msgSend((id)v1[3], "write:maxLength:", *v1);
    if (result != (_QWORD *)v1[2])
      result = +[NSException raise:format:](NSException, "raise:format:", CFSTR("WriteFailed"), &stru_1002508B8);
    v1[2] = 0;
  }
  return result;
}

uint64_t sub_1000DFBF4(unint64_t a1)
{
  uint64_t v2;

  if (a1 < 0x80)
    return 1;
  if (a1 < 0x4000)
    return 2;
  if (a1 < 0x200000)
    return 3;
  if (!(a1 >> 28))
    return 4;
  if (!(a1 >> 35))
    return 5;
  if (!(a1 >> 42))
    return 6;
  if (!(a1 >> 49))
    return 7;
  v2 = 9;
  if ((a1 & 0x8000000000000000) != 0)
    v2 = 10;
  if (HIBYTE(a1))
    return v2;
  else
    return 8;
}

char *sub_1000DFC84(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)objc_msgSend(a1, "lengthOfBytesUsingEncoding:", 4);
  v2 = 1;
  v3 = 2;
  v4 = 3;
  v5 = 4;
  if (v1 >> 28)
    v5 = 5;
  if (v1 >= 0x200000)
    v4 = v5;
  if (v1 >= 0x4000)
    v3 = v4;
  if (v1 >= 0x80)
    v2 = v3;
  return &v1[v2];
}

char *sub_1000DFCD8(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)objc_msgSend(a1, "serializedSize");
  v2 = 1;
  v3 = 2;
  v4 = 3;
  v5 = 4;
  if (v1 >> 28)
    v5 = 5;
  if (v1 >= 0x200000)
    v4 = v5;
  if (v1 >= 0x4000)
    v3 = v4;
  if (v1 >= 0x80)
    v2 = v3;
  return &v1[v2];
}

char *sub_1000DFD24(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)objc_msgSend(a1, "length");
  v2 = 1;
  v3 = 2;
  v4 = 3;
  v5 = 4;
  if (v1 >> 28)
    v5 = 5;
  if (v1 >= 0x200000)
    v4 = v5;
  if (v1 >= 0x4000)
    v3 = v4;
  if (v1 >= 0x80)
    v2 = v3;
  return &v1[v2];
}

uint64_t sub_1000DFD70(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_10010B59C(a1, 0);
  v2 = 10;
  v3 = 11;
  v4 = 12;
  if (v1 >> 28)
    v4 = 13;
  if (v1 >= 0x200000)
    v3 = v4;
  if (v1 >= 0x4000)
    v2 = v3;
  if (v1 >= 0x80)
    return v2;
  else
    return 9;
}

uint64_t sub_1000DFDBC(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_10010B59C(a1, 0);
  v2 = 2;
  v3 = 3;
  v4 = 4;
  if (v1 >> 28)
    v4 = 5;
  if (v1 >= 0x200000)
    v3 = v4;
  if (v1 >= 0x4000)
    v2 = v3;
  if (v1 >= 0x80)
    return v2;
  else
    return 1;
}

uint64_t sub_1000DFE08(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_10010B59C(a1, 0);
  v2 = 6;
  v3 = 7;
  v4 = 8;
  if (v1 >> 28)
    v4 = 9;
  if (v1 >= 0x200000)
    v3 = v4;
  if (v1 >= 0x4000)
    v2 = v3;
  if (v1 >= 0x80)
    return v2;
  else
    return 5;
}

uint64_t sub_1000DFE54(int a1, unint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_10010B59C(a1, 0);
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (v3 >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  return sub_1000DFBF4(a2) + v7;
}

uint64_t sub_1000DFEB8(int a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10010B59C(a1, 0);
  v4 = 1;
  v5 = 2;
  v6 = 3;
  v7 = 4;
  if (v3 >> 28)
    v7 = 5;
  if (v3 >= 0x200000)
    v6 = v7;
  if (v3 >= 0x4000)
    v5 = v6;
  if (v3 >= 0x80)
    v4 = v5;
  v8 = 10;
  v9 = 1;
  v10 = 2;
  v11 = 3;
  v12 = 4;
  if (a2 >> 28)
    v12 = 5;
  if (a2 >= 0x200000)
    v11 = v12;
  if (a2 >= 0x4000)
    v10 = v11;
  if (a2 >= 0x80)
    v9 = v10;
  if ((a2 & 0x80000000) == 0)
    v8 = v9;
  return v8 + v4;
}

uint64_t sub_1000DFF54(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_10010B59C(a1, 0);
  v2 = 3;
  v3 = 4;
  v4 = 5;
  if (v1 >> 28)
    v4 = 6;
  if (v1 >= 0x200000)
    v3 = v4;
  if (v1 >= 0x4000)
    v2 = v3;
  if (v1 >= 0x80)
    return v2;
  else
    return 2;
}

char *sub_1000DFFA0(int a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10010B59C(a1, 0);
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (v3 >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = (char *)objc_msgSend(a2, "lengthOfBytesUsingEncoding:", 4);
  v9 = 1;
  v10 = 2;
  v11 = 3;
  v12 = 4;
  if (v8 >> 28)
    v12 = 5;
  if (v8 >= 0x200000)
    v11 = v12;
  if (v8 >= 0x4000)
    v10 = v11;
  if (v8 >= 0x80)
    v9 = v10;
  return &v8[v7 + v9];
}

char *sub_1000E0040(int a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_10010B59C(a1, 0);
  v4 = 4;
  v5 = 6;
  v6 = 10;
  if (!(v3 >> 28))
    v6 = 8;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 2;
  return (char *)objc_msgSend(a2, "serializedSize") + v7;
}

char *sub_1000E00A8(int a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10010B59C(a1, 0);
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (v3 >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = (char *)objc_msgSend(a2, "serializedSize");
  v9 = 1;
  v10 = 2;
  v11 = 3;
  v12 = 4;
  if (v8 >> 28)
    v12 = 5;
  if (v8 >= 0x200000)
    v11 = v12;
  if (v8 >= 0x4000)
    v10 = v11;
  if (v8 >= 0x80)
    v9 = v10;
  return &v8[v7 + v9];
}

char *sub_1000E0144(int a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10010B59C(a1, 0);
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (v3 >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = (char *)objc_msgSend(a2, "length");
  v9 = 1;
  v10 = 2;
  v11 = 3;
  v12 = 4;
  if (v8 >> 28)
    v12 = 5;
  if (v8 >= 0x200000)
    v11 = v12;
  if (v8 >= 0x4000)
    v10 = v11;
  if (v8 >= 0x80)
    v9 = v10;
  return &v8[v7 + v9];
}

uint64_t sub_1000E01E0(int a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = sub_10010B59C(a1, 0);
  v4 = 1;
  v5 = 2;
  v6 = 3;
  v7 = 4;
  if (v3 >> 28)
    v7 = 5;
  if (v3 >= 0x200000)
    v6 = v7;
  if (v3 >= 0x4000)
    v5 = v6;
  if (v3 >= 0x80)
    v4 = v5;
  v8 = 1;
  v9 = 2;
  v10 = 3;
  v11 = 4;
  if (a2 >> 28)
    v11 = 5;
  if (a2 >= 0x200000)
    v10 = v11;
  if (a2 >= 0x4000)
    v9 = v10;
  if (a2 >= 0x80)
    v8 = v9;
  return v8 + v4;
}

uint64_t sub_1000E0270(int a1, int a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10010B59C(a1, 0);
  v4 = 1;
  v5 = 2;
  v6 = 3;
  v7 = 4;
  if (v3 >> 28)
    v7 = 5;
  if (v3 >= 0x200000)
    v6 = v7;
  if (v3 >= 0x4000)
    v5 = v6;
  if (v3 >= 0x80)
    v4 = v5;
  v8 = (2 * a2) ^ (a2 >> 31);
  v9 = 2;
  v10 = 3;
  v11 = 4;
  if (v8 >> 28)
    v11 = 5;
  if (v8 >= 0x200000)
    v10 = v11;
  if (v8 >= 0x4000)
    v9 = v10;
  if (v8 >= 0x80)
    v12 = v9;
  else
    v12 = 1;
  return v12 + v4;
}

uint64_t sub_1000E0308(int a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_10010B59C(a1, 0);
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if (v3 >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if (v3 >= 0x4000)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  return sub_1000DFBF4((2 * a2) ^ (a2 >> 63)) + v7;
}

char *sub_1000E0370(unsigned int a1, void *a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10010B59C(1, 0);
  v5 = 4;
  v6 = 6;
  v7 = 10;
  if (!(v4 >> 28))
    v7 = 8;
  if (v4 >= 0x200000)
    v6 = v7;
  if (v4 >= 0x4000)
    v5 = v6;
  if (v4 >= 0x80)
    v8 = v5;
  else
    v8 = 2;
  v9 = sub_1000E01E0(2, a1) + v8;
  return &sub_1000E00A8(3, a2)[v9];
}

char *sub_1000E03FC(unsigned int a1, void *a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10010B59C(1, 0);
  v5 = 4;
  v6 = 6;
  v7 = 10;
  if (!(v4 >> 28))
    v7 = 8;
  if (v4 >= 0x200000)
    v6 = v7;
  if (v4 >= 0x4000)
    v5 = v6;
  if (v4 >= 0x80)
    v8 = v5;
  else
    v8 = 2;
  v9 = sub_1000E01E0(2, a1) + v8;
  return &sub_1000E0144(3, a2)[v9];
}

uint64_t sub_1000E0488(int a1, int a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_10010B59C(a1, 0);
  v4 = 1;
  v5 = 2;
  v6 = 3;
  v7 = 4;
  if (v3 >> 28)
    v7 = 5;
  if (v3 >= 0x200000)
    v6 = v7;
  if (v3 >= 0x4000)
    v5 = v6;
  if (v3 >= 0x80)
    v4 = v5;
  return v4 << (a2 == 16);
}

void sub_1000E0CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

SEL sub_1000E156C(char *__s, char *str, const char *a3, int a4)
{
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  if (!__s && !a3 && (a4 & 1) == 0)
    return sel_getUid(str);
  if (__s)
    v9 = strlen(__s);
  else
    v9 = 0;
  v10 = strlen(str);
  v11 = v10;
  if (a3)
  {
    v10 = strlen(a3);
    v12 = v10;
  }
  else
  {
    v12 = 0;
  }
  v18 = (uint64_t)&v18;
  v13 = v11 + v9 + v12;
  v14 = 1;
  if (a4)
    v14 = 2;
  v15 = v13 + v14;
  __chkstk_darwin(v10);
  v17 = (char *)&v18 - v16;
  bzero((char *)&v18 - v16, v15);
  if (!__s)
  {
    memcpy(v17, str, v11);
    if (!a3)
      goto LABEL_16;
    goto LABEL_15;
  }
  memcpy(v17, __s, v9);
  memcpy(&v17[v9], str, v11);
  v17[v9] = __toupper(v17[v9]);
  if (a3)
LABEL_15:
    memcpy(&v17[v9 + v11], a3, v12);
LABEL_16:
  if (a4)
    v17[v13] = 58;
  v17[v15 - 1] = 0;
  return sel_getUid(v17);
}

uint64_t sub_1000E199C(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned __int16 *)(v1 + 28);
  if ((v2 & 0xF00) != 0)
  {
    v3 = 15;
    LOBYTE(v4) = 0;
  }
  else
  {
    v3 = *(unsigned __int8 *)(v1 + 30);
    v4 = (v2 >> 2) & 1;
  }
  v5 = sub_10010B5C4(v3, v4);
  return sub_10010B59C(*(_DWORD *)(v1 + 16), v5);
}

uint64_t sub_1000E19E4(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_10010B5C4(*(unsigned __int8 *)(v1 + 30), (*(_WORD *)(v1 + 28) & 4) == 0);
  return sub_10010B59C(*(_DWORD *)(v1 + 16), v2);
}

void sub_1000E21D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E28BC(void *a1, uint64_t a2)
{
  int v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 8) + 30);
  v5 = objc_msgSend(a1, "keyEnumerator");
  v6 = objc_msgSend(v5, "nextObject");
  if (v6)
  {
    v7 = v6;
    v8 = 0;
    do
    {
      v9 = objc_msgSend(a1, "objectForKeyedSubscript:", v7);
      v10 = sub_1000DFFA0(1, v7);
      v11 = &v10[(_QWORD)sub_1000E299C(v9, v4)];
      v8 += (uint64_t)&v11[sub_1000DE5AC(v11)];
      v7 = objc_msgSend(v5, "nextObject");
    }
    while (v7);
  }
  else
  {
    v8 = 0;
  }
  v12 = sub_1000E0488(*(_DWORD *)(*(_QWORD *)(a2 + 8) + 16), 15);
  return v8 + (_QWORD)objc_msgSend(a1, "count") * v12;
}

char *sub_1000E299C(void *a1, int a2)
{
  switch(a2)
  {
    case 13:
      return sub_1000E0144(2, a1);
    case 14:
      return sub_1000DFFA0(2, a1);
    case 15:
      return sub_1000E00A8(2, a1);
  }
  return 0;
}

id sub_1000E29E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  id v11;
  unsigned int v12;

  v5 = *(_QWORD *)(a3 + 8);
  v6 = *(unsigned __int8 *)(v5 + 30);
  v7 = sub_10010B59C(*(_DWORD *)(v5 + 16), 2);
  v8 = objc_msgSend(a2, "keyEnumerator");
  result = objc_msgSend(v8, "nextObject");
  if (result)
  {
    v10 = result;
    do
    {
      v11 = objc_msgSend(a2, "objectForKeyedSubscript:", v10);
      objc_msgSend(a1, "writeInt32NoTag:", v7);
      v12 = sub_1000DFFA0(1, v10);
      objc_msgSend(a1, "writeInt32NoTag:", sub_1000E299C(v11, v6) + v12);
      objc_msgSend(a1, "writeString:value:", 1, v10);
      sub_1000E2ACC(a1, (const char *)v11, v6);
      result = objc_msgSend(v8, "nextObject");
      v10 = result;
    }
    while (result);
  }
  return result;
}

void *sub_1000E2ACC(void *a1, const char *a2, int a3)
{
  switch(a3)
  {
    case 13:
      return objc_msgSend(a1, "writeBytes:value:", 2, a2);
    case 14:
      return objc_msgSend(a1, "writeString:value:", 2, a2);
    case 15:
      return objc_msgSend(a1, "writeMessage:value:", 2, a2);
  }
  return a1;
}

BOOL sub_1000E2B0C(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, "objectEnumerator");
  do
  {
    v2 = objc_msgSend(v1, "nextObject");
    v3 = v2;
  }
  while (v2 && (objc_msgSend(v2, "isInitialized") & 1) != 0);
  return v3 == 0;
}

void sub_1000E2B50(void *a1, uint64_t *a2, uint64_t a3, _QWORD *a4, void *a5)
{
  id v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  id *v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  __CFString *v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v24;
  __CFString *v25;

  v9 = objc_msgSend(a4, "mapKeyDataType");
  v10 = *(unsigned __int8 *)(a4[1] + 30);
  v24 = 0;
  v25 = 0;
  if (v10 == 17)
    v24 = (__CFString *)objc_msgSend(a4, "defaultValue");
  v11 = sub_10010B5C4((int)v9, 0);
  v12 = sub_10010B59C(1, v11);
  v13 = sub_10010B5C4(v10, 0);
  v14 = sub_10010B59C(2, v13);
  while (1)
  {
    while (1)
    {
      v15 = sub_1000DC1B4((uint64_t)(a2 + 1));
      if ((_DWORD)v15 == v12)
      {
        v16 = (id *)&v25;
        v17 = a2;
        v18 = (int)v9;
        goto LABEL_8;
      }
      v19 = v15;
      if ((_DWORD)v15 != v14)
        break;
      v16 = (id *)&v24;
      v17 = a2;
      v18 = v10;
LABEL_8:
      sub_1000E2DCC(v17, v16, v18, a3, a4);
    }
    if (!(_DWORD)v15)
      break;
    if ((objc_msgSend(a2, "skipField:", v15) & 1) == 0)
      goto LABEL_32;
  }
  v20 = v25;
  if ((_DWORD)v9 == 14 && !v25)
  {
    v20 = &stru_1002508B8;
    v25 = v20;
  }
  v21 = v24;
  if ((v10 - 13) > 3u || v24)
    goto LABEL_25;
  switch(v10)
  {
    case 13:
      v22 = (__CFString *)(id)sub_100107E6C();
LABEL_23:
      v21 = v22;
      v24 = v22;
      goto LABEL_25;
    case 15:
      v22 = (__CFString *)objc_alloc_init((Class)objc_msgSend(a4, "msgClass", v19));
      goto LABEL_23;
    case 14:
      v22 = &stru_1002508B8;
      goto LABEL_23;
  }
  v21 = 0;
LABEL_25:
  if ((_DWORD)v9 == 14 && (v10 - 13) <= 3u)
  {
    objc_msgSend(a1, "setObject:forKey:", v21, v20);
    goto LABEL_34;
  }
  if (v10 == 17
    && (*(_WORD *)(a4[1] + 28) & 0x1000) != 0
    && !objc_msgSend(a4, "isValidEnumValue:", v21))
  {
    objc_msgSend(a5, "addUnknownMapEntry:value:", *(unsigned int *)(a4[1] + 16), objc_msgSend(a1, "serializedDataForUnknownValue:forKey:keyDataType:", v21, &v25, v9));
  }
  else
  {
    objc_msgSend(a1, "setTransparencyGPBGenericValue:forTransparencyGPBGenericValueKey:", &v24, &v25);
  }
LABEL_32:
  if (((_BYTE)v9 - 13) > 3u)
    goto LABEL_35;
  v20 = v25;
LABEL_34:

LABEL_35:
  if ((v10 - 13) <= 3u)

}

void sub_1000E2DCC(uint64_t *a1, id *a2, int a3, uint64_t a4, void *a5)
{
  int v7;
  uint64_t v8;
  id v10;

  switch(a3)
  {
    case 0:
      *(_BYTE *)a2 = sub_1000DC198(a1 + 1);
      return;
    case 1:
    case 2:
      v7 = sub_1000DC120(a1 + 1);
      goto LABEL_15;
    case 3:
      *(float *)a2 = sub_1000DC014(a1 + 1);
      return;
    case 4:
    case 5:
      v8 = sub_1000DC0E8(a1 + 1);
      goto LABEL_12;
    case 6:
      *(double *)a2 = sub_1000DBFDC(a1 + 1);
      return;
    case 7:
    case 11:
    case 17:
      v7 = sub_1000DC0D4(a1 + 1);
      goto LABEL_15;
    case 8:
    case 12:
      v8 = sub_1000DC04C(a1 + 1);
      goto LABEL_12;
    case 9:
      v7 = sub_1000DC158(a1 + 1);
LABEL_15:
      *(_DWORD *)a2 = v7;
      return;
    case 10:
      v8 = sub_1000DC178(a1 + 1);
      goto LABEL_12;
    case 13:

      v8 = (uint64_t)sub_1000DC448(a1 + 1);
      goto LABEL_12;
    case 14:

      v8 = (uint64_t)sub_1000DC35C(a1 + 1);
LABEL_12:
      *a2 = (id)v8;
      break;
    case 15:
      v10 = objc_alloc_init((Class)objc_msgSend(a5, "msgClass"));
      objc_msgSend(a1, "readMessage:extensionRegistry:", v10, a4);

      *a2 = v10;
      break;
    default:
      return;
  }
}

uint64_t sub_1000E33F4(unsigned int a1, int a2, int a3)
{
  if (a3 == 1)
    return sub_1000DFE08(a2);
  if (a3 == 11)
    return sub_1000E01E0(a2, a1);
  return 0;
}

uint64_t sub_1000E3640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a3));
}

uint64_t sub_1000E3C18(unsigned int a1, int a2, int a3)
{
  switch(a3)
  {
    case 2:
      return sub_1000DFE08(a2);
    case 9:
      return sub_1000E0270(a2, a1);
    case 7:
      return sub_1000DFEB8(a2, a1);
  }
  return 0;
}

id sub_1000E3DB4(id result, uint64_t a2, uint64_t a3, int a4)
{
  switch(a4)
  {
    case 2:
      return _objc_msgSend(result, "writeSFixed32:value:", a3, a2);
    case 9:
      return _objc_msgSend(result, "writeSInt32:value:", a3, a2);
    case 7:
      return _objc_msgSend(result, "writeInt32:value:", a3, a2);
  }
  return result;
}

uint64_t sub_1000E3E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a3));
}

uint64_t sub_1000E445C(unint64_t a1, int a2, int a3)
{
  if (a3 == 4)
    return sub_1000DFD70(a2);
  if (a3 == 12)
    return sub_1000DFE54(a2, a1);
  return 0;
}

uint64_t sub_1000E46A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a3));
}

uint64_t sub_1000E4C78(unint64_t a1, int a2, int a3)
{
  switch(a3)
  {
    case 5:
      return sub_1000DFD70(a2);
    case 10:
      return sub_1000E0308(a2, a1);
    case 8:
      return sub_1000DFE54(a2, a1);
  }
  return 0;
}

id sub_1000E4E14(id result, uint64_t a2, uint64_t a3, int a4)
{
  switch(a4)
  {
    case 5:
      return _objc_msgSend(result, "writeSFixed64:value:", a3, a2);
    case 10:
      return _objc_msgSend(result, "writeSInt64:value:", a3, a2);
    case 8:
      return _objc_msgSend(result, "writeInt64:value:", a3, a2);
  }
  return result;
}

uint64_t sub_1000E4EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a3));
}

uint64_t sub_1000E5684(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  NSString *v5;
  const __CFString *v6;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2);
  if (a3)
    v6 = CFSTR("true");
  else
    v6 = CFSTR("false");
  return (*(uint64_t (**)(uint64_t, NSString *, const __CFString *))(v4 + 16))(v4, v5, v6);
}

uint64_t sub_1000E5E10(uint64_t a1, uint64_t a2, float a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*g"), 6, a3));
}

uint64_t sub_1000E65BC(uint64_t a1, uint64_t a2, double a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&a3));
}

BOOL sub_1000E6890(int a1)
{
  return a1 != -72499473;
}

uint64_t sub_1000E6E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSNumber *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a3));
}

uint64_t sub_1000E79C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a2), a3);
}

uint64_t sub_1000E814C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a3));
}

uint64_t sub_1000E88F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a3));
}

uint64_t sub_1000E90C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a3));
}

uint64_t sub_1000E986C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a3));
}

uint64_t sub_1000E9FE4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  NSString *v5;
  const __CFString *v6;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2);
  if (a3)
    v6 = CFSTR("true");
  else
    v6 = CFSTR("false");
  return (*(uint64_t (**)(uint64_t, NSString *, const __CFString *))(v4 + 16))(v4, v5, v6);
}

uint64_t sub_1000EA750(uint64_t a1, uint64_t a2, float a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*g"), 6, a3));
}

uint64_t sub_1000EAEDC(uint64_t a1, uint64_t a2, double a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&a3));
}

uint64_t sub_1000EB748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSNumber *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a3));
}

uint64_t sub_1000EC26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a2), a3);
}

uint64_t sub_1000ECA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a3));
}

uint64_t sub_1000ED1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a3));
}

uint64_t sub_1000ED9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a3));
}

uint64_t sub_1000EE198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a3));
}

uint64_t sub_1000EE930(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  NSString *v5;
  const __CFString *v6;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2);
  if (a3)
    v6 = CFSTR("true");
  else
    v6 = CFSTR("false");
  return (*(uint64_t (**)(uint64_t, NSString *, const __CFString *))(v4 + 16))(v4, v5, v6);
}

uint64_t sub_1000EF0BC(uint64_t a1, uint64_t a2, float a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*g"), 6, a3));
}

uint64_t sub_1000EF868(uint64_t a1, uint64_t a2, double a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&a3));
}

uint64_t sub_1000F0114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSNumber *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a3));
}

uint64_t sub_1000F0C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2), a3);
}

uint64_t sub_1000F13E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a3));
}

uint64_t sub_1000F1B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a3));
}

uint64_t sub_1000F2354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a3));
}

uint64_t sub_1000F2AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a3));
}

uint64_t sub_1000F327C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  NSString *v5;
  const __CFString *v6;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2);
  if (a3)
    v6 = CFSTR("true");
  else
    v6 = CFSTR("false");
  return (*(uint64_t (**)(uint64_t, NSString *, const __CFString *))(v4 + 16))(v4, v5, v6);
}

uint64_t sub_1000F39E8(uint64_t a1, uint64_t a2, float a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*g"), 6, a3));
}

uint64_t sub_1000F4174(uint64_t a1, uint64_t a2, double a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&a3));
}

uint64_t sub_1000F49E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, NSNumber *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a3));
}

uint64_t sub_1000F5504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, NSString *, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a2), a3);
}

uint64_t sub_1000F5C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a3));
}

uint64_t sub_1000F637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a3));
}

uint64_t sub_1000F6AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a3));
}

uint64_t sub_1000F71E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lld"), a3));
}

uint64_t sub_1000F78E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  const __CFString *v4;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    v4 = CFSTR("true");
  else
    v4 = CFSTR("false");
  return (*(uint64_t (**)(uint64_t, uint64_t, const __CFString *))(v3 + 16))(v3, a2, v4);
}

uint64_t sub_1000F7FA8(uint64_t a1, uint64_t a2, float a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*g"), 6, a3));
}

uint64_t sub_1000F86B4(uint64_t a1, uint64_t a2, double a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSString *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&a3));
}

uint64_t sub_1000F8E94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, NSNumber *))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, +[NSNumber numberWithInt:](NSNumber, "numberWithInt:"));
}

id sub_1000FD2EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id result;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  id v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];

  v5 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(v5 + 45) & 1) == 0)
    return sub_1000FD73C(a2, v5, a3);
  if ((*(_BYTE *)(v5 + 45) & 2) != 0)
  {
    objc_msgSend(a3, "writeTag:format:", *(unsigned int *)(v5 + 40), 2);
    v10 = *(char *)(v5 + 44);
    if (v10 > 6)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v13 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
      if (v13)
      {
        v14 = v13;
        v12 = 0;
        v15 = *(_QWORD *)v25;
        do
        {
          for (i = 0; i != v14; i = (char *)i + 1)
          {
            if (*(_QWORD *)v25 != v15)
              objc_enumerationMutation(a2);
            v12 += (uint64_t)sub_1000FDE50((id)*(unsigned __int8 *)(v5 + 44), *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i));
          }
          v14 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
        }
        while (v14);
      }
      else
      {
        v12 = 0;
      }
    }
    else
    {
      v11 = qword_100216988[v10];
      v12 = (_QWORD)objc_msgSend(a2, "count") * v11;
    }
    objc_msgSend(a3, "writeRawVarintSizeTAs32:", v12);
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v20, &v28, 16);
    if (result)
    {
      v17 = result;
      v18 = *(_QWORD *)v21;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v21 != v18)
            objc_enumerationMutation(a2);
          switch(*(_BYTE *)(v5 + 44))
          {
            case 0:
              objc_msgSend(a3, "writeBoolNoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "BOOLValue"));
              break;
            case 1:
              objc_msgSend(a3, "writeFixed32NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "unsignedIntValue"));
              break;
            case 2:
              objc_msgSend(a3, "writeSFixed32NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "intValue"));
              break;
            case 3:
              objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "floatValue");
              objc_msgSend(a3, "writeFloatNoTag:");
              break;
            case 4:
              objc_msgSend(a3, "writeFixed64NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "unsignedLongLongValue"));
              break;
            case 5:
              objc_msgSend(a3, "writeSFixed64NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "longLongValue"));
              break;
            case 6:
              objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "doubleValue");
              objc_msgSend(a3, "writeDoubleNoTag:");
              break;
            case 7:
              objc_msgSend(a3, "writeInt32NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "intValue"));
              break;
            case 8:
              objc_msgSend(a3, "writeInt64NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "longLongValue"));
              break;
            case 9:
              objc_msgSend(a3, "writeSInt32NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "intValue"));
              break;
            case 0xA:
              objc_msgSend(a3, "writeSInt64NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "longLongValue"));
              break;
            case 0xB:
              objc_msgSend(a3, "writeUInt32NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "unsignedIntValue"));
              break;
            case 0xC:
              objc_msgSend(a3, "writeUInt64NoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "unsignedLongLongValue"));
              break;
            case 0xD:
              objc_msgSend(a3, "writeBytesNoTag:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19));
              break;
            case 0xE:
              objc_msgSend(a3, "writeStringNoTag:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19));
              break;
            case 0xF:
              objc_msgSend(a3, "writeMessageNoTag:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19));
              break;
            case 0x10:
              objc_msgSend(a3, "writeGroupNoTag:value:", *(unsigned int *)(v5 + 40), *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19));
              break;
            case 0x11:
              objc_msgSend(a3, "writeEnumNoTag:", objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), "intValue"));
              break;
            default:
              break;
          }
          v19 = (char *)v19 + 1;
        }
        while (v17 != v19);
        result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v20, &v28, 16);
        v17 = result;
      }
      while (result);
    }
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)v29;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v29 != v8)
            objc_enumerationMutation(a2);
          sub_1000FD73C(*(id *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)v9), v5, a3);
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
        v7 = result;
      }
      while (result);
    }
  }
  return result;
}

id sub_1000FD73C(id result, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  switch(*(_BYTE *)(a2 + 44))
  {
    case 0:
      result = objc_msgSend(a3, "writeBool:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "BOOLValue"));
      break;
    case 1:
      result = objc_msgSend(a3, "writeFixed32:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "unsignedIntValue"));
      break;
    case 2:
      result = _objc_msgSend(a3, "writeSFixed32:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "intValue"));
      break;
    case 3:
      v4 = *(unsigned int *)(a2 + 40);
      objc_msgSend(result, "floatValue");
      result = objc_msgSend(a3, "writeFloat:value:", v4);
      break;
    case 4:
      result = objc_msgSend(a3, "writeFixed64:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "unsignedLongLongValue"));
      break;
    case 5:
      result = _objc_msgSend(a3, "writeSFixed64:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "longLongValue"));
      break;
    case 6:
      v5 = *(unsigned int *)(a2 + 40);
      objc_msgSend(result, "doubleValue");
      result = objc_msgSend(a3, "writeDouble:value:", v5);
      break;
    case 7:
      result = _objc_msgSend(a3, "writeInt32:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "intValue"));
      break;
    case 8:
      result = _objc_msgSend(a3, "writeInt64:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "longLongValue"));
      break;
    case 9:
      result = _objc_msgSend(a3, "writeSInt32:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "intValue"));
      break;
    case 0xA:
      result = _objc_msgSend(a3, "writeSInt64:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "longLongValue"));
      break;
    case 0xB:
      result = objc_msgSend(a3, "writeUInt32:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "unsignedIntValue"));
      break;
    case 0xC:
      result = objc_msgSend(a3, "writeUInt64:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "unsignedLongLongValue"));
      break;
    case 0xD:
      result = objc_msgSend(a3, "writeBytes:value:", *(unsigned int *)(a2 + 40), result);
      break;
    case 0xE:
      result = objc_msgSend(a3, "writeString:value:", *(unsigned int *)(a2 + 40), result);
      break;
    case 0xF:
      v6 = *(unsigned int *)(a2 + 40);
      if ((*(_BYTE *)(a2 + 45) & 4) != 0)
        result = _objc_msgSend(a3, "writeMessageSetExtension:value:", v6, result);
      else
        result = objc_msgSend(a3, "writeMessage:value:", v6, result);
      break;
    case 0x10:
      result = objc_msgSend(a3, "writeGroup:value:", *(unsigned int *)(a2 + 40), result);
      break;
    case 0x11:
      result = objc_msgSend(a3, "writeEnum:value:", *(unsigned int *)(a2 + 40), objc_msgSend(result, "intValue"));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000FD9D4(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *j;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v3 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(v3 + 45) & 1) == 0)
    return sub_1000FDC08(*(_QWORD *)(a1 + 8), a2);
  if ((*(_BYTE *)(v3 + 45) & 2) != 0)
  {
    v10 = *(char *)(v3 + 44);
    if (v10 > 6)
    {
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v13 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (v13)
      {
        v14 = v13;
        v12 = 0;
        v15 = *(_QWORD *)v19;
        do
        {
          for (i = 0; i != v14; i = (char *)i + 1)
          {
            if (*(_QWORD *)v19 != v15)
              objc_enumerationMutation(a2);
            v12 += (uint64_t)sub_1000FDE50((id)*(unsigned __int8 *)(v3 + 44), *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i));
          }
          v14 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
        }
        while (v14);
      }
      else
      {
        v12 = 0;
      }
    }
    else
    {
      v11 = qword_100216988[v10];
      v12 = (_QWORD)objc_msgSend(a2, "count") * v11;
    }
    v17 = sub_1000DFDBC(*(_DWORD *)(v3 + 40));
    return v17 + v12 + sub_1000DE5AC(v12);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v5 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v5)
    {
      v6 = v5;
      v7 = 0;
      v8 = *(_QWORD *)v19;
      do
      {
        for (j = 0; j != v6; j = (char *)j + 1)
        {
          if (*(_QWORD *)v19 != v8)
            objc_enumerationMutation(a2);
          v7 += sub_1000FDC08(v3, *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)j));
        }
        v6 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v6);
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1000FDC08(uint64_t result, void *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  unsigned int v10;

  switch(*(_BYTE *)(result + 44))
  {
    case 0:
      v2 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "BOOLValue");
      result = sub_1000DFF54(v2);
      break;
    case 1:
      v5 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "unsignedIntValue");
      result = sub_1000DFE08(v5);
      break;
    case 2:
      v3 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "intValue");
      result = sub_1000DFE08(v3);
      break;
    case 3:
      v6 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "floatValue");
      result = sub_1000DFE08(v6);
      break;
    case 4:
      v4 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "unsignedLongLongValue");
      result = sub_1000DFD70(v4);
      break;
    case 5:
      v7 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "longLongValue");
      result = sub_1000DFD70(v7);
      break;
    case 6:
      v8 = *(_DWORD *)(result + 40);
      objc_msgSend(a2, "doubleValue");
      result = sub_1000DFD70(v8);
      break;
    case 7:
    case 0x11:
      result = sub_1000DFEB8(*(_DWORD *)(result + 40), objc_msgSend(a2, "intValue"));
      break;
    case 8:
      result = sub_1000DFE54(*(_DWORD *)(result + 40), (unint64_t)objc_msgSend(a2, "longLongValue"));
      break;
    case 9:
      result = sub_1000E0270(*(_DWORD *)(result + 40), (int)objc_msgSend(a2, "intValue"));
      break;
    case 0xA:
      result = sub_1000E0308(*(_DWORD *)(result + 40), (uint64_t)objc_msgSend(a2, "longLongValue"));
      break;
    case 0xB:
      result = sub_1000E01E0(*(_DWORD *)(result + 40), objc_msgSend(a2, "unsignedIntValue"));
      break;
    case 0xC:
      result = sub_1000DFE54(*(_DWORD *)(result + 40), (unint64_t)objc_msgSend(a2, "unsignedLongLongValue"));
      break;
    case 0xD:
      result = (uint64_t)sub_1000E0144(*(_DWORD *)(result + 40), a2);
      break;
    case 0xE:
      result = (uint64_t)sub_1000DFFA0(*(_DWORD *)(result + 40), a2);
      break;
    case 0xF:
      v9 = *(_BYTE *)(result + 45);
      v10 = *(_DWORD *)(result + 40);
      if ((v9 & 4) != 0)
        result = (uint64_t)sub_1000E0370(v10, a2);
      else
        result = (uint64_t)sub_1000E00A8(v10, a2);
      break;
    case 0x10:
      result = (uint64_t)sub_1000E0040(*(_DWORD *)(result + 40), a2);
      break;
    default:
      return result;
  }
  return result;
}

id sub_1000FDE50(id result, void *a2)
{
  id v2;

  switch((int)result)
  {
    case 0:
      objc_msgSend(a2, "BOOLValue");
      return (id)sub_10009C98C();
    case 1:
      objc_msgSend(a2, "unsignedIntValue");
      return (id)sub_1000DDE60();
    case 2:
      objc_msgSend(a2, "intValue");
      return (id)sub_1000DDE60();
    case 3:
      objc_msgSend(a2, "floatValue");
      return (id)sub_1000DDE60();
    case 4:
      objc_msgSend(a2, "unsignedLongLongValue");
      return (id)sub_1000DDCCC();
    case 5:
      objc_msgSend(a2, "longLongValue");
      return (id)sub_1000DDCCC();
    case 6:
      objc_msgSend(a2, "doubleValue");
      return (id)sub_1000DDCCC();
    case 7:
    case 17:
      return (id)sub_1000DE3A0(objc_msgSend(a2, "intValue"));
    case 8:
      v2 = objc_msgSend(a2, "longLongValue");
      goto LABEL_13;
    case 9:
      return (id)sub_1000DEADC((int)objc_msgSend(a2, "intValue"));
    case 10:
      return (id)sub_1000DECD4((uint64_t)objc_msgSend(a2, "longLongValue"));
    case 11:
      return (id)sub_1000DE5AC(objc_msgSend(a2, "unsignedIntValue"));
    case 12:
      v2 = objc_msgSend(a2, "unsignedLongLongValue");
LABEL_13:
      result = (id)sub_1000DE014((unint64_t)v2);
      break;
    case 13:
      result = sub_1000DFD24(a2);
      break;
    case 14:
      result = sub_1000DFC84(a2);
      break;
    case 15:
      result = sub_1000DFCD8(a2);
      break;
    case 16:
      result = objc_msgSend(a2, "serializedSize");
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000FE190(void *key, const __CFDictionary *a2, CFDictionaryRef theDict)
{
  void *Value;
  CFMutableDictionaryRef MutableCopy;

  Value = (void *)CFDictionaryGetValue(theDict, key);
  if (Value)
  {
    CFDictionaryApplyFunction(a2, (CFDictionaryApplierFunction)sub_1000FE21C, Value);
  }
  else
  {
    MutableCopy = CFDictionaryCreateMutableCopy(kCFAllocatorDefault, 0, a2);
    CFDictionarySetValue(theDict, key, MutableCopy);
    CFRelease(MutableCopy);
  }
}

void sub_1000FE21C(void *key, void *value, CFMutableDictionaryRef theDict)
{
  CFDictionarySetValue(theDict, key, value);
}

_QWORD *sub_1000FE29C(objc_class *a1, uint64_t a2, void *a3)
{
  _QWORD *v5;

  v5 = objc_alloc_init(a1);
  v5[4] = a2;
  v5[5] = a3;
  return v5;
}

BOOL sub_1000FE2DC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 32) == a2;
}

id sub_1000FE2EC(_QWORD *a1)
{
  id result;
  _QWORD *v3;

  result = (id)a1[4];
  if (result)
  {
    v3 = (_QWORD *)a1[5];
    if (v3)
      return (id)sub_10010893C((uint64_t)result, v3, a1);
    else
      return objc_msgSend(result, "setExtension:value:", a1[6]);
  }
  return result;
}

id sub_1000FE314(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  int *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = (void *)*((_QWORD *)objc_msgSend((id)objc_opt_class(a1, a2), "descriptor") + 1);
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v12;
    while (2)
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
        if (objc_msgSend(v9, "fieldType") == 1 && sub_100108350((uint64_t)a1, (uint64_t)v9) == a2)
        {
          if (*(unsigned __int8 *)(v9[1] + 30) - 13 >= 4)
            v10 = &OBJC_IVAR___TransparencyGPBInt32Array__autocreator;
          else
            v10 = &OBJC_IVAR___TransparencyGPBAutocreatedArray__autocreator;
          *(_QWORD *)(a2 + *v10) = 0;
          return sub_1000FE2EC(a1);
        }
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      v6 = result;
      if (result)
        continue;
      break;
    }
  }
  return result;
}

id sub_1000FE47C(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  int *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = (void *)*((_QWORD *)objc_msgSend((id)objc_opt_class(a1, a2), "descriptor") + 1);
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v12;
    while (2)
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
        if (objc_msgSend(v9, "fieldType") == 2 && sub_100108350((uint64_t)a1, (uint64_t)v9) == a2)
        {
          if (objc_msgSend(v9, "mapKeyDataType") == 14
            && *(unsigned __int8 *)(v9[1] + 30) - 13 < 4)
          {
            v10 = &OBJC_IVAR___TransparencyGPBAutocreatedDictionary__autocreator;
          }
          else
          {
            v10 = &OBJC_IVAR___TransparencyGPBInt32Int32Dictionary__autocreator;
          }
          *(_QWORD *)(a2 + *v10) = 0;
          return sub_1000FE2EC(a1);
        }
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      v6 = result;
      if (result)
        continue;
      break;
    }
  }
  return result;
}

void sub_1000FE5F8(uint64_t a1)
{
  if (a1)
  {
    if (*(_QWORD *)(a1 + 32))
    {
      *(_QWORD *)(a1 + 32) = 0;

      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = 0;
    }
  }
}

NSError *sub_1000FE8A4(void *a1)
{
  NSError *result;
  id v3;
  NSDictionary *v4;
  const __CFString *v5;
  id v6;

  if (!objc_msgSend(objc_msgSend(a1, "name"), "isEqual:", CFSTR("TransparencyGPBCodedInputStreamException"))|| (result = (NSError *)objc_msgSend(objc_msgSend(a1, "userInfo"), "objectForKeyedSubscript:", CFSTR("TransparencyGPBCodedInputStreamUnderlyingErrorKey"))) == 0)
  {
    v3 = objc_msgSend(a1, "reason");
    if (objc_msgSend(v3, "length"))
    {
      v5 = CFSTR("Reason");
      v6 = v3;
      v4 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v6, &v5, 1);
    }
    else
    {
      v4 = 0;
    }
    return +[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("TransparencyGPBMessageErrorDomain"), -100, v4);
  }
  return result;
}

void sub_1000FEE50(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = objc_msgSend(a3, "copyWithZone:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v5, a2);

}

NSMutableDictionary *sub_1000FEF1C(void *a1, uint64_t a2)
{
  NSMutableDictionary *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  id v17;
  id v18;
  void *v19;
  uint64_t v21;
  NSMutableDictionary *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  _BYTE v33[128];

  if (!objc_msgSend(a1, "count"))
    return 0;
  v4 = -[NSMutableDictionary initWithCapacity:](+[NSMutableDictionary allocWithZone:](NSMutableDictionary, "allocWithZone:", a2), "initWithCapacity:", objc_msgSend(a1, "count"));
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v5 = objc_msgSend(a1, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v29;
    v21 = *(_QWORD *)v29;
    v22 = v4;
    do
    {
      v8 = 0;
      v23 = v6;
      do
      {
        if (*(_QWORD *)v29 != v7)
          objc_enumerationMutation(a1);
        v9 = *(_QWORD **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)v8);
        v10 = objc_msgSend(a1, "objectForKey:", v9);
        v11 = *(unsigned __int8 *)(v9[1] + 44) - 15;
        if (objc_msgSend(v9, "isRepeated"))
        {
          if (v11 > 1)
          {
            v18 = objc_msgSend(v10, "mutableCopyWithZone:", a2);
            goto LABEL_20;
          }
          v12 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v10, "count"));
          v24 = 0u;
          v25 = 0u;
          v26 = 0u;
          v27 = 0u;
          v13 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
          if (v13)
          {
            v14 = v13;
            v15 = *(_QWORD *)v25;
            do
            {
              for (i = 0; i != v14; i = (char *)i + 1)
              {
                if (*(_QWORD *)v25 != v15)
                  objc_enumerationMutation(v10);
                v17 = objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i), "copyWithZone:", a2);
                objc_msgSend(v12, "addObject:", v17);

              }
              v14 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
            }
            while (v14);
          }
          v4 = v22;
          -[NSMutableDictionary setObject:forKey:](v22, "setObject:forKey:", v12, v9);

          v7 = v21;
          v6 = v23;
        }
        else
        {
          if (v11 <= 1)
          {
            v18 = objc_msgSend(v10, "copyWithZone:", a2);
LABEL_20:
            v19 = v18;
            -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v18, v9);

            goto LABEL_22;
          }
          -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v10, v9);
        }
LABEL_22:
        v8 = (char *)v8 + 1;
      }
      while (v8 != v6);
      v6 = objc_msgSend(a1, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
    }
    while (v6);
  }
  return v4;
}

_QWORD *sub_1000FF510(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  _QWORD *v6;
  unint64_t v7;

  v4 = a2[1];
  if (*(unsigned __int8 *)(v4 + 30) - 15 >= 2)
  {
    if (sub_100108838(a1, *(_DWORD *)(v4 + 20), *(_DWORD *)(v4 + 16)))
      return *(_QWORD **)(*(_QWORD *)(a1 + 64) + *(unsigned int *)(a2[1] + 24));
    else
      return objc_msgSend(a2, "defaultValue");
  }
  else
  {
    v5 = (unint64_t *)(*(_QWORD *)(a1 + 64) + *(unsigned int *)(v4 + 24));
    v6 = (_QWORD *)atomic_load(v5);
    if (!v6)
    {
      v6 = objc_alloc_init((Class)objc_msgSend(a2, "msgClass"));
      v6[4] = a1;
      v6[5] = a2;
      while (1)
      {
        v7 = __ldaxr(v5);
        if (v7)
          break;
        if (!__stlxr((unint64_t)v6, v5))
          return v6;
      }
      __clrex();
      sub_1000FE5F8((uint64_t)v6);

      return (_QWORD *)v7;
    }
  }
  return v6;
}

void sub_1000FF8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_1000FF918(_QWORD *result, _QWORD *a2, void *a3, _BYTE *a4)
{
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  if (*(unsigned __int8 *)(a2[1] + 44) - 15 <= 1)
  {
    v6 = result;
    if (objc_msgSend(a2, "isRepeated"))
    {
      v12 = 0u;
      v13 = 0u;
      v10 = 0u;
      v11 = 0u;
      result = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (!result)
        return result;
      v7 = result;
      v8 = *(_QWORD *)v11;
LABEL_5:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(a3);
        result = objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v9), "isInitialized");
        if (!(_DWORD)result)
          break;
        if (v7 == (id)++v9)
        {
          result = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
          v7 = result;
          if (result)
            goto LABEL_5;
          return result;
        }
      }
    }
    else
    {
      result = objc_msgSend(a3, "isInitialized");
      if ((result & 1) != 0)
        return result;
    }
    *(_BYTE *)(*(_QWORD *)(v6[4] + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_1001008E8(uint64_t a1, void *a2)
{
  uint64_t result;
  id v5;
  uint64_t v6;

  result = objc_opt_isKindOfClass(a1, objc_msgSend(a2, "containingMessageClass"));
  if ((result & 1) == 0)
  {
    v5 = objc_msgSend(a2, "singletonName");
    return (uint64_t)+[NSException raise:format:](NSException, "raise:format:", NSInvalidArgumentException, CFSTR("Extension %@ used on wrong class (%@ instead of %@)"), v5, objc_opt_class(a1, v6), objc_msgSend(a2, "containingMessageClass"));
  }
  return result;
}

void sub_1001011C8(_QWORD *a1, int a2, uint64_t *a3, uint64_t a4, _QWORD *a5)
{
  int v9;
  unint64_t v10;
  const __CFString *v11;
  __CFString *v12;
  uint64_t v13;
  id v14;
  const __CFString *v15;
  const __CFString *v16;
  __CFString *v17;
  __CFString *v18;

  if (a2)
  {
    v9 = sub_1000DC0D4(a3 + 1);
    v10 = sub_1000DC534((uint64_t)(a3 + 1), v9);
    while (sub_1000DC584((uint64_t)(a3 + 1)))
    {
      v11 = sub_10010482C(a1, a5, a3, a4, 0);
      if (v11)
      {
        v12 = (__CFString *)v11;
        objc_msgSend(a5, "addExtension:value:", a1, v11);

      }
    }
    sub_1000DC57C((uint64_t)(a3 + 1), v10);
  }
  else
  {
    v13 = a1[1];
    if ((*(_BYTE *)(v13 + 45) & 1) != 0)
    {
      v15 = sub_10010482C(a1, a5, a3, a4, 0);
      if (v15)
      {
        v17 = (__CFString *)v15;
        objc_msgSend(a5, "addExtension:value:", a1, v15);

      }
    }
    else
    {
      if (*(unsigned __int8 *)(v13 + 44) - 15 > 1)
        v14 = 0;
      else
        v14 = objc_msgSend(a5, "getExistingExtension:", a1);
      v16 = sub_10010482C(a1, a5, a3, a4, v14);
      if (v16)
      {
        v18 = (__CFString *)v16;
        objc_msgSend(a5, "setExtension:value:", a1, v16);

      }
    }
  }
}

uint64_t sub_10010136C(_QWORD *a1)
{
  uint64_t result;

  result = a1[1];
  if (!result)
  {
    a1[1] = objc_alloc_init(TransparencyGPBUnknownFieldSet);
    sub_1000FE2EC(a1);
    return a1[1];
  }
  return result;
}

uint64_t sub_100101A64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t *v6;
  void *v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;

  v5 = *(unsigned __int8 *)(a2[1] + 30);
  v6 = (uint64_t *)(a3 + 8);
  v7 = sub_1001025B0((uint64_t)a1, a2);
  v8 = sub_1000DC0D4(v6);
  v9 = sub_1000DC534((uint64_t)v6, v8);
  while (sub_1000DC584((uint64_t)v6))
  {
    switch(v5)
    {
      case 0:
        v10 = sub_1000DC198(v6);
        goto LABEL_16;
      case 1:
      case 2:
        v10 = sub_1000DC120(v6);
        goto LABEL_16;
      case 3:
        *(float *)&v12 = sub_1000DC014(v6);
        objc_msgSend(v7, "addValue:", v12);
        break;
      case 4:
      case 5:
        v10 = sub_1000DC0E8(v6);
        goto LABEL_16;
      case 6:
        objc_msgSend(v7, "addValue:", sub_1000DBFDC(v6));
        break;
      case 7:
      case 11:
        v10 = sub_1000DC0D4(v6);
        goto LABEL_16;
      case 8:
      case 12:
        v10 = sub_1000DC04C(v6);
        goto LABEL_16;
      case 9:
        v10 = sub_1000DC158(v6);
        goto LABEL_16;
      case 10:
        v10 = sub_1000DC178(v6);
LABEL_16:
        objc_msgSend(v7, "addValue:", v10);
        break;
      case 17:
        v11 = sub_1000DC0D4(v6);
        if ((*(_WORD *)(a2[1] + 28) & 0x1000) != 0 && !objc_msgSend(a2, "isValidEnumValue:", v11))
          objc_msgSend((id)sub_10010136C(a1), "mergeVarintField:value:", *(unsigned int *)(a2[1] + 16), v11);
        else
          objc_msgSend(v7, "addRawValue:", v11);
        break;
      default:
        break;
    }
  }
  return sub_1000DC57C((uint64_t)v6, v9);
}

void sub_100101C48(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  void *v8;
  uint64_t *v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;

  v8 = sub_1001025B0((uint64_t)a1, a2);
  v9 = a3 + 1;
  switch(*(_BYTE *)(a2[1] + 30))
  {
    case 0:
      sub_1000DC198(v9);
      goto LABEL_20;
    case 1:
    case 2:
      sub_1000DC120(v9);
      goto LABEL_20;
    case 3:
      *(float *)&v10 = sub_1000DC014(v9);
      v11 = v8;
      goto LABEL_5;
    case 4:
    case 5:
      sub_1000DC0E8(v9);
      goto LABEL_20;
    case 6:
      v10 = sub_1000DBFDC(v9);
      v11 = v8;
      goto LABEL_5;
    case 7:
    case 0xB:
      sub_1000DC0D4(v9);
      goto LABEL_20;
    case 8:
    case 0xC:
      sub_1000DC04C(v9);
      goto LABEL_20;
    case 9:
      sub_1000DC158(v9);
      goto LABEL_20;
    case 0xA:
      sub_1000DC178(v9);
LABEL_20:
      v11 = v8;
LABEL_5:
      objc_msgSend(v11, "addValue:", v10);
      return;
    case 0xD:
      v12 = sub_1000DC448(v9);
      goto LABEL_22;
    case 0xE:
      v12 = (void *)sub_1000DC35C(v9);
LABEL_22:
      v14 = v12;
      v16 = v12;
      v13 = v8;
      goto LABEL_23;
    case 0xF:
      v16 = objc_alloc_init((Class)objc_msgSend(a2, "msgClass"));
      objc_msgSend(a3, "readMessage:extensionRegistry:", v16, a4);
      goto LABEL_14;
    case 0x10:
      v16 = objc_alloc_init((Class)objc_msgSend(a2, "msgClass"));
      objc_msgSend(a3, "readGroup:message:extensionRegistry:", *(unsigned int *)(a2[1] + 16), v16, a4);
LABEL_14:
      v13 = v8;
      v14 = v16;
LABEL_23:
      objc_msgSend(v13, "addObject:", v14);

      break;
    case 0x11:
      v15 = sub_1000DC0D4(v9);
      if ((*(_WORD *)(a2[1] + 28) & 0x1000) != 0 && !objc_msgSend(a2, "isValidEnumValue:", v15))
        objc_msgSend((id)sub_10010136C(a1), "mergeVarintField:value:", *(unsigned int *)(a2[1] + 16), v15);
      else
        objc_msgSend(v8, "addRawValue:", v15);
      break;
    default:
      return;
  }
}

void *sub_100101ED4(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = (void *)sub_100108350(a1, (uint64_t)a2);
  if (!v4)
  {
    v4 = sub_100104BF8(a2, 0);
    sub_10010896C(a1, a2, v4);
  }
  return v4;
}

void *sub_1001025B0(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = (void *)sub_100108350(a1, (uint64_t)a2);
  if (!v4)
  {
    v4 = sub_100105048(a2, 0);
    sub_10010896C(a1, a2, v4);
  }
  return v4;
}

void sub_10010369C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x3A0], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100103724(uint64_t a1)
{
  uint64_t result;

  result = sub_10009C98C();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_10010375C(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDE60();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103794(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDE60();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001037CC(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDE60();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103800(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDCCC();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103838(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDCCC();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103870(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DDCCC();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001038A4(uint64_t a1, unsigned int a2)
{
  uint64_t result;

  result = sub_1000DE3A0(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001038DC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = sub_1000DE014(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103914(uint64_t a1, int a2)
{
  uint64_t result;

  result = sub_1000DEADC(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_10010394C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1000DECD4(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_100103984(uint64_t a1, unsigned int a2)
{
  uint64_t result;

  result = sub_1000DE5AC(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001039BC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = sub_1000DE014(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001039F4(uint64_t a1, unsigned int a2)
{
  uint64_t result;

  result = sub_1000DE3A0(a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

BOOL sub_1001044A0(uint64_t a1, uint64_t a2)
{
  return sub_100108838(a2, *(_DWORD *)(a1 + 32), *(_DWORD *)(a1 + 36));
}

void sub_1001044B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;

  if (a3)
  {
    v5 = objc_opt_class(a2, a2);
    +[NSException raise:format:](NSException, "raise:format:", NSInvalidArgumentException, CFSTR("%@: %@ can only be set to NO (to clear field)."), v5, NSStringFromSelector(*(SEL *)(*(_QWORD *)(a1 + 32) + 48)));
  }
  sub_1001085C8(a2, *(_QWORD *)(a1 + 32));
}

uint64_t sub_100104544(uint64_t a1, uint64_t a2)
{
  return sub_100108884(a2, *(_DWORD *)(a1 + 32));
}

TransparencyGPBAutocreatedArray *sub_100104554(uint64_t a1, objc_class *a2)
{
  _QWORD *v2;
  unint64_t *v3;
  TransparencyGPBAutocreatedArray *result;
  unint64_t v5;
  int *v6;

  v2 = *(_QWORD **)(a1 + 32);
  v3 = (unint64_t *)(*((_QWORD *)a2 + 8) + *(unsigned int *)(v2[1] + 24));
  result = (TransparencyGPBAutocreatedArray *)atomic_load(v3);
  if (!result)
  {
    result = sub_100105048(v2, a2);
    while (1)
    {
      v5 = __ldaxr(v3);
      if (v5)
        break;
      if (!__stlxr((unint64_t)result, v3))
        return result;
    }
    __clrex();
    if (*(unsigned __int8 *)(v2[1] + 30) - 13 >= 4)
      v6 = &OBJC_IVAR___TransparencyGPBInt32Array__autocreator;
    else
      v6 = &OBJC_IVAR___TransparencyGPBAutocreatedArray__autocreator;
    *(Class *)((char *)&result->super.super.super.isa + *v6) = 0;

    return (TransparencyGPBAutocreatedArray *)v5;
  }
  return result;
}

TransparencyGPBAutocreatedDictionary *sub_100104604(uint64_t a1, objc_class *a2)
{
  _QWORD *v2;
  unint64_t *v3;
  TransparencyGPBAutocreatedDictionary *v4;
  TransparencyGPBAutocreatedDictionary *v5;
  unint64_t v6;
  int *v7;

  v2 = *(_QWORD **)(a1 + 32);
  v3 = (unint64_t *)(*((_QWORD *)a2 + 8) + *(unsigned int *)(v2[1] + 24));
  v4 = (TransparencyGPBAutocreatedDictionary *)atomic_load(v3);
  if (!v4)
  {
    v5 = sub_100104BF8(*(_QWORD **)(a1 + 32), a2);
    v4 = v5;
    while (1)
    {
      v6 = __ldaxr(v3);
      if (v6)
        break;
      if (!__stlxr((unint64_t)v5, v3))
        return v4;
    }
    __clrex();
    if (objc_msgSend(v2, "mapKeyDataType") == 14
      && *(unsigned __int8 *)(v2[1] + 30) - 13 < 4)
    {
      v7 = &OBJC_IVAR___TransparencyGPBAutocreatedDictionary__autocreator;
    }
    else
    {
      v7 = &OBJC_IVAR___TransparencyGPBInt32Int32Dictionary__autocreator;
    }
    *(Class *)((char *)&v4->super.super.super.isa + *v7) = 0;

    return (TransparencyGPBAutocreatedDictionary *)v6;
  }
  return v4;
}

uint64_t sub_1001046D8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10010893C(a2, *(_QWORD **)(a1 + 32), a3);
}

id sub_1001046E8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend((id)sub_100108350(a2, *(_QWORD *)(a1 + 32)), "count");
}

const __CFString *sub_10010482C(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t *v8;
  id v10;
  id v11;
  _BOOL8 v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v31;

  v5 = a1[1];
  v8 = a3 + 1;
  switch(*(_BYTE *)(v5 + 44))
  {
    case 0:
      v11 = objc_alloc((Class)NSNumber);
      v12 = sub_1000DC198(v8);
      return (const __CFString *)_objc_msgSend(v11, "initWithBool:", v12);
    case 1:
      v13 = objc_alloc((Class)NSNumber);
      v14 = sub_1000DC120(v8);
      return (const __CFString *)_objc_msgSend(v13, "initWithUnsignedInt:", v14);
    case 2:
      v15 = objc_alloc((Class)NSNumber);
      v16 = sub_1000DC120(v8);
      goto LABEL_11;
    case 3:
      v17 = objc_alloc((Class)NSNumber);
      sub_1000DC014(v8);
      return (const __CFString *)_objc_msgSend(v17, "initWithFloat:", v31);
    case 4:
      v18 = objc_alloc((Class)NSNumber);
      v19 = sub_1000DC0E8(v8);
      return (const __CFString *)_objc_msgSend(v18, "initWithUnsignedLongLong:", v19);
    case 5:
      v25 = objc_alloc((Class)NSNumber);
      v26 = sub_1000DC0E8(v8);
      return (const __CFString *)_objc_msgSend(v25, "initWithLongLong:", v26);
    case 6:
      v27 = objc_alloc((Class)NSNumber);
      sub_1000DBFDC(v8);
      return (const __CFString *)_objc_msgSend(v27, "initWithDouble:", v29);
    case 7:
      v15 = objc_alloc((Class)NSNumber);
      v16 = sub_1000DC0D4(v8);
      goto LABEL_11;
    case 8:
      v25 = objc_alloc((Class)NSNumber);
      v26 = sub_1000DC04C(v8);
      return (const __CFString *)_objc_msgSend(v25, "initWithLongLong:", v26);
    case 9:
      v15 = objc_alloc((Class)NSNumber);
      v16 = sub_1000DC158(v8);
LABEL_11:
      v20 = v16;
      v21 = v15;
      return (const __CFString *)_objc_msgSend(v21, "initWithInt:", v20);
    case 0xA:
      v25 = objc_alloc((Class)NSNumber);
      v26 = sub_1000DC178(v8);
      return (const __CFString *)_objc_msgSend(v25, "initWithLongLong:", v26);
    case 0xB:
      v13 = objc_alloc((Class)NSNumber);
      v14 = sub_1000DC0D4(v8);
      return (const __CFString *)_objc_msgSend(v13, "initWithUnsignedInt:", v14);
    case 0xC:
      v18 = objc_alloc((Class)NSNumber);
      v19 = sub_1000DC04C(v8);
      return (const __CFString *)_objc_msgSend(v18, "initWithUnsignedLongLong:", v19);
    case 0xD:
      return (const __CFString *)sub_1000DC448(a3 + 1);
    case 0xE:
      return sub_1000DC35C(a3 + 1);
    case 0xF:
    case 0x10:
      if (a5)
        v10 = a5;
      else
        v10 = objc_alloc_init((Class)objc_msgSend(objc_msgSend(objc_msgSend(a1, "msgClass"), "descriptor"), "messageClass"));
      v28 = v10;
      if (*(_BYTE *)(v5 + 44) == 16)
      {
        objc_msgSend(a3, "readGroup:message:extensionRegistry:", *(unsigned int *)(v5 + 40), v10, a4);
      }
      else if ((*(_BYTE *)(v5 + 45) & 4) != 0)
      {
        objc_msgSend(v10, "mergeFromCodedInputStream:extensionRegistry:", a3, a4);
      }
      else
      {
        objc_msgSend(a3, "readMessage:extensionRegistry:", v10, a4);
      }
      return (const __CFString *)v28;
    case 0x11:
      v23 = sub_1000DC0D4(a3 + 1);
      v24 = objc_msgSend(a1, "enumDescriptor");
      if (objc_msgSend(v24, "isClosed")
        && !((unsigned int (*)(uint64_t))objc_msgSend(v24, "enumVerifier"))(v23))
      {
        objc_msgSend((id)sub_10010136C(a2), "mergeVarintField:value:", *(unsigned int *)(a1[1] + 40), v23);
        return 0;
      }
      else
      {
        v21 = objc_alloc((Class)NSNumber);
        v20 = v23;
        return (const __CFString *)_objc_msgSend(v21, "initWithInt:", v20);
      }
    default:
      return 0;
  }
}

TransparencyGPBAutocreatedDictionary *sub_100104BF8(_QWORD *a1, objc_class *a2)
{
  unsigned int v4;
  TransparencyGPBAutocreatedDictionary *result;
  int v6;
  __objc2_class *v7;
  __objc2_class *v8;
  int *v9;

  v4 = objc_msgSend(a1, "mapKeyDataType");
  result = 0;
  v6 = *(unsigned __int8 *)(a1[1] + 30);
  switch(v4)
  {
    case 0u:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBBoolBoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBBoolUInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBBoolInt32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBBoolFloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBBoolUInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBBoolInt64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBBoolDoubleDictionary;
          goto LABEL_63;
        case 0xD:
        case 0xE:
        case 0xF:
          v7 = TransparencyGPBBoolObjectDictionary;
          goto LABEL_63;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBBoolEnumDictionary;
          goto LABEL_72;
        default:
          goto LABEL_64;
      }
    case 1u:
    case 0xBu:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBUInt32BoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBUInt32UInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBUInt32Int32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBUInt32FloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBUInt32UInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBUInt32Int64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBUInt32DoubleDictionary;
          goto LABEL_63;
        case 0xD:
        case 0xE:
        case 0xF:
          v7 = TransparencyGPBUInt32ObjectDictionary;
          goto LABEL_63;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBUInt32EnumDictionary;
          goto LABEL_72;
        default:
          goto LABEL_64;
      }
    case 2u:
    case 7u:
    case 9u:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBInt32BoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBInt32UInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBInt32Int32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBInt32FloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBInt32UInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBInt32Int64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBInt32DoubleDictionary;
          goto LABEL_63;
        case 0xD:
        case 0xE:
        case 0xF:
          v7 = TransparencyGPBInt32ObjectDictionary;
          goto LABEL_63;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBInt32EnumDictionary;
          goto LABEL_72;
        default:
          goto LABEL_64;
      }
    case 3u:
    case 6u:
    case 0xDu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      return result;
    case 4u:
    case 0xCu:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBUInt64BoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBUInt64UInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBUInt64Int32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBUInt64FloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBUInt64UInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBUInt64Int64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBUInt64DoubleDictionary;
          goto LABEL_63;
        case 0xD:
        case 0xE:
        case 0xF:
          v7 = TransparencyGPBUInt64ObjectDictionary;
          goto LABEL_63;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBUInt64EnumDictionary;
          goto LABEL_72;
        default:
          goto LABEL_64;
      }
    case 5u:
    case 8u:
    case 0xAu:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBInt64BoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBInt64UInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBInt64Int32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBInt64FloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBInt64UInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBInt64Int64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBInt64DoubleDictionary;
          goto LABEL_63;
        case 0xD:
        case 0xE:
        case 0xF:
          v7 = TransparencyGPBInt64ObjectDictionary;
          goto LABEL_63;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBInt64EnumDictionary;
          goto LABEL_72;
        default:
          goto LABEL_64;
      }
    case 0xEu:
      result = 0;
      switch(*(_BYTE *)(a1[1] + 30))
      {
        case 0:
          v7 = TransparencyGPBStringBoolDictionary;
          goto LABEL_63;
        case 1:
        case 0xB:
          v7 = TransparencyGPBStringUInt32Dictionary;
          goto LABEL_63;
        case 2:
        case 7:
        case 9:
          v7 = TransparencyGPBStringInt32Dictionary;
          goto LABEL_63;
        case 3:
          v7 = TransparencyGPBStringFloatDictionary;
          goto LABEL_63;
        case 4:
        case 0xC:
          v7 = TransparencyGPBStringUInt64Dictionary;
          goto LABEL_63;
        case 5:
        case 8:
        case 0xA:
          v7 = TransparencyGPBStringInt64Dictionary;
          goto LABEL_63;
        case 6:
          v7 = TransparencyGPBStringDoubleDictionary;
LABEL_63:
          result = (TransparencyGPBAutocreatedDictionary *)objc_alloc_init(v7);
          goto LABEL_64;
        case 0xD:
        case 0xE:
        case 0xF:
          if (a2)
          {
            result = objc_alloc_init(TransparencyGPBAutocreatedDictionary);
            goto LABEL_67;
          }
          result = (TransparencyGPBAutocreatedDictionary *)objc_alloc_init((Class)NSMutableDictionary);
          break;
        case 0x10:
          return result;
        case 0x11:
          v8 = TransparencyGPBStringEnumDictionary;
LABEL_72:
          result = (TransparencyGPBAutocreatedDictionary *)objc_msgSend([v8 alloc], "initWithValidationFunction:", objc_msgSend(objc_msgSend(a1, "enumDescriptor"), "enumVerifier"));
          if (a2)
            goto LABEL_65;
          return result;
        default:
          goto LABEL_64;
      }
      break;
    default:
LABEL_64:
      if (a2)
      {
LABEL_65:
        if (v4 == 14 && (v6 - 13) <= 3)
LABEL_67:
          v9 = &OBJC_IVAR___TransparencyGPBAutocreatedDictionary__autocreator;
        else
          v9 = &OBJC_IVAR___TransparencyGPBInt32Int32Dictionary__autocreator;
        *(Class *)((char *)&result->super.super.super.isa + *v9) = a2;
      }
      break;
  }
  return result;
}

TransparencyGPBAutocreatedArray *sub_100105048(_QWORD *a1, objc_class *a2)
{
  int v3;
  TransparencyGPBAutocreatedArray *result;
  __objc2_class *v5;
  int *v6;

  v3 = *(unsigned __int8 *)(a1[1] + 30);
  switch(*(_BYTE *)(a1[1] + 30))
  {
    case 0:
      v5 = TransparencyGPBBoolArray;
      goto LABEL_14;
    case 1:
    case 0xB:
      v5 = TransparencyGPBUInt32Array;
      goto LABEL_14;
    case 2:
    case 7:
    case 9:
      v5 = TransparencyGPBInt32Array;
      goto LABEL_14;
    case 3:
      v5 = TransparencyGPBFloatArray;
      goto LABEL_14;
    case 4:
    case 0xC:
      v5 = TransparencyGPBUInt64Array;
      goto LABEL_14;
    case 5:
    case 8:
    case 0xA:
      v5 = TransparencyGPBInt64Array;
      goto LABEL_14;
    case 6:
      v5 = TransparencyGPBDoubleArray;
LABEL_14:
      result = (TransparencyGPBAutocreatedArray *)objc_alloc_init(v5);
      if (a2)
        goto LABEL_15;
      return result;
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
      if (!a2)
        return (TransparencyGPBAutocreatedArray *)objc_alloc_init((Class)NSMutableArray);
      result = objc_alloc_init(TransparencyGPBAutocreatedArray);
LABEL_16:
      v6 = &OBJC_IVAR___TransparencyGPBAutocreatedArray__autocreator;
LABEL_18:
      *(Class *)((char *)&result->super.super.super.isa + *v6) = a2;
      return result;
    case 0x11:
      result = -[TransparencyGPBEnumArray initWithValidationFunction:]([TransparencyGPBEnumArray alloc], "initWithValidationFunction:", objc_msgSend(objc_msgSend(a1, "enumDescriptor"), "enumVerifier"));
      if (!a2)
        return result;
      goto LABEL_15;
    default:
      result = 0;
      if (!a2)
        return result;
LABEL_15:
      if ((v3 - 13) <= 3)
        goto LABEL_16;
      v6 = &OBJC_IVAR___TransparencyGPBInt32Array__autocreator;
      goto LABEL_18;
  }
}

BOOL sub_10010518C(uint64_t a1, uint64_t a2)
{
  return sub_100108DE8(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010519C(uint64_t a1, uint64_t a2)
{
  return sub_100108BDC(a2, *(_QWORD **)(a1 + 32));
}

id sub_1001051AC(uint64_t a1, uint64_t a2)
{
  return sub_100108BDC(a2, *(_QWORD **)(a1 + 32));
}

float sub_1001051BC(uint64_t a1, uint64_t a2)
{
  return sub_100109134(a2, *(_QWORD **)(a1 + 32));
}

id sub_1001051CC(uint64_t a1, uint64_t a2)
{
  return sub_100108FCC(a2, *(_QWORD **)(a1 + 32));
}

id sub_1001051DC(uint64_t a1, uint64_t a2)
{
  return sub_100108FCC(a2, *(_QWORD **)(a1 + 32));
}

double sub_1001051EC(uint64_t a1, uint64_t a2)
{
  return sub_1001092B4(a2, *(_QWORD **)(a1 + 32));
}

id sub_1001051FC(uint64_t a1, uint64_t a2)
{
  return sub_100108BDC(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010520C(uint64_t a1, uint64_t a2)
{
  return sub_100108FCC(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010521C(uint64_t a1, uint64_t a2)
{
  return sub_100108BDC(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010522C(uint64_t a1, uint64_t a2)
{
  return sub_100108FCC(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010523C(uint64_t a1, uint64_t a2)
{
  return sub_100108BDC(a2, *(_QWORD **)(a1 + 32));
}

id sub_10010524C(uint64_t a1, uint64_t a2)
{
  return sub_100108FCC(a2, *(_QWORD **)(a1 + 32));
}

_QWORD *sub_10010525C(uint64_t a1, uint64_t a2)
{
  return sub_1000FF510(a2, *(_QWORD **)(a1 + 32));
}

_QWORD *sub_10010526C(uint64_t a1, uint64_t a2)
{
  return sub_1000FF510(a2, *(_QWORD **)(a1 + 32));
}

_QWORD *sub_10010527C(uint64_t a1, uint64_t a2)
{
  return sub_1000FF510(a2, *(_QWORD **)(a1 + 32));
}

_QWORD *sub_10010528C(uint64_t a1, uint64_t a2)
{
  return sub_1000FF510(a2, *(_QWORD **)(a1 + 32));
}

uint64_t sub_10010529C(uint64_t a1, uint64_t a2)
{
  return sub_100108B80(a2, *(_QWORD **)(a1 + 32));
}

id sub_1001052AC(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108E9C(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_1001052BC(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108CFC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_1001052CC(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108CFC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_1001052DC(uint64_t a1, _QWORD *a2, float a3)
{
  return sub_1001091CC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_1001052EC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100109050(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_1001052FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100109050(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010530C(uint64_t a1, _QWORD *a2, double a3)
{
  return sub_10010934C(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010531C(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108CFC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010532C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100109050(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010533C(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108CFC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010534C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100109050(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010535C(uint64_t a1, _QWORD *a2, int a3)
{
  return sub_100108CFC(a2, *(_QWORD *)(a1 + 32), a3);
}

id sub_10010536C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100109050(a2, *(_QWORD *)(a1 + 32), a3);
}

uint64_t sub_10010537C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10010896C(a2, *(_QWORD **)(a1 + 32), objc_msgSend(a3, "copy"));
}

uint64_t sub_1001053B0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10010896C(a2, *(_QWORD **)(a1 + 32), objc_msgSend(a3, "copy"));
}

uint64_t sub_1001053E4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10010893C(a2, *(_QWORD **)(a1 + 32), a3);
}

uint64_t sub_1001053F4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10010893C(a2, *(_QWORD **)(a1 + 32), a3);
}

id sub_100105404(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_100108C64(a2, *(void **)(a1 + 32), a3);
}

uint64_t sub_1001054BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

CFStringRef sub_1001054C8(char *cStr)
{
  return CFStringCreateWithCString(kCFAllocatorDefault, cStr, 0x8000100u);
}

BOOL sub_1001054E4(const char *a1, const char *a2)
{
  return strcmp(a1, a2) == 0;
}

uint64_t sub_100105500(_BYTE *a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;

  LOBYTE(v1) = *a1;
  if (*a1)
  {
    v2 = 0;
    v3 = 1;
    do
    {
      v2 = (1025 * (v2 + (char)v1)) ^ ((1025 * (v2 + (char)v1)) >> 6);
      v1 = a1[v3++];
    }
    while (v1);
    v4 = 9 * v2;
  }
  else
  {
    v4 = 0;
  }
  return 32769 * (v4 ^ (v4 >> 11));
}

uint64_t sub_1001055A4(objc_class *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  const char *Name;
  objc_class *MetaClass;
  void (*v9)(void);
  _QWORD block[5];

  result = (uint64_t)sub_100105668(a1, a2);
  if (result)
  {
    v5 = result;
    v6 = sub_1001094C8("getClassValue", 0);
    Name = class_getName(a1);
    MetaClass = objc_getMetaClass(Name);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001057B4;
    block[3] = &unk_1002456E0;
    block[4] = v5;
    v9 = imp_implementationWithBlock(block);
    return class_addMethod(MetaClass, a2, v9, v6) || sub_10010A6B4(MetaClass, a2);
  }
  return result;
}

const void *sub_100105668(objc_class *a1, SEL sel)
{
  const char *Name;
  int v4;
  const void *Value;
  const char *v6;
  uint64_t v7;
  const char *v8;
  size_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  uint64_t v14;

  Name = sel_getName(sel);
  v4 = *(unsigned __int8 *)Name;
  if (v4 != 95)
  {
    v6 = Name;
    v7 = 1;
    if (!*Name)
    {
LABEL_6:
      v8 = class_getName(a1);
      v9 = strlen(v8);
      __chkstk_darwin(v9);
      v11 = (char *)&v14 - v10;
      bzero((char *)&v14 - v10, v12);
      memcpy(v11, v8, v9);
      v11[v9] = 95;
      memcpy(&v11[v9 + 1], v6, v7 - 1);
      v11[v9 + v7] = 0;
      os_unfair_lock_lock((os_unfair_lock_t)&unk_1002A7390);
      Value = CFDictionaryGetValue((CFDictionaryRef)qword_1002A7380, v11);
      os_unfair_lock_unlock((os_unfair_lock_t)&unk_1002A7390);
      return Value;
    }
    while (v4 != 58)
    {
      v4 = Name[v7++];
      if (!v4)
        goto LABEL_6;
    }
  }
  return 0;
}

uint64_t sub_1001057B4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

unint64_t sub_100105884()
{
  id v1;

  if (!atomic_load(&qword_1002A73A0))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("TransparencyGPBNullValue"), "NullValue", &unk_100216B7C, 1, sub_100105900, 0);
    while (!__ldaxr(&qword_1002A73A0))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A73A0))
        return atomic_load(&qword_1002A73A0);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A73A0);
}

BOOL sub_100105900(int a1)
{
  return a1 == 0;
}

id sub_100105A00(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBValue descriptor](TransparencyGPBValue, "descriptor"), "fieldWithNumber:", 1));
}

id sub_100105A38(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBValue descriptor](TransparencyGPBValue, "descriptor"), "fieldWithNumber:", 1), a2);
}

void sub_100105A78(uint64_t a1)
{
  sub_100108708(a1, (id *)objc_msgSend(objc_msgSend(+[TransparencyGPBValue descriptor](TransparencyGPBValue, "descriptor"), "oneofs"), "objectAtIndex:", 0));
}

unint64_t sub_100105B8C()
{
  id v1;

  if (!atomic_load(&qword_1002A73C8))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("TransparencyGPBSyntax"), "SyntaxProto2", &unk_100216B9C, 2, sub_100105C08, 0);
    while (!__ldaxr(&qword_1002A73C8))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A73C8))
        return atomic_load(&qword_1002A73C8);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A73C8);
}

BOOL sub_100105C08(unsigned int a1)
{
  return a1 < 2;
}

unint64_t sub_100105C14()
{
  id v1;

  if (!atomic_load(&qword_1002A73D0))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("TransparencyGPBField_Kind"), "TypeUnknown", &unk_100216C78, 19, sub_100105C90, 0);
    while (!__ldaxr(&qword_1002A73D0))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A73D0))
        return atomic_load(&qword_1002A73D0);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A73D0);
}

BOOL sub_100105C90(unsigned int a1)
{
  return a1 < 0x13;
}

unint64_t sub_100105C9C()
{
  id v1;

  if (!atomic_load(&qword_1002A73D8))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("TransparencyGPBField_Cardinality"), "CardinalityUnknown", &unk_100216D14, 4, sub_100105D18, 0);
    while (!__ldaxr(&qword_1002A73D8))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A73D8))
        return atomic_load(&qword_1002A73D8);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A73D8);
}

BOOL sub_100105D18(unsigned int a1)
{
  return a1 < 4;
}

id sub_100105D90(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBType descriptor](TransparencyGPBType, "descriptor"), "fieldWithNumber:", 6));
}

id sub_100105DC8(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBType descriptor](TransparencyGPBType, "descriptor"), "fieldWithNumber:", 6), a2);
}

id sub_100105E88(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBField descriptor](TransparencyGPBField, "descriptor"), "fieldWithNumber:", 1));
}

id sub_100105EC0(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBField descriptor](TransparencyGPBField, "descriptor"), "fieldWithNumber:", 1), a2);
}

id sub_100105F00(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBField descriptor](TransparencyGPBField, "descriptor"), "fieldWithNumber:", 2));
}

id sub_100105F38(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBField descriptor](TransparencyGPBField, "descriptor"), "fieldWithNumber:", 2), a2);
}

id sub_100105FE4(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBEnum descriptor](TransparencyGPBEnum, "descriptor"), "fieldWithNumber:", 5));
}

id sub_10010601C(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBEnum descriptor](TransparencyGPBEnum, "descriptor"), "fieldWithNumber:", 5), a2);
}

void sub_100106850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  _Block_object_dispose(&a44, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100106880(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = sub_1000DFE54(*(_DWORD *)(a1 + 40), a2);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001068B8(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DFE08(*(_DWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t sub_1001068F0(uint64_t a1)
{
  uint64_t result;

  result = sub_1000DFD70(*(_DWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

id sub_100106D90(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("\t%llu\n"), a2);
}

id sub_100106DBC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("\t%u\n"), a2);
}

id sub_100106DE8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("\t%llu\n"), a2);
}

void sub_100107270(uint64_t a1, void *a2, void *a3)
{
  id v4;

  v4 = objc_msgSend(a2, "copy");
  objc_msgSend(a3, "addField:", v4);

}

int sub_100107574(id a1, const void *a2, const void *a3)
{
  int v3;

  if (*(_QWORD *)a2 == *(_QWORD *)a3)
    v3 = 0;
  else
    v3 = -1;
  if (*(_QWORD *)a2 > *(_QWORD *)a3)
    return 1;
  else
    return v3;
}

int sub_1001076E4(id a1, const void *a2, const void *a3)
{
  int v3;

  if (*(_QWORD *)a2 == *(_QWORD *)a3)
    v3 = 0;
  else
    v3 = -1;
  if (*(_QWORD *)a2 > *(_QWORD *)a3)
    return 1;
  else
    return v3;
}

id sub_1001077AC(uint64_t a1, void *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend(a2, "serializedSize");
  *a3 += result;
  return result;
}

id sub_1001077F4(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "writeAsMessageSetExtensionToOutput:");
}

id sub_100107834(uint64_t a1, void *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend(a2, "serializedSizeAsMessageSetExtension");
  *a3 += result;
  return result;
}

void sub_100107A20(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a2, "number");
  if (!(_DWORD)v5)
    +[NSException raise:format:](NSException, "raise:format:", NSInvalidArgumentException, CFSTR("Zero is not a valid field number."));
  v6 = objc_msgSend(a3, "mutableFieldForNumber:create:", v5, 0);
  if (v6)
  {
    _objc_msgSend(v6, "mergeFromField:", a2);
  }
  else
  {
    v7 = objc_msgSend(a2, "copy");
    objc_msgSend(a3, "addField:", v7);

  }
}

uint64_t sub_100107E6C()
{
  if (qword_1002A7408 != -1)
    dispatch_once(&qword_1002A7408, &stru_1002457B0);
  return qword_1002A7410;
}

void sub_100107EAC(id a1)
{
  qword_1002A7410 = (uint64_t)objc_alloc_init((Class)NSData);
}

id sub_100107ED0(id result)
{
  NSMutableArray *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  _QWORD *v10;
  unsigned int v11;
  _DWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *j;
  void *v25;
  unsigned int v26;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[5];
  _QWORD v33[5];
  _QWORD v34[5];
  _QWORD v35[5];
  _QWORD v36[5];
  _QWORD v37[5];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];

  if (!result)
    return result;
  v1 = +[NSMutableArray arrayWithObject:](NSMutableArray, "arrayWithObject:", result);
  result = -[NSMutableArray count](v1, "count");
  if (!result)
    return result;
  do
  {
    v2 = -[NSMutableArray lastObject](v1, "lastObject");
    -[NSMutableArray removeLastObject](v1, "removeLastObject");
    objc_msgSend(v2, "setUnknownFields:", 0);
    v4 = objc_msgSend((id)objc_opt_class(v2, v3), "descriptor");
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v5 = (void *)v4[1];
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    if (!v6)
      goto LABEL_35;
    v7 = v6;
    v8 = *(_QWORD *)v39;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v39 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)i);
        if (*(unsigned __int8 *)(v10[1] + 30) - 15 <= 1)
        {
          v11 = objc_msgSend(*(id *)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)i), "fieldType");
          if (v11 == 2)
          {
            v17 = v2[8];
            if (v17)
              v18 = *(void **)(v17 + *(unsigned int *)(v10[1] + 24));
            else
              v18 = 0;
            switch(objc_msgSend(v10, "mapKeyDataType"))
            {
              case 0u:
                v37[0] = _NSConcreteStackBlock;
                v37[1] = 3221225472;
                v37[2] = sub_100108388;
                v37[3] = &unk_1002457D8;
                v37[4] = v1;
                v19 = v37;
                goto LABEL_32;
              case 1u:
              case 0xBu:
                v36[0] = _NSConcreteStackBlock;
                v36[1] = 3221225472;
                v36[2] = sub_100108390;
                v36[3] = &unk_100245800;
                v36[4] = v1;
                v19 = v36;
                goto LABEL_32;
              case 2u:
              case 7u:
              case 9u:
                v35[0] = _NSConcreteStackBlock;
                v35[1] = 3221225472;
                v35[2] = sub_100108398;
                v35[3] = &unk_100245828;
                v35[4] = v1;
                v19 = v35;
                goto LABEL_32;
              case 4u:
              case 0xCu:
                v34[0] = _NSConcreteStackBlock;
                v34[1] = 3221225472;
                v34[2] = sub_1001083A0;
                v34[3] = &unk_100245850;
                v34[4] = v1;
                v19 = v34;
                goto LABEL_32;
              case 5u:
              case 8u:
              case 0xAu:
                v33[0] = _NSConcreteStackBlock;
                v33[1] = 3221225472;
                v33[2] = sub_1001083A8;
                v33[3] = &unk_100245878;
                v33[4] = v1;
                v19 = v33;
                goto LABEL_32;
              case 0xEu:
                v32[0] = _NSConcreteStackBlock;
                v32[1] = 3221225472;
                v32[2] = sub_1001083B0;
                v32[3] = &unk_1002458A0;
                v32[4] = v1;
                v19 = v32;
LABEL_32:
                objc_msgSend(v18, "enumerateKeysAndObjectsUsingBlock:", v19);
                break;
              default:
                continue;
            }
          }
          else if (v11 == 1)
          {
            v15 = v2[8];
            if (v15)
              v16 = *(void **)(v15 + *(unsigned int *)(v10[1] + 24));
            else
              v16 = 0;
            if (objc_msgSend(v16, "count"))
              -[NSMutableArray addObjectsFromArray:](v1, "addObjectsFromArray:", v16);
          }
          else
          {
            if (v11)
              continue;
            v12 = (_DWORD *)v10[1];
            v13 = v12[5];
            if ((v13 & 0x80000000) != 0)
            {
              v14 = v2[8];
              if (*(_DWORD *)(v14 + 4 * -(int)v13) != v12[4])
                continue;
LABEL_23:
              -[NSMutableArray addObject:](v1, "addObject:", *(_QWORD *)(v14 + v12[6]));
              continue;
            }
            v14 = v2[8];
            if (((*(_DWORD *)(v14 + ((v13 >> 3) & 0x1FFFFFFC)) >> v13) & 1) != 0)
              goto LABEL_23;
          }
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    }
    while (v7);
LABEL_35:
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v20 = objc_msgSend(v2, "extensionsCurrentlySet", 0);
    v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v28, v42, 16);
    if (v21)
    {
      v22 = v21;
      v23 = *(_QWORD *)v29;
      do
      {
        for (j = 0; j != v22; j = (char *)j + 1)
        {
          if (*(_QWORD *)v29 != v23)
            objc_enumerationMutation(v20);
          v25 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)j);
          if (objc_msgSend(v25, "dataType") - 15 <= 1)
          {
            v26 = objc_msgSend(v25, "isRepeated");
            v27 = objc_msgSend(v2, "getExtension:", v25);
            if (v26)
              -[NSMutableArray addObjectsFromArray:](v1, "addObjectsFromArray:", v27);
            else
              -[NSMutableArray addObject:](v1, "addObject:", v27);
          }
        }
        v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v28, v42, 16);
      }
      while (v22);
    }
    result = -[NSMutableArray count](v1, "count");
  }
  while (result);
  return result;
}

uint64_t sub_100108350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
    return *(_QWORD *)(v2 + *(unsigned int *)(*(_QWORD *)(a2 + 8) + 24));
  else
    return 0;
}

id sub_100108388(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_100108390(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_100108398(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_1001083A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_1001083A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_1001083B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

id sub_1001083B8(id result)
{
  if ((int)result >= 30008)
    return +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Linked to ProtocolBuffer runtime version %d, but code compiled needing at least %d!"), 30007, result);
  if ((int)result <= 30000)
    return +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Proto generation source compiled against runtime version %d, but this version of the runtime only supports back to %d!"), result, 30001);
  return result;
}

id sub_10010843C()
{
  return +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Proto generation source appears to have been from a version newer that this runtime (%d)."), 30007);
}

id sub_10010847C(id result)
{
  uint64_t v1;
  uint64_t v2;

  if ((_DWORD)result != 30001)
    return +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Linked to ProtocolBuffer runtime version %d, but code compiled with version %d!"), 30001, result, v1, v2);
  return result;
}

BOOL sub_1001084CC(void *a1, uint64_t a2)
{
  return sub_100108500((uint64_t)a1, (uint64_t)objc_msgSend(objc_msgSend(a1, "descriptor"), "fieldWithNumber:", a2));
}

BOOL sub_100108500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;

  v2 = 0;
  if (a1 && a2)
  {
    v3 = *(_QWORD *)(a2 + 8);
    if ((*(_WORD *)(v3 + 28) & 0xF02) != 0)
    {
      v4 = *(_QWORD *)(a1 + 64);
      if (v4)
        v5 = *(void **)(v4 + *(unsigned int *)(v3 + 24));
      else
        v5 = 0;
      return objc_msgSend(v5, "count") != 0;
    }
    else
    {
      v6 = *(unsigned int *)(v3 + 20);
      if ((v6 & 0x80000000) != 0)
        return *(_DWORD *)(*(_QWORD *)(a1 + 64) + 4 * -(int)v6) == *(_DWORD *)(v3 + 16);
      else
        return (*(_DWORD *)(*(_QWORD *)(a1 + 64) + ((v6 >> 3) & 0x1FFFFFFC)) >> v6) & 1;
    }
  }
  return v2;
}

void sub_1001085C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(unsigned int *)(v3 + 20);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = *(_QWORD *)(a1 + 64);
    if (*(_DWORD *)(v5 + 4 * -(int)v4) != *(_DWORD *)(v3 + 16))
      return;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v5 + ((v4 >> 3) & 0x1FFFFFFC)) >> v4) & 1) == 0)
      return;
  }
  if ((*(_WORD *)(v3 + 28) & 0xF02) != 0 || *(unsigned __int8 *)(v3 + 30) - 13 <= 3)
  {
    v6 = *(unsigned int *)(v3 + 24);

    *(_QWORD *)(v5 + v6) = 0;
    LODWORD(v4) = *(_DWORD *)(v3 + 20);
  }
  v7 = *(_QWORD *)(a1 + 64);
  if ((v4 & 0x80000000) != 0)
    *(_DWORD *)(v7 + 4 * -(int)v4) = 0;
  else
    *(_DWORD *)(v7 + 4 * (v4 >> 5)) &= ~(1 << v4);
}

uint64_t sub_1001086B4(uint64_t result, unsigned int a2, int a3, int a4)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;

  v4 = *(_QWORD *)(result + 64);
  if ((a2 & 0x80000000) != 0)
  {
    if (!a4)
      a3 = 0;
    *(_DWORD *)(v4 + 4 * -a2) = a3;
  }
  else
  {
    v5 = a2 >> 5;
    v6 = 1 << a2;
    if (a4)
      v7 = *(_DWORD *)(v4 + 4 * v5) | v6;
    else
      v7 = *(_DWORD *)(v4 + 4 * v5) & ~v6;
    *(_DWORD *)(v4 + 4 * v5) = v7;
  }
  return result;
}

void sub_100108708(uint64_t a1, id *a2)
{
  sub_100108760(a1, a2, *(_DWORD *)(*((_QWORD *)objc_msgSend(a2[2], "objectAtIndexedSubscript:", 0) + 1) + 20), 0);
}

void sub_100108760(uint64_t a1, void *a2, unsigned int a3, int a4)
{
  int v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a1 + 64) - 4 * (int)a3);
  if (v5 != a4 && v5 != 0)
  {
    v8 = objc_msgSend(a2, "fieldWithNumber:");
    if (v8)
    {
      v9 = v8[1];
      if ((*(_WORD *)(v9 + 28) & 0xF02) != 0 || *(unsigned __int8 *)(v9 + 30) - 13 <= 3)
      {
        v10 = *(_QWORD *)(a1 + 64);
        v11 = *(unsigned int *)(v9 + 24);

        *(_QWORD *)(v10 + v11) = 0;
      }
    }
    v12 = *(_QWORD *)(a1 + 64);
    if ((a3 & 0x80000000) != 0)
      *(_DWORD *)(v12 + 4 * -a3) = 0;
    else
      *(_DWORD *)(v12 + 4 * (a3 >> 5)) &= ~(1 << a3);
  }
}

BOOL sub_100108838(uint64_t a1, unsigned int a2, int a3)
{
  if ((a2 & 0x80000000) != 0)
    return *(_DWORD *)(*(_QWORD *)(a1 + 64) + 4 * -a2) == a3;
  else
    return (*(_DWORD *)(*(_QWORD *)(a1 + 64) + 4 * (a2 >> 5)) >> a2) & 1;
}

uint64_t sub_100108884(uint64_t a1, int a2)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 64) - 4 * a2);
}

void sub_1001088A0(uint64_t a1, uint64_t a2)
{
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(_DWORD **)(a2 + 8);
  v3 = v2[5];
  if ((v3 & 0x80000000) == 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v4 + ((v3 >> 3) & 0x1FFFFFFC)) >> v3) & 1) != 0)
      return;
LABEL_5:
    v5 = v2[6];
    v6 = *(_QWORD *)(v4 + v5);
    v7 = (id)v6;
    *(_QWORD *)(v4 + v5) = 0;
    sub_1000FE5F8(v6);

    return;
  }
  v4 = *(_QWORD *)(a1 + 64);
  if (*(_DWORD *)(v4 + 4 * -(int)v3) != v2[4])
    goto LABEL_5;
}

uint64_t sub_10010893C(uint64_t a1, _QWORD *a2, void *a3)
{
  return sub_10010896C(a1, a2, a3);
}

uint64_t sub_10010896C(uint64_t a1, _QWORD *a2, void *a3)
{
  void *v3;
  uint64_t v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  void *v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = a3;
  v6 = a2[1];
  v7 = *(unsigned __int8 *)(v6 + 30);
  v8 = *(_WORD *)(v6 + 28);
  if ((v8 & 0xF02) != 0)
  {
    v9 = *(_QWORD *)(a1 + 64);
    v10 = *(unsigned int *)(v6 + 24);
    v11 = *(char **)(v9 + v10);
    *(_QWORD *)(v9 + v10) = a3;
    if (v11)
    {
      if (objc_msgSend(a2, "fieldType") == 1)
      {
        if ((v7 - 13) <= 3)
        {
          v13 = objc_opt_class(TransparencyGPBAutocreatedArray, v12);
          if ((objc_opt_isKindOfClass(v11, v13) & 1) != 0)
          {
            v14 = &OBJC_IVAR___TransparencyGPBAutocreatedArray__autocreator;
            goto LABEL_29;
          }
LABEL_31:

          return sub_1000FE2EC(a1);
        }
        v14 = &OBJC_IVAR___TransparencyGPBInt32Array__autocreator;
      }
      else if (objc_msgSend(a2, "mapKeyDataType") == 14 && (v7 - 13) <= 3)
      {
        v22 = objc_opt_class(TransparencyGPBAutocreatedDictionary, v21);
        if ((objc_opt_isKindOfClass(v11, v22) & 1) == 0)
          goto LABEL_31;
        v14 = &OBJC_IVAR___TransparencyGPBAutocreatedDictionary__autocreator;
      }
      else
      {
        v14 = &OBJC_IVAR___TransparencyGPBInt32Int32Dictionary__autocreator;
      }
LABEL_29:
      v26 = *v14;
      if (*(_QWORD *)&v11[v26] == a1)
        *(_QWORD *)&v11[v26] = 0;
      goto LABEL_31;
    }
  }
  else
  {
    v15 = (void *)a2[2];
    if (v15)
    {
      sub_100108760(a1, v15, *(_DWORD *)(v6 + 20), *(_DWORD *)(v6 + 16));
      v8 = *(_WORD *)(v6 + 28);
    }
    v16 = v3 != 0;
    if ((v8 & 0x20) != 0 && !objc_msgSend(v3, "length"))
    {

      v16 = 0;
      v3 = 0;
    }
    v17 = *(unsigned int *)(v6 + 20);
    v18 = *(_QWORD *)(a1 + 64);
    if ((v17 & 0x80000000) != 0)
    {
      v23 = *(_DWORD *)(v6 + 16);
      if (!v16)
        v23 = 0;
      *(_DWORD *)(v18 + 4 * -(int)v17) = v23;
    }
    else
    {
      v19 = v17 >> 5;
      v20 = 1 << v17;
      if (v16)
        *(_DWORD *)(v18 + 4 * v19) |= v20;
      else
        *(_DWORD *)(v18 + 4 * v19) &= ~v20;
    }
    v24 = *(_QWORD *)(a1 + 64);
    v25 = *(unsigned int *)(v6 + 24);
    v11 = *(char **)(v24 + v25);
    *(_QWORD *)(v24 + v25) = v3;
    if (v11)
    {
      if ((v7 - 15) <= 1 && sub_1000FE2DC((uint64_t)v11, a1))
        sub_1000FE5F8((uint64_t)v11);
      goto LABEL_31;
    }
  }
  return sub_1000FE2EC(a1);
}

uint64_t sub_100108B80(uint64_t a1, _QWORD *a2)
{
  id v3;

  v3 = sub_100108BDC(a1, a2);
  if ((*(_WORD *)(a2[1] + 28) & 0x1000) == 0)
  {
    if (objc_msgSend(a2, "isValidEnumValue:", v3))
      return v3;
    else
      return 4222467823;
  }
  return (uint64_t)v3;
}

id sub_100108BDC(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (_DWORD *)a2[1];
  v3 = v2[5];
  if ((v3 & 0x80000000) != 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (*(_DWORD *)(v4 + 4 * -(int)v3) == v2[4])
      return (id)*(unsigned int *)(v4 + v2[6]);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v4 + ((v3 >> 3) & 0x1FFFFFFC)) >> v3) & 1) != 0)
      return (id)*(unsigned int *)(v4 + v2[6]);
  }
  return objc_msgSend(a2, "defaultValue");
}

id sub_100108C64(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  if ((objc_msgSend(a2, "isValidEnumValue:") & 1) == 0)
    +[NSException raise:format:](NSException, "raise:format:", NSInvalidArgumentException, CFSTR("%@.%@: Attempt to set an unknown enum value (%d)"), objc_opt_class(a1, v6), objc_msgSend(a2, "name"), a3);
  return sub_100108CFC(a1, (uint64_t)a2, a3);
}

id sub_100108CFC(_QWORD *a1, uint64_t a2, int a3)
{
  void *v6;
  uint64_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6)
    sub_100108760((uint64_t)a1, v6, *(_DWORD *)(v7 + 20), *(_DWORD *)(v7 + 16));
  *(_DWORD *)(a1[8] + *(unsigned int *)(v7 + 24)) = a3;
  if (a3)
    v8 = 1;
  else
    v8 = (*(_WORD *)(v7 + 28) & 0x20) == 0;
  v9 = *(unsigned int *)(v7 + 20);
  v10 = a1[8];
  if ((v9 & 0x80000000) != 0)
  {
    if (v8)
      v13 = *(_DWORD *)(v7 + 16);
    else
      v13 = 0;
    *(_DWORD *)(v10 + 4 * -(int)v9) = v13;
  }
  else
  {
    v11 = v9 >> 5;
    v12 = 1 << v9;
    if (v8)
      *(_DWORD *)(v10 + 4 * v11) |= v12;
    else
      *(_DWORD *)(v10 + 4 * v11) &= ~v12;
  }
  return sub_1000FE2EC(a1);
}

BOOL sub_100108DE8(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (_DWORD *)a2[1];
  v3 = v2[4];
  v4 = v2[5];
  if ((v4 & 0x80000000) == 0)
  {
    v5 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v5 + ((v4 >> 3) & 0x1FFFFFFC)) >> v4) & 1) != 0)
      goto LABEL_3;
    return (unint64_t)objc_msgSend(a2, "defaultValue") & 1;
  }
  v5 = *(_QWORD *)(a1 + 64);
  if (*(_DWORD *)(v5 + 4 * -(int)v4) != v3)
    return (unint64_t)objc_msgSend(a2, "defaultValue") & 1;
LABEL_3:
  v6 = v2[6];
  if ((v6 & 0x80000000) != 0)
    return *(_DWORD *)(v5 + 4 * -(int)v6) == v3;
  else
    return (*(_DWORD *)(v5 + ((v6 >> 3) & 0x1FFFFFFC)) >> v6) & 1;
}

_QWORD *sub_100108E8C(_QWORD *a1, uint64_t a2, int a3)
{
  if (a1)
  {
    if (a2)
      return sub_100108E9C(a1, a2, a3);
  }
  return a1;
}

id sub_100108E9C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;

  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  if (v6)
    sub_100108760((uint64_t)a1, v6, *(_DWORD *)(v5 + 20), *(_DWORD *)(v5 + 16));
  v7 = *(unsigned int *)(v5 + 24);
  v8 = a1[8];
  if ((v7 & 0x80000000) != 0)
  {
    v11 = *(_DWORD *)(v5 + 16);
    if (!a3)
      v11 = 0;
    *(_DWORD *)(v8 + 4 * -(int)v7) = v11;
    if ((a3 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    v9 = v7 >> 5;
    v10 = 1 << v7;
    if (a3)
    {
      *(_DWORD *)(v8 + 4 * v9) |= v10;
LABEL_9:
      v12 = 1;
      goto LABEL_12;
    }
    *(_DWORD *)(v8 + 4 * v9) &= ~v10;
  }
  v12 = (*(_WORD *)(v5 + 28) & 0x20) == 0;
LABEL_12:
  v13 = *(unsigned int *)(v5 + 20);
  v14 = a1[8];
  if ((v13 & 0x80000000) != 0)
  {
    if (v12)
      v17 = *(_DWORD *)(v5 + 16);
    else
      v17 = 0;
    *(_DWORD *)(v14 + 4 * -(int)v13) = v17;
  }
  else
  {
    v15 = v13 >> 5;
    v16 = 1 << v13;
    if (v12)
      *(_DWORD *)(v14 + 4 * v15) |= v16;
    else
      *(_DWORD *)(v14 + 4 * v15) &= ~v16;
  }
  return sub_1000FE2EC(a1);
}

_QWORD *sub_100108FBC(_QWORD *a1, uint64_t a2, int a3)
{
  if (a1)
  {
    if (a2)
      return sub_100108CFC(a1, a2, a3);
  }
  return a1;
}

id sub_100108FCC(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (_DWORD *)a2[1];
  v3 = v2[5];
  if ((v3 & 0x80000000) != 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (*(_DWORD *)(v4 + 4 * -(int)v3) == v2[4])
      return *(id *)(v4 + v2[6]);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v4 + ((v3 >> 3) & 0x1FFFFFFC)) >> v3) & 1) != 0)
      return *(id *)(v4 + v2[6]);
  }
  return objc_msgSend(a2, "defaultValue");
}

_QWORD *sub_100109040(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    if (a2)
      return sub_100109050(a1, a2, a3);
  }
  return a1;
}

id sub_100109050(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6)
    sub_100108760((uint64_t)a1, v6, *(_DWORD *)(v7 + 20), *(_DWORD *)(v7 + 16));
  *(_QWORD *)(a1[8] + *(unsigned int *)(v7 + 24)) = a3;
  if (a3)
    v8 = 1;
  else
    v8 = (*(_WORD *)(v7 + 28) & 0x20) == 0;
  v9 = *(unsigned int *)(v7 + 20);
  v10 = a1[8];
  if ((v9 & 0x80000000) != 0)
  {
    if (v8)
      v13 = *(_DWORD *)(v7 + 16);
    else
      v13 = 0;
    *(_DWORD *)(v10 + 4 * -(int)v9) = v13;
  }
  else
  {
    v11 = v9 >> 5;
    v12 = 1 << v9;
    if (v8)
      *(_DWORD *)(v10 + 4 * v11) |= v12;
    else
      *(_DWORD *)(v10 + 4 * v11) &= ~v12;
  }
  return sub_1000FE2EC(a1);
}

float sub_100109134(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;
  float result;

  v2 = (_DWORD *)a2[1];
  v3 = v2[5];
  if ((v3 & 0x80000000) != 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (*(_DWORD *)(v4 + 4 * -(int)v3) == v2[4])
      return *(float *)(v4 + v2[6]);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v4 + ((v3 >> 3) & 0x1FFFFFFC)) >> v3) & 1) != 0)
      return *(float *)(v4 + v2[6]);
  }
  LODWORD(result) = objc_msgSend(a2, "defaultValue");
  return result;
}

_QWORD *sub_1001091BC(_QWORD *a1, uint64_t a2, float a3)
{
  if (a1)
  {
    if (a2)
      return sub_1001091CC(a1, a2, a3);
  }
  return a1;
}

id sub_1001091CC(_QWORD *a1, uint64_t a2, float a3)
{
  void *v6;
  uint64_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6)
    sub_100108760((uint64_t)a1, v6, *(_DWORD *)(v7 + 20), *(_DWORD *)(v7 + 16));
  *(float *)(a1[8] + *(unsigned int *)(v7 + 24)) = a3;
  v8 = a3 != 0.0 || (*(_WORD *)(v7 + 28) & 0x20) == 0;
  v9 = *(unsigned int *)(v7 + 20);
  v10 = a1[8];
  if ((v9 & 0x80000000) != 0)
  {
    if (v8)
      v13 = *(_DWORD *)(v7 + 16);
    else
      v13 = 0;
    *(_DWORD *)(v10 + 4 * -(int)v9) = v13;
  }
  else
  {
    v11 = v9 >> 5;
    v12 = 1 << v9;
    if (v8)
      *(_DWORD *)(v10 + 4 * v11) |= v12;
    else
      *(_DWORD *)(v10 + 4 * v11) &= ~v12;
  }
  return sub_1000FE2EC(a1);
}

double sub_1001092B4(uint64_t a1, _QWORD *a2)
{
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (_DWORD *)a2[1];
  v3 = v2[5];
  if ((v3 & 0x80000000) != 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (*(_DWORD *)(v4 + 4 * -(int)v3) == v2[4])
      return *(double *)(v4 + v2[6]);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (((*(_DWORD *)(v4 + ((v3 >> 3) & 0x1FFFFFFC)) >> v3) & 1) != 0)
      return *(double *)(v4 + v2[6]);
  }
  return COERCE_DOUBLE(objc_msgSend(a2, "defaultValue"));
}

_QWORD *sub_10010933C(_QWORD *a1, uint64_t a2, double a3)
{
  if (a1)
  {
    if (a2)
      return sub_10010934C(a1, a2, a3);
  }
  return a1;
}

id sub_10010934C(_QWORD *a1, uint64_t a2, double a3)
{
  void *v6;
  uint64_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6)
    sub_100108760((uint64_t)a1, v6, *(_DWORD *)(v7 + 20), *(_DWORD *)(v7 + 16));
  *(double *)(a1[8] + *(unsigned int *)(v7 + 24)) = a3;
  v8 = a3 != 0.0 || (*(_WORD *)(v7 + 28) & 0x20) == 0;
  v9 = *(unsigned int *)(v7 + 20);
  v10 = a1[8];
  if ((v9 & 0x80000000) != 0)
  {
    if (v8)
      v13 = *(_DWORD *)(v7 + 16);
    else
      v13 = 0;
    *(_DWORD *)(v10 + 4 * -(int)v9) = v13;
  }
  else
  {
    v11 = v9 >> 5;
    v12 = 1 << v9;
    if (v8)
      *(_DWORD *)(v10 + 4 * v11) |= v12;
    else
      *(_DWORD *)(v10 + 4 * v11) &= ~v12;
  }
  return sub_1000FE2EC(a1);
}

uint64_t sub_100109438(uint64_t result, _QWORD *a2, void *a3)
{
  if (result)
  {
    if (a2)
      return sub_10010896C(result, a2, objc_msgSend(a3, "copy"));
  }
  return result;
}

uint64_t sub_100109484(uint64_t result, _QWORD *a2, void *a3)
{
  if (result)
  {
    if (a2)
      return sub_10010896C(result, a2, a3);
  }
  return result;
}

char *sub_1001094C8(const char *a1, BOOL a2)
{
  Protocol *Protocol;

  Protocol = objc_getProtocol("TransparencyGPBMessageSignatureProtocol");
  return protocol_getMethodDescription(Protocol, a1, 0, a2).types;
}

__CFString *sub_100109508(void *a1, __CFString *a2)
{
  __CFString *v2;
  __CFString *v4;

  v2 = &stru_1002508B8;
  if (a1)
  {
    if (a2)
      v4 = a2;
    else
      v4 = &stru_1002508B8;
    v2 = (__CFString *)+[NSMutableString string](NSMutableString, "string");
    sub_100109564(a1, v2, v4);
  }
  return v2;
}

id sub_100109564(void *a1, void *a2, __CFString *a3)
{
  _QWORD *v6;
  char *v7;
  _QWORD *v8;
  unsigned int v9;
  id v10;
  BOOL v11;
  void *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  char *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  NSString *v27;
  const __CFString *v28;
  unsigned int v29;
  int v30;
  NSString *v31;
  NSString *v32;
  NSString *v33;
  const char *v34;
  NSString *v35;
  uint64_t v36;
  int v37;
  const char *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  unsigned int v44;
  float v45;
  double v46;
  _QWORD *v47;
  _QWORD *v48;
  id v49;
  void *v50;
  _QWORD *v51;
  const __CFString *v52;
  id v53;
  id v54;
  __CFString *v55;
  id result;
  uint64_t v57;
  NSString *v58;
  __CFString *v59;
  id v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  _QWORD *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  id (*v71)(uint64_t, void *, void *);
  void *v72;
  void *v73;
  NSString *v74;
  NSString *v75;
  NSString *v76;
  NSString *v77;
  __CFString *v78;
  NSString *v79;
  NSString *v80;
  _QWORD *v81;
  char v82;
  char v83;
  _QWORD v84[3];
  char v85;

  v6 = objc_msgSend(a1, "descriptor");
  v66 = (void *)v6[1];
  v7 = (char *)objc_msgSend(v66, "count");
  v8 = objc_msgSend(v6, "extensionRanges");
  v9 = objc_msgSend(v6, "extensionRangesCount");
  v68 = a1;
  v10 = objc_msgSend(objc_msgSend(a1, "extensionsCurrentlySet"), "sortedArrayUsingSelector:", "compareByFieldNumber:");
  if (v7)
    v11 = 0;
  else
    v11 = v9 == 0;
  if (!v11)
  {
    v12 = v10;
    v13 = 0;
    v14 = 0;
    v15 = v9;
    v60 = v10;
    v61 = v8;
    v62 = v7;
    v64 = v9;
    v59 = a3;
    do
    {
      if (v14 == v7)
      {
        sub_10010A734(v68, v12, v8[v13], a2, a3);
        v14 = v7;
        ++v13;
        continue;
      }
      if (v13 != v15)
      {
        v16 = objc_msgSend(v66, "objectAtIndexedSubscript:", v14);
        v17 = &v8[v13];
        if (*(_DWORD *)(v16[1] + 16) >= *(_DWORD *)v17)
        {
          ++v13;
          sub_10010A734(v68, v12, *v17, a2, a3);
          continue;
        }
      }
      v18 = v14 + 1;
      v67 = objc_msgSend(v66, "objectAtIndexedSubscript:", v14);
      v19 = objc_msgSend(v67, "fieldType");
      v20 = v19;
      if (v19 == 2 || v19 == 1)
      {
        v65 = v13;
        v24 = v68[8];
        if (v24)
          v25 = *(void **)(v24 + *(unsigned int *)(v67[1] + 24));
        else
          v25 = 0;
        v26 = (unint64_t)objc_msgSend(v25, "count");
        if (v26)
          goto LABEL_21;
      }
      else
      {
        if (v19)
        {
          ++v14;
          v15 = v64;
          continue;
        }
        v21 = v67[1];
        v22 = *(unsigned int *)(v21 + 20);
        v65 = v13;
        if ((v22 & 0x80000000) != 0)
          v23 = *(_DWORD *)(v68[8] + 4 * -(int)v22) == *(_DWORD *)(v21 + 16);
        else
          v23 = (*(_DWORD *)(v68[8] + ((v22 >> 3) & 0x1FFFFFFC)) >> v22) & 1;
        v25 = 0;
        v26 = v23;
        if (v23)
        {
LABEL_21:
          v27 = (NSString *)objc_msgSend(v67, "textFormatName");
          if (-[NSString length](v27, "length"))
          {
            v28 = &stru_1002508B8;
          }
          else
          {
            v27 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), *(unsigned int *)(v67[1] + 16));
            if (v26 < 2)
            {
              v28 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("  # %@"), objc_msgSend(v67, "name"));
            }
            else
            {
              objc_msgSend(a2, "appendFormat:", CFSTR("%@# %@\n"), a3, objc_msgSend(v67, "name"));
              v28 = &stru_1002508B8;
            }
          }
          v63 = v18;
          if (v20 == 2)
          {
            v29 = objc_msgSend(v67, "mapKeyDataType");
            v30 = *(unsigned __int8 *)(v67[1] + 30);
            v58 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@ {%@\n"), a3, v27, v28);
            v31 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@ {\n"), a3, v27);
            v32 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@}\n"), a3);
            v33 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@  key: "), a3);
            v34 = ":";
            if ((v30 - 15) < 2)
              v34 = "";
            v35 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@  value%s "), a3, v34);
            v84[0] = 0;
            v84[1] = v84;
            v84[2] = 0x2020000000;
            v85 = 1;
            if (v29 == 14 && (v30 - 13) <= 3)
            {
              v69 = _NSConcreteStackBlock;
              v70 = 3221225472;
              v71 = sub_10010ACAC;
              v72 = &unk_100245918;
              v73 = a2;
              v74 = v58;
              v75 = v31;
              v76 = v33;
              LOBYTE(v81) = v30;
              v77 = v35;
              v78 = a3;
              v79 = v32;
              v80 = (NSString *)v84;
              objc_msgSend(v25, "enumerateKeysAndObjectsUsingBlock:", &v69);
              v14 = v18;
            }
            else
            {
              v69 = _NSConcreteStackBlock;
              v70 = 3221225472;
              v71 = sub_10010ADE4;
              v72 = &unk_100245940;
              v80 = v32;
              v81 = v84;
              v73 = a2;
              v74 = v58;
              v82 = v29;
              v75 = v31;
              v76 = v33;
              v83 = v30;
              v77 = v35;
              v78 = a3;
              v79 = (NSString *)v67;
              objc_msgSend(v25, "enumerateForTextFormat:", &v69);
              v14 = v18;
            }
            _Block_object_dispose(v84, 8);
            v8 = v61;
            v7 = v62;
            v12 = v60;
            v15 = v64;
            v13 = v65;
            continue;
          }
          v36 = 0;
          v37 = *(unsigned __int8 *)(v67[1] + 30);
          if ((v37 - 15) >= 2)
            v38 = ":";
          else
            v38 = "";
          do
          {
            objc_msgSend(a2, "appendFormat:", CFSTR("%@%@%s "), a3, v27, v38);
            switch(v37)
            {
              case 0:
                if (v25)
                  v44 = objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v44 = sub_100108DE8((uint64_t)v68, v67);
                if (v44)
                  v52 = CFSTR("true");
                else
                  v52 = CFSTR("false");
                objc_msgSend(a2, "appendString:", v52);
                break;
              case 1:
              case 11:
                if (v25)
                  v41 = objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v41 = sub_100108BDC((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%u"), v41, v57);
                break;
              case 2:
              case 7:
              case 9:
                if (v25)
                  v39 = objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v39 = sub_100108BDC((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%d"), v39, v57);
                break;
              case 3:
                if (v25)
                  objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v45 = sub_100109134((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%.*g"), 6, v45);
                break;
              case 4:
              case 12:
                if (v25)
                  v42 = objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v42 = sub_100108FCC((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%llu"), v42, v57);
                break;
              case 5:
              case 8:
              case 10:
                if (v25)
                  v40 = objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v40 = sub_100108FCC((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%lld"), v40, v57);
                break;
              case 6:
                if (v25)
                  objc_msgSend(v25, "valueAtIndex:", v36);
                else
                  v46 = sub_1001092B4((uint64_t)v68, v67);
                objc_msgSend(a2, "appendFormat:", CFSTR("%.*lg"), 15, *(_QWORD *)&v46);
                break;
              case 13:
                if (v25)
                  v47 = objc_msgSend(v25, "objectAtIndex:", v36);
                else
                  v47 = sub_1000FF510((uint64_t)v68, v67);
                sub_10010A240(v47, a2);
                break;
              case 14:
                if (v25)
                  v48 = objc_msgSend(v25, "objectAtIndex:", v36);
                else
                  v48 = sub_1000FF510((uint64_t)v68, v67);
                sub_10010AB28(v48, a2);
                break;
              case 15:
              case 16:
                if (v25)
                  v43 = objc_msgSend(v25, "objectAtIndex:", v36);
                else
                  v43 = sub_1000FF510((uint64_t)v68, v67);
                v51 = v43;
                objc_msgSend(a2, "appendFormat:", CFSTR("{%@\n"), v28);
                sub_100109564(v51, a2, -[__CFString stringByAppendingString:](a3, "stringByAppendingString:", CFSTR("  ")));
                objc_msgSend(a2, "appendFormat:", CFSTR("%@}"), a3);
                v28 = &stru_1002508B8;
                break;
              case 17:
                if (v25)
                {
                  v49 = objc_msgSend(v25, "rawValueAtIndex:", v36);
                  v50 = v67;
                }
                else
                {
                  v50 = v67;
                  v49 = sub_100108BDC((uint64_t)v68, v67);
                }
                v53 = objc_msgSend(v50, "enumDescriptor");
                if (v53 && (v54 = objc_msgSend(v53, "textFormatNameForValue:", v49)) != 0)
                  objc_msgSend(a2, "appendString:", v54);
                else
                  objc_msgSend(a2, "appendFormat:", CFSTR("%d"), v49);
                a3 = v59;
                break;
              default:
                break;
            }
            objc_msgSend(a2, "appendFormat:", CFSTR("%@\n"), v28);
            ++v36;
          }
          while (v26 != v36);
          v7 = v62;
          v14 = v63;
          v12 = v60;
          v8 = v61;
          goto LABEL_92;
        }
      }
      v14 = v18;
LABEL_92:
      v15 = v64;
      v13 = v65;
    }
    while (v14 < v7 || v13 < v15);
  }
  v55 = sub_100109E18(objc_msgSend(v68, "unknownFields"), a3);
  result = -[__CFString length](v55, "length");
  if (result)
  {
    objc_msgSend(a2, "appendFormat:", CFSTR("%@# --- Unknown fields ---\n"), a3);
    return objc_msgSend(a2, "appendString:", v55);
  }
  return result;
}

void sub_100109DFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

__CFString *sub_100109E18(void *a1, const __CFString *a2)
{
  __CFString *v2;
  __CFString *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *j;
  uint64_t v22;
  id obj;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[6];
  int v38;
  _QWORD v39[6];
  int v40;
  _QWORD v41[6];
  int v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];

  v2 = &stru_1002508B8;
  if (a1)
  {
    v4 = a2 ? (__CFString *)a2 : &stru_1002508B8;
    v2 = (__CFString *)+[NSMutableString string](NSMutableString, "string");
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    obj = objc_msgSend(a1, "sortedFields");
    v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v49, 16);
    if (v26)
    {
      v25 = *(_QWORD *)v44;
      do
      {
        v5 = 0;
        do
        {
          if (*(_QWORD *)v44 != v25)
            objc_enumerationMutation(obj);
          v28 = v5;
          v6 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * v5);
          v7 = objc_msgSend(v6, "number");
          v8 = objc_msgSend(v6, "varintList");
          v41[0] = _NSConcreteStackBlock;
          v41[1] = 3221225472;
          v41[2] = sub_10010A198;
          v41[3] = &unk_1002458C8;
          v41[4] = v2;
          v41[5] = v4;
          v42 = (int)v7;
          objc_msgSend(v8, "enumerateValuesWithBlock:", v41);
          v9 = objc_msgSend(v6, "fixed32List");
          v39[0] = _NSConcreteStackBlock;
          v39[1] = 3221225472;
          v39[2] = sub_10010A1D0;
          v39[3] = &unk_1002458F0;
          v39[4] = v2;
          v39[5] = v4;
          v40 = (int)v7;
          objc_msgSend(v9, "enumerateValuesWithBlock:", v39);
          v10 = objc_msgSend(v6, "fixed64List");
          v37[0] = _NSConcreteStackBlock;
          v37[1] = 3221225472;
          v37[2] = sub_10010A208;
          v37[3] = &unk_1002458C8;
          v37[4] = v2;
          v37[5] = v4;
          v38 = (int)v7;
          objc_msgSend(v10, "enumerateValuesWithBlock:", v37);
          v35 = 0u;
          v36 = 0u;
          v33 = 0u;
          v34 = 0u;
          v27 = v6;
          v11 = objc_msgSend(v6, "lengthDelimitedList");
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v33, v48, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v34;
            do
            {
              for (i = 0; i != v13; i = (char *)i + 1)
              {
                if (*(_QWORD *)v34 != v14)
                  objc_enumerationMutation(v11);
                v16 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)i);
                -[__CFString appendFormat:](v2, "appendFormat:", CFSTR("%@%d: "), v4, v7);
                sub_10010A240(v16, v2);
                -[__CFString appendString:](v2, "appendString:", CFSTR("\n"));
              }
              v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v33, v48, 16);
            }
            while (v13);
          }
          v31 = 0u;
          v32 = 0u;
          v29 = 0u;
          v30 = 0u;
          v17 = objc_msgSend(v27, "groupList");
          v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v47, 16);
          if (v18)
          {
            v19 = v18;
            v20 = *(_QWORD *)v30;
            do
            {
              for (j = 0; j != v19; j = (char *)j + 1)
              {
                if (*(_QWORD *)v30 != v20)
                  objc_enumerationMutation(v17);
                v22 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)j);
                -[__CFString appendFormat:](v2, "appendFormat:", CFSTR("%@%d: {\n"), v4, v7);
                -[__CFString appendString:](v2, "appendString:", sub_100109E18(v22, -[__CFString stringByAppendingString:](v4, "stringByAppendingString:", CFSTR("  "))));
                -[__CFString appendFormat:](v2, "appendFormat:", CFSTR("%@}\n"), v4);
              }
              v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v47, 16);
            }
            while (v19);
          }
          v5 = v28 + 1;
        }
        while ((id)(v28 + 1) != v26);
        v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v49, 16);
      }
      while (v26);
    }
  }
  return v2;
}

id sub_10010A198(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@%d: %llu\n"), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), a2);
}

id sub_10010A1D0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@%d: 0x%X\n"), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), a2);
}

id sub_10010A208(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@%d: 0x%llX\n"), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), a2);
}

id sub_10010A240(void *a1, void *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  const __CFString *v9;

  v4 = (char *)objc_msgSend(a1, "bytes");
  v5 = (uint64_t)objc_msgSend(a1, "length");
  objc_msgSend(a2, "appendString:", CFSTR("\""));
  if (v5 >= 1)
  {
    v6 = &v4[v5];
    do
    {
      v7 = *v4;
      if ((int)v7 > 33)
      {
        switch((_DWORD)v7)
        {
          case '"':
            v8 = a2;
            v9 = CFSTR("\\\"");
            goto LABEL_16;
          case '\'':
            v8 = a2;
            v9 = CFSTR("\\'");
            goto LABEL_16;
          case '\\':
            v8 = a2;
            v9 = CFSTR("\\\\");
            goto LABEL_16;
        }
      }
      else
      {
        switch((_DWORD)v7)
        {
          case 9:
            v8 = a2;
            v9 = CFSTR("\\t");
            goto LABEL_16;
          case 0xA:
            v8 = a2;
            v9 = CFSTR("\\n");
            goto LABEL_16;
          case 0xD:
            v8 = a2;
            v9 = CFSTR("\\r");
LABEL_16:
            objc_msgSend(v8, "appendString:", v9);
            goto LABEL_17;
        }
      }
      if ((v7 & 0x80000000) != 0)
      {
        if (!__maskrune(*v4, 0x40000uLL))
        {
LABEL_23:
          objc_msgSend(a2, "appendFormat:", CFSTR("\\%03o"), v7);
          goto LABEL_17;
        }
      }
      else if ((_DefaultRuneLocale.__runetype[v7] & 0x40000) == 0)
      {
        goto LABEL_23;
      }
      objc_msgSend(a2, "appendFormat:", CFSTR("%c"), v7);
LABEL_17:
      ++v4;
    }
    while (v4 < v6);
  }
  return objc_msgSend(a2, "appendString:", CFSTR("\""));
}

NSString *sub_10010A3E4(char *a1, int a2, void *a3)
{
  NSMutableString *v3;
  int v6;
  int v7;
  int v8;
  char *v9;
  char *v10;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int v22;
  char *v23;

  v3 = 0;
  if (a1 && a3)
  {
    v23 = a1;
    v6 = sub_10010A5C4(&v23);
    if (v6 < 1)
    {
      return 0;
    }
    else
    {
      v7 = v6;
      while (1)
      {
        v8 = sub_10010A5C4(&v23);
        v9 = v23;
        if (v8 == a2)
          break;
        v10 = v23 + 1;
        while (*v10++)
          ;
        v23 = v10;
        if (v7-- < 2)
          return 0;
      }
      if (*v23)
      {
        v3 = +[NSMutableString stringWithCapacity:](NSMutableString, "stringWithCapacity:", objc_msgSend(a3, "length"));
        v14 = *v9;
        if (*v9)
        {
          v15 = 0;
          while (1)
          {
            if (v14 < 0)
            {
              -[NSMutableString appendString:](v3, "appendString:", CFSTR("_"));
              v14 = *v9;
            }
            v16 = v14 & 0x1F;
            v17 = v14 & 0x60;
            if (v17 == 32)
              break;
            if (v17 == 64)
            {
              v18 = __toupper((char)objc_msgSend(a3, "characterAtIndex:", v15));
LABEL_21:
              -[NSMutableString appendFormat:](v3, "appendFormat:", CFSTR("%c"), v18);
              ++v15;
              --v16;
            }
            if (v16 >= 1)
            {
              v19 = v16;
              v20 = v15;
              do
              {
                v21 = objc_msgSend(a3, "characterAtIndex:", v20);
                if (v17 == 96)
                  -[NSMutableString appendFormat:](v3, "appendFormat:", CFSTR("%c"), __toupper((char)v21));
                else
                  -[NSMutableString appendFormat:](v3, "appendFormat:", CFSTR("%C"), v21);
                ++v20;
                --v19;
              }
              while (v19);
            }
            v15 += v16;
            v22 = *++v9;
            v14 = v22;
            if (!v22)
              return (NSString *)v3;
          }
          v18 = __tolower((char)objc_msgSend(a3, "characterAtIndex:", v15));
          goto LABEL_21;
        }
      }
      else
      {
        return +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v23 + 1);
      }
    }
  }
  return (NSString *)v3;
}

uint64_t sub_10010A5C4(char **a1)
{
  char *v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v9;
  uint64_t v10;
  int v11;

  v1 = *a1;
  v2 = *(*a1)++;
  if ((v2 & 0x80000000) != 0)
  {
    v3 = v2 & 0x7F;
    v4 = v1[1];
    *a1 = v1 + 2;
    v5 = v4 << 7;
    if ((v4 & 0x80000000) == 0)
      return v5 | v3;
    v3 |= v5 & 0x3F80;
    v6 = v1[2];
    *a1 = v1 + 3;
    v5 = v6 << 14;
    if ((v6 & 0x80000000) == 0)
      return v5 | v3;
    v3 |= v5 & 0x1FC000;
    v7 = v1[3];
    *a1 = v1 + 4;
    v5 = v7 << 21;
    if (v7 < 0)
    {
      v9 = v1[4];
      *a1 = v1 + 5;
      v2 = v5 & 0xFE00000 | (v9 << 28) | v3;
      if (v9 < 0)
      {
        v10 = 0;
        while (1)
        {
          v11 = v1[v10 + 5];
          *a1 = &v1[v10 + 6];
          if ((v11 & 0x80000000) == 0)
            break;
          if ((_DWORD)++v10 == 5)
          {
            +[NSException raise:format:](NSException, "raise:format:", NSParseErrorException, CFSTR("Unable to read varint32"));
            return v2;
          }
        }
      }
    }
    else
    {
      return v5 | v3;
    }
  }
  return v2;
}

void sub_10010A6AC(uint64_t a1, void *a2, unsigned int a3)
{
  sub_100108760(a1, a2, a3, 0);
}

BOOL sub_10010A6B4(objc_class *a1, const char *a2)
{
  Method *v3;
  unint64_t i;
  SEL Name;
  _BOOL8 v6;
  unsigned int outCount;

  outCount = 0;
  v3 = class_copyMethodList(a1, &outCount);
  if (outCount)
  {
    for (i = 0; i < outCount; ++i)
    {
      Name = method_getName(v3[i]);
      v6 = Name == a2;
      if (Name == a2)
        break;
    }
  }
  else
  {
    v6 = 0;
  }
  free(v3);
  return v6;
}

id sub_10010A734(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id result;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  unsigned int v15;
  const __CFString *v16;
  uint64_t v17;
  const char *v18;
  id v19;
  id v20;
  float v21;
  const __CFString *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  id v28;
  uint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];

  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
  v28 = result;
  if (result)
  {
    v27 = *(_QWORD *)v33;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v33 != v27)
          objc_enumerationMutation(a2);
        v30 = v7;
        v8 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * v7);
        result = objc_msgSend(v8, "fieldNumber");
        if (result >= a3)
        {
          v9 = result;
          if (result >= HIDWORD(a3))
            return result;
          v10 = objc_msgSend(a1, "getExtension:", v8);
          v11 = objc_msgSend(v8, "isRepeated");
          if ((v11 & 1) != 0)
          {
            v12 = (uint64_t)objc_msgSend(v10, "count");
            v13 = objc_msgSend(v8, "singletonName");
            if (v12 != 1)
            {
              objc_msgSend(a4, "appendFormat:", CFSTR("%@# [%@]\n"), a5, v13);
              v14 = objc_msgSend(v8, "dataType");
              if (!v12)
                goto LABEL_7;
              v15 = v14;
              v16 = &stru_1002508B8;
              goto LABEL_16;
            }
          }
          else
          {
            v13 = objc_msgSend(v8, "singletonName");
          }
          v16 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("  # [%@]"), v13);
          v15 = objc_msgSend(v8, "dataType");
          v12 = 1;
LABEL_16:
          v17 = 0;
          if (v15 - 15 >= 2)
            v18 = ":";
          else
            v18 = "";
          do
          {
            v19 = v10;
            if (v11)
              v19 = objc_msgSend(v10, "objectAtIndex:", v17);
            objc_msgSend(a4, "appendFormat:", CFSTR("%@%u%s "), a5, v9, v18);
            switch(v15)
            {
              case 0u:
                if (objc_msgSend(v19, "BOOLValue"))
                  v22 = CFSTR("true");
                else
                  v22 = CFSTR("false");
                objc_msgSend(a4, "appendString:", v22);
                break;
              case 1u:
              case 0xBu:
                objc_msgSend(a4, "appendFormat:", CFSTR("%u"), objc_msgSend(v19, "unsignedIntValue"), v24);
                break;
              case 2u:
                v20 = objc_msgSend(v19, "unsignedIntValue");
                goto LABEL_34;
              case 3u:
                objc_msgSend(v19, "floatValue");
                objc_msgSend(a4, "appendFormat:", CFSTR("%.*g"), 6, v21);
                break;
              case 4u:
              case 0xCu:
                objc_msgSend(a4, "appendFormat:", CFSTR("%llu"), objc_msgSend(v19, "unsignedLongLongValue"), v24);
                break;
              case 5u:
              case 8u:
              case 0xAu:
                objc_msgSend(a4, "appendFormat:", CFSTR("%lld"), objc_msgSend(v19, "longLongValue"), v24);
                break;
              case 6u:
                objc_msgSend(v19, "doubleValue");
                objc_msgSend(a4, "appendFormat:", CFSTR("%.*lg"), 15, v23);
                break;
              case 7u:
              case 9u:
              case 0x11u:
                v20 = objc_msgSend(v19, "intValue");
LABEL_34:
                objc_msgSend(a4, "appendFormat:", CFSTR("%d"), v20, v24);
                break;
              case 0xDu:
                sub_10010A240(v19, a4);
                break;
              case 0xEu:
                sub_10010AB28(v19, a4);
                break;
              case 0xFu:
              case 0x10u:
                objc_msgSend(a4, "appendFormat:", CFSTR("{%@\n"), v16);
                sub_100109564(v19, a4, objc_msgSend(a5, "stringByAppendingString:", CFSTR("  ")));
                objc_msgSend(a4, "appendFormat:", CFSTR("%@}"), a5);
                v16 = &stru_1002508B8;
                break;
              default:
                break;
            }
            objc_msgSend(a4, "appendFormat:", CFSTR("%@\n"), v16);
            ++v17;
          }
          while (v12 != v17);
        }
LABEL_7:
        v7 = v30 + 1;
      }
      while ((id)(v30 + 1) != v28);
      result = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
      v28 = result;
    }
    while (result);
  }
  return result;
}

id sub_10010AB28(void *a1, void *a2)
{
  char *v4;
  char *v5;
  char *i;
  id v7;
  void *v8;
  const __CFString *v9;
  uint64_t v11;
  uint64_t v12;

  objc_msgSend(a2, "appendString:", CFSTR("\""));
  v4 = (char *)objc_msgSend(a1, "length");
  if (v4)
  {
    v5 = v4;
    for (i = 0; v5 != i; ++i)
    {
      v7 = objc_msgSend(a1, "characterAtIndex:", i);
      if ((int)v7 > 33)
      {
        switch((_DWORD)v7)
        {
          case '"':
            v8 = a2;
            v9 = CFSTR("\\\"");
            break;
          case '\'':
            v8 = a2;
            v9 = CFSTR("\\'");
            break;
          case '\\':
            v8 = a2;
            v9 = CFSTR("\\\\");
            break;
          default:
LABEL_19:
            if (v7 > 0x1F)
              objc_msgSend(a2, "appendFormat:", CFSTR("%C"), v7, v11, v12);
            else
              objc_msgSend(a2, "appendFormat:", CFSTR("\\%d%d%d"), 0, v7 >> 3, v7 & 7);
            continue;
        }
      }
      else
      {
        switch((_DWORD)v7)
        {
          case 9:
            v8 = a2;
            v9 = CFSTR("\\t");
            break;
          case 0xA:
            v8 = a2;
            v9 = CFSTR("\\n");
            break;
          case 0xD:
            v8 = a2;
            v9 = CFSTR("\\r");
            break;
          default:
            goto LABEL_19;
        }
      }
      objc_msgSend(v8, "appendString:", v9);
    }
  }
  return objc_msgSend(a2, "appendString:", CFSTR("\""));
}

id sub_10010ACAC(uint64_t a1, void *a2, void *a3)
{
  void *v6;
  uint64_t v7;
  int v8;

  v6 = *(void **)(a1 + 32);
  v7 = 40;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24))
    v7 = 48;
  objc_msgSend(v6, "appendString:", *(_QWORD *)(a1 + v7));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 0;
  objc_msgSend(*(id *)(a1 + 32), "appendString:", *(_QWORD *)(a1 + 56));
  sub_10010AB28(a2, *(void **)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\n"));
  objc_msgSend(*(id *)(a1 + 32), "appendString:", *(_QWORD *)(a1 + 64));
  v8 = *(unsigned __int8 *)(a1 + 96);
  switch(v8)
  {
    case 13:
      sub_10010A240(a3, *(void **)(a1 + 32));
      break;
    case 15:
      objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("{\n"));
      sub_100109564(a3, *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 72), "stringByAppendingString:", CFSTR("    ")));
      objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@  }"), *(_QWORD *)(a1 + 72));
      break;
    case 14:
      sub_10010AB28(a3, *(void **)(a1 + 32));
      break;
  }
  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\n"));
  return objc_msgSend(*(id *)(a1 + 32), "appendString:", *(_QWORD *)(a1 + 80));
}

id sub_10010ADE4(uint64_t a1, void *a2, void *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v6 = *(void **)(a1 + 32);
  v7 = 40;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24))
    v7 = 48;
  objc_msgSend(v6, "appendString:", *(_QWORD *)(a1 + v7));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24) = 0;
  v8 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 104) == 14)
  {
    objc_msgSend(v8, "appendString:", *(_QWORD *)(a1 + 56));
    sub_10010AB28(a2, *(void **)(a1 + 32));
    objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\n"));
  }
  else
  {
    objc_msgSend(v8, "appendFormat:", CFSTR("%@%@\n"), *(_QWORD *)(a1 + 56), a2);
  }
  objc_msgSend(*(id *)(a1 + 32), "appendString:", *(_QWORD *)(a1 + 64));
  switch(*(_BYTE *)(a1 + 105))
  {
    case 0xD:
      sub_10010A240(a3, *(void **)(a1 + 32));
      break;
    case 0xE:
      sub_10010AB28(a3, *(void **)(a1 + 32));
      break;
    case 0xF:
      objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("{\n"));
      sub_100109564(a3, *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 72), "stringByAppendingString:", CFSTR("    ")));
      objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@  }"), *(_QWORD *)(a1 + 72));
      break;
    case 0x11:
      v11 = objc_msgSend(a3, "intValue");
      v12 = objc_msgSend(*(id *)(a1 + 80), "enumDescriptor");
      if (v12)
      {
        v13 = objc_msgSend(v12, "textFormatNameForValue:", v11);
        if (v13)
        {
          v10 = v13;
          v9 = *(void **)(a1 + 32);
          goto LABEL_14;
        }
      }
      objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%d"), v11);
      break;
    default:
      v9 = *(void **)(a1 + 32);
      v10 = a3;
LABEL_14:
      objc_msgSend(v9, "appendString:", v10);
      break;
  }
  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\n"));
  return objc_msgSend(*(id *)(a1 + 32), "appendString:", *(_QWORD *)(a1 + 88));
}

uint64_t sub_10010B59C(int a1, int a2)
{
  return a2 | (8 * a1);
}

uint64_t sub_10010B5A4(char a1)
{
  return a1 & 7;
}

uint64_t sub_10010B5AC(unsigned int a1)
{
  return a1 >> 3;
}

BOOL sub_10010B5B4(int a1)
{
  return (~a1 & 6) != 0;
}

uint64_t sub_10010B5C4(int a1, char a2)
{
  if ((a2 & 1) != 0)
    return 2;
  else
    return dword_100216D70[a1];
}

id sub_10010BA98(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBApi descriptor](TransparencyGPBApi, "descriptor"), "fieldWithNumber:", 7));
}

id sub_10010BAD0(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBApi descriptor](TransparencyGPBApi, "descriptor"), "fieldWithNumber:", 7), a2);
}

id sub_10010BB90(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TransparencyGPBMethod descriptor](TransparencyGPBMethod, "descriptor"), "fieldWithNumber:", 7));
}

id sub_10010BBC8(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TransparencyGPBMethod descriptor](TransparencyGPBMethod, "descriptor"), "fieldWithNumber:", 7), a2);
}

void sub_10010BF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10010BF34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7488;
  qword_1002A7488 = (uint64_t)v1;

}

void sub_10010BF64(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint32_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint8_t v16[24];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "logger"));
  objc_msgSend(v6, "logResultForEvent:hardFailure:result:", CFSTR("ForceSyncKVS"), 1, v3);

  if (v3)
  {
    if (qword_1002A7480 != -1)
      dispatch_once(&qword_1002A7480, &stru_100245988);
    v7 = qword_1002A7488;
    if (os_log_type_enabled((os_log_t)qword_1002A7488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v16 = 138412290;
      *(_QWORD *)&v16[4] = v3;
      v8 = "ForceSyncKVS failed with error: %@";
      v9 = v7;
      v10 = OS_LOG_TYPE_ERROR;
      v11 = 12;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, v16, v11);
    }
  }
  else
  {
    if (qword_1002A7480 != -1)
      dispatch_once(&qword_1002A7480, &stru_1002459A8);
    v12 = qword_1002A7488;
    if (os_log_type_enabled((os_log_t)qword_1002A7488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v16 = 0;
      v8 = "ForceSyncKVS success";
      v9 = v12;
      v10 = OS_LOG_TYPE_DEBUG;
      v11 = 2;
      goto LABEL_10;
    }
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState", *(_OWORD *)v16));
  objc_msgSend(WeakRetained, "setNextState:", v13);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
  objc_msgSend(v14, "addOperation:", v15);

}

void sub_10010C134(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7488;
  qword_1002A7488 = (uint64_t)v1;

}

void sub_10010C164(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7488;
  qword_1002A7488 = (uint64_t)v1;

}

__CFString *sub_10010C280(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __CFString *v6;

  if (!a1)
  {
    v6 = CFSTR("none");
    return v6;
  }
  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v3 = v2;
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0)
      goto LABEL_4;
LABEL_10:
    objc_msgSend(v3, "addObject:", CFSTR("network"));
    v1 &= ~2uLL;
    if (!v1)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(v2, "addObject:", CFSTR("unlock"));
  v1 &= ~1uLL;
  if ((v1 & 2) != 0)
    goto LABEL_10;
LABEL_4:
  if (v1)
  {
LABEL_5:
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Unknown conditions: 0x%x"), v1));
    objc_msgSend(v3, "addObject:", v4);

  }
LABEL_6:
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allObjects"));
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "componentsJoinedByString:", CFSTR(",")));

  return v6;
}

void sub_10010D640(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D670(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D6A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D6D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D700(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D730(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D760(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D790(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010D7C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010DA7C(_QWORD *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unsigned __int8 v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  id v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  id v30;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (!v8)
  {
    (*(void (**)(void))(a1[7] + 16))();
    goto LABEL_17;
  }
  v10 = (void *)a1[4];
  v22 = 0;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "createTransparentDataFromQueryInfo:error:", v8, &v22));
  v12 = v22;
  v13 = v12;
  if (!v11)
  {
    if (qword_1002A7490 != -1)
      dispatch_once(&qword_1002A7490, &stru_100245B10);
    v17 = qword_1002A7498;
    if (os_log_type_enabled((os_log_t)qword_1002A7498, OS_LOG_TYPE_ERROR))
    {
      v18 = a1[5];
      *(_DWORD *)buf = 141558786;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v7;
      v27 = 2114;
      v28 = v18;
      v29 = 2112;
      v30 = v13;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "Failed to build transparentData for %{mask.hash}@ fetchId %{public}@: %@", buf, 0x2Au);
    }
    (*(void (**)(void))(a1[7] + 16))();
    goto LABEL_16;
  }
  v14 = a1[6];
  v21 = v12;
  v15 = objc_msgSend(v11, "verifyServerInvariantsAt:error:", v14, &v21);
  v16 = v21;

  if ((v15 & 1) == 0)
  {
    if (qword_1002A7490 != -1)
      dispatch_once(&qword_1002A7490, &stru_100245B30);
    v19 = qword_1002A7498;
    if (os_log_type_enabled((os_log_t)qword_1002A7498, OS_LOG_TYPE_ERROR))
    {
      v20 = a1[5];
      *(_DWORD *)buf = 141558786;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v7;
      v27 = 2114;
      v28 = v20;
      v29 = 2112;
      v30 = v16;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed server invariant verification for %{mask.hash}@ fetchId %{public}@: %@", buf, 0x2Au);
    }
    (*(void (**)(void))(a1[7] + 16))();
    v13 = v16;
LABEL_16:

    goto LABEL_17;
  }
  (*(void (**)(void))(a1[7] + 16))();

LABEL_17:
}

void sub_10010DD3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010DD6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7498;
  qword_1002A7498 = (uint64_t)v1;

}

void sub_10010E070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10010E094(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10010E0A4(uint64_t a1)
{

}

void sub_10010E0AC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  int v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id obj;
  void *v40;
  uint8_t buf[4];
  uint64_t v42;
  __int16 v43;
  int v44;
  void *v45;
  uint64_t v46;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 1, 1));
    objc_msgSend(v5, "setPredicate:", v6);

    v46 = *(_QWORD *)(a1 + 48);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v46, 1));
    objc_msgSend(v5, "setPropertiesToFetch:", v7);

    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setResultType:", 2);
    objc_msgSend(v5, "setFetchLimit:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
    v45 = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v45, 1));
    objc_msgSend(v5, "setSortDescriptors:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v38 = *(id *)(v11 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "executeFetchRequest:error:", v5, &v38));
    objc_storeStrong((id *)(v11 + 40), v38);

    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v37 = *(id *)(v13 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v37);
    objc_storeStrong((id *)(v13 + 40), v37);
    if (v12 && objc_msgSend(v12, "count"))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndexedSubscript:", 0));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(v15, "BOOLValue");

      if (qword_1002A74A0 != -1)
        dispatch_once(&qword_1002A74A0, &stru_100245BA8);
      v16 = qword_1002A74A8;
      if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 48);
        v18 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
        *(_DWORD *)buf = 138412546;
        v42 = v17;
        v43 = 1024;
        v44 = v18;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "latest verified map has property %@ = %d", buf, 0x12u);
      }
      v19 = v12;
    }
    else
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 2, 1));
      objc_msgSend(v5, "setPredicate:", v21);

      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
      v40 = v22;
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v40, 1));
      objc_msgSend(v5, "setSortDescriptors:", v23);

      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      v25 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v36 = *(id *)(v25 + 40);
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "executeFetchRequest:error:", v5, &v36));
      objc_storeStrong((id *)(v25 + 40), v36);

      v26 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v35 = *(id *)(v26 + 40);
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v35);
      objc_storeStrong((id *)(v26 + 40), v35);
      if (v19 && objc_msgSend(v19, "count"))
      {
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectAtIndexedSubscript:", 0));
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(v28, "BOOLValue");

        if (qword_1002A74A0 != -1)
          dispatch_once(&qword_1002A74A0, &stru_100245BC8);
        v29 = qword_1002A74A8;
        if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_INFO))
        {
          v30 = *(_QWORD *)(a1 + 48);
          v31 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
          *(_DWORD *)buf = 138412546;
          v42 = v30;
          v43 = 1024;
          v44 = v31;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "no fully verified map; latest pending map had property %@ = %d",
            buf,
            0x12u);
        }
      }
      else
      {
        v32 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:description:", kTransparencyErrorDatabase, -128, 2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), CFSTR("no previous map heads stored")));
        v33 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v34 = *(void **)(v33 + 40);
        *(_QWORD *)(v33 + 40) = v32;

      }
    }

  }
  else
  {
    if (qword_1002A74A0 != -1)
      dispatch_once(&qword_1002A74A0, &stru_100245B88);
    v20 = qword_1002A74A8;
    if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "failed to get latest map head", buf, 2u);
    }
  }
}

void sub_10010E648(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010E678(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010E6A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010E83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10010E860(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id obj;
  void *v41;
  uint8_t buf[4];
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 1, 1));
    objc_msgSend(v5, "setPredicate:", v6);

    v47 = *(_QWORD *)(a1 + 48);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v47, 1));
    objc_msgSend(v5, "setPropertiesToFetch:", v7);

    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setResultType:", 2);
    objc_msgSend(v5, "setFetchLimit:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
    v46 = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v46, 1));
    objc_msgSend(v5, "setSortDescriptors:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v39 = *(id *)(v11 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "executeFetchRequest:error:", v5, &v39));
    objc_storeStrong((id *)(v11 + 40), v39);

    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v38 = *(id *)(v13 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v38);
    objc_storeStrong((id *)(v13 + 40), v38);
    if (v12 && objc_msgSend(v12, "count"))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndexedSubscript:", 0));
      v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
      v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v17 = *(void **)(v16 + 40);
      *(_QWORD *)(v16 + 40) = v15;

      if (qword_1002A74A0 != -1)
        dispatch_once(&qword_1002A74A0, &stru_100245C30);
      v18 = qword_1002A74A8;
      if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_INFO))
      {
        v19 = *(_QWORD *)(a1 + 48);
        v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
        *(_DWORD *)buf = 138412546;
        v43 = v19;
        v44 = 2112;
        v45 = v20;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "latest verified map has property %@ = %@", buf, 0x16u);
      }
    }
    else
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 2, 1));
      objc_msgSend(v5, "setPredicate:", v22);

      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
      v41 = v23;
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v41, 1));
      objc_msgSend(v5, "setSortDescriptors:", v24);

      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      v26 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v37 = *(id *)(v26 + 40);
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "executeFetchRequest:error:", v5, &v37));
      objc_storeStrong((id *)(v26 + 40), v37);

      v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v36 = *(id *)(v28 + 40);
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v36);
      objc_storeStrong((id *)(v28 + 40), v36);
      if (v27)
      {
        if (objc_msgSend(v27, "count"))
        {
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndexedSubscript:", 0));
          v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
          v31 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
          v32 = *(void **)(v31 + 40);
          *(_QWORD *)(v31 + 40) = v30;

          if (qword_1002A74A0 != -1)
            dispatch_once(&qword_1002A74A0, &stru_100245C50);
          v33 = qword_1002A74A8;
          if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_INFO))
          {
            v34 = *(_QWORD *)(a1 + 48);
            v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
            *(_DWORD *)buf = 138412546;
            v43 = v34;
            v44 = 2112;
            v45 = v35;
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "no fully verified map; latest pending map had property %@ = %@",
              buf,
              0x16u);
          }
        }
        v12 = v27;
      }
      else
      {
        v12 = 0;
      }
    }

  }
  else
  {
    if (qword_1002A74A0 != -1)
      dispatch_once(&qword_1002A74A0, &stru_100245C10);
    v21 = qword_1002A74A8;
    if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "failed to get latest map head", buf, 2u);
    }
  }
}

void sub_10010EDAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010EDDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010EE0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010F038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10010F05C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id obj;
  uint8_t buf[8];
  id v36;
  void *v37;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v36 = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &v36);
  objc_storeStrong((id *)(v3 + 40), v36);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 1, 1));
    objc_msgSend(v5, "setPredicate:", v6);

    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setFetchLimit:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
    v37 = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v37, 1));
    objc_msgSend(v5, "setSortDescriptors:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    obj = *(id *)(v10 + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "executeFetchRequest:error:", v5, &obj));
    objc_storeStrong((id *)(v10 + 40), obj);

    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v33 = *(id *)(v12 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v33);
    objc_storeStrong((id *)(v12 + 40), v33);
    if (v11 && objc_msgSend(v11, "count"))
    {
      v13 = v11;
    }
    else
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == YES && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d && mmdVerified = %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), 1, 2, 1));
      objc_msgSend(v5, "setPredicate:", v15);

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v32 = *(id *)(v17 + 40);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "executeFetchRequest:error:", v5, &v32));
      objc_storeStrong((id *)(v17 + 40), v32);

      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v31 = *(id *)(v18 + 40);
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v31);
      objc_storeStrong((id *)(v18 + 40), v31);
      if (!v13 || !objc_msgSend(v13, "count"))
      {
        v25 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:description:", kTransparencyErrorDatabase, -128, 2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), CFSTR("no previous map heads stored")));
        v26 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v27 = *(void **)(v26 + 40);
        *(_QWORD *)(v26 + 40) = v25;

        goto LABEL_14;
      }
    }
    v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectAtIndexedSubscript:", 0));
    if (v19)
    {
      v20 = (void *)v19;
      v21 = *(_QWORD *)(a1 + 48);
      v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v30 = *(id *)(v22 + 40);
      v23 = (*(uint64_t (**)(void))(v21 + 16))();
      objc_storeStrong((id *)(v22 + 40), v30);
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v23;
      v24 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v29 = *(id *)(v24 + 40);
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v29);
      objc_storeStrong((id *)(v24 + 40), v29);

LABEL_18:
      return;
    }
LABEL_14:
    if (qword_1002A74A0 != -1)
      dispatch_once(&qword_1002A74A0, &stru_100245C90);
    v28 = qword_1002A74A8;
    if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "failed to get latest map head", buf, 2u);
    }
    goto LABEL_18;
  }
  if (qword_1002A74A0 != -1)
    dispatch_once(&qword_1002A74A0, &stru_100245C70);
  v14 = qword_1002A74A8;
  if (os_log_type_enabled((os_log_t)qword_1002A74A8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "failed to get latest map head", buf, 2u);
  }
}

void sub_10010F4B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010F4E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

void sub_10010F694(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A74A8;
  qword_1002A74A8 = (uint64_t)v1;

}

id *sub_10010FCA8(id *result, uint64_t a2, uint64_t a3)
{
  if (!a3)
    return (id *)_objc_msgSend(result[4], "setPendingFlag:stateMachine:", CFSTR("FetchIDMS"), result[5]);
  return result;
}

unint64_t BatchUpdateRequest_UpdateData_UpdateType_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A74B0))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("BatchUpdateRequest_UpdateData_UpdateType"), "Insert", &unk_100216DF0, 3, BatchUpdateRequest_UpdateData_UpdateType_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A74B0))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A74B0))
        return atomic_load(&qword_1002A74B0);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A74B0);
}

BOOL BatchUpdateRequest_UpdateData_UpdateType_IsValidValue(unsigned int a1)
{
  return a1 < 3;
}

id BatchUpdateRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchUpdateRequest descriptor](BatchUpdateRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchUpdateRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchUpdateRequest descriptor](BatchUpdateRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id BatchUpdateRequest_UpdateData_Type_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchUpdateRequest_UpdateData descriptor](BatchUpdateRequest_UpdateData, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchUpdateRequest_UpdateData_Type_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchUpdateRequest_UpdateData descriptor](BatchUpdateRequest_UpdateData, "descriptor"), "fieldWithNumber:", 1), a2);
}

id BatchUpdateRequest_UpdateData_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchUpdateRequest_UpdateData descriptor](BatchUpdateRequest_UpdateData, "descriptor"), "fieldWithNumber:", 2));
}

id SetBatchUpdateRequest_UpdateData_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchUpdateRequest_UpdateData descriptor](BatchUpdateRequest_UpdateData, "descriptor"), "fieldWithNumber:", 2), a2);
}

id BatchUpdateResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchUpdateResponse descriptor](BatchUpdateResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchUpdateResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchUpdateResponse descriptor](BatchUpdateResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

void BatchUpdateResponse_UpdateResponseData_ClearResponseDataOneOfCase(uint64_t a1)
{
  sub_100108708(a1, (id *)objc_msgSend(objc_msgSend(+[BatchUpdateResponse_UpdateResponseData descriptor](BatchUpdateResponse_UpdateResponseData, "descriptor"), "oneofs"), "objectAtIndex:", 0));
}

id InsertResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[InsertResponse descriptor](InsertResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetInsertResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[InsertResponse descriptor](InsertResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id MarkForDeletionResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[MarkForDeletionResponse descriptor](MarkForDeletionResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetMarkForDeletionResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[MarkForDeletionResponse descriptor](MarkForDeletionResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id OptInOutResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[OptInOutResponse descriptor](OptInOutResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetOptInOutResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[OptInOutResponse descriptor](OptInOutResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id VerifySyncRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[VerifySyncRequest descriptor](VerifySyncRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetVerifySyncRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[VerifySyncRequest descriptor](VerifySyncRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id VerifySyncRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[VerifySyncRequest descriptor](VerifySyncRequest, "descriptor"), "fieldWithNumber:", 4));
}

id SetVerifySyncRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[VerifySyncRequest descriptor](VerifySyncRequest, "descriptor"), "fieldWithNumber:", 4), a2);
}

id VerifySyncResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[VerifySyncResponse descriptor](VerifySyncResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetVerifySyncResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[VerifySyncResponse descriptor](VerifySyncResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id ConsistencyProofRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetConsistencyProofRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id ConsistencyProofRequest_LogType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 3));
}

id SetConsistencyProofRequest_LogType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 3), a2);
}

id ConsistencyProofRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 4));
}

id SetConsistencyProofRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofRequest descriptor](ConsistencyProofRequest, "descriptor"), "fieldWithNumber:", 4), a2);
}

id ConsistencyProofResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetConsistencyProofResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id ConsistencyProofResponse_LogType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 4));
}

id SetConsistencyProofResponse_LogType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 4), a2);
}

id ConsistencyProofResponse_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 5));
}

id SetConsistencyProofResponse_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[ConsistencyProofResponse descriptor](ConsistencyProofResponse, "descriptor"), "fieldWithNumber:", 5), a2);
}

id RevisionLogInclusionProofRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetRevisionLogInclusionProofRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id RevisionLogInclusionProofRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 2));
}

id SetRevisionLogInclusionProofRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 2), a2);
}

id RevisionLogInclusionProofRequest_LogType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 3));
}

id SetRevisionLogInclusionProofRequest_LogType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[RevisionLogInclusionProofRequest descriptor](RevisionLogInclusionProofRequest, "descriptor"), "fieldWithNumber:", 3), a2);
}

id RevisionLogInclusionProofResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[RevisionLogInclusionProofResponse descriptor](RevisionLogInclusionProofResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetRevisionLogInclusionProofResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[RevisionLogInclusionProofResponse descriptor](RevisionLogInclusionProofResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id PublicKeysRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[PublicKeysRequest descriptor](PublicKeysRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetPublicKeysRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[PublicKeysRequest descriptor](PublicKeysRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id PublicKeysRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[PublicKeysRequest descriptor](PublicKeysRequest, "descriptor"), "fieldWithNumber:", 2));
}

id SetPublicKeysRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[PublicKeysRequest descriptor](PublicKeysRequest, "descriptor"), "fieldWithNumber:", 2), a2);
}

id PublicKeysResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[PublicKeysResponse descriptor](PublicKeysResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetPublicKeysResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[PublicKeysResponse descriptor](PublicKeysResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id Gossip_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[Gossip descriptor](Gossip, "descriptor"), "fieldWithNumber:", 1));
}

id SetGossip_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[Gossip descriptor](Gossip, "descriptor"), "fieldWithNumber:", 1), a2);
}

void sub_100111878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100111898(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100111C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100111C44(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100111FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100111FBC(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "timeoutCanOccur"))
  {
    objc_msgSend(WeakRetained, "setTimeoutCanOccur:", 0);
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitionOperation"));
    v2 = objc_msgSend(v1, "timeout:", 0);

    v3 = objc_alloc_init((Class)NSOperationQueue);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitionOperation"));
    objc_msgSend(v3, "addOperation:", v4);

  }
}

void sub_100113958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100113974(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  unsigned int v11;
  void *v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  void *v16;
  NSObject *v17;
  unsigned int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  NSObject *v36;
  id v37;
  const char *v38;
  void *v39;
  id v40;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  uint8_t buf[4];
  id v48;

  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v5, "mutationMs");
  if (v7 > objc_msgSend(v6, "mutationMs"))
  {
    v8 = 1;
    goto LABEL_40;
  }
  v9 = objc_msgSend(v5, "mutationMs");
  if (v9 != objc_msgSend(v6, "mutationMs"))
  {
    v8 = -1;
    goto LABEL_40;
  }
  if ((objc_msgSend(v5, "isEqual:", v6) & 1) != 0)
  {
LABEL_39:
    v8 = 0;
    goto LABEL_40;
  }
  v10 = objc_msgSend(v5, "getSimpleMutationType");
  v11 = objc_msgSend(v6, "getSimpleMutationType");
  if ((v10 == 3 || objc_msgSend(v5, "hasOptInExtension"))
    && (v11 == 3 || objc_msgSend(v6, "hasOptInExtension")))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "accountKeyHash"));
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "accountKeyHash"));
    v14 = (void *)v13;
    if (!v12 || !v13 || objc_msgSend(v12, "isEqualToData:", v13))
    {
      v15 = objc_msgSend(v5, "getOptIn");
      if (v15 != objc_msgSend(v6, "getOptIn"))
      {
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
        if (qword_1002A7558 != -1)
          dispatch_once(&qword_1002A7558, &stru_100245D58);
        v16 = (void *)qword_1002A7560;
        if (os_log_type_enabled((os_log_t)qword_1002A7560, OS_LOG_TYPE_ERROR))
        {
          v17 = v16;
          *(_DWORD *)buf = 134217984;
          v48 = objc_msgSend(v5, "mutationMs");
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "Error sorting SMTS: different OptInOut states for %llu ms", buf, 0xCu);

        }
      }
    }

  }
  v18 = v10 - 1;
  if (v10 == 1 && v11 == 1)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "idsDeviceMutation"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "accountKeyHash"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "idsDeviceMutation"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "accountKeyHash"));
    v23 = objc_msgSend(v20, "isEqual:", v22);

    if ((v23 & 1) == 0)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
      if (qword_1002A7558 != -1)
        dispatch_once(&qword_1002A7558, &stru_100245D78);
      v39 = (void *)qword_1002A7560;
      if (!os_log_type_enabled((os_log_t)qword_1002A7560, OS_LOG_TYPE_ERROR))
        goto LABEL_39;
      v36 = v39;
      v40 = objc_msgSend(v5, "mutationMs");
      *(_DWORD *)buf = 134217984;
      v48 = v40;
      v38 = "Error sorting SMTS: two Add mutations with different account key for %llu ms";
LABEL_35:
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, v38, buf, 0xCu);

      goto LABEL_39;
    }
  }
  v8 = 0;
  if (v18 <= 1 && v11 - 1 <= 1)
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "idsDeviceMutation"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "accountKeyHash"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "idsDeviceMutation"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "accountKeyHash"));
    if (objc_msgSend(v25, "isEqual:", v27))
    {
      v45 = v25;
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "idsDeviceMutation"));
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "deviceIdHash"));
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "idsDeviceMutation"));
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "deviceIdHash"));
      v46 = v29;
      if (objc_msgSend(v29, "isEqual:", v31))
      {
        v42 = v28;
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "idsDeviceMutation"));
        v33 = objc_msgSend(v32, "appVersion");
        v44 = v24;
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "idsDeviceMutation"));
        v43 = objc_msgSend(v34, "appVersion");

        if (v33 != v43)
          goto LABEL_39;
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
        if (qword_1002A7558 != -1)
          dispatch_once(&qword_1002A7558, &stru_100245D98);
        v35 = (void *)qword_1002A7560;
        if (!os_log_type_enabled((os_log_t)qword_1002A7560, OS_LOG_TYPE_ERROR))
          goto LABEL_39;
        v36 = v35;
        v37 = objc_msgSend(v5, "mutationMs");
        *(_DWORD *)buf = 134217984;
        v48 = v37;
        v38 = "Error sorting SMTS: different Add/Mark mutations for %llu ms for entry";
        goto LABEL_35;
      }

    }
    else
    {

    }
    goto LABEL_39;
  }
LABEL_40:

  return v8;
}

void sub_100113E84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100113EB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100113EE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114C3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114C6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114C9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114CCC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114CFC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100114D2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115EE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115F14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115F44(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115F74(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115FA4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100115FD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100116004(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100116310(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_1001166BC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_1001178D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100117904(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100117934(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100117964(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100117994(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_10011825C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

void sub_100118574(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7560;
  qword_1002A7560 = (uint64_t)v1;

}

unint64_t ProtocolVersion_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7568))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("ProtocolVersion"), "UnknownVersion", &unk_100216F4C, 5, ProtocolVersion_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7568))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7568))
        return atomic_load(&qword_1002A7568);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7568);
}

BOOL ProtocolVersion_IsValidValue(unsigned int a1)
{
  return a1 < 4 || a1 == 999999999;
}

unint64_t Application_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7570))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("Application"), "UnknownApplication", &unk_100216FDC, 7, Application_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7570))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7570))
        return atomic_load(&qword_1002A7570);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7570);
}

BOOL Application_IsValidValue(unsigned int a1)
{
  return a1 < 7;
}

unint64_t Status_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7578))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("Status"), "UnknownStatus", &unk_100217040, 6, Status_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7578))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7578))
        return atomic_load(&qword_1002A7578);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7578);
}

uint64_t Status_IsValidValue(unsigned int a1)
{
  return (a1 < 8) & (0xEBu >> a1);
}

unint64_t VRFType_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7580))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:extraTextFormatInfo:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:extraTextFormatInfo:", CFSTR("VRFType"), "UnknownVrf", &unk_100217084, 2, VRFType_IsValidValue, 0, &unk_10021708C);
    while (!__ldaxr(&qword_1002A7580))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7580))
        return atomic_load(&qword_1002A7580);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7580);
}

BOOL VRFType_IsValidValue(int a1)
{
  return !a1 || a1 == 3;
}

unint64_t LogType_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7588))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("LogType"), "UnknownLog", &unk_1002170F0, 7, LogType_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7588))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7588))
        return atomic_load(&qword_1002A7588);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7588);
}

BOOL LogType_IsValidValue(unsigned int a1)
{
  return a1 < 7;
}

unint64_t MapType_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7590))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("MapType"), "UnknownMap", &unk_10021713C, 3, MapType_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7590))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7590))
        return atomic_load(&qword_1002A7590);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7590);
}

BOOL MapType_IsValidValue(unsigned int a1)
{
  return a1 < 3;
}

unint64_t NodeType_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A7598))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("NodeType"), "PaclNode", &unk_1002171A4, 9, NodeType_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A7598))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A7598))
        return atomic_load(&qword_1002A7598);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A7598);
}

BOOL NodeType_IsValidValue(unsigned int a1)
{
  return a1 < 9;
}

unint64_t Signature_SignatureAlgorithm_EnumDescriptor()
{
  id v1;

  if (!atomic_load(&qword_1002A75A0))
  {
    v1 = +[TransparencyGPBEnumDescriptor allocDescriptorForName:valueNames:values:count:enumVerifier:flags:](TransparencyGPBEnumDescriptor, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:", CFSTR("Signature_SignatureAlgorithm"), "Unknown", &unk_1002171E0, 2, Signature_SignatureAlgorithm_IsValidValue, 0);
    while (!__ldaxr(&qword_1002A75A0))
    {
      if (!__stlxr((unint64_t)v1, &qword_1002A75A0))
        return atomic_load(&qword_1002A75A0);
    }
    __clrex();

  }
  return atomic_load(&qword_1002A75A0);
}

BOOL Signature_SignatureAlgorithm_IsValidValue(unsigned int a1)
{
  return a1 < 2;
}

id VRFWitness_Type_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[VRFWitness descriptor](VRFWitness, "descriptor"), "fieldWithNumber:", 1));
}

id SetVRFWitness_Type_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[VRFWitness descriptor](VRFWitness, "descriptor"), "fieldWithNumber:", 1), a2);
}

id VRFPublicKey_Type_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[VRFPublicKey descriptor](VRFPublicKey, "descriptor"), "fieldWithNumber:", 2));
}

id SetVRFPublicKey_Type_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[VRFPublicKey descriptor](VRFPublicKey, "descriptor"), "fieldWithNumber:", 2), a2);
}

id Signature_Algorithm_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[Signature descriptor](Signature, "descriptor"), "fieldWithNumber:", 3));
}

id SetSignature_Algorithm_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[Signature descriptor](Signature, "descriptor"), "fieldWithNumber:", 3), a2);
}

id LogHead_LogType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[LogHead descriptor](LogHead, "descriptor"), "fieldWithNumber:", 5));
}

id SetLogHead_LogType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[LogHead descriptor](LogHead, "descriptor"), "fieldWithNumber:", 5), a2);
}

id LogHead_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[LogHead descriptor](LogHead, "descriptor"), "fieldWithNumber:", 6));
}

id SetLogHead_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[LogHead descriptor](LogHead, "descriptor"), "fieldWithNumber:", 6), a2);
}

id LogEntry_LogType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[LogEntry descriptor](LogEntry, "descriptor"), "fieldWithNumber:", 1));
}

id SetLogEntry_LogType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[LogEntry descriptor](LogEntry, "descriptor"), "fieldWithNumber:", 1), a2);
}

id LogEntry_NodeType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[LogEntry descriptor](LogEntry, "descriptor"), "fieldWithNumber:", 6));
}

id SetLogEntry_NodeType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[LogEntry descriptor](LogEntry, "descriptor"), "fieldWithNumber:", 6), a2);
}

id MapHead_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[MapHead descriptor](MapHead, "descriptor"), "fieldWithNumber:", 3));
}

id SetMapHead_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[MapHead descriptor](MapHead, "descriptor"), "fieldWithNumber:", 3), a2);
}

id MapHead_MapType_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[MapHead descriptor](MapHead, "descriptor"), "fieldWithNumber:", 6));
}

id SetMapHead_MapType_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[MapHead descriptor](MapHead, "descriptor"), "fieldWithNumber:", 6), a2);
}

id PerApplicationTreeConfigNode_EarliestVersion_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[PerApplicationTreeConfigNode descriptor](PerApplicationTreeConfigNode, "descriptor"), "fieldWithNumber:", 3));
}

id SetPerApplicationTreeConfigNode_EarliestVersion_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[PerApplicationTreeConfigNode descriptor](PerApplicationTreeConfigNode, "descriptor"), "fieldWithNumber:", 3), a2);
}

id TopLevelTreeConfigNode_EarliestVersion_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[TopLevelTreeConfigNode descriptor](TopLevelTreeConfigNode, "descriptor"), "fieldWithNumber:", 3));
}

id SetTopLevelTreeConfigNode_EarliestVersion_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[TopLevelTreeConfigNode descriptor](TopLevelTreeConfigNode, "descriptor"), "fieldWithNumber:", 3), a2);
}

id LogClosedNode_EarliestVersionForNextTree_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[LogClosedNode descriptor](LogClosedNode, "descriptor"), "fieldWithNumber:", 3));
}

id SetLogClosedNode_EarliestVersionForNextTree_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[LogClosedNode descriptor](LogClosedNode, "descriptor"), "fieldWithNumber:", 3), a2);
}

void sub_100119B34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7630;
  qword_1002A7630 = (uint64_t)v1;

}

void sub_10011A108(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void (*v13)(void);
  NSObject *v14;
  int v15;
  id v16;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  if (!v12 && v9 && v10 && v11)
  {
    +[TransparencyNetworkRequest addDeviceAuthentication:signature:timestamp:certs:](TransparencyNetworkRequest, "addDeviceAuthentication:signature:timestamp:certs:", *(_QWORD *)(a1 + 32), v9, v10, v11);
    v13 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
  }
  else
  {
    if (qword_1002A7628 != -1)
      dispatch_once(&qword_1002A7628, &stru_1002460C0);
    v14 = qword_1002A7630;
    if (os_log_type_enabled((os_log_t)qword_1002A7630, OS_LOG_TYPE_DEBUG))
    {
      v15 = 138412290;
      v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "device identity authentication failed: %@", (uint8_t *)&v15, 0xCu);
    }
    v13 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
  }
  v13();

}

void sub_10011A268(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7630;
  qword_1002A7630 = (uint64_t)v1;

}

void sub_10011B0D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7640;
  qword_1002A7640 = (uint64_t)v1;

}

void sub_10011B514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011B540(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7650;
  qword_1002A7650 = (uint64_t)v1;

}

void sub_10011B570(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  void *v7;
  KTPendingFlag *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  id v14;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (v3)
  {
    if (qword_1002A7648 != -1)
      dispatch_once(&qword_1002A7648, &stru_100246148);
    v6 = qword_1002A7650;
    if (os_log_type_enabled((os_log_t)qword_1002A7650, OS_LOG_TYPE_ERROR))
    {
      v13 = 138412290;
      v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "updatePublicKeyStores: failed with: %@", (uint8_t *)&v13, 0xCu);
    }
    objc_msgSend(v5, "setError:", v3);
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState"));
    objc_msgSend(v5, "setNextState:", v7);

  }
  v8 = -[KTPendingFlag initWithFlag:delayInSeconds:]([KTPendingFlag alloc], "initWithFlag:delayInSeconds:", CFSTR("StatusUpdate"), 0.0);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "deps"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "flagHandler"));
  objc_msgSend(v10, "handlePendingFlag:", v8);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "operationQueue"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "finishedOp"));
  objc_msgSend(v11, "addOperation:", v12);

}

void sub_10011B71C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7650;
  qword_1002A7650 = (uint64_t)v1;

}

void sub_10011B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10011B9D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10011B9E8(uint64_t a1)
{

}

void sub_10011B9F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
  v3 = objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("KTSelfState"), v2));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  if (v6)
  {
    objc_msgSend(v6, "setApplication:", *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "setUri:", *(_QWORD *)(a1 + 48));
    v7 = *(void **)(a1 + 32);
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    obj = *(id *)(v8 + 40);
    objc_msgSend(v7, "persistWithError:", &obj);
    objc_storeStrong((id *)(v8 + 40), obj);
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v10 = *(id *)(v9 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v10);
    objc_storeStrong((id *)(v9 + 40), v10);
  }
}

void sub_10011BC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10011BC7C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[KTSelfState fetchRequest](KTSelfState, "fetchRequest"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@ && uri == %@"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
    objc_msgSend(v5, "setPredicate:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v18 = *(id *)(v8 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v5, &v18));
    objc_storeStrong((id *)(v8 + 40), v18);

    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v17 = *(id *)(v10 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v17);
    objc_storeStrong((id *)(v10 + 40), v17);
    if (v9 && objc_msgSend(v9, "count") == (id)1)
    {
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:", 0));
      v12 = *(_QWORD *)(a1 + 64);
    }
    else
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
      {
LABEL_9:

        goto LABEL_10;
      }
      v11 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kTransparencyErrorDatabase, -128, 0));
      v12 = *(_QWORD *)(a1 + 56);
    }
    v15 = *(_QWORD *)(v12 + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v11;

    goto LABEL_9;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v19 = *(id *)(v13 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v19);
  v14 = v19;
  v5 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = v14;
LABEL_10:

}

void sub_10011C098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10011C0BC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = a1[6];
  v5 = *(_QWORD *)(a1[8] + 8);
  obj = *(id *)(v5 + 40);
  v6 = objc_msgSend(v2, "initSelfState:uri:error:", v3, v4, &obj);
  objc_storeStrong((id *)(v5 + 40), obj);
  if (v6)
  {
    v7 = (void *)a1[4];
    v8 = a1[5];
    v9 = a1[6];
    v10 = *(_QWORD *)(a1[8] + 8);
    v24 = *(id *)(v10 + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fetchSelfValidationState:uri:error:", v8, v9, &v24));
    objc_storeStrong((id *)(v10 + 40), v24);
    if (v11)
    {
      v12 = a1[7];
      v13 = *(_QWORD *)(a1[8] + 8);
      v23 = *(id *)(v13 + 40);
      v14 = (*(uint64_t (**)(void))(v12 + 16))();
      objc_storeStrong((id *)(v13 + 40), v23);
      *(_BYTE *)(*(_QWORD *)(a1[9] + 8) + 24) = v14;
      if (*(_BYTE *)(*(_QWORD *)(a1[9] + 8) + 24))
      {
        v15 = *(_QWORD *)(a1[8] + 8);
        v17 = *(_QWORD *)(v15 + 40);
        v16 = (id *)(v15 + 40);
        if (!v17)
        {
          v18 = (void *)a1[4];
          v22 = 0;
          v19 = objc_msgSend(v18, "persistWithError:", &v22);
          objc_storeStrong(v16, v22);
          *(_BYTE *)(*(_QWORD *)(a1[9] + 8) + 24) = v19;
          v20 = *(_QWORD *)(a1[8] + 8);
          v21 = *(id *)(v20 + 40);
          +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v21);
          objc_storeStrong((id *)(v20 + 40), v21);
        }
      }
    }

  }
}

BOOL sub_10011C2DC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "followupTicket"));

  if (!v4)
  {
    +[TransparencySettings defaultSelfFollowupTicketLifetime](TransparencySettings, "defaultSelfFollowupTicketLifetime");
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeInterval:sinceDate:](NSDate, "dateWithTimeInterval:sinceDate:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(v3, "setFollowupTicket:", v5);

  }
  return v4 == 0;
}

BOOL sub_10011C4AC(_QWORD *a1, void *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _BOOL8 v14;
  void *v15;
  _QWORD v17[2];
  _QWORD v18[2];

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "followupTicket"));

  if (v6)
  {
    v7 = a1[6];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "followupTicket"));
    v9 = v8;
    if (v7)
    {
      v10 = objc_msgSend(v8, "compare:", a1[6]);
    }
    else
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
      v10 = objc_msgSend(v9, "compare:", v15);

    }
    v14 = (unint64_t)v10 + 1 < 2;
  }
  else if (a3)
  {
    v11 = kTransparencyErrorDatabase;
    v17[0] = CFSTR("application");
    v17[1] = CFSTR("uri");
    v12 = a1[5];
    v18[0] = a1[4];
    v18[1] = v12;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v18, v17, 2));
    v14 = 1;
    *a3 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:userinfo:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:userinfo:description:", v11, -338, 1, 0, v13, CFSTR("checked followup ticket when none exists")));

  }
  else
  {
    v14 = 1;
  }

  return v14;
}

BOOL sub_10011C63C(id a1, KTSelfState *a2, id *a3)
{
  KTSelfState *v4;
  void *v5;

  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[KTSelfState followupTicket](v4, "followupTicket"));

  if (v5)
  {
    -[KTSelfState setFollowupTicket:](v4, "setFollowupTicket:", 0);
  }
  else if (a3)
  {
    *a3 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:description:", kTransparencyErrorDatabase, -128, 2, 0, CFSTR("tried to clear followup ticket when none exists")));
  }

  return v5 != 0;
}

void sub_10011C978(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_10011C9A8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "error"));

  if (!v2)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState"));
    objc_msgSend(WeakRetained, "setNextState:", v4);
    goto LABEL_7;
  }
  if (qword_1002A7658 != -1)
    dispatch_once(&qword_1002A7658, &stru_100246248);
  v3 = (void *)qword_1002A7660;
  if (os_log_type_enabled((os_log_t)qword_1002A7660, OS_LOG_TYPE_ERROR))
  {
    v4 = v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "error"));
    v6 = 138412290;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "FetchKTSelf: error: %@", (uint8_t *)&v6, 0xCu);

LABEL_7:
  }

}

void sub_10011CAD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7660;
  qword_1002A7660 = (uint64_t)v1;

}

void sub_10011CB04(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  KTFetchURIOperation *v19;
  void *v20;
  void *v21;
  KTFetchURIOperation *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  NSObject *v27;
  void *v28;
  id v29;
  id v30;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  void *v39;
  _BYTE v40[128];

  v6 = a2;
  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!v6)
  {
    if (qword_1002A7658 != -1)
      dispatch_once(&qword_1002A7658, &stru_100246268);
    v25 = qword_1002A7660;
    if (os_log_type_enabled((os_log_t)qword_1002A7660, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v37 = (uint64_t)v7;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "FetchKTSelf: failed to fetch self verification info: %@", buf, 0xCu);
    }
    v26 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorInterface, -337, v7, CFSTR("fetchSelfVerificationInfoForApplication failed")));
    goto LABEL_25;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "uriToServerLoggableDatas"));
  v10 = objc_msgSend(v9, "count");

  if (!v10)
  {
    if (qword_1002A7658 != -1)
      dispatch_once(&qword_1002A7658, &stru_100246288);
    v27 = qword_1002A7660;
    if (os_log_type_enabled((os_log_t)qword_1002A7660, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "FetchKTSelf: no uriToServerLoggableDatas", buf, 2u);
    }
    v26 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kTransparencyErrorServer, -336, 0));
LABEL_25:
    v28 = (void *)v26;
    objc_msgSend(WeakRetained, "setError:", v26);

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
    objc_msgSend(v23, "addOperation:", v24);
    goto LABEL_26;
  }
  v29 = v7;
  v30 = v6;
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "uriToServerLoggableDatas"));
  v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v33;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v33 != v13)
          objc_enumerationMutation(obj);
        v15 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "application"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyApplication addApplicationPrefixForIdentifier:uri:](TransparencyApplication, "addApplicationPrefixForIdentifier:uri:", v16, v15));

        if (qword_1002A7658 != -1)
          dispatch_once(&qword_1002A7658, &stru_1002462A8);
        v18 = qword_1002A7660;
        if (os_log_type_enabled((os_log_t)qword_1002A7660, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 141558274;
          v37 = 1752392040;
          v38 = 2112;
          v39 = v17;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "FetchKTSelf: looking up %{mask.hash}@", buf, 0x16u);
        }
        v19 = [KTFetchURIOperation alloc];
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "application"));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
        v22 = -[KTFetchURIOperation initWithURI:application:dependencies:](v19, "initWithURI:application:dependencies:", v17, v20, v21);

        objc_msgSend(WeakRetained, "runBeforeGroupFinished:", v22);
        v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
    }
    while (v12);
  }

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
  objc_msgSend(v23, "addOperation:", v24);
  v7 = v29;
  v6 = v30;
LABEL_26:

}

void sub_10011CF30(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7660;
  qword_1002A7660 = (uint64_t)v1;

}

void sub_10011CF60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7660;
  qword_1002A7660 = (uint64_t)v1;

}

void sub_10011CF90(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7660;
  qword_1002A7660 = (uint64_t)v1;

}

id sub_10011D590(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSetFlag:", *(_QWORD *)(a1 + 40));
}

void sub_10011DFF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E024(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E054(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E084(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E0B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E0E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E7E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E810(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E840(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011E870(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011EFF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F028(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F058(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F088(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F238(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F88C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F8BC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011F8EC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011FF14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011FF44(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011FF74(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011FFA4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10011FFD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_1001204FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10012052C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10012055C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_10012058C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_1001209D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100120A00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100120EF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100120F28(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100120F58(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100120F88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_1001211C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7670;
  qword_1002A7670 = (uint64_t)v1;

}

void sub_100121950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100121990(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  KTCondition *v5;

  v3 = a2;
  v5 = objc_alloc_init(KTCondition);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableStateConditions"));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v5, v3);

}

void sub_100121A00(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  id v3;
  _QWORD block[4];
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100121A8C;
  block[3] = &unk_10023A390;
  v5 = WeakRetained;
  v3 = WeakRetained;
  dispatch_sync(v2, block);

}

id sub_100121A8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSendAnyPendingFlags");
}

void sub_100121B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100121B74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100121B84(uint64_t a1)
{

}

void sub_100121B8C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableStateConditions"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1001221C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001225B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001225E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100122610(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_10012274C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10012276C(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  _QWORD block[4];
  id v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100122804;
  block[3] = &unk_10023B3A8;
  v5 = *(id *)(a1 + 32);
  v6 = WeakRetained;
  dispatch_sync(v2, block);

}

id sub_100122804(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  void *v14;
  id v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  unsigned int v30;
  void *v31;
  void *v32;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t v39[128];
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  const __CFString *v51;

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_1002467F8);
  v2 = (void *)qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextState"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "intendedState"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentFlags"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "contentsAsString"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pendingFlagsString"));
    v10 = *(void **)(a1 + 32);
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "error"));
    v12 = (void *)v11;
    *(_DWORD *)buf = 138544642;
    v13 = CFSTR("(no error)");
    v41 = v5;
    if (v11)
      v13 = (const __CFString *)v11;
    v42 = 2114;
    v43 = v6;
    v44 = 2114;
    v45 = v8;
    v46 = 2114;
    v47 = v9;
    v48 = 2114;
    v49 = v10;
    v50 = 2114;
    v51 = v13;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Finishing state transition attempt (ending in %{public}@, intended: %{public}@, f:[%{public}@], p:[%{public}@]): %{public}@ %{public}@", buf, 0x3Eu);

  }
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stateMachineWatchers"));
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
  if (v15)
  {
    v17 = v15;
    v18 = *(_QWORD *)v36;
    *(_QWORD *)&v16 = 138543362;
    v34 = v16;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v36 != v18)
          objc_enumerationMutation(v14);
        v20 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)v19);
        if (qword_1002A7678 != -1)
          dispatch_once(&qword_1002A7678, &stru_100246818);
        v21 = qword_1002A7680;
        if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = v34;
          v41 = v20;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "notifying watcher: %{public}@", buf, 0xCu);
        }
        objc_msgSend(v20, "onqueueHandleTransition:", *(_QWORD *)(a1 + 32), v34);
        v19 = (char *)v19 + 1;
      }
      while (v17 != v19);
      v17 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    }
    while (v17);
  }

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stateMachineWatchers"));
  v23 = objc_msgSend(v22, "count");

  if (v23)
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stateMachineWatchers"));
    v25 = (uint64_t)objc_msgSend(v24, "count");

    if (v25 >= 1)
    {
      v26 = v25 + 1;
      do
      {
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stateMachineWatchers"));
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndexedSubscript:", v26 - 2));
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "result"));
        v30 = objc_msgSend(v29, "isFinished");

        if (v30)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stateMachineWatchers"));
          objc_msgSend(v31, "removeObjectAtIndex:", v26 - 2);

        }
        --v26;
      }
      while (v26 > 1);
    }
  }
  v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextState"));
  objc_msgSend(*(id *)(a1 + 40), "setCurrentState:", v32);

  objc_msgSend(*(id *)(a1 + 40), "setNextStateMachineCycleOperation:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "_onqueueStartNextStateMachineOperation:", 1);
}

void sub_100122BC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100122BF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

id sub_100122C90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueuePokeStateMachine");
}

id sub_100122D68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueHandleFlag:", *(_QWORD *)(a1 + 40));
}

id sub_100122E74(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_onqueueHandlePendingFlag:", *(_QWORD *)(a1 + 40));
}

id sub_100122F30(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_onqueueHandlePendingFlag:", *(_QWORD *)(a1 + 40));
}

id sub_100123060(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueCancelPendingFlag:", *(_QWORD *)(a1 + 40));
}

void sub_1001231E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100123200(uint64_t a1)
{
  NSObject *v1;
  id WeakRetained;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100123280;
  block[3] = &unk_10023A390;
  block[4] = WeakRetained;
  dispatch_sync(v1, block);

}

id sub_100123280(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_100246860);
  v2 = qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Finished waiting for operation", v4, 2u);
  }
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSendAnyPendingFlags");
}

void sub_100123314(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

id sub_1001233B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAllowPendingFlags:", 0);
}

void sub_10012349C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001234B4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingFlags", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allKeys"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v7);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingFlags"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", v8));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "description"));
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKeyedSubscript:", v11, v8);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

}

void sub_1001236F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012370C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentFlags", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "dumpFlags"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7), *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7));
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

void sub_100123E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100123E5C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100123E8C(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  id v3;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100123F10;
    block[3] = &unk_10023A390;
    block[4] = v3;
    dispatch_sync(v2, block);

    WeakRetained = v3;
  }

}

id sub_100123F10(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_1002468A0);
  v2 = qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Unlock occurred", v4, 2u);
  }
  objc_msgSend(*(id *)(a1 + 32), "setConditionChecksInFlight:", (unint64_t)objc_msgSend(*(id *)(a1 + 32), "conditionChecksInFlight") & 0xFFFFFFFFFFFFFFFELL);
  objc_msgSend(*(id *)(a1 + 32), "_onqueueRecheckConditions");
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSendAnyPendingFlags");
}

void sub_100123FC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100123FF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100124024(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  id v3;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001240A8;
    block[3] = &unk_10023A390;
    block[4] = v3;
    dispatch_sync(v2, block);

    WeakRetained = v3;
  }

}

id sub_1001240A8(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_1002468E0);
  v2 = qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Network is reachable", v4, 2u);
  }
  objc_msgSend(*(id *)(a1 + 32), "setConditionChecksInFlight:", (unint64_t)objc_msgSend(*(id *)(a1 + 32), "conditionChecksInFlight") & 0xFFFFFFFFFFFFFFFDLL);
  objc_msgSend(*(id *)(a1 + 32), "_onqueueRecheckConditions");
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSendAnyPendingFlags");
}

void sub_10012415C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001246EC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_10012471C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_10012474C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100124814(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testHoldStates"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

id sub_1001248EC(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  int v6;
  uint64_t v7;

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_100246960);
  v2 = qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Releasing state machine test pause from %@", (uint8_t *)&v6, 0xCu);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "testHoldStates"));
  objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 32));

  return objc_msgSend(*(id *)(a1 + 40), "_onqueuePokeStateMachine");
}

void sub_1001249D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100124AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100124AC4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextStateMachineCycleOperation"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v2 == 0;

}

void sub_100124BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100124BE8(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextStateMachineCycleOperation"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v2 == 0;

}

void sub_100124C90(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "holdStateMachineOperation"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "operationQueue"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "holdStateMachineOperation"));
    objc_msgSend(v3, "addOperation:", v4);

    objc_msgSend(*(id *)(a1 + 32), "setHoldStateMachineOperation:", 0);
  }
}

id sub_100124D9C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "holdStateMachineOperation"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "operationQueue"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "holdStateMachineOperation"));
    objc_msgSend(v3, "addOperation:", v4);

    objc_msgSend(*(id *)(a1 + 32), "setHoldStateMachineOperation:", 0);
  }
  objc_msgSend(*(id *)(a1 + 32), "setHalted:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setAllowPendingFlags:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "_onqueuePokeStateMachine");
}

id sub_100124ECC(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateMachineRequests"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_onqueuePokeStateMachine");
}

id sub_100124FA0(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateMachineWatchers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_onqueuePokeStateMachine");
}

id sub_100125074(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_onqueueRegisterMultiStateArrivalWatcher:", *(_QWORD *)(a1 + 40));
}

void sub_1001253CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001253FC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  const __CFString *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  const __CFString *v14;

  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_1002469A0);
  v2 = (void *)qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(a1 + 40);
    v5 = v2;
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
    v7 = (void *)v6;
    v8 = CFSTR("no error");
    if (v6)
      v8 = (const __CFString *)v6;
    v11 = 138543618;
    v12 = v4;
    v13 = 2114;
    v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Returning '%{public}@' result: %{public}@", (uint8_t *)&v11, 0x16u);

  }
  v9 = *(_QWORD *)(a1 + 48);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "error"));
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

}

void sub_10012552C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001259B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_1001259E0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  const __CFString *v20;

  v3 = a2;
  if (qword_1002A7678 != -1)
    dispatch_once(&qword_1002A7678, &stru_1002469E0);
  v4 = (void *)qword_1002A7680;
  if (os_log_type_enabled((os_log_t)qword_1002A7680, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(a1 + 40);
    v7 = v4;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "result"));
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "error"));
    v10 = (void *)v9;
    v11 = CFSTR("no error");
    if (v9)
      v11 = (const __CFString *)v9;
    v17 = 138543618;
    v18 = v6;
    v19 = 2114;
    v20 = v11;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Returning '%{public}@' result: %{public}@", (uint8_t *)&v17, 0x16u);

  }
  v12 = *(_QWORD *)(a1 + 48);
  if (v12)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "result"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "error"));
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v14);

  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "result"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "error"));
  objc_msgSend(v3, "setError:", v16);

}

void sub_100125B7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7680;
  qword_1002A7680 = (uint64_t)v1;

}

void sub_100126840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100126874(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

uint64_t sub_1001268A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001268B4(uint64_t a1)
{

}

void sub_1001268BC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char isKindOfClass;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  v7 = v6;
  if (v6)
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data"));
    v9 = *(_QWORD *)(a1[7] + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "updated"));
    v12 = *(_QWORD *)(a1[8] + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "error"));
    v16 = objc_opt_class(NSData, v15);
    isKindOfClass = objc_opt_isKindOfClass(v14, v16);

    if ((isKindOfClass & 1) != 0)
    {
      v19 = objc_opt_class(NSError, v18);
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "error"));
      v21 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v19, v20, 0));
      v22 = *(_QWORD *)(a1[6] + 8);
      v23 = *(void **)(v22 + 40);
      *(_QWORD *)(v22 + 40) = v21;

    }
  }

}

void sub_100126A08(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100126EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100126ED8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100126F08(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100126F38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100126F68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100126F98(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unsigned __int8 v13;
  NSObject *v14;
  uint64_t v15;
  id v16;
  id obj;
  uint8_t buf[4];
  uint64_t v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@ AND unique = %@"), CFSTR("SelfVerificationInfo"), a1[4], &stru_1002508B8));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)a1[5];
  v5 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);
  if (!objc_msgSend(v6, "count"))
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246B10);
    v9 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "storeSelfVerificationInfo: new", buf, 2u);
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), a1[5]));
    objc_msgSend(v8, "setKey:", CFSTR("SelfVerificationInfo"));
    objc_msgSend(v8, "setApplication:", a1[4]);
    objc_msgSend(v8, "setUnique:", &stru_1002508B8);
    goto LABEL_13;
  }
  if (qword_1002A7688 != -1)
    dispatch_once(&qword_1002A7688, &stru_100246B30);
  v7 = qword_1002A7690;
  if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "storeSelfVerificationInfo: update", buf, 2u);
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  if (v8)
  {
LABEL_13:
    objc_msgSend(v8, "setError:", 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v8, "setUpdated:", v10);

    objc_msgSend(v8, "setData:", a1[6]);
    v11 = (void *)a1[5];
    v12 = *(_QWORD *)(a1[7] + 8);
    v16 = *(id *)(v12 + 40);
    v13 = objc_msgSend(v11, "save:", &v16);
    objc_storeStrong((id *)(v12 + 40), v16);
    if ((v13 & 1) != 0)
    {
      *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
    }
    else
    {
      if (qword_1002A7688 != -1)
        dispatch_once(&qword_1002A7688, &stru_100246B50);
      v14 = qword_1002A7690;
      if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
      {
        v15 = *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v19 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "storeSelfVerificationInfo: save %@", buf, 0xCu);
      }
    }

  }
}

void sub_1001272C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_1001272F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127320(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127350(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012742C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@ AND unique = %@"), CFSTR("SelfVerificationInfo"), *(_QWORD *)(a1 + 32), &stru_1002508B8));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "executeFetchRequest:error:", v2, *(_QWORD *)(a1 + 48)));
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(a1 + 40), "deleteObject:", *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v8));
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v6);
  }
  if (objc_msgSend(*(id *)(a1 + 40), "hasChanges"))
    objc_msgSend(*(id *)(a1 + 40), "save:", *(_QWORD *)(a1 + 48));

}

void sub_100127960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_10012799C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_1001279CC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char isKindOfClass;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id obj;
  uint8_t buf[4];
  void *v27;
  __int16 v28;
  uint64_t v29;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  if (qword_1002A7688 != -1)
    dispatch_once(&qword_1002A7688, &stru_100246BB0);
  v7 = qword_1002A7690;
  if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
    *(_DWORD *)buf = 138412546;
    v27 = v6;
    v28 = 2112;
    v29 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "fetchIDMSDeviceList: %@ %@", buf, 0x16u);
  }
  if (v6)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data"));
    v10 = *(_QWORD *)(a1[7] + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "updated"));
    v13 = *(_QWORD *)(a1[8] + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "error"));
    v17 = objc_opt_class(NSData, v16);
    isKindOfClass = objc_opt_isKindOfClass(v15, v17);

    if ((isKindOfClass & 1) != 0)
    {
      v20 = objc_opt_class(NSError, v19);
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "error"));
      v22 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v20, v21, 0));
      v23 = *(_QWORD *)(a1[6] + 8);
      v24 = *(void **)(v23 + 40);
      *(_QWORD *)(v23 + 40) = v22;

    }
  }

}

void sub_100127BD0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127C00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100127F60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127F90(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100127FC0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unsigned __int8 v13;
  NSObject *v14;
  uint64_t v15;
  id v16;
  id obj;
  uint8_t buf[4];
  uint64_t v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@ AND unique = %@"), CFSTR("IDMSDeviceList"), CFSTR("global"), &stru_1002508B8));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)a1[4];
  v5 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);
  if (!objc_msgSend(v6, "count"))
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246C30);
    v9 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "storeIDMSDeviceList: new", buf, 2u);
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), a1[4]));
    objc_msgSend(v8, "setKey:", CFSTR("IDMSDeviceList"));
    objc_msgSend(v8, "setApplication:", CFSTR("global"));
    goto LABEL_13;
  }
  if (qword_1002A7688 != -1)
    dispatch_once(&qword_1002A7688, &stru_100246C50);
  v7 = qword_1002A7690;
  if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "storeIDMSDeviceList: update", buf, 2u);
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  if (v8)
  {
LABEL_13:
    objc_msgSend(v8, "setUnique:", &stru_1002508B8);
    objc_msgSend(v8, "setError:", 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v8, "setUpdated:", v10);

    objc_msgSend(v8, "setData:", a1[5]);
    v11 = (void *)a1[4];
    v12 = *(_QWORD *)(a1[6] + 8);
    v16 = *(id *)(v12 + 40);
    v13 = objc_msgSend(v11, "save:", &v16);
    objc_storeStrong((id *)(v12 + 40), v16);
    if ((v13 & 1) != 0)
    {
      *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
    }
    else
    {
      if (qword_1002A7688 != -1)
        dispatch_once(&qword_1002A7688, &stru_100246C70);
      v14 = qword_1002A7690;
      if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
      {
        v15 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v19 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "storeIDMSDeviceList: save %@", buf, 0xCu);
      }
    }

  }
}

void sub_1001282F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128320(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128350(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128380(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012854C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012857C(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char isKindOfClass;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  const char *v26;
  id v27;
  uint8_t buf[8];
  id v29;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v29 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v29));
  v5 = v29;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v7 = v6;
  if (!v6)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246CF8);
    v25 = qword_1002A7690;
    if (!os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
      goto LABEL_15;
    *(_WORD *)buf = 0;
    v26 = "fetchKTInfoForApplication: no cached data";
    goto LABEL_14;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "error"));
  v10 = objc_opt_class(NSData, v9);
  isKindOfClass = objc_opt_isKindOfClass(v8, v10);

  if ((isKindOfClass & 1) != 0)
  {
    v13 = objc_opt_class(NSError, v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "error"));
    v15 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v13, v14, 0));

    v5 = (id)v15;
  }
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));

  if (!v16)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246D18);
    v25 = qword_1002A7690;
    if (!os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
      goto LABEL_15;
    *(_WORD *)buf = 0;
    v26 = "fetchKTInfoForApplication: no data";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, v26, buf, 2u);
LABEL_15:
    (*(void (**)(void))(a1[6] + 16))();
    goto LABEL_16;
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
  v27 = v5;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](KTQueryInfo, "parseFromData:error:", v17, &v27));
  v19 = v27;

  v20 = a1[6];
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "queryRequest"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "queryResponse"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "updated"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "serverHint"));
  (*(void (**)(uint64_t, void *, void *, void *, void *, id))(v20 + 16))(v20, v21, v22, v23, v24, v19);

  v5 = v19;
LABEL_16:

}

void sub_10012884C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012887C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_100128C1C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128C4C(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unsigned __int8 v13;
  NSObject *v14;
  uint64_t v15;
  id v16;
  id obj;
  uint8_t buf[4];
  uint64_t v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@ AND unique = %@"), CFSTR("QueryResponse"), a1[4], a1[5]));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)a1[6];
  v5 = *(_QWORD *)(a1[8] + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);
  if (!objc_msgSend(v6, "count"))
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246D58);
    v9 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "storeQueryResponse: new", buf, 2u);
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), a1[6]));
    objc_msgSend(v8, "setKey:", CFSTR("QueryResponse"));
    objc_msgSend(v8, "setApplication:", a1[4]);
    objc_msgSend(v8, "setUnique:", a1[5]);
    goto LABEL_13;
  }
  if (qword_1002A7688 != -1)
    dispatch_once(&qword_1002A7688, &stru_100246D78);
  v7 = qword_1002A7690;
  if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "storeQueryResponse: update", buf, 2u);
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  if (v8)
  {
LABEL_13:
    objc_msgSend(v8, "setError:", 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v8, "setUpdated:", v10);

    objc_msgSend(v8, "setData:", a1[7]);
    v11 = (void *)a1[6];
    v12 = *(_QWORD *)(a1[8] + 8);
    v16 = *(id *)(v12 + 40);
    v13 = objc_msgSend(v11, "save:", &v16);
    objc_storeStrong((id *)(v12 + 40), v16);
    if ((v13 & 1) != 0)
    {
      *(_BYTE *)(*(_QWORD *)(a1[9] + 8) + 24) = 1;
    }
    else
    {
      if (qword_1002A7688 != -1)
        dispatch_once(&qword_1002A7688, &stru_100246D98);
      v14 = qword_1002A7690;
      if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
      {
        v15 = *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v19 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "storeQueryResponse: save %@", buf, 0xCu);
      }
    }

  }
}

void sub_100128F68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128F98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128FC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_100128FF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_1001291D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  v7 = objc_opt_class(NSString, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v5, v12);
  }
  else
  {
    v9 = objc_opt_class(NSError, v8);
    if ((objc_opt_isKindOfClass(v5, v9) & 1) != 0)
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "jsonifyError:", v5));
    else
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));
    v11 = (void *)v10;
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v10, v12);

  }
}

void sub_1001294B8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  v7 = objc_opt_class(NSString, v6);
  if ((objc_opt_isKindOfClass(v12, v7) & 1) != 0)
  {
    v9 = objc_opt_class(NSDictionary, v8);
    if ((objc_opt_isKindOfClass(v5, v9) & 1) != 0)
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "errorFromJson:", v5));
    else
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));
    v11 = (void *)v10;
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v10, v12);

  }
}

void sub_1001296B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001296D8(uint64_t a1, void *a2)
{
  id v3;

  if (a2)
  {
    v3 = objc_msgSend(a2, "mutableCopy");
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKeyedSubscript:", v3, *(_QWORD *)(a1 + 32));

  }
}

void sub_100129860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100129884(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  id v42;
  _BYTE v43[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[DeviceSignature fetchRequest](DeviceSignature, "fetchRequest"));
  if (a1[4])
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application IN %@"), a1[4]));
    objc_msgSend(v2, "setPredicate:", v3);

  }
  v42 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "execute:", &v42));
  v5 = v42;
  v6 = v42;
  v7 = v6;
  if (v4)
  {
    v36 = v6;
    v8 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v9 = *(_QWORD *)(a1[7] + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    v37 = v4;
    v11 = v4;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v39;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(_QWORD *)v39 != v14)
            objc_enumerationMutation(v11);
          v16 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)i);
          v17 = objc_alloc((Class)TransparencyIDSRegistrationData);
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "application"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "registrationData"));
          v20 = objc_msgSend(v17, "initWithApplication:registrationData:", v18, v19);

          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "signature"));
          objc_msgSend(v20, "setSignature:", v21);

          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "publicKey"));
          objc_msgSend(v20, "setPublicKey:", v22);

          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "pushToken"));
          objc_msgSend(v20, "setPushToken:", v23);

          v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "createdAt"));
          objc_msgSend(v20, "setCreatedAt:", v24);

          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "signedAt"));
          objc_msgSend(v20, "setSignedAt:", v25);

          v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "uploadedAt"));
          objc_msgSend(v20, "setUploadedAt:", v26);

          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "state"));
          objc_msgSend(v20, "setState:", v27);

          v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "currentItemPointerModificationTime"));
          objc_msgSend(v20, "setOrderedTimestamp:", v28);

          v29 = (void *)a1[5];
          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "error"));
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "errorFromData:", v30));
          objc_msgSend(v20, "setError:", v31);

          v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "altDSID"));
          objc_msgSend(v20, "setAltDSID:", v32);

          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "dsid"));
          objc_msgSend(v20, "setDsid:", v33);

          v34 = *(void **)(*(_QWORD *)(a1[7] + 8) + 40);
          v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "application"));
          objc_msgSend(v34, "setObject:forKeyedSubscript:", v20, v35);

        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
      }
      while (v13);
    }

    v4 = v37;
    v7 = v36;
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), v5);
  }

}

void sub_100129E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100129E94(uint64_t a1)
{
  void **p_vtable;
  void *i;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  const __CFString *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id obj;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];

  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  obj = *(id *)(a1 + 32);
  v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
  if (v31)
  {
    p_vtable = KtsmdataStoreMessagesRoot.vtable;
    v30 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v31; i = (char *)i + 1)
      {
        if (*(_QWORD *)v35 != v30)
          objc_enumerationMutation(obj);
        v4 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "application"));
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(p_vtable + 357, "fetchRequest"));
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application = %@"), v5));
        objc_msgSend(v6, "setPredicate:", v7);

        v33 = 0;
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "execute:", &v33));
        v9 = v33;
        if (objc_msgSend(v8, "count"))
        {
          v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "firstObject"));
        }
        else
        {
          v10 = objc_msgSend(objc_alloc((Class)(p_vtable + 357)), "initWithContext:", *(_QWORD *)(a1 + 40));
          objc_msgSend(v10, "setApplication:", v5);
          v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          objc_msgSend(v10, "setCreatedAt:", v11);

        }
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "signature"));

        if (v12)
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          objc_msgSend(v10, "setSignedAt:", v13);

          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "signature"));
          objc_msgSend(v10, "setSignature:", v14);

        }
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "tbsKTIDSRegistrationData"));
        objc_msgSend(v10, "setRegistrationData:", v15);

        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "publicKey"));
        objc_msgSend(v10, "setPublicKey:", v16);

        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pushToken"));
        objc_msgSend(v10, "setPushToken:", v17);

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "signature"));
        if (v18)
          v19 = CFSTR("done");
        else
          v19 = CFSTR("tbs");
        objc_msgSend(v10, "setState:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "orderedTimestamp"));
        objc_msgSend(v10, "setCurrentItemPointerModificationTime:", v20);

        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "altDSID"));
        objc_msgSend(v10, "setAltDSID:", v21);

        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dsid"));
        objc_msgSend(v10, "setDsid:", v22);

        v23 = *(void **)(a1 + 48);
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "error"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "jsonifyError:", v24));

        if (v25)
        {
          v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization dataWithJSONObject:options:error:](NSJSONSerialization, "dataWithJSONObject:options:error:", v25, 0, 0));
          objc_msgSend(v10, "setError:", v26);

        }
        p_vtable = (void **)(KtsmdataStoreMessagesRoot + 24);
      }
      v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
    }
    while (v31);
  }

  if (objc_msgSend(*(id *)(a1 + 40), "hasChanges"))
  {
    v27 = *(void **)(a1 + 40);
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v32 = *(id *)(v28 + 40);
    objc_msgSend(v27, "save:", &v32);
    objc_storeStrong((id *)(v28 + 40), v32);
  }
}

void sub_10012A3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012A3D0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  id v27;
  _BYTE v28[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[DeviceSignature fetchRequest](DeviceSignature, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("pushToken = %@ AND registrationData = %@"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "setPredicate:", v3);

  v27 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "execute:", &v27));
  v5 = v27;
  v6 = v5;
  if (!v4)
  {
    v16 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    v18 = v5;
    goto LABEL_12;
  }
  v21 = v5;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v7 = v4;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v24;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v24 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
        objc_msgSend(v12, "setUploadedAt:", v13);

        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    }
    while (v9);
  }

  v6 = v21;
  if (objc_msgSend(*(id *)(a1 + 48), "hasChanges"))
  {
    v14 = *(void **)(a1 + 48);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v17 = *(void **)(v15 + 40);
    v16 = (void **)(v15 + 40);
    v22 = v17;
    objc_msgSend(v14, "save:", &v22);
    v18 = v22;
LABEL_12:
    v19 = v18;
    v20 = *v16;
    *v16 = v19;

  }
}

void sub_10012A6FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012A940(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012AB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10012AB78(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  id obj;

  objc_msgSend(*(id *)(a1 + 32), "_onQueueClearDeviceSignatureSignatures");
  v2 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "save:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v4;
}

void sub_10012ABE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012AE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10012AE8C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012AEBC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id obj;

  objc_msgSend(*(id *)(a1 + 32), "_onQueueClearDeviceSignatureSignatures");
  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  objc_msgSend(v2, "delete:onMOC:", v3, *(_QWORD *)(a1 + 40));

  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v5 + 40);
  LOBYTE(v3) = objc_msgSend(v4, "save:", &obj);
  objc_storeStrong((id *)(v5 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = (_BYTE)v3;
}

void sub_10012AF54(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012B020(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  uint8_t buf[4];
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setKey:", CFSTR("FixUps"));
  objc_msgSend(v2, "setApplication:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSData data](NSData, "data"));
  objc_msgSend(v2, "setData:", v3);

  v4 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v2, "setUpdated:", v4);

  v5 = *(void **)(a1 + 32);
  v8 = 0;
  LOBYTE(v4) = objc_msgSend(v5, "save:", &v8);
  v6 = v8;
  if ((v4 & 1) == 0)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246F68);
    v7 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "storeFixup: save %@", buf, 0xCu);
    }
  }

}

void sub_10012B198(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012B3AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10012B3C4(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  id v7;
  uint8_t buf[4];
  id v9;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v7 = 0;
  v4 = objc_msgSend(v2, "countForFetchRequest:error:", v3, &v7);
  v5 = v7;
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = v4;
  if (*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246F88);
    v6 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "haveDoneFixup: countForFetchRequest %@", buf, 0xCu);
    }
  }

}

void sub_10012B4DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012B6C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012B6F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  NSObject *v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  uint8_t buf[4];
  id v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@"), CFSTR("SettingsDate"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = *(void **)(a1 + 48);
  if (*(_QWORD *)(a1 + 40))
  {
    v17 = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v17));
    v6 = v17;
    if (objc_msgSend(v5, "count"))
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
      if (!v7)
      {

        goto LABEL_20;
      }
    }
    else
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), *(_QWORD *)(a1 + 48)));
      objc_msgSend(v7, "setKey:", CFSTR("SettingsDate"));
      objc_msgSend(v7, "setApplication:", *(_QWORD *)(a1 + 32));
    }
    objc_msgSend(v7, "setData:", *(_QWORD *)(a1 + 56));
    v9 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v7, "setUpdated:", v9);
  }
  else
  {
    v22 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v22));
    v6 = v22;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v9 = v8;
    v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
    if (v7)
    {
      v10 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v19 != v10)
            objc_enumerationMutation(v9);
          objc_msgSend(*(id *)(a1 + 48), "deleteObject:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i));
        }
        v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
      }
      while (v7);
    }
    v5 = v9;
  }
  v12 = v6;

  v13 = *(void **)(a1 + 48);
  v16 = v6;
  v14 = objc_msgSend(v13, "save:", &v16);
  v6 = v16;

  if ((v14 & 1) == 0)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246FC8);
    v15 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "setSettingsDate: save %@", buf, 0xCu);
    }
  }
LABEL_20:

}

void sub_10012B9CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012BB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012BB68(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint8_t v16[8];
  id v17;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v17 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v17));
  v5 = v17;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v7 = v6;
  if (v6 && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data")), v8, v8))
  {
    v10 = objc_opt_class(NSDate, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v12 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v10, v11, 0));
    v13 = *(_QWORD *)(a1[6] + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  else
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100246FE8);
    v15 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "getSettingsDate: no cached data", v16, 2u);
    }
  }

}

void sub_10012BCC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012BDC0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  NSObject *v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  uint8_t buf[4];
  id v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@"), CFSTR("SettingsData"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = *(void **)(a1 + 48);
  if (*(_QWORD *)(a1 + 40))
  {
    v17 = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v17));
    v6 = v17;
    if (objc_msgSend(v5, "count"))
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
      if (!v7)
      {

        goto LABEL_20;
      }
    }
    else
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), *(_QWORD *)(a1 + 48)));
      objc_msgSend(v7, "setKey:", CFSTR("SettingsData"));
      objc_msgSend(v7, "setApplication:", *(_QWORD *)(a1 + 32));
    }
    objc_msgSend(v7, "setData:", *(_QWORD *)(a1 + 40));
    v9 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v7, "setUpdated:", v9);
  }
  else
  {
    v22 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v22));
    v6 = v22;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v9 = v8;
    v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
    if (v7)
    {
      v10 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v19 != v10)
            objc_enumerationMutation(v9);
          objc_msgSend(*(id *)(a1 + 48), "deleteObject:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i));
        }
        v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
      }
      while (v7);
    }
    v5 = v9;
  }
  v12 = v6;

  v13 = *(void **)(a1 + 48);
  v16 = v6;
  v14 = objc_msgSend(v13, "save:", &v16);
  v6 = v16;

  if ((v14 & 1) == 0)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100247030);
    v15 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "setSettingsData: save %@", buf, 0xCu);
    }
  }
LABEL_20:

}

void sub_10012C098(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012C218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012C234(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint8_t v13[8];
  id v14;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v14 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v14));
  v5 = v14;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v7 = v6;
  if (v6 && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data")), v8, v8))
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v10 = *(_QWORD *)(a1[6] + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

  }
  else
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100247050);
    v12 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "getSettingsData: no cached data", v13, 2u);
    }
  }

}

void sub_10012C354(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012C53C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012C56C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  NSObject *v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  uint8_t buf[4];
  id v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@"), CFSTR("SettingsNumber"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = *(void **)(a1 + 48);
  if (*(_QWORD *)(a1 + 40))
  {
    v17 = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v17));
    v6 = v17;
    if (objc_msgSend(v5, "count"))
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
      if (!v7)
      {

        goto LABEL_20;
      }
    }
    else
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), *(_QWORD *)(a1 + 48)));
      objc_msgSend(v7, "setKey:", CFSTR("SettingsNumber"));
      objc_msgSend(v7, "setApplication:", *(_QWORD *)(a1 + 32));
    }
    objc_msgSend(v7, "setData:", *(_QWORD *)(a1 + 56));
    v9 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v7, "setUpdated:", v9);
  }
  else
  {
    v22 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v22));
    v6 = v22;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v9 = v8;
    v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
    if (v7)
    {
      v10 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v19 != v10)
            objc_enumerationMutation(v9);
          objc_msgSend(*(id *)(a1 + 48), "deleteObject:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i));
        }
        v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
      }
      while (v7);
    }
    v5 = v9;
  }
  v12 = v6;

  v13 = *(void **)(a1 + 48);
  v16 = v6;
  v14 = objc_msgSend(v13, "save:", &v16);
  v6 = v16;

  if ((v14 & 1) == 0)
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_100247090);
    v15 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "setSettingsNumber: save %@", buf, 0xCu);
    }
  }
LABEL_20:

}

void sub_10012C844(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012C9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012C9E0(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint8_t v16[8];
  id v17;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v17 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v17));
  v5 = v17;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v7 = v6;
  if (v6 && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data")), v8, v8))
  {
    v10 = objc_opt_class(NSNumber, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v12 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v10, v11, 0));
    v13 = *(_QWORD *)(a1[6] + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  else
  {
    if (qword_1002A7688 != -1)
      dispatch_once(&qword_1002A7688, &stru_1002470B0);
    v15 = qword_1002A7690;
    if (os_log_type_enabled((os_log_t)qword_1002A7690, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "getSettingsNumber: no cached data", v16, 2u);
    }
  }

}

void sub_10012CB40(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7690;
  qword_1002A7690 = (uint64_t)v1;

}

void sub_10012DBFC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012DEE8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012E0FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F058(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F088(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F0B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F0E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F588(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

void sub_10012F5B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76A0;
  qword_1002A76A0 = (uint64_t)v1;

}

id sub_10012F9FC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "deviceIDHash"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deviceIdHash"));

  v6 = objc_msgSend(v4, "isEqualToData:", v5);
  return v6;
}

BOOL sub_10013196C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clientDataHash"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "clientDataHash"));
  if (objc_msgSend(v4, "isEqual:", v5))
  {
    v6 = objc_msgSend(*(id *)(a1 + 32), "applicationVersion");
    v7 = v6 == objc_msgSend(v3, "appVersion");
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_100132010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100132034(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  void *v14;
  void *v15;
  id v16;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v8 = WeakRetained;
  if (v6)
  {
    objc_msgSend(WeakRetained, "setError:", v6);
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "operationQueue"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "finishedOp"));
    objc_msgSend(v9, "addOperation:", v10);
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "smDataStore"));
    v16 = 0;
    v13 = objc_msgSend(v12, "storeIDMSDeviceList:error:", v5, &v16);
    v9 = v16;

    if ((v13 & 1) != 0)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "intendedState"));
      objc_msgSend(v8, "setNextState:", v14);

    }
    else
    {
      objc_msgSend(v8, "setError:", v9);
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "operationQueue"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "finishedOp"));
    objc_msgSend(v10, "addOperation:", v15);

  }
}

void sub_100132474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100132498(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState"));
  objc_msgSend(WeakRetained, "setNextState:", v1);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
  objc_msgSend(v2, "addOperation:", v3);

}

void sub_100132BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100132C00(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100132C10(uint64_t a1)
{

}

void sub_100132C18(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchServerRpcById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v5);
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(id *)(v7 + 40);
  v8 = objc_msgSend(v6, "persistWithError:", &v12);
  objc_storeStrong((id *)(v7 + 40), v12);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v8;
  v9 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

}

void sub_100132CF0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  if (qword_1002A76A8 != -1)
    dispatch_once(&qword_1002A76A8, &stru_100247240);
  v2 = qword_1002A76B0;
  if (os_log_type_enabled((os_log_t)qword_1002A76B0, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v5 = 138412546;
    v6 = v3;
    v7 = 2112;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to delete server rpc for UUID %@: %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100132DCC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_1001331F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100133214(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  id obj;
  uint8_t buf[4];
  uint64_t v18;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchServerRpcById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40)));
  v7 = *(_QWORD *)(a1[7] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "rpcId"));
    v10 = objc_msgSend(v9, "isEqual:", a1[5]);

    if (v10)
    {
      (*(void (**)(void))(a1[6] + 16))();
      *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
    }
  }
  else
  {
    v11 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDatabase, -330, CFSTR("no server rpc found for %@"), a1[5]));
    v12 = *(_QWORD *)(a1[7] + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    if (qword_1002A76A8 != -1)
      dispatch_once(&qword_1002A76A8, &stru_100247260);
    v14 = qword_1002A76B0;
    if (os_log_type_enabled((os_log_t)qword_1002A76B0, OS_LOG_TYPE_INFO))
    {
      v15 = a1[5];
      *(_DWORD *)buf = 138543362;
      v18 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "no server rpc found for rpcId %{public}@", buf, 0xCu);
    }
  }

}

void sub_1001333DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100133558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100133570(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id obj;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  id v15;
  __int16 v16;
  uint64_t v17;

  v3 = a2;
  objc_msgSend(v3, "setState:", 0);
  objc_msgSend(v3, "setFailure:", a1[4]);
  if (qword_1002A76A8 != -1)
    dispatch_once(&qword_1002A76A8, &stru_1002472A8);
  v4 = (void *)qword_1002A76B0;
  if (os_log_type_enabled((os_log_t)qword_1002A76B0, OS_LOG_TYPE_ERROR))
  {
    v5 = v4;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rpcId"));
    v7 = objc_msgSend(v3, "rpcType");
    v8 = a1[4];
    *(_DWORD *)buf = 138412802;
    v13 = v6;
    v14 = 2048;
    v15 = v7;
    v16 = 2112;
    v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "ServerRPC failed. rpcId: %@, rpcType: %lld -- %@", buf, 0x20u);

  }
  v9 = (void *)a1[5];
  v10 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v10 + 40);
  objc_msgSend(v9, "persistWithError:", &obj);
  objc_storeStrong((id *)(v10 + 40), obj);

}

void sub_1001336C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_1001338A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001338BC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id obj;
  uint8_t buf[4];
  id v15;
  __int16 v16;
  id v17;
  __int16 v18;
  id v19;

  v3 = a2;
  objc_msgSend(v3, "setResponse:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v3, "setResponseStatus:", objc_msgSend(*(id *)(a1 + 40), "integerValue"));
  objc_msgSend(v3, "setUsedReversePush:", *(unsigned __int8 *)(a1 + 72));
  objc_msgSend(v3, "setServerHint:", *(_QWORD *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
  objc_msgSend(v3, "setResponseTime:", v4);

  if ((objc_msgSend(*(id *)(a1 + 40), "isEqualToNumber:", &off_10025BF08) & 1) != 0
    || objc_msgSend(*(id *)(a1 + 40), "isEqualToNumber:", &off_10025BF20))
  {
    objc_msgSend(v3, "setState:", 1);
    if (qword_1002A76A8 != -1)
      dispatch_once(&qword_1002A76A8, &stru_1002472F0);
    v5 = (void *)qword_1002A76B0;
    if (os_log_type_enabled((os_log_t)qword_1002A76B0, OS_LOG_TYPE_DEFAULT))
    {
      v6 = v5;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rpcId"));
      *(_DWORD *)buf = 138412546;
      v15 = v7;
      v16 = 2048;
      v17 = objc_msgSend(v3, "rpcType");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ServerRPC succeeded. rpcId: %@, rpcType: %lld", buf, 0x16u);

LABEL_11:
    }
  }
  else
  {
    objc_msgSend(v3, "setState:", 0);
    if (qword_1002A76A8 != -1)
      dispatch_once(&qword_1002A76A8, &stru_100247310);
    v8 = (void *)qword_1002A76B0;
    if (os_log_type_enabled((os_log_t)qword_1002A76B0, OS_LOG_TYPE_ERROR))
    {
      v6 = v8;
      v9 = objc_msgSend(v3, "responseStatus");
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rpcId"));
      *(_DWORD *)buf = 134218498;
      v15 = v9;
      v16 = 2112;
      v17 = v10;
      v18 = 2048;
      v19 = objc_msgSend(v3, "rpcType");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "ServerRPC failed. responseStatus: %lld, rpcId: %@, rpcType: %lld", buf, 0x20u);

      goto LABEL_11;
    }
  }
  v11 = *(void **)(a1 + 56);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v12 + 40);
  objc_msgSend(v11, "persistWithError:", &obj);
  objc_storeStrong((id *)(v12 + 40), obj);

}

void sub_100133B4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100133B7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100133DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100133DC0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100133DF0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("RPCSingleQuery")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("uri == %@ && application == %@ && requestTime > %@ && state == %@"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), &off_10025BF38));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("requestTime"), 0));
  v12 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
  objc_msgSend(v2, "setSortDescriptors:", v5);

  objc_msgSend(v2, "setResultType:", 2);
  objc_msgSend(v2, "setFetchLimit:", 1);
  objc_msgSend(v2, "setPropertiesToFetch:", &off_10025C6B8);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "context"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v2, *(_QWORD *)(a1 + 72)));

  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", *(_QWORD *)(a1 + 72));
  if (v7 && objc_msgSend(v7, "count"))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectAtIndexedSubscript:", 0));
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("rpcId")));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

  }
}

void sub_1001340E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100134100(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  void *v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("RPCBatchQuery")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@ && requestTime > %@ && state == %@"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), &off_10025BF38));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("requestTime"), 0));
  v23 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
  objc_msgSend(v2, "setSortDescriptors:", v5);

  objc_msgSend(v2, "setResultType:", 2);
  objc_msgSend(v2, "setPropertiesToFetch:", &off_10025C6D0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v2, *(_QWORD *)(a1 + 72)));

  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", *(_QWORD *)(a1 + 72));
  if (v7 && objc_msgSend(v7, "count"))
  {
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v8 = v7;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v19;
      while (2)
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(_QWORD *)v19 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("uris")));
          if (objc_msgSend(v14, "containsObject:", *(_QWORD *)(a1 + 56)))
          {
            v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("rpcId")));
            v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
            v17 = *(void **)(v16 + 40);
            *(_QWORD *)(v16 + 40) = v15;

            goto LABEL_13;
          }

        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
        if (v10)
          continue;
        break;
      }
    }
LABEL_13:

  }
}

void sub_100134594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1001345C0(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("RPCSingleQuery")));
  objc_msgSend(*(id *)(a1 + 32), "serverRPCTimeoutSeconds");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", -v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("uri == %@ && application == %@ && state == %@ && requestTime > %@"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), &off_10025BF50, v4));
  objc_msgSend(v2, "setPredicate:", v5);

  objc_msgSend(v2, "setResultType:", 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v7 + 40);
  v8 = objc_msgSend(v6, "countForFetchRequest:error:", v2, &obj);
  objc_storeStrong((id *)(v7 + 40), obj);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v8;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v10 = *(id *)(v9 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v10);
  objc_storeStrong((id *)(v9 + 40), v10);

}

void sub_100134700(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100134940(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100134970(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100134A88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

void sub_100134C38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A76B0;
  qword_1002A76B0 = (uint64_t)v1;

}

id QueryRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[QueryRequest descriptor](QueryRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetQueryRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[QueryRequest descriptor](QueryRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id QueryRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[QueryRequest descriptor](QueryRequest, "descriptor"), "fieldWithNumber:", 2));
}

id SetQueryRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[QueryRequest descriptor](QueryRequest, "descriptor"), "fieldWithNumber:", 2), a2);
}

id QueryResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[QueryResponse descriptor](QueryResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetQueryResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[QueryResponse descriptor](QueryResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id BatchQueryRequest_Version_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchQueryRequest descriptor](BatchQueryRequest, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchQueryRequest_Version_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchQueryRequest descriptor](BatchQueryRequest, "descriptor"), "fieldWithNumber:", 1), a2);
}

id BatchQueryRequest_Application_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchQueryRequest descriptor](BatchQueryRequest, "descriptor"), "fieldWithNumber:", 2));
}

id SetBatchQueryRequest_Application_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchQueryRequest descriptor](BatchQueryRequest, "descriptor"), "fieldWithNumber:", 2), a2);
}

id BatchQueryResponse_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchQueryResponse descriptor](BatchQueryResponse, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchQueryResponse_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchQueryResponse descriptor](BatchQueryResponse, "descriptor"), "fieldWithNumber:", 1), a2);
}

id BatchQueryInfo_Status_RawValue(uint64_t a1)
{
  return sub_100108DE0(a1, objc_msgSend(+[BatchQueryInfo descriptor](BatchQueryInfo, "descriptor"), "fieldWithNumber:", 1));
}

id SetBatchQueryInfo_Status_RawValue(_QWORD *a1, int a2)
{
  return sub_100108DE4(a1, (uint64_t)objc_msgSend(+[BatchQueryInfo descriptor](BatchQueryInfo, "descriptor"), "fieldWithNumber:", 1), a2);
}

void sub_1001352B0(id a1)
{
  uint64_t v1;

  v1 = xpc_transaction_exit_clean(a1);
  xpc_transaction_try_exit_clean(v1);
}

id sub_10013561C(uint64_t a1)
{
  uint8_t v3[16];

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Received signal SIGTERM. Will terminate when clean.", v3, 2u);
  }
  return objc_msgSend(*(id *)(a1 + 32), "signalEventHander");
}

uint64_t sub_100135794(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001360FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);
  _Unwind_Resume(a1);
}

void sub_100136150(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136180(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_1001361B0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  unsigned int v32;
  NSObject *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  NSObject *v50;
  NSObject *v51;
  void *v52;
  NSObject *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  NSObject *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  _UNKNOWN **v75;
  id v76;
  unsigned int v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  uint64_t v83;
  id v84;
  _QWORD v85[5];
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  id v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint8_t buf[4];
  id v98;
  __int16 v99;
  void *v100;
  _BYTE v101[128];

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "logger"));
    objc_msgSend(v8, "logResultForEvent:hardFailure:result:", CFSTR("KTEnrollFetch"), 1, v6);

    objc_msgSend(*(id *)(a1 + 32), "setError:", v6);
  }
  else
  {
    if (qword_1002A7710 != -1)
      dispatch_once(&qword_1002A7710, &stru_100247510);
    v9 = &unk_1002A7000;
    v10 = (void *)qword_1002A7718;
    if (os_log_type_enabled((os_log_t)qword_1002A7718, OS_LOG_TYPE_DEFAULT))
    {
      v11 = v10;
      *(_DWORD *)buf = 67109120;
      LODWORD(v98) = objc_msgSend(v5, "count");
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Processing %d registrations requests", buf, 8u);

    }
    v95 = 0u;
    v96 = 0u;
    v93 = 0u;
    v94 = 0u;
    v76 = v5;
    v12 = v5;
    v84 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v93, v101, 16);
    if (v84)
    {
      v83 = *(_QWORD *)v94;
      v81 = v12;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v94 != v83)
            objc_enumerationMutation(v12);
          v14 = *(void **)(*((_QWORD *)&v93 + 1) + 8 * (_QWORD)v13);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v14));
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tbsKTIDSRegistrationData"));

          if (v16)
          {
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));

            if (v17)
            {
              if (qword_1002A7710 != -1)
                dispatch_once(&qword_1002A7710, &stru_100247550);
              v18 = *((_QWORD *)v9 + 227);
              if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
              {
                v19 = v18;
                v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));
                v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "kt_hexString"));
                *(_DWORD *)buf = 138412290;
                v98 = v21;
                _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Adding device to set: %@", buf, 0xCu);

              }
              v22 = *(void **)(a1 + 40);
              v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));
              v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tbsKTIDSRegistrationData"));
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "addDevice:registationData:app:", v23, v24, v14));

            }
            v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
            v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "accountKeyService"));
            v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "accountKeyService:", v27));

            if (v28)
            {
              v92 = 0;
              v82 = v28;
              v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "publicPublicKey:", &v92));
              v30 = v92;
              if (v29)
              {
                v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsRegistrationInterface"));
                v32 = objc_msgSend(v31, "isKTKeyDifferent:", v29);

                if (v32)
                {
                  if (qword_1002A7710 != -1)
                    dispatch_once(&qword_1002A7710, &stru_1002475B0);
                  v33 = *((_QWORD *)v9 + 227);
                  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "isKTKeyDifferent, forcing update", buf, 2u);
                  }
                  objc_msgSend(*(id *)(a1 + 32), "setForceUpdate:", 1);
                }
                v80 = v30;
                v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
                v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "accountKeyService"));
                v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "validateSignature:withPublicKey:", v35, v29));

                if (v36)
                {
                  if (qword_1002A7710 != -1)
                    dispatch_once(&qword_1002A7710, &stru_1002475D0);
                  v37 = v82;
                  v38 = *((_QWORD *)v9 + 227);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                  {
                    v39 = v38;
                    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
                    *(_DWORD *)buf = 138412546;
                    v98 = v40;
                    v99 = 2112;
                    v100 = v36;
                    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "Performing signing of data in %@ for reason: %@", buf, 0x16u);

                  }
                  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tbsKTIDSRegistrationData"));
                  v85[0] = _NSConcreteStackBlock;
                  v85[1] = 3221225472;
                  v85[2] = sub_100136DCC;
                  v85[3] = &unk_100247638;
                  v85[4] = *(_QWORD *)(a1 + 32);
                  v86 = v15;
                  v87 = *(id *)(a1 + 48);
                  v88 = *(id *)(a1 + 56);
                  v89 = *(id *)(a1 + 64);
                  v42 = v17;
                  v43 = *(_QWORD *)(a1 + 72);
                  v90 = v42;
                  v91 = v43;
                  objc_msgSend(v82, "signData:completionBlock:", v41, v85);

                }
                else
                {
                  v60 = *(void **)(a1 + 32);
                  v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
                  objc_msgSend(v60, "recordKeyState:application:", 1, v61);

                  objc_msgSend(v17, "markedSigned");
                  v62 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));
                  if (v62)
                  {
                    v63 = (void *)v62;
                    v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
                    v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "cloudRecords"));
                    v79 = v29;
                    v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));
                    v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tbsKTIDSRegistrationData"));
                    v77 = objc_msgSend(v64, "cloudDeviceNeedUpdateWithPushToken:tbsRegistrationData:", v65, v66);

                    v29 = v79;
                    if (v77)
                    {
                      if (qword_1002A7710 != -1)
                        dispatch_once(&qword_1002A7710, &stru_100247658);
                      v67 = (void *)qword_1002A7718;
                      if (os_log_type_enabled((os_log_t)qword_1002A7718, OS_LOG_TYPE_INFO))
                      {
                        v68 = v67;
                        v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pushToken"));
                        v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "kt_hexString"));
                        *(_DWORD *)buf = 138412546;
                        v98 = v14;
                        v99 = 2112;
                        v100 = v70;
                        _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_INFO, "Service (%@) need update %@", buf, 0x16u);

                      }
                      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
                    }
                  }
                  v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "uploadedAt"));

                  v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
                  v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "logger"));
                  v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("TBS-%@-%@"), CFSTR("c"), v14));
                  if (v71)
                    v75 = &off_10025BF68;
                  else
                    v75 = &off_10025BF80;
                  objc_msgSend(v73, "setNumberProperty:forKey:", v75, v74);

                  v9 = &unk_1002A7000;
                  v37 = v82;
                }
                v58 = v80;
              }
              else
              {
                if (qword_1002A7710 != -1)
                  dispatch_once(&qword_1002A7710, &stru_100247590);
                v37 = v82;
                v53 = *((_QWORD *)v9 + 227);
                if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  v98 = v30;
                  _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_ERROR, "publicPublicKey failed: %@", buf, 0xCu);
                }
                objc_msgSend(v15, "setError:", v30);
                objc_msgSend(*(id *)(a1 + 48), "addObject:", v15);
                objc_msgSend(*(id *)(a1 + 32), "setError:", v30);
                v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
                v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "lockStateTracker"));
                objc_msgSend(v55, "isLockedError:", v30);

                v56 = *(void **)(a1 + 32);
                v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
                objc_msgSend(v56, "recordKeyState:application:", 3, v57);

                v58 = v30;
                v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
                v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "logger"));
                objc_msgSend(v59, "logResultForEvent:hardFailure:result:", CFSTR("KTValidateEnrollPublicKey"), 1, v58);

              }
              v12 = v81;
            }
            else
            {
              v48 = *(void **)(a1 + 32);
              v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
              objc_msgSend(v48, "recordKeyState:application:", 2, v49);

              if (qword_1002A7710 != -1)
                dispatch_once(&qword_1002A7710, &stru_100247570);
              v12 = v81;
              v37 = 0;
              v50 = *((_QWORD *)v9 + 227);
              if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
              {
                v51 = v50;
                v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
                *(_DWORD *)buf = 138412290;
                v98 = v52;
                _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_ERROR, "No key server for %@", buf, 0xCu);

              }
            }

          }
          else
          {
            if (qword_1002A7710 != -1)
              dispatch_once(&qword_1002A7710, &stru_100247530);
            v44 = *((_QWORD *)v9 + 227);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
            {
              v45 = v44;
              v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
              *(_DWORD *)buf = 138412290;
              v98 = v46;
              _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_ERROR, "No registration data for %@", buf, 0xCu);

            }
            v47 = *(void **)(a1 + 32);
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "application"));
            objc_msgSend(v47, "recordKeyState:application:", 5, v17);
          }

          v13 = (char *)v13 + 1;
        }
        while (v84 != v13);
        v84 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v93, v101, 16);
      }
      while (v84);
    }

    v6 = 0;
    v5 = v76;
  }

}

void sub_100136C7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136CAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136CDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136D0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136D3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136D6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136D9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100136DCC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  id v25;
  __int16 v26;
  void *v27;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  if (v12)
  {
    if (qword_1002A7710 != -1)
      dispatch_once(&qword_1002A7710, &stru_1002475F0);
    v13 = qword_1002A7718;
    if (os_log_type_enabled((os_log_t)qword_1002A7718, OS_LOG_TYPE_ERROR))
    {
      v24 = 138412290;
      v25 = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "signData failed: %@", (uint8_t *)&v24, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 32), "setError:", v12);
    objc_msgSend(*(id *)(a1 + 40), "setError:", v12);
    objc_msgSend(*(id *)(a1 + 48), "addObject:", *(_QWORD *)(a1 + 40));
    v14 = *(void **)(a1 + 32);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "application"));
    objc_msgSend(v14, "recordKeyState:application:", 6, v15);

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deps"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "logger"));
    objc_msgSend(v17, "logResultForEvent:hardFailure:result:", CFSTR("KTEnrollSign"), 1, v12);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "setSignature:", v10);
    objc_msgSend(*(id *)(a1 + 40), "setPublicKey:", v9);
    objc_msgSend(*(id *)(a1 + 40), "setOrderedTimestamp:", v11);
    objc_msgSend(*(id *)(a1 + 40), "setDsid:", *(_QWORD *)(a1 + 56));
    objc_msgSend(*(id *)(a1 + 40), "setAltDSID:", *(_QWORD *)(a1 + 64));
    if (qword_1002A7710 != -1)
      dispatch_once(&qword_1002A7710, &stru_100247610);
    v18 = (void *)qword_1002A7718;
    if (os_log_type_enabled((os_log_t)qword_1002A7718, OS_LOG_TYPE_INFO))
    {
      v19 = *(void **)(a1 + 40);
      v20 = v18;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "application"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "kt_hexString"));
      v24 = 138412546;
      v25 = v21;
      v26 = 2112;
      v27 = v22;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "New signature for: %@ with key: %@", (uint8_t *)&v24, 0x16u);

    }
    objc_msgSend(*(id *)(a1 + 48), "addObject:", *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 72), "markedSigned");
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
    v23 = *(void **)(a1 + 32);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "application"));
    objc_msgSend(v23, "recordKeyState:application:", 1, v16);
  }

}

void sub_1001370A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_1001370D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100137104(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100137134(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100137164(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v6 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deps"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "logger"));
  objc_msgSend(v5, "logResultForEvent:hardFailure:result:", CFSTR("KTEnrollStore"), 1, v6);

  objc_msgSend(*(id *)(a1 + 32), "setError:", v6);
}

void sub_1001371E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7718;
  qword_1002A7718 = (uint64_t)v1;

}

void sub_100137214(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signatureTracker"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "signaturesComplete"));
  objc_msgSend(v3, "fulfill");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signatureTracker"));
  LODWORD(v3) = objc_msgSend(v4, "shouldPokeIDSUponSigning");

  if ((_DWORD)v3)
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsRegistrationInterface"));
    objc_msgSend(v5, "triggerRegistrationDataNeedsUpdate:", CFSTR("updated"));

  }
}

void sub_1001376B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001376DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_10013770C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  uint8_t v4[16];

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Retrying CK account state fetch", v4, 2u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = objc_msgSend(WeakRetained, "notifyCKAccountStatusChange:", 0);

}

void sub_100137A2C(id *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  id v8;
  const char *v9;
  dispatch_queue_attr_t v10;
  NSObject *v11;
  dispatch_queue_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  void *v20;
  dispatch_group_t v21;
  NSObject *v22;
  NSObject *v23;
  NSObject *v24;
  _QWORD block[4];
  id v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ckChangeListeners"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectEnumerator"));

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextObject"));
  if (v4)
  {
    v5 = (id)v4;
    v6 = 0;
    do
    {
      v6 |= v5 == a1[5];
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextObject"));

      v5 = (id)v7;
    }
    while (v7);
  }
  else
  {
    v6 = 0;
  }
  if (a1[5] && (v6 & 1) == 0)
  {
    v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("ck-account-state-%@"), a1[5])));
    v9 = (const char *)objc_msgSend(v8, "UTF8String");
    v10 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    v12 = dispatch_queue_create(v9, v11);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ckChangeListeners"));
    objc_msgSend(v13, "setObject:forKey:", a1[5], v12);

    if (qword_1002A7720 != -1)
      dispatch_once(&qword_1002A7720, &stru_100247728);
    v14 = qword_1002A7728;
    if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
    {
      v15 = a1[5];
      *(_DWORD *)buf = 138412290;
      v28 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "adding a new listener: %@", buf, 0xCu);
    }
    if (objc_msgSend(a1[4], "firstCKAccountFetch"))
    {
      if (qword_1002A7720 != -1)
        dispatch_once(&qword_1002A7720, &stru_100247748);
      v16 = (void *)qword_1002A7728;
      if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
      {
        v17 = a1[4];
        v18 = a1[5];
        v19 = v16;
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "currentCKAccountInfo"));
        *(_DWORD *)buf = 138412546;
        v28 = v18;
        v29 = 2112;
        v30 = v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "notifying new listener %@ of current state %@", buf, 0x16u);

      }
      v21 = dispatch_group_create();
      if (v21)
      {
        v22 = v21;
        objc_msgSend(a1[4], "_onqueueDeliverCurrentCloudKitState:listenerQueue:oldStatus:group:", a1[5], v12, 0, v21);
        v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "queue"));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100137E44;
        block[3] = &unk_10023A390;
        v26 = a1[6];
        dispatch_group_notify(v22, v23, block);

LABEL_25:
        goto LABEL_26;
      }
      if (qword_1002A7720 != -1)
        dispatch_once(&qword_1002A7720, &stru_100247768);
      v24 = qword_1002A7728;
      if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Unable to get dispatch group.", buf, 2u);
      }
    }
    dispatch_semaphore_signal((dispatch_semaphore_t)a1[6]);
    goto LABEL_25;
  }
  dispatch_semaphore_signal((dispatch_semaphore_t)a1[6]);
LABEL_26:

}

void sub_100137DB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100137DE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100137E14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

intptr_t sub_100137E44(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100138004(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_100138030(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _QWORD block[5];
  id v18;
  id v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  id v23;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = WeakRetained;
  if (v6)
  {
    if (qword_1002A7720 != -1)
      dispatch_once(&qword_1002A7720, &stru_100247788);
    v9 = (void *)qword_1002A7728;
    if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
    {
      v10 = v9;
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "container"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "options"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "accountOverrideInfo"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "altDSID"));
      *(_DWORD *)buf = 138412546;
      v21 = v14;
      v22 = 2112;
      v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "error getting account info(altDSID: %@): %@", buf, 0x16u);

    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fetchCKAccountStatusScheduler"));
    objc_msgSend(v15, "trigger");

    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }
  else
  {
    v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100138268;
    block[3] = &unk_10023D398;
    block[4] = v8;
    v18 = v5;
    v19 = *(id *)(a1 + 32);
    dispatch_async(v16, block);

  }
}

void sub_100138238(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

id sub_100138268(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  int v11;
  void *v12;
  __int16 v13;
  uint64_t v14;

  objc_msgSend(*(id *)(a1 + 32), "setFirstCKAccountFetch:", 1);
  if (qword_1002A7720 != -1)
    dispatch_once(&qword_1002A7720, &stru_1002477A8);
  v2 = (void *)qword_1002A7728;
  if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "container"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "options"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "accountOverrideInfo"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "altDSID"));
    v9 = *(_QWORD *)(a1 + 40);
    v11 = 138412546;
    v12 = v8;
    v13 = 2112;
    v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "received CK Account info(altDSID: %@): %@", (uint8_t *)&v11, 0x16u);

  }
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueUpdateAccountState:deliveredSemaphore:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1001383B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_1001383E8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (v3)
  {
    if (qword_1002A7720 != -1)
      dispatch_once(&qword_1002A7720, &stru_1002477F0);
    v6 = (void *)qword_1002A7728;
    if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
    {
      v7 = v6;
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "container"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "options"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "accountOverrideInfo"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "altDSID"));
      v14 = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "error reloading account info(altDSID: %@): %@", (uint8_t *)&v14, 0x16u);

    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fetchCKAccountStatusScheduler"));
    objc_msgSend(v12, "trigger");

    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "container"));
    objc_msgSend(v13, "accountInfoWithCompletionHandler:", *(_QWORD *)(a1 + 40));

  }
}

void sub_100138580(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100138704(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

intptr_t sub_100138734(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100138A4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100138A7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100138CB4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentCKAccountInfo"));
  objc_msgSend(WeakRetained, "cloudkitAccountStateChange:to:", v2, v3);

}

void sub_100138ED8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100138F08(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  __int128 v5;
  NSObject *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  __int128 v12;
  _QWORD block[4];
  id v14;
  _BYTE buf[24];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ckChangeListeners"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "keyEnumerator"));

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextObject"));
  if (v4)
  {
    v6 = v4;
    *(_QWORD *)&v5 = 138412290;
    v12 = v5;
    do
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ckChangeListeners", v12));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v6));

      if (qword_1002A7720 != -1)
        dispatch_once(&qword_1002A7720, &stru_1002478B8);
      v9 = qword_1002A7728;
      if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = v12;
        *(_QWORD *)&buf[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Starting blocking for listener %@", buf, 0xCu);
      }
      *(_QWORD *)buf = 0;
      objc_initWeak((id *)buf, v8);
      v10 = *(NSObject **)(a1 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100139120;
      block[3] = &unk_10023A970;
      objc_copyWeak(&v14, (id *)buf);
      dispatch_group_async(v10, v6, block);
      objc_destroyWeak(&v14);
      objc_destroyWeak((id *)buf);

      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextObject"));
      v6 = v11;
    }
    while (v11);
  }

}

void sub_1001390F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

void sub_100139120(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  int v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (qword_1002A7720 != -1)
    dispatch_once(&qword_1002A7720, &stru_1002478D8);
  v2 = qword_1002A7728;
  if (os_log_type_enabled((os_log_t)qword_1002A7728, OS_LOG_TYPE_INFO))
  {
    v3 = 138412290;
    v4 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Done blocking for listener %@", (uint8_t *)&v3, 0xCu);
  }

}

void sub_1001391F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7728;
  qword_1002A7728 = (uint64_t)v1;

}

unint64_t sub_1001396D8(unint64_t result)
{
  unint64_t v1;
  BOOL v2;

  if (result)
  {
    v1 = result;
    result = 0;
    do
    {
      ++result;
      v2 = v1 > 0xFF;
      v1 >>= 8;
    }
    while (v2);
  }
  return result;
}

unsigned __int8 *sub_1001396FC(unint64_t a1, unsigned __int8 *a2, unint64_t a3, unint64_t *a4)
{
  unint64_t v4;
  BOOL v5;
  unsigned __int8 *result;
  unint64_t v7;
  unsigned __int8 *v8;
  unint64_t v9;
  unsigned int v10;

  v4 = 0;
  if (a1)
  {
    do
    {
      ++v4;
      v5 = a1 > 0xFF;
      a1 >>= 8;
    }
    while (v5);
  }
  result = 0;
  if (a3 >= (unint64_t)a2 && a2 && a3 && a3 - (unint64_t)a2 >= v4)
  {
    v7 = 0;
    if (v4)
    {
      v8 = a2;
      v9 = v4;
      do
      {
        v10 = *v8++;
        v7 = v10 | (v7 << 8);
        --v9;
      }
      while (v9);
    }
    if (a4)
      *a4 = v7;
    return &a2[v4];
  }
  return result;
}

void sub_10013A210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013A23C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7738;
  qword_1002A7738 = (uint64_t)v1;

}

void sub_10013A26C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  id v39;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (qword_1002A7730 != -1)
    dispatch_once(&qword_1002A7730, &stru_100247918);
  v8 = (void *)qword_1002A7738;
  if (os_log_type_enabled((os_log_t)qword_1002A7738, OS_LOG_TYPE_DEFAULT))
  {
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "uri"));
    *(_DWORD *)buf = 141558530;
    v35 = 1752392040;
    v36 = 2112;
    v37 = v10;
    v38 = 2112;
    v39 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FetchKTSelf: fetched %{mask.hash}@: %@", buf, 0x20u);

  }
  objc_msgSend(WeakRetained, "setQueryResponse:", v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queryResponse"));

  if (v6 || !v11)
  {
    if (!v6)
      v6 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorNetwork, -344, 0, CFSTR("FetchQuery data missing, and no error")));
    if (qword_1002A7730 != -1)
      dispatch_once(&qword_1002A7730, &stru_100247938);
    v27 = (void *)qword_1002A7738;
    if (os_log_type_enabled((os_log_t)qword_1002A7738, OS_LOG_TYPE_ERROR))
    {
      v28 = v27;
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "uri"));
      *(_DWORD *)buf = 141558530;
      v35 = 1752392040;
      v36 = 2112;
      v37 = v29;
      v38 = 2114;
      v39 = v6;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "FetchKTSelf: no query response for %{mask.hash}@: %{public}@", buf, 0x20u);

    }
    objc_msgSend(WeakRetained, "setError:", v6);
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
    objc_msgSend(v26, "addOperation:", v24);
  }
  else
  {
    v32 = v5;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "metadata"));
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "smDataStore"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queryRequest"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "data"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queryResponse"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "data"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "uri"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "application"));
    v33 = 0;
    v31 = (void *)v13;
    LOBYTE(v13) = objc_msgSend(v14, "storeQueryRequest:queryResponse:serverHint:uri:application:error:", v16, v18, v13, v19, v20, &v33);
    v6 = v33;

    if ((v13 & 1) == 0)
    {
      if (qword_1002A7730 != -1)
        dispatch_once(&qword_1002A7730, &stru_100247958);
      v21 = (void *)qword_1002A7738;
      if (os_log_type_enabled((os_log_t)qword_1002A7738, OS_LOG_TYPE_ERROR))
      {
        v22 = v21;
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "uri"));
        *(_DWORD *)buf = 141558530;
        v35 = 1752392040;
        v36 = 2112;
        v37 = v23;
        v38 = 2112;
        v39 = v6;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "FetchKTSelf: failed to store KT response for %{mask.hash}@: %@", buf, 0x20u);

      }
      objc_msgSend(WeakRetained, "setError:", v6);
    }
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
    objc_msgSend(v24, "addOperation:", v25);

    v26 = v31;
    v5 = v32;
  }

}

void sub_10013A6F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7738;
  qword_1002A7738 = (uint64_t)v1;

}

void sub_10013A728(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7738;
  qword_1002A7738 = (uint64_t)v1;

}

void sub_10013A758(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7738;
  qword_1002A7738 = (uint64_t)v1;

}

void sub_1001407CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001407F0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100140800(uint64_t a1)
{

}

void sub_100140808(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  KTLoggableDataArray *v6;
  KTLoggableDataArray *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  unsigned __int8 v43;
  void *v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("IDSKTVerification"), v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
  objc_msgSend(v3, "setCreationTime:", v4);

  objc_msgSend(v3, "setUri:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "setApplication:", *(_QWORD *)(a1 + 48));
  objc_msgSend(v3, "setAccountKey:", *(_QWORD *)(a1 + 56));
  objc_msgSend(v3, "setUnsigned:value:", "idsOptedIn", *(_QWORD *)(a1 + 112));
  if (*(_QWORD *)(a1 + 64))
  {
    objc_msgSend(v3, "setIdsResponseTime:");
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "creationTime"));
    objc_msgSend(v3, "setIdsResponseTime:", v5);

  }
  v6 = -[KTLoggableDataArray initWithLoggableDatas:]([KTLoggableDataArray alloc], "initWithLoggableDatas:", *(_QWORD *)(a1 + 72));
  objc_msgSend(v3, "setServerLoggableDatas:", v6);

  objc_msgSend(v3, "setUnsigned:value:", "type", *(_QWORD *)(a1 + 120));
  if (*(_QWORD *)(a1 + 80))
  {
    v7 = -[KTLoggableDataArray initWithLoggableDatas:]([KTLoggableDataArray alloc], "initWithLoggableDatas:", *(_QWORD *)(a1 + 80));
    objc_msgSend(v3, "setSyncedLoggableDatas:", v7);

  }
  if (*(_QWORD *)(a1 + 88))
  {
    objc_msgSend(v3, "setVerificationId:");
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
    objc_msgSend(v3, "setVerificationId:", v8);

  }
  v9 = *(void **)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "verificationId"));
  objc_msgSend(v9, "createIDSVerificationID:verification:", v10, v3);

  v11 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
  obj = *(id *)(v14 + 40);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "fetchPeer:application:error:", v12, v13, &obj));
  objc_storeStrong((id *)(v14 + 40), obj);
  if (!v15)
  {
    v16 = *(void **)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    v18 = *(_QWORD *)(a1 + 48);
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v56 = *(id *)(v19 + 40);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "createPeerState:application:error:", v17, v18, &v56));
    objc_storeStrong((id *)(v19 + 40), v56);
    if (!v15)
    {
      v28 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v20);
      v29 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
      v55 = *(id *)(v29 + 40);
      objc_msgSend(v28, "cleanseError:", &v55);
      v30 = v55;
      v15 = *(void **)(v29 + 40);
      *(_QWORD *)(v29 + 40) = v30;
      goto LABEL_30;
    }
  }
  objc_msgSend(v3, "setPeerState:", v15);
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentVerification"));

  if (v21)
  {
    if (*(_QWORD *)(a1 + 64))
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentVerification"));
      v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "idsResponseTime"));
      if (v23)
      {
        v24 = (void *)v23;
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentVerification"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "idsResponseTime"));
        v27 = objc_msgSend(v26, "compare:", *(_QWORD *)(a1 + 64));

        if (v27 == (id)-1)
          goto LABEL_21;
      }
      else
      {

      }
    }
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentVerification"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "idsResponseTime"));
    if (v32)
    {

      goto LABEL_27;
    }
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentVerification"));
    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "creationTime"));
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "creationTime"));
    v36 = objc_msgSend(v34, "compare:", v35);

    if (v36 != (id)-1)
      goto LABEL_27;
  }
LABEL_21:
  objc_msgSend(v3, "setPeerStateMostRecent:", v15);
  v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentSuccess"));

  if (v37)
  {
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentSuccess"));
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "accountKey"));
    if ((objc_msgSend(v39, "isEqual:", *(_QWORD *)(a1 + 56)) & 1) != 0)
    {
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "mostRecentSuccess"));
      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "serverLoggableDatas"));
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "serverLoggableDatas"));
      v43 = objc_msgSend(v41, "isEqual:", v42);

      if ((v43 & 1) != 0)
        goto LABEL_27;
    }
    else
    {

    }
    objc_msgSend(v15, "setMostRecentSuccess:", 0);
  }
LABEL_27:
  v44 = *(void **)(a1 + 32);
  v45 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
  v54 = *(id *)(v45 + 40);
  v46 = objc_msgSend(v44, "persistWithError:", &v54);
  objc_storeStrong((id *)(v45 + 40), v54);
  if (v46)
  {
    v48 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "verificationId"));
    v49 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
    v50 = *(void **)(v49 + 40);
    *(_QWORD *)(v49 + 40) = v48;

  }
  v51 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v47);
  v52 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
  v53 = *(id *)(v52 + 40);
  objc_msgSend(v51, "cleanseError:", &v53);
  objc_storeStrong((id *)(v52 + 40), v53);
LABEL_30:

}

void sub_100141078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10014109C(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "onMocFetchVerificationForVerificationId:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v7 = (void *)objc_opt_class(a1[4], v6);
  v8 = *(_QWORD *)(a1[7] + 8);
  v9 = *(id *)(v8 + 40);
  objc_msgSend(v7, "cleanseError:", &v9);
  objc_storeStrong((id *)(v8 + 40), v9);
  if (v5)
  {
    (*(void (**)(void))(a1[6] + 16))();
    *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
  }

}

void sub_100141308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100141328(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id obj;
  uint8_t buf[4];
  uint64_t v28;
  _QWORD v29[3];
  _QWORD v30[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = *(void **)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v25 = *(id *)(v8 + 40);
    objc_msgSend(v6, "deleteNonRecentVerificationsForApplication:error:", v7, &v25);
    objc_storeStrong((id *)(v8 + 40), v25);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBatchUpdateRequest batchUpdateRequestWithEntityName:](NSBatchUpdateRequest, "batchUpdateRequestWithEntityName:", CFSTR("IDSKTVerification")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(v9, "setPredicate:", v10);

    v29[0] = CFSTR("verificationResult");
    v29[1] = CFSTR("reported");
    v30[0] = &off_10025BF98;
    v30[1] = &__kCFBooleanFalse;
    v29[2] = CFSTR("failure");
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v30[2] = v11;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v30, v29, 3));
    objc_msgSend(v9, "setPropertiesToUpdate:", v12);

    objc_msgSend(v9, "setResultType:", 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v24 = *(id *)(v14 + 40);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "executeRequest:error:", v9, &v24));
    objc_storeStrong((id *)(v14 + 40), v24);

    v16 = *(void **)(a1 + 32);
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v23 = *(id *)(v17 + 40);
    objc_msgSend(v16, "persistWithError:", &v23);
    objc_storeStrong((id *)(v17 + 40), v23);
    if (!v15)
    {
      if (qword_1002A7740 != -1)
        dispatch_once(&qword_1002A7740, &stru_1002479C8);
      v18 = qword_1002A7748;
      if (os_log_type_enabled((os_log_t)qword_1002A7748, OS_LOG_TYPE_ERROR))
      {
        v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v28 = v19;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "resetVerificationsToPending delete: %@", buf, 0xCu);
      }
    }

  }
  v20 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v21 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v22 = *(id *)(v21 + 40);
  objc_msgSend(v20, "cleanseError:", &v22);
  objc_storeStrong((id *)(v21 + 40), v22);
}

void sub_1001415E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100141610(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_1001418AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1001418D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("uri = %@ && verificationResult == %d && application = %@ && idsResponseTime < %@"), *(_QWORD *)(a1 + 40), 2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("IDSKTVerification")));
    objc_msgSend(v7, "setPredicate:", v6);
    objc_msgSend(v7, "setFetchBatchSize:", *(_QWORD *)(a1 + 88));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v14 = *(id *)(v9 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeFetchRequest:error:", v7, &v14));
    objc_storeStrong((id *)(v9 + 40), v14);

    if (objc_msgSend(v10, "count"))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
    }

  }
  v11 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v13 = *(id *)(v12 + 40);
  objc_msgSend(v11, "cleanseError:", &v13);
  objc_storeStrong((id *)(v12 + 40), v13);
}

void sub_100141A44(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100141BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100141BC8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  id v29;
  id obj;
  _BYTE v31[128];

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("verificationResult == %d && application = %@"), 2, *(_QWORD *)(a1 + 40)));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("IDSKTVerification")));
    v23 = (void *)v6;
    objc_msgSend(v7, "setPredicate:", v6);
    objc_msgSend(v7, "setPropertiesToFetch:", &off_10025C700);
    objc_msgSend(v7, "setReturnsDistinctResults:", 1);
    objc_msgSend(v7, "setResultType:", 2);
    if (*(_QWORD *)(a1 + 64))
      objc_msgSend(v7, "setFetchLimit:");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v29 = *(id *)(v9 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeFetchRequest:error:", v7, &v29));
    objc_storeStrong((id *)(v9 + 40), v29);

    if (v10 && objc_msgSend(v10, "count"))
    {
      v11 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v10, "count")));
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "reverseObjectEnumerator"));
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v26;
      do
      {
        v18 = 0;
        do
        {
          if (*(_QWORD *)v26 != v17)
            objc_enumerationMutation(v14);
          v19 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v18), "objectForKeyedSubscript:", CFSTR("uri")));
          objc_msgSend(v19, "addObject:", v20);

          v18 = (char *)v18 + 1;
        }
        while (v16 != v18);
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
      }
      while (v16);
    }

  }
  v21 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v24 = *(id *)(v22 + 40);
  objc_msgSend(v21, "cleanseError:", &v24);
  objc_storeStrong((id *)(v22 + 40), v24);
}

void sub_100142070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100142094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *i;
  void *v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id obj;
  _BYTE v33[128];
  void *v34;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "accountKey"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@ && type == %d && uri == %@ && creationTime > %@ && accountKey == %@ && allowCacheHit == YES && idsOptedIn == %d"), v2, 0, v3, v4, v5, objc_msgSend(*(id *)(a1 + 56), "optedIn")));

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("IDSKTVerification")));
  objc_msgSend(v7, "setPredicate:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("creationTime"), 0));
  v34 = v8;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v34, 1));
  objc_msgSend(v7, "setSortDescriptors:", v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "context"));
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
  obj = *(id *)(v11 + 40);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "executeFetchRequest:error:", v7, &obj));
  objc_storeStrong((id *)(v11 + 40), obj);

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = v12;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v29;
    while (2)
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(_QWORD *)v29 != v16)
          objc_enumerationMutation(v13);
        v18 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)i);
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "serverLoggableDatas"));
        v20 = objc_msgSend(v19, "isEqual:", *(_QWORD *)(a1 + 72));

        if (v20)
        {
          v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "verificationId"));
          v22 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
          v23 = *(void **)(v22 + 40);
          *(_QWORD *)(v22 + 40) = v21;

          goto LABEL_11;
        }
      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
      if (v15)
        continue;
      break;
    }
  }
LABEL_11:

  v25 = (void *)objc_opt_class(*(_QWORD *)(a1 + 64), v24);
  v26 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
  v27 = *(id *)(v26 + 40);
  objc_msgSend(v25, "cleanseError:", &v27);
  objc_storeStrong((id *)(v26 + 40), v27);

}

void sub_100142608(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100142638(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100142668(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_1001427D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100142B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100142B2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100142B5C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id obj;
  uint8_t buf[4];
  uint64_t v22;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBatchUpdateRequest batchUpdateRequestWithEntityName:](NSBatchUpdateRequest, "batchUpdateRequestWithEntityName:", CFSTR("IDSKTVerification")));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("uri IN %@ && application == %@"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
    objc_msgSend(v6, "setPredicate:", v7);

    objc_msgSend(v6, "setPropertiesToUpdate:", &off_10025C5A8);
    objc_msgSend(v6, "setResultType:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v19 = *(id *)(v9 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeRequest:error:", v6, &v19));
    objc_storeStrong((id *)(v9 + 40), v19);

    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v18 = *(id *)(v12 + 40);
    objc_msgSend(v11, "persistWithError:", &v18);
    objc_storeStrong((id *)(v12 + 40), v18);
    if (!v10)
    {
      if (qword_1002A7740 != -1)
        dispatch_once(&qword_1002A7740, &stru_100247B40);
      v13 = qword_1002A7748;
      if (os_log_type_enabled((os_log_t)qword_1002A7748, OS_LOG_TYPE_ERROR))
      {
        v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v22 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "disableCacheHitsForUris: %@", buf, 0xCu);
      }
    }

  }
  v15 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v17 = *(id *)(v16 + 40);
  objc_msgSend(v15, "cleanseError:", &v17);
  objc_storeStrong((id *)(v16 + 40), v17);
}

void sub_100142D7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_100142DAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_1001431B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_1001431E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7748;
  qword_1002A7748 = (uint64_t)v1;

}

void sub_1001434BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001434E0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001434F0(uint64_t a1)
{

}

void sub_1001434F8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id obj;
  uint8_t buf[4];
  uint64_t v31;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTDeviceRecord")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("deviceId == %@ && (application == %@ || request.application == %@)"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);

  if (v6 && objc_msgSend(v6, "count") == (id)1)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "loggableData"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v27 = *(id *)(v9 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyManagedDataStore deserializeLoggableDatas:error:](TransparencyManagedDataStore, "deserializeLoggableDatas:error:", v8, &v27));
    objc_storeStrong((id *)(v9 + 40), v27);

    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40) && v10 && objc_msgSend(v10, "count") == (id)1)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectAtIndexedSubscript:", 0));
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
    }
    else
    {
      if (qword_1002A7750 != -1)
        dispatch_once(&qword_1002A7750, &stru_100247BE0);
      v19 = qword_1002A7758;
      if (os_log_type_enabled((os_log_t)qword_1002A7758, OS_LOG_TYPE_ERROR))
      {
        v20 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v31 = v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "failed to decode loggable data for %@", buf, 0xCu);
      }
      v21 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDatabase, -303, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), CFSTR("failed to decode loggable data for %@"), *(_QWORD *)(a1 + 32)));
      v22 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v23 = *(void **)(v22 + 40);
      *(_QWORD *)(v22 + 40) = v21;

      v24 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v26 = *(id *)(v24 + 40);
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v26);
      v25 = v26;
      v11 = *(void **)(v24 + 40);
      *(_QWORD *)(v24 + 40) = v25;
    }

  }
  else
  {
    if (qword_1002A7750 != -1)
      dispatch_once(&qword_1002A7750, &stru_100247BC0);
    v12 = qword_1002A7758;
    if (os_log_type_enabled((os_log_t)qword_1002A7758, OS_LOG_TYPE_ERROR))
    {
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v31 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "failed to find device record for %@", buf, 0xCu);
    }
    v14 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDatabase, -302, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), CFSTR("failed to find device record for %@"), *(_QWORD *)(a1 + 32)));
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v28 = *(id *)(v17 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v28);
    v18 = v28;
    v7 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v18;
  }

}

void sub_1001438CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7758;
  qword_1002A7758 = (uint64_t)v1;

}

void sub_1001438FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7758;
  qword_1002A7758 = (uint64_t)v1;

}

void sub_100143DD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100143DF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100143E04(uint64_t a1)
{

}

void sub_100143E0C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  NSUUID *v8;
  void *v9;
  void *v10;
  unint64_t *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id obj;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "createRequest"));
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "setUri:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v3, "setApplication:", *(_QWORD *)(a1 + 48));
    objc_msgSend(v3, "setAccountKey:", *(_QWORD *)(a1 + 56));
    if (*(_QWORD *)(a1 + 64))
    {
      objc_msgSend(v3, "setRequestId:");
    }
    else
    {
      v8 = objc_opt_new(NSUUID);
      objc_msgSend(v3, "setRequestId:", v8);

    }
    objc_msgSend(v3, "setQueryRequest:", *(_QWORD *)(a1 + 72));
    objc_msgSend(v3, "setQueryResponse:", *(_QWORD *)(a1 + 80));
    if (*(_QWORD *)(a1 + 80))
    {
      if (*(_QWORD *)(a1 + 88))
      {
        objc_msgSend(v3, "setResponseTime:");
      }
      else
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
        objc_msgSend(v3, "setResponseTime:", v9);

      }
    }
    objc_msgSend(v3, "setIdsResponseTime:", *(_QWORD *)(a1 + 96));
    objc_msgSend(v3, "setClientLoggableDatas:", *(_QWORD *)(a1 + 104));
    objc_msgSend(v3, "setServerLoggableDatas:", *(_QWORD *)(a1 + 112));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "controller"));
    v11 = (unint64_t *)objc_msgSend(v10, "sequenceId");
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 + 1, v11));
    objc_msgSend(v3, "setSequenceId:");

    objc_msgSend(v3, "setUnsigned:value:", "type", *(_QWORD *)(a1 + 136));
    objc_msgSend(v3, "setRequestTime:", CFAbsoluteTimeGetCurrent());
    objc_msgSend(v3, "setServerHint:", 0);
    v13 = *(void **)(a1 + 32);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "requestId"));
    objc_msgSend(v13, "createKTRequestID:request:", v14, v3);

    v15 = *(void **)(a1 + 32);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8);
    obj = *(id *)(v16 + 40);
    LODWORD(v14) = objc_msgSend(v15, "persistWithError:", &obj);
    objc_storeStrong((id *)(v16 + 40), obj);
    if ((_DWORD)v14)
    {
      v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "requestId"));
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 128) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v17;

    }
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8);
    v21 = *(id *)(v20 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v21);
    objc_storeStrong((id *)(v20 + 40), v21);
  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorAlloc, -56, CFSTR("failed to create KTRequest entity")));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

    objc_msgSend(*(id *)(a1 + 32), "reportCoreDataEventForEntity:write:code:underlyingError:", CFSTR("KTRequest"), 1, -56, 0);
    if (qword_1002A7760 != -1)
      dispatch_once(&qword_1002A7760, &stru_100247C00);
    v7 = qword_1002A7768;
    if (os_log_type_enabled((os_log_t)qword_1002A7768, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "failed to create KTRequest entity", buf, 2u);
    }
  }

}

void sub_1001440E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100144550(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100144580(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100144AD0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100144C28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v6 = a2;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v12 = *(void **)(a1 + 32);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "requestId"));
        objc_msgSend(v12, "createKTRequestID:request:", v13, v11);

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }
  objc_msgSend(*(id *)(a1 + 32), "persistAndRefaultObjects:error:", v6, a4);

}

void sub_100144D58(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (qword_1002A7760 != -1)
    dispatch_once(&qword_1002A7760, &stru_100247CD0);
  v2 = qword_1002A7768;
  if (os_log_type_enabled((os_log_t)qword_1002A7768, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to populate KTRequests to KTRequestID lookup table: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100144E20(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100145038(uint64_t a1, void *a2, _BYTE *a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v6 = a2;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v11, "setQueryResponse:", 0);
        objc_msgSend(v11, "setQueryRequest:", 0);
        objc_msgSend(v11, "setResponseTime:", 0);
        v12 = *(void **)(a1 + 32);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "failures"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "allObjects"));
        objc_msgSend(v12, "deleteObjectSet:", v14);

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "failureEvent"));
        if (v15)
        {
          v16 = *(void **)(a1 + 32);
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "failureEvent"));
          objc_msgSend(v16, "deleteObject:", v17);

        }
        objc_msgSend(v11, "setServerHint:", 0);
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v8);
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "persistWithError:", a4) & 1) == 0)
    *a3 = 1;

}

void sub_1001455D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_100145604(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7768;
  qword_1002A7768 = (uint64_t)v1;

}

void sub_1001457A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1001457C4(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchRequestForUUID:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40)));
  v7 = *(_QWORD *)(a1[7] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (v5)
  {
    (*(void (**)(void))(a1[6] + 16))();
    *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
  }

}

void sub_100145940(uint64_t a1)
{
  double v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;

  +[TransparencySettings defaultQueryCacheTimeout](TransparencySettings, "defaultQueryCacheTimeout");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", -v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[KTRequest fetchRequest](KTRequest, "fetchRequest"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("responseTime"), 0));
  v16 = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1));
  objc_msgSend(v4, "setSortDescriptors:", v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@ && type == %d && accountKey == %@ && responseTime > %@"), *(_QWORD *)(a1 + 32), 1, *(_QWORD *)(a1 + 40), v3));
  objc_msgSend(v4, "setPredicate:", v7);

  objc_msgSend(v4, "setFetchLimit:", 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
  v15 = 0;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeFetchRequest:error:", v4, &v15));
  v10 = v15;

  if (v9 && objc_msgSend(v9, "count"))
  {
    v11 = *(_QWORD *)(a1 + 56);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:", 0));
    (*(void (**)(uint64_t, void *, _QWORD))(v11 + 16))(v11, v12, 0);

  }
  else
  {
    v14 = v10;
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v14);
    v13 = v14;

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    v10 = v13;
  }

}

void sub_100146550(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_100146580(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_100146790(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_1001467C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_100146A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100146A64(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100146A74(uint64_t a1)
{

}

void sub_100146A7C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id obj;
  void *v18;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("uri == %@ && signatureResult == %d && mergeResult == %d && application == %@"), *(_QWORD *)(a1 + 40), 1, 2, *(_QWORD *)(a1 + 48)));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[KTMutation fetchRequest](KTMutation, "fetchRequest"));
    objc_msgSend(v7, "setPredicate:", v6);
    objc_msgSend(v7, "setFetchBatchSize:", *(_QWORD *)(a1 + 80));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("mutationMs"), 1));
    v18 = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
    objc_msgSend(v7, "setSortDescriptors:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(id *)(v11 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "executeFetchRequest:error:", v7, &v16));
    objc_storeStrong((id *)(v11 + 40), v16);

    if (objc_msgSend(v12, "count"))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
    }

  }
  v13 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v15 = *(id *)(v14 + 40);
  objc_msgSend(v13, "cleanseError:", &v15);
  objc_storeStrong((id *)(v14 + 40), v15);
}

void sub_100146C64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_100146DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100146DE8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  id v29;
  id obj;
  _BYTE v31[128];

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("signatureResult == %d && mergeResult == %d && application == %@"), 1, 2, *(_QWORD *)(a1 + 40)));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[KTMutation fetchRequest](KTMutation, "fetchRequest"));
    v23 = (void *)v6;
    objc_msgSend(v7, "setPredicate:", v6);
    objc_msgSend(v7, "setPropertiesToFetch:", &off_10025C748);
    objc_msgSend(v7, "setReturnsDistinctResults:", 1);
    objc_msgSend(v7, "setResultType:", 2);
    if (*(_QWORD *)(a1 + 64))
      objc_msgSend(v7, "setFetchLimit:");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v29 = *(id *)(v9 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeFetchRequest:error:", v7, &v29));
    objc_storeStrong((id *)(v9 + 40), v29);

    if (v10 && objc_msgSend(v10, "count"))
    {
      v11 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v10, "count")));
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "reverseObjectEnumerator"));
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v26;
      do
      {
        v18 = 0;
        do
        {
          if (*(_QWORD *)v26 != v17)
            objc_enumerationMutation(v14);
          v19 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v18), "objectForKeyedSubscript:", CFSTR("uri")));
          objc_msgSend(v19, "addObject:", v20);

          v18 = (char *)v18 + 1;
        }
        while (v16 != v18);
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
      }
      while (v16);
    }

  }
  v21 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32), v5);
  v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v24 = *(id *)(v22 + 40);
  objc_msgSend(v21, "cleanseError:", &v24);
  objc_storeStrong((id *)(v22 + 40), v24);
}

void sub_1001471CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7778;
  qword_1002A7778 = (uint64_t)v1;

}

void sub_1001474D8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  NSObject *v7;
  void *v8;
  double Current;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint8_t buf[4];
  id v18;

  v2 = objc_msgSend(*(id *)(a1 + 32), "copyManagedObject:", 0);
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    objc_msgSend(v3, "onMocSetMapHead:inclusionResult:inclusionError:", v2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    v16 = 0;
    v5 = objc_msgSend(v4, "persistWithError:", &v16);
    v6 = v16;

    if ((v5 & 1) == 0)
    {
      if (qword_1002A7780 != -1)
        dispatch_once(&qword_1002A7780, &stru_100247E40);
      v7 = qword_1002A7788;
      if (os_log_type_enabled((os_log_t)qword_1002A7788, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v18 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "failed to save inclusion state for map head: %@", buf, 0xCu);
      }
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      objc_msgSend(v8, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("mapHeadIncusionState"), v6);

    }
    Current = CFAbsoluteTimeGetCurrent();
    objc_msgSend(v2, "receiptTime");
    v11 = Current - v10;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "application"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("PatInclusionProofTime"), v12));

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v11));
    objc_msgSend(v14, "logMetric:withName:", v15, v13);

  }
}

void sub_1001476D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

void sub_100147988(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

uint64_t sub_1001479B8(id *a1, _QWORD *a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  NSObject *v23;
  NSObject *v24;
  NSObject *v25;
  id v27;
  id v28;
  uint8_t buf[4];
  id v30;

  if (+[TransparencyAnalytics hasInternalDiagnostics](TransparencyAnalytics, "hasInternalDiagnostics"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "metadata"));
    v8 = kTransparencyResponseMetadataKeyServerHint;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "metadata"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v8));
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, v8);

    }
    if (objc_msgSend(v6, "count"))
      *a3 = objc_retainAutorelease(v6);

  }
  v12 = a1[4];
  v28 = 0;
  v13 = (uint64_t)objc_msgSend(v12, "verifyWithError:", &v28);
  v14 = v28;
  if (v13 == 1)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "nodeBytes"));
    v27 = v14;
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](PerApplicationTreeNode, "parseFromData:error:", v15, &v27));
    v17 = v27;

    if (v16)
    {
      if (objc_msgSend(v16, "hasObjectMapHead")
        && (v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectMapHead")),
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "object")),
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "mapHead")),
            v21 = objc_msgSend(v19, "isEqualToData:", v20),
            v20,
            v19,
            v18,
            (v21 & 1) != 0))
      {
        v13 = 1;
        objc_msgSend(a1[6], "setInclusionResult:mapHead:failure:", 1, a1[5], 0);
        v22 = v17;
      }
      else
      {
        v22 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", CFSTR("TransparencyErrorVerify"), -62, CFSTR("per-app tree entry does not contain the SMH in the map entry")));

        if (a2 && v22)
          *a2 = objc_retainAutorelease(v22);
        if (qword_1002A7780 != -1)
          dispatch_once(&qword_1002A7780, &stru_100247EC0);
        v24 = qword_1002A7788;
        if (os_log_type_enabled((os_log_t)qword_1002A7788, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "per-app tree entry does not contain the SMH in the map entry", buf, 2u);
        }
        objc_msgSend(a1[6], "setInclusionResult:mapHead:failure:", 0, a1[5], v22);
        v13 = 0;
      }
    }
    else
    {
      v22 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDecode, -140, v17, CFSTR("failed to decode per-app tree node: %@"), v17));

      if (qword_1002A7780 != -1)
        dispatch_once(&qword_1002A7780, &stru_100247EA0);
      v25 = qword_1002A7788;
      if (os_log_type_enabled((os_log_t)qword_1002A7788, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v30 = v22;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "failed to decode per-app tree node: %@", buf, 0xCu);
      }
      v13 = 0;
      if (a2 && v22)
      {
        v22 = objc_retainAutorelease(v22);
        v13 = 0;
        *a2 = v22;
      }
    }

  }
  else
  {
    v22 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -13, v14, CFSTR("per-app tree verification failed")));

    if (a2 && v22)
      *a2 = objc_retainAutorelease(v22);
    if (qword_1002A7780 != -1)
      dispatch_once(&qword_1002A7780, &stru_100247E80);
    v23 = qword_1002A7788;
    if (os_log_type_enabled((os_log_t)qword_1002A7788, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "per-app tree verification failed", buf, 2u);
    }
  }

  return v13;
}

void sub_100147E10(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

void sub_100147E40(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

void sub_100147E70(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

void sub_100147EA0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

id sub_100148174(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v5 = objc_msgSend(*(id *)(a1 + 32), "verifyWithError:", a2);
  if (!v5
    && +[TransparencyAnalytics hasInternalDiagnostics](TransparencyAnalytics, "hasInternalDiagnostics"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
    v8 = kTransparencyResponseMetadataKeyServerHint;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v8));
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, v8);

    }
    if (objc_msgSend(v6, "count"))
      *a3 = objc_retainAutorelease(v6);

  }
  return v5;
}

void sub_100148274(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7788;
  qword_1002A7788 = (uint64_t)v1;

}

id sub_1001484E0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint8_t v15[16];

  if (+[TransparencyAnalytics hasInternalDiagnostics](TransparencyAnalytics, "hasInternalDiagnostics"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
    v8 = kTransparencyResponseMetadataKeyServerHint;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v8));
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, v8);

    }
    if (objc_msgSend(v6, "count"))
      *a3 = objc_retainAutorelease(v6);

  }
  v12 = objc_msgSend(*(id *)(a1 + 32), "verifyWithError:", a2);
  if (v12 != (id)1)
  {
    if (a2)
      *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -13, *a2, CFSTR("per-app tree verification failed")));
    if (qword_1002A7790 != -1)
      dispatch_once(&qword_1002A7790, &stru_100247F70);
    v13 = qword_1002A7798;
    if (os_log_type_enabled((os_log_t)qword_1002A7798, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "per-app tree verification failed", v15, 2u);
    }
  }
  return v12;
}

void sub_100148690(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7798;
  qword_1002A7798 = (uint64_t)v1;

}

int64_t sub_10014915C(id a1, OptInOut *a2, OptInOut *a3)
{
  OptInOut *v4;
  OptInOut *v5;
  id v6;
  int64_t v7;
  id v8;

  v4 = a2;
  v5 = a3;
  v6 = -[OptInOut timestampMs](v4, "timestampMs");
  if (v6 <= (id)-[OptInOut timestampMs](v5, "timestampMs"))
  {
    v8 = -[OptInOut timestampMs](v4, "timestampMs");
    if (v8 == (id)-[OptInOut timestampMs](v5, "timestampMs"))
      v7 = 0;
    else
      v7 = -1;
  }
  else
  {
    v7 = 1;
  }

  return v7;
}

void sub_100149F60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77A8;
  qword_1002A77A8 = (uint64_t)v1;

}

void sub_10014A310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10014A334(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;

  v31 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v31)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "ktApplicationToKTRegStatus"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "application"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v5));

    if (!v6)
    {
      objc_msgSend(WeakRetained, "setCheckIDSError:", 2);
LABEL_22:
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
      objc_msgSend(v14, "addOperation:", v30);

      goto LABEL_23;
    }
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "registeredKTData"));
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "unregisteredKTData"));
    v9 = (void *)v8;
    if (!(v7 | v8))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
      objc_msgSend(v10, "triggerRegistrationDataNeedsUpdate:", CFSTR("reg"));

LABEL_5:
      v11 = WeakRetained;
      v12 = 2;
LABEL_20:
      objc_msgSend(v11, "setCheckIDSError:", v12);
      goto LABEL_21;
    }
    if (v8)
    {
      if (!objc_msgSend(WeakRetained, "hasRecentlyDoneHSA2Upsell"))
      {
        v11 = WeakRetained;
        v12 = 0;
        goto LABEL_20;
      }
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
      objc_msgSend(v15, "triggerRegistrationDataNeedsUpdate:", CFSTR("hsa2upsell"));

    }
    else
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktDataForRegistration"));

      if (!v16)
        goto LABEL_5;
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktPublicAccountKey"));

      if (!v17)
      {
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
        objc_msgSend(v28, "triggerRegistrationDataNeedsUpdate:", CFSTR("publickey-missing"));

        v11 = WeakRetained;
        v12 = 6;
        goto LABEL_20;
      }
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktPublicAccountKey"));
      v19 = objc_msgSend(v18, "isEqual:", *(_QWORD *)(a1 + 32));

      if ((v19 & 1) == 0)
      {
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
        objc_msgSend(v29, "triggerRegistrationDataNeedsUpdate:", CFSTR("publickey"));

        v11 = WeakRetained;
        v12 = 5;
        goto LABEL_20;
      }
      v21 = (void *)objc_opt_class(WeakRetained, v20);
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktPublicAccountKey"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktDataForRegistration"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "ktDataSignature"));
      v25 = objc_msgSend(v21, "checkPCSKTSignature:data:signature:", v22, v23, v24);

      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
      v27 = v26;
      if ((v25 & 1) == 0)
      {
        objc_msgSend(v26, "triggerRegistrationDataNeedsUpdate:", CFSTR("signature"));

        v11 = WeakRetained;
        v12 = 4;
        goto LABEL_20;
      }
      objc_msgSend(v26, "notifyIDSRegistrationCorrect");

      objc_msgSend(WeakRetained, "setCheckIDSResult:", 1);
    }
LABEL_21:

    goto LABEL_22;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsRegistrationInterface"));
  objc_msgSend(v13, "triggerRegistrationDataNeedsUpdate:", CFSTR("missing"));

  objc_msgSend(WeakRetained, "setCheckIDSError:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
  objc_msgSend(v6, "addOperation:", v14);
LABEL_23:

}

void sub_10014BBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a67;

  _Block_object_dispose(&a63, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&STACK[0x200], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10014BC44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10014BC54(uint64_t a1)
{

}

void sub_10014BC5C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BC8C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BCBC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BCEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BD1C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;

  if (a2)
    v3 = objc_msgSend(a2, "mutableCopy");
  else
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_10014BD68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BD98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BDC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BDF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77B8;
  qword_1002A77B8 = (uint64_t)v1;

}

void sub_10014BE28(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  v4 = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;

}

void sub_10014C0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10014C10C(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  id obj;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];

  v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "allValues"));
    v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v28;
      v24 = kTransparencyErrorInternal;
      while (2)
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v28 != v9)
            objc_enumerationMutation(obj);
          v11 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountKeyService"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "application"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "accountKeyService:", v13));

          if (!v14)
          {
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
            goto LABEL_20;
          }
          v26 = 0;
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "publicPublicKey:", &v26));
          v16 = v26;
          if (v15)
          {
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountKeyService"));
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "validateSignature:withPublicKey:", v17, v15));

            if (v18)
            {
              *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
              v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "application"));
              v20 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:description:", v24, -349, 3, 0, CFSTR("%@ failed with %@"), v19, v18));
              v21 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
              v22 = *(void **)(v21 + 40);
              *(_QWORD *)(v21 + 40) = v20;

              v23 = 1;
            }
            else
            {
              v23 = 0;
            }

          }
          else
          {
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
            v23 = 1;
          }

          if (v23)
            goto LABEL_20;
        }
        v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
        if (v8)
          continue;
        break;
      }
    }
LABEL_20:

    v6 = 0;
  }

}

void sub_10014C734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10014C750(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_onqueueRecheck");

}

void sub_10014C77C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_onqueueRecheck");

}

uint64_t sub_10014C888(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 8);
  return result;
}

void sub_10014C964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10014C97C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10014C98C(uint64_t a1)
{

}

void sub_10014C994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (objc_msgSend(*(id *)(a1 + 32), "queueIsLocked"))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastUnlockedTime"));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
  else
  {
    v5 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    objc_msgSend(*(id *)(a1 + 32), "setLastUnlockedTime:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  }
}

void sub_10014CBC4(id a1)
{
  uint8_t v1[16];

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Keybag unlocked", v1, 2u);
  }
}

id sub_10014CE78(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "lockStateChangeNotification:", *(unsigned __int8 *)(a1 + 40));
}

id sub_10014CEF4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueRecheck");
}

id sub_10014D0B8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "queueIsLocked");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "_onqueueRecheck");
  return result;
}

void sub_10014D188(uint64_t a1)
{
  char v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  _QWORD v5[4];
  id v6;
  char v7;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "addObject:", *(_QWORD *)(a1 + 40));
  v2 = objc_msgSend(*(id *)(a1 + 32), "queueIsLocked") ^ 1;
  global_queue = dispatch_get_global_queue(21, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10014D234;
  v5[3] = &unk_100248190;
  v6 = *(id *)(a1 + 40);
  v7 = v2;
  dispatch_async(v4, v5);

}

id sub_10014D234(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "lockStateChangeNotification:", *(unsigned __int8 *)(a1 + 40));
}

void sub_10014D284(id a1)
{
  KTLockStateTracker *v1;
  KTLockStateTracker *v2;
  void *v3;
  KTActualLockStateProvider *v4;

  v1 = [KTLockStateTracker alloc];
  v4 = objc_alloc_init(KTActualLockStateProvider);
  v2 = -[KTLockStateTracker initWithProvider:](v1, "initWithProvider:", v4);
  v3 = (void *)qword_1002A77C8;
  qword_1002A77C8 = (uint64_t)v2;

}

void sub_10014D804(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77E0;
  qword_1002A77E0 = (uint64_t)v1;

}

void sub_10014D834(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77E0;
  qword_1002A77E0 = (uint64_t)v1;

}

void sub_10014DE00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77E0;
  qword_1002A77E0 = (uint64_t)v1;

}

void sub_10014E428(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77F0;
  qword_1002A77F0 = (uint64_t)v1;

}

void sub_10014E458(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A77F0;
  qword_1002A77F0 = (uint64_t)v1;

}

void sub_10014EAB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7800;
  qword_1002A7800 = (uint64_t)v1;

}

void sub_10014EAE0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7800;
  qword_1002A7800 = (uint64_t)v1;

}

void sub_10014EB10(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7800;
  qword_1002A7800 = (uint64_t)v1;

}

void sub_10014EFC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7800;
  qword_1002A7800 = (uint64_t)v1;

}

void sub_10014F0F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7800;
  qword_1002A7800 = (uint64_t)v1;

}

void sub_10014F318(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7810;
  qword_1002A7810 = (uint64_t)v1;

}

void sub_100150418(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7820;
  qword_1002A7820 = (uint64_t)v1;

}

void sub_100150740(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7820;
  qword_1002A7820 = (uint64_t)v1;

}

void sub_100150770(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7820;
  qword_1002A7820 = (uint64_t)v1;

}

uint64_t sub_100150918(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  id v33;
  uint8_t buf[16];

  if (!objc_msgSend(*(id *)(a1 + 32), "hasSignature")
    || (v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature")),
        v4,
        !v4))
  {
    v30 = -3;
    if (!a2)
      goto LABEL_28;
    goto LABEL_27;
  }
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutation"));
  if (!v5
    || (v6 = (void *)v5,
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutation")),
        v8 = objc_msgSend(v7, "length"),
        v7,
        v6,
        !v8))
  {
    v30 = -4;
    if (!a2)
      goto LABEL_28;
    goto LABEL_27;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "signature"));
  if (!v10)
  {
    v30 = -6;
    goto LABEL_26;
  }
  v11 = (void *)v10;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "signature"));
  v14 = objc_msgSend(v13, "length");

  if (!v14)
  {
    v30 = -6;
    if (!a2)
      goto LABEL_28;
    goto LABEL_27;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "signingKeySpkihash"));
  if (!v15)
  {
    v30 = -5;
LABEL_26:

    if (!a2)
      goto LABEL_28;
LABEL_27:
    *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDecode, v30, CFSTR("SMT missing data required for verification")));
    goto LABEL_28;
  }
  v16 = (void *)v15;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "signingKeySpkihash"));
  v19 = objc_msgSend(v18, "length");

  if (v19)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutation"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "signature"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "signingKeySpkihash"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v33 = 0;
    v27 = objc_msgSend(v20, "verifyMessage:signature:spkiHash:algorithm:error:", v21, v23, v25, +[TransparencySignatureVerifier secKeyAlgorithmForProtoAlgorithm:](TransparencySignatureVerifier, "secKeyAlgorithmForProtoAlgorithm:", objc_msgSend(v26, "algorithm")), &v33);
    v28 = v33;

    v29 = v27;
    if (+[TransparencyError hasUnknownSPKIHashError:](TransparencyError, "hasUnknownSPKIHashError:", v28))v29 = 2;
    if (a2 && v28)
      *a2 = objc_retainAutorelease(v28);
    if (a2 && v27 != 1)
      *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -137, *a2));

    return v29;
  }
  v30 = -5;
  if (a2)
    goto LABEL_27;
LABEL_28:
  if (qword_1002A7818 != -1)
    dispatch_once(&qword_1002A7818, &stru_100248390);
  v31 = qword_1002A7820;
  if (os_log_type_enabled((os_log_t)qword_1002A7820, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "SMT missing data required for verification", buf, 2u);
  }
  return 0;
}

void sub_100150C98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7820;
  qword_1002A7820 = (uint64_t)v1;

}

void sub_100151164(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151194(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_1001511C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_1001514E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151514(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_1001517D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151800(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151ABC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151AEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151DB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_100151DE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_10015227C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_10015254C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7830;
  qword_1002A7830 = (uint64_t)v1;

}

void sub_10015277C(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_1002A7840;
  qword_1002A7840 = v1;

  objc_msgSend((id)qword_1002A7840, "setObject:forKeyedSubscript:", CFSTR("com.apple.KTAccountKey"), kKTApplicationIdentifierIDS);
  objc_msgSend((id)qword_1002A7840, "setObject:forKeyedSubscript:", CFSTR("com.apple.KTAccountKey"), kKTApplicationIdentifierIDSMultiplex);
  objc_msgSend((id)qword_1002A7840, "setObject:forKeyedSubscript:", CFSTR("com.apple.KTAccountKey"), kKTApplicationIdentifierIDSFaceTime);
  objc_msgSend((id)qword_1002A7840, "setObject:forKeyedSubscript:", CFSTR("com.apple.KTAccountKey"), kKTApplicationIdentifierCloudKit);
  objc_msgSend((id)qword_1002A7840, "setObject:forKeyedSubscript:", CFSTR("com.apple.KTAccountKey"), kKTApplicationIdentifierTLT);
}

void sub_1001529E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100152A18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

uint64_t sub_100152C98(uint64_t a1)
{
  dispatch_queue_attr_t v2;
  NSObject *v3;
  dispatch_queue_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD handler[5];

  v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = dispatch_queue_create("KTAccountKeyServer", v3);
  v5 = (void *)qword_1002A7870;
  qword_1002A7870 = (uint64_t)v4;

  v6 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v7 = (void *)qword_1002A7860;
  qword_1002A7860 = v6;

  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_100152D6C;
  handler[3] = &unk_1002485E8;
  handler[4] = *(_QWORD *)(a1 + 32);
  return notify_register_dispatch("com.apple.security.view-change.Manatee", (int *)&unk_1002A7878, (dispatch_queue_t)qword_1002A7870, handler);
}

id sub_100152D6C(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (qword_1002A7848 != -1)
    dispatch_once(&qword_1002A7848, &stru_1002485C8);
  v2 = qword_1002A7850;
  if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "got notice that view changed; clearing cached account key",
      v4,
      2u);
  }
  return objc_msgSend(*(id *)(a1 + 32), "clearCachedPCSIdentities");
}

void sub_100152E00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100152F50(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_1001530FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100153118(uint64_t a1)
{
  void *v2;
  id WeakRetained;
  NSNumber *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void **v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  id v18;
  id v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", PCSReportManateeStatus(CFSTR("Manatee")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("manateeStatus"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "numberPropertyForKey:", CFSTR("KTAccountKeyRetry")));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v6, CFSTR("KTAccountKeyRetry"));

  v7 = *(void **)(a1 + 32);
  v14 = _NSConcreteStackBlock;
  v15 = 3221225472;
  v16 = sub_100153288;
  v17 = &unk_100248630;
  v8 = v2;
  v18 = v8;
  v19 = WeakRetained;
  v9 = WeakRetained;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", &v14);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[KTKVSStore strictStore](KTKVSStore, "strictStore", v14, v15, v16, v17));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "accountMetricID"));

  objc_msgSend(v9, "setMetricsAccountID:", v11);
  v12 = v8;

  return v12;
}

void sub_100153288(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("KTAccountKey-%@"), v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[KTAccountKeyServer sharedKeyServiceForApplication:](KTAccountKeyServer, "sharedKeyServiceForApplication:", v3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v5, "haveIdentity")));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v4);

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[KTEnrollmentSignatureSupport enrollementLoggingKeys:](KTEnrollmentSignatureSupport, "enrollementLoggingKeys:", v3));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "numberPropertyForKey:", v12));
        objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v13, v12);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

void sub_100153638(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100153668(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100153840(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_1001539F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100153A08(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "getPCSIdentity:", *(_QWORD *)(a1 + 40));
}

void sub_100153A14(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  _QWORD v12[5];
  id v13;
  id v14;

  v2 = *(void **)(a1 + 32);
  v14 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "pcsOptions:", &v14));
  v4 = v14;
  v5 = objc_msgSend(v3, "mutableCopy");

  if (v5)
  {
    if (*(_BYTE *)(a1 + 56))
      objc_msgSend(v5, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, kPCSSetupRollIdentity);
    objc_msgSend(v5, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, kPCSSetupSyncIdentity);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "creationGroup"));
    objc_sync_enter(v6);
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "creationGroup"));
    dispatch_group_enter(v7);

    objc_msgSend(*(id *)(a1 + 32), "setOutstandingCreationSignal:", 1);
    objc_sync_exit(v6);

    v8 = *(void **)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 48);
    v10 = objc_msgSend(v8, "service");
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100153BA8;
    v12[3] = &unk_100248700;
    v11 = *(void **)(a1 + 40);
    v12[4] = *(_QWORD *)(a1 + 32);
    v13 = v11;
    objc_msgSend(v8, "wrapperPCSIdentitySetCreateManatee:service:options:block:", v9, v10, v5, v12);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_100153B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100153BA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  int v14;
  void *v15;

  v5 = a2;
  v6 = a3;
  v7 = objc_autoreleasePoolPush();
  if (v5)
  {
    v8 = (void *)PCSIdentityCopyPublicKeyInfo(objc_msgSend(v5, "identity"));
    if (qword_1002A7848 != -1)
      dispatch_once(&qword_1002A7848, &stru_1002486D8);
    v9 = (void *)qword_1002A7850;
    if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_DEFAULT))
    {
      v10 = v9;
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "kt_hexString"));
      v14 = 138412290;
      v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "created new account key identity: %@", (uint8_t *)&v14, 0xCu);

    }
    objc_msgSend(*(id *)(a1 + 32), "cachePCSIdentity:", v5);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "creationGroup"));
  objc_sync_enter(v12);
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "creationGroup"));
  dispatch_group_leave(v13);

  objc_msgSend(*(id *)(a1 + 32), "setOutstandingCreationSignal:", 0);
  objc_sync_exit(v12);

  objc_autoreleasePoolPop(v7);
}

void sub_100153D50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100153D6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100153E34(uint64_t a1, const void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  CFTypeRef v11;
  CFTypeRef cf;

  v5 = a3;
  cf = 0;
  if (a2)
  {
    v6 = PCSIdentitySetCopyCurrentIdentityPointer(*(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "service"), &cf);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v8 = v7;
    if (v7 && objc_msgSend(v7, "identity") && CFEqual(a2, objc_msgSend(v8, "identity")))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 40);
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:errorLevel:underlyingError:description:](TransparencyError, "errorWithDomain:code:errorLevel:underlyingError:description:", kTransparencyErrorInternal, -352, 4, cf, CFSTR("Identity created %@ is not current %@"), a2, objc_msgSend(v8, "identity")));
      (*(void (**)(uint64_t, _QWORD, void *))(v9 + 16))(v9, 0, v10);

      v11 = cf;
      if (cf)
      {
        cf = 0;
        CFRelease(v11);
      }
    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    v8 = 0;
  }

}

void sub_100154404(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154434(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154464(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_1001545AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_1001547B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100154990(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_1001549C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  const void *v17;
  id v18;
  uint8_t buf[4];
  id v20;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    CFRetain(v5);
    v7 = (void *)PCSIdentityCopyPublicKeyInfo(v5);
    if (qword_1002A7848 != -1)
      dispatch_once(&qword_1002A7848, &stru_100248830);
    v8 = (void *)qword_1002A7850;
    if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_DEFAULT))
    {
      v9 = v8;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "kt_hexString"));
      *(_DWORD *)buf = 138412290;
      v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "rolled account key identity to %@", buf, 0xCu);

    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    objc_msgSend(v11, "logSuccessForEventNamed:", CFSTR("KTAccountKeyRoll"));

    v18 = 0;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[KTAccountKeyServer publicKeyInfoFromIdentity:error:](KTAccountKeyServer, "publicKeyInfoFromIdentity:error:", v5, &v18));
    v13 = v18;

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    CFRelease(v5);

  }
  else
  {
    if (qword_1002A7848 != -1)
      dispatch_once(&qword_1002A7848, &stru_100248850);
    v14 = qword_1002A7850;
    if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v6;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "account key roll failed: %@", buf, 0xCu);
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    objc_msgSend(v15, "logResultForEvent:hardFailure:result:", CFSTR("KTAccountKeyRoll"), 1, v6);

    v13 = v6;
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v17 = *(const void **)(v16 + 24);
  if (v17)
  {
    *(_QWORD *)(v16 + 24) = 0;
    CFRelease(v17);
  }

}

void sub_100154C38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154C68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154ECC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100154FA0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v26 = 0;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[KTAccountKeyServer publicKeyInfoFromIdentity:error:](KTAccountKeyServer, "publicKeyInfoFromIdentity:error:", objc_msgSend(v5, "identity"), &v26));
    v8 = v26;
    if (!v7)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
      objc_msgSend(v18, "logResultForEvent:hardFailure:result:", CFSTR("KTAccountKeySign"), 1, v8);

      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_26:

      goto LABEL_27;
    }
    v25 = 0;
    if (*(_QWORD *)(a1 + 32))
    {
      v9 = (void *)PCSIdentityCreateSignature(objc_msgSend(v5, "identity"), 1, *(_QWORD *)(a1 + 32), &v25);
      if (!v9 || v25)
      {
        if (qword_1002A7848 != -1)
          dispatch_once(&qword_1002A7848, &stru_1002488D8);
        v22 = qword_1002A7850;
        if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v28 = v25;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "failed to sign data with account key: %@", buf, 0xCu);
        }
        v23 = v25;

        if (!v23)
          v23 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorInternal, -266, CFSTR("failed to sign data with account key")));
        v24 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger", v25));
        objc_msgSend(v24, "logResultForEvent:hardFailure:result:", CFSTR("KTAccountKeySign"), 1, v23);

        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
        v8 = (id)v23;
        goto LABEL_25;
      }
      if (qword_1002A7848 != -1)
        dispatch_once(&qword_1002A7848, &stru_1002488F8);
      v10 = (void *)qword_1002A7850;
      if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_DEFAULT))
      {
        v11 = *(void **)(a1 + 32);
        v12 = v10;
        v13 = objc_msgSend(v11, "length");
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "kt_hexString"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentItemPointerModificationTime"));
        *(_DWORD *)buf = 134218498;
        v28 = (uint64_t)v13;
        v29 = 2114;
        v30 = v14;
        v31 = 2114;
        v32 = v15;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Successfully signed %lu bytes with account key: %{public}@ CIPmTime: %{public}@", buf, 0x20u);

      }
    }
    else
    {
      v9 = 0;
    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger", v25));
    objc_msgSend(v19, "logSuccessForEventNamed:", CFSTR("KTAccountKeySign"));

    v20 = *(_QWORD *)(a1 + 40);
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentItemPointerModificationTime"));
    (*(void (**)(uint64_t, void *, void *, void *, _QWORD))(v20 + 16))(v20, v7, v9, v21, 0);

LABEL_25:
    goto LABEL_26;
  }
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
  objc_msgSend(v16, "logResultForEvent:hardFailure:result:", CFSTR("KTAccountKeySign"), 1, v6);

  if (qword_1002A7848 != -1)
    dispatch_once(&qword_1002A7848, &stru_1002488B8);
  v17 = qword_1002A7850;
  if (os_log_type_enabled((os_log_t)qword_1002A7850, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v28 = (uint64_t)v6;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "failed to get PCS identity: %@", buf, 0xCu);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_27:

}

void sub_1001553DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_10015540C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_10015543C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_10015555C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100155580(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100155590(uint64_t a1)
{

}

void sub_100155598(uint64_t a1, void *a2, void *a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id obj;

  v6 = a3;
  v7 = v6;
  if (!a2 || v6)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a3);
  }
  else
  {
    v8 = objc_msgSend(a2, "identity");
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    obj = *(id *)(v9 + 40);
    v10 = objc_claimAutoreleasedReturnValue(+[KTAccountKeyServer publicKeyInfoFromIdentity:error:](KTAccountKeyServer, "publicKeyInfoFromIdentity:error:", v8, &obj));
    objc_storeStrong((id *)(v9 + 40), obj);
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

  }
}

void sub_1001558E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100155918(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7850;
  qword_1002A7850 = (uint64_t)v1;

}

void sub_100156118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_100156150(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7888;
  qword_1002A7888 = (uint64_t)v1;

}

void sub_100156180(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7888;
  qword_1002A7888 = (uint64_t)v1;

}

uint64_t sub_1001561B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001561C0(uint64_t a1)
{

}

void sub_1001561C8(uint64_t a1, void *a2)
{
  id v4;

  v4 = a2;
  if (v4)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

uint64_t sub_10015621C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

void sub_10015652C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7898;
  qword_1002A7898 = (uint64_t)v1;

}

void sub_10015655C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7898;
  qword_1002A7898 = (uint64_t)v1;

}

void sub_100156798(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  id v19;

  v5 = a3;
  v6 = objc_autoreleasePoolPush();
  if (qword_1002A7890 != -1)
    dispatch_once(&qword_1002A7890, &stru_100248A50);
  v7 = (void *)qword_1002A7898;
  if (os_log_type_enabled((os_log_t)qword_1002A7898, OS_LOG_TYPE_INFO))
  {
    v8 = *(void **)(a1 + 32);
    v9 = v7;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dsid"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "altDSID"));
    v12 = 138413058;
    v13 = v10;
    v14 = 2112;
    v15 = v11;
    v16 = 2112;
    v17 = a2;
    v18 = 2112;
    v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "PCSIdentitySetCreateManatee: %@[%@] %@: %@", (uint8_t *)&v12, 0x2Au);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  objc_autoreleasePoolPop(v6);

}

void sub_1001568FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7898;
  qword_1002A7898 = (uint64_t)v1;

}

void sub_10015701C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10015703C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10015704C(uint64_t a1)
{

}

void sub_100157054(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v6 + 40);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "createManagedObject:uri:serverHint:error:", v3, v4, v5, &obj));
  objc_storeStrong((id *)(v6 + 40), obj);

  if (v7)
  {
    objc_msgSend(v7, "setSignatureResult:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    objc_msgSend(v8, "saveAndRefaultObject:", v7);

  }
  v9 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

}

void sub_100157C38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_100157C68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_1001582FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_10015832C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_100158C9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_1001595DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_10015960C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_10015963C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_10015966C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_10015969C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78A8;
  qword_1002A78A8 = (uint64_t)v1;

}

void sub_100159D18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78B8;
  qword_1002A78B8 = (uint64_t)v1;

}

void sub_10015A43C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78B8;
  qword_1002A78B8 = (uint64_t)v1;

}

void sub_10015A628(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78B8;
  qword_1002A78B8 = (uint64_t)v1;

}

void sub_10015A7FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78B8;
  qword_1002A78B8 = (uint64_t)v1;

}

void sub_10015AE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10015AE2C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  NSObject *v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  void *v24;
  id v25;
  uint8_t buf[4];
  id v27;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    if (qword_1002A78C0 != -1)
      dispatch_once(&qword_1002A78C0, &stru_100248C80);
    v8 = qword_1002A78C8;
    if (os_log_type_enabled((os_log_t)qword_1002A78C8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v27 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "fetchSelfVerificationInfo: error: %{public}@", buf, 0xCu);
    }
    objc_msgSend(WeakRetained, "setError:", v6);
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
    objc_msgSend(v9, "addOperation:", v10);
  }
  else
  {
    if (qword_1002A78C0 != -1)
      dispatch_once(&qword_1002A78C0, &stru_100248CA0);
    v11 = (void *)qword_1002A78C8;
    if (os_log_type_enabled((os_log_t)qword_1002A78C8, OS_LOG_TYPE_DEFAULT))
    {
      v12 = v11;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selfDeviceID"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "kt_hexString"));
      *(_DWORD *)buf = 138543362;
      v27 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "fetchSelfVerificationInfo: selfInfo: deviceID: %{public}@", buf, 0xCu);

    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uriToServerLoggableDatas"));
    objc_msgSend(v15, "enumerateKeysAndObjectsUsingBlock:", &stru_100248CE0);

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "smDataStore"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v17, "setSettingsDate:date:", CFSTR("KTIDSLastSelfFetch"), v18);

    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "smDataStore"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "application"));
    v25 = 0;
    v22 = objc_msgSend(v20, "storeSelfVerificationInfo:application:error:", v5, v21, &v25);
    v9 = v25;

    if ((v22 & 1) != 0)
    {
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState"));
      objc_msgSend(WeakRetained, "setNextState:", v23);

    }
    else
    {
      objc_msgSend(WeakRetained, "setError:", v9);
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
    objc_msgSend(v10, "addOperation:", v24);

  }
}

void sub_10015B144(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78C8;
  qword_1002A78C8 = (uint64_t)v1;

}

void sub_10015B174(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78C8;
  qword_1002A78C8 = (uint64_t)v1;

}

void sub_10015B1A4(id a1, NSString *a2, KTVerificationInfo *a3, BOOL *a4)
{
  NSString *v5;
  KTVerificationInfo *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  NSString *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  unsigned int v22;

  v5 = a2;
  v6 = a3;
  if (qword_1002A78C0 != -1)
    dispatch_once(&qword_1002A78C0, &stru_100248D00);
  v7 = (void *)qword_1002A78C8;
  if (os_log_type_enabled((os_log_t)qword_1002A78C8, OS_LOG_TYPE_DEFAULT))
  {
    v8 = v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(-[KTVerificationInfo accountKey](v6, "accountKey"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "kt_hexString"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(-[KTVerificationInfo idsResponseTime](v6, "idsResponseTime"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(-[KTVerificationInfo serverLoggableDatas](v6, "serverLoggableDatas"));
    v13 = 141559042;
    v14 = 1752392040;
    v15 = 2112;
    v16 = v5;
    v17 = 2114;
    v18 = v10;
    v19 = 2112;
    v20 = v11;
    v21 = 1024;
    v22 = objc_msgSend(v12, "count");
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "fetchSelfVerificationInfo: uri: %{mask.hash}@ public: %{public}@ idsResp: %@ devices: %d", (uint8_t *)&v13, 0x30u);

  }
}

void sub_10015B328(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78C8;
  qword_1002A78C8 = (uint64_t)v1;

}

void sub_10015B7AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78D8;
  qword_1002A78D8 = (uint64_t)v1;

}

void sub_10015B82C(id a1)
{
  KTKVSStore *v1;
  void *v2;
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  v1 = -[KTKVSStore initWithStoreIdentifier:type:]([KTKVSStore alloc], "initWithStoreIdentifier:type:", CFSTR("com.apple.Transparency.KT"), 1);
  v2 = (void *)qword_1002A78E0;
  qword_1002A78E0 = (uint64_t)v1;

  if ((objc_msgSend((id)qword_1002A78E0, "synchronize") & 1) == 0)
  {
    if (qword_1002A78D0 != -1)
      dispatch_once(&qword_1002A78D0, &stru_100248D88);
    v3 = qword_1002A78D8;
    if (os_log_type_enabled((os_log_t)qword_1002A78D8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "KTKVSStore failed to synchronize", v5, 2u);
    }
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v4, "addObserver:selector:name:object:", qword_1002A78E0, "handleKVSStoreChange:", NSUbiquitousKeyValueStoreDidChangeExternallyNotification, qword_1002A78E0);

}

void sub_10015B924(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78D8;
  qword_1002A78D8 = (uint64_t)v1;

}

void sub_10015BAD8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78D8;
  qword_1002A78D8 = (uint64_t)v1;

}

void sub_10015BB08(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a2;
  if (qword_1002A78D0 != -1)
    dispatch_once(&qword_1002A78D0, &stru_100248DC8);
  v4 = qword_1002A78D8;
  if (os_log_type_enabled((os_log_t)qword_1002A78D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "KTKVSStore calling synchronizeWithCompletionHandler", v5, 2u);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_10015BBB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78D8;
  qword_1002A78D8 = (uint64_t)v1;

}

void sub_10015BCB4(id a1)
{
  KTKVSSoftStore *v1;
  void *v2;

  v1 = -[KTKVSSoftStore initWithStore:]([KTKVSSoftStore alloc], "initWithStore:", 0);
  v2 = (void *)qword_1002A78F0;
  qword_1002A78F0 = (uint64_t)v1;

}

void sub_10015BEEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A78D8;
  qword_1002A78D8 = (uint64_t)v1;

}

void sub_10015C3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_10015C424(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "manateeChanged");

}

void sub_10015C450(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "checkAllCKKSMonitoredViews");

}

void sub_10015C47C(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "nfs"));
  objc_msgSend(v1, "trigger");

}

void sub_10015C71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10015C73C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015C76C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

}

id sub_10015C89C(uint64_t a1)
{
  id v2;
  id result;
  NSObject *v4;
  _BOOL4 v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD);
  uint64_t v8;
  void *v9;
  void *v10;
  _DWORD v11[2];

  v2 = *(id *)(a1 + 40);
  result = objc_msgSend(*(id *)(a1 + 32), "octagonTrusted");
  if (v2 != result)
  {
    if (qword_1002A7900 != -1)
      dispatch_once(&qword_1002A7900, &stru_100248E48);
    v4 = qword_1002A7908;
    if (os_log_type_enabled((os_log_t)qword_1002A7908, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 40) == 1;
      v11[0] = 67109120;
      v11[1] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Manatee status changed to: %{BOOL}d", (uint8_t *)v11, 8u);
    }
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "octagonObserver"));

    if (v6)
    {
      v7 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "octagonObserver"));
      ((void (**)(_QWORD, BOOL))v7)[2](v7, *(_QWORD *)(a1 + 40) != 0);

    }
    v8 = *(_QWORD *)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
    v10 = v9;
    if (v8 == 1)
      objc_msgSend(v9, "addObject:", CFSTR("Manatee"));
    else
      objc_msgSend(v9, "removeAllObjects");

    return objc_msgSend(*(id *)(a1 + 32), "setOctagonTrusted:", *(_QWORD *)(a1 + 40));
  }
  return result;
}

void sub_10015CA04(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

intptr_t sub_10015CB84(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "manateeChanged");
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10015CBAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015CD54(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015CEF0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015D230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10015D250(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015D280(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  uint64_t v26;
  _BYTE v27[128];

  v5 = a2;
  v6 = v5;
  if (!a3)
  {
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
    if (v7)
    {
      v9 = v7;
      v10 = *(_QWORD *)v20;
      *(_QWORD *)&v8 = 138412546;
      v18 = v8;
      do
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v20 != v10)
            objc_enumerationMutation(v6);
          v12 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v11);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("view"), v18));
          v14 = objc_msgSend(v13, "isEqualToString:", CFSTR("global"));

          if ((v14 & 1) == 0)
          {
            v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("keystate")));
            if (objc_msgSend(v15, "isEqualToString:", CFSTR("ready")))
            {
              *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
            }
            else
            {
              if (qword_1002A7900 != -1)
                dispatch_once(&qword_1002A7900, &stru_100248EE8);
              v16 = qword_1002A7908;
              if (os_log_type_enabled((os_log_t)qword_1002A7908, OS_LOG_TYPE_DEFAULT))
              {
                v17 = *(_QWORD *)(a1 + 40);
                *(_DWORD *)buf = v18;
                v24 = v15;
                v25 = 2112;
                v26 = v17;
                _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "View state %@ for view: %@", buf, 0x16u);
              }
            }

          }
          v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
      }
      while (v9);
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_10015D490(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015D4C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015D4F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015D5B8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_10015D6A8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_10015D910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10015D940(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10015D950(uint64_t a1)
{

}

void sub_10015D958(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10015D9A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015DC34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015DC64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015DC94(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "views"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

}

void sub_10015DDB4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  __n128 v5;
  id v6;
  int v7;
  id v8;

  v3 = a2;
  if (qword_1002A7900 != -1)
    dispatch_once(&qword_1002A7900, &stru_100248FD0);
  v4 = qword_1002A7908;
  if (os_log_type_enabled((os_log_t)qword_1002A7908, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CKKS sync completed: %@", (uint8_t *)&v7, 0xCu);
  }
  if (v3)
  {
    v5.n128_u64[0] = 0x4082C00000000000;
    v6 = v3;
  }
  else
  {
    v5.n128_u64[0] = 0;
    v6 = 0;
  }
  (*(void (**)(_QWORD, id, __n128))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), v6, v5);

}

void sub_10015DEB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015E09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10015E0B4(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a2;
  if (qword_1002A7900 != -1)
    dispatch_once(&qword_1002A7900, &stru_100248FF0);
  v4 = qword_1002A7908;
  if (os_log_type_enabled((os_log_t)qword_1002A7908, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v7 = 134218242;
    v8 = a2;
    v9 = 2112;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Known state state %lu for view: %@", (uint8_t *)&v7, 0x16u);
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10015E1A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015E1D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7908;
  qword_1002A7908 = (uint64_t)v1;

}

void sub_10015E844(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "configBag"));
  objc_msgSend(v4, "doubleForKey:", CFSTR("idms-fetch-time"));
  objc_msgSend(*(id *)(a1 + 32), "setOverrideIDMSFetchTime:");

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_10015E94C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "configBag"));
  objc_msgSend(v4, "doubleForKey:", CFSTR("idms-fetch-time"));
  objc_msgSend(*(id *)(a1 + 32), "setOverrideIDMSFetchTime:");

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_10015EAB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10015F0EC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015F11C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015F14C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015F28C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  CFAbsoluteTime Current;
  KTLogNetworkRequest *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  CFAbsoluteTime v15;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(*(id *)(a1 + 32), "application")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyApplication applicationIdentifierForValue:](TransparencyApplication, "applicationIdentifierForValue:", v3));

    Current = CFAbsoluteTimeGetCurrent();
    v6 = [KTLogNetworkRequest alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "publicKeysURI"));
    v8 = -[KTLogNetworkRequest initGETWithURL:application:](v6, "initGETWithURL:application:", v7, v4);

    objc_msgSend(v8, "setAuthenticated:", 0);
    objc_msgSend(v8, "setUseReversePush:", 0);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10015F3F8;
    v11[3] = &unk_100249128;
    v9 = *(void **)(a1 + 48);
    v12 = *(id *)(a1 + 40);
    v13 = v4;
    v15 = Current;
    v14 = v9;
    v10 = v4;
    objc_msgSend(v12, "fetchRequest:completionHandler:", v8, v11);

  }
}

void sub_10015F3F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  double Current;
  __CFString *v8;
  __CFString *v9;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  __CFString *v49;
  id v50;
  uint8_t buf[4];
  void *v52;
  __int16 v53;
  id v54;

  v5 = a2;
  v6 = a3;
  Current = CFAbsoluteTimeGetCurrent();
  v8 = CFSTR("Failed");
  if (!v6)
    v8 = CFSTR("Success");
  v9 = v8;
  v10 = v6;
  v49 = v9;
  if (v6)
  {
    if (qword_1002A7918 != -1)
      dispatch_once(&qword_1002A7918, &stru_100249100);
    v11 = (void *)qword_1002A7920;
    if (os_log_type_enabled((os_log_t)qword_1002A7920, OS_LOG_TYPE_ERROR))
    {
      v12 = v11;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
      *(_DWORD *)buf = 138543618;
      v52 = v13;
      v53 = 2112;
      v54 = v10;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "public keys request failed with ServerHint %{public}@: %@", buf, 0x16u);

    }
    v14 = 0;
    v15 = v10;
    v16 = v10;
  }
  else
  {
    if (qword_1002A7918 != -1)
      dispatch_once(&qword_1002A7918, &stru_1002490E0);
    v48 = v10;
    v17 = (void *)qword_1002A7920;
    if (os_log_type_enabled((os_log_t)qword_1002A7920, OS_LOG_TYPE_DEFAULT))
    {
      v18 = v17;
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
      *(_DWORD *)buf = 138543362;
      v52 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "public keys request succeeded with ServerHint %{public}@", buf, 0xCu);

    }
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
    v22 = objc_msgSend((id)objc_opt_class(v20, v21), "logger");
    v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v24, "length")));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
    v28 = objc_msgSend((id)objc_opt_class(v26, v27), "formatEventName:application:", CFSTR("NetworkPublicKeysSize"), *(_QWORD *)(a1 + 40));
    v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    objc_msgSend(v23, "logMetric:withName:", v25, v29);

    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v50 = 0;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](PublicKeysResponse, "parseFromData:error:", v30, &v50));
    v15 = v50;

    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
    objc_msgSend(v14, "setMetadataValue:key:", v31, kTransparencyResponseMetadataKeyServerHint);

    v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "kt_dateToString"));
    objc_msgSend(v14, "setMetadataValue:key:", v33, CFSTR("ResponseTime"));

    v16 = v48;
  }
  v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  v36 = objc_msgSend((id)objc_opt_class(v34, v35), "logger");
  v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  v40 = objc_msgSend((id)objc_opt_class(v38, v39), "formatEventName:application:", CFSTR("NetworkPublicKeysEvent"), *(_QWORD *)(a1 + 40));
  v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
  objc_msgSend(v37, "logResultForEvent:hardFailure:result:", v41, 1, v15);

  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  v44 = objc_msgSend((id)objc_opt_class(v42, v43), "logger");
  v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
  v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", Current - *(double *)(a1 + 56)));
  v47 = (void *)objc_claimAutoreleasedReturnValue(+[KTLogClient formatEventName:application:state:](KTLogClient, "formatEventName:application:state:", CFSTR("NetworkPublicKeysTime"), *(_QWORD *)(a1 + 40), v49));
  objc_msgSend(v45, "logMetric:withName:", v46, v47);

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_10015F868(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015F898(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015FA84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_10015FAB4(uint64_t a1, uint64_t a2)
{
  KTLogNetworkRequest *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
  else
  {
    v3 = [KTLogNetworkRequest alloc];
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reportToAppleURI"));
    v5 = -[KTLogNetworkRequest initPOSTWithURL:data:uuid:application:](v3, "initPOSTWithURL:data:uuid:application:", v4, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

    objc_msgSend(v5, "setAdditionalHeaders:", &off_10025C5D0);
    objc_msgSend(v5, "setAllowEmptyData:", 1);
    objc_msgSend(v5, "setAuthenticated:", 1);
    objc_msgSend(v5, "setUseReversePush:", objc_msgSend(*(id *)(a1 + 32), "shouldUseReversePush:", 1));
    v6 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10015FBD4;
    v7[3] = &unk_100249198;
    v8 = *(id *)(a1 + 64);
    objc_msgSend(v6, "fetchRequest:completionHandler:", v5, v7);

  }
}

void sub_10015FBD4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if (a3)
  {
    v5 = a3;
    v6 = a2;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "userInfo"));
    v8 = objc_msgSend(v7, "mutableCopy");

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "serverHint"));
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, kTransparencyResponseMetadataKeyServerHint);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "domain"));
    v11 = objc_msgSend(v5, "code");

    v12 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v10, v11, v8));
  }
  else
  {
    v12 = 0;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_10015FE90(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  double Current;
  void *v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  __CFString *v22;
  void *v23;
  __CFString *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  const __CFString *v30;
  void *v31;
  void **v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, _QWORD *, _QWORD *);
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  id v43;

  v5 = a2;
  v6 = a3;
  Current = CFAbsoluteTimeGetCurrent();
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  v10 = (void *)objc_opt_class(v8, v9);
  if (*(_BYTE *)(a1 + 72))
    v11 = CFSTR("ReversePushFetchEvent");
  else
    v11 = CFSTR("NetworkFetchEvent");
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "formatEventName:application:", v11, *(_QWORD *)(a1 + 40)));

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  v15 = (void *)objc_opt_class(v13, v14);
  v43 = 0;
  v32 = _NSConcreteStackBlock;
  v33 = 3221225472;
  v34 = sub_1001600F8;
  v35 = &unk_100249228;
  v16 = v5;
  v36 = v16;
  v17 = v6;
  v37 = v17;
  v38 = *(id *)(a1 + 48);
  v18 = *(id *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(void **)(a1 + 40);
  v41 = v18;
  v39 = v19;
  v42 = *(_BYTE *)(a1 + 72);
  v40 = v20;
  objc_msgSend(v15, "doWithAnalyticsForEventName:error:block:", v12, &v43, &v32);
  v21 = v43;

  v22 = CFSTR("Failed");
  if (!v17)
  {
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "data", v32, v33, v34, v35, v36, v37, v38, v39));
    v24 = CFSTR("Success");
    if (!v23)
      v24 = CFSTR("Failed");
    v22 = v24;

  }
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics", v32, v33, v34, v35));
  v27 = objc_msgSend((id)objc_opt_class(v25, v26), "logger");
  v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", Current - *(double *)(a1 + 64)));
  if (*(_BYTE *)(a1 + 72))
    v30 = CFSTR("ReversePushFetchTime");
  else
    v30 = CFSTR("NetworkFetchTime");
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[KTLogClient formatEventName:application:state:](KTLogClient, "formatEventName:application:state:", v30, *(_QWORD *)(a1 + 40), v22));
  objc_msgSend(v28, "logMetric:withName:", v29, v31);

}

uint64_t sub_1001600F8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  void *v14;
  const __CFString *v15;
  void *v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  void *v23;
  const __CFString *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  const __CFString *v35;
  void *v36;
  int v37;
  uint64_t v38;
  __int16 v39;
  const __CFString *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  uint64_t v44;
  const __CFString *v45;
  void *v46;

  v6 = *(void **)(a1 + 32);
  if (v6
    && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data"))) != 0
    && (v8 = *(_QWORD *)(a1 + 40), v7, !v8))
  {
    if (qword_1002A7918 != -1)
      dispatch_once(&qword_1002A7918, &stru_100249200);
    v19 = (void *)qword_1002A7920;
    if (os_log_type_enabled((os_log_t)qword_1002A7920, OS_LOG_TYPE_DEFAULT))
    {
      v20 = *(_QWORD *)(a1 + 48);
      v21 = *(void **)(a1 + 32);
      v22 = v19;
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "request"));
      if (objc_msgSend(v23, "useReversePush"))
        v24 = CFSTR(" with reverse push");
      else
        v24 = &stru_1002508B8;
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverHint"));
      v37 = 138543874;
      v38 = v20;
      v39 = 2114;
      v40 = v24;
      v41 = 2114;
      v42 = v25;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "fetchId %{public}@%{public}@ succeeded with ServerHint %{public}@", (uint8_t *)&v37, 0x20u);

    }
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "transparencyAnalytics"));
    v28 = objc_msgSend((id)objc_opt_class(v26, v27), "logger");
    v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "data"));
    v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v30, "length")));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "transparencyAnalytics"));
    v34 = (void *)objc_opt_class(v32, v33);
    if (*(_BYTE *)(a1 + 80))
      v35 = CFSTR("ReversePushFetchSize");
    else
      v35 = CFSTR("NetworkFetchSize");
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "formatEventName:application:", v35, *(_QWORD *)(a1 + 64)));
    objc_msgSend(v29, "logMetric:withName:", v31, v36);

    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    return 1;
  }
  else
  {
    if (a3)
    {
      v45 = CFSTR("requestUUID");
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "UUIDString"));
      v46 = v9;
      *a3 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v46, &v45, 1));

    }
    if (qword_1002A7918 != -1)
      dispatch_once(&qword_1002A7918, &stru_1002491E0);
    v10 = (void *)qword_1002A7920;
    if (os_log_type_enabled((os_log_t)qword_1002A7920, OS_LOG_TYPE_ERROR))
    {
      v11 = *(_QWORD *)(a1 + 48);
      v12 = *(void **)(a1 + 32);
      v13 = v10;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "request"));
      if (objc_msgSend(v14, "useReversePush"))
        v15 = CFSTR(" with reverse push");
      else
        v15 = &stru_1002508B8;
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverHint"));
      v17 = *(_QWORD *)(a1 + 40);
      v37 = 138544130;
      v38 = v11;
      v39 = 2114;
      v40 = v15;
      v41 = 2114;
      v42 = v16;
      v43 = 2112;
      v44 = v17;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "fetchId %{public}@%{public}@ failed with ServerHint %{public}@: %@", (uint8_t *)&v37, 0x2Au);

    }
    if (a2)
      *a2 = objc_retainAutorelease(*(id *)(a1 + 40));
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    return 0;
  }
}

void sub_1001604A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_1001604D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_1001606A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_1001606D8(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(*(id *)(a1 + 32), "application")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyApplication applicationIdentifierForValue:](TransparencyApplication, "applicationIdentifierForValue:", v3));

    v6 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "batchQueryURI"));
    v8 = *(unsigned __int8 *)(a1 + 64);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100160820;
    v10[3] = &unk_100249298;
    v9 = *(_QWORD *)(a1 + 48);
    v12 = *(id *)(a1 + 56);
    v11 = *(id *)(a1 + 32);
    objc_msgSend(v5, "fetchMessage:uri:uuid:application:userInitiated:completionHandler:", v6, v7, v9, v4, v8, v10);

  }
}

void sub_100160820(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v5 = a2;
  v6 = a3;
  if (v5 && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data")), v7, !v6) && v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v15 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](BatchQueryResponse, "parseFromData:error:", v8, &v15));
    v10 = v15;

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
    objc_msgSend(v9, "setMetadataValue:key:", v11, kTransparencyResponseMetadataKeyServerHint);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "kt_dateToString"));
    objc_msgSend(v9, "setMetadataValue:key:", v13, CFSTR("ResponseTime"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "request"));
    LODWORD(v13) = objc_msgSend(v14, "useReversePush");

    if ((_DWORD)v13)
      objc_msgSend(v9, "setMetadataValue:key:", CFSTR("YES"), CFSTR("APS"));
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_100160DB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_100160DE0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_100160E10(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_100160E44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100160F9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_100161170(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_1001611A0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(*(id *)(a1 + 32), "application")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyApplication applicationIdentifierForValue:](TransparencyApplication, "applicationIdentifierForValue:", v3));

    v6 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "queryURI"));
    v8 = *(unsigned __int8 *)(a1 + 64);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001612D0;
    v10[3] = &unk_100249198;
    v9 = *(_QWORD *)(a1 + 48);
    v11 = *(id *)(a1 + 56);
    objc_msgSend(v5, "fetchMessage:uri:uuid:application:userInitiated:completionHandler:", v6, v7, v9, v4, v8, v10);

  }
}

void sub_1001612D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v5 = a2;
  v6 = a3;
  if (v5 && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data")), v7, !v6) && v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v15 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](QueryResponse, "parseFromData:error:", v8, &v15));
    v10 = v15;

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
    objc_msgSend(v9, "setMetadataValue:key:", v11, kTransparencyResponseMetadataKeyServerHint);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "kt_dateToString"));
    objc_msgSend(v9, "setMetadataValue:key:", v13, CFSTR("ResponseTime"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "request"));
    LODWORD(v13) = objc_msgSend(v14, "useReversePush");

    if ((_DWORD)v13)
      objc_msgSend(v9, "setMetadataValue:key:", CFSTR("YES"), CFSTR("APS"));
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_1001615B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_100161778(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_1001617A8(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v3 = *(void **)(a1 + 32);
    v4 = *(_QWORD *)(a1 + 40);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "consistencyProofURI"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100161880;
    v7[3] = &unk_100249198;
    v6 = *(_QWORD *)(a1 + 48);
    v8 = *(id *)(a1 + 56);
    objc_msgSend(v3, "fetchMessage:uri:uuid:application:userInitiated:completionHandler:", v4, v5, v6, 0, 0, v7);

  }
}

void sub_100161880(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v5 = a2;
  v6 = a3;
  if (v5 && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data")), v7, !v6) && v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v15 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](ConsistencyProofResponse, "parseFromData:error:", v8, &v15));
    v10 = v15;

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
    objc_msgSend(v9, "setMetadataValue:key:", v11, kTransparencyResponseMetadataKeyServerHint);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "kt_dateToString"));
    objc_msgSend(v9, "setMetadataValue:key:", v13, CFSTR("ResponseTime"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "request"));
    LODWORD(v13) = objc_msgSend(v14, "useReversePush");

    if ((_DWORD)v13)
      objc_msgSend(v9, "setMetadataValue:key:", CFSTR("YES"), CFSTR("APS"));
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_100161BB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7920;
  qword_1002A7920 = (uint64_t)v1;

}

void sub_100161BE0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;

  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v3 = *(void **)(a1 + 32);
    v4 = *(_QWORD *)(a1 + 40);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "revisionLogProofURI"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100161CB8;
    v7[3] = &unk_100249198;
    v6 = *(_QWORD *)(a1 + 48);
    v8 = *(id *)(a1 + 56);
    objc_msgSend(v3, "fetchMessage:uri:uuid:application:userInitiated:completionHandler:", v4, v5, v6, 0, 0, v7);

  }
}

void sub_100161CB8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v5 = a2;
  v6 = a3;
  if (v5 && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data")), v7, !v6) && v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    v15 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](RevisionLogInclusionProofResponse, "parseFromData:error:", v8, &v15));
    v10 = v15;

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serverHint"));
    objc_msgSend(v9, "setMetadataValue:key:", v11, kTransparencyResponseMetadataKeyServerHint);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "kt_dateToString"));
    objc_msgSend(v9, "setMetadataValue:key:", v13, CFSTR("ResponseTime"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "request"));
    LODWORD(v13) = objc_msgSend(v14, "useReversePush");

    if ((_DWORD)v13)
      objc_msgSend(v9, "setMetadataValue:key:", CFSTR("YES"), CFSTR("APS"));
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_1001620B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1001620E0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_onQueueResetReachabilityDependency");
}

void sub_1001620E8(uint64_t a1, void *a2)
{
  id *v2;
  NSObject *v3;
  id WeakRetained;
  nw_path_status_t status;
  const __CFString *v6;
  int v7;
  const __CFString *v8;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  status = nw_path_get_status(v3);

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    v6 = CFSTR("unavailable");
    if (status == nw_path_status_satisfied)
      v6 = CFSTR("available");
    v7 = 138412290;
    v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "nw_path update: network is %@", (uint8_t *)&v7, 0xCu);
  }
  objc_msgSend(WeakRetained, "_onqueueSetNetworkReachability:", status == nw_path_status_satisfied);

}

void sub_1001622D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001622F0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "haveNetwork");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_100162640(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100162670(uint64_t a1)
{
  id WeakRetained;
  unsigned int v2;
  _BOOL4 v3;
  NSObject *v4;
  _QWORD block[5];
  uint8_t buf[4];
  uint64_t v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_msgSend(WeakRetained, "haveNetwork");
  v3 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v3)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Network available", buf, 2u);
    }
  }
  else
  {
    if (v3)
    {
      *(_DWORD *)buf = 134217984;
      v7 = 0x4028000000000000;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Network still not available, retrying after waiting %2.1f hours", buf, 0xCu);
    }
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001627A8;
    block[3] = &unk_10023A390;
    block[4] = WeakRetained;
    dispatch_async(v4, block);

  }
}

id sub_1001627A8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_onQueueResetReachabilityDependency");
}

void sub_1001627B0(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "timer"));

    WeakRetained = v3;
    if (v2)
    {
      objc_msgSend(v3, "_onQueueRunReachabilityDependency");
      WeakRetained = v3;
    }
  }

}

id sub_100162918(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueSetNetworkReachability:", *(unsigned __int8 *)(a1 + 40));
}

void sub_10016358C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100163814(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void (*v12)(void);
  id v13;

  v2 = (void *)a1[7];
  v3 = a1[4];
  v4 = a1[5];
  v13 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "getOptInHistory:store:error:", v3, v4, &v13));
  v6 = (unint64_t)v13;
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));

  if (!(v7 | v6))
  {
    v12 = *(void (**)(void))(a1[6] + 16);
LABEL_6:
    v12();
    goto LABEL_7;
  }
  if (!v7)
  {
    v12 = *(void (**)(void))(a1[6] + 16);
    goto LABEL_6;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "objectAtIndexedSubscript:", 1));
  v9 = objc_msgSend(v8, "BOOLValue");

  v10 = a1[6];
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v7, "objectAtIndexedSubscript:", 0));
  (*(void (**)(uint64_t, id, void *, _QWORD))(v10 + 16))(v10, v9, v11, 0);

LABEL_7:
}

uint64_t sub_100163920(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

int64_t sub_100163ED8(id a1, NSArray *a2, NSArray *a3)
{
  NSArray *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](a2, "objectAtIndexedSubscript:", 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](v4, "objectAtIndexedSubscript:", 0));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

void sub_1001644C8(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  if (v4)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    objc_msgSend(v3, "logResultForEvent:hardFailure:result:", *(_QWORD *)(a1 + 32), 1, v4);

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "getOptInState:", *(_QWORD *)(a1 + 48));
  }

}

void sub_10016464C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateMachine"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateMachine"));
    v4 = *(_QWORD *)(a1 + 48);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "applicationId"));
    v9 = 0;
    v10 = 0;
    objc_msgSend(v3, "changeOptInState:application:loggableData:error:", v4, v5, &v10, &v9);
    v6 = v10;
    v7 = v9;

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    v8 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorInternal, -120, CFSTR("this opt-in manager does not have a context and/or state machine, cannot change opt-in state")));
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
}

void sub_100164D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100164D2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100164D5C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100164D8C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100164DBC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100164DEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100164E1C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  uint8_t buf[4];
  id v23;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!v5 || v6)
  {
    if (qword_1002A7928 != -1)
      dispatch_once(&qword_1002A7928, &stru_1002495A0);
    v17 = qword_1002A7930;
    if (os_log_type_enabled((os_log_t)qword_1002A7930, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "failed to check opt-in after CDP reset, network failure: %@", buf, 0xCu);
    }
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "metadata"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("ResponseTime")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate kt_dateFromString:](NSDate, "kt_dateFromString:", v9));

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "context"));
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(_QWORD *)(a1 + 40);
    v21 = 0;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1001650BC;
    v18[3] = &unk_100249608;
    v19 = *(id *)(a1 + 48);
    v20 = WeakRetained;
    v14 = objc_msgSend(v11, "handleQueryResponse:queryRequest:receiptDate:fetchId:error:transparentDataHandler:", v5, v12, v10, v13, &v21, v18);
    v15 = v21;

    if (v14 != (id)1)
    {
      if (qword_1002A7928 != -1)
        dispatch_once(&qword_1002A7928, &stru_100249628);
      v16 = qword_1002A7930;
      if (os_log_type_enabled((os_log_t)qword_1002A7930, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v23 = v15;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "failed to check opt-in after CDP reset, KT server failure: %@", buf, 0xCu);
      }
    }

  }
}

void sub_10016508C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_1001650BC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  NSObject *v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;

  if (objc_msgSend(a3, "currentAccountOptInState") == (id)1)
  {
    if (qword_1002A7928 != -1)
      dispatch_once(&qword_1002A7928, &stru_1002495C0);
    v4 = (void *)qword_1002A7930;
    if (os_log_type_enabled((os_log_t)qword_1002A7930, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v5 = *(void **)(a1 + 40);
      v7 = v4;
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "applicationId"));
      *(_DWORD *)buf = 141558530;
      v17 = 1752392040;
      v18 = 2112;
      v19 = v6;
      v20 = 2114;
      v21 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{mask.hash}@ was opted in to %{public}@ before CDP Reset, sending change notification", buf, 0x20u);

    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDistributedNotificationCenter defaultCenter](NSDistributedNotificationCenter, "defaultCenter"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "notificationKey"));
    objc_msgSend(v9, "postNotificationName:object:userInfo:deliverImmediately:", v10, 0, 0, 1);

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyFollowup instance](TransparencyFollowup, "instance"));
    v15 = 0;
    v12 = objc_msgSend(v11, "clearAllFollowups:", &v15);
    v13 = v15;

    if ((v12 & 1) == 0)
    {
      if (qword_1002A7928 != -1)
        dispatch_once(&qword_1002A7928, &stru_1002495E0);
      v14 = qword_1002A7930;
      if (os_log_type_enabled((os_log_t)qword_1002A7930, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v17 = (uint64_t)v13;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "failed to clear existing follow ups on CDP reset: %@", buf, 0xCu);
      }
    }

  }
}

void sub_1001652D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100165300(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100165330(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_1001655B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_1001655E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100165618(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_100165754(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7930;
  qword_1002A7930 = (uint64_t)v1;

}

void sub_1001658F8(id a1)
{
  uint64_t v1;
  void *v2;
  utsname v3;

  bzero(&v3, 0x500uLL);
  uname(&v3);
  v1 = objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v3.machine, 4));
  v2 = (void *)qword_1002A7938;
  qword_1002A7938 = v1;

}

void sub_100165F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100165F28(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7950;
  qword_1002A7950 = (uint64_t)v1;

}

void sub_100165F58(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  KTPendingFlag *v5;
  void *v6;
  void *v7;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "intendedState"));
  objc_msgSend(WeakRetained, "setNextState:", v3);

  if ((a2 & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "stateMachine"));
    v5 = -[KTPendingFlag initWithFlag:conditions:delayInSeconds:]([KTPendingFlag alloc], "initWithFlag:conditions:delayInSeconds:", CFSTR("RepairIDSFlag"), 2, 43200.0);
    objc_msgSend(v4, "handlePendingFlag:", v5);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishedOp"));
  objc_msgSend(v6, "addOperation:", v7);

}

void sub_100166654(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100166684(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001666B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001666E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100166844(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100166A90(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100166B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100167268(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016759C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001675CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001675FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016762C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001677B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167CDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167D0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167D3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167D6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167D9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167F94(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100167FC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016816C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100168184(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100168194(uint64_t a1)
{

}

id sub_10016819C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[3];
  _QWORD v13[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("LogBeginMs"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("InResetWindow"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("ktTLTLogBeginMs"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
  v12[0] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "keyBag"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(v5, "tltLogBeginningMs")));
  v13[0] = v6;
  v12[1] = v2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "keyBag"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(v7, "patLogBeginningMs")));
  v13[1] = v8;
  v12[2] = v3;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "inResetWindow")));
  v13[2] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 3));

  return v10;
}

void sub_100168528(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168B2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168B5C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168B8C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;

  v2 = *(void **)(a1 + 32);
  v13 = 0;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "createManagedObjectWithError:", &v13));
  v4 = v13;
  if (!v3)
  {
    v5 = *(void **)(a1 + 32);
    v12 = v4;
    v3 = objc_msgSend(v5, "copyManagedObject:", &v12);
    v6 = v12;

    v4 = v6;
  }
  objc_msgSend(v3, "setUnsigned:value:", "signatureVerified", 1);
  objc_msgSend(v3, "setUnsigned:value:", "inclusionVerified", 1);
  v7 = *(void **)(a1 + 40);
  v11 = v4;
  v8 = objc_msgSend(v7, "persistWithError:", &v11);
  v9 = v11;

  if ((v8 & 1) == 0)
  {
    if (qword_1002A7958 != -1)
      dispatch_once(&qword_1002A7958, &stru_100249A58);
    v10 = qword_1002A7960;
    if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "failed to save signature result for STH: %@", buf, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 40), "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("verifySTHSignature"), v9);
  }

}

void sub_100168D1C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168D4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168D7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168DAC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  id v10;
  id v11;
  uint8_t buf[4];
  id v13;

  v2 = *(void **)(a1 + 32);
  v11 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "createManagedObjectWithError:", &v11));
  v4 = v11;
  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 40), "onMocSetMapHead:signatureResult:signatureError:", v3, 1, 0);
    objc_msgSend(*(id *)(a1 + 40), "onMocSetMapHead:inclusionResult:inclusionError:", v3, 1, 0);
    objc_msgSend(*(id *)(a1 + 40), "onMocSetMapHead:mmdResult:mmdError:", v3, 1, 0);
    v5 = *(void **)(a1 + 40);
    v10 = v4;
    v6 = objc_msgSend(v5, "persistWithError:", &v10);
    v7 = v10;

    if ((v6 & 1) == 0)
    {
      if (qword_1002A7958 != -1)
        dispatch_once(&qword_1002A7958, &stru_100249AD8);
      v8 = qword_1002A7960;
      if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v13 = v7;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "failed persist SMH: %@", buf, 0xCu);
      }
    }
    v4 = v7;
  }
  else
  {
    if (qword_1002A7958 != -1)
      dispatch_once(&qword_1002A7958, &stru_100249AB8);
    v9 = qword_1002A7960;
    if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "failed to create SMH object: %@", buf, 0xCu);
    }
  }

}

void sub_100168F88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100168FB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_1001691E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100169554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001695F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10016967C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100169B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

uint64_t sub_100169BE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100169F78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_100169FA8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016A48C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10016A5C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10016A72C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  const __CFString *v15;
  void *v16;
  id *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __CFString *v21;
  NSObject *v22;
  const __CFString *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  void *v28;
  const __CFString *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t buf[4];
  const __CFString *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  __CFString *v41;

  v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "applicationKeyStores"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

    if (v7)
    {
      v8 = objc_msgSend(v7, "readyWithRefresh:", 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "contextStore"));

      if (!v9)
      {
        if (qword_1002A7958 != -1)
          dispatch_once(&qword_1002A7958, &stru_100249B58);
        v10 = qword_1002A7960;
        if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "fetchKeyStore: application key store present with no context", buf, 2u);
        }
        if (qword_1002A7958 != -1)
          dispatch_once(&qword_1002A7958, &stru_100249B78);
        v11 = (void *)qword_1002A7960;
        if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_DEBUG))
        {
          v12 = *(void **)(a1 + 56);
          v13 = v11;
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "followup"));
          v15 = CFSTR("YES");
          if (!v14)
            v15 = CFSTR("NO");
          *(_DWORD *)buf = 138412290;
          v37 = v15;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "fetchKeyStore: followup controller exists? %@", buf, 0xCu);

        }
        objc_msgSend(v7, "setContextStore:", *(_QWORD *)(a1 + 56));
      }
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataStore"));
      v34 = 0;
      v17 = (id *)&v34;
      objc_msgSend(v7, "updateWithPublicKeyResponse:dataStore:error:", v5, v16, &v34);
    }
    else
    {
      v18 = *(void **)(a1 + 32);
      v19 = *(_QWORD *)(a1 + 40);
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataStore"));
      v20 = *(_QWORD *)(a1 + 56);
      v35 = 0;
      v17 = (id *)&v35;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "createApplicationKeyStore:keyStoreResponse:dataStore:contextStore:error:", v19, v5, v16, v20, &v35));
      v8 = 1;
    }
    v21 = (__CFString *)*v17;

    objc_msgSend(*(id *)(a1 + 32), "updateTLTKeyStoreWithApplicationKeyStore:", v7);
    if (!v7 || v21)
    {
      if (qword_1002A7958 != -1)
        dispatch_once(&qword_1002A7958, &stru_100249B98);
      v28 = (void *)qword_1002A7960;
      if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_ERROR))
      {
        v29 = *(const __CFString **)(a1 + 40);
        v30 = v28;
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "kt_hexString"));
        *(_DWORD *)buf = 138412802;
        v37 = v29;
        v38 = 2112;
        v39 = v32;
        v40 = 2112;
        v41 = v21;
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "failed to configure application '%@' keystore with PublicKeysResponse: %@. Error: %@", buf, 0x20u);

      }
    }
    else
    {
      if (((v8 | objc_msgSend(v7, "readyWithRefresh:", 0) ^ 1) & 1) == 0)
      {
        if (qword_1002A7958 != -1)
          dispatch_once(&qword_1002A7958, &stru_100249BB8);
        v22 = qword_1002A7960;
        if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_DEFAULT))
        {
          v23 = *(const __CFString **)(a1 + 40);
          *(_DWORD *)buf = 138412290;
          v37 = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Retrying pending validations after refreshing old %@ key store", buf, 0xCu);
        }
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "delegate"));
        objc_msgSend(v24, "retryPendingValidations:", *(_QWORD *)(a1 + 40));

      }
      v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "delegate"));
      objc_msgSend((id)v25, "triggerStatusUpdate:", *(_QWORD *)(a1 + 40));

      objc_msgSend(*(id *)(a1 + 32), "setForceRefresh:", 0);
      v26 = *(void **)(a1 + 32);
      v33 = 0;
      LOBYTE(v25) = objc_msgSend(v26, "saveDiskApplicationKeyStore:error:", v7, &v33);
      v21 = (__CFString *)v33;
      if ((v25 & 1) == 0)
      {
        if (qword_1002A7958 != -1)
          dispatch_once(&qword_1002A7958, &stru_100249BD8);
        v27 = qword_1002A7960;
        if (os_log_type_enabled((os_log_t)qword_1002A7960, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v37 = v21;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "failed to write keys to disk: %@", buf, 0xCu);
        }
      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();

  }
}

void sub_10016AC08(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016AC38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016AC68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016AC98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016ACC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016B08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;

  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v3, *(_QWORD *)(a1 + 32), a2);
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configureGroup"));
  dispatch_group_leave(v4);

}

uint64_t sub_10016B0E0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

void sub_10016B644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10016B670(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016B6A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016B6D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016B700(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016B9F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016BA20(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016BBC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016BF00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016BF30(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016BF60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016C51C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016C54C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016C57C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7960;
  qword_1002A7960 = (uint64_t)v1;

}

void sub_10016CC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10016CC34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10016CC44(uint64_t a1)
{

}

void sub_10016CC4C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_10016D4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

void sub_10016D510(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[KTStatusServer auditorReportForKTRequest:](KTStatusServer, "auditorReportForKTRequest:", a2));
  if (v4)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, kTransparencyAuditorReportUUID);

  }
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);

}

void sub_10016D58C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "request"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "request"));
    v6 = objc_claimAutoreleasedReturnValue(+[KTStatusServer auditorReportForKTRequest:](KTStatusServer, "auditorReportForKTRequest:", v5));
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mutation"));

    if (v7)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mutation"));
      v6 = objc_claimAutoreleasedReturnValue(+[KTStatusServer auditorReportForKTSMT:](KTStatusServer, "auditorReportForKTSMT:", v5));
    }
    else
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sth"));

      if (!v8)
      {
        v11 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDatabase, -299, CFSTR("failure event with no associated entity")));
        v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v13 = *(void **)(v12 + 40);
        *(_QWORD *)(v12 + 40) = v11;

        goto LABEL_10;
      }
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sth"));
      v6 = objc_claimAutoreleasedReturnValue(+[KTStatusServer auditorReportForSTH:](KTStatusServer, "auditorReportForSTH:", v5));
    }
  }
  v9 = (void *)v6;

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUIDString"));
    objc_msgSend(v9, "setObject:forKeyedSubscript:", v10, kTransparencyAuditorReportUUID);

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v9);
    goto LABEL_14;
  }
LABEL_10:
  if (qword_1002A7968 != -1)
    dispatch_once(&qword_1002A7968, &stru_100249E10);
  v14 = qword_1002A7970;
  if (os_log_type_enabled((os_log_t)qword_1002A7970, OS_LOG_TYPE_ERROR))
  {
    v15 = *(_QWORD *)(a1 + 32);
    v16 = 138412290;
    v17 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "skipping eventId %@ due to unknown type", (uint8_t *)&v16, 0xCu);
  }
LABEL_14:

}

void sub_10016D7B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7970;
  qword_1002A7970 = (uint64_t)v1;

}

void sub_10016D924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016D948(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  NSObject *v3;
  uint8_t v4[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transaction"));

  if (v2)
  {
    if (qword_1002A7978 != -1)
      dispatch_once(&qword_1002A7978, &stru_100249E70);
    v3 = qword_1002A7980;
    if (os_log_type_enabled((os_log_t)qword_1002A7980, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "StaticKeyContactsSync: aborting transaction for syncing", v4, 2u);
    }
    objc_msgSend(WeakRetained, "setTransaction:", 0);
  }

}

void sub_10016DA00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016DB60(uint64_t a1)
{
  NSObject *v2;
  id v3;
  uint8_t buf[16];

  if (objc_msgSend(*(id *)(a1 + 32), "started"))
  {
    if (qword_1002A7978 != -1)
      dispatch_once(&qword_1002A7978, &stru_100249E90);
    v2 = qword_1002A7980;
    if (os_log_type_enabled((os_log_t)qword_1002A7980, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "StaticKeyContactsSync: resumed more then once", buf, 2u);
    }
  }
  else
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v3, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "contactStoreDidChange:", CNContactStoreDidChangeNotification, 0);
    objc_msgSend(*(id *)(a1 + 32), "setStarted:", 1);

  }
}

void sub_10016DC4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016DC7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016DD8C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016DF98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016DFC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

id sub_10016DFF8(uint64_t a1)
{
  void *v2;

  v2 = (void *)os_transaction_create("com.apple.transparency.merge.contacts");
  objc_msgSend(*(id *)(a1 + 32), "setTransaction:", v2);

  objc_msgSend(*(id *)(a1 + 32), "onQueueMergeChangesFromContacts");
  return objc_msgSend(*(id *)(a1 + 32), "setTransaction:", 0);
}

void sub_10016E10C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016E98C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016E9BC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016E9EC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EA1C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EA4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EA7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EAAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EADC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EB0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016EB3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7980;
  qword_1002A7980 = (uint64_t)v1;

}

void sub_10016F29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016F2C4(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  id v3;
  _QWORD block[4];
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "idsControllerQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016F350;
  block[3] = &unk_10023A390;
  v5 = WeakRetained;
  v3 = WeakRetained;
  dispatch_async(v2, block);

}

id sub_10016F350(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "checkAccountChange");
}

id sub_10016F3E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "onQueueDrain");
}

void sub_10016F6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016F70C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id WeakRetained;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  void *i;
  void *v17;
  KTIDSSignInServiceUserInfo *v18;
  KTIDSSignInServiceUserInfo *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t v25[128];
  uint8_t buf[4];
  id v27;

  v5 = a2;
  v6 = a3;
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "idsQueue"));
  dispatch_assert_queue_V2(v7);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v6)
  {
    if (qword_1002A7988 != -1)
      dispatch_once(&qword_1002A7988, &stru_10024A0D0);
    v9 = qword_1002A7990;
    if (os_log_type_enabled((os_log_t)qword_1002A7990, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "KTIDSActualOperations: statusOfUsersOnService error: %@", buf, 0xCu);
    }
    goto LABEL_26;
  }
  if (qword_1002A7988 != -1)
    dispatch_once(&qword_1002A7988, &stru_10024A0F0);
  v10 = qword_1002A7990;
  if (os_log_type_enabled((os_log_t)qword_1002A7990, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v27 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "KTIDSActualOperations: statusOfUsersOnService %@", buf, 0xCu);
  }
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serviceUserInfos"));
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (!v12)
  {

    goto LABEL_25;
  }
  v13 = v12;
  v20 = v5;
  v14 = 0;
  v15 = *(_QWORD *)v22;
  do
  {
    for (i = 0; i != v13; i = (char *)i + 1)
    {
      if (*(_QWORD *)v22 != v15)
        objc_enumerationMutation(v11);
      v17 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
      if (objc_msgSend(v17, "type") == (id)1)
      {
        v18 = -[KTIDSSignInServiceUserInfo initWithUserInfo:]([KTIDSSignInServiceUserInfo alloc], "initWithUserInfo:", v17);
        v14 = 1;
      }
      else
      {
        if (objc_msgSend(v17, "type"))
          continue;
        v18 = -[KTIDSSignInServiceUserInfo initWithType:status:]([KTIDSSignInServiceUserInfo alloc], "initWithType:status:", 0, objc_msgSend(v17, "status"));
      }
      objc_msgSend(WeakRetained, "onQueueProcessStatus:", v18);

    }
    v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  }
  while (v13);

  v5 = v20;
  if ((v14 & 1) != 0)
    goto LABEL_26;
LABEL_25:
  v19 = -[KTIDSSignInServiceUserInfo initWithType:status:]([KTIDSSignInServiceUserInfo alloc], "initWithType:status:", 1, 0);
  objc_msgSend(WeakRetained, "onQueueProcessStatus:", v19);

LABEL_26:
}

void sub_10016F9E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_10016FA18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

uint64_t sub_10016FF30(uint64_t a1, int a2)
{
  NSObject *v4;
  _DWORD v6[2];

  if (qword_1002A7988 != -1)
    dispatch_once(&qword_1002A7988, &stru_10024A138);
  v4 = qword_1002A7990;
  if (os_log_type_enabled((os_log_t)qword_1002A7990, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IDS self heal returned: %{BOOL}d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100170018(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

uint64_t sub_100170138(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100170218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100170378(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v5 = a3;
  v6 = a2;
  v10 = objc_alloc_init((Class)IDSKTOptInOutStatusData);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "optInStatus"));
  objc_msgSend(v10, "setOptInStatus:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "publicAccountKey"));
  objc_msgSend(v10, "setPublicAccountKey:", v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ktApplication"));
  objc_msgSend(v10, "setKtApplication:", v9);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v10, v6);
}

void sub_100170538(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100170A28(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100170A58(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void (**v4)(_QWORD, _QWORD);
  int v5;
  uint64_t v6;

  if (qword_1002A7988 != -1)
    dispatch_once(&qword_1002A7988, &stru_10024A210);
  v2 = qword_1002A7990;
  if (os_log_type_enabled((os_log_t)qword_1002A7990, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v5 = 138412290;
    v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "worker: %@", (uint8_t *)&v5, 0xCu);
  }
  v4 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "idsObserver"));
  v4[2](v4, *(_QWORD *)(a1 + 32));

}

void sub_100170B40(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100170C88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100170E14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100170F78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_1001710DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_100171240(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_1001713A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7990;
  qword_1002A7990 = (uint64_t)v1;

}

void sub_1001718A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001718DC(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  int v4;
  void *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend(WeakRetained, "allDependentsSuccessful") & 1) != 0)
    {
      objc_msgSend(v2, "groupStart");
    }
    else
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "error"));
        v4 = 138412290;
        v5 = v3;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Not running due to some failed dependent: %@", (uint8_t *)&v4, 0xCu);

      }
      objc_msgSend(v2, "cancel");
    }
  }
  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v4) = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "received callback for released object", (uint8_t *)&v4, 2u);
  }

}

void sub_100171A00(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  uint8_t v3[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "completeOperation");
  }
  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "received callback for released object", v3, 2u);
  }

}

void sub_100172140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100172158(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 72);
  return result;
}

void sub_100172218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100172230(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 73);
  return result;
}

uint64_t sub_100172384(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 73) = 1;
  return result;
}

uint64_t sub_10017239C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 72) = 1;
  return result;
}

void sub_100172768(uint64_t a1)
{
  void *v2;
  void *v3;

  if (objc_msgSend(*(id *)(a1 + 32), "fillInError"))
  {
    v2 = *(void **)(a1 + 32);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "internalSuccesses"));
    objc_msgSend(v2, "allSuccessful:", v3);

  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 72) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 73) = 1;
}

void sub_100172A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100172C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100172C70(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1001731A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1001731BC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "log"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "registerPushReceiver: %@", (uint8_t *)&v7, 0xCu);
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "receivers"));
    objc_msgSend(v6, "addObject:", *(_QWORD *)(a1 + 32));

  }
}

void sub_100173414(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "receivers"));
  v3 = objc_msgSend(v2, "copy");

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deliveryQueue"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001734E8;
  v8[3] = &unk_10023CD98;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v9 = v3;
  v10 = v5;
  v11 = v6;
  v12 = *(id *)(a1 + 48);
  v7 = v3;
  dispatch_async(v4, v8);

}

void sub_1001734E8(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint8_t buf[4];
  void *v17;
  _BYTE v18[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v18, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v13;
    *(_QWORD *)&v4 = 138412290;
    v11 = v4;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v7);
        v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "log", v11, (_QWORD)v12));
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = v11;
          v17 = v8;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "didReceiveIncomingMessage: recv %@", buf, 0xCu);
        }

        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "topic"));
        objc_msgSend(v8, "notifyPushChange:userInfo:", v10, *(_QWORD *)(a1 + 56));

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v18, 16);
    }
    while (v5);
  }

}

void sub_100173780(id a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale ISOCountryCodes](NSLocale, "ISOCountryCodes"));
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld"), +[NSLocale ITUCountryCodeForISOCountryCode:](NSLocale, "ITUCountryCodeForISOCountryCode:", v7)));
        objc_msgSend(v1, "setValue:forKey:", v7, v8);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }
  v9 = (void *)qword_1002A79A8;
  qword_1002A79A8 = (uint64_t)v1;

}

void sub_1001740E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_100174110(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_100174140(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_100174170(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_1001741A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_1001741D0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_100174200(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79C0;
  qword_1002A79C0 = (uint64_t)v1;

}

void sub_100174D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100174DCC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitionOperation"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));

    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "domain"));
      if (!objc_msgSend(v5, "isEqualToString:", CFSTR("KTResultOperationError")))
      {
LABEL_6:

        goto LABEL_7;
      }
      v6 = objc_msgSend(v4, "code");

      if (v6 == (id)3)
      {
        v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "queue"));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100174EDC;
        block[3] = &unk_10023B3A8;
        v10 = v8;
        v11 = v4;
        dispatch_sync(v7, block);

        v5 = v10;
        goto LABEL_6;
      }
    }
LABEL_7:

    WeakRetained = v8;
  }

}

id sub_100174EDC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueuePerformTimeoutWithUnderlyingError:", *(_QWORD *)(a1 + 40));
}

void sub_100174EE8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100174F78;
    block[3] = &unk_10023A390;
    v5 = v2;
    dispatch_async(v3, block);

  }
}

void sub_100174F78(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:description:](NSError, "errorWithDomain:code:description:", CFSTR("KTResultOperationError"), 4, CFSTR("SIGTERM happened")));
  objc_msgSend(*(id *)(a1 + 32), "_onqueuePerformTimeoutWithUnderlyingError:", v2);

}

void sub_1001753DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100175400(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_onqueuePerformTimeoutWithUnderlyingError:", 0);

}

void sub_100176510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100176524(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_onqueuePerformTimeoutWithUnderlyingError");

}

id sub_100176694(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "completed");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "onqueueStartFinishOperation:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_100177354(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_100177384(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_1001773B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_1001773E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_100177414(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_100177444(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_100177574(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  KTTransparentData *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  unsigned __int8 v21;
  id v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  id v32;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  if (!v12)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    goto LABEL_17;
  }
  v28 = 0;
  v16 = -[KTTransparentData initWithUriVRFOutput:mapLeaf:pendingSMTs:error:]([KTTransparentData alloc], "initWithUriVRFOutput:mapLeaf:pendingSMTs:error:", v12, v13, v14, &v28);
  v17 = v28;
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "applicationKeyStore"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSince1970:](NSDate, "dateWithTimeIntervalSince1970:", (double)(unint64_t)objc_msgSend(v18, "patLogBeginningMs") / 1000.0));
  -[KTTransparentData setCurrentTreeEpochBeginDate:](v16, "setCurrentTreeEpochBeginDate:", v19);

  if (!v16)
  {
    if (qword_1002A79C8 != -1)
      dispatch_once(&qword_1002A79C8, &stru_10024A510);
    v23 = qword_1002A79D0;
    if (os_log_type_enabled((os_log_t)qword_1002A79D0, OS_LOG_TYPE_ERROR))
    {
      v24 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v30 = v24;
      v31 = 2112;
      v32 = v17;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "QueryResponse for fetchId %{public}@ failed to build transparentData: %@", buf, 0x16u);
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    goto LABEL_16;
  }
  v20 = *(_QWORD *)(a1 + 48);
  v27 = v17;
  v21 = -[KTTransparentData verifyServerInvariantsAt:error:](v16, "verifyServerInvariantsAt:error:", v20, &v27);
  v22 = v27;

  if ((v21 & 1) == 0)
  {
    if (qword_1002A79C8 != -1)
      dispatch_once(&qword_1002A79C8, &stru_10024A530);
    v25 = qword_1002A79D0;
    if (os_log_type_enabled((os_log_t)qword_1002A79D0, OS_LOG_TYPE_ERROR))
    {
      v26 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v30 = v26;
      v31 = 2112;
      v32 = v22;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "QueryResponse for fetchId %{public}@ failed server invariant verification: %@", buf, 0x16u);
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    v17 = v22;
LABEL_16:

    goto LABEL_17;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();

LABEL_17:
}

void sub_100177870(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_1001778A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79D0;
  qword_1002A79D0 = (uint64_t)v1;

}

void sub_100177EC0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100177EF0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100177F20(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100177F50(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100177F80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100177FB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79E0;
  qword_1002A79E0 = (uint64_t)v1;

}

void sub_100178210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100178234(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100178244(uint64_t a1)
{

}

void sub_10017824C(uint64_t a1)
{
  double v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  _QWORD v43[4];
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id obj;
  uint8_t buf[4];
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  __int16 v54;
  void *v55;
  __int16 v56;
  id v57;

  +[TransparencySettings defaultQueryCacheTimeout](TransparencySettings, "defaultQueryCacheTimeout");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", -v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serverLoggableDatas"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyManagedDataStore serializeLoggableDatas:](TransparencyManagedDataStore, "serializeLoggableDatas:", v4));

  v6 = *(void **)(a1 + 40);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uri"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "application"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountKey"));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v10 + 40);
  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "fetchRequestWithUri:application:accountKey:loggableDatas:youngerThan:error:", v7, v8, v9, v5, v3, &obj));
  objc_storeStrong((id *)(v10 + 40), obj);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v11;

  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  if (v14)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v48 = *(id *)(v15 + 40);
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_100178644;
    v43[3] = &unk_10024A680;
    v16 = *(void **)(a1 + 40);
    v17 = *(id *)(a1 + 48);
    v18 = *(_QWORD *)(a1 + 56);
    v44 = v17;
    v46 = v18;
    v19 = *(id *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 64);
    v45 = v19;
    v47 = v20;
    objc_msgSend(v16, "performAndWaitForRequestId:error:block:", v14, &v48, v43);
    objc_storeStrong((id *)(v15 + 40), v48);

    v21 = v44;
  }
  else
  {
    if (qword_1002A79E8 != -1)
      dispatch_once(&qword_1002A79E8, &stru_10024A6A0);
    v22 = (void *)qword_1002A79F0;
    if (os_log_type_enabled((os_log_t)qword_1002A79F0, OS_LOG_TYPE_DEFAULT))
    {
      v23 = *(_QWORD *)(a1 + 48);
      v24 = *(void **)(a1 + 32);
      v25 = v22;
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "uri"));
      v27 = objc_msgSend(*(id *)(a1 + 32), "type");
      *(_DWORD *)buf = 138544130;
      v51 = v23;
      v52 = 2160;
      v53 = 1752392040;
      v54 = 2112;
      v55 = v26;
      v56 = 2048;
      v57 = v27;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Creating requestId %{public}@ for %{mask.hash}@ of type %lu", buf, 0x2Au);

    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clientLoggableDatas"));

    v41 = v3;
    if (v21)
    {
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clientLoggableDatas"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyManagedDataStore serializeLoggableDatas:](TransparencyManagedDataStore, "serializeLoggableDatas:", v28));

    }
    v29 = *(void **)(a1 + 40);
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uri"));
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "application"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountKey"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queryRequest"));
    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queryResponse"));
    v35 = objc_msgSend(*(id *)(a1 + 32), "type");
    v36 = *(_QWORD *)(a1 + 48);
    v37 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v42 = *(id *)(v37 + 40);
    v38 = objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "createRequestWithUri:application:accountKey:serverData:syncedData:queryRequest:queryResponse:type:clientId:error:", v30, v31, v32, v5, v21, v33, v34, v35, v36, &v42));
    objc_storeStrong((id *)(v37 + 40), v42);
    v39 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v40 = *(void **)(v39 + 40);
    *(_QWORD *)(v39 + 40) = v38;

    v3 = v41;
  }

}

void sub_100178644(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;
  NSObject *v10;
  uint64_t v11;
  id obj;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  uint64_t v16;

  v3 = a2;
  if (qword_1002A79E8 != -1)
    dispatch_once(&qword_1002A79E8, &stru_10024A638);
  v4 = qword_1002A79F0;
  if (os_log_type_enabled((os_log_t)qword_1002A79F0, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 138543618;
    v14 = v5;
    v15 = 2114;
    v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Mapping requestId %{public}@ to cached requestId %{public}@", buf, 0x16u);
  }
  objc_msgSend(*(id *)(a1 + 40), "createKTRequestID:request:", *(_QWORD *)(a1 + 32), v3);
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v8 + 40);
  v9 = objc_msgSend(v7, "persistWithError:", &obj);
  objc_storeStrong((id *)(v8 + 40), obj);
  if ((v9 & 1) == 0)
  {
    if (qword_1002A79E8 != -1)
      dispatch_once(&qword_1002A79E8, &stru_10024A658);
    v10 = qword_1002A79F0;
    if (os_log_type_enabled((os_log_t)qword_1002A79F0, OS_LOG_TYPE_ERROR))
    {
      v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v14 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "failed to save RequestID for request: %@", buf, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 40), "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("requestIdLink"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  }

}

void sub_100178810(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79F0;
  qword_1002A79F0 = (uint64_t)v1;

}

void sub_100178840(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79F0;
  qword_1002A79F0 = (uint64_t)v1;

}

void sub_100178870(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A79F0;
  qword_1002A79F0 = (uint64_t)v1;

}

void sub_10017A848(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017A9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10017A9CC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10017A9DC(uint64_t a1)
{

}

void sub_10017A9E4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *i;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  id v31;
  id v32;
  id v33;
  id obj;
  _BYTE v35[128];
  void *v36;
  uint8_t buf[4];
  uint64_t v38;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[KTFailureEvent fetchRequest](KTFailureEvent, "fetchRequest"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(v5, "setPredicate:", v6);

    objc_msgSend(v5, "setPropertiesToFetch:", &off_10025C790);
    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setResultType:", 2);
    objc_msgSend(v5, "setFetchLimit:", *(_QWORD *)(a1 + 64));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("failureTime"), 0));
    v36 = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v36, 1));
    objc_msgSend(v5, "setSortDescriptors:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v32 = *(id *)(v10 + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "executeFetchRequest:error:", v5, &v32));
    objc_storeStrong((id *)(v10 + 40), v32);

    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v31 = *(id *)(v12 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v31);
    objc_storeStrong((id *)(v12 + 40), v31);
    if (v11 && objc_msgSend(v11, "count"))
    {
      v13 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v11, "count")));
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

    }
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "reverseObjectEnumerator"));
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v28;
      do
      {
        for (i = 0; i != v18; i = (char *)i + 1)
        {
          if (*(_QWORD *)v28 != v19)
            objc_enumerationMutation(v16);
          v21 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i), "objectForKeyedSubscript:", CFSTR("eventId")));
          objc_msgSend(v21, "addObject:", v22);

        }
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
      }
      while (v18);
    }

  }
  else
  {
    if (qword_1002A7A08 != -1)
      dispatch_once(&qword_1002A7A08, &stru_10024A708);
    v23 = qword_1002A7A10;
    if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
    {
      v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v38 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "failed to get : %@", buf, 0xCu);
    }
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v33 = *(id *)(v25 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v33);
    v26 = v33;
    v5 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v26;
  }

}

void sub_10017AD84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017AE5C(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id obj;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  id v37;
  id v38;
  id v39;
  uint8_t v40[128];
  uint8_t buf[4];
  id v42;

  v2 = *(void **)(a1 + 32);
  v39 = 0;
  v3 = objc_msgSend(v2, "persistWithError:", &v39);
  v4 = v39;
  if ((v3 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTFailureEvent")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("eventId IN %@"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(v5, "setPredicate:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v37 = v4;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v5, &v37));
    v9 = v37;

    if (v8 && objc_msgSend(v8, "count"))
    {
      v29 = v5;
      v30 = a1;
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
      v33 = 0u;
      v34 = 0u;
      v35 = 0u;
      v36 = 0u;
      v28 = v8;
      obj = v8;
      v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v40, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v34;
        while (2)
        {
          v14 = 0;
          v15 = v9;
          do
          {
            if (*(_QWORD *)v34 != v13)
              objc_enumerationMutation(obj);
            v16 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v14);
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "encodedError"));
            v32 = v15;
            v18 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyManagedDataStore deserializeNSError:error:](TransparencyManagedDataStore, "deserializeNSError:error:", v17, &v32));
            v9 = v32;

            if (!v18)
            {
              if (qword_1002A7A08 != -1)
                dispatch_once(&qword_1002A7A08, &stru_10024A768);
              v5 = v29;
              v8 = v28;
              v23 = (void *)qword_1002A7A10;
              if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
              {
                v24 = v23;
                v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "eventId"));
                *(_DWORD *)buf = 138543362;
                v42 = v25;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "failed to decode failure event error for %{public}@", buf, 0xCu);

              }
              v26 = kTransparencyErrorDecode;
              v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "eventId"));
              v19 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", v26, -300, v9, CFSTR("failed to decode stored error for event %@"), v27));

              (*(void (**)(void))(*(_QWORD *)(v30 + 48) + 16))();
              goto LABEL_28;
            }
            objc_msgSend(v10, "addObject:", v18);

            v14 = (char *)v14 + 1;
            v15 = v9;
          }
          while (v12 != v14);
          v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v40, 16);
          if (v12)
            continue;
          break;
        }
      }

      (*(void (**)(void))(*(_QWORD *)(v30 + 48) + 16))();
      v19 = v9;
      v8 = v28;
      v5 = v29;
LABEL_28:

    }
    else
    {
      if (qword_1002A7A08 != -1)
        dispatch_once(&qword_1002A7A08, &stru_10024A748);
      v21 = qword_1002A7A10;
      if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
      {
        v22 = *(void **)(a1 + 40);
        *(_DWORD *)buf = 138543362;
        v42 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "failed to find any failure event for %{public}@", buf, 0xCu);
      }
      v19 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDatabase, -299, v9, CFSTR("failed to find any failure event for %@"), *(_QWORD *)(a1 + 40)));

      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }

  }
  else
  {
    if (qword_1002A7A08 != -1)
      dispatch_once(&qword_1002A7A08, &stru_10024A728);
    v20 = qword_1002A7A10;
    if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v42 = v4;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "failed to get : %@", buf, 0xCu);
    }
    v38 = v4;
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v38);
    v19 = v38;

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_10017B368(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017B398(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017B3C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017B544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10017B568(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id obj;
  uint8_t buf[4];
  uint64_t v18;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTFailureEvent")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("eventId = %@"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);

  if (v6 && objc_msgSend(v6, "count") == (id)1)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0));
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
  }
  else
  {
    if (qword_1002A7A08 != -1)
      dispatch_once(&qword_1002A7A08, &stru_10024A7B0);
    v9 = qword_1002A7A10;
    if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      v18 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "failed to find failure event for eventId %{public}@", buf, 0xCu);
    }
    v11 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDatabase, -299, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), CFSTR("failed to find failure event for %@"), *(_QWORD *)(a1 + 32)));
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v15 = *(id *)(v14 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v15);
    objc_storeStrong((id *)(v14 + 40), v15);
  }

}

void sub_10017B7AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017B8D8(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (qword_1002A7A08 != -1)
    dispatch_once(&qword_1002A7A08, &stru_10024A7D0);
  v2 = qword_1002A7A10;
  if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to clear all failure events: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10017B9A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017BA78(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  uint64_t v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  id v19;
  NSObject *v20;
  void *v21;
  id v22;
  NSObject *v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  id v31;
  id v32;
  uint8_t buf[4];
  id v34;
  __int16 v35;
  id v36;
  _BYTE v37[128];

  v2 = *(void **)(a1 + 32);
  v32 = 0;
  v3 = objc_msgSend(v2, "persistWithError:", &v32);
  v4 = v32;
  if ((v3 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTFailureEvent")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("eventId IN %@"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(v5, "setPredicate:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v30 = v4;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v5, &v30));
    v9 = v30;

    if (v8)
    {
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v10 = v8;
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v37, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v27;
        do
        {
          for (i = 0; i != v12; i = (char *)i + 1)
          {
            if (*(_QWORD *)v27 != v13)
              objc_enumerationMutation(v10);
            v15 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)i);
            v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
            objc_msgSend(v16, "deleteObject:", v15);

          }
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v37, 16);
        }
        while (v12);
      }

    }
    v17 = *(void **)(a1 + 32);
    v25 = v9;
    v18 = objc_msgSend(v17, "persistAndRefaultObjects:error:", v8, &v25);
    v19 = v25;

    if ((v18 & 1) == 0)
    {
      if (qword_1002A7A08 != -1)
        dispatch_once(&qword_1002A7A08, &stru_10024A810);
      v20 = qword_1002A7A10;
      if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
      {
        v21 = *(void **)(a1 + 40);
        *(_DWORD *)buf = 138543618;
        v34 = v21;
        v35 = 2112;
        v36 = v19;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "failed to delete failed eventId %{public}@ : %@", buf, 0x16u);
      }
      v24 = v19;
      +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v24);
      v22 = v24;

      v19 = v22;
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

  }
  else
  {
    if (qword_1002A7A08 != -1)
      dispatch_once(&qword_1002A7A08, &stru_10024A7F0);
    v23 = qword_1002A7A10;
    if (os_log_type_enabled((os_log_t)qword_1002A7A10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v34 = v4;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "failed to get : %@", buf, 0xCu);
    }
    v31 = v4;
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v31);
    v19 = v31;

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_10017BDDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017BE0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017C070(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017C0A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017C4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_10017C4FC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_10017C580(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A10;
  qword_1002A7A10 = (uint64_t)v1;

}

void sub_10017C888(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017C8B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CA0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CA3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CD30(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CD60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CD90(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017CEF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017D7F4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017D824(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017DBFC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017DC2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E06C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E09C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E0CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E0FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E674(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E6A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E6D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E704(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017E8E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10017E90C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017EA54(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017ECFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v5 = a3;
  if (!v5)
  {
    v6 = *(void **)(a1 + 32);
    v7 = 0;
    objc_msgSend(v6, "configureFromNetworkBagData:error:", a2, &v7);
    v5 = v7;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10017F044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10017F058(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017F088(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017F0B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017F0E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017F2EC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_10017F308(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A20;
  qword_1002A7A20 = (uint64_t)v1;

}

void sub_10017F7B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180078(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_1001800A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100180354(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100180364(uint64_t a1)
{

}

void sub_10018036C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id obj;
  void *v35;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  void *v40;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == NO && application == %@ && logBeginTime == %llu && consistencyVerified == %d"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), 1));
  objc_msgSend(v2, "setPredicate:", v3);

  objc_msgSend(v2, "setPropertiesToFetch:", &off_10025C7C0);
  objc_msgSend(v2, "setReturnsDistinctResults:", 1);
  objc_msgSend(v2, "setResultType:", 2);
  objc_msgSend(v2, "setFetchLimit:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
  v40 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v40, 1));
  objc_msgSend(v2, "setSortDescriptors:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v7 + 40);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v7 + 40), obj);

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v33 = *(id *)(v9 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v33);
  objc_storeStrong((id *)(v9 + 40), v33);
  if (v8 && objc_msgSend(v8, "count"))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 0));
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("revision")));
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024ACA8);
    v14 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_INFO))
    {
      v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v37 = v15;
      v38 = 2112;
      v39 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "latest verified revision %@ for %@", buf, 0x16u);
    }
    v17 = v8;
  }
  else
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == NO && application == %@ && logBeginTime == %llu && signatureVerified == %d && consistencyVerified == %d"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), 1, 2));
    objc_msgSend(v2, "setPredicate:", v18);

    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 1));
    v35 = v19;
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v35, 1));
    objc_msgSend(v2, "setSortDescriptors:", v20);

    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v32 = *(id *)(v22 + 40);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "executeFetchRequest:error:", v2, &v32));
    objc_storeStrong((id *)(v22 + 40), v32);

    if (v17 && objc_msgSend(v17, "count"))
    {
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectAtIndexedSubscript:", 0));
      v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("revision")));
      v25 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v26 = *(void **)(v25 + 40);
      *(_QWORD *)(v25 + 40) = v24;

      if (qword_1002A7A28 != -1)
        dispatch_once(&qword_1002A7A28, &stru_10024ACC8);
      v27 = qword_1002A7A30;
      if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_INFO))
      {
        v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        v29 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v37 = v28;
        v38 = 2112;
        v39 = v29;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "earliest pending revision %@ for %@", buf, 0x16u);
      }
    }
    v30 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v31 = *(id *)(v30 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v31);
    objc_storeStrong((id *)(v30 + 40), v31);
  }

}

void sub_1001807F4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180824(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1001809AC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id obj;
  void *v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  void *v44;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == NO && application == %@ && logBeginTime == %llu && signatureVerified == %d && consistencyVerified == %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), 1, 1));
    objc_msgSend(v5, "setPredicate:", v6);

    objc_msgSend(v5, "setPropertiesToFetch:", &off_10025C7D8);
    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setResultType:", 2);
    objc_msgSend(v5, "setFetchLimit:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 0));
    v44 = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v44, 1));
    objc_msgSend(v5, "setSortDescriptors:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v37 = *(id *)(v10 + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "executeFetchRequest:error:", v5, &v37));
    objc_storeStrong((id *)(v10 + 40), v37);

    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v36 = *(id *)(v12 + 40);
    +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v36);
    objc_storeStrong((id *)(v12 + 40), v36);
    if (v11 && objc_msgSend(v11, "count"))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndexedSubscript:", 0));
      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("sth")));
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      if (qword_1002A7A28 != -1)
        dispatch_once(&qword_1002A7A28, &stru_10024AD30);
      v17 = qword_1002A7A30;
      if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_INFO))
      {
        v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        v19 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412546;
        v41 = v18;
        v42 = 2112;
        v43 = v19;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "latest verified STH %@ for %@", buf, 0x16u);
      }
      v20 = v11;
    }
    else
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == NO && application == %@ && logBeginTime == %llu && signatureVerified == %d && consistencyVerified == %d"), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), 1, 2));
      objc_msgSend(v5, "setPredicate:", v22);

      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 1));
      v39 = v23;
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v39, 1));
      objc_msgSend(v5, "setSortDescriptors:", v24);

      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "executeFetchRequest:error:", v5, *(_QWORD *)(a1 + 72)));

      if (v20 && objc_msgSend(v20, "count"))
      {
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectAtIndexedSubscript:", 0));
        v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("sth")));
        v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v29 = *(void **)(v28 + 40);
        *(_QWORD *)(v28 + 40) = v27;

        if (qword_1002A7A28 != -1)
          dispatch_once(&qword_1002A7A28, &stru_10024AD50);
        v30 = qword_1002A7A30;
        if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_INFO))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          v32 = *(_QWORD *)(a1 + 40);
          *(_DWORD *)buf = 138412546;
          v41 = v31;
          v42 = 2112;
          v43 = v32;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "latest verified STH %@ for %@", buf, 0x16u);
        }
      }
      else
      {
        v33 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorGossip, -226, CFSTR("TLT STH doesn't exist in local database")));
        v34 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v35 = *(void **)(v34 + 40);
        *(_QWORD *)(v34 + 40) = v33;

      }
    }

  }
  else
  {
    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024AD10);
    v21 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "failed to get latest tree head STH", buf, 2u);
    }
  }
}

void sub_100180EC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180EF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100180F24(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100181098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001810BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  id obj;
  _BYTE v27[128];
  void *v28;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
  if (*(_BYTE *)(a1 + 72))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 73)));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == %@ && application == %@ && logBeginTime == %llu && signatureVerified == %d && inclusionVerified == %d"), v3, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), 1, 2));
    objc_msgSend(v2, "setPredicate:", v4);

  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("isMapHead == NO && application == %@ && logBeginTime == %llu && signatureVerified == %d && consistencyVerified == %d"), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), 1, 2));
    objc_msgSend(v2, "setPredicate:", v3);
  }

  objc_msgSend(v2, "setPropertiesToFetch:", &off_10025C7F0);
  objc_msgSend(v2, "setReturnsDistinctResults:", 1);
  objc_msgSend(v2, "setResultType:", 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("revision"), 1));
  v28 = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v28, 1));
  objc_msgSend(v2, "setSortDescriptors:", v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v8 + 40);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v8 + 40), obj);

  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v25 = *(id *)(v10 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v25);
  objc_storeStrong((id *)(v10 + 40), v25);
  if (v9 && objc_msgSend(v9, "count"))
  {
    v11 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v9, "count")));
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

  }
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v14 = v9;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v22;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v22 != v17)
          objc_enumerationMutation(v14);
        v19 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v18), "objectForKeyedSubscript:", CFSTR("revision")));
        objc_msgSend(v19, "addObject:", v20);

        v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    }
    while (v16);
  }

}

void sub_100181510(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *i;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id obj;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];

  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  obj = a2;
  v22 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v22)
  {
    v21 = *(_QWORD *)v24;
    v19 = a1;
    v20 = a4;
    do
    {
      for (i = 0; i != v22; i = (char *)i + 1)
      {
        if (*(_QWORD *)v24 != v21)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "sth"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[SignedObjectHolder parseFromData:error:](SignedLogHead, "parseFromData:error:", v8, a4));

        if (v9)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "parsedLogHead"));
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "logHeadHash"));

          v12 = *(void **)(a1 + 32);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "application"));
          v14 = objc_msgSend(v7, "getUnsigned:", "logBeginTime");
          v15 = objc_msgSend(v7, "logType");
          v16 = objc_msgSend(v7, "getUnsigned:", "revision");
          LOBYTE(v17) = objc_msgSend(v7, "gossip") != 0;
          LODWORD(v16) = objc_msgSend(v12, "haveTreeHead:isMapHead:application:logBeginTime:logType:revision:gossip:error:", v11, 0, v13, v14, v15, v16, v17, a4);

          if ((_DWORD)v16)
          {
            a1 = v19;
            objc_msgSend(*(id *)(v19 + 32), "deleteObject:", v7);
          }
          else
          {
            objc_msgSend(v7, "setLogHeadHash:", v11);
            a1 = v19;
          }

          a4 = v20;
        }
        else
        {
          objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v7);
        }

      }
      v22 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v22);
  }
  objc_msgSend(*(id *)(a1 + 32), "persistAndRefaultObjects:error:", obj, a4);

}

void sub_10018175C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (qword_1002A7A28 != -1)
    dispatch_once(&qword_1002A7A28, &stru_10024ADC0);
  v2 = qword_1002A7A30;
  if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to populate log head hash in KTTreeHead: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100181824(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100181F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100181F24(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint8_t buf[4];
  uint64_t v33;
  __int16 v34;
  id v35;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v31 = 0;
  v4 = objc_msgSend(v2, "countOutstandingSTHsForApplication:error:", v3, &v31);
  v5 = v31;
  if (v4 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024ADE0);
    v6 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
    {
      v7 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v33 = v7;
      v34 = 2112;
      v35 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "failed to get outstanding STHs for %@: %@", buf, 0x16u);
    }
    if (*(_QWORD *)(a1 + 56) && v5)
      **(_QWORD **)(a1 + 56) = objc_retainAutorelease(v5);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logger"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v4));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("OutstandingSTHs"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v8, "logMetric:withName:", v9, v10);

  v11 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v30 = v5;
  v13 = objc_msgSend(v11, "countOutstandingSMHsForApplication:error:", v12, &v30);
  v14 = v30;

  if (v13 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024AE00);
    v15 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
    {
      v16 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v33 = v16;
      v34 = 2112;
      v35 = v14;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "failed to get outstanding SMHs for %@: %@", buf, 0x16u);
    }
    if (*(_QWORD *)(a1 + 56) && v14)
      **(_QWORD **)(a1 + 56) = objc_retainAutorelease(v14);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logger"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v13));
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("OutstandingSMHs"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v17, "logMetric:withName:", v18, v19);

  v20 = *(void **)(a1 + 32);
  v21 = *(_QWORD *)(a1 + 40);
  v29 = v14;
  v22 = objc_msgSend(v20, "countTotalSTHsForApplication:error:", v21, &v29);
  v23 = v29;

  if (v22 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024AE20);
    v24 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
    {
      v25 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v33 = v25;
      v34 = 2112;
      v35 = v23;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "failed to get total STHs for %@: %@", buf, 0x16u);
    }
    if (*(_QWORD *)(a1 + 56) && v23)
      **(_QWORD **)(a1 + 56) = objc_retainAutorelease(v23);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logger"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v22));
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("TotalSTHs"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v26, "logMetric:withName:", v27, v28);

}

void sub_100182334(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182364(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182394(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_1001824C0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (qword_1002A7A28 != -1)
    dispatch_once(&qword_1002A7A28, &stru_10024AE68);
  v2 = qword_1002A7A30;
  if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to delete tree heads from prior epoch: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100182588(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182BB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182BE0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182C10(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182C40(uint64_t a1, void *a2, _BYTE *a3, void **a4)
{
  id v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  __int128 v22;
  id obj;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  void *v30;
  _BYTE v31[128];

  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = a2;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v6)
  {
    v8 = v6;
    v9 = *(_QWORD *)v26;
    *(_QWORD *)&v7 = 138412290;
    v22 = v7;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v26 != v9)
          objc_enumerationMutation(obj);
        v11 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v10);
        v12 = *(_QWORD *)(a1 + 56) - 1;
        if (v12 >= 3)
        {
          if (qword_1002A7A28 != -1)
            dispatch_once(&qword_1002A7A28, &stru_10024AEE8);
          v18 = (void *)qword_1002A7A30;
          if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
          {
            v19 = *(void **)(a1 + 32);
            v20 = v18;
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "downloadId"));
            *(_DWORD *)buf = 138543362;
            v30 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "invalid download type for fail head downloadId %{public}@", buf, 0xCu);

          }
          objc_msgSend(*(id *)(a1 + 40), "refaultObject:", v11, v22);
        }
        else
        {
          v13 = qword_1002173C0[v12];
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "createSignedTreeHeadFailure"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "domain"));
          objc_msgSend(v14, "setErrorDomain:", v15);

          objc_msgSend(v14, "setErrorCode:", objc_msgSend(*(id *)(a1 + 48), "code"));
          objc_msgSend(v14, "setUnsigned:value:", "verificationType", v13);
          objc_msgSend(v14, "setSth:", v11);
          if ((objc_msgSend(*(id *)(a1 + 40), "persistAndRefaultObject:error:", v11, a4) & 1) == 0)
          {
            if (qword_1002A7A28 != -1)
              dispatch_once(&qword_1002A7A28, &stru_10024AF08);
            v16 = qword_1002A7A30;
            if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
            {
              if (a4)
                v17 = *a4;
              else
                v17 = 0;
              *(_DWORD *)buf = v22;
              v30 = v17;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "failed to persist failed head download: %@", buf, 0xCu);
            }
            if (a4 && *a4)
              objc_msgSend(*(id *)(a1 + 40), "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("failHeadDownloadRecord"));
            *a3 = 1;
          }

        }
        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v8);
  }

}

void sub_100182F44(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100182F74(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100183104(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100183134(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  NSObject *v9;
  id v10;
  id v11;
  uint8_t buf[4];
  id v13;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v11 = 0;
  objc_msgSend(v3, "failHeadDownloadRecord:failure:error:", a2, v4, &v11);
  v5 = v11;
  v6 = *(void **)(a1 + 32);
  v10 = v5;
  v7 = objc_msgSend(v6, "persistWithError:", &v10);
  v8 = v10;

  if ((v7 & 1) == 0)
  {
    if (qword_1002A7A28 != -1)
      dispatch_once(&qword_1002A7A28, &stru_10024AF70);
    v9 = qword_1002A7A30;
    if (os_log_type_enabled((os_log_t)qword_1002A7A30, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "failed to save inclusion proof failure: %@", buf, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 32), "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("failSTHDownload"), v8);
  }

}

void sub_100183264(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A30;
  qword_1002A7A30 = (uint64_t)v1;

}

void sub_100183390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001833A8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  _BYTE v23[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("KTTreeHead")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application = %@ AND signatureVerified = %d AND revision IN %@"), *(_QWORD *)(a1 + 32), 0, *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "setPredicate:", v3);

  objc_msgSend(v2, "setPropertiesToFetch:", &off_10025C808);
  objc_msgSend(v2, "setReturnsDistinctResults:", 1);
  objc_msgSend(v2, "setResultType:", 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
  v22 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v22));
  v6 = v22;

  if (v5 && objc_msgSend(v5, "count"))
  {
    v17 = v6;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v5, "count")));
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v8 = v5;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v19;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v19 != v11)
            objc_enumerationMutation(v8);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)v12), "objectForKeyedSubscript:", CFSTR("sth")));
          objc_msgSend(v7, "addObject:", v13);

          v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
      }
      while (v10);
    }

    v14 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](NSArray, "arrayWithArray:", v7));
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    v6 = v17;
  }

}

void sub_100183BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100183C10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100183C20(uint64_t a1)
{

}

void sub_100183C28(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  id v9;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchDownloadRecordById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "downloadId"));
  v7 = objc_msgSend(v6, "isEqual:", a1[5]);

  if (v7)
    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
  v8 = *(_QWORD *)(a1[6] + 8);
  v9 = *(id *)(v8 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v9);
  objc_storeStrong((id *)(v8 + 40), v9);

}

void sub_100183E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100183E4C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  id v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  id obj;
  uint8_t buf[4];
  uint64_t v26;
  _BYTE v27[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("DownloadRecord")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("downloadId = %@"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);

  if (v6 && objc_msgSend(v6, "count"))
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v7 = v6;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v27, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v21;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(_QWORD *)v21 != v10)
            objc_enumerationMutation(v7);
          objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i), "setResponse:", *(_QWORD *)(a1 + 48));
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v27, 16);
      }
      while (v9);
    }

  }
  else
  {
    if (qword_1002A7A38 != -1)
      dispatch_once(&qword_1002A7A38, &stru_10024AFF0);
    v12 = qword_1002A7A40;
    if (os_log_type_enabled((os_log_t)qword_1002A7A40, OS_LOG_TYPE_DEFAULT))
    {
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      v26 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "received response for deleted downloadId %{public}@", buf, 0xCu);
    }
  }
  v14 = *(void **)(a1 + 40);
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v19 = *(id *)(v15 + 40);
  v16 = objc_msgSend(v14, "persistWithError:", &v19);
  objc_storeStrong((id *)(v15 + 40), v19);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v16;
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v18 = *(id *)(v17 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v18);
  objc_storeStrong((id *)(v17 + 40), v18);

}

void sub_1001840CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A40;
  qword_1002A7A40 = (uint64_t)v1;

}

void sub_1001842A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001842C4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id obj;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchDownloadRecordById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v5);
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(id *)(v7 + 40);
  v8 = objc_msgSend(v6, "persistWithError:", &v12);
  objc_storeStrong((id *)(v7 + 40), v12);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v8;
  v9 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

}

void sub_10018439C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  if (qword_1002A7A38 != -1)
    dispatch_once(&qword_1002A7A38, &stru_10024B010);
  v2 = qword_1002A7A40;
  if (os_log_type_enabled((os_log_t)qword_1002A7A40, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v5 = 138412546;
    v6 = v3;
    v7 = 2112;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to delete download record for UUID %@: %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100184478(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A40;
  qword_1002A7A40 = (uint64_t)v1;

}

void sub_100184638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10018465C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id obj;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("DownloadRecord")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("application == %@"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);

  objc_msgSend(*(id *)(a1 + 40), "deleteObjectSet:", v6);
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(id *)(v8 + 40);
  LOBYTE(v5) = objc_msgSend(v7, "persistWithError:", &v11);
  objc_storeStrong((id *)(v8 + 40), v11);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v5;
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(id *)(v9 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v10);
  objc_storeStrong((id *)(v9 + 40), v10);

}

void sub_100184798(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  if (qword_1002A7A38 != -1)
    dispatch_once(&qword_1002A7A38, &stru_10024B030);
  v2 = qword_1002A7A40;
  if (os_log_type_enabled((os_log_t)qword_1002A7A40, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v5 = 138412546;
    v6 = v3;
    v7 = 2112;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to delete download record for %@: %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100184874(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A40;
  qword_1002A7A40 = (uint64_t)v1;

}

void sub_100184A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100184A64(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  id v11;
  id v12;
  id obj;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fetchDownloadRecord:application:error:", v2, v4, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);
  if (v6)
    objc_msgSend(*(id *)(a1 + 32), "deleteObject:", v6);
  v7 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(id *)(v8 + 40);
  v9 = objc_msgSend(v7, "persistWithError:", &v12);
  objc_storeStrong((id *)(v8 + 40), v12);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(id *)(v10 + 40);
  +[TransparencyManagedDataStore cleanseError:](TransparencyManagedDataStore, "cleanseError:", &v11);
  objc_storeStrong((id *)(v10 + 40), v11);

}

void sub_100184B3C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  if (qword_1002A7A38 != -1)
    dispatch_once(&qword_1002A7A38, &stru_10024B050);
  v2 = qword_1002A7A40;
  if (os_log_type_enabled((os_log_t)qword_1002A7A40, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v5 = 138412546;
    v6 = v3;
    v7 = 2112;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to delete download record for %@: %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100184C18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A40;
  qword_1002A7A40 = (uint64_t)v1;

}

void sub_100184D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100184DBC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchDownloadRecordById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40)));
  v7 = *(_QWORD *)(a1[7] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "downloadId"));
    v10 = objc_msgSend(v9, "isEqual:", a1[5]);

    if (v10)
    {
      (*(void (**)(void))(a1[6] + 16))();
      *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
    }
  }

}

void sub_100185214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100185238(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100185248(uint64_t a1)
{

}

void sub_100185250(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  id obj;
  uint8_t buf[4];
  uint64_t v18;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  obj = *(id *)(v4 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchFetchRecordById:error:", v3, &obj));
  objc_storeStrong((id *)(v4 + 40), obj);
  v6 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40)));
  v7 = *(_QWORD *)(a1[7] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fetchId"));
    v10 = objc_msgSend(v9, "isEqual:", a1[5]);

    if (v10)
    {
      (*(void (**)(void))(a1[6] + 16))();
      *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
    }
  }
  else
  {
    v11 = objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDatabase, -225, CFSTR("no fetch record found for %@"), a1[5]));
    v12 = *(_QWORD *)(a1[7] + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    if (qword_1002A7A48 != -1)
      dispatch_once(&qword_1002A7A48, &stru_10024B070);
    v14 = qword_1002A7A50;
    if (os_log_type_enabled((os_log_t)qword_1002A7A50, OS_LOG_TYPE_INFO))
    {
      v15 = a1[5];
      *(_DWORD *)buf = 138543362;
      v18 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "no fetch record found for fetchId %{public}@", buf, 0xCu);
    }
  }

}

void sub_100185418(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A50;
  qword_1002A7A50 = (uint64_t)v1;

}

void sub_100185938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100185954(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100185964(uint64_t a1)
{

}

void sub_10018596C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  const __CFString *v7;
  void *v8;
  const __CFString *v9;
  __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  id v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  unsigned __int8 v35;
  id v36;
  id v37;
  NSObject *v38;
  void *v39;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  id obj;
  uint64_t v44;
  id v45;
  void *v46;
  __CFString *v47;
  id v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  const __CFString *v53;
  void *v54;
  uint8_t buf[4];
  id v56;
  __int16 v57;
  void *v58;
  __int16 v59;
  uint64_t v60;
  __int16 v61;
  void *v62;
  _BYTE v63[128];

  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  obj = a2;
  v45 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v49, v63, 16);
  if (v45)
  {
    v3 = 0;
    v47 = 0;
    v44 = *(_QWORD *)v50;
    while (1)
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v50 != v44)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)v4);
        v6 = *(_QWORD *)(a1 + 56);
        if (v6 == 2)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)v4), "application"));
          v9 = (const __CFString *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("VerifyConsistencyProofEvent"), v11));

          objc_msgSend(v5, "setConsistencyVerified:", 0);
          v3 = -196;
        }
        else if (v6 == 1)
        {
          if (objc_msgSend(*(id *)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)v4), "isMapHead"))
          {
            v10 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "application"));
            v9 = (const __CFString *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("VerifyPATInclusionProofEvent"), v10));

          }
          else
          {
            v9 = CFSTR("ktTLTVerifyInclusionProofEvent");
            v10 = v47;
          }

          objc_msgSend(v5, "setInclusionVerified:", 0);
          v3 = -202;
        }
        else
        {
          if (v6)
            goto LABEL_22;
          if (objc_msgSend(*(id *)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)v4), "isMapHead"))
            v3 = -138;
          else
            v3 = -198;
          if (objc_msgSend(v5, "isMapHead"))
            v7 = CFSTR("VerifySMHEvent");
          else
            v7 = CFSTR("VerifySTHEvent");
          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "application"));
          v9 = (const __CFString *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", v7, v8));

          objc_msgSend(v5, "setSignatureVerified:", 0);
        }
        v47 = (__CFString *)v9;
LABEL_22:
        v12 = *(void **)(a1 + 32);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "failures"));
        v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "createChainOfErrorsFromSTHFailures:type:", v13, *(_QWORD *)(a1 + 56)));

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "createSignedTreeHeadFailure"));

        objc_msgSend(v16, "setSth:", v5);
        objc_msgSend(v16, "setErrorCode:", v3);
        objc_msgSend(v16, "setErrorDomain:", CFSTR("TransparencyErrorVerify"));
        objc_msgSend(v16, "setUnsigned:value:", "verificationType", *(_QWORD *)(a1 + 56));
        if (qword_1002A7A58 != -1)
          dispatch_once(&qword_1002A7A58, &stru_10024B090);
        v17 = (void *)qword_1002A7A60;
        v46 = (void *)v14;
        if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_ERROR))
        {
          v18 = v17;
          v19 = objc_msgSend(v5, "revision");
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "application"));
          *(_DWORD *)buf = 134218754;
          v56 = v19;
          v14 = (uint64_t)v46;
          v57 = 2114;
          v58 = v20;
          v59 = 2048;
          v60 = v3;
          v61 = 2112;
          v62 = v46;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "STH verification failure after maximum proof delay for revision %lld of %{public}@, %ld: %@", buf, 0x2Au);

        }
        v21 = *(uint64_t **)(a1 + 64);
        if (v21)
          v22 = *v21;
        else
          v22 = 0;
        v23 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithError:underlyingError:](TransparencyError, "errorWithError:underlyingError:", v22, v14));
        v24 = objc_msgSend(v5, "revision");
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "application"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), v3, v23, CFSTR("STH verification failure after maximum verification delay for revision %lld of %@"), v24, v25));

        objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v26);
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "settings"));
        LODWORD(v25) = objc_msgSend(v28, "allowsInternalSecurityPolicies");

        if ((_DWORD)v25)
        {
          v53 = CFSTR("failedRevision");
          v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "revision")));
          v54 = v29;
          v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v54, &v53, 1));

        }
        else
        {
          v30 = 0;
        }
        v31 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
        objc_msgSend(v31, "logResultForEvent:hardFailure:result:withAttributes:", v47, 1, v26, v30);

        v32 = *(void **)(a1 + 40);
        v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "revision")));
        objc_msgSend(v32, "addObject:", v33);

        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
        v48 = 0;
        v35 = objc_msgSend(v34, "persistAndRefaultObject:error:", v5, &v48);
        v36 = v48;
        v37 = v48;

        if ((v35 & 1) == 0)
        {
          if (qword_1002A7A58 != -1)
            dispatch_once(&qword_1002A7A58, &stru_10024B0B0);
          v38 = qword_1002A7A60;
          if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            v56 = v37;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_ERROR, "failed to save expired STH: %@", buf, 0xCu);
          }
          v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
          objc_msgSend(v39, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("failExpiredSTHs"), v37);

          v40 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
          v42 = *(_QWORD *)(v40 + 40);
          v41 = (id *)(v40 + 40);
          if (!v42)
            objc_storeStrong(v41, v36);
        }

        v4 = (char *)v4 + 1;
      }
      while (v45 != v4);
      v45 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v49, v63, 16);
      if (!v45)
        goto LABEL_43;
    }
  }
  v47 = 0;
LABEL_43:

}

void sub_100185FEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_10018601C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001868AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001868DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100186E10(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_100187394(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001873C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001873F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unsigned __int8 v28;
  NSObject *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  id v34;
  id obj;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  void *v41;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectMapHead"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[SignedMapHead signedTypeWithObject:](SignedMapHead, "signedTypeWithObject:", v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
  objc_msgSend(v3, "setDataStore:", v4);

  objc_msgSend(v3, "setOverrideBeginTimeFromLogEntry:", *(_QWORD *)(a1 + 48));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v5 + 40);
  v6 = objc_msgSend(v3, "copyManagedObject:", &obj);
  objc_storeStrong((id *)(v5 + 40), obj);
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    objc_msgSend(v7, "onMocSetMapHead:inclusionResult:inclusionError:", v6, *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 56));

    objc_msgSend(v6, "setUnsigned:value:", "inclusionVerified", *(_QWORD *)(a1 + 88));
    objc_msgSend(v6, "setConsistencyVerified:", 1);
    if (*(_QWORD *)(a1 + 96) && !*(_QWORD *)(a1 + 88))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      v9 = **(_QWORD **)(a1 + 96);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "optInServer"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "createFailureEvent:application:optInServer:", v9, v10, v12));

      objc_msgSend(v6, "setFailureEvent:", v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "optInServer"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "getAggregateOptInState:", 0));

      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B1B8);
      v17 = (void *)qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_DEFAULT))
      {
        v18 = v17;
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "eventId"));
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
        *(_DWORD *)buf = 138543874;
        v37 = v19;
        v38 = 2112;
        v39 = v20;
        v40 = 2112;
        v41 = v16;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Created failure eventId %{public}@ for %{pubic}@ SMH inclusion validation: %@", buf, 0x20u);

      }
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "followUp"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "eventId"));
      objc_msgSend(v22, "postFollowup:type:eventId:errorCode:optInState:infoLink:additionalInfo:error:", v23, 2, v24, objc_msgSend(**(id **)(a1 + 96), "code"), v16, 0, 0, 0);

    }
    objc_msgSend(v6, "receiptTime");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v25;
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    v27 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v34 = *(id *)(v27 + 40);
    v28 = objc_msgSend(v26, "persistAndRefaultObject:error:", v6, &v34);
    objc_storeStrong((id *)(v27 + 40), v34);

    if ((v28 & 1) == 0)
    {
      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B1D8);
      v29 = qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_ERROR))
      {
        v30 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v37 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "failed to update inclusion state for map head: %@", buf, 0xCu);
      }
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      objc_msgSend(v31, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("mapHeadRevisionLogProof"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));

      if (*(_QWORD *)(a1 + 96))
        **(_QWORD **)(a1 + 96) = (id)objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)));
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 0;
    }
  }
  else
  {
    if (qword_1002A7A58 != -1)
      dispatch_once(&qword_1002A7A58, &stru_10024B198);
    v32 = qword_1002A7A60;
    if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_INFO))
    {
      v33 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v37 = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "No stored map head for revision log proof response: %@", buf, 0xCu);
    }
  }

}

void sub_100187900(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187930(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187960(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  uint64_t v15;
  va_list va;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v15 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 160), 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100187E50(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187E80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100187EB0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unsigned __int8 v31;
  NSObject *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id obj;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  id v46;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "patHead"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[SignedLogHead signedTypeWithObject:](SignedLogHead, "signedTypeWithObject:", v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
  objc_msgSend(v3, "setDataStore:", v4);

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v5 + 40);
  v6 = objc_msgSend(v3, "copyManagedObject:", &obj);
  objc_storeStrong((id *)(v5 + 40), obj);
  if (v6)
  {
    objc_msgSend(v6, "setUnsigned:value:", "inclusionVerified", *(_QWORD *)(a1 + 72));
    if (*(_QWORD *)(a1 + 80) && !*(_QWORD *)(a1 + 72))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      v8 = **(_QWORD **)(a1 + 80);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "optInServer"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "createFailureEvent:application:optInServer:", v8, v9, v11));

      objc_msgSend(v6, "setFailureEvent:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "optInServer"));
      v39 = 0;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "getAggregateOptInState:", &v39));
      v37 = v39;

      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B280);
      v16 = (void *)qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_DEFAULT))
      {
        v17 = v16;
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "eventId"));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
        *(_DWORD *)buf = 138543874;
        v42 = v18;
        v43 = 2114;
        v44 = v19;
        v45 = 2112;
        v46 = v37;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Created failure eventId %{public}@ for %{public}@ STH inclusion validation %@", buf, 0x20u);

      }
      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B2A0);
      v20 = (void *)qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_DEFAULT))
      {
        v21 = v20;
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "eventId"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
        *(_DWORD *)buf = 138543618;
        v42 = v22;
        v43 = 2114;
        v44 = v23;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Created failure eventId %{public}@ for %{public}@ STH inclusion validation", buf, 0x16u);

      }
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "followUp"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "applicationID"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "eventId"));
      objc_msgSend(v25, "postFollowup:type:eventId:errorCode:optInState:infoLink:additionalInfo:error:", v26, 2, v27, objc_msgSend(**(id **)(a1 + 80), "code"), v15, 0, 0, 0);

    }
    objc_msgSend(v6, "receiptTime");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v28;
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    v30 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v38 = *(id *)(v30 + 40);
    v31 = objc_msgSend(v29, "persistAndRefaultObject:error:", v6, &v38);
    objc_storeStrong((id *)(v30 + 40), v38);

    if ((v31 & 1) == 0)
    {
      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B2C0);
      v32 = qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_ERROR))
      {
        v33 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
        *(_DWORD *)buf = 138412290;
        v42 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "failed to update inclusion state for map head: %@", buf, 0xCu);
      }
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      objc_msgSend(v34, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("patHeadRevisionLogProof"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

      if (*(_QWORD *)(a1 + 80))
        **(_QWORD **)(a1 + 80) = (id)objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)));
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 0;
    }
  }
  else
  {
    if (qword_1002A7A58 != -1)
      dispatch_once(&qword_1002A7A58, &stru_10024B260);
    v35 = qword_1002A7A60;
    if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_INFO))
    {
      v36 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v42 = v36;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "No stored PAT head for revision log proof response: %@", buf, 0xCu);
    }
  }

}

void sub_10018844C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_10018847C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001884AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001884DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001889B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_1001889E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100188A18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100188D00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100188D30(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100189290(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  id v14;
  uint8_t buf[4];
  id v16;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
  objc_msgSend(v2, "setDataStore:", v3);

  v4 = *(void **)(a1 + 32);
  v14 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "createManagedObjectWithError:", &v14));
  v6 = v14;
  v7 = v6;
  if (v5)
  {
    objc_msgSend(v5, "setInclusionVerified:", 2);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    v13 = v7;
    v9 = objc_msgSend(v8, "persistAndRefaultObject:error:", v5, &v13);
    v10 = v13;

    if ((v9 & 1) == 0)
    {
      if (qword_1002A7A58 != -1)
        dispatch_once(&qword_1002A7A58, &stru_10024B3A8);
      v11 = qword_1002A7A60;
      if (os_log_type_enabled((os_log_t)qword_1002A7A60, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v16 = v10;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "failed to save unverified PAT STH from revision log inclusion proof: %@", buf, 0xCu);
      }
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      objc_msgSend(v12, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("revisionMissingTLTProof"), v10);

      if (*(_QWORD *)(a1 + 48))
        **(_QWORD **)(a1 + 48) = (id)objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", v10));
    }
  }
  else
  {
    v10 = v6;
  }

}

void sub_100189450(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_10018976C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_10018979C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100189C04(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

void sub_100189C34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A60;
  qword_1002A7A60 = (uint64_t)v1;

}

BOOL sub_100189CE8(uint64_t a1)
{
  return a1 && (a1 & (a1 - 1)) == 0;
}

void sub_10018A270(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A70;
  qword_1002A7A70 = (uint64_t)v1;

}

void sub_10018A2A0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A70;
  qword_1002A7A70 = (uint64_t)v1;

}

void sub_10018A4C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A70;
  qword_1002A7A70 = (uint64_t)v1;

}

void sub_10018ABD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A80;
  qword_1002A7A80 = (uint64_t)v1;

}

void sub_10018AC04(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A80;
  qword_1002A7A80 = (uint64_t)v1;

}

void sub_10018AC34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A80;
  qword_1002A7A80 = (uint64_t)v1;

}

void sub_10018AC64(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "deviceList"));
  if (v5)
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updateDevicesList:", v5));
  else
    v6 = 0;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10018B238(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A90;
  qword_1002A7A90 = (uint64_t)v1;

}

void sub_10018B268(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A90;
  qword_1002A7A90 = (uint64_t)v1;

}

void sub_10018B43C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7A90;
  qword_1002A7A90 = (uint64_t)v1;

}

void sub_10018BC84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AA0;
  qword_1002A7AA0 = (uint64_t)v1;

}

void sub_10018BCB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AA0;
  qword_1002A7AA0 = (uint64_t)v1;

}

void sub_10018BDA0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;

  v2 = *(void **)(a1 + 32);
  v13 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "createManagedObjectWithError:", &v13));
  v4 = v13;
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    objc_msgSend(v5, "onMocSetMapHead:signatureResult:signatureError:", v3, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    v12 = v4;
    v7 = objc_msgSend(v6, "persistWithError:", &v12);
    v8 = v12;

    if ((v7 & 1) == 0)
    {
      if (qword_1002A7A98 != -1)
        dispatch_once(&qword_1002A7A98, &stru_10024B5F0);
      v9 = qword_1002A7AA0;
      if (os_log_type_enabled((os_log_t)qword_1002A7AA0, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v15 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "failed persist SMH signature failure: %@", buf, 0xCu);
      }
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      objc_msgSend(v10, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("mapHeadSignature"), v8);

    }
  }
  else
  {
    if (qword_1002A7A98 != -1)
      dispatch_once(&qword_1002A7A98, &stru_10024B5D0);
    v11 = qword_1002A7AA0;
    if (os_log_type_enabled((os_log_t)qword_1002A7AA0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "failed to create SMH object: %@", buf, 0xCu);
    }
    v8 = v4;
  }

}

void sub_10018BF9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AA0;
  qword_1002A7AA0 = (uint64_t)v1;

}

void sub_10018BFCC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AA0;
  qword_1002A7AA0 = (uint64_t)v1;

}

void sub_10018C1DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AA0;
  qword_1002A7AA0 = (uint64_t)v1;

}

void sub_10018C374(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AB0;
  qword_1002A7AB0 = (uint64_t)v1;

}

void sub_10018C494(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AB0;
  qword_1002A7AB0 = (uint64_t)v1;

}

void sub_10018C8F4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AB0;
  qword_1002A7AB0 = (uint64_t)v1;

}

void sub_10018C924(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AB0;
  qword_1002A7AB0 = (uint64_t)v1;

}

void sub_10018CB98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AC0;
  qword_1002A7AC0 = (uint64_t)v1;

}

void sub_10018CBC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AC0;
  qword_1002A7AC0 = (uint64_t)v1;

}

void sub_10018D3AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AC0;
  qword_1002A7AC0 = (uint64_t)v1;

}

void sub_10018DA40(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AD0;
  qword_1002A7AD0 = (uint64_t)v1;

}

void sub_10018E054(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AD0;
  qword_1002A7AD0 = (uint64_t)v1;

}

uint64_t sub_10018E1D0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  void *v38;
  _QWORD v39[5];
  id v40;
  id v41;
  __int128 *p_buf;
  uint64_t *v43;
  id obj;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  __int128 buf;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t);
  id v53;

  if (!objc_msgSend(*(id *)(a1 + 32), "hasStartSlh")
    || (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "startSlh")), v6, !v6))
  {
    v35 = -181;
    if (!a2)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "hasEndSlh")
    || (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endSlh")), v7, !v7))
  {
    v35 = -182;
    if (!a2)
      goto LABEL_20;
    goto LABEL_19;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "proofHashesArray"));
  if (v8)
  {
    v9 = objc_msgSend(*(id *)(a1 + 32), "proofHashesArray_Count");

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "startSlh"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "trustedKeyStore"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "signatureVerifier"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      v38 = (void *)objc_claimAutoreleasedReturnValue(+[SignedLogHead signedTypeWithObject:verifier:dataStore:](SignedLogHead, "signedTypeWithObject:verifier:dataStore:", v10, v13, v14));

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endSlh"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "trustedKeyStore"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "signatureVerifier"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[SignedLogHead signedTypeWithObject:verifier:dataStore:](SignedLogHead, "signedTypeWithObject:verifier:dataStore:", v15, v18, v19));

      *(_QWORD *)&buf = 0;
      *((_QWORD *)&buf + 1) = &buf;
      v50 = 0x3032000000;
      v51 = sub_10018E70C;
      v52 = sub_10018E71C;
      v53 = 0;
      v45 = 0;
      v46 = &v45;
      v47 = 0x2020000000;
      v48 = 0;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "proofHashesArray"));
      v23 = (id *)(*((_QWORD *)&buf + 1) + 40);
      obj = *(id *)(*((_QWORD *)&buf + 1) + 40);
      v24 = objc_msgSend(v21, "verifyConsistencyProof:startLogHead:endLogHead:error:", v22, v38, v20, &obj);
      objc_storeStrong(v23, obj);

      v48 = v24;
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472;
      v39[2] = sub_10018E724;
      v39[3] = &unk_10023CE80;
      v39[4] = *(_QWORD *)(a1 + 32);
      v26 = v38;
      v40 = v26;
      p_buf = &buf;
      v27 = v20;
      v41 = v27;
      v43 = &v45;
      objc_msgSend(v25, "performBlockAndWait:", v39);

      v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
      v30 = kTransparencyResponseMetadataKeyServerHint;
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

      if (v31)
      {
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "objectForKeyedSubscript:", v30));
        objc_msgSend(v28, "setObject:forKeyedSubscript:", v33, v30);

      }
      if (objc_msgSend(v28, "count"))
        *a3 = objc_retainAutorelease(v28);
      if (a2)
        *a2 = objc_retainAutorelease(*(id *)(*((_QWORD *)&buf + 1) + 40));
      v34 = v46[3];

      _Block_object_dispose(&v45, 8);
      _Block_object_dispose(&buf, 8);

      return v34;
    }
  }
  v35 = -183;
  if (a2)
LABEL_19:
    *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDecode, v35, CFSTR("log consistency response missing data required for verification")));
LABEL_20:
  if (qword_1002A7AC8 != -1)
    dispatch_once(&qword_1002A7AC8, &stru_10024B758);
  v36 = qword_1002A7AD0;
  if (os_log_type_enabled((os_log_t)qword_1002A7AD0, OS_LOG_TYPE_ERROR))
  {
    LODWORD(buf) = 134217984;
    *(_QWORD *)((char *)&buf + 4) = v35;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "log consistency response missing data required for verification: %ld", (uint8_t *)&buf, 0xCu);
  }
  return 0;
}

void sub_10018E6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10018E6DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AD0;
  qword_1002A7AD0 = (uint64_t)v1;

}

uint64_t sub_10018E70C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10018E71C(uint64_t a1)
{

}

void sub_10018E724(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  void *v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  unsigned __int8 v28;
  NSObject *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id obj;
  uint8_t buf[4];
  uint64_t v38;

  v2 = objc_msgSend(*(id *)(a1 + 32), "forwards");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v6 = *(void **)(v3 + 40);
  v5 = (id *)(v3 + 40);
  v4 = v6;
  if (v2)
  {
    v7 = *(void **)(a1 + 40);
    obj = v4;
    v8 = objc_msgSend(v7, "copyManagedObject:", &obj);
    objc_storeStrong(v5, obj);
    v9 = *(void **)(a1 + 48);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v12 = *(void **)(v10 + 40);
    v11 = (void **)(v10 + 40);
    v35 = v12;
    v13 = objc_msgSend(v9, "copyManagedObject:", &v35);
    v14 = v35;
  }
  else
  {
    v15 = *(void **)(a1 + 48);
    v34 = v4;
    v8 = objc_msgSend(v15, "copyManagedObject:", &v34);
    objc_storeStrong(v5, v34);
    v16 = *(void **)(a1 + 40);
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v18 = *(void **)(v17 + 40);
    v11 = (void **)(v17 + 40);
    v33 = v18;
    v13 = objc_msgSend(v16, "copyManagedObject:", &v33);
    v14 = v33;
  }
  v19 = v14;
  v20 = *v11;
  *v11 = v19;

  if (!v8 || !v13)
  {
    if (qword_1002A7AC8 != -1)
      dispatch_once(&qword_1002A7AC8, &stru_10024B778);
    v21 = qword_1002A7AD0;
    if (os_log_type_enabled((os_log_t)qword_1002A7AD0, OS_LOG_TYPE_ERROR))
    {
      v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v38 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "failed to get SLHs from data store: %@", buf, 0xCu);
    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "forwards"))
  {
    if (objc_msgSend(v8, "consistencyVerified") == (id)2)
    {
      v23 = objc_msgSend(v8, "revision");
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "startRevision"));
      v25 = objc_msgSend(v24, "longLongValue");

      if (v23 == v25)
        objc_msgSend(*(id *)(a1 + 32), "setResult:treeHead:error:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24), v8, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    }
  }
  if (objc_msgSend(v8, "consistencyVerified") == (id)1)
    objc_msgSend(*(id *)(a1 + 32), "setResult:treeHead:error:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24), v13, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) == 1)
    objc_msgSend(*(id *)(a1 + 32), "checkSplitsFor:", v13);
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
  v27 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v32 = *(id *)(v27 + 40);
  v28 = objc_msgSend(v26, "persistWithError:", &v32);
  objc_storeStrong((id *)(v27 + 40), v32);

  if ((v28 & 1) == 0)
  {
    if (qword_1002A7AC8 != -1)
      dispatch_once(&qword_1002A7AC8, &stru_10024B798);
    v29 = qword_1002A7AD0;
    if (os_log_type_enabled((os_log_t)qword_1002A7AD0, OS_LOG_TYPE_ERROR))
    {
      v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v38 = v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "failed to save consistency results: %@", buf, 0xCu);
    }
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    objc_msgSend(v31, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("verifyConsistency"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));

  }
}

void sub_10018EA6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AD0;
  qword_1002A7AD0 = (uint64_t)v1;

}

void sub_10018EA9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AD0;
  qword_1002A7AD0 = (uint64_t)v1;

}

void sub_10018EF30(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10018EF60(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  id v8;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setResult:", v3);
  if (qword_1002A7AD8 != -1)
    dispatch_once(&qword_1002A7AD8, &stru_10024B7D8);
  v4 = qword_1002A7AE0;
  if (os_log_type_enabled((os_log_t)qword_1002A7AE0, OS_LOG_TYPE_INFO))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "opt-in result from IDS: %@", (uint8_t *)&v7, 0xCu);
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "operationQueue"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "finishedOp"));
  objc_msgSend(v5, "addOperation:", v6);

}

void sub_10018F078(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10018F3F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10018FA24(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_10018FA4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10018FA80(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10018FAB0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
    objc_msgSend(*(id *)(a1 + 40), "setError:", v3);

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "optInStates"));
    objc_msgSend(v4, "completedCurrentTarget");

LABEL_5:
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
    objc_msgSend(v7, "addOperation:", *(_QWORD *)(a1 + 48));
    goto LABEL_6;
  }
  if (objc_msgSend(*(id *)(a1 + 40), "targetState") == (id)2)
  {
    objc_msgSend(WeakRetained, "clearOptInStateAndPushToCloud");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stateMonitor"));
    objc_msgSend(v6, "setOptInState:everOptIn:", 0, 1);

    objc_msgSend(*(id *)(a1 + 40), "setTargetState:", 1);
    objc_msgSend(WeakRetained, "setNextState:", CFSTR("ValidateSelfOptIn"));
    goto LABEL_5;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "applicationId"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("OptInServerSet"), v8));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "result"));
  objc_msgSend(WeakRetained, "processResponse:watcher:finishOp:", v9, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "logger"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "error"));
  objc_msgSend(v11, "logResultForEvent:hardFailure:result:", v7, 1, v12);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "error"));
  objc_msgSend(*(id *)(a1 + 40), "setError:", v13);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "error"));
  if (!v14)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deps"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stateMonitor"));
    objc_msgSend(v16, "setOptInState:everOptIn:", objc_msgSend(*(id *)(a1 + 40), "targetState") == (id)1, 1);

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "optInStates"));
  objc_msgSend(v17, "completedCurrentTarget");

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue"));
  objc_msgSend(v18, "addOperation:", *(_QWORD *)(a1 + 48));

LABEL_6:
}

void sub_100190A6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190A9C(id *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v5 = a3;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "prefixedURI"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "verifyResponse:uri:expectedState:", v5, v7, objc_msgSend(a1[5], "targetState") != 0));

  objc_msgSend(a1[6], "setObject:forKeyedSubscript:", v6, v7);
}

void sub_100190B28(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190B58(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190B88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190BB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190BE8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190C18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100190E60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019118C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

intptr_t sub_1001911BC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deps"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "logger"));
  objc_msgSend(v6, "logResultForEvent:hardFailure:result:", CFSTR("optInSync"), 1, v4);

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100191360(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019149C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_1001918C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_1001918F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100191928(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_1001921AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_1001921DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019220C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019223C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019226C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_10019229C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_1001922CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AE0;
  qword_1002A7AE0 = (uint64_t)v1;

}

void sub_100192B3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_100192CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100192CF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100192D04(uint64_t a1)
{

}

void sub_100192D0C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  double Current;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  id v41;
  id v42;
  uint8_t buf[4];
  id v44;

  v2 = *(void **)(a1 + 32);
  v42 = 0;
  v3 = objc_msgSend(v2, "copyManagedObject:", &v42);
  v4 = v42;
  if (!v3)
  {
    if (qword_1002A7AE8 != -1)
      dispatch_once(&qword_1002A7AE8, &stru_10024BBA0);
    v9 = qword_1002A7AF0;
    if (os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v44 = v4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "failed to find tree head after inclusion verification: %@", buf, 0xCu);
    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    v10 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", v4));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;
    v13 = v4;
    goto LABEL_31;
  }
  objc_msgSend(v3, "setUnsigned:value:", "inclusionVerified", *(_QWORD *)(a1 + 64));
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "createSignedTreeHeadFailure"));

    v7 = *(id **)(a1 + 72);
    if (v7 && *v7)
      v8 = (uint64_t)objc_msgSend(*v7, "code");
    else
      v8 = -120;
    objc_msgSend(v6, "setErrorCode:", v8);
    v14 = *(id **)(a1 + 72);
    if (v14 && *v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v14, "domain"));
      objc_msgSend(v6, "setErrorDomain:", v15);

    }
    else
    {
      objc_msgSend(v6, "setErrorDomain:", kTransparencyErrorUnknown);
    }
    objc_msgSend(v6, "setSth:", v3);
    objc_msgSend(v6, "setVerificationType:", 1);
    if (!*(_QWORD *)(a1 + 64))
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "optInServer"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "createFailureEvent:application:optInServer:", v4, v17, v18));

      objc_msgSend(v3, "setFailureEvent:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "optInServer"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "getAggregateOptInState:", 0));

      if (qword_1002A7AE8 != -1)
        dispatch_once(&qword_1002A7AE8, &stru_10024BBC0);
      v22 = (void *)qword_1002A7AF0;
      if (os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_DEFAULT))
      {
        v23 = v22;
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "eventId"));
        *(_DWORD *)buf = 138543362;
        v44 = v24;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Created failure eventId %{public}@ for STH inclusion validation", buf, 0xCu);

      }
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "followUp"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "eventId"));
      objc_msgSend(v25, "postFollowup:type:eventId:errorCode:optInState:infoLink:additionalInfo:error:", v26, 2, v27, objc_msgSend(v4, "code"), v21, 0, 0, 0);

    }
  }
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
  v41 = v4;
  v29 = objc_msgSend(v28, "persistWithError:", &v41);
  v13 = v41;

  if ((v29 & 1) == 0)
  {
    if (qword_1002A7AE8 != -1)
      dispatch_once(&qword_1002A7AE8, &stru_10024BBE0);
    v30 = qword_1002A7AF0;
    if (os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v44 = v13;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "failed to save inclusion verification state to PAT head after TLT entry verification: %@", buf, 0xCu);
    }
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
    objc_msgSend(v31, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("verifyPatHeadInclusion"), v13);

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    v32 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", v13));
    v33 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v34 = *(void **)(v33 + 40);
    *(_QWORD *)(v33 + 40) = v32;

  }
  Current = CFAbsoluteTimeGetCurrent();
  objc_msgSend(v3, "receiptTime");
  if (Current - v36 > 1.0)
  {
    v37 = CFAbsoluteTimeGetCurrent();
    objc_msgSend(v3, "receiptTime");
    v39 = v37 - v38;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v39));
    objc_msgSend(v12, "logMetric:withName:", v40, CFSTR("ktTLTInclusionProofTime"));

LABEL_31:
  }

}

void sub_100193238(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_100193268(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_100193298(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

id sub_100193378(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  const char *v24;
  NSObject *v25;
  uint32_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t buf[4];
  uint64_t v31;

  if (+[TransparencyAnalytics hasInternalDiagnostics](TransparencyAnalytics, "hasInternalDiagnostics"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
    v8 = kTransparencyResponseMetadataKeyServerHint;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v8));
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, v8);

    }
    if (objc_msgSend(v6, "count"))
      *a3 = objc_retainAutorelease(v6);

  }
  v12 = objc_msgSend(*(id *)(a1 + 32), "verifyWithError:", a2);
  if (v12 == (id)1)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nodeBytes"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](TopLevelTreeNode, "parseFromData:error:", v13, a2));

    if (v14)
    {
      if (objc_msgSend(v14, "hasPatHead"))
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "patHead"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "object"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "logHead"));
        v18 = objc_msgSend(v16, "isEqualToData:", v17);

        if ((v18 & 1) != 0)
        {
          v19 = 1;
LABEL_36:
          v22 = objc_msgSend(*(id *)(a1 + 32), "setInclusionResult:signedLogHead:error:", v19, *(_QWORD *)(a1 + 40), a2);

          return v22;
        }
      }
      if (a2)
        *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", CFSTR("TransparencyErrorVerify"), -63, CFSTR("top-level tree entry does not contain the SLH in the per-app tree entry")));
      if (qword_1002A7AE8 != -1)
        dispatch_once(&qword_1002A7AE8, &stru_10024BC68);
      v23 = qword_1002A7AF0;
      if (!os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_ERROR))
      {
LABEL_35:
        v19 = 0;
        goto LABEL_36;
      }
      *(_WORD *)buf = 0;
      v24 = "top-level tree entry does not contain the SLH in the per-app tree entry";
      v25 = v23;
      v26 = 2;
    }
    else
    {
      if (a2)
        *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDecode, -141, *a2));
      if (qword_1002A7AE8 != -1)
        dispatch_once(&qword_1002A7AE8, &stru_10024BC48);
      v27 = qword_1002A7AF0;
      if (!os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_ERROR))
        goto LABEL_35;
      if (a2)
        v28 = *a2;
      else
        v28 = 0;
      *(_DWORD *)buf = 138412290;
      v31 = v28;
      v24 = "failed to decode top-level tree node: %@";
      v25 = v27;
      v26 = 12;
    }
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, v24, buf, v26);
    goto LABEL_35;
  }
  v20 = v12;
  if (a2)
    *a2 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -14, *a2, CFSTR("top-level tree verification failed")));
  if (qword_1002A7AE8 != -1)
    dispatch_once(&qword_1002A7AE8, &stru_10024BC28);
  v21 = qword_1002A7AF0;
  if (os_log_type_enabled((os_log_t)qword_1002A7AF0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "top level tree verification failed", buf, 2u);
  }
  return objc_msgSend(*(id *)(a1 + 32), "setInclusionResult:signedLogHead:error:", v20, *(_QWORD *)(a1 + 40), a2);
}

void sub_100193778(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_1001937A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_1001937D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7AF0;
  qword_1002A7AF0 = (uint64_t)v1;

}

void sub_100193BE8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B00;
  qword_1002A7B00 = (uint64_t)v1;

}

void sub_100194204(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

void sub_100194234(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

void sub_1001945AC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id *v7;
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  NSObject *v14;
  void *v15;
  id v16;
  id v17;
  uint8_t buf[4];
  id v19;

  v2 = *(void **)(a1 + 32);
  v17 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "createManagedObjectWithError:", &v17));
  v4 = v17;
  objc_msgSend(v3, "getUnsigned:", "signatureVerified");
  objc_msgSend(v3, "setUnsigned:value:", "signatureVerified", *(_QWORD *)(a1 + 40));
  objc_msgSend(v3, "setGossip:", objc_msgSend(*(id *)(a1 + 32), "gossip"));
  if (!*(_QWORD *)(a1 + 40))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "createSignedTreeHeadFailure"));

    v7 = *(id **)(a1 + 48);
    if (v7 && *v7)
      v8 = (uint64_t)objc_msgSend(*v7, "code");
    else
      v8 = -120;
    objc_msgSend(v6, "setErrorCode:", v8);
    v9 = *(id **)(a1 + 48);
    if (v9 && *v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v9, "domain"));
      objc_msgSend(v6, "setErrorDomain:", v10);

    }
    else
    {
      objc_msgSend(v6, "setErrorDomain:", kTransparencyErrorUnknown);
    }
    objc_msgSend(v6, "setSth:", v3);
    objc_msgSend(v6, "setVerificationType:", 0);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
  v16 = v4;
  v12 = objc_msgSend(v11, "persistWithError:", &v16);
  v13 = v16;

  if ((v12 & 1) == 0)
  {
    if (qword_1002A7B08 != -1)
      dispatch_once(&qword_1002A7B08, &stru_10024BD18);
    v14 = qword_1002A7B10;
    if (os_log_type_enabled((os_log_t)qword_1002A7B10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v13;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "failed to save signature result for STH: %@", buf, 0xCu);
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    objc_msgSend(v15, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("verifySTHSignature"), v13);

  }
}

void sub_1001947F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

uint64_t sub_100194938(uint64_t a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  uint64_t v29;
  unsigned int v30;
  NSObject *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  NSObject *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint8_t buf[4];
  uint64_t v45;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logHead"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](LogHead, "parseFromData:error:", v4, a2));

  if (!objc_msgSend(*(id *)(a1 + 32), "hasSignature")
    || (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature")),
        v6,
        !v6))
  {
    v36 = -27;
    goto LABEL_24;
  }
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logHead"));
  if (!v7
    || (v8 = (void *)v7,
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logHead")),
        v10 = objc_msgSend(v9, "length"),
        v9,
        v8,
        !v10))
  {
    v36 = -26;
    goto LABEL_24;
  }
  if (!v5)
  {
    v36 = -208;
    goto LABEL_24;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "signature"));
  if (!v12)
  {
    v36 = -46;
LABEL_36:

    goto LABEL_24;
  }
  v13 = (void *)v12;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "signature"));
  v16 = objc_msgSend(v15, "length");

  if (!v16)
  {
    v36 = -46;
    goto LABEL_24;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "signingKeySpkihash"));
  if (!v17)
  {
    v36 = -47;
    goto LABEL_36;
  }
  v18 = (void *)v17;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "signingKeySpkihash"));
  v21 = objc_msgSend(v20, "length");

  if (v21)
  {
    v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logHead"));
    v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "signature"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "signingKeySpkihash"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
    v43 = 0;
    v27 = objc_msgSend(v41, "verifyMessage:signature:spkiHash:algorithm:error:", v22, v23, v25, +[TransparencySignatureVerifier secKeyAlgorithmForProtoAlgorithm:](TransparencySignatureVerifier, "secKeyAlgorithmForProtoAlgorithm:", objc_msgSend(v26, "algorithm")), &v43);
    v28 = v43;

    v29 = v27;
    v30 = +[TransparencyError hasUnknownSPKIHashError:](TransparencyError, "hasUnknownSPKIHashError:", v28);
    if (v30)
      v29 = 2;
    if (a2 && v28)
      *a2 = (uint64_t)objc_retainAutorelease(v28);
    if (!objc_msgSend(*(id *)(a1 + 32), "gossip") || v29)
    {
      objc_msgSend(*(id *)(a1 + 32), "storeSignatureResult:signatureError:", v29, a2);
      if ((v27 & ~v30 & 1) == 0)
      {
        if (a2)
          *a2 = (uint64_t)(id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -139, *a2));
        if (qword_1002A7B08 != -1)
          dispatch_once(&qword_1002A7B08, &stru_10024BDA0);
        v39 = qword_1002A7B10;
        if (os_log_type_enabled((os_log_t)qword_1002A7B10, OS_LOG_TYPE_ERROR))
        {
          if (a2)
            v40 = *a2;
          else
            v40 = 0;
          *(_DWORD *)buf = 138412290;
          v45 = v40;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "Signed log head signature verification failed: %@", buf, 0xCu);
        }
      }
    }
    else
    {
      if (qword_1002A7B08 != -1)
        dispatch_once(&qword_1002A7B08, &stru_10024BD80);
      v31 = qword_1002A7B10;
      if (os_log_type_enabled((os_log_t)qword_1002A7B10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "gossiped signed log head failed signature validation, will not store result", buf, 2u);
      }
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -139, *a2));
      v33 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("GossipSignatureVerificationFailed"), kKTApplicationIdentifierTLT));
      v34 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
      objc_msgSend(v34, "logResultForEvent:hardFailure:result:", v33, 1, v32);

      v35 = objc_retainAutorelease(v32);
      *a2 = (uint64_t)v35;

    }
    goto LABEL_31;
  }
  v36 = -47;
LABEL_24:
  if (a2)
    *a2 = (uint64_t)(id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDecode, v36, *a2, CFSTR("SLH missing data required for verification")));
  if (qword_1002A7B08 != -1)
    dispatch_once(&qword_1002A7B08, &stru_10024BD60);
  v37 = qword_1002A7B10;
  if (os_log_type_enabled((os_log_t)qword_1002A7B10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134217984;
    v45 = v36;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "SLH missing data required for verification: %ld", buf, 0xCu);
  }
  v29 = 0;
LABEL_31:

  return v29;
}

void sub_100194EDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

void sub_100194F0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

void sub_100194F3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B10;
  qword_1002A7B10 = (uint64_t)v1;

}

void sub_100195940(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

void sub_100195970(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

uint64_t sub_100195AB8(uint64_t a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unsigned int v33;
  id v34;
  uint64_t v35;
  unsigned int v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  void *v42;
  id v43;
  uint8_t buf[4];
  uint64_t v45;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapHead"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](MapHead, "parseFromData:error:", v4, a2));

  if (!objc_msgSend(*(id *)(a1 + 32), "hasSignature")
    || (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature")),
        v6,
        !v6))
  {
    v39 = -22;
    goto LABEL_36;
  }
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapHead"));
  if (!v7
    || (v8 = (void *)v7,
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapHead")),
        v10 = objc_msgSend(v9, "length"),
        v9,
        v8,
        !v10))
  {
    v39 = -21;
    goto LABEL_36;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "signature"));
  if (!v12)
  {
    v39 = -51;
LABEL_35:

    goto LABEL_36;
  }
  v13 = (void *)v12;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "signature"));
  v16 = objc_msgSend(v15, "length");

  if (!v16)
  {
    v39 = -51;
    goto LABEL_36;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "signingKeySpkihash"));
  if (!v17)
  {
    v39 = -52;
    goto LABEL_35;
  }
  v18 = (void *)v17;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "signingKeySpkihash"));
  v21 = objc_msgSend(v20, "length");

  if (v21)
  {
    if (v5)
    {
      v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mapHeadHash"));
      if (v22
        && (v23 = (void *)v22,
            v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mapHeadHash")),
            v25 = objc_msgSend(v24, "length"),
            v24,
            v23,
            v25))
      {
        if (objc_msgSend(v5, "application") && objc_msgSend(v5, "application"))
        {
          if (objc_msgSend(v5, "hasChangeLogHead")
            && (v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "changeLogHead")),
                v26,
                v26))
          {
            if (objc_msgSend(v5, "timestampMs"))
            {
              v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "verifier"));
              v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapHead"));
              v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
              v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "signature"));
              v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
              v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "signingKeySpkihash"));
              v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signature"));
              v43 = 0;
              v33 = objc_msgSend(v27, "verifyMessage:signature:spkiHash:algorithm:error:", v28, v29, v31, +[TransparencySignatureVerifier secKeyAlgorithmForProtoAlgorithm:](TransparencySignatureVerifier, "secKeyAlgorithmForProtoAlgorithm:", objc_msgSend(v32, "algorithm")), &v43);
              v34 = v43;

              v35 = v33;
              v36 = +[TransparencyError hasUnknownSPKIHashError:](TransparencyError, "hasUnknownSPKIHashError:", v34);
              if (v36)
                v35 = 2;
              if (a2 && v34)
                *a2 = (uint64_t)objc_retainAutorelease(v34);
              if ((v33 & ~v36 & 1) == 0)
              {
                if (a2)
                  *a2 = (uint64_t)(id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -138, *a2));
                if (qword_1002A7B18 != -1)
                  dispatch_once(&qword_1002A7B18, &stru_10024BE20);
                v37 = qword_1002A7B20;
                if (os_log_type_enabled((os_log_t)qword_1002A7B20, OS_LOG_TYPE_ERROR))
                {
                  if (a2)
                    v38 = *a2;
                  else
                    v38 = 0;
                  *(_DWORD *)buf = 138412290;
                  v45 = v38;
                  _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "SMH signature verification failed: %@", buf, 0xCu);
                }
              }

              goto LABEL_43;
            }
            v39 = -227;
          }
          else
          {
            v39 = -25;
          }
        }
        else
        {
          v39 = -24;
        }
      }
      else
      {
        v39 = -23;
      }
    }
    else
    {
      v39 = -207;
    }
  }
  else
  {
    v39 = -52;
  }
LABEL_36:
  if (a2)
    *a2 = (uint64_t)(id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorDecode, v39, *a2, CFSTR("SMH missing data required for verification")));
  if (qword_1002A7B18 != -1)
    dispatch_once(&qword_1002A7B18, &stru_10024BE00);
  v40 = qword_1002A7B20;
  if (os_log_type_enabled((os_log_t)qword_1002A7B20, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134217984;
    v45 = v39;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "SMH missing data required for verification: %ld", buf, 0xCu);
  }
  v35 = 0;
LABEL_43:

  return v35;
}

void sub_100195FD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

void sub_100196004(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

void sub_1001960D4(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  NSObject *v7;
  void *v8;
  id v9;
  uint8_t buf[4];
  id v11;

  v2 = objc_msgSend(*(id *)(a1 + 32), "copyManagedObject:", 0);
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    objc_msgSend(v3, "onMocSetMapHead:mmdResult:mmdError:", v2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
    v9 = 0;
    v5 = objc_msgSend(v4, "persistWithError:", &v9);
    v6 = v9;

    if ((v5 & 1) == 0)
    {
      if (qword_1002A7B18 != -1)
        dispatch_once(&qword_1002A7B18, &stru_10024BE40);
      v7 = qword_1002A7B20;
      if (os_log_type_enabled((os_log_t)qword_1002A7B20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "failed to save inclusion state for map head: %@", buf, 0xCu);
      }
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
      objc_msgSend(v8, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("mapHeadMMDState"), v6);

    }
  }

}

void sub_10019623C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

uint64_t sub_1001963E4(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  void *v6;
  double v7;
  unint64_t v8;
  id v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  uint8_t buf[4];
  id v18;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapHead"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyGPBMessage parseFromData:error:](MapHead, "parseFromData:error:", v4, a2));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", *(double *)(a1 + 40)));
  objc_msgSend(v6, "timeIntervalSince1970");
  v8 = (unint64_t)(v7 * 1000.0);

  v9 = objc_msgSend(v5, "timestampMs");
  if ((unint64_t)v9 + kKTMaximumMergeDelayMs >= v8)
  {
    if (qword_1002A7B18 != -1)
      dispatch_once(&qword_1002A7B18, &stru_10024BE80);
    v14 = qword_1002A7B20;
    if (os_log_type_enabled((os_log_t)qword_1002A7B20, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "SMH MMD verified", buf, 2u);
    }
    v15 = *(void **)(a1 + 32);
    v13 = 1;
    objc_msgSend(v15, "setMMDVerifiedForMapHead:mmdError:", 1, 0);
  }
  else
  {
    if (qword_1002A7B18 != -1)
      dispatch_once(&qword_1002A7B18, &stru_10024BE60);
    v10 = (void *)qword_1002A7B20;
    if (os_log_type_enabled((os_log_t)qword_1002A7B20, OS_LOG_TYPE_ERROR))
    {
      v11 = v10;
      *(_DWORD *)buf = 134217984;
      v18 = objc_msgSend(v5, "timestampMs");
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "SMH timestamp exceeds MMD: %lld", buf, 0xCu);

    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", CFSTR("TransparencyErrorVerify"), -228, *a2, CFSTR("SMH timestamp exceeds MMD: %lld"), objc_msgSend(v5, "timestampMs")));
    objc_msgSend(*(id *)(a1 + 32), "setMMDVerifiedForMapHead:mmdError:", 0, v12);
    if (v12)
      *a2 = objc_retainAutorelease(v12);

    v13 = 0;
  }

  return v13;
}

void sub_100196644(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

void sub_100196674(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B20;
  qword_1002A7B20 = (uint64_t)v1;

}

void sub_1001968C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001968DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B30;
  qword_1002A7B30 = (uint64_t)v1;

}

void sub_100196A6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100196A88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B30;
  qword_1002A7B30 = (uint64_t)v1;

}

void sub_100196B04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100196D8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100196DB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B30;
  qword_1002A7B30 = (uint64_t)v1;

}

void sub_100197494(id a1)
{
  TransparencyIDSConfigBag *v1;
  void *v2;

  v1 = objc_alloc_init(TransparencyIDSConfigBag);
  v2 = (void *)qword_1002A7B40;
  qword_1002A7B40 = (uint64_t)v1;

}

void sub_100197A1C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B50;
  qword_1002A7B50 = (uint64_t)v1;

}

void sub_100198098(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001980C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001980F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100198128(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100198444(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100198474(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_10019852C(id a1)
{
  TransparencyAccount *v1;
  void *v2;

  v1 = objc_alloc_init(TransparencyAccount);
  v2 = (void *)qword_1002A7B68;
  qword_1002A7B68 = (uint64_t)v1;

}

void sub_1001986AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

id sub_1001986DC(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const __CFString *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  int v21;
  const __CFString *v22;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAccount primaryAccount:](TransparencyAccount, "primaryAccount:", 0));
  if (qword_1002A7B58 != -1)
    dispatch_once(&qword_1002A7B58, &stru_10024C068);
  v4 = qword_1002A7B60;
  if (os_log_type_enabled((os_log_t)qword_1002A7B60, OS_LOG_TYPE_INFO))
  {
    v5 = CFSTR("yes");
    if (!v3)
      v5 = CFSTR("no");
    v21 = 138543362;
    v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "TransparencyAccount Primary account found %{public}@", (uint8_t *)&v21, 0xCu);
  }
  if (v3)
  {
    v6 = +[TransparencyAccount accountLevel:](TransparencyAccount, "accountLevel:", v3);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "aa_personID"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", +[CDPAccount isICDPEnabledForDSID:](CDPAccount, "isICDPEnabledForDSID:", v7)));
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v8, CFSTR("CDPEnabled"));

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v6 == 4));
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v9, CFSTR("ktAccountIsHSA2"));

    if (v6 == 4)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAccount cloudKitAccount:](TransparencyAccount, "cloudKitAccount:", v3));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messagesStatus"));

      if (v7)
        v12 = objc_msgSend(*(id *)(a1 + 32), "haveIDSAccount:", v7);
      else
        v12 = 0;
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v10 != 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v15, CFSTR("ktAccountCloudKit"));

      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v11 != 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v16, CFSTR("ktAccountIDS"));

      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v12));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v17, CFSTR("ktAccountCKIDSame"));

      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "idsAccountType")));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v18, CFSTR("ktPhoneOnly"));

      v19 = v2;
    }
    else
    {
      v14 = v2;
    }

  }
  else
  {
    v13 = v2;
  }

  return v2;
}

void sub_1001989D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100198FF0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199020(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199050(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199080(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001990B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001990E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199724(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199754(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199784(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001997B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_1001997E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199A04(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199A34(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  int v12;
  id v13;

  v5 = a3;
  switch(a2)
  {
    case 2:
      if (qword_1002A7B58 != -1)
        dispatch_once(&qword_1002A7B58, &stru_10024C270);
      v7 = qword_1002A7B60;
      if (os_log_type_enabled((os_log_t)qword_1002A7B60, OS_LOG_TYPE_ERROR))
      {
        v12 = 138412290;
        v13 = v5;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Primary account credentials renewal request failed: %@", (uint8_t *)&v12, 0xCu);
      }
      v8 = kTransparencyErrorAccount;
      v9 = -176;
      goto LABEL_19;
    case 1:
      if (qword_1002A7B58 != -1)
        dispatch_once(&qword_1002A7B58, &stru_10024C250);
      v10 = qword_1002A7B60;
      if (os_log_type_enabled((os_log_t)qword_1002A7B60, OS_LOG_TYPE_ERROR))
      {
        v12 = 138412290;
        v13 = v5;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Primary account credentials renewal request rejected: %@", (uint8_t *)&v12, 0xCu);
      }
      v8 = kTransparencyErrorAccount;
      v9 = -175;
LABEL_19:
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", v8, v9, v5, CFSTR("Account credential renewal failed")));
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

      break;
    case 0:
      if (qword_1002A7B58 != -1)
        dispatch_once(&qword_1002A7B58, &stru_10024C230);
      v6 = qword_1002A7B60;
      if (os_log_type_enabled((os_log_t)qword_1002A7B60, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Primary account credentials successfully renewed", (uint8_t *)&v12, 2u);
      }
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      break;
  }

}

void sub_100199C7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199CAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_100199CDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B60;
  qword_1002A7B60 = (uint64_t)v1;

}

void sub_10019A258(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019A288(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

id sub_10019A2B8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "evalCurrentOptInState:optInStateError:", a2);
}

void sub_10019A938(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019A968(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019A998(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019A9C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019A9F8(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  __CFString **v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  int v20;
  _QWORD v21[2];

  v6 = a4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("OptInServerSet"), *(_QWORD *)(a1 + 32)));
  if (qword_1002A7B78 != -1)
    dispatch_once(&qword_1002A7B78, &stru_10024C3A0);
  v8 = qword_1002A7B80;
  if (os_log_type_enabled((os_log_t)qword_1002A7B80, OS_LOG_TYPE_DEFAULT))
  {
    v20 = 67109378;
    LODWORD(v21[0]) = a2;
    WORD2(v21[0]) = 2112;
    *(_QWORD *)((char *)v21 + 6) = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "getKeyTransparencyOptInEligiblityForApplication: %d error: %@", (uint8_t *)&v20, 0x12u);
  }
  if (v6 || (a2 & 1) == 0)
  {
    if (qword_1002A7B78 != -1)
      dispatch_once(&qword_1002A7B78, &stru_10024C3C0);
    v11 = qword_1002A7B80;
    if (os_log_type_enabled((os_log_t)qword_1002A7B80, OS_LOG_TYPE_ERROR))
    {
      v20 = 138412290;
      v21[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "IDS reports that this account is ineligible to opt-in to KT: %@", (uint8_t *)&v20, 0xCu);
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorAccount, -290, v6, CFSTR("IDS reports that this account is ineligible to opt-in to KT")));

    objc_msgSend(*(id *)(a1 + 40), "setError:", v12);
    objc_msgSend(*(id *)(a1 + 48), "setError:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "optInStates"));
    objc_msgSend(v13, "completedCurrentTarget");

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "errorState"));
    objc_msgSend(*(id *)(a1 + 48), "setNextState:", v14);

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "operationQueue"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "finishedOp"));
    objc_msgSend(v15, "addOperation:", v16);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "error"));
    objc_msgSend(v17, "logResultForEvent:hardFailure:result:", v7, 0, v18);

  }
  else
  {
    if (objc_msgSend(*(id *)(a1 + 40), "targetState") == (id)2)
    {
      if (qword_1002A7B78 != -1)
        dispatch_once(&qword_1002A7B78, &stru_10024C3E0);
      v9 = qword_1002A7B80;
      if (os_log_type_enabled((os_log_t)qword_1002A7B80, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v20) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "going for reset before opting in", (uint8_t *)&v20, 2u);
      }
      v10 = off_10024D208;
    }
    else
    {
      if (qword_1002A7B78 != -1)
        dispatch_once(&qword_1002A7B78, &stru_10024C400);
      v19 = qword_1002A7B80;
      if (os_log_type_enabled((os_log_t)qword_1002A7B80, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v20) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "going for opt-in", (uint8_t *)&v20, 2u);
      }
      v10 = off_10024D218;
    }
    objc_msgSend(*(id *)(a1 + 48), "setNextState:", *v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "operationQueue"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "finishedOp"));
    objc_msgSend(v12, "addOperation:", v17);
  }

}

void sub_10019AD9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019ADCC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019ADFC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019AE2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7B80;
  qword_1002A7B80 = (uint64_t)v1;

}

void sub_10019AFE8(id a1)
{
  size_t v1;
  int v2;

  v2 = 0;
  v1 = 4;
  if (!sysctlbyname("kern.hv_vmm_present", &v2, &v1, 0, 0))
    byte_1002A7B90 = v2 == 1;
}

void sub_10019B164(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int HasDomainAndErrorCode;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  int v18;
  void *v19;

  v3 = a2;
  if (objc_msgSend(v3, "validBAAKey"))
  {
    if (qword_1002A7B98 != -1)
      dispatch_once(&qword_1002A7B98, &stru_10024C468);
    v4 = qword_1002A7BA0;
    if (os_log_type_enabled((os_log_t)qword_1002A7BA0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v18) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Successfully fetched BAA cert", (uint8_t *)&v18, 2u);
    }
    v5 = *(id *)(a1 + 32);
    objc_sync_enter(v5);
    objc_msgSend(*(id *)(a1 + 32), "setBaaKey:", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(*(id *)(a1 + 32), "setLastLocalFetchTime:", v6);

    objc_sync_exit(v5);
  }
  else
  {
    if (qword_1002A7B98 != -1)
      dispatch_once(&qword_1002A7B98, &stru_10024C488);
    v7 = (void *)qword_1002A7BA0;
    if (os_log_type_enabled((os_log_t)qword_1002A7BA0, OS_LOG_TYPE_ERROR))
    {
      v8 = v7;
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
      v18 = 138412290;
      v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to get BAA cert: %@", (uint8_t *)&v18, 0xCu);

    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
    HasDomainAndErrorCode = mobileactivationErrorHasDomainAndErrorCode(v10, MobileActivationErrorDomain, -3);

    if (HasDomainAndErrorCode)
    {
      if (qword_1002A7B98 != -1)
        dispatch_once(&qword_1002A7B98, &stru_10024C4A8);
      v12 = qword_1002A7BA0;
      if (os_log_type_enabled((os_log_t)qword_1002A7BA0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v18) = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "device identity authentication unsupported; will use account auth",
          (uint8_t *)&v18,
          2u);
      }
      objc_msgSend(*(id *)(a1 + 32), "setIsSupported:", 0);
    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "isSupported"))
  {
    if (os_variant_allows_internal_security_policies("com.apple.Transparency"))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "userInfo"));

    }
    else
    {
      v14 = 0;
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
    objc_msgSend(v15, "logResultForEvent:hardFailure:result:withAttributes:", CFSTR("TransparencyAuthentication"), 1, v16, v14);

  }
  v17 = *(_QWORD *)(a1 + 40);
  if (v17)
    (*(void (**)(uint64_t, id))(v17 + 16))(v17, v3);

}

void sub_10019B458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10019B474(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BA0;
  qword_1002A7BA0 = (uint64_t)v1;

}

void sub_10019B4A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BA0;
  qword_1002A7BA0 = (uint64_t)v1;

}

void sub_10019B4D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BA0;
  qword_1002A7BA0 = (uint64_t)v1;

}

void sub_10019B6FC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BA0;
  qword_1002A7BA0 = (uint64_t)v1;

}

void sub_10019B8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10019B8E0(_QWORD *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  if (objc_msgSend(v8, "validBAAKey"))
  {
    v3 = (void *)a1[4];
    v4 = a1[5];
    v5 = objc_msgSend(v8, "referenceKey");
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "certificates"));
    objc_msgSend(v3, "signData:key:certs:completionHandler:", v4, v5, v6, a1[6]);
  }
  else
  {
    v7 = a1[6];
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "error"));
    (*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v7 + 16))(v7, 0, 0, v6);
  }

}

uint64_t sub_10019BB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32), a3, a4);
}

void sub_10019BCB0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019BF4C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019BF7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019BFAC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019C2E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019C524(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019C554(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BB0;
  qword_1002A7BB0 = (uint64_t)v1;

}

void sub_10019CA3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BC0;
  qword_1002A7BC0 = (uint64_t)v1;

}

void sub_10019CA6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BC0;
  qword_1002A7BC0 = (uint64_t)v1;

}

void sub_10019CC98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BC0;
  qword_1002A7BC0 = (uint64_t)v1;

}

void sub_10019D3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10019D3D8(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 0.0));
  objc_msgSend(WeakRetained, "setFinishDate:", v1);

}

void sub_10019D718(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10019D734(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void (**v4)(void);
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint8_t buf[8];
  _BYTE v16[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "finishingBlock"));
    v4[2]();

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "completionHandlerDidRunCondition"));
    objc_msgSend(v5, "fulfill");

    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dependencies", 0));
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v12;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v12 != v9)
            objc_enumerationMutation(v6);
          objc_msgSend(v3, "removeDependency:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i));
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
      }
      while (v8);
    }

  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "completion handler called on deallocated operation instance", buf, 2u);
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

id sub_10019DA20(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isCancelled");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "setTimeoutCanOccur:", 0);
  return result;
}

BOOL sub_10019DBFC(id a1, id a2, unint64_t a3, BOOL *a4)
{
  return objc_msgSend(a2, "isFinished", a3, a4) ^ 1;
}

void sub_10019DE90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10019DEA4(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "timeoutCanOccur"))
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_onqueueTimeoutError"));
    objc_msgSend(WeakRetained, "setError:", v1);

    objc_msgSend(WeakRetained, "setTimeoutCanOccur:", 0);
    objc_msgSend(WeakRetained, "cancel");
  }

}

void sub_10019DF88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10019E3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_10019E54C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10019E56C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_10019EAEC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019EC6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019EF5C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019EF8C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019EFBC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019F114(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BD0;
  qword_1002A7BD0 = (uint64_t)v1;

}

void sub_10019F4B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

void sub_10019F4E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

void sub_10019F610(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

id sub_10019F8DC(uint64_t a1, uint64_t a2)
{
  if (a2)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  else
    return objc_msgSend(*(id *)(a1 + 32), "fetch:shouldRetry:allowEmptyData:useReversePush:completionHandler:", *(_QWORD *)(a1 + 40), 0, *(unsigned __int8 *)(a1 + 56), *(unsigned __int8 *)(a1 + 57), *(_QWORD *)(a1 + 48));
}

void sub_10019F910(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

void sub_10019FA38(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  TransparencyNetworkRequest *v21;
  id v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD v29[4];
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  __int16 v34;
  const __CFString *v35;
  void *v36;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v35 = CFSTR("sessionAuthIsSupported");
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "auth"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v11, "isSupported")));
  v36 = v12;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v36, &v35, 1));
  v14 = objc_msgSend(v13, "mutableCopy");

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("x-auth-status")));
  if (v15)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("x-auth-status")));
    objc_msgSend(v14, "setObject:forKeyedSubscript:", v16, CFSTR("transparencyResponseAuthStatus"));

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transparencyAnalytics"));
  objc_msgSend(v17, "logResultForEvent:hardFailure:result:withAttributes:", CFSTR("TransparencyAuthentication"), 0, v9, v14);

  if (objc_msgSend(*(id *)(a1 + 32), "needsRetry:", v9) && *(_BYTE *)(a1 + 56))
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "auth"));
    v20 = objc_msgSend(v19, "isSupported");

    if (v20)
    {
      v21 = -[TransparencyNetworkRequest initWithRequest:]([TransparencyNetworkRequest alloc], "initWithRequest:", *(_QWORD *)(a1 + 40));
      -[TransparencyNetworkRequest setAuthenticated:](v21, "setAuthenticated:", 1);
      v22 = objc_msgSend(*(id *)(a1 + 32), "needsReauthorization:metadata:", v9, v8);
      v23 = 0.0;
      if (objc_msgSend(*(id *)(a1 + 32), "needsTimeShift:metadata:", v9, v8))
      {
        +[TransparencyLogClient timeShift:](TransparencyLogClient, "timeShift:", v8);
        v23 = v24;
      }
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "auth"));
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472;
      v29[2] = sub_10019FD68;
      v29[3] = &unk_10024C878;
      v33 = *(id *)(a1 + 48);
      v30 = v7;
      v27 = v8;
      v28 = *(_QWORD *)(a1 + 32);
      v31 = v27;
      v32 = v28;
      v34 = *(_WORD *)(a1 + 57);
      -[TransparencyNetworkRequest createRequestForAuthentication:fetchAuthNow:timeShift:completionHandler:](v21, "createRequestForAuthentication:fetchAuthNow:timeShift:completionHandler:", v26, v22, v29, v23);

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "renewAccountTokenForFetch:allowEmptyData:useReversePush:completionHandler:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 57), *(unsigned __int8 *)(a1 + 58), *(_QWORD *)(a1 + 48));
    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_10019FD68(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = v5;
  if (!v7 || v5)
  {
    if (!v5)
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorInternal, -191, CFSTR("TransparencyRequest failed to produce URLRequest")));
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 48), "fetch:shouldRetry:allowEmptyData:useReversePush:completionHandler:", v7, 0, *(unsigned __int8 *)(a1 + 64), *(unsigned __int8 *)(a1 + 65), *(_QWORD *)(a1 + 56));
  }

}

void sub_10019FF18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!v5 || v6)
  {
    if (!v6)
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorInternal, -191, CFSTR("TransparencyRequest failed to produce URLRequest")));
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v8 = *(void **)(a1 + 32);
    v9 = objc_msgSend(*(id *)(a1 + 40), "allowEmptyData");
    v10 = objc_msgSend(*(id *)(a1 + 40), "useReversePush");
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1001A0038;
    v11[3] = &unk_10024C8C8;
    v12 = *(id *)(a1 + 40);
    v13 = *(id *)(a1 + 48);
    objc_msgSend(v8, "fetch:allowEmptyData:useReversePush:completionHandler:", v5, v9, v10, v11);

    v7 = v12;
  }

}

void sub_1001A0038(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  TransparencyResponse *v10;

  v7 = a4;
  v8 = a3;
  v9 = a2;
  v10 = -[TransparencyResponse initWithRequest:responseData:metadata:]([TransparencyResponse alloc], "initWithRequest:responseData:metadata:", *(_QWORD *)(a1 + 32), v9, v8);

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_1001A0268(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

void sub_1001A0298(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7BE0;
  qword_1002A7BE0 = (uint64_t)v1;

}

id sub_1001A05DC(uint64_t a1)
{
  unint64_t v2;
  double v3;

  objc_msgSend(*(id *)(a1 + 32), "setInitialDelay:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setCurrentDelay:", objc_msgSend(*(id *)(a1 + 32), "initialDelay"));
  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    v3 = (double)*(unint64_t *)(a1 + 48) / (double)v2;
  else
    v3 = 1.0;
  objc_msgSend(*(id *)(a1 + 32), "setBackoff:", v3);
  return _objc_msgSend(*(id *)(a1 + 32), "setMaximumDelay:", *(_QWORD *)(a1 + 48));
}

id sub_1001A08B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onqueueTrigger:maximumDelay:", *(_QWORD *)(a1 + 40), -1);
}

void sub_1001A097C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1001A0990(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLiveRequest:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "liveRequestReceived"));
  objc_msgSend(v2, "fulfill");

  if (*(_QWORD *)(a1 + 40) == -1)
    v3 = 0;
  else
    v3 = *(_QWORD *)(a1 + 40);
  objc_msgSend(WeakRetained, "_onqueueTrigger:maximumDelay:", v3);

}

void sub_1001A0CC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1001A0CD4(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLiveRequest:", 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "liveRequestReceived"));
  objc_msgSend(v1, "fulfill");

  objc_msgSend(WeakRetained, "_onqueueTrigger:maximumDelay:", 0, -1);
}

void sub_1001A10D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A1104(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_onqueueTimerTick");

}

void sub_1001A119C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  intptr_t v5;
  NSObject *v6;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
  if (v2)
  {
    v3 = (void *)v2;
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
    v5 = dispatch_source_testcancel(v4);

    if (!v5)
    {
      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
      dispatch_source_cancel(v6);

    }
  }
}

void sub_1001A16E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001A1864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1001A1974(id a1, id a2, unint64_t a3, BOOL *a4)
{
  return objc_msgSend(a2, "isFinished", a3, a4) ^ 1;
}

void sub_1001A1C68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1001A1C84(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dependencies", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(WeakRetained, "removeDependency:", *(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6));
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_1001A2010(id a1)
{
  if (+[TransparencySettings getBool:](TransparencySettings, "getBool:", kTransparencyFlagDisablePinning))byte_1002A7BE8 = 1;
}

void sub_1001A2784(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C00;
  qword_1002A7C00 = (uint64_t)v1;

}

void sub_1001A27B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C00;
  qword_1002A7C00 = (uint64_t)v1;

}

void sub_1001A27E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C00;
  qword_1002A7C00 = (uint64_t)v1;

}

void sub_1001A2AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A2AE0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001A2AF0(uint64_t a1)
{

}

void sub_1001A2AF8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  id v21;

  v7 = a2;
  v8 = a3;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyLogSession createErrorFromURLResonse:data:allowEmptyData:error:](TransparencyLogSession, "createErrorFromURLResonse:data:allowEmptyData:error:", v8, v7, *(unsigned __int8 *)(a1 + 56), a4));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callbackWorkloop"));
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1001A2C30;
  v17[3] = &unk_10024CA50;
  v18 = v9;
  v11 = *(id *)(a1 + 40);
  v20 = v8;
  v21 = v11;
  v19 = v7;
  v12 = v8;
  v13 = v7;
  v16 = v9;
  +[TransparencyLogSession dispatchToQueue:block:](TransparencyLogSession, "dispatchToQueue:block:", v10, v17);

  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v15 = *(void **)(v14 + 40);
  *(_QWORD *)(v14 + 40) = 0;

}

void sub_1001A2C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(_QWORD *)(a1 + 56);
  if (*(_QWORD *)(a1 + 32))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "metadata"));
    v3 = *(void (**)(uint64_t, uint64_t))(v1 + 16);
    v4 = v1;
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 40);
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "metadata"));
    v3 = *(void (**)(uint64_t, uint64_t))(v1 + 16);
    v4 = v1;
    v5 = v6;
  }
  v7 = (id)v2;
  v3(v4, v5);

}

void sub_1001A2CB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C00;
  qword_1002A7C00 = (uint64_t)v1;

}

void sub_1001A2E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A2E1C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1001A3118(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A3354(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  void *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  id v27;
  uint8_t buf[4];
  id v29;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("NetworkDownloadEvent"), v4));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("NetworkDownloadSize"), v6));

  objc_msgSend(v3, "setResponse:", *(_QWORD *)(a1 + 32));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));
  objc_msgSend(v3, "setServerHint:", v8);

  v9 = (char *)objc_msgSend(v3, "downloadType");
  if ((unint64_t)(v9 - 1) < 2)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contextStore"));
    v11 = *(_QWORD *)(a1 + 56);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "logClient"));
    objc_msgSend(v10, "verifyHeadInclusionDownload:application:logClient:", v11, v12, v13);
    goto LABEL_5;
  }
  if (v9 == (char *)3)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contextStore"));
    v14 = *(_QWORD *)(a1 + 56);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "logClient"));
    objc_msgSend(v10, "verifyHeadConsistencyDownload:application:logClient:", v14, v12, v13);
LABEL_5:

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "length")));
    objc_msgSend(v15, "logMetric:withName:", v16, v7);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
    objc_msgSend(v17, "logSuccessForEventNamed:", v5);

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataStore"));
    v27 = 0;
    v19 = objc_msgSend(v18, "persistWithError:", &v27);
    v20 = v27;

    if ((v19 & 1) == 0)
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataStore"));
      objc_msgSend(v21, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("handleDownloadRecord"), v20);

      if (qword_1002A7C08 != -1)
        dispatch_once(&qword_1002A7C08, &stru_10024CAF8);
      v22 = qword_1002A7C10;
      if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v29 = v20;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "failed to store results after successful download: %@", buf, 0xCu);
      }
    }
    goto LABEL_15;
  }
  if (qword_1002A7C08 != -1)
    dispatch_once(&qword_1002A7C08, &stru_10024CAD8);
  v23 = (void *)qword_1002A7C10;
  if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
  {
    v24 = v23;
    *(_DWORD *)buf = 134217984;
    v29 = objc_msgSend(v3, "downloadType");
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "record has unsupported downloadType: %lld", buf, 0xCu);

  }
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataStore"));
  objc_msgSend(v25, "deleteDownloadRecordById:error:", *(_QWORD *)(a1 + 56), 0);

  v20 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:description:](TransparencyError, "errorWithDomain:code:description:", kTransparencyErrorDatabase, -212, CFSTR("record has unsupported downloadType: %lld"), objc_msgSend(v3, "downloadType")));
  v26 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
  objc_msgSend(v26, "logResultForEvent:hardFailure:result:", v5, 1, v20);

LABEL_15:
}

void sub_1001A377C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A37AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A37DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A3ADC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A3B0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (objc_msgSend(*(id *)(a1 + 32), "successful"))
  {
    v2 = *(_QWORD *)(a1 + 48);
    v3 = *(_QWORD *)(a1 + 56);
    v4 = *(void **)(a1 + 40);
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
    objc_msgSend(v4, "handleDownloadRecord:downloadData:downloadMetadata:", v2, v3);
  }
  else
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(+[TransparencyLogSession createErrorFromURLResonse:data:allowEmptyData:error:](TransparencyLogSession, "createErrorFromURLResonse:data:allowEmptyData:error:", *(_QWORD *)(a1 + 32), 0, 1, 0));
    v6 = *(void **)(a1 + 40);
    v5 = *(_QWORD *)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 64);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadata"));
    objc_msgSend(v6, "handleDownloadRecordFailure:task:downloadMetadata:error:", v5, v7, v8, v9);

  }
}

void sub_1001A3BCC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A3EA8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  id v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  void *v27;
  NSObject *v28;
  id v29;
  id v30;
  uint8_t buf[4];
  id v32;
  __int16 v33;
  id v34;
  __int16 v35;
  uint64_t v36;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics logger](TransparencyAnalytics, "logger"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyAnalytics formatEventName:application:](TransparencyAnalytics, "formatEventName:application:", CFSTR("NetworkDownloadEvent"), v5));
  objc_msgSend(v4, "logResultForEvent:hardFailure:result:", v6, 0, *(_QWORD *)(a1 + 32));

  if (qword_1002A7C08 != -1)
    dispatch_once(&qword_1002A7C08, &stru_10024CBC8);
  v7 = qword_1002A7C10;
  if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
  {
    v9 = *(void **)(a1 + 40);
    v8 = *(void **)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    v32 = v9;
    v33 = 2114;
    v34 = v8;
    v35 = 2112;
    v36 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "download task %@ for downloadId %{public}@ failed: %@", buf, 0x20u);
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", kTransparencyResponseMetadataKeyServerHint));
  objc_msgSend(v3, "setServerHint:", v11);

  if ((char *)objc_msgSend(v3, "downloadType") - 1 > (char *)2)
  {
    if (qword_1002A7C08 != -1)
      dispatch_once(&qword_1002A7C08, &stru_10024CBE8);
    v17 = (void *)qword_1002A7C10;
    if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
    {
      v18 = v17;
      v19 = objc_msgSend(v3, "downloadType");
      *(_DWORD *)buf = 134217984;
      v32 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "record has unsupported downloadType: %lld", buf, 0xCu);

    }
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "dataStore"));
    v21 = *(_QWORD *)(a1 + 48);
    v30 = 0;
    objc_msgSend(v20, "deleteDownloadRecordById:error:", v21, &v30);
    v12 = v30;

    if (v12)
    {
      if (qword_1002A7C08 != -1)
        dispatch_once(&qword_1002A7C08, &stru_10024CC08);
      v22 = qword_1002A7C10;
      if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
      {
        v23 = *(void **)(a1 + 48);
        *(_DWORD *)buf = 138543618;
        v32 = v23;
        v33 = 2112;
        v34 = v12;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Failed deleting download record for downloadId %{public}@: %@", buf, 0x16u);
      }
    }
  }
  else
  {
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "contextStore"));
    v13 = *(_QWORD *)(a1 + 48);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
    v15 = *(_QWORD *)(a1 + 32);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "logClient"));
    objc_msgSend(v12, "failHeadDownload:application:failure:retry:logClient:", v13, v14, v15, 1, v16);

  }
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "dataStore"));
  v29 = 0;
  v25 = objc_msgSend(v24, "persistWithError:", &v29);
  v26 = v29;

  if ((v25 & 1) == 0)
  {
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "dataStore"));
    objc_msgSend(v27, "reportCoreDataPersistEventForLocation:underlyingError:", CFSTR("handleDownloadRecordFailure"), v26);

    if (qword_1002A7C08 != -1)
      dispatch_once(&qword_1002A7C08, &stru_10024CC28);
    v28 = qword_1002A7C10;
    if (os_log_type_enabled((os_log_t)qword_1002A7C10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v26;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "failed to store results after failed download: %@", buf, 0xCu);
    }
  }

}

void sub_1001A42B8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A42E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A4318(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A4348(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A4378(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A43A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C10;
  qword_1002A7C10 = (uint64_t)v1;

}

void sub_1001A454C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "metadata"));
  objc_msgSend(v2, "handleDownloadRecordFailure:task:downloadMetadata:error:", v3, v4, v5, *(_QWORD *)(a1 + 64));

}

void sub_1001A4BD0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A4F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A4F3C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001A4F4C(uint64_t a1)
{

}

void sub_1001A4F54(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unsigned int v20;
  __int128 v21;
  id v22;
  id obj;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t buf[4];
  uint64_t v29;
  _BYTE v30[128];

  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v25;
    *(_QWORD *)&v4 = 138412290;
    v21 = v4;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v25 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v7);
        v9 = *(void **)(a1 + 40);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "name", v21));
        LOBYTE(v9) = objc_msgSend(v9, "containsObject:", v10);

        if ((v9 & 1) == 0)
        {
          v11 = objc_alloc_init((Class)NSFetchRequest);
          objc_msgSend(v11, "setEntity:", v8);
          v12 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v11);
          objc_msgSend(v12, "setResultType:", 1);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
          v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
          obj = *(id *)(v14 + 40);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "executeRequest:error:", v12, &obj));
          objc_storeStrong((id *)(v14 + 40), obj);

          if (!v15)
          {
            if (qword_1002A7C18 != -1)
              dispatch_once(&qword_1002A7C18, &stru_10024CCD0);
            v16 = qword_1002A7C20;
            if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_ERROR))
            {
              v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
              *(_DWORD *)buf = v21;
              v29 = v17;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "clearState deleted nothing: %@", buf, 0xCu);
            }
          }

        }
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
    }
    while (v5);
  }

  v18 = *(void **)(a1 + 48);
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v22 = *(id *)(v19 + 40);
  v20 = objc_msgSend(v18, "persistWithError:", &v22);
  objc_storeStrong((id *)(v19 + 40), v22);
  if (v20)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
}

void sub_1001A51CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A53F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A5410(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unsigned int v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id obj;
  uint8_t buf[4];
  uint64_t v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", *(_QWORD *)(a1 + 40));
  v3 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v2);
  objc_msgSend(v3, "setResultType:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "context"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeRequest:error:", v3, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);

  if (!v6)
  {
    if (qword_1002A7C18 != -1)
      dispatch_once(&qword_1002A7C18, &stru_10024CCF0);
    v7 = qword_1002A7C20;
    if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_ERROR))
    {
      v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v20 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "garbageCollectEntityBatchDelete deleted nothing: %@", buf, 0xCu);
    }
  }
  v9 = *(void **)(a1 + 48);
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v17 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v9, "persistWithError:", &v17);
  objc_storeStrong((id *)(v10 + 40), v17);
  if (v11)
  {
    if (qword_1002A7C18 != -1)
      dispatch_once(&qword_1002A7C18, &stru_10024CD10);
    v12 = qword_1002A7C20;
    if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_ERROR))
    {
      v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138412290;
      v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "garbageCollectEntityBatchDelete failed to save: %@", buf, 0xCu);
    }
  }
  v14 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40)));
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = v14;

}

void sub_1001A5660(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A5690(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A56C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A5914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A5934(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unsigned __int8 v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  id obj;
  _BYTE v25[128];

  v3 = a2;
  while (1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(v4, "setPredicate:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v4, "setPropertiesToFetch:", &__NSArray0__struct);
    objc_msgSend(v4, "setFetchLimit:", 20);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    obj = *(id *)(v5 + 40);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, &obj));
    objc_storeStrong((id *)(v5 + 40), obj);
    if (!v6)
      break;
    v7 = objc_msgSend(v6, "count");
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v8 = v6;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v21;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(v3, "deleteObject:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v12));
          v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
      }
      while (v10);
    }

    v13 = *(void **)(a1 + 48);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v19 = *(id *)(v14 + 40);
    v15 = objc_msgSend(v13, "persistWithError:", &v19);
    objc_storeStrong((id *)(v14 + 40), v19);
    if ((v15 & 1) == 0)
      break;
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "logger"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v8, "count")));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("kt%@GCCount"), *(_QWORD *)(a1 + 32)));
    objc_msgSend(v16, "logMetric:withName:", v17, v18);

    if (v7 != (id)20)
      goto LABEL_14;
  }

LABEL_14:
}

void sub_1001A5B7C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A5D20(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A5D50(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  NSObject *v12;
  id v13;
  id v14;
  uint8_t buf[4];
  id v16;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CachedData fetchRequest](CachedData, "fetchRequest"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("key = %@ AND application = %@"), CFSTR("TapToRadarDate"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v4, "setPredicate:", v5);

  v14 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, &v14));
  v7 = v14;
  if (objc_msgSend(v6, "count"))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
    if (!v8)
      goto LABEL_11;
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("CachedData"), v3));
    objc_msgSend(v8, "setKey:", CFSTR("TapToRadarDate"));
    objc_msgSend(v8, "setApplication:", *(_QWORD *)(a1 + 32));
  }
  objc_msgSend(v8, "setData:", *(_QWORD *)(a1 + 40));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v8, "setUpdated:", v9);

  v13 = v7;
  v10 = objc_msgSend(v3, "save:", &v13);
  v11 = v13;

  if ((v10 & 1) == 0)
  {
    if (qword_1002A7C18 != -1)
      dispatch_once(&qword_1002A7C18, &stru_10024CDE0);
    v12 = qword_1002A7C20;
    if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "storeTTR: save %@", buf, 0xCu);
    }
  }
  v7 = v11;
LABEL_11:

}

void sub_1001A5F78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A60D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A60EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint8_t v16[8];
  id v17;

  v3 = *(_QWORD *)(a1 + 32);
  v17 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "executeFetchRequest:error:", v3, &v17));
  v5 = v17;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v7 = v6;
  if (v6 && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data")), v8, v8))
  {
    v10 = objc_opt_class(NSDate, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v12 = objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", v10, v11, 0));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  else
  {
    if (qword_1002A7C18 != -1)
      dispatch_once(&qword_1002A7C18, &stru_10024CE28);
    v15 = qword_1002A7C20;
    if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "getTapToRadarDate: no cached data", v16, 2u);
    }
  }

}

void sub_1001A624C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A643C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1001A6460(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_msgSend(v2, "logRequestMetricsForApplication:error:", v3, &obj);
  objc_storeStrong((id *)(v4 + 40), obj);
  if (!v5)
    goto LABEL_5;
  v6 = (void *)a1[4];
  v7 = a1[5];
  v8 = *(_QWORD *)(a1[6] + 8);
  v23 = *(id *)(v8 + 40);
  v9 = objc_msgSend(v6, "logSMTMetricsForApplication:error:", v7, &v23);
  objc_storeStrong((id *)(v8 + 40), v23);
  if (!v9)
    goto LABEL_5;
  v10 = (void *)a1[4];
  v11 = a1[5];
  v12 = *(_QWORD *)(a1[6] + 8);
  v22 = *(id *)(v12 + 40);
  v13 = objc_msgSend(v10, "logSTHMetricsForApplication:error:", v11, &v22);
  objc_storeStrong((id *)(v12 + 40), v22);
  if (!v13
    || (v14 = (void *)a1[4],
        v15 = a1[5],
        v16 = *(_QWORD *)(a1[6] + 8),
        v21 = *(id *)(v16 + 40),
        v17 = objc_msgSend(v14, "onMocLogVerificationMetricsForApplication:error:", v15, &v21),
        objc_storeStrong((id *)(v16 + 40), v21),
        (v17 & 1) == 0))
  {
LABEL_5:
    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 0;
  }
  v18 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40)));
  v19 = *(_QWORD *)(a1[6] + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v18;

}

void sub_1001A6A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1001A6A28(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id obj;

  v2 = (void *)a1[4];
  v3 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "requestCount:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v4));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v5, CFSTR("KTRequest"));

  v6 = (void *)a1[4];
  v7 = *(_QWORD *)(a1[6] + 8);
  v33 = *(id *)(v7 + 40);
  v8 = objc_msgSend(v6, "requestFailureCount:", &v33);
  objc_storeStrong((id *)(v7 + 40), v33);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v8));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v9, CFSTR("KTRequestFailure"));

  v10 = (void *)a1[4];
  v11 = *(_QWORD *)(a1[6] + 8);
  v32 = *(id *)(v11 + 40);
  v12 = objc_msgSend(v10, "signedMutationTimestampCount:", &v32);
  objc_storeStrong((id *)(v11 + 40), v32);
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v12));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v13, CFSTR("KTMutation"));

  v14 = (void *)a1[4];
  v15 = *(_QWORD *)(a1[6] + 8);
  v31 = *(id *)(v15 + 40);
  v16 = objc_msgSend(v14, "signedMutationTimestampsFailureCount:", &v31);
  objc_storeStrong((id *)(v15 + 40), v31);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v16));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v17, CFSTR("KTSMTFailure"));

  v18 = (void *)a1[4];
  v19 = *(_QWORD *)(a1[6] + 8);
  v30 = *(id *)(v19 + 40);
  v20 = objc_msgSend(v18, "treeHeadCount:", &v30);
  objc_storeStrong((id *)(v19 + 40), v30);
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v20));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v21, CFSTR("KTTreeHead"));

  v22 = (void *)a1[4];
  v23 = *(_QWORD *)(a1[6] + 8);
  v29 = *(id *)(v23 + 40);
  v24 = objc_msgSend(v22, "signedTreeHeadFailureCount:", &v29);
  objc_storeStrong((id *)(v23 + 40), v29);
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v24));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setObject:forKeyedSubscript:", v25, CFSTR("KTSTHFailure"));

  v26 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40)));
  v27 = *(_QWORD *)(a1[6] + 8);
  v28 = *(void **)(v27 + 40);
  *(_QWORD *)(v27 + 40) = v26;

}

void sub_1001A6EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1001A6F18(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  char v26;
  id v27;
  id obj;
  uint8_t buf[4];
  id v30;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  obj = *(id *)(v3 + 40);
  v4 = objc_msgSend(v2, "persistWithError:", &obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", *(_QWORD *)(a1 + 40)));
    objc_msgSend(v5, "setReturnsDistinctResults:", 1);
    objc_msgSend(v5, "setPredicate:", *(_QWORD *)(a1 + 48));
    objc_msgSend(v5, "setFetchBatchSize:", 20);
    if (*(_BYTE *)(a1 + 80))
      objc_msgSend(v5, "setFetchLimit:", 100);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v27 = *(id *)(v7 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v5, &v27));
    objc_storeStrong((id *)(v7 + 40), v27);

    v26 = 0;
    v9 = *(_QWORD *)(a1 + 56);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v25 = *(id *)(v10 + 40);
    (*(void (**)(void))(v9 + 16))();
    objc_storeStrong((id *)(v10 + 40), v25);
    if (*(_BYTE *)(a1 + 80))
    {
      if (objc_msgSend(v8, "count") == (id)100)
      {
        objc_msgSend(v5, "setFetchLimit:", 0);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
        v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v24 = *(id *)(v12 + 40);
        v13 = objc_msgSend(v11, "countForFetchRequest:error:", v5, &v24);
        objc_storeStrong((id *)(v12 + 40), v24);

        if ((unint64_t)v13 >= 0x65)
        {
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "logger"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v13));
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("kt%@MaxBatchesExceeded"), *(_QWORD *)(a1 + 40)));
          objc_msgSend(v14, "logMetric:withName:", v15, v16);

          if (qword_1002A7C18 != -1)
            dispatch_once(&qword_1002A7C18, &stru_10024CEC8);
          v17 = qword_1002A7C20;
          if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 134217984;
            v30 = v13;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "performOnBatchesOfEntity hit max number of batches: %llu total entries", buf, 0xCu);
          }
        }
      }
    }

  }
  v18 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40)));
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v18;

  v21 = objc_claimAutoreleasedReturnValue(+[SecXPCHelper cleanseErrorForXPC:](SecXPCHelper, "cleanseErrorForXPC:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)));
  v22 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v23 = *(void **)(v22 + 40);
  *(_QWORD *)(v22 + 40) = v21;

}

void sub_1001A7224(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A7254(_QWORD *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;

  if (qword_1002A7C18 != -1)
    dispatch_once(&qword_1002A7C18, &stru_10024CF10);
  v2 = qword_1002A7C20;
  if (os_log_type_enabled((os_log_t)qword_1002A7C20, OS_LOG_TYPE_ERROR))
  {
    v3 = a1[4];
    v4 = a1[5];
    v5 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
    v6 = 138412802;
    v7 = v3;
    v8 = 2112;
    v9 = v4;
    v10 = 2112;
    v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "performOnBatchesOfEntity unable to read entity %@ for predicate %@: %@", (uint8_t *)&v6, 0x20u);
  }
}

void sub_1001A733C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C20;
  qword_1002A7C20 = (uint64_t)v1;

}

void sub_1001A7414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001A749C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1001A7520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A75E0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_1001A7668(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001A7760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A7778(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "releaseContext");
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1001A7920(void *a1, const char *a2)
{
  NSString *v3;
  void *v4;
  id v5;
  int v6;
  NSString *v7;
  void *v8;
  id v9;

  v9 = a1;
  if ((objc_opt_respondsToSelector(v9, a2) & 1) == 0)
  {
    v3 = NSStringFromSelector(a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Selector is not available: %@"), v4);

  }
  v5 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "methodSignatureForSelector:", a2)));
  v6 = strcmp((const char *)objc_msgSend(v5, "methodReturnType"), "q");

  if (v6)
  {
    v7 = NSStringFromSelector(a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Selector doesn't return an int64_t: %@"), v8);

  }
}

uint64_t sub_1001A7A14(void *a1, const char *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSString *v7;
  void *v8;
  uint64_t v10;

  v3 = a1;
  sub_1001A7920(v3, a2);
  v10 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "methodSignatureForSelector:", a2));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSInvocation invocationWithMethodSignature:](NSInvocation, "invocationWithMethodSignature:", v4));

  objc_msgSend(v5, "setSelector:", a2);
  objc_msgSend(v5, "setTarget:", v3);

  objc_msgSend(v5, "invoke");
  objc_msgSend(v5, "getReturnValue:", &v10);
  v6 = v10;
  if (v10 < 0)
  {
    v7 = NSStringFromSelector(a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Negative value from selector: %@"), v8);

    v6 = v10;
  }

  return v6;
}

uint64_t sub_1001A7B0C(void *a1, const char *a2, unint64_t a3)
{
  id v5;
  NSString *v6;
  void *v7;
  void *v8;
  NSString *v9;
  void *v10;

  v5 = a1;
  sub_1001A7920(v5, a2);
  if (a3 >= 0x7FFFFFFFFFFFFFFFLL)
  {
    v6 = NSStringFromSelector(a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("Value too large from selector: %@"), v7);

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", a3));
  v9 = NSStringFromSelector(a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  objc_msgSend(v5, "setValue:forKey:", v8, v10);

  return 1;
}

id sub_1001A8E34(TransparencyNetworkRequest *self, SEL a2, id a3, double a4, id a5, id *a6)
{
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  uint64_t v15;
  void *v16;
  void *v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v8 = a5;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](NSMutableURLRequest, "requestWithURL:", a3));
  objc_msgSend(v9, "setHTTPMethod:", CFSTR("GET"));
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v10 = v8;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v13)
          objc_enumerationMutation(v10);
        v15 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v15, (_QWORD)v19));
        objc_msgSend(v9, "setValue:forHTTPHeaderField:", v16, v15);

      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v12);
  }

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencySettings automatedDeviceGroup](TransparencySettings, "automatedDeviceGroup"));
  if (v17)
    objc_msgSend(v9, "setValue:forHTTPHeaderField:", v17, off_1002A42D8);
  if (a4 != 0.0)
    objc_msgSend(v9, "setTimeoutInterval:", a4);

  return v9;
}

void sub_1001A941C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A9444(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "triggerRemoteBAACertFetch");

}

void sub_1001A956C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A9584(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001A9594(uint64_t a1)
{

}

void sub_1001A959C(uint64_t a1, const void *a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  void *v9;
  KTBAAKey *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a3;
  v7 = a4;
  if (v7)
  {
    v8 = v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[TransparencyError errorWithDomain:code:underlyingError:description:](TransparencyError, "errorWithDomain:code:underlyingError:description:", kTransparencyErrorBAACertFetch, -393, v7, CFSTR("Error fetching BAA cert")));

  }
  else
  {
    v9 = 0;
  }
  v10 = -[KTBAAKey initWithKey:certificates:failure:]([KTBAAKey alloc], "initWithKey:certificates:failure:", a2, v13, v9);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = 0;

  if (a2)
    CFRelease(a2);

}

void sub_1001A9A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001A9A60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C30;
  qword_1002A7C30 = (uint64_t)v1;

}

id sub_1001A9A90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "fetchCacheOnly:completion:", 1, *(_QWORD *)(a1 + 40));
}

void sub_1001A9AA0(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  id v5;

  v5 = a2;
  if (!*(_BYTE *)(a1 + 48))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "issuanceGroup"));
    objc_sync_enter(v3);
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "issuanceGroup"));
    dispatch_group_leave(v4);

    objc_msgSend(*(id *)(a1 + 32), "setOutstandingRemoteFetchSignal:", 0);
    objc_sync_exit(v3);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1001A9B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001A9BA0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));

  if (v4)
  {
    if (qword_1002A7C28 != -1)
      dispatch_once(&qword_1002A7C28, &stru_10024CFF0);
    v5 = (void *)qword_1002A7C30;
    if (os_log_type_enabled((os_log_t)qword_1002A7C30, OS_LOG_TYPE_ERROR))
    {
      v6 = v5;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
      v9 = 138543362;
      v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error fetching BAA cert, starting exponential backoff to request a new cert. %{public}@", (uint8_t *)&v9, 0xCu);

    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "BAACertFetcher"));
    objc_msgSend(v8, "trigger");

  }
}

void sub_1001A9CC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C30;
  qword_1002A7C30 = (uint64_t)v1;

}

void sub_1001A9D80(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));

  if (v4)
  {
    if (qword_1002A7C28 != -1)
      dispatch_once(&qword_1002A7C28, &stru_10024D038);
    v5 = (void *)qword_1002A7C30;
    if (os_log_type_enabled((os_log_t)qword_1002A7C30, OS_LOG_TYPE_ERROR))
    {
      v6 = v5;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "error"));
      v9 = 138412290;
      v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error fetching BAA cert, starting exponential backoff to request a new cert. %@", (uint8_t *)&v9, 0xCu);

    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "BAACertFetcher"));
    objc_msgSend(v8, "trigger");

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1001A9EB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C30;
  qword_1002A7C30 = (uint64_t)v1;

}

void sub_1001AA2F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C40;
  qword_1002A7C40 = (uint64_t)v1;

}

void sub_1001AAE48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AAF64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C50;
  qword_1002A7C50 = (uint64_t)v1;

}

void sub_1001AB09C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C50;
  qword_1002A7C50 = (uint64_t)v1;

}

void sub_1001AB200(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Transparency", "default");
  v2 = (void *)qword_1002A7C50;
  qword_1002A7C50 = (uint64_t)v1;

}

void sub_1001AB380(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AB39C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "serialize"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_1001ABF0C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v2 = objc_alloc_init((Class)NSMutableDictionary);
  v18 = a1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateInit"));
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 0));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 1));
        v12 = objc_opt_class(NSString, v11);
        if ((objc_opt_isKindOfClass(v9, v12) & 1) == 0)
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(v18 + 40), *(_QWORD *)(v18 + 32), CFSTR("KTStates.m"), 175, CFSTR("stateName should be string"));

        }
        v14 = objc_opt_class(NSNumber, v13);
        if ((objc_opt_isKindOfClass(v10, v14) & 1) == 0)
        {
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(v18 + 40), *(_QWORD *)(v18 + 32), CFSTR("KTStates.m"), 176, CFSTR("stateNum should be number"));

        }
        objc_msgSend(v2, "setObject:forKeyedSubscript:", v10, v9);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v5);
  }
  v17 = (void *)qword_1002A7C58;
  qword_1002A7C58 = (uint64_t)v2;

}

void sub_1001AC194(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v2 = objc_alloc_init((Class)NSMutableDictionary);
  v18 = a1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateInit"));
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 0));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 1));
        v12 = objc_opt_class(NSString, v11);
        if ((objc_opt_isKindOfClass(v9, v12) & 1) == 0)
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(v18 + 40), *(_QWORD *)(v18 + 32), CFSTR("KTStates.m"), 194, CFSTR("stateName should be string"));

        }
        v14 = objc_opt_class(NSNumber, v13);
        if ((objc_opt_isKindOfClass(v10, v14) & 1) == 0)
        {
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
          objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", *(_QWORD *)(v18 + 40), *(_QWORD *)(v18 + 32), CFSTR("KTStates.m"), 195, CFSTR("stateNum should be number"));

        }
        objc_msgSend(v2, "setObject:forKeyedSubscript:", v9, v10);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v5);
  }
  v17 = (void *)qword_1002A7C68;
  qword_1002A7C68 = (uint64_t)v2;

}

void sub_1001AC3E8(id a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  objc_msgSend(v1, "addObject:", CFSTR("Unlocked"));
  objc_msgSend(v1, "addObject:", CFSTR("AccountChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("CKAccountChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("RepairIDSFlag"));
  objc_msgSend(v1, "addObject:", CFSTR("ConfigBagFetch"));
  objc_msgSend(v1, "addObject:", CFSTR("ManateeViewChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("FetchIDMS"));
  objc_msgSend(v1, "addObject:", CFSTR("ValidateSelf"));
  objc_msgSend(v1, "addObject:", CFSTR("CheckAccountSignatures"));
  objc_msgSend(v1, "addObject:", CFSTR("FetchSelf"));
  objc_msgSend(v1, "addObject:", CFSTR("FetchPublicKeys"));
  objc_msgSend(v1, "addObject:", CFSTR("CheckIDSRegistration"));
  objc_msgSend(v1, "addObject:", CFSTR("ValidateSelfOptIn"));
  objc_msgSend(v1, "addObject:", CFSTR("ChangeOptInState"));
  objc_msgSend(v1, "addObject:", CFSTR("EnsureIdentity"));
  objc_msgSend(v1, "addObject:", CFSTR("CloudKitOutgoing"));
  objc_msgSend(v1, "addObject:", CFSTR("CloudKitIncoming"));
  objc_msgSend(v1, "addObject:", CFSTR("CloudKitZoneRecreate"));
  objc_msgSend(v1, "addObject:", CFSTR("OctagonTrustChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("CheckKTAccountKey"));
  objc_msgSend(v1, "addObject:", CFSTR("StatusUpdate"));
  objc_msgSend(v1, "addObject:", CFSTR("CheckKTAccountKeyChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("IDSStatusChanged"));
  objc_msgSend(v1, "addObject:", CFSTR("CheckServerOptIn"));
  v2 = (void *)qword_1002A7C78;
  qword_1002A7C78 = (uint64_t)v1;

}

uint64_t sub_1001ACAD0()
{
  char *v0;
  uint64_t v1;

  v0 = dlerror();
  v1 = abort_report_np("%s", v0);
  return sub_1001ACAF0(v1);
}

uint64_t sub_1001ACAF0()
{
  uint64_t v0;

  v0 = abort_report_np("Unable to find class %s", "FLFollowUpController");
  return sub_1001ACB14(v0);
}

uint64_t sub_1001ACB14()
{
  uint64_t v0;

  v0 = abort_report_np("Unable to find class %s", "FLFollowUpAction");
  return sub_1001ACB38(v0);
}

uint64_t sub_1001ACB38()
{
  uint64_t v0;

  v0 = abort_report_np("Unable to find class %s", "FLFollowUpNotification");
  return sub_1001ACB5C(v0);
}

uint64_t sub_1001ACB5C()
{
  uint64_t v0;

  v0 = abort_report_np("Unable to find class %s", "FLFollowUpItem");
  return sub_1001ACB80(v0);
}

void sub_1001ACB80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "import request failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACBE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "export request failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACC40()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100033718();
  sub_1000336C0((void *)&_mh_execute_header, v0, v1, "cloudContainer not enabled failed", v2, v3, v4, v5, v6);
  sub_100033710();
}

void sub_1001ACC6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "initializeCloudKitSchemaWithOptions failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACCCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "reset request failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACD2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100033718();
  sub_1000336C0((void *)&_mh_execute_header, v0, v1, "idsDelegate missing", v2, v3, v4, v5, v6);
  sub_100033710();
}

void sub_1001ACD58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "updateContact fetch error: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACDB8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "updateContact deleteStaticKey failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACE18()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000336D8();
  sub_1000336B0((void *)&_mh_execute_header, v0, v1, "updateContact storeStaticKey failed: %@", v2, v3, v4, v5, v6);
  sub_1000336D0();
}

void sub_1001ACE78()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000336F8();
  sub_1000336E4((void *)&_mh_execute_header, v0, v1, "deleteStaticKeyByContactIdentifier %@ failed: %@");
  sub_1000336D0();
}

void sub_1001ACED8()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000336F8();
  sub_1000336E4((void *)&_mh_execute_header, v0, v1, "deleteStaticKeyByContactExternalURI %@ failed: %@");
  sub_1000336D0();
}

id objc_msgSend_AllKTFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "AllKTFlags");
}

id objc_msgSend_BAACertFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BAACertFetcher");
}

id objc_msgSend_HTTPBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HTTPBody");
}

id objc_msgSend_HTTPMethod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HTTPMethod");
}

id objc_msgSend_ISOCountryCodes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCodes");
}

id objc_msgSend_ITUCountryCodeForISOCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ITUCountryCodeForISOCountryCode:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_KTStateMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "KTStateMap");
}

id objc_msgSend_URIWithUnprefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithUnprefixedURI:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLsForDirectory:inDomains:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend___verifiedLogHeads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__verifiedLogHeads");
}

id objc_msgSend__applicationKeyStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationKeyStores");
}

id objc_msgSend__contexts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contexts");
}

id objc_msgSend__enableStrictSecureDecodingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableStrictSecureDecodingMode");
}

id objc_msgSend__events(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_events");
}

id objc_msgSend__localizedKTStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedKTStringForKey:");
}

id objc_msgSend__onQueueClearDeviceSignatureSignatures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueueClearDeviceSignatureSignatures");
}

id objc_msgSend__onQueueRunReachabilityDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueueRunReachabilityDependency");
}

id objc_msgSend__onqueueCancelPendingFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueCancelPendingFlag:");
}

id objc_msgSend__onqueueContains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueContains:");
}

id objc_msgSend__onqueueCreateNewCKFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueCreateNewCKFetch");
}

id objc_msgSend__onqueueCreateNewServerOptInFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueCreateNewServerOptInFetch");
}

id objc_msgSend__onqueueDeliverCloudKitStateChanges_dispatchGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueDeliverCloudKitStateChanges:dispatchGroup:");
}

id objc_msgSend__onqueueDeliverCurrentCloudKitState_listenerQueue_oldStatus_group_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueDeliverCurrentCloudKitState:listenerQueue:oldStatus:group:");
}

id objc_msgSend__onqueueHandleFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueHandleFlag:");
}

id objc_msgSend__onqueueHandlePendingFlagLater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueHandlePendingFlagLater:");
}

id objc_msgSend__onqueueNextStateMachineTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueNextStateMachineTransition");
}

id objc_msgSend__onqueueNextStateMachineTransition_flags_pendingFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueNextStateMachineTransition:flags:pendingFlags:");
}

id objc_msgSend__onqueuePerformTimeoutWithUnderlyingError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueuePerformTimeoutWithUnderlyingError");
}

id objc_msgSend__onqueuePerformTimeoutWithUnderlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueuePerformTimeoutWithUnderlyingError:");
}

id objc_msgSend__onqueuePokeStateMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueuePokeStateMachine");
}

id objc_msgSend__onqueueRecheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueRecheck");
}

id objc_msgSend__onqueueRecheckConditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueRecheckConditions");
}

id objc_msgSend__onqueueRemoveFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueRemoveFlag:");
}

id objc_msgSend__onqueueSendAnyPendingFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueSendAnyPendingFlags");
}

id objc_msgSend__onqueueSetFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueSetFlag:");
}

id objc_msgSend__onqueueSetNetworkReachability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueSetNetworkReachability:");
}

id objc_msgSend__onqueueStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueStart");
}

id objc_msgSend__onqueueStartNextStateMachineOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueStartNextStateMachineOperation:");
}

id objc_msgSend__onqueueTimeoutError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueTimeoutError");
}

id objc_msgSend__onqueueTimerTick(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueTimerTick");
}

id objc_msgSend__onqueueTrigger_maximumDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueTrigger:maximumDelay:");
}

id objc_msgSend__onqueueUpdateAccountState_deliveredSemaphore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueUpdateAccountState:deliveredSemaphore:");
}

id objc_msgSend__onqueueUpdateAccountState_dispatchGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onqueueUpdateAccountState:dispatchGroup:");
}

id objc_msgSend__pcsIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pcsIdentity");
}

id objc_msgSend__pcsIdentityCachedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pcsIdentityCachedTime");
}

id objc_msgSend__serviceTypeForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceTypeForName:");
}

id objc_msgSend__setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEnabledTopics:");
}

id objc_msgSend__setFileNameLocalizationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFileNameLocalizationEnabled:");
}

id objc_msgSend__setPrivacyProxyFailClosed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPrivacyProxyFailClosed:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__waitForIDSRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitForIDSRegistration:");
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_appleAccountsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_appleAccountsWithError:");
}

id objc_msgSend_aa_errorWithCode_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_errorWithCode:underlyingError:");
}

id objc_msgSend_aa_isAccountClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_isAccountClass:");
}

id objc_msgSend_aa_personID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_personID");
}

id objc_msgSend_aa_primaryEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryEmail");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteURL");
}

id objc_msgSend_accountChanged_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountChanged:to:");
}

id objc_msgSend_accountController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountController");
}

id objc_msgSend_accountEverOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountEverOptedIn:");
}

id objc_msgSend_accountFirstSeenDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountFirstSeenDate");
}

id objc_msgSend_accountForAccountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountForAccountKey:");
}

id objc_msgSend_accountForAccountKeyHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountForAccountKeyHash:");
}

id objc_msgSend_accountInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountInfoWithCompletionHandler:");
}

id objc_msgSend_accountKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountKey");
}

id objc_msgSend_accountKeyHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountKeyHash");
}

id objc_msgSend_accountKeyServer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountKeyServer");
}

id objc_msgSend_accountKeyService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountKeyService");
}

id objc_msgSend_accountKeyService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountKeyService:");
}

id objc_msgSend_accountLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountLevel:");
}

id objc_msgSend_accountLevelErrorCodeForLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountLevelErrorCodeForLevel:");
}

id objc_msgSend_accountMetricID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountMetricID");
}

id objc_msgSend_accountMismatch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountMismatch");
}

id objc_msgSend_accountOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountOperations");
}

id objc_msgSend_accountOptInHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountOptInHistory:");
}

id objc_msgSend_accountOptInRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountOptInRecord:");
}

id objc_msgSend_accountOptInState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountOptInState:");
}

id objc_msgSend_accountOverrideInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountOverrideInfo");
}

id objc_msgSend_accountRecentlyOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountRecentlyOptedIn:");
}

id objc_msgSend_accountStateHolder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountStateHolder");
}

id objc_msgSend_accountStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountStatus");
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountType");
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accounts");
}

id objc_msgSend_accountsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsArray");
}

id objc_msgSend_accountsdRetryTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsdRetryTimeout");
}

id objc_msgSend_actionWithLabel_url_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithLabel:url:");
}

id objc_msgSend_active(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "active");
}

id objc_msgSend_active_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "active:");
}

id objc_msgSend_addAccountAuthentication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAccountAuthentication:error:");
}

id objc_msgSend_addAccountHealableError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAccountHealableError:");
}

id objc_msgSend_addAccountsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAccountsObject:");
}

id objc_msgSend_addApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addApplication:");
}

id objc_msgSend_addApplicationPrefixForIdentifier_uri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addApplicationPrefixForIdentifier:uri:");
}

id objc_msgSend_addClientDatasObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClientDatasObject:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addDevice_clientData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDevice:clientData:error:");
}

id objc_msgSend_addDevice_registationData_app_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDevice:registationData:app:");
}

id objc_msgSend_addDeviceAuthentication_signature_timestamp_certs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDeviceAuthentication:signature:timestamp:certs:");
}

id objc_msgSend_addDeviceHealableError_deviceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDeviceHealableError:deviceId:");
}

id objc_msgSend_addDevicesObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDevicesObject:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addErrorToBackgroundOp_smDataStore_failureDataString_type_serverHint_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addErrorToBackgroundOp:smDataStore:failureDataString:type:serverHint:failure:");
}

id objc_msgSend_addEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvent:");
}

id objc_msgSend_addExecutionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExecutionBlock:");
}

id objc_msgSend_addExtension_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtension:value:");
}

id objc_msgSend_addExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtensions:");
}

id objc_msgSend_addFailures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFailures:");
}

id objc_msgSend_addField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addField:");
}

id objc_msgSend_addFixed32_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFixed32:");
}

id objc_msgSend_addFixed64_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFixed64:");
}

id objc_msgSend_addGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGroup:");
}

id objc_msgSend_addHealableState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHealableState:");
}

id objc_msgSend_addLengthDelimited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLengthDelimited:");
}

id objc_msgSend_addMultiSamplerForName_withTimeInterval_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMultiSamplerForName:withTimeInterval:block:");
}

id objc_msgSend_addNFSReporting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNFSReporting:");
}

id objc_msgSend_addNullableDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNullableDependency:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_selector_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOptInStateWithURI_smtTimestamp_application_state_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOptInStateWithURI:smtTimestamp:application:state:error:");
}

id objc_msgSend_addRawEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRawEntriesFromDictionary:");
}

id objc_msgSend_addRawValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRawValue:");
}

id objc_msgSend_addRawValues_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRawValues:count:");
}

id objc_msgSend_addRawValuesFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRawValuesFromArray:");
}

id objc_msgSend_addResult_failure_toLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addResult:failure:toLoggableDatas:");
}

id objc_msgSend_addSuccessDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuccessDependency:");
}

id objc_msgSend_addTrustedCertificate_trustedKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTrustedCertificate:trustedKeys:error:");
}

id objc_msgSend_addUnknownMapEntry_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUnknownMapEntry:value:");
}

id objc_msgSend_addValidateRequest_dataStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValidateRequest:dataStore:error:");
}

id objc_msgSend_addValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValue:");
}

id objc_msgSend_addValues_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValues:count:");
}

id objc_msgSend_addValuesFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValuesFromArray:");
}

id objc_msgSend_addVarint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVarint:");
}

id objc_msgSend_addWithNamed_watcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addWithNamed:watcher:");
}

id objc_msgSend_addedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedDate");
}

id objc_msgSend_addedMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedMs");
}

id objc_msgSend_additionalHeaders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalHeaders");
}

id objc_msgSend_afterFirstUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterFirstUnlock");
}

id objc_msgSend_afterOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterOperation");
}

id objc_msgSend_algorithm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "algorithm");
}

id objc_msgSend_allDependentsSuccessful(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allDependentsSuccessful");
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allHTTPHeaderFields");
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allHeaderFields");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allSuccessful_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSuccessful:");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_alloc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alloc");
}

id objc_msgSend_allocDescriptorForClass_messageName_fileDescription_fields_fieldCount_storageSize_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocDescriptorForClass:messageName:fileDescription:fields:fieldCount:storageSize:flags:");
}

id objc_msgSend_allocDescriptorForClass_rootClass_file_fields_fieldCount_storageSize_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocDescriptorForClass:rootClass:file:fields:fieldCount:storageSize:flags:");
}

id objc_msgSend_allocDescriptorForName_valueNames_values_count_enumVerifier_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:");
}

id objc_msgSend_allocDescriptorForName_valueNames_values_count_enumVerifier_flags_extraTextFormatInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocDescriptorForName:valueNames:values:count:enumVerifier:flags:extraTextFormatInfo:");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowEmptyData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowEmptyData");
}

id objc_msgSend_allowOldKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowOldKeys");
}

id objc_msgSend_allowPendingFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowPendingFlags");
}

id objc_msgSend_allowableFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowableFlags");
}

id objc_msgSend_allowableStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowableStates");
}

id objc_msgSend_allowsInternalSecurityPolicies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsInternalSecurityPolicies");
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "altDSID");
}

id objc_msgSend_altDSIDForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "altDSIDForAccount:");
}

id objc_msgSend_alternateWireType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alternateWireType");
}

id objc_msgSend_analyticsApplications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsApplications");
}

id objc_msgSend_analyticsErrorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsErrorData:");
}

id objc_msgSend_analyticsForDecodeFailure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForDecodeFailure:error:");
}

id objc_msgSend_analyticsForParseFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForParseFailure:");
}

id objc_msgSend_analyticsForPredateLogBeginningMs_expectedLogBeginningMS_sth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForPredateLogBeginningMs:expectedLogBeginningMS:sth:");
}

id objc_msgSend_analyticsForResponse_type_uri_result_ktCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForResponse:type:uri:result:ktCapable:");
}

id objc_msgSend_analyticsForTooNewLogBeginningMs_expectedLogBeginningMS_sth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForTooNewLogBeginningMs:expectedLogBeginningMS:sth:");
}

id objc_msgSend_analyticsForType_uri_accountKey_serverLoggableDatas_syncedLoggableDatas_transparentData_responseTime_result_failure_responseMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForType:uri:accountKey:serverLoggableDatas:syncedLoggableDatas:transparentData:responseTime:result:failure:responseMetadata:");
}

id objc_msgSend_analyticsForUnsupportedProtocol_expected_sth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsForUnsupportedProtocol:expected:sth:");
}

id objc_msgSend_analyticsLogger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsLogger");
}

id objc_msgSend_analyticsSelfFlagNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsSelfFlagNames");
}

id objc_msgSend_analyticsSuccessNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsSuccessNames");
}

id objc_msgSend_anyStoreExpired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyStoreExpired");
}

id objc_msgSend_appLeafsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appLeafsArray");
}

id objc_msgSend_appLeafsArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appLeafsArray_Count");
}

id objc_msgSend_appSmtKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appSmtKeyStore");
}

id objc_msgSend_appSthKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appSthKeyStore");
}

id objc_msgSend_appVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appVersion");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "application");
}

id objc_msgSend_applicationID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationID");
}

id objc_msgSend_applicationId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationId");
}

id objc_msgSend_applicationIdentifierForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationIdentifierForValue:");
}

id objc_msgSend_applicationKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationKeyStore");
}

id objc_msgSend_applicationKeyStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationKeyStores");
}

id objc_msgSend_applicationPrefixForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationPrefixForIdentifier:");
}

id objc_msgSend_applicationPublicKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationPublicKeyStore:");
}

id objc_msgSend_applicationToService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationToService:");
}

id objc_msgSend_applicationValueForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationValueForIdentifier:");
}

id objc_msgSend_applicationVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationVersion");
}

id objc_msgSend_applications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applications");
}

id objc_msgSend_applyPeerOverrides_peer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyPeerOverrides:peer:");
}

id objc_msgSend_apps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "apps");
}

id objc_msgSend_apsConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "apsConnection");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_areKeysAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areKeysAvailable:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_asPathStep(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asPathStep");
}

id objc_msgSend_atEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "atEnvironment");
}

id objc_msgSend_auditorReportForKTRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditorReportForKTRequest:");
}

id objc_msgSend_auditorReportForKTSMT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditorReportForKTSMT:");
}

id objc_msgSend_auditorReportForSTH_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditorReportForSTH:");
}

id objc_msgSend_auditorReportsForFailedEvents_dataStore_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditorReportsForFailedEvents:dataStore:completionBlock:");
}

id objc_msgSend_auth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auth");
}

id objc_msgSend_authKitAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authKitAccountWithAltDSID:");
}

id objc_msgSend_authToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authToken:");
}

id objc_msgSend_authenticated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticated");
}

id objc_msgSend_automatedDeviceGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "automatedDeviceGroup");
}

id objc_msgSend_baaKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baaKey");
}

id objc_msgSend_backgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundContext");
}

id objc_msgSend_backgroundFollowupDelayPeriod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundFollowupDelayPeriod");
}

id objc_msgSend_backgroundFollowupFailureCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundFollowupFailureCount");
}

id objc_msgSend_backgroundNetworkTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundNetworkTimeout");
}

id objc_msgSend_backgroundOpId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundOpId");
}

id objc_msgSend_backgroundSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundSession");
}

id objc_msgSend_backgroundSessionConfigurationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundSessionConfigurationWithIdentifier:");
}

id objc_msgSend_backoff(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backoff");
}

id objc_msgSend_bag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bag");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_batchQueryMaxURIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchQueryMaxURIs");
}

id objc_msgSend_batchQueryURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchQueryURI");
}

id objc_msgSend_batchUpdateRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchUpdateRequestWithEntityName:");
}

id objc_msgSend_bestVerificationResultToUIStatusForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestVerificationResultToUIStatusForDate:");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "build");
}

id objc_msgSend_buildBatchQueryRequest_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildBatchQueryRequest:application:error:");
}

id objc_msgSend_buildBatchQueryRequests_application_maxURIsPerBatch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildBatchQueryRequests:application:maxURIsPerBatch:error:");
}

id objc_msgSend_buildConsistencyProofRequest_revisions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildConsistencyProofRequest:revisions:error:");
}

id objc_msgSend_buildNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildNumber");
}

id objc_msgSend_buildPublicKeysRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildPublicKeysRequest:error:");
}

id objc_msgSend_buildQueryRequest_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildQueryRequest:application:error:");
}

id objc_msgSend_buildRevisionLogInclusionProofRequest_logType_revisions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildRevisionLogInclusionProofRequest:logType:revisions:error:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleURL");
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytes");
}

id objc_msgSend_cacheClearRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheClearRequest:");
}

id objc_msgSend_cachePCSIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachePCSIdentity:");
}

id objc_msgSend_cachedDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDevices");
}

id objc_msgSend_cachedGossip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedGossip");
}

id objc_msgSend_cachedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedNotification");
}

id objc_msgSend_cachedTimes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedTimes");
}

id objc_msgSend_calcValueNameOffsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calcValueNameOffsets");
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStackSymbols");
}

id objc_msgSend_callbackWorkloop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callbackWorkloop");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelPendingFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingFlag:");
}

id objc_msgSend_certFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "certFetcher");
}

id objc_msgSend_certificateFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "certificateFromData:error:");
}

id objc_msgSend_certificates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "certificates");
}

id objc_msgSend_cfPrefsJson(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfPrefsJson");
}

id objc_msgSend_chain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chain");
}

id objc_msgSend_changeLogHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeLogHead");
}

id objc_msgSend_changeOptInState_application_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeOptInState:application:logClient:completionBlock:");
}

id objc_msgSend_changeOptInState_application_loggableData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeOptInState:application:loggableData:error:");
}

id objc_msgSend_changeOptInState_dataStore_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeOptInState:dataStore:completionBlock:");
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeType");
}

id objc_msgSend_changedObjectID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changedObjectID");
}

id objc_msgSend_changes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changes");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_checkAccountKeyChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAccountKeyChanged");
}

id objc_msgSend_checkAccountNFS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAccountNFS");
}

id objc_msgSend_checkAllCKKSMonitoredViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAllCKKSMonitoredViews");
}

id objc_msgSend_checkAndLogHardErrorIfNecessary_type_logger_error_applicationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAndLogHardErrorIfNecessary:type:logger:error:applicationID:");
}

id objc_msgSend_checkBagKeyClass_keys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkBagKeyClass:keys:");
}

id objc_msgSend_checkBatchQueryResponseEpochs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkBatchQueryResponseEpochs:");
}

id objc_msgSend_checkBatchQueryResponseFreshness_receiptDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkBatchQueryResponseFreshness:receiptDate:error:");
}

id objc_msgSend_checkCKKSAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkCKKSAvailable:");
}

id objc_msgSend_checkErrorChainForLockState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkErrorChainForLockState:");
}

id objc_msgSend_checkFollowupTicket_uri_checkTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkFollowupTicket:uri:checkTime:error:");
}

id objc_msgSend_checkHeadEpoch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkHeadEpoch:");
}

id objc_msgSend_checkIDSHealth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIDSHealth:");
}

id objc_msgSend_checkIDSRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIDSRegistration");
}

id objc_msgSend_checkIDSResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIDSResult");
}

id objc_msgSend_checkIDSTimeoutSeconds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIDSTimeoutSeconds");
}

id objc_msgSend_checkIDSTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIDSTimer");
}

id objc_msgSend_checkKTAccountKey_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkKTAccountKey:complete:");
}

id objc_msgSend_checkKTAccountKeyScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkKTAccountKeyScheduler");
}

id objc_msgSend_checkKTSignatureScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkKTSignatureScheduler");
}

id objc_msgSend_checkLastTagWas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkLastTagWas:");
}

id objc_msgSend_checkMissingBagKeys_keys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkMissingBagKeys:keys:");
}

id objc_msgSend_checkNetworkError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkNetworkError:");
}

id objc_msgSend_checkPCSKTSignature_data_signature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkPCSKTSignature:data:signature:");
}

id objc_msgSend_checkQueryInfoFreshness_receiptDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkQueryInfoFreshness:receiptDate:error:");
}

id objc_msgSend_checkQueryResponseEpochs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkQueryResponseEpochs:");
}

id objc_msgSend_checkQueryResponseFreshness_receiptDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkQueryResponseFreshness:receiptDate:error:");
}

id objc_msgSend_checkReachabilityOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkReachabilityOperation");
}

id objc_msgSend_checkResponseFreshness_smh_receiptDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResponseFreshness:smh:receiptDate:error:");
}

id objc_msgSend_checkServerStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkServerStatus:error:");
}

id objc_msgSend_checkServerStatus_isInsert_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkServerStatus:isInsert:error:");
}

id objc_msgSend_checkSplitsFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkSplitsFor:");
}

id objc_msgSend_checkUnlockOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkUnlockOperation");
}

id objc_msgSend_childAccountsWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childAccountsWithAccountTypeIdentifier:");
}

id objc_msgSend_chunkArray_chunkSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chunkArray:chunkSize:");
}

id objc_msgSend_ckAccountInfoInitialized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckAccountInfoInitialized");
}

id objc_msgSend_ckChangeListeners(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckChangeListeners");
}

id objc_msgSend_ckFetchReasons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckFetchReasons");
}

id objc_msgSend_ckFetchScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckFetchScheduler");
}

id objc_msgSend_ckdatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckdatabase");
}

id objc_msgSend_ckksCheckerNFS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksCheckerNFS");
}

id objc_msgSend_ckksControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksControl:");
}

id objc_msgSend_ckksControlInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksControlInterface");
}

id objc_msgSend_ckksGetKnownBadState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksGetKnownBadState:");
}

id objc_msgSend_ckksRequestViewSync_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksRequestViewSync:complete:");
}

id objc_msgSend_ckksTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksTimeout");
}

id objc_msgSend_ckksViewObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksViewObserver");
}

id objc_msgSend_ckksViewReady_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckksViewReady:error:");
}

id objc_msgSend_cleanseError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanseError:");
}

id objc_msgSend_cleanseErrorForXPC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanseErrorForXPC:");
}

id objc_msgSend_cleanupAccounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupAccounts");
}

id objc_msgSend_cleanupDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupDevices");
}

id objc_msgSend_cleanupRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupRecords");
}

id objc_msgSend_clearAccountMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAccountMetadata");
}

id objc_msgSend_clearAccountMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAccountMetrics");
}

id objc_msgSend_clearAllFailureEvents_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAllFailureEvents:error:");
}

id objc_msgSend_clearAllFollowups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAllFollowups:");
}

id objc_msgSend_clearApplicationState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearApplicationState:error:");
}

id objc_msgSend_clearApplicationState_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearApplicationState:logClient:completionBlock:");
}

id objc_msgSend_clearCachedPCSIdentities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCachedPCSIdentities");
}

id objc_msgSend_clearCachedPCSIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCachedPCSIdentity");
}

id objc_msgSend_clearCoreFollowUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCoreFollowUp");
}

id objc_msgSend_clearDataForPAT_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDataForPAT:dataStore:");
}

id objc_msgSend_clearDataForTLT_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDataForTLT:dataStore:");
}

id objc_msgSend_clearDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDataStore:");
}

id objc_msgSend_clearDeviceSignatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDeviceSignatures:");
}

id objc_msgSend_clearDiskApplicationKeyStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDiskApplicationKeyStore:error:");
}

id objc_msgSend_clearFailureEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearFailureEvents");
}

id objc_msgSend_clearFollowupTicket_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearFollowupTicket:uri:error:");
}

id objc_msgSend_clearFollowups_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearFollowups:error:");
}

id objc_msgSend_clearFollowupsByType_type_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearFollowupsByType:type:error:");
}

id objc_msgSend_clearForEnvironmentChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearForEnvironmentChange");
}

id objc_msgSend_clearGossip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearGossip");
}

id objc_msgSend_clearIDSCacheForUri_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearIDSCacheForUri:application:");
}

id objc_msgSend_clearLocalCloudState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearLocalCloudState");
}

id objc_msgSend_clearOptInStateAndPushToCloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearOptInStateAndPushToCloud");
}

id objc_msgSend_clearOptInStateForURI_application_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearOptInStateForURI:application:complete:");
}

id objc_msgSend_clearOptInStateForURI_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearOptInStateForURI:application:error:");
}

id objc_msgSend_clearPeerOverride_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPeerOverride:application:");
}

id objc_msgSend_clearPeerState_uris_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPeerState:uris:error:");
}

id objc_msgSend_clearPendingFollowUpItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPendingFollowUpItems:");
}

id objc_msgSend_clearPendingFollowUpItemsWithUniqueIdentifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPendingFollowUpItemsWithUniqueIdentifiers:error:");
}

id objc_msgSend_clearSelfFailureRelatedData_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelfFailureRelatedData:uri:error:");
}

id objc_msgSend_clearSelfTicketState_responseTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelfTicketState:responseTime:");
}

id objc_msgSend_clearSelfValidationFollowups_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelfValidationFollowups:uri:error:");
}

id objc_msgSend_clearState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearState:");
}

id objc_msgSend_clearStateForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearStateForApplication:error:");
}

id objc_msgSend_clientData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientData");
}

id objc_msgSend_clientDataArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDataArray");
}

id objc_msgSend_clientDataHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDataHash");
}

id objc_msgSend_clientDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDatas");
}

id objc_msgSend_clientLoggableDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientLoggableDatas");
}

id objc_msgSend_clientRecordForAppVersion_clientDataHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRecordForAppVersion:clientDataHash:");
}

id objc_msgSend_clientRecordsForHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRecordsForHash:");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "close");
}

id objc_msgSend_cloudContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudContainer");
}

id objc_msgSend_cloudDeviceNeedUpdateWithPushToken_tbsRegistrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDeviceNeedUpdateWithPushToken:tbsRegistrationData:");
}

id objc_msgSend_cloudDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDevices");
}

id objc_msgSend_cloudFetchOperationWithDeps_initialFetch_userInteractive_reason_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudFetchOperationWithDeps:initialFetch:userInteractive:reason:context:");
}

id objc_msgSend_cloudKitAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudKitAccount:");
}

id objc_msgSend_cloudKitAccountInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudKitAccountInfo");
}

id objc_msgSend_cloudKitAccountTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudKitAccountTracker");
}

id objc_msgSend_cloudKitZones(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudKitZones");
}

id objc_msgSend_cloudPersistentStoreDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudPersistentStoreDescription:");
}

id objc_msgSend_cloudRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudRecords");
}

id objc_msgSend_cloudkitAccountStateChange_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudkitAccountStateChange:to:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_combineLoggableDatasForUI_byAdding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combineLoggableDatasForUI:byAdding:");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_complete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "complete");
}

id objc_msgSend_completeOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeOperation");
}

id objc_msgSend_completed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completed");
}

id objc_msgSend_completedCurrentTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completedCurrentTarget");
}

id objc_msgSend_completionHandlerDidRunCondition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionHandlerDidRunCondition");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_computeHashesForSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeHashesForSalt:");
}

id objc_msgSend_computeSerializedSizeAsField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeSerializedSizeAsField:");
}

id objc_msgSend_conditionChecksInFlight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conditionChecksInFlight");
}

id objc_msgSend_conditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conditions");
}

id objc_msgSend_config(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "config");
}

id objc_msgSend_configApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configApp");
}

id objc_msgSend_configBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configBag");
}

id objc_msgSend_configBagFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configBagFileName");
}

id objc_msgSend_configBagRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configBagRequest");
}

id objc_msgSend_configBagURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configBagURL");
}

id objc_msgSend_configurationExpired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationExpired");
}

id objc_msgSend_configurationStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationStore");
}

id objc_msgSend_configure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configure:");
}

id objc_msgSend_configureFromNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureFromNetwork:");
}

id objc_msgSend_configureFromNetworkBagData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureFromNetworkBagData:error:");
}

id objc_msgSend_configureFromNetworkWithFetcher_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureFromNetworkWithFetcher:completionHandler:");
}

id objc_msgSend_configureGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureGroup");
}

id objc_msgSend_configureQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureQueue");
}

id objc_msgSend_configureWithClient_applicationHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithClient:applicationHandler:completionHandler:");
}

id objc_msgSend_configureWithClient_force_applicationHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithClient:force:applicationHandler:completionHandler:");
}

id objc_msgSend_configureWithClient_ignoreCachedKeys_dataStore_contextStore_applicationHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithClient:ignoreCachedKeys:dataStore:contextStore:applicationHandler:completionHandler:");
}

id objc_msgSend_configureWithDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDisk:");
}

id objc_msgSend_configureWithDisk_contextStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDisk:contextStore:error:");
}

id objc_msgSend_configureWithFetcher_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithFetcher:completionHandler:");
}

id objc_msgSend_configured(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configured");
}

id objc_msgSend_conflictingObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conflictingObjects");
}

id objc_msgSend_consistencyMaxProofs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consistencyMaxProofs");
}

id objc_msgSend_consistencyProofURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consistencyProofURI");
}

id objc_msgSend_consistencyVerified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consistencyVerified");
}

id objc_msgSend_consumeContactsChangeHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consumeContactsChangeHistory");
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contact");
}

id objc_msgSend_contactExternalIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactExternalIdentifier");
}

id objc_msgSend_contactExternalURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactExternalURI");
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifier");
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactStore");
}

id objc_msgSend_contacts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contacts");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "container");
}

id objc_msgSend_containingMessageClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingMessageClass");
}

id objc_msgSend_containingType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingType");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentsAsString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsAsString");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_contextForApplication_logClient_fetchState_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextForApplication:logClient:fetchState:completionHandler:");
}

id objc_msgSend_contextRefCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextRefCount");
}

id objc_msgSend_contextShouldGossip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextShouldGossip");
}

id objc_msgSend_contextStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextStore");
}

id objc_msgSend_contexts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contexts");
}

id objc_msgSend_controlObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlObject:");
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyCachedPCSIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCachedPCSIdentity");
}

id objc_msgSend_copyCachedPCSIdentityForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCachedPCSIdentityForApplication:");
}

id objc_msgSend_copyConfigurationBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyConfigurationBag:");
}

id objc_msgSend_copyFieldsInto_zone_descriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyFieldsInto:zone:descriptor:");
}

id objc_msgSend_copyKeyStoreState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyKeyStoreState");
}

id objc_msgSend_copyManagedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyManagedObject:");
}

id objc_msgSend_copyMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMetadata");
}

id objc_msgSend_copyPCSIdentitySet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyPCSIdentitySet:");
}

id objc_msgSend_copyState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyState");
}

id objc_msgSend_copyStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyStatistics:");
}

id objc_msgSend_copyTltBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyTltBag");
}

id objc_msgSend_copyTrustedKeysFromDataArray_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyTrustedKeysFromDataArray:error:");
}

id objc_msgSend_copyVRFKeyFromConfigProof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyVRFKeyFromConfigProof:error:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_coreDataInitialDelaySync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coreDataInitialDelaySync");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForFetchRequest:error:");
}

id objc_msgSend_countOfFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfFields");
}

id objc_msgSend_countOutstandingRequestsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOutstandingRequestsForApplication:error:");
}

id objc_msgSend_countOutstandingSMHsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOutstandingSMHsForApplication:error:");
}

id objc_msgSend_countOutstandingSMTsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOutstandingSMTsForApplication:error:");
}

id objc_msgSend_countOutstandingSTHsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOutstandingSTHsForApplication:error:");
}

id objc_msgSend_countOutstandingVerificationsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOutstandingVerificationsForApplication:error:");
}

id objc_msgSend_countTotalRequestsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countTotalRequestsForApplication:error:");
}

id objc_msgSend_countTotalSMTsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countTotalSMTsForApplication:error:");
}

id objc_msgSend_countTotalSTHsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countTotalSTHsForApplication:error:");
}

id objc_msgSend_countTotalVerificationsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countTotalVerificationsForApplication:error:");
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countryCode");
}

id objc_msgSend_countryCodeMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countryCodeMap");
}

id objc_msgSend_createApplicationKeyStore_keyStoreData_dataStore_contextStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createApplicationKeyStore:keyStoreData:dataStore:contextStore:error:");
}

id objc_msgSend_createApplicationKeyStore_keyStoreResponse_dataStore_contextStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createApplicationKeyStore:keyStoreResponse:dataStore:contextStore:error:");
}

id objc_msgSend_createAuthToken_authToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAuthToken:authToken:");
}

id objc_msgSend_createAuthenticatedForegroundSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAuthenticatedForegroundSession");
}

id objc_msgSend_createAuthkitSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAuthkitSession");
}

id objc_msgSend_createBatchQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createBatchQuery");
}

id objc_msgSend_createCACertificatesArray_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createCACertificatesArray:error:");
}

id objc_msgSend_createChainOfErrorsFromRequestFailures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createChainOfErrorsFromRequestFailures:");
}

id objc_msgSend_createChainOfErrorsFromSMTFailures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createChainOfErrorsFromSMTFailures:");
}

id objc_msgSend_createChainOfErrorsFromSTHFailures_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createChainOfErrorsFromSTHFailures:type:");
}

id objc_msgSend_createContextForApplication_dataStore_staticKeyStore_logClient_stateMachine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createContextForApplication:dataStore:staticKeyStore:logClient:stateMachine:");
}

id objc_msgSend_createContextForTLT_staticKeyStore_logClient_stateMachine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createContextForTLT:staticKeyStore:logClient:stateMachine:");
}

id objc_msgSend_createContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createContexts:");
}

id objc_msgSend_createDataStores_followup_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDataStores:followup:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDisableTransparencyFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDisableTransparencyFollowup:infoLink:");
}

id objc_msgSend_createDownloadRecord_moc_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDownloadRecord:moc:application:");
}

id objc_msgSend_createErrorFromRequestFailure_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createErrorFromRequestFailure:underlyingError:");
}

id objc_msgSend_createErrorFromSMTFailure_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createErrorFromSMTFailure:underlyingError:");
}

id objc_msgSend_createErrorFromSTHFailure_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createErrorFromSTHFailure:underlyingError:");
}

id objc_msgSend_createErrorFromURLResonse_data_allowEmptyData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createErrorFromURLResonse:data:allowEmptyData:error:");
}

id objc_msgSend_createFailureEvent_application_optInServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFailureEvent:application:optInServer:");
}

id objc_msgSend_createFetchRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFetchRecord");
}

id objc_msgSend_createFetchRecordForRequestData_request_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFetchRecordForRequestData:request:error:");
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileAtPath:contents:attributes:");
}

id objc_msgSend_createFollowupTicket_uri_startTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFollowupTicket:uri:startTime:error:");
}

id objc_msgSend_createGETRequestForURL_timeout_additionalHeaders_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createGETRequestForURL:timeout:additionalHeaders:error:");
}

id objc_msgSend_createGETRequestForURL_timeout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createGETRequestForURL:timeout:error:");
}

id objc_msgSend_createIDSKTVerification_application_accountKey_idsResponseTime_serverLoggableDatas_optedIn_type_syncedLoggableDatas_verificationId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIDSKTVerification:application:accountKey:idsResponseTime:serverLoggableDatas:optedIn:type:syncedLoggableDatas:verificationId:error:");
}

id objc_msgSend_createIDSKTVerification_application_verificationInfo_type_syncedLoggableDatas_verificationId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIDSKTVerification:application:verificationInfo:type:syncedLoggableDatas:verificationId:error:");
}

id objc_msgSend_createIDSVerificationID_verification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIDSVerificationID:verification:");
}

id objc_msgSend_createIdentityForSet_roll_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIdentityForSet:roll:completionBlock:");
}

id objc_msgSend_createKTRequestID_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createKTRequestID:request:");
}

id objc_msgSend_createManagedObject_uri_serverHint_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createManagedObject:uri:serverHint:error:");
}

id objc_msgSend_createManagedObjectWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createManagedObjectWithError:");
}

id objc_msgSend_createManateeIdentity_service_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createManateeIdentity:service:complete:");
}

id objc_msgSend_createMapHead_application_logBeginTime_logHeadHash_logType_revision_populating_gossip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createMapHead:application:logBeginTime:logHeadHash:logType:revision:populating:gossip:");
}

id objc_msgSend_createMutation_application_uri_mutationMs_spkiHash_receiptTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createMutation:application:uri:mutationMs:spkiHash:receiptTime:");
}

id objc_msgSend_createOperationToFinishAttempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOperationToFinishAttempt:");
}

id objc_msgSend_createOptOutFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOptOutFollowup:infoLink:");
}

id objc_msgSend_createPeerIDSKTVerification_application_verificationInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPeerIDSKTVerification:application:verificationInfo:error:");
}

id objc_msgSend_createPeerOverrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPeerOverrides");
}

id objc_msgSend_createPeerState_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPeerState:application:error:");
}

id objc_msgSend_createQueryRequestForKTRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createQueryRequestForKTRequest:error:");
}

id objc_msgSend_createRecordFromLoggableData_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRecordFromLoggableData:application:");
}

id objc_msgSend_createRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequest");
}

id objc_msgSend_createRequestFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestFailure");
}

id objc_msgSend_createRequestForAuthentication_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestForAuthentication:completionHandler:");
}

id objc_msgSend_createRequestForAuthentication_fetchAuthNow_timeShift_additionalHeaders_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestForAuthentication:fetchAuthNow:timeShift:additionalHeaders:completionHandler:");
}

id objc_msgSend_createRequestForAuthentication_fetchAuthNow_timeShift_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestForAuthentication:fetchAuthNow:timeShift:completionHandler:");
}

id objc_msgSend_createRequestForURL_timeout_contents_authentication_fetchAuthNow_timeShift_additionalHeaders_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestForURL:timeout:contents:authentication:fetchAuthNow:timeShift:additionalHeaders:completionHandler:");
}

id objc_msgSend_createRequestWithUri_application_accountKey_serverData_syncedData_idsResponseTime_queryRequest_queryResponse_responseDate_type_clientId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestWithUri:application:accountKey:serverData:syncedData:idsResponseTime:queryRequest:queryResponse:responseDate:type:clientId:error:");
}

id objc_msgSend_createRequestWithUri_application_accountKey_serverData_syncedData_queryRequest_queryResponse_type_clientId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRequestWithUri:application:accountKey:serverData:syncedData:queryRequest:queryResponse:type:clientId:error:");
}

id objc_msgSend_createSMTFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSMTFollowup:infoLink:");
}

id objc_msgSend_createSTHFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSTHFollowup:infoLink:");
}

id objc_msgSend_createSelfFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSelfFollowup:infoLink:");
}

id objc_msgSend_createSelfValidationState_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSelfValidationState:uri:error:");
}

id objc_msgSend_createSignedMutationTimestampsFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSignedMutationTimestampsFailure");
}

id objc_msgSend_createSignedTreeHeadFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSignedTreeHeadFailure");
}

id objc_msgSend_createSingleQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSingleQuery");
}

id objc_msgSend_createSingleQuery_backgroundOpId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSingleQuery:backgroundOpId:error:");
}

id objc_msgSend_createSuccesfulCKFetchDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSuccesfulCKFetchDependency");
}

id objc_msgSend_createTLTApplicationPublicKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTLTApplicationPublicKeyStore");
}

id objc_msgSend_createTLTResetFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTLTResetFollowup:infoLink:");
}

id objc_msgSend_createTransparentDataFromQueryInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTransparentDataFromQueryInfo:error:");
}

id objc_msgSend_createTreeHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTreeHead");
}

id objc_msgSend_createTreeHead_isMapHead_application_logBeginTime_logHeadHash_logType_revision_gossip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTreeHead:isMapHead:application:logBeginTime:logHeadHash:logType:revision:gossip:");
}

id objc_msgSend_createTreeRollFollowup_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTreeRollFollowup:infoLink:");
}

id objc_msgSend_createTrustedSthKeyStoreFromProofSPKI_signingKeysMap_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTrustedSthKeyStoreFromProofSPKI:signingKeysMap:error:");
}

id objc_msgSend_createdAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createdAt");
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creationDate");
}

id objc_msgSend_creationGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creationGroup");
}

id objc_msgSend_creationQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creationQueue");
}

id objc_msgSend_creationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creationTime");
}

id objc_msgSend_credential(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credential");
}

id objc_msgSend_credentialItemForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credentialItemForKey:");
}

id objc_msgSend_currentAccountOptInState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAccountOptInState");
}

id objc_msgSend_currentCKAccountInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCKAccountInfo");
}

id objc_msgSend_currentCKFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCKFetch");
}

id objc_msgSend_currentConditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentConditions");
}

id objc_msgSend_currentDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDelay");
}

id objc_msgSend_currentEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentEnvironment");
}

id objc_msgSend_currentFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentFlags");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_currentHistoryToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHistoryToken");
}

id objc_msgSend_currentItemPointerModificationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentItemPointerModificationTime");
}

id objc_msgSend_currentPublicID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPublicID");
}

id objc_msgSend_currentReachability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReachability");
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRequest");
}

id objc_msgSend_currentSequenceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSequenceId:");
}

id objc_msgSend_currentServerOptInFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentServerOptInFetch");
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentState");
}

id objc_msgSend_currentStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentStates");
}

id objc_msgSend_currentTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTarget");
}

id objc_msgSend_currentTreeEpochBeginDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTreeEpochBeginDate");
}

id objc_msgSend_daemonContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "daemonContext");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "data");
}

id objc_msgSend_dataFromHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromHistoryToken:");
}

id objc_msgSend_dataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataStore");
}

id objc_msgSend_dataStoreController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataStoreController");
}

id objc_msgSend_dataStoreFailedToLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataStoreFailedToLoad:");
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataType");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithData:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_databaseObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseObject");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_datePropertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "datePropertyForKey:");
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_decodeAndVerifyOptInOutResponse_optInOutState_optInOutTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeAndVerifyOptInOutResponse:optInOutState:optInOutTime:error:");
}

id objc_msgSend_decodeAndVerifySMT_optInOutState_optInOutTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeAndVerifySMT:optInOutState:optInOutTime:error:");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decodePublicKeyInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodePublicKeyInfo:error:");
}

id objc_msgSend_decodeTopLevelObjectOfClasses_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeTopLevelObjectOfClasses:forKey:error:");
}

id objc_msgSend_deepCopyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deepCopyWithZone:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultNetworkTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultNetworkTimeout");
}

id objc_msgSend_defaultQueryCacheTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultQueryCacheTimeout");
}

id objc_msgSend_defaultSelfFollowupTicketLifetime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSelfFollowupTicketLifetime");
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSessionConfiguration");
}

id objc_msgSend_defaultValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultValue");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_delete_onMOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delete:onMOC:");
}

id objc_msgSend_deleteCompletedSingleQueryForUris_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCompletedSingleQueryForUris:application:error:");
}

id objc_msgSend_deleteContact_contactExternalURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteContact:contactExternalURI:");
}

id objc_msgSend_deleteDownloadId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDownloadId:");
}

id objc_msgSend_deleteDownloadRecordById_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDownloadRecordById:error:");
}

id objc_msgSend_deleteDownloadRecords_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDownloadRecords:error:");
}

id objc_msgSend_deleteFile_inDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteFile:inDirectory:error:");
}

id objc_msgSend_deleteMarkedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteMarkedEntries:");
}

id objc_msgSend_deleteNonRecentVerificationsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteNonRecentVerificationsForApplication:error:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deleteObjectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObjectSet:");
}

id objc_msgSend_deleteOptInIntentForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteOptInIntentForApplication:error:");
}

id objc_msgSend_deleteSMT_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSMT:error:");
}

id objc_msgSend_deleteSMTsWithSPKINotIn_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSMTsWithSPKINotIn:application:error:");
}

id objc_msgSend_deleteSTHs_logBeginMsLessThan_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSTHs:logBeginMsLessThan:error:");
}

id objc_msgSend_deleteServerRPCs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteServerRPCs:error:");
}

id objc_msgSend_deleteStaticKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStaticKey:error:");
}

id objc_msgSend_deleteStaticKeyByContactExternalURI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStaticKeyByContactExternalURI:error:");
}

id objc_msgSend_deleteStaticKeyByContactIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStaticKeyByContactIdentifier:error:");
}

id objc_msgSend_deliveryQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliveryQueue");
}

id objc_msgSend_dependOnBeforeGroupFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dependOnBeforeGroupFinished:");
}

id objc_msgSend_dependencies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dependencies");
}

id objc_msgSend_dependenciesDescriptionError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dependenciesDescriptionError");
}

id objc_msgSend_deps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deps");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionError");
}

id objc_msgSend_descriptionErrorCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionErrorCode");
}

id objc_msgSend_descriptionInternal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionInternal:");
}

id objc_msgSend_descriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptor");
}

id objc_msgSend_deserializeLoggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeLoggableDatas:error:");
}

id objc_msgSend_deserializeNSError_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeNSError:error:");
}

id objc_msgSend_deserializeServerLoggableDatas_loggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeServerLoggableDatas:loggableDatas:error:");
}

id objc_msgSend_deserializeSyncedLoggableDatas_loggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeSyncedLoggableDatas:loggableDatas:error:");
}

id objc_msgSend_destroyPersistentStoreAtURL_withType_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyPersistentStoreAtURL:withType:options:error:");
}

id objc_msgSend_detailsAction_eventId_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailsAction:eventId:infoLink:");
}

id objc_msgSend_detectEpochChangeAndResetData_patLogBeginningMs_mapStillPopulating_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detectEpochChangeAndResetData:patLogBeginningMs:mapStillPopulating:dataStore:");
}

id objc_msgSend_detectResetForPAT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detectResetForPAT:");
}

id objc_msgSend_detectResetForTLT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detectResetForTLT:");
}

id objc_msgSend_deviceForDeviceIdHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForDeviceIdHash:");
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceID");
}

id objc_msgSend_deviceIDHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIDHash");
}

id objc_msgSend_deviceIdHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIdHash");
}

id objc_msgSend_deviceIdentityIssuerCert_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIdentityIssuerCert:completionHandler:");
}

id objc_msgSend_deviceInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInformation");
}

id objc_msgSend_deviceList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceList");
}

id objc_msgSend_deviceListWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceListWithContext:completion:");
}

id objc_msgSend_devicePlatform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicePlatform");
}

id objc_msgSend_deviceToDeviceEncryptionAvailability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceToDeviceEncryptionAvailability");
}

id objc_msgSend_deviceUserAgent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceUserAgent");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devices");
}

id objc_msgSend_devicesArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesArray");
}

id objc_msgSend_dew(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dew");
}

id objc_msgSend_diagnosticError_depth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticError:depth:");
}

id objc_msgSend_diagnosticsJsonDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticsJsonDictionary");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:error:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didUpdateStaticKeyStore_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateStaticKeyStore:application:");
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "digits");
}

id objc_msgSend_directory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directory");
}

id objc_msgSend_directorySizeInKB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directorySizeInKB:");
}

id objc_msgSend_disableCacheHitsForUris_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableCacheHitsForUris:application:error:");
}

id objc_msgSend_disableKTSyncabledKVSStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableKTSyncabledKVSStore");
}

id objc_msgSend_diskStoreDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diskStoreDictionary");
}

id objc_msgSend_dismissFailureAfterSeenPeriod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissFailureAfterSeenPeriod");
}

id objc_msgSend_dispatchToQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchToQueue:block:");
}

id objc_msgSend_dnc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dnc");
}

id objc_msgSend_doFixupOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doFixupOperation");
}

id objc_msgSend_doKTResultWithAnalyticsForEventName_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doKTResultWithAnalyticsForEventName:error:block:");
}

id objc_msgSend_doKTResultWithAnalyticsForEventName_validateType_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doKTResultWithAnalyticsForEventName:validateType:error:block:");
}

id objc_msgSend_doSimpleStateMachineRPC_op_sourceStates_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doSimpleStateMachineRPC:op:sourceStates:reply:");
}

id objc_msgSend_doWatchedStateMachineRPC_sourceStates_path_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doWatchedStateMachineRPC:sourceStates:path:reply:");
}

id objc_msgSend_doWatchedStateMachineRPC_sourceStates_path_transitionOp_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doWatchedStateMachineRPC:sourceStates:path:transitionOp:reply:");
}

id objc_msgSend_doWithAnalyticsForEventName_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doWithAnalyticsForEventName:error:block:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleForKey:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadConsistencyProofRequest_lastVerifiedRevision_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadConsistencyProofRequest:lastVerifiedRevision:application:error:");
}

id objc_msgSend_downloadId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadId");
}

id objc_msgSend_downloadInclusionProofChunk_application_downloadType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadInclusionProofChunk:application:downloadType:error:");
}

id objc_msgSend_downloadInclusionProofsForRevisions_application_downloadType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadInclusionProofsForRevisions:application:downloadType:error:");
}

id objc_msgSend_downloadType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadType");
}

id objc_msgSend_drainContactsSyncing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainContactsSyncing");
}

id objc_msgSend_drainDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainDataStore");
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dsid");
}

id objc_msgSend_dumpFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dumpFlags");
}

id objc_msgSend_dumpPendingFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dumpPendingFlags");
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_earliestAddedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earliestAddedDate:");
}

id objc_msgSend_earliestCurrentTreeVersionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earliestCurrentTreeVersionWithError:");
}

id objc_msgSend_earliestNextTreeVersionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earliestNextTreeVersionWithError:");
}

id objc_msgSend_eligibleForOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleForOptIn:");
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddresses");
}

id objc_msgSend_emailPrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailPrefix");
}

id objc_msgSend_emptyAtDepth_leafIndex_treeId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyAtDepth:leafIndex:treeId:");
}

id objc_msgSend_enablePinning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enablePinning");
}

id objc_msgSend_enableSelfValidationXPCActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableSelfValidationXPCActivity");
}

id objc_msgSend_encodeBool_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:buffer:");
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeByte_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeByte:buffer:");
}

id objc_msgSend_encodeByteArray_minLength_maxLength_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeByteArray:minLength:maxLength:buffer:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeExtensions_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeExtensions:buffer:");
}

id objc_msgSend_encodeHashValue_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeHashValue:buffer:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeUint64_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeUint64:buffer:");
}

id objc_msgSend_encodeVRFOutput_buffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeVRFOutput:buffer:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedData");
}

id objc_msgSend_encodedError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedError");
}

id objc_msgSend_endSlh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSlh");
}

id objc_msgSend_enforceCKOptInRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enforceCKOptInRecords");
}

id objc_msgSend_enrollementLoggingKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enrollementLoggingKeys:");
}

id objc_msgSend_ensureContactFieldsPresent_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureContactFieldsPresent:error:");
}

id objc_msgSend_entities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entities");
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity");
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityName");
}

id objc_msgSend_entryPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryPosition");
}

id objc_msgSend_enumDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumDescriptor");
}

id objc_msgSend_enumVerifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumVerifier");
}

id objc_msgSend_enumerateForTextFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateForTextFormat:");
}

id objc_msgSend_enumerateKeysAndBoolsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndBoolsUsingBlock:");
}

id objc_msgSend_enumerateKeysAndDoublesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndDoublesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndFloatsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndFloatsUsingBlock:");
}

id objc_msgSend_enumerateKeysAndInt32sUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndInt32sUsingBlock:");
}

id objc_msgSend_enumerateKeysAndInt64sUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndInt64sUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateKeysAndRawValuesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndRawValuesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndUInt32sUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndUInt32sUsingBlock:");
}

id objc_msgSend_enumerateKeysAndUInt64sUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndUInt64sUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateRawValuesWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRawValuesWithBlock:");
}

id objc_msgSend_enumerateValuesWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateValuesWithBlock:");
}

id objc_msgSend_enumeratorForChangeHistoryFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorForChangeHistoryFetchRequest:error:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environment");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "error");
}

id objc_msgSend_errorCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorCode");
}

id objc_msgSend_errorDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorDomain");
}

id objc_msgSend_errorFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorFromData:");
}

id objc_msgSend_errorFromJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorFromJson:");
}

id objc_msgSend_errorState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorState");
}

id objc_msgSend_errorWithDomain_code_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:description:");
}

id objc_msgSend_errorWithDomain_code_description_underlying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:description:underlying:");
}

id objc_msgSend_errorWithDomain_code_errorLevel_underlyingError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:errorLevel:underlyingError:description:");
}

id objc_msgSend_errorWithDomain_code_errorLevel_underlyingError_userinfo_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:errorLevel:underlyingError:userinfo:description:");
}

id objc_msgSend_errorWithDomain_code_underlyingError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:underlyingError:description:");
}

id objc_msgSend_errorWithDomain_code_underlyingError_userinfo_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:underlyingError:userinfo:description:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_errorWithDomain_code_userInfo_description_underlying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:description:underlying:");
}

id objc_msgSend_errorWithError_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithError:underlyingError:");
}

id objc_msgSend_errors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errors");
}

id objc_msgSend_errorsForFailedEvents_dataStore_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorsForFailedEvents:dataStore:completionBlock:");
}

id objc_msgSend_escrowExpiry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowExpiry");
}

id objc_msgSend_escrowExpiryMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowExpiryMs");
}

id objc_msgSend_evalCurrentOptInState_optInStateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evalCurrentOptInState:optInStateError:");
}

id objc_msgSend_evaluateCloudDataAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateCloudDataAndReturnError:");
}

id objc_msgSend_evaluateKTLogData_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateKTLogData:application:error:");
}

id objc_msgSend_evaluateWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithObject:");
}

id objc_msgSend_eventId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventId");
}

id objc_msgSend_eventsByTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventsByTime");
}

id objc_msgSend_everCompletedVerification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "everCompletedVerification");
}

id objc_msgSend_everOptIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "everOptIn");
}

id objc_msgSend_everOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "everOptedIn");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_execute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "execute:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRequest:error:");
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingObjectWithID:error:");
}

id objc_msgSend_expectedFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedFailure");
}

id objc_msgSend_expectedSelfResolutionDate_requestDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedSelfResolutionDate:requestDate:");
}

id objc_msgSend_expirationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expirationTime");
}

id objc_msgSend_expired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expired:");
}

id objc_msgSend_expiry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expiry");
}

id objc_msgSend_expiryMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expiryMs");
}

id objc_msgSend_exportToCloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportToCloud");
}

id objc_msgSend_extensionData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionData");
}

id objc_msgSend_extensionForDescriptor_fieldNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionForDescriptor:fieldNumber:");
}

id objc_msgSend_extensionRanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionRanges");
}

id objc_msgSend_extensionRangesCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionRangesCount");
}

id objc_msgSend_extensionRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionRegistry");
}

id objc_msgSend_extensionType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionType");
}

id objc_msgSend_extensions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensions");
}

id objc_msgSend_extensionsCurrentlySet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionsCurrentlySet");
}

id objc_msgSend_externalURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalURI");
}

id objc_msgSend_failExpiredRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failExpiredRequest:error:");
}

id objc_msgSend_failExpiredSTHsForType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failExpiredSTHsForType:error:");
}

id objc_msgSend_failHeadDownload_application_failure_retry_logClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failHeadDownload:application:failure:retry:logClient:");
}

id objc_msgSend_failHeadDownload_failure_logClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failHeadDownload:failure:logClient:");
}

id objc_msgSend_failHeadDownloadRecord_failure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failHeadDownloadRecord:failure:error:");
}

id objc_msgSend_failRpcId_failure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failRpcId:failure:error:");
}

id objc_msgSend_failSMTsIfOverMMD_proof_underlyingError_errorCode_analyticsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failSMTsIfOverMMD:proof:underlyingError:errorCode:analyticsData:");
}

id objc_msgSend_failSMTsIfOverMMD_skipOptInOut_proof_underlyingError_errorCode_analyticsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failSMTsIfOverMMD:skipOptInOut:proof:underlyingError:errorCode:analyticsData:");
}

id objc_msgSend_failStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failStates");
}

id objc_msgSend_failedHeadSignaturesWithRevisions_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedHeadSignaturesWithRevisions:application:");
}

id objc_msgSend_failedRecordsForSyncedLoggableDatas_accountKey_cloudDevices_requestDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedRecordsForSyncedLoggableDatas:accountKey:cloudDevices:requestDate:error:");
}

id objc_msgSend_failedRevs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedRevs");
}

id objc_msgSend_failedSMHs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedSMHs");
}

id objc_msgSend_failedServerLoggableDatas_accountKey_idsResponseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedServerLoggableDatas:accountKey:idsResponseTime:error:");
}

id objc_msgSend_failedSigs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedSigs");
}

id objc_msgSend_failure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failure");
}

id objc_msgSend_failureEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureEvent");
}

id objc_msgSend_failureIgnorePeriod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureIgnorePeriod");
}

id objc_msgSend_failureResult_loggableData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureResult:loggableData:");
}

id objc_msgSend_failures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failures");
}

id objc_msgSend_fastWatchdogExit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fastWatchdogExit");
}

id objc_msgSend_fetch_allowEmptyData_useReversePush_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetch:allowEmptyData:useReversePush:completionHandler:");
}

id objc_msgSend_fetch_shouldRetry_allowEmptyData_useReversePush_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetch:shouldRetry:allowEmptyData:useReversePush:completionHandler:");
}

id objc_msgSend_fetchAccountsRetryingWithTimeout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAccountsRetryingWithTimeout:error:");
}

id objc_msgSend_fetchAndStoreContactsSyncTokenWithConfigStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAndStoreContactsSyncTokenWithConfigStore:");
}

id objc_msgSend_fetchAndValidateEnrollKTRequest_transparentData_loggableDatas_cloudOptIn_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAndValidateEnrollKTRequest:transparentData:loggableDatas:cloudOptIn:error:");
}

id objc_msgSend_fetchAndValidatePeerKTRequest_fetchNow_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAndValidatePeerKTRequest:fetchNow:completionHandler:");
}

id objc_msgSend_fetchBatchQueries_userInitiated_responseHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBatchQueries:userInitiated:responseHandler:completionHandler:");
}

id objc_msgSend_fetchBatchQuery_uuid_userInitiated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBatchQuery:uuid:userInitiated:completionHandler:");
}

id objc_msgSend_fetchBatchQueryDiagnostics_application_userInitiated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBatchQueryDiagnostics:application:userInitiated:completionHandler:");
}

id objc_msgSend_fetchCKAccountStatusScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCKAccountStatusScheduler");
}

id objc_msgSend_fetchCacheOnly_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCacheOnly:completion:");
}

id objc_msgSend_fetchCliqueStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCliqueStatus:error:");
}

id objc_msgSend_fetchCloudData_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudData:complete:");
}

id objc_msgSend_fetchCloudKit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudKit");
}

id objc_msgSend_fetchCloudStorage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudStorage");
}

id objc_msgSend_fetchConfigBag_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConfigBag:completionHandler:");
}

id objc_msgSend_fetchConsistencyProof_uuid_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConsistencyProof:uuid:completionHandler:");
}

id objc_msgSend_fetchContactsSyncToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchContactsSyncToken");
}

id objc_msgSend_fetchCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCount");
}

id objc_msgSend_fetchDeviceSignature_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceSignature:complete:");
}

id objc_msgSend_fetchDownloadRecord_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDownloadRecord:application:error:");
}

id objc_msgSend_fetchDownloadRecordById_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDownloadRecordById:error:");
}

id objc_msgSend_fetchFetchRecordById_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFetchRecordById:error:");
}

id objc_msgSend_fetchGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchGroup");
}

id objc_msgSend_fetchHandles_moc_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHandles:moc:error:");
}

id objc_msgSend_fetchHistoryAfterToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHistoryAfterToken:");
}

id objc_msgSend_fetchIDMSDeviceList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIDMSDeviceList:");
}

id objc_msgSend_fetchId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchId");
}

id objc_msgSend_fetchKTInfoForApplication_uri_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKTInfoForApplication:uri:complete:");
}

id objc_msgSend_fetchKTRegistrationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKTRegistrationStatus:");
}

id objc_msgSend_fetchKTRegistrationStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKTRegistrationStatusWithCompletion:");
}

id objc_msgSend_fetchKeyStore_application_contextStore_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKeyStore:application:contextStore:completionHandler:");
}

id objc_msgSend_fetchMessage_uri_uuid_application_userInitiated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMessage:uri:uuid:application:userInitiated:completionHandler:");
}

id objc_msgSend_fetchNumericPropertyOnMostRecentMapHead_logBeginMs_propertyName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchNumericPropertyOnMostRecentMapHead:logBeginMs:propertyName:error:");
}

id objc_msgSend_fetchOrCreateVerification_application_verificationInfo_fetchNow_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchOrCreateVerification:application:verificationInfo:fetchNow:error:");
}

id objc_msgSend_fetchPeer_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPeer:application:error:");
}

id objc_msgSend_fetchPeerHandles_application_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPeerHandles:application:complete:");
}

id objc_msgSend_fetchPeerVerificationInfos_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPeerVerificationInfos:completionBlock:");
}

id objc_msgSend_fetchPublicKeys_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPublicKeys:completionHandler:");
}

id objc_msgSend_fetchQuery_uuid_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchQuery:uuid:completionHandler:");
}

id objc_msgSend_fetchQuery_uuid_userInitiated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchQuery:uuid:userInitiated:completionHandler:");
}

id objc_msgSend_fetchQueryForKTRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchQueryForKTRequest:completionHandler:");
}

id objc_msgSend_fetchQueryForKTRequest_userInitiated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchQueryForKTRequest:userInitiated:completionHandler:");
}

id objc_msgSend_fetchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchQueue");
}

id objc_msgSend_fetchRPCSingleQuery_userInitiated_cachedYoungerThan_backgroundOpId_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRPCSingleQuery:userInitiated:cachedYoungerThan:backgroundOpId:completionHandler:");
}

id objc_msgSend_fetchRecordWithID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordWithID:completionHandler:");
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequest");
}

id objc_msgSend_fetchRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequest:completionHandler:");
}

id objc_msgSend_fetchRequestForUUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestForUUID:error:");
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestWithEntityName:");
}

id objc_msgSend_fetchRequestWithUri_application_accountKey_loggableDatas_youngerThan_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestWithUri:application:accountKey:loggableDatas:youngerThan:error:");
}

id objc_msgSend_fetchRevisionLogInclusionProof_uuid_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRevisionLogInclusionProof:uuid:completionHandler:");
}

id objc_msgSend_fetchSelfValidationState_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSelfValidationState:uri:error:");
}

id objc_msgSend_fetchSelfVerificationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSelfVerificationInfo:");
}

id objc_msgSend_fetchSelfVerificationInfo_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSelfVerificationInfo:completionBlock:");
}

id objc_msgSend_fetchSelfVerificationInfoForApplication_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSelfVerificationInfoForApplication:complete:");
}

id objc_msgSend_fetchServerRpcById_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchServerRpcById:error:");
}

id objc_msgSend_fetchSettings_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSettings:force:");
}

id objc_msgSend_fetchSyncedLoggableDataByDeviceIdHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSyncedLoggableDataByDeviceIdHash:");
}

id objc_msgSend_fetchSyncedLoggableDataByPushToken_registrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSyncedLoggableDataByPushToken:registrationData:");
}

id objc_msgSend_fetchTreeHead_isMapHead_application_logBeginTime_logType_revision_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTreeHead:isMapHead:application:logBeginTime:logType:revision:error:");
}

id objc_msgSend_fetchTreeHeadsWithoutHash_isMapHead_application_logBeginTime_logType_revision_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTreeHeadsWithoutHash:isMapHead:application:logBeginTime:logType:revision:error:");
}

id objc_msgSend_fieldNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fieldNumber");
}

id objc_msgSend_fieldType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fieldType");
}

id objc_msgSend_fieldWithNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fieldWithNumber:");
}

id objc_msgSend_file(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "file");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fillBackgroundStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillBackgroundStatus");
}

id objc_msgSend_fillInError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillInError");
}

id objc_msgSend_fillOptInState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillOptInState");
}

id objc_msgSend_fillSelfStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillSelfStatus");
}

id objc_msgSend_fillStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillStatus");
}

id objc_msgSend_fillSystemStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillSystemStatus");
}

id objc_msgSend_filterLoggableDatas_clientDataHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterLoggableDatas:clientDataHash:");
}

id objc_msgSend_filterLoggableDatas_deviceIdHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterLoggableDatas:deviceIdHash:");
}

id objc_msgSend_findStaticKeyByContact_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyByContact:error:");
}

id objc_msgSend_findStaticKeyByContactExternalURI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyByContactExternalURI:error:");
}

id objc_msgSend_findStaticKeyByContactIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyByContactIdentifier:error:");
}

id objc_msgSend_findStaticKeyByHandle_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyByHandle:error:");
}

id objc_msgSend_findStaticKeyByKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyByKey:error:");
}

id objc_msgSend_findStaticKeyStoreMappingByKey_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findStaticKeyStoreMappingByKey:complete:");
}

id objc_msgSend_finishDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishDate");
}

id objc_msgSend_finishOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishOperation");
}

id objc_msgSend_finishedInitialDispatches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedInitialDispatches");
}

id objc_msgSend_finishedOp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedOp");
}

id objc_msgSend_finishingBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishingBlock");
}

id objc_msgSend_fireTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fireTime");
}

id objc_msgSend_firstCKAccountFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstCKAccountFetch");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_fixed32List(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixed32List");
}

id objc_msgSend_fixed64List(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixed64List");
}

id objc_msgSend_fixupName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixupName");
}

id objc_msgSend_flag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flag");
}

id objc_msgSend_flagConditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flagConditions");
}

id objc_msgSend_flagHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flagHandler");
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flags");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flush");
}

id objc_msgSend_followStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "followStates");
}

id objc_msgSend_followUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "followUp");
}

id objc_msgSend_followUpItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "followUpItems");
}

id objc_msgSend_followup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "followup");
}

id objc_msgSend_followupTicket(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "followupTicket");
}

id objc_msgSend_forceRefresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceRefresh");
}

id objc_msgSend_forceReload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceReload");
}

id objc_msgSend_forceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceSync:");
}

id objc_msgSend_forceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceUpdate");
}

id objc_msgSend_forceValidateUUID_uri_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceValidateUUID:uri:completionBlock:");
}

id objc_msgSend_forcedConfigure_logClient_applicationHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forcedConfigure:logClient:applicationHandler:completionHandler:");
}

id objc_msgSend_foregroundSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foregroundSession");
}

id objc_msgSend_formatEventName_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatEventName:application:");
}

id objc_msgSend_formatEventName_application_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatEventName:application:state:");
}

id objc_msgSend_forwards(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forwards");
}

id objc_msgSend_fulfill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fulfill");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_futureBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureBlock");
}

id objc_msgSend_fuzzyDaysSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fuzzyDaysSinceDate:");
}

id objc_msgSend_fuzzyInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fuzzyInteger:");
}

id objc_msgSend_fuzzyNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fuzzyNumber:");
}

id objc_msgSend_fuzzyTimeSinceDateKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fuzzyTimeSinceDateKey:");
}

id objc_msgSend_fuzzyTimeSinceLastSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fuzzyTimeSinceLastSuccess:");
}

id objc_msgSend_garbageCollectEntity_predicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectEntity:predicate:error:");
}

id objc_msgSend_garbageCollectHeads_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectHeads:error:");
}

id objc_msgSend_garbageCollectRequests_olderThan_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectRequests:olderThan:error:");
}

id objc_msgSend_garbageCollectSMHs_logBeginMs_olderThanRevision_olderThanDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectSMHs:logBeginMs:olderThanRevision:olderThanDate:error:");
}

id objc_msgSend_garbageCollectSMTs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectSMTs:");
}

id objc_msgSend_garbageCollectSTHs_logBeginMs_olderThanDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectSTHs:logBeginMs:olderThanDate:error:");
}

id objc_msgSend_garbageCollectServerRPCs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectServerRPCs:");
}

id objc_msgSend_garbageCollectVerifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "garbageCollectVerifications:");
}

id objc_msgSend_getAggregateOptInState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAggregateOptInState:");
}

id objc_msgSend_getAggregateOptInStateForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAggregateOptInStateForApplication:error:");
}

id objc_msgSend_getAllOptInStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllOptInStates:");
}

id objc_msgSend_getAllOptInStatesAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllOptInStatesAndReturnError:");
}

id objc_msgSend_getBAAValidity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBAAValidity");
}

id objc_msgSend_getBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBool:");
}

id objc_msgSend_getBool_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBool:defaultValue:");
}

id objc_msgSend_getBytes_maxLength_usedLength_encoding_options_range_remainingRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:");
}

id objc_msgSend_getCachedOctagonStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCachedOctagonStatus");
}

id objc_msgSend_getCachedValidatePeerResults_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCachedValidatePeerResults:application:");
}

id objc_msgSend_getConfigBagEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConfigBagEnvironment");
}

id objc_msgSend_getCurrentKTPCSIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentKTPCSIdentity:error:");
}

id objc_msgSend_getCurrentOptInEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentOptInEntry:");
}

id objc_msgSend_getDeviceCertWithForcedFetch_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceCertWithForcedFetch:completionHandler:");
}

id objc_msgSend_getEnumTextFormatNameForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEnumTextFormatNameForIndex:");
}

id objc_msgSend_getEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEnvironment");
}

id objc_msgSend_getExistingExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getExistingExtension:");
}

id objc_msgSend_getExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getExtension:");
}

id objc_msgSend_getKeyTransparencyOptInEligiblityForApplication_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getKeyTransparencyOptInEligiblityForApplication:withCompletion:");
}

id objc_msgSend_getLatestSuccessfulSingleQueryForUri_application_requestYoungerThan_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLatestSuccessfulSingleQueryForUri:application:requestYoungerThan:error:");
}

id objc_msgSend_getLogDataForAccountKey_uri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLogDataForAccountKey:uri:");
}

id objc_msgSend_getOptIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptIn");
}

id objc_msgSend_getOptInForURI_application_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInForURI:application:complete:");
}

id objc_msgSend_getOptInHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInHistory:");
}

id objc_msgSend_getOptInHistory_store_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInHistory:store:error:");
}

id objc_msgSend_getOptInHistoryDiagnostic_store_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInHistoryDiagnostic:store:");
}

id objc_msgSend_getOptInOutWithExt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInOutWithExt");
}

id objc_msgSend_getOptInState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInState:");
}

id objc_msgSend_getOptInState_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInState:completionBlock:");
}

id objc_msgSend_getOptInStateForAccount_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInStateForAccount:complete:");
}

id objc_msgSend_getOptInStateForApplication_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInStateForApplication:complete:");
}

id objc_msgSend_getOptInStateWithUri_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOptInStateWithUri:application:error:");
}

id objc_msgSend_getOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOverride:");
}

id objc_msgSend_getPCSIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPCSIdentity:");
}

id objc_msgSend_getPendingFollowups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPendingFollowups");
}

id objc_msgSend_getPendingSmtUris_fetchLimit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPendingSmtUris:fetchLimit:error:");
}

id objc_msgSend_getQueryRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getQueryRequest:");
}

id objc_msgSend_getQueryResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getQueryResponse:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getReturnValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getReturnValue:");
}

id objc_msgSend_getSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSettings");
}

id objc_msgSend_getSettingsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSettingsData:");
}

id objc_msgSend_getSettingsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSettingsDate:");
}

id objc_msgSend_getSettingsNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSettingsNumber:");
}

id objc_msgSend_getSimpleMutationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSimpleMutationType");
}

id objc_msgSend_getStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStatus:");
}

id objc_msgSend_getUIStatusForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUIStatusForDate:");
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_getUnsigned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUnsigned:");
}

id objc_msgSend_globalSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalSettings");
}

id objc_msgSend_globalTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalTracker");
}

id objc_msgSend_gossip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gossip");
}

id objc_msgSend_groupList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupList");
}

id objc_msgSend_groupStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupStart");
}

id objc_msgSend_haltOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haltOperation");
}

id objc_msgSend_haltStateMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haltStateMachine");
}

id objc_msgSend_halted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "halted");
}

id objc_msgSend_handleBatchQueryResponse_queryRequest_receiptDate_fetchId_application_logClient_transparentDataHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBatchQueryResponse:queryRequest:receiptDate:fetchId:application:logClient:transparentDataHandler:completionHandler:");
}

id objc_msgSend_handleBatchQueryResponse_queryRequest_receiptDate_fetchId_error_queryInfoHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBatchQueryResponse:queryRequest:receiptDate:fetchId:error:queryInfoHandler:");
}

id objc_msgSend_handleBatchQueryResponse_queryRequest_receiptDate_fetchId_error_transparentDataHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBatchQueryResponse:queryRequest:receiptDate:fetchId:error:transparentDataHandler:");
}

id objc_msgSend_handleDownloadRecord_downloadData_downloadMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDownloadRecord:downloadData:downloadMetadata:");
}

id objc_msgSend_handleDownloadRecordFailure_task_downloadMetadata_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDownloadRecordFailure:task:downloadMetadata:error:");
}

id objc_msgSend_handleExternalRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleExternalRequest:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFlag:");
}

id objc_msgSend_handleInsertResponse_uri_fetchId_error_transparentDataHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInsertResponse:uri:fetchId:error:transparentDataHandler:");
}

id objc_msgSend_handleKTRequest_queryRequest_queryResponse_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleKTRequest:queryRequest:queryResponse:completionHandler:");
}

id objc_msgSend_handleKTRequestDownload_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleKTRequestDownload:context:");
}

id objc_msgSend_handleOperationResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleOperationResults:");
}

id objc_msgSend_handlePeerStateChange_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePeerStateChange:application:");
}

id objc_msgSend_handlePendingFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePendingFlag:");
}

id objc_msgSend_handlePendingMapHeadMMDs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePendingMapHeadMMDs:error:");
}

id objc_msgSend_handleQueryResponse_queryRequest_receiptDate_fetchId_error_rawDataHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleQueryResponse:queryRequest:receiptDate:fetchId:error:rawDataHandler:");
}

id objc_msgSend_handleQueryResponse_queryRequest_receiptDate_fetchId_error_transparentDataHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleQueryResponse:queryRequest:receiptDate:fetchId:error:transparentDataHandler:");
}

id objc_msgSend_handleQueryResponse_queryRequest_receiptDate_fetchId_validateType_ktCapable_error_transparentDataHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleQueryResponse:queryRequest:receiptDate:fetchId:validateType:ktCapable:error:transparentDataHandler:");
}

id objc_msgSend_handles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handles");
}

id objc_msgSend_hasAccountMismatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAccountMismatch:");
}

id objc_msgSend_hasBeenEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBeenEnabled");
}

id objc_msgSend_hasBeenUnlocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBeenUnlocked");
}

id objc_msgSend_hasChangeLogHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChangeLogHead");
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChanges");
}

id objc_msgSend_hasDeviceErrorForUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDeviceErrorForUri:");
}

id objc_msgSend_hasEndSlh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEndSlh");
}

id objc_msgSend_hasInclusionProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasInclusionProof");
}

id objc_msgSend_hasInternalDiagnostics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasInternalDiagnostics");
}

id objc_msgSend_hasMapEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMapEntry");
}

id objc_msgSend_hasObjectMapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasObjectMapHead");
}

id objc_msgSend_hasOptInAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOptInAfter:");
}

id objc_msgSend_hasOptInExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOptInExtension");
}

id objc_msgSend_hasPamHeadInPatProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPamHeadInPatProof");
}

id objc_msgSend_hasPatClosedProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPatClosedProof");
}

id objc_msgSend_hasPatConfigProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPatConfigProof");
}

id objc_msgSend_hasPatHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPatHead");
}

id objc_msgSend_hasPendingSingleQueryForUri_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingSingleQueryForUri:application:error:");
}

id objc_msgSend_hasPerApplicationTreeEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPerApplicationTreeEntry");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasReachedReliabilityThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasReachedReliabilityThreshold:");
}

id objc_msgSend_hasRecentlyDoneHSA2Upsell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRecentlyDoneHSA2Upsell");
}

id objc_msgSend_hasSignature(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSignature");
}

id objc_msgSend_hasSlh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSlh");
}

id objc_msgSend_hasSmh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSmh");
}

id objc_msgSend_hasStartSlh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStartSlh");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTltConfigProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTltConfigProof");
}

id objc_msgSend_hasTopLevelTreeEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTopLevelTreeEntry");
}

id objc_msgSend_hasUnknownSPKIHashError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUnknownSPKIHashError:");
}

id objc_msgSend_hasUriWitness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUriWitness");
}

id objc_msgSend_hasVrfPublicKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasVrfPublicKey");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hash");
}

id objc_msgSend_hashesOfPeersInPathToRootArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashesOfPeersInPathToRootArray");
}

id objc_msgSend_hashesOfPeersInPathToRootArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashesOfPeersInPathToRootArray_Count");
}

id objc_msgSend_haveDoneFixup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveDoneFixup:");
}

id objc_msgSend_haveIDSAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveIDSAccount:");
}

id objc_msgSend_haveIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveIdentity");
}

id objc_msgSend_haveNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveNetwork");
}

id objc_msgSend_havePendingRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "havePendingRecords");
}

id objc_msgSend_haveTreeHead_isMapHead_application_logBeginTime_logType_revision_gossip_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveTreeHead:isMapHead:application:logBeginTime:logType:revision:gossip:error:");
}

id objc_msgSend_healSelf_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "healSelf:completionBlock:");
}

id objc_msgSend_healableError_selfValidationResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "healableError:selfValidationResult:");
}

id objc_msgSend_historyTokenFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyTokenFromData:");
}

id objc_msgSend_holdStateMachineOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdStateMachineOperation");
}

id objc_msgSend_httpMethod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "httpMethod");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identity");
}

id objc_msgSend_identityCreated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityCreated");
}

id objc_msgSend_idmsFetchTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idmsFetchTime");
}

id objc_msgSend_idmsOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idmsOperations");
}

id objc_msgSend_idsAccountStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAccountStatus");
}

id objc_msgSend_idsAccountTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAccountTracker");
}

id objc_msgSend_idsAccountType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAccountType");
}

id objc_msgSend_idsAccounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAccounts");
}

id objc_msgSend_idsConfigBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsConfigBag");
}

id objc_msgSend_idsControllerQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsControllerQueue");
}

id objc_msgSend_idsDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDSID");
}

id objc_msgSend_idsDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDelegate");
}

id objc_msgSend_idsDeviceMutation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceMutation");
}

id objc_msgSend_idsID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsID");
}

id objc_msgSend_idsKTData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsKTData:");
}

id objc_msgSend_idsKTVerification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsKTVerification");
}

id objc_msgSend_idsMutation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsMutation");
}

id objc_msgSend_idsObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsObserver");
}

id objc_msgSend_idsOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsOperations");
}

id objc_msgSend_idsQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsQueue");
}

id objc_msgSend_idsRegistrationInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsRegistrationInterface");
}

id objc_msgSend_idsResponseTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsResponseTime");
}

id objc_msgSend_idsServerReportKTKeyWrong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsServerReportKTKeyWrong:");
}

id objc_msgSend_idsServerReportedWrong(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsServerReportedWrong");
}

id objc_msgSend_idsServerReportedWrongPublicKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsServerReportedWrongPublicKey");
}

id objc_msgSend_idsServiceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsServiceForIdentifier:");
}

id objc_msgSend_idsSignInController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsSignInController");
}

id objc_msgSend_idsURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsURI");
}

id objc_msgSend_ignoreAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreAction");
}

id objc_msgSend_ignoreFailedEvents_dataStore_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFailedEvents:dataStore:completionBlock:");
}

id objc_msgSend_ignoreFailure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFailure:error:");
}

id objc_msgSend_ignoreFailureForResults_application_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFailureForResults:application:completionBlock:");
}

id objc_msgSend_ignoreFailureForResults_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFailureForResults:error:");
}

id objc_msgSend_ignoreFailureForUri_application_status_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFailureForUri:application:status:error:");
}

id objc_msgSend_ignoredFailureExpiry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoredFailureExpiry");
}

id objc_msgSend_importFromCloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importFromCloud");
}

id objc_msgSend_inResetWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inResetWindow");
}

id objc_msgSend_inclusionProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inclusionProof");
}

id objc_msgSend_inclusionVerified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inclusionVerified");
}

id objc_msgSend_incrementIntegerPropertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementIntegerPropertyForKey:");
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "index");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_inflightCKFetchDependencies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inflightCKFetchDependencies");
}

id objc_msgSend_informativeText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "informativeText");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_init_nsnotificationCenterClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:nsnotificationCenterClass:");
}

id objc_msgSend_init_sourceStates_serialQueue_timeout_transitionOp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:sourceStates:serialQueue:timeout:transitionOp:");
}

id objc_msgSend_initAsSuccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsSuccess");
}

id objc_msgSend_initCloudDataStore_idsDelegate_configurationStore_notificationCenter_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initCloudDataStore:idsDelegate:configurationStore:notificationCenter:complete:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initGETWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initGETWithURL:");
}

id objc_msgSend_initGETWithURL_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initGETWithURL:application:");
}

id objc_msgSend_initIntending_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initIntending:errorState:");
}

id objc_msgSend_initNamed_serialQueue_path_initialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initNamed:serialQueue:path:initialRequest:");
}

id objc_msgSend_initPOSTWithURL_data_uuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initPOSTWithURL:data:uuid:");
}

id objc_msgSend_initPOSTWithURL_data_uuid_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initPOSTWithURL:data:uuid:application:");
}

id objc_msgSend_initPUSHWithURL_data_uuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initPUSHWithURL:data:uuid:");
}

id objc_msgSend_initPendingForUri_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initPendingForUri:application:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initSelfState_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initSelfState:uri:error:");
}

id objc_msgSend_initUnavailableForUri_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initUnavailableForUri:application:");
}

id objc_msgSend_initWithACAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithACAccount:");
}

id objc_msgSend_initWithAKRemoteDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAKRemoteDevice:");
}

id objc_msgSend_initWithAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnalytics:");
}

id objc_msgSend_initWithApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:");
}

id objc_msgSend_initWithApplication_context_stateMachine_account_store_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:context:stateMachine:account:store:");
}

id objc_msgSend_initWithApplication_dataStore_diskState_contextStore_settings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:dataStore:diskState:contextStore:settings:error:");
}

id objc_msgSend_initWithApplication_dataStore_response_contextStore_settings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:dataStore:response:contextStore:settings:error:");
}

id objc_msgSend_initWithApplication_dependencies_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:dependencies:intendedState:errorState:");
}

id objc_msgSend_initWithApplication_dependencies_isOptInSelfValidation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:dependencies:isOptInSelfValidation:");
}

id objc_msgSend_initWithApplication_dependencies_opId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:dependencies:opId:");
}

id objc_msgSend_initWithApplication_initialFill_dependencies_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:initialFill:dependencies:intendedState:errorState:");
}

id objc_msgSend_initWithApplication_opId_dependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:opId:dependencies:");
}

id objc_msgSend_initWithApplication_registrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplication:registrationData:");
}

id objc_msgSend_initWithApplicationID_dependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationID:dependencies:");
}

id objc_msgSend_initWithApplicationKeyStore_dataStore_applicationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationKeyStore:dataStore:applicationID:");
}

id objc_msgSend_initWithApplicationKeyStore_dataStore_applicationID_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationKeyStore:dataStore:applicationID:context:");
}

id objc_msgSend_initWithApplicationKeyStore_dataStore_smDataStore_staticKeyStore_logClient_applicationID_contextStore_accountKeyServer_stateMachine_kvs_cloudRecords_followup_settings_analyticsLogger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationKeyStore:dataStore:smDataStore:staticKeyStore:logClient:applicationID:contextStore:accountKeyServer:stateMachine:kvs:cloudRecords:followup:settings:analyticsLogger:");
}

id objc_msgSend_initWithBackgroundSession_transparencyAnalytics_dataStore_settings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBackgroundSession:transparencyAnalytics:dataStore:settings:");
}

id objc_msgSend_initWithBools_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBools:forKeys:count:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCkdatabase_analytics_context_zoneCreate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCkdatabase:analytics:context:zoneCreate:");
}

id objc_msgSend_initWithClass_messageName_fileDescription_fields_storageSize_wireFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClass:messageName:fileDescription:fields:storageSize:wireFormat:");
}

id objc_msgSend_initWithClientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientIdentifier:");
}

id objc_msgSend_initWithCodedInputStream_extensionRegistry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCodedInputStream:extensionRegistry:error:");
}

id objc_msgSend_initWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConcurrencyType:");
}

id objc_msgSend_initWithContactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContactStore:");
}

id objc_msgSend_initWithContainer_logger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainer:logger:");
}

id objc_msgSend_initWithContainerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:");
}

id objc_msgSend_initWithContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerIdentifier:");
}

id objc_msgSend_initWithContainerIdentifier_environment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerIdentifier:environment:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithContext_settings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:settings:");
}

id objc_msgSend_initWithContext_zone_database_hostInfo_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:zone:database:hostInfo:delegate:");
}

id objc_msgSend_initWithContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContextData:");
}

id objc_msgSend_initWithControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithControl:");
}

id objc_msgSend_initWithController_followup_logger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithController:followup:logger:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:error:");
}

id objc_msgSend_initWithData_extensionRegistry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:extensionRegistry:error:");
}

id objc_msgSend_initWithDataStore_configBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:configBag:");
}

id objc_msgSend_initWithDataStore_notificationCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:notificationCenter:");
}

id objc_msgSend_initWithDataStore_settings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:settings:");
}

id objc_msgSend_initWithDataStore_staticKeyStore_keyStore_cloudRecords_accountKeyServer_followup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:staticKeyStore:keyStore:cloudRecords:accountKeyServer:followup:");
}

id objc_msgSend_initWithDataStore_staticKeyStore_keyStore_cloudRecords_accountKeyServer_stateMachine_kvs_followup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:staticKeyStore:keyStore:cloudRecords:accountKeyServer:stateMachine:kvs:followup:");
}

id objc_msgSend_initWithDataStore_workloop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataStore:workloop:");
}

id objc_msgSend_initWithDependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:");
}

id objc_msgSend_initWithDependencies_application_pcs_idsRegistrationInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:application:pcs:idsRegistrationInterface:");
}

id objc_msgSend_initWithDependencies_forceUpdate_intendedState_errorState_idsRegistrationInterface_signatureTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:forceUpdate:intendedState:errorState:idsRegistrationInterface:signatureTracker:");
}

id objc_msgSend_initWithDependencies_initialFetch_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:initialFetch:intendedState:errorState:");
}

id objc_msgSend_initWithDependencies_intendedState_errorState_selfValidationResult_stateMachine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:intendedState:errorState:selfValidationResult:stateMachine:");
}

id objc_msgSend_initWithDependencies_intendedState_errorState_stateMachine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:intendedState:errorState:stateMachine:");
}

id objc_msgSend_initWithDependencies_intendedState_errorState_triggerInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:intendedState:errorState:triggerInterface:");
}

id objc_msgSend_initWithDependencies_opId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:opId:");
}

id objc_msgSend_initWithDependencies_pcsOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:pcsOperation:");
}

id objc_msgSend_initWithDependencies_reason_retryScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:reason:retryScheduler:");
}

id objc_msgSend_initWithDependencies_specificUser_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:specificUser:intendedState:errorState:");
}

id objc_msgSend_initWithDependencies_timeout_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependencies:timeout:intendedState:errorState:");
}

id objc_msgSend_initWithDependenics_intendedState_errorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependenics:intendedState:errorState:");
}

id objc_msgSend_initWithDependenics_intendedState_errorState_optinStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependenics:intendedState:errorState:optinStates:");
}

id objc_msgSend_initWithDependenics_optInRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDependenics:optInRequest:");
}

id objc_msgSend_initWithDeps_application_uris_logClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeps:application:uris:logClient:");
}

id objc_msgSend_initWithDeps_initialFetch_userInteractive_reason_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeps:initialFetch:userInteractive:reason:context:");
}

id objc_msgSend_initWithDeps_source_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeps:source:context:");
}

id objc_msgSend_initWithDew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDew:");
}

id objc_msgSend_initWithDiskKeyStore_application_settings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDiskKeyStore:application:settings:error:");
}

id objc_msgSend_initWithDistributedNotificationCenter_octagonControl_ckksControl_logger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDistributedNotificationCenter:octagonControl:ckksControl:logger:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDoubles_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDoubles:forKeys:count:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithFetchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:");
}

id objc_msgSend_initWithFieldDescription_descriptorFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFieldDescription:descriptorFlags:");
}

id objc_msgSend_initWithFileStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileStorage:");
}

id objc_msgSend_initWithFlag_after_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlag:after:");
}

id objc_msgSend_initWithFlag_conditions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlag:conditions:");
}

id objc_msgSend_initWithFlag_conditions_delayInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlag:conditions:delayInSeconds:");
}

id objc_msgSend_initWithFlag_conditions_scheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlag:conditions:scheduler:");
}

id objc_msgSend_initWithFlag_delayInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFlag:delayInSeconds:");
}

id objc_msgSend_initWithFloats_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFloats:forKeys:count:");
}

id objc_msgSend_initWithIDSAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSAccount:");
}

id objc_msgSend_initWithIDSAccountController_lockStateTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSAccountController:lockStateTracker:");
}

id objc_msgSend_initWithIDSDSID_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSDSID:type:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdsAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdsAccount:");
}

id objc_msgSend_initWithIdsDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdsDevice:");
}

id objc_msgSend_initWithInt32s_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInt32s:forKeys:count:");
}

id objc_msgSend_initWithInt64s_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInt64s:forKeys:count:");
}

id objc_msgSend_initWithKTLogClient_dataStoreController_keyStore_staticKeyStore_transcript_cloudKitContainer_workloop_logger_apsConnection_settings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKTLogClient:dataStoreController:keyStore:staticKeyStore:transcript:cloudKitContainer:workloop:logger:apsConnection:settings:");
}

id objc_msgSend_initWithKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:");
}

id objc_msgSend_initWithKey_certificates_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:certificates:failure:");
}

id objc_msgSend_initWithKeyBag_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyBag:application:");
}

id objc_msgSend_initWithKeyData_tltLeafs_intermediates_patConfigProof_tltConfigProof_patClosedProof_pamHeadInPatProof_application_allowOldKeys_settings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyData:tltLeafs:intermediates:patConfigProof:tltConfigProof:patClosedProof:pamHeadInPatProof:application:allowOldKeys:settings:error:");
}

id objc_msgSend_initWithKeyStore_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyStore:application:");
}

id objc_msgSend_initWithLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLoggableDatas:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithMessage_typeURLPrefix_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessage:typeURLPrefix:error:");
}

id objc_msgSend_initWithMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMutation:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_delay_keepProcessAlive_dependencyDescriptionCode_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:delay:keepProcessAlive:dependencyDescriptionCode:block:");
}

id objc_msgSend_initWithName_fields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:fields:");
}

id objc_msgSend_initWithName_initialDelay_continuingDelay_keepProcessAlive_dependencyDescriptionCode_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:initialDelay:continuingDelay:keepProcessAlive:dependencyDescriptionCode:block:");
}

id objc_msgSend_initWithName_initialDelay_exponentialBackoff_maximumDelay_keepProcessAlive_dependencyDescriptionCode_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:initialDelay:exponentialBackoff:maximumDelay:keepProcessAlive:dependencyDescriptionCode:block:");
}

id objc_msgSend_initWithName_managedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:managedObjectModel:");
}

id objc_msgSend_initWithName_states_flags_initialState_queue_stateEngine_lockStateTracker_reachabilityTracker_idsConfigBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:states:flags:initialState:queue:stateEngine:lockStateTracker:reachabilityTracker:idsConfigBag:");
}

id objc_msgSend_initWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:value:");
}

id objc_msgSend_initWithNamedDelegatePort_apsConnectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNamedDelegatePort:apsConnectionClass:");
}

id objc_msgSend_initWithNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNumber:");
}

id objc_msgSend_initWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:count:");
}

id objc_msgSend_initWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:forKeys:count:");
}

id objc_msgSend_initWithOptInRecords_uriToSMT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptInRecords:uriToSMT:");
}

id objc_msgSend_initWithOptions_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:completionBlock:");
}

id objc_msgSend_initWithOutputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputStream:");
}

id objc_msgSend_initWithOutputStream_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputStream:data:");
}

id objc_msgSend_initWithPackage_objcPrefix_syntax_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackage:objcPrefix:syntax:");
}

id objc_msgSend_initWithPackage_syntax_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackage:syntax:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPersistentContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistentContainer:");
}

id objc_msgSend_initWithPositon_trustedKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPositon:trustedKeyStore:");
}

id objc_msgSend_initWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrefixedURI:");
}

id objc_msgSend_initWithProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProvider:");
}

id objc_msgSend_initWithPublicCloudDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPublicCloudDatabase:");
}

id objc_msgSend_initWithPublicKeysResponse_application_settings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPublicKeysResponse:application:settings:error:");
}

id objc_msgSend_initWithPushToken_registrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPushToken:registrationData:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithQueue_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:flags:");
}

id objc_msgSend_initWithRecordName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:");
}

id objc_msgSend_initWithRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecords:");
}

id objc_msgSend_initWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:");
}

id objc_msgSend_initWithRequest_responseData_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:responseData:metadata:");
}

id objc_msgSend_initWithRequiredKeys_settings_directory_configApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequiredKeys:settings:directory:configApp:");
}

id objc_msgSend_initWithRocketName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRocketName:");
}

id objc_msgSend_initWithSIGTERMNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSIGTERMNotification:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_initWithSingleDataRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSingleDataRecord:");
}

id objc_msgSend_initWithSpecificUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSpecificUser:");
}

id objc_msgSend_initWithState_pathStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithState:pathStep:");
}

id objc_msgSend_initWithStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStorage:");
}

id objc_msgSend_initWithStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStore:");
}

id objc_msgSend_initWithStoreIdentifier_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreIdentifier:type:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithTargetState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetState:");
}

id objc_msgSend_initWithTrustedKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTrustedKeyStore:");
}

id objc_msgSend_initWithTrustedKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTrustedKeys:");
}

id objc_msgSend_initWithType_application_uri_accountKey_serverLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:application:uri:accountKey:serverLoggableDatas:");
}

id objc_msgSend_initWithType_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:status:");
}

id objc_msgSend_initWithUInt32s_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUInt32s:forKeys:count:");
}

id objc_msgSend_initWithUInt64s_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUInt64s:forKeys:count:");
}

id objc_msgSend_initWithURI_application_dependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURI:application:dependencies:");
}

id objc_msgSend_initWithURI_smtTimestamp_optIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURI:smtTimestamp:optIn:");
}

id objc_msgSend_initWithURL_data_timeout_httpMethod_uuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:data:timeout:httpMethod:uuid:");
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDBytes:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUri_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUri:application:");
}

id objc_msgSend_initWithUri_application_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUri:application:failure:");
}

id objc_msgSend_initWithUri_application_ktResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUri:application:ktResult:");
}

id objc_msgSend_initWithUri_application_ktResult_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUri:application:ktResult:failure:");
}

id objc_msgSend_initWithUri_application_ktResult_transparentData_loggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUri:application:ktResult:transparentData:loggableDatas:");
}

id objc_msgSend_initWithUriVRFOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUriVRFOutput:");
}

id objc_msgSend_initWithUriVRFOutput_mapLeaf_pendingSMTs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUriVRFOutput:mapLeaf:pendingSMTs:error:");
}

id objc_msgSend_initWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserInfo:");
}

id objc_msgSend_initWithValidationFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidationFunction:");
}

id objc_msgSend_initWithValidationFunction_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidationFunction:capacity:");
}

id objc_msgSend_initWithValidationFunction_rawValues_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidationFunction:rawValues:count:");
}

id objc_msgSend_initWithValidationFunction_rawValues_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidationFunction:rawValues:forKeys:count:");
}

id objc_msgSend_initWithValueArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValueArray:");
}

id objc_msgSend_initWithValues_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValues:count:");
}

id objc_msgSend_initWithWorkloop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkloop:");
}

id objc_msgSend_initWithWorkloop_sessionDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkloop:sessionDelegate:");
}

id objc_msgSend_initialDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialDelay");
}

id objc_msgSend_initialFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialFetch");
}

id objc_msgSend_initialFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialFill");
}

id objc_msgSend_initialState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialState");
}

id objc_msgSend_initializeCloudKitSchemaWithOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeCloudKitSchemaWithOptions:error:");
}

id objc_msgSend_initializeServerRPC_application_backgroundOpId_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeServerRPC:application:backgroundOpId:request:");
}

id objc_msgSend_initializedComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializedComplete");
}

id objc_msgSend_initializingOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializingOperation");
}

id objc_msgSend_initiallyFetched(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiallyFetched");
}

id objc_msgSend_initiateCredentialRenewal_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiateCredentialRenewal:completionHandler:");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectForEntityForName:inManagedObjectContext:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_inspectErrorForRetryAfter_trigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inspectErrorForRetryAfter:trigger:");
}

id objc_msgSend_instance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instance");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_intendedPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intendedPath");
}

id objc_msgSend_intendedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intendedState");
}

id objc_msgSend_interface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interface");
}

id objc_msgSend_interiorNodeForLeftData_rightData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interiorNodeForLeftData:rightData:");
}

id objc_msgSend_intermediatesArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intermediatesArray");
}

id objc_msgSend_internalClear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalClear:");
}

id objc_msgSend_internalResizeToCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalResizeToCapacity:");
}

id objc_msgSend_internalSuccesses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalSuccesses");
}

id objc_msgSend_invalidateContactsSyncing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateContactsSyncing");
}

id objc_msgSend_invalidateTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateTimeout");
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invoke");
}

id objc_msgSend_isAccountIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAccountIdentity:error:");
}

id objc_msgSend_isAccountKTCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAccountKTCapable:");
}

id objc_msgSend_isAccountsErrorRetryable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAccountsErrorRetryable:");
}

id objc_msgSend_isActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActive:");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isClosed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isClosed");
}

id objc_msgSend_isCloudKitManateeAcountAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCloudKitManateeAcountAvailable");
}

id objc_msgSend_isCurrentlyReliable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentlyReliable:");
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeleted");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExecuting");
}

id objc_msgSend_isExpectedFailure_expected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpectedFailure:expected:");
}

id objc_msgSend_isFailureIgnoredForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFailureIgnoredForDate:");
}

id objc_msgSend_isFailureResolvedAndSeenByDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFailureResolvedAndSeenByDate:");
}

id objc_msgSend_isFieldTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFieldTag:");
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFinished");
}

id objc_msgSend_isFollowupEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFollowupEnabled");
}

id objc_msgSend_isICDPEnabledForDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isICDPEnabledForDSID:");
}

id objc_msgSend_isInitialFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInitialFetch");
}

id objc_msgSend_isInitialized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInitialized");
}

id objc_msgSend_isKTDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKTDisabled");
}

id objc_msgSend_isKTKeyDifferent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKTKeyDifferent:");
}

id objc_msgSend_isKeyAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKeyAvailable:");
}

id objc_msgSend_isKindOfEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKindOfEntity:");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isLockedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLockedError:");
}

id objc_msgSend_isMapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMapHead");
}

id objc_msgSend_isMapStillPopulating_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMapStillPopulating:logBeginMs:error:");
}

id objc_msgSend_isNetworkError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNetworkError:");
}

id objc_msgSend_isNetworkFailureError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNetworkFailureError:");
}

id objc_msgSend_isOptInSelfValidation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOptInSelfValidation");
}

id objc_msgSend_isPackable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPackable");
}

id objc_msgSend_isPending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPending");
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReady");
}

id objc_msgSend_isRepeated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRepeated");
}

id objc_msgSend_isRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRequired");
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupported");
}

id objc_msgSend_isValidEnumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidEnumValue:");
}

id objc_msgSend_isValidJSONObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidJSONObject:");
}

id objc_msgSend_isVirtualMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVirtualMachine");
}

id objc_msgSend_isWireFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWireFormat");
}

id objc_msgSend_issuanceGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issuanceGroup");
}

id objc_msgSend_issuanceQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issuanceQueue");
}

id objc_msgSend_issueCert_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueCert:completionHandler:");
}

id objc_msgSend_itemForType_eventId_infoLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemForType:eventId:infoLink:");
}

id objc_msgSend_jsonDictFromPlistDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsonDictFromPlistDict:");
}

id objc_msgSend_jsonifyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsonifyError:");
}

id objc_msgSend_kbInfoArticleUrl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kbInfoArticleUrl");
}

id objc_msgSend_keepProcessAlive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keepProcessAlive");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key");
}

id objc_msgSend_keyBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyBag");
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyEnumerator");
}

id objc_msgSend_keyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyStore");
}

id objc_msgSend_keyStoreFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyStoreFileName");
}

id objc_msgSend_ktAccountKeyErrorCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktAccountKeyErrorCode");
}

id objc_msgSend_ktAccountKeyTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktAccountKeyTimestamp");
}

id objc_msgSend_ktAccountPublicIDWithPublicKeyInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktAccountPublicIDWithPublicKeyInfo:error:");
}

id objc_msgSend_ktAccountPublicIDWithStorageString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktAccountPublicIDWithStorageString:error:");
}

id objc_msgSend_ktAccountStatus_idsAccountsTracker_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktAccountStatus:idsAccountsTracker:error:");
}

id objc_msgSend_ktApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktApplication");
}

id objc_msgSend_ktApplicationToKTRegStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktApplicationToKTRegStatus");
}

id objc_msgSend_ktCapable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktCapable");
}

id objc_msgSend_ktDataForRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktDataForRegistration");
}

id objc_msgSend_ktDataSignature(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktDataSignature");
}

id objc_msgSend_ktDisable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktDisable");
}

id objc_msgSend_ktFollowupStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktFollowupStatus");
}

id objc_msgSend_ktLogClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktLogClient");
}

id objc_msgSend_ktLogData_accountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktLogData:accountKey:");
}

id objc_msgSend_ktOptInErrorCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktOptInErrorCode");
}

id objc_msgSend_ktOptInStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktOptInStatus");
}

id objc_msgSend_ktOptInTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktOptInTimestamp");
}

id objc_msgSend_ktPublicAccountKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktPublicAccountKey");
}

id objc_msgSend_ktResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktResult");
}

id objc_msgSend_ktStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktStatus");
}

id objc_msgSend_ktStorageString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktStorageString");
}

id objc_msgSend_ktVerifyError_code_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ktVerifyError:code:");
}

id objc_msgSend_kt_currentTimeMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_currentTimeMs");
}

id objc_msgSend_kt_dataWithHexString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_dataWithHexString:");
}

id objc_msgSend_kt_dataWithUint64_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_dataWithUint64:length:");
}

id objc_msgSend_kt_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_dateFromString:");
}

id objc_msgSend_kt_dateToString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_dateToString");
}

id objc_msgSend_kt_fuzzyDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_fuzzyDate");
}

id objc_msgSend_kt_hexString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_hexString");
}

id objc_msgSend_kt_isEqualWithinOneMillisecond_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_isEqualWithinOneMillisecond:");
}

id objc_msgSend_kt_random(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_random");
}

id objc_msgSend_kt_requestId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_requestId");
}

id objc_msgSend_kt_sha256(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_sha256");
}

id objc_msgSend_kt_sha256WithSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_sha256WithSalt:");
}

id objc_msgSend_kt_toISO_8601_UTCString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kt_toISO_8601_UTCString");
}

id objc_msgSend_kvs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kvs");
}

id objc_msgSend_kvsOptInOutEntry_before_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kvsOptInOutEntry:before:");
}

id objc_msgSend_lastCKFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCKFetch");
}

id objc_msgSend_lastCKFetchWithDeps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCKFetchWithDeps:");
}

id objc_msgSend_lastCheckIDSRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCheckIDSRegistration");
}

id objc_msgSend_lastDutyCycle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDutyCycle");
}

id objc_msgSend_lastDutyCycle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDutyCycle:");
}

id objc_msgSend_lastDutyCycleSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDutyCycleSuccess:");
}

id objc_msgSend_lastFetchIDMS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastFetchIDMS");
}

id objc_msgSend_lastFetchIDSSelf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastFetchIDSSelf");
}

id objc_msgSend_lastFetchKTSelf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastFetchKTSelf");
}

id objc_msgSend_lastForceSyncKVS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastForceSyncKVS");
}

id objc_msgSend_lastIDSCacheUIStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastIDSCacheUIStatus");
}

id objc_msgSend_lastLocalFetchTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastLocalFetchTime");
}

id objc_msgSend_lastMessagesStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastMessagesStatus");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPhoneAccountStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPhoneAccountStatus");
}

id objc_msgSend_lastPublicKeyRefresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPublicKeyRefresh");
}

id objc_msgSend_lastPush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPush");
}

id objc_msgSend_lastRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastRegistration");
}

id objc_msgSend_lastSelfIDSFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSelfIDSFetch:");
}

id objc_msgSend_lastSelfValidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSelfValidate");
}

id objc_msgSend_lastSignalIDS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSignalIDS");
}

id objc_msgSend_lastUnlockedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastUnlockedTime");
}

id objc_msgSend_lastValidateSelf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastValidateSelf");
}

id objc_msgSend_lastValidateSelfOptIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastValidateSelfOptIn");
}

id objc_msgSend_latestConsistencyVerifiedTreeHeadRevision_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestConsistencyVerifiedTreeHeadRevision:logBeginMs:error:");
}

id objc_msgSend_latestConsistencyVerifiedTreeHeadSTH_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestConsistencyVerifiedTreeHeadSTH:logBeginMs:error:");
}

id objc_msgSend_launch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launch");
}

id objc_msgSend_launchCloudSyncing_initialDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchCloudSyncing:initialDelay:");
}

id objc_msgSend_leafHash_index_treeId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leafHash:index:treeId:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lengthDelimitedList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthDelimitedList");
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthOfBytesUsingEncoding:");
}

id objc_msgSend_listPeerOverrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listPeerOverrides");
}

id objc_msgSend_listStaticKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listStaticKey:");
}

id objc_msgSend_liveRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "liveRequest");
}

id objc_msgSend_liveRequestReceived(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "liveRequestReceived");
}

id objc_msgSend_loadAccountMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAccountMetadata");
}

id objc_msgSend_loadComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadComplete");
}

id objc_msgSend_loadPersistentStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStores");
}

id objc_msgSend_loadPersistentStoresWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStoresWithCompletionHandler:");
}

id objc_msgSend_loadedStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadedStore");
}

id objc_msgSend_localNC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localNC");
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizations");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForKey_value_table_localization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:localization:");
}

id objc_msgSend_lockStateProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockStateProvider");
}

id objc_msgSend_lockStateTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockStateTracker");
}

id objc_msgSend_lockedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockedError:");
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "log");
}

id objc_msgSend_logBeginTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logBeginTime");
}

id objc_msgSend_logBeginningMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logBeginningMs");
}

id objc_msgSend_logClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logClient");
}

id objc_msgSend_logEntryArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEntryArray");
}

id objc_msgSend_logFinishFailureEvent_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logFinishFailureEvent:error:");
}

id objc_msgSend_logFinishSuccessEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logFinishSuccessEvent:");
}

id objc_msgSend_logHardFailureForEventNamed_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logHardFailureForEventNamed:withAttributes:");
}

id objc_msgSend_logHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logHead");
}

id objc_msgSend_logHeadHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logHeadHash");
}

id objc_msgSend_logMetric_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logMetric:withName:");
}

id objc_msgSend_logMetricsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logMetricsForApplication:error:");
}

id objc_msgSend_logRequestMetricsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logRequestMetricsForApplication:error:");
}

id objc_msgSend_logResultForEvent_hardFailure_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logResultForEvent:hardFailure:result:");
}

id objc_msgSend_logResultForEvent_hardFailure_result_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logResultForEvent:hardFailure:result:withAttributes:");
}

id objc_msgSend_logSMTMetricsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSMTMetricsForApplication:error:");
}

id objc_msgSend_logSTHMetricsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSTHMetricsForApplication:error:");
}

id objc_msgSend_logSharedMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSharedMetrics");
}

id objc_msgSend_logSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSize");
}

id objc_msgSend_logSoftFailureForEventNamed_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSoftFailureForEventNamed:withAttributes:");
}

id objc_msgSend_logStartEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logStartEvent:");
}

id objc_msgSend_logSuccessForEventNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSuccessForEventNamed:");
}

id objc_msgSend_logType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logType");
}

id objc_msgSend_loggableData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loggableData");
}

id objc_msgSend_loggableDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loggableDatas");
}

id objc_msgSend_logger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logger");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longValue");
}

id objc_msgSend_machineId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "machineId");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainQueueDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueueDataStore");
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainRunLoop");
}

id objc_msgSend_makeOperationDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeOperationDependency");
}

id objc_msgSend_makeReports_additionalData_auditorURI_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeReports:additionalData:auditorURI:logClient:completionBlock:");
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectContext");
}

id objc_msgSend_managedObjectContextWithMergePolicy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectContextWithMergePolicy");
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectModel");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager");
}

id objc_msgSend_manateeChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manateeChanged");
}

id objc_msgSend_manateeStatusForReporting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manateeStatusForReporting");
}

id objc_msgSend_manateeViewChangedScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manateeViewChangedScheduler");
}

id objc_msgSend_mapContactsToIDS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapContactsToIDS:");
}

id objc_msgSend_mapEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapEntry");
}

id objc_msgSend_mapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapHead");
}

id objc_msgSend_mapHeadHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapHeadHash");
}

id objc_msgSend_mapHeadUpdated_populating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapHeadUpdated:populating:");
}

id objc_msgSend_mapKeyDataType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapKeyDataType");
}

id objc_msgSend_mapLeaf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapLeaf");
}

id objc_msgSend_mapLeafWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapLeafWithError:");
}

id objc_msgSend_mapStaticKeyToStoreEntry_handles_moc_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapStaticKeyToStoreEntry:handles:moc:error:");
}

id objc_msgSend_mapStillPopulating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapStillPopulating");
}

id objc_msgSend_mapType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapType");
}

id objc_msgSend_mappings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappings");
}

id objc_msgSend_markAccountsWithMutationMs_except_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markAccountsWithMutationMs:except:");
}

id objc_msgSend_markClientDatasForAppVersion_mutationMs_except_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markClientDatasForAppVersion:mutationMs:except:");
}

id objc_msgSend_markWithMutationMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markWithMutationMs:");
}

id objc_msgSend_marked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marked:");
}

id objc_msgSend_markedForDeletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markedForDeletion");
}

id objc_msgSend_markedForDeletionMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markedForDeletionMs");
}

id objc_msgSend_markedSigned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markedSigned");
}

id objc_msgSend_maximumDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumDelay");
}

id objc_msgSend_maybeCreateNewCKFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeCreateNewCKFetch");
}

id objc_msgSend_maybeCreateServerOptInFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeCreateServerOptInFetch");
}

id objc_msgSend_maybeDoFastExit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeDoFastExit");
}

id objc_msgSend_maybeUpdateMonitorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeUpdateMonitorState:");
}

id objc_msgSend_member_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "member:");
}

id objc_msgSend_memoizedKTSelfStatusResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memoizedKTSelfStatusResult:");
}

id objc_msgSend_mergeByPropertyStoreTrumpMergePolicy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeByPropertyStoreTrumpMergePolicy");
}

id objc_msgSend_mergeDelimitedFromCodedInputStream_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeDelimitedFromCodedInputStream:extensionRegistry:");
}

id objc_msgSend_mergeFieldFrom_input_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFieldFrom:input:");
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergeFromCodedInputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFromCodedInputStream:");
}

id objc_msgSend_mergeFromCodedInputStream_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFromCodedInputStream:extensionRegistry:");
}

id objc_msgSend_mergeFromData_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFromData:extensionRegistry:");
}

id objc_msgSend_mergeResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeResult");
}

id objc_msgSend_mergeUnknownFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeUnknownFields:");
}

id objc_msgSend_mergeVarintField_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeVarintField:value:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "message");
}

id objc_msgSend_messageClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageClass");
}

id objc_msgSend_messagesStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagesStatus");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadata");
}

id objc_msgSend_metadataForInsertResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForInsertResponse:");
}

id objc_msgSend_methodReturnType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodReturnType");
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_metricsForResult_type_logger_applicationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsForResult:type:logger:applicationID:");
}

id objc_msgSend_metricsRegistration_idsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsRegistration_idsView");
}

id objc_msgSend_metricsRegistration_ktView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsRegistration_ktView");
}

id objc_msgSend_metricsTimeToCreate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsTimeToCreate");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_missingValidateSelfFallbackDiagnostics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "missingValidateSelfFallbackDiagnostics");
}

id objc_msgSend_mmdVerified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mmdVerified");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_mostRecentCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentCompleted");
}

id objc_msgSend_mostRecentSuccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentSuccess");
}

id objc_msgSend_mostRecentVerification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentVerification");
}

id objc_msgSend_moveAsideDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveAsideDatabase:");
}

id objc_msgSend_movedDatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "movedDatabase");
}

id objc_msgSend_msgClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msgClass");
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableBytes");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_mutableCopyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopyWithZone:");
}

id objc_msgSend_mutableFieldForNumber_create_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableFieldForNumber:create:");
}

id objc_msgSend_mutableStateConditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableStateConditions");
}

id objc_msgSend_mutation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutation");
}

id objc_msgSend_mutationMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutationMs");
}

id objc_msgSend_mutationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutationType");
}

id objc_msgSend_mutationVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutationVersion");
}

id objc_msgSend_mutationsFromSMTs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutationsFromSMTs:error:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_named_entering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "named:entering:");
}

id objc_msgSend_named_intending_errorState_withBlockTakingSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "named:intending:errorState:withBlockTakingSelf:");
}

id objc_msgSend_named_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "named:withBlock:");
}

id objc_msgSend_named_withBlockTakingSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "named:withBlockTakingSelf:");
}

id objc_msgSend_nanos(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nanos");
}

id objc_msgSend_needsReauthorization_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsReauthorization:metadata:");
}

id objc_msgSend_needsRefresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsRefresh");
}

id objc_msgSend_needsRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsRetry:");
}

id objc_msgSend_needsTimeShift_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsTimeShift:metadata:");
}

id objc_msgSend_networkMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkMonitor");
}

id objc_msgSend_networkTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkTimeout");
}

id objc_msgSend_networkTimeoutOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkTimeoutOperation");
}

id objc_msgSend_networkWithFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkWithFeedback:");
}

id objc_msgSend_networkingWorkloop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkingWorkloop");
}

id objc_msgSend_newBackgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBackgroundContext");
}

id objc_msgSend_newCKFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCKFetch:");
}

id objc_msgSend_newCKRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCKRequests");
}

id objc_msgSend_newServerOptInFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newServerOptInFetch:");
}

id objc_msgSend_newServerOptInRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newServerOptInRequests");
}

id objc_msgSend_newestMapRevision_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newestMapRevision:logBeginMs:error:");
}

id objc_msgSend_nextFireTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextFireTime");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nextState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextState");
}

id objc_msgSend_nextStateMachineCycleOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextStateMachineCycleOperation");
}

id objc_msgSend_nextStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextStep:");
}

id objc_msgSend_nfs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nfs");
}

id objc_msgSend_nfsReporting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nfsReporting");
}

id objc_msgSend_nodeBytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeBytes");
}

id objc_msgSend_nodePosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodePosition");
}

id objc_msgSend_nodeType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeType");
}

id objc_msgSend_noteEventNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteEventNamed:");
}

id objc_msgSend_noteLaunchSequence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteLaunchSequence:");
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notification");
}

id objc_msgSend_notification_message_activateAction_clearAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notification:message:activateAction:clearAction:");
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationCenter");
}

id objc_msgSend_notificationKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationKey");
}

id objc_msgSend_notificationKeyForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationKeyForApplication:");
}

id objc_msgSend_notifyBackgroundValidationFailure_data_type_serverHint_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyBackgroundValidationFailure:data:type:serverHint:failure:");
}

id objc_msgSend_notifyCKAccountStatusChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyCKAccountStatusChange:");
}

id objc_msgSend_notifyIDSRegistrationCorrect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyIDSRegistrationCorrect");
}

id objc_msgSend_notifyOptInStatusChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyOptInStatusChanged");
}

id objc_msgSend_notifyPushChange_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyPushChange:userInfo:");
}

id objc_msgSend_notifyTreeResetDetected_logTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyTreeResetDetected:logTimestamp:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "now");
}

id objc_msgSend_nsDNC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nsDNC");
}

id objc_msgSend_nsnotificationCenterClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nsnotificationCenterClass");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_number(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "number");
}

id objc_msgSend_numberPropertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberPropertyForKey:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objcPrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objcPrefix");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectEnumerator");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectMapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectMapHead");
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_octagonControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonControl");
}

id objc_msgSend_octagonObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonObserver");
}

id objc_msgSend_octagonOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonOperations");
}

id objc_msgSend_octagonStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonStatus:");
}

id objc_msgSend_octagonToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonToken");
}

id objc_msgSend_octagonTrusted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "octagonTrusted");
}

id objc_msgSend_oldAppRootCertsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldAppRootCertsArray");
}

id objc_msgSend_oldAppRootCertsArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldAppRootCertsArray_Count");
}

id objc_msgSend_oldTltRootCertsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldTltRootCertsArray");
}

id objc_msgSend_oldTltRootCertsArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldTltRootCertsArray_Count");
}

id objc_msgSend_onMocCountEntity_predicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocCountEntity:predicate:error:");
}

id objc_msgSend_onMocFetchVerificationForVerificationId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocFetchVerificationForVerificationId:error:");
}

id objc_msgSend_onMocLogVerificationMetricsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocLogVerificationMetricsForApplication:error:");
}

id objc_msgSend_onMocSetMapHead_inclusionResult_inclusionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocSetMapHead:inclusionResult:inclusionError:");
}

id objc_msgSend_onMocSetMapHead_mmdResult_mmdError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocSetMapHead:mmdResult:mmdError:");
}

id objc_msgSend_onMocSetMapHead_signatureResult_signatureError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocSetMapHead:signatureResult:signatureError:");
}

id objc_msgSend_onMocSetPendingResultForVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onMocSetPendingResultForVerification:");
}

id objc_msgSend_onQueueDrain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueueDrain");
}

id objc_msgSend_onQueueMergeChangesFromContacts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueueMergeChangesFromContacts");
}

id objc_msgSend_onQueueProcessStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueueProcessStatus:");
}

id objc_msgSend_oneofs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oneofs");
}

id objc_msgSend_onqueueCheckExpectedFailure_attempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueCheckExpectedFailure:attempt:");
}

id objc_msgSend_onqueueEnterState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueEnterState:");
}

id objc_msgSend_onqueueHandleTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueHandleTransition:");
}

id objc_msgSend_onqueueProcessTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueProcessTransition:");
}

id objc_msgSend_onqueueStartFinishOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueStartFinishOperation");
}

id objc_msgSend_onqueueStartFinishOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueueStartFinishOperation:");
}

id objc_msgSend_opUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "opUUID");
}

id objc_msgSend_opUUIDData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "opUUIDData");
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "open");
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operatingSystemVersion");
}

id objc_msgSend_operatingSystemVersionString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operatingSystemVersionString");
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationCount");
}

id objc_msgSend_operationDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationDependency");
}

id objc_msgSend_operationDependencyDescriptionCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationDependencyDescriptionCode");
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationQueue");
}

id objc_msgSend_operationStateString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationStateString");
}

id objc_msgSend_operationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationWithBlock:");
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operations");
}

id objc_msgSend_optIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optIn");
}

id objc_msgSend_optInAfter_accountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInAfter:accountKey:");
}

id objc_msgSend_optInDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInDate");
}

id objc_msgSend_optInHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInHistory");
}

id objc_msgSend_optInHistoryDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInHistoryDescription");
}

id objc_msgSend_optInKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInKey");
}

id objc_msgSend_optInKeyForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInKeyForApplication:");
}

id objc_msgSend_optInManagerOptInState_sync_store_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInManagerOptInState:sync:store:complete:");
}

id objc_msgSend_optInOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInOut");
}

id objc_msgSend_optInOutHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInOutHistory");
}

id objc_msgSend_optInOutHistoryJsonArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInOutHistoryJsonArray");
}

id objc_msgSend_optInOutMutation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInOutMutation");
}

id objc_msgSend_optInRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInRecord");
}

id objc_msgSend_optInServer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInServer");
}

id objc_msgSend_optInState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInState");
}

id objc_msgSend_optInStateForKeyStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInStateForKeyStore:error:");
}

id objc_msgSend_optInStateForUri_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInStateForUri:completionHandler:");
}

id objc_msgSend_optInStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInStates");
}

id objc_msgSend_optInStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInStatus");
}

id objc_msgSend_optInTernaryState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optInTernaryState");
}

id objc_msgSend_optOutWhenNotEligble_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optOutWhenNotEligble:error:");
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optedIn");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "options");
}

id objc_msgSend_orderedTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orderedTimestamp");
}

id objc_msgSend_originalRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalRequest");
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "osVersion");
}

id objc_msgSend_output(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "output");
}

id objc_msgSend_outstandingCreationSignal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outstandingCreationSignal");
}

id objc_msgSend_outstandingRemoteFetchSignal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outstandingRemoteFetchSignal");
}

id objc_msgSend_overrideBeginTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideBeginTime");
}

id objc_msgSend_overrideReversePushConfig(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideReversePushConfig");
}

id objc_msgSend_overrideReversePushPercentage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideReversePushPercentage");
}

id objc_msgSend_packWithMessage_typeURLPrefix_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packWithMessage:typeURLPrefix:error:");
}

id objc_msgSend_package(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "package");
}

id objc_msgSend_pamHeadInPatProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pamHeadInPatProof");
}

id objc_msgSend_parseBool_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseBool:end:result:");
}

id objc_msgSend_parseByte_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseByte:end:result:");
}

id objc_msgSend_parseByteArray_end_minLength_maxLength_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseByteArray:end:minLength:maxLength:result:");
}

id objc_msgSend_parseExtensions_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseExtensions:end:result:");
}

id objc_msgSend_parseFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseFromData:error:");
}

id objc_msgSend_parseHashValue_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseHashValue:end:result:");
}

id objc_msgSend_parseMessageSet_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseMessageSet:extensionRegistry:");
}

id objc_msgSend_parseOptInOutExtension_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseOptInOutExtension:error:");
}

id objc_msgSend_parseQueryRequestFromKTRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseQueryRequestFromKTRequest:error:");
}

id objc_msgSend_parseQueryResponseFromKTRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseQueryResponseFromKTRequest:error:");
}

id objc_msgSend_parseSTHData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseSTHData:error:");
}

id objc_msgSend_parseUint64_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseUint64:end:result:");
}

id objc_msgSend_parseUnknownField_extensionRegistry_tag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseUnknownField:extensionRegistry:tag:");
}

id objc_msgSend_parseVRFOutput_end_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseVRFOutput:end:result:");
}

id objc_msgSend_parsedLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parsedLength");
}

id objc_msgSend_parsedLogHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parsedLogHead");
}

id objc_msgSend_parsedMapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parsedMapHead");
}

id objc_msgSend_parsedMutationWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parsedMutationWithError:");
}

id objc_msgSend_patClosedProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patClosedProof");
}

id objc_msgSend_patConfigProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patConfigProof");
}

id objc_msgSend_patEarliestVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patEarliestVersion");
}

id objc_msgSend_patHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patHead");
}

id objc_msgSend_patLogBeginningMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patLogBeginningMs");
}

id objc_msgSend_patSigningKeyWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patSigningKeyWithError:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathFromDictionary:");
}

id objc_msgSend_pathStep(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathStep");
}

id objc_msgSend_paused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paused");
}

id objc_msgSend_pcsOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pcsOperation");
}

id objc_msgSend_pcsOperationsClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pcsOperationsClass");
}

id objc_msgSend_pcsOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pcsOptions:");
}

id objc_msgSend_peerIndexAtDepth_leafIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerIndexAtDepth:leafIndex:");
}

id objc_msgSend_peerOverrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerOverrides");
}

id objc_msgSend_peerOverridesStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerOverridesStore");
}

id objc_msgSend_peerQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerQueue");
}

id objc_msgSend_peerState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerState");
}

id objc_msgSend_peerStaticKeyFallback_accountKey_transparentData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerStaticKeyFallback:accountKey:transparentData:");
}

id objc_msgSend_peerVerificationFinishedWithResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerVerificationFinishedWithResults:");
}

id objc_msgSend_peerVerificationIdForUri_application_verificationInfo_newerThan_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerVerificationIdForUri:application:verificationInfo:newerThan:error:");
}

id objc_msgSend_peerVerificationUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerVerificationUpdated:");
}

id objc_msgSend_peers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peers:");
}

id objc_msgSend_pendingDependenciesString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingDependenciesString:");
}

id objc_msgSend_pendingFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFlags");
}

id objc_msgSend_pendingFlagsScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFlagsScheduler");
}

id objc_msgSend_pendingFlagsString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFlagsString");
}

id objc_msgSend_pendingFollowUpItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFollowUpItems:");
}

id objc_msgSend_pendingSmtsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingSmtsArray");
}

id objc_msgSend_pendingSmtsArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingSmtsArray_Count");
}

id objc_msgSend_pendingStatusChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingStatusChanges");
}

id objc_msgSend_pendingValidationsComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingValidationsComplete");
}

id objc_msgSend_pendingVerificationURIs_fetchLimit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingVerificationURIs:fetchLimit:error:");
}

id objc_msgSend_perApplicationTreeEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perApplicationTreeEntry");
}

id objc_msgSend_percentageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentageForKey:");
}

id objc_msgSend_performAndWaitForDeviceId_application_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForDeviceId:application:error:block:");
}

id objc_msgSend_performAndWaitForDownloadId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForDownloadId:error:block:");
}

id objc_msgSend_performAndWaitForFailedEventId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForFailedEventId:error:block:");
}

id objc_msgSend_performAndWaitForFetchId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForFetchId:error:block:");
}

id objc_msgSend_performAndWaitForLatestSelfRequest_accountKey_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForLatestSelfRequest:accountKey:block:");
}

id objc_msgSend_performAndWaitForPeer_application_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForPeer:application:error:block:");
}

id objc_msgSend_performAndWaitForRequestId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForRequestId:error:block:");
}

id objc_msgSend_performAndWaitForRpcId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForRpcId:error:block:");
}

id objc_msgSend_performAndWaitForSelfValidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForSelfValidate:");
}

id objc_msgSend_performAndWaitForVerificationId_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAndWaitForVerificationId:error:block:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_performBlockAndWaitWithMoc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWaitWithMoc:");
}

id objc_msgSend_performBlockWithSelfState_uri_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockWithSelfState:uri:error:block:");
}

id objc_msgSend_performForPendingSMTs_uri_error_batchSize_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForPendingSMTs:uri:error:batchSize:block:");
}

id objc_msgSend_performForPendingSTHs_olderThan_type_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForPendingSTHs:olderThan:type:error:block:");
}

id objc_msgSend_performForPendingVerfications_uri_responseOlderThan_error_batchSize_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForPendingVerfications:uri:responseOlderThan:error:batchSize:block:");
}

id objc_msgSend_performForRequestsWithPendingResponses_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForRequestsWithPendingResponses:error:block:");
}

id objc_msgSend_performForSMHsWithUnverifiedMMD_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForSMHsWithUnverifiedMMD:error:block:");
}

id objc_msgSend_performForSMTsWithUnverifiedSignature_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForSMTsWithUnverifiedSignature:error:block:");
}

id objc_msgSend_performForSTHs_isMapHead_revision_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForSTHs:isMapHead:revision:error:block:");
}

id objc_msgSend_performForSTHsWithUnverifiedSignature_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performForSTHsWithUnverifiedSignature:error:block:");
}

id objc_msgSend_performOnBatchesOfEntity_predicate_enforceMax_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performOnBatchesOfEntity:predicate:enforceMax:error:block:");
}

id objc_msgSend_performOnRequestsForPredicate_enforceMax_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performOnRequestsForPredicate:enforceMax:error:block:");
}

id objc_msgSend_performRegistrationSignatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRegistrationSignatures:");
}

id objc_msgSend_persistAccountChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistAccountChanges:");
}

id objc_msgSend_persistAndRefaultObject_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistAndRefaultObject:error:");
}

id objc_msgSend_persistAndRefaultObjects_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistAndRefaultObjects:error:");
}

id objc_msgSend_persistWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistWithError:");
}

id objc_msgSend_persistentContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentContainer");
}

id objc_msgSend_persistentContainerWithName_managedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentContainerWithName:managedObjectModel:");
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreCoordinator");
}

id objc_msgSend_persistentStoreDescriptionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDescriptionWithURL:");
}

id objc_msgSend_persistentStoreDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDescriptions:");
}

id objc_msgSend_persistentStoreForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreForURL:");
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumbers");
}

id objc_msgSend_pointerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointerValue");
}

id objc_msgSend_populateExistingRequestsToLookupTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateExistingRequestsToLookupTable:");
}

id objc_msgSend_populateMissingLogHeadHashes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateMissingLogHeadHashes:");
}

id objc_msgSend_populating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populating");
}

id objc_msgSend_postChangeForEntry_publicAccountIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postChangeForEntry:publicAccountIdentity:");
}

id objc_msgSend_postFollowUpItem_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postFollowUpItem:error:");
}

id objc_msgSend_postFollowup_type_eventId_errorCode_optInState_infoLink_additionalInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postFollowup:type:eventId:errorCode:optInState:infoLink:additionalInfo:error:");
}

id objc_msgSend_postKTDisabledFollowup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postKTDisabledFollowup");
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_deliverImmediately_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:deliverImmediately:");
}

id objc_msgSend_postNotificationName_object_userInfo_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:options:");
}

id objc_msgSend_postReport_uuid_application_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postReport:uuid:application:completionHandler:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predictedNextFireTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictedNextFireTime");
}

id objc_msgSend_preferredLocalizationsFromArray_forPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLocalizationsFromArray:forPreferences:");
}

id objc_msgSend_prefixedURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefixedURI");
}

id objc_msgSend_presentTapToRadarErrorWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTapToRadarErrorWithType:");
}

id objc_msgSend_primaryAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryAccount:");
}

id objc_msgSend_privateCloudDatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateCloudDatabase");
}

id objc_msgSend_processChangedKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processChangedKeys:");
}

id objc_msgSend_processConfigBagData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processConfigBagData:error:");
}

id objc_msgSend_processCoreDataHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processCoreDataHistory");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processIdentifier");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processPamHeadInPatProof_tltEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPamHeadInPatProof:tltEntry:error:");
}

id objc_msgSend_processPatClosedProof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPatClosedProof:error:");
}

id objc_msgSend_processPatConfigProof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPatConfigProof:error:");
}

id objc_msgSend_processResponse_watcher_finishOp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processResponse:watcher:finishOp:");
}

id objc_msgSend_processSTHsFromGossipPeers_verifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processSTHsFromGossipPeers:verifier:error:");
}

id objc_msgSend_processSTHsFromPeers_verifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processSTHsFromPeers:verifier:completionHandler:");
}

id objc_msgSend_processTltConfigProof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processTltConfigProof:error:");
}

id objc_msgSend_product(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "product");
}

id objc_msgSend_profileID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileID");
}

id objc_msgSend_proof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proof");
}

id objc_msgSend_proofHashesArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proofHashesArray");
}

id objc_msgSend_proofHashesArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proofHashesArray_Count");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_publicAccountIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicAccountIdentity");
}

id objc_msgSend_publicAccountKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicAccountKey");
}

id objc_msgSend_publicCloudDatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicCloudDatabase");
}

id objc_msgSend_publicID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicID");
}

id objc_msgSend_publicIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicIdentity");
}

id objc_msgSend_publicKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKey");
}

id objc_msgSend_publicKeyBytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyBytes");
}

id objc_msgSend_publicKeyFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyFetcher");
}

id objc_msgSend_publicKeyID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyID");
}

id objc_msgSend_publicKeyInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyInfo");
}

id objc_msgSend_publicKeyInfoFromIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyInfoFromIdentity:error:");
}

id objc_msgSend_publicKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeyStore");
}

id objc_msgSend_publicKeysURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicKeysURI");
}

id objc_msgSend_publicPublicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicPublicKey:");
}

id objc_msgSend_pushToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushToken");
}

id objc_msgSend_pushTokenForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushTokenForService:");
}

id objc_msgSend_queryAKSLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryAKSLocked");
}

id objc_msgSend_queryCacheHardTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryCacheHardTimeout");
}

id objc_msgSend_queryForUris_application_logClient_userInitiated_cachedYoungerThan_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryForUris:application:logClient:userInitiated:cachedYoungerThan:completionHandler:");
}

id objc_msgSend_queryForUris_userInitiated_cachedYoungerThan_backgroundOpId_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryForUris:userInitiated:cachedYoungerThan:backgroundOpId:completionHandler:");
}

id objc_msgSend_queryForUris_userInitiated_cachedYoungerThan_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryForUris:userInitiated:cachedYoungerThan:completionHandler:");
}

id objc_msgSend_queryInfoArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryInfoArray");
}

id objc_msgSend_queryInfoArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryInfoArray_Count");
}

id objc_msgSend_queryJustMadeTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryJustMadeTimeout");
}

id objc_msgSend_queryRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryRequest");
}

id objc_msgSend_queryResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryResponse");
}

id objc_msgSend_queryURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryURI");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queue");
}

id objc_msgSend_queueIsLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queueIsLocked");
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rawValueAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rawValueAtIndex:");
}

id objc_msgSend_reachabilityDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityDependency");
}

id objc_msgSend_reachabilityTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityTracker");
}

id objc_msgSend_readConfigFromDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readConfigFromDisk:");
}

id objc_msgSend_readDictionaryFromFile_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDictionaryFromFile:error:");
}

id objc_msgSend_readDictionaryFromFile_inDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDictionaryFromFile:inDirectory:error:");
}

id objc_msgSend_readGroup_message_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readGroup:message:extensionRegistry:");
}

id objc_msgSend_readMapEntry_extensionRegistry_field_parentMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readMapEntry:extensionRegistry:field:parentMessage:");
}

id objc_msgSend_readMessage_extensionRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readMessage:extensionRegistry:");
}

id objc_msgSend_readPublicKeyStoreFromDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readPublicKeyStoreFromDisk:");
}

id objc_msgSend_readUnknownGroup_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readUnknownGroup:message:");
}

id objc_msgSend_ready(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ready");
}

id objc_msgSend_ready_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ready:");
}

id objc_msgSend_readyComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readyComplete");
}

id objc_msgSend_readyWithRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readyWithRefresh:");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_recalculateVerifierResultForPeer_application_after_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recalculateVerifierResultForPeer:application:after:");
}

id objc_msgSend_receiptServerHint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receiptServerHint");
}

id objc_msgSend_receiptTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receiptTime");
}

id objc_msgSend_receivedSTHsFromPeers_logClient_verifier_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedSTHsFromPeers:logClient:verifier:block:");
}

id objc_msgSend_receivers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivers");
}

id objc_msgSend_recentlyOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentlyOptedIn");
}

id objc_msgSend_recheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recheck");
}

id objc_msgSend_recheckAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recheckAccount");
}

id objc_msgSend_recordBackgroundActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordBackgroundActivity");
}

id objc_msgSend_recordEnrollOptInRecord_accountKey_transparentData_cloudOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordEnrollOptInRecord:accountKey:transparentData:cloudOptIn:");
}

id objc_msgSend_recordForAccountKeyHash_deviceIdHash_appVersion_clientDataHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordForAccountKeyHash:deviceIdHash:appVersion:clientDataHash:");
}

id objc_msgSend_recordKeyState_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordKeyState:application:");
}

id objc_msgSend_refaultObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refaultObject:");
}

id objc_msgSend_referenceKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "referenceKey");
}

id objc_msgSend_refreshAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshAllObjects");
}

id objc_msgSend_refreshDeviceList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshDeviceList:");
}

id objc_msgSend_refreshDeviceList_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshDeviceList:complete:");
}

id objc_msgSend_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshObject:mergeChanges:");
}

id objc_msgSend_registerForNotificationsOfCloudKitAccountStatusChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForNotificationsOfCloudKitAccountStatusChange:");
}

id objc_msgSend_registerPushReceiver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPushReceiver:");
}

id objc_msgSend_registerStateTransitionWatcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerStateTransitionWatcher:");
}

id objc_msgSend_registerTransformer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerTransformer");
}

id objc_msgSend_registeredDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredDelegate");
}

id objc_msgSend_registeredKTData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredKTData");
}

id objc_msgSend_registeredTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredTime");
}

id objc_msgSend_registrationData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationData");
}

id objc_msgSend_registrationDataNeedsUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationDataNeedsUpdate");
}

id objc_msgSend_registrationDataNeedsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationDataNeedsUpdate:");
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relativePath");
}

id objc_msgSend_releaseContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseContext");
}

id objc_msgSend_reloadAccountWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadAccountWithCompletionHandler:");
}

id objc_msgSend_remainingPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remainingPath");
}

id objc_msgSend_removeAccountsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAccountsObject:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeClientDatasObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClientDatasObject:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeDelegateForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegateForService:");
}

id objc_msgSend_removeDependenciesUponCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDependenciesUponCompletion");
}

id objc_msgSend_removeDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDependency:");
}

id objc_msgSend_removeDevice_clientData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDevice:clientData:error:");
}

id objc_msgSend_removeDevicesObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDevicesObject:");
}

id objc_msgSend_removeFailuresOnOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFailuresOnOptIn:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePersistentStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersistentStore:error:");
}

id objc_msgSend_renewAccountTokenForFetch_allowEmptyData_useReversePush_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewAccountTokenForFetch:allowEmptyData:useReversePush:completionHandler:");
}

id objc_msgSend_renewCredentialsForAccount_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewCredentialsForAccount:options:completion:");
}

id objc_msgSend_replaceBytesInRange_withBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceBytesInRange:withBytes:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replacePersistentStoreAtURL_destinationOptions_withPersistentStoreFromURL_sourceOptions_storeType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:");
}

id objc_msgSend_replaySelfValidate_application_pcsAccountKey_queryRequest_queryResponse_responseTime_logClient_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaySelfValidate:application:pcsAccountKey:queryRequest:queryResponse:responseTime:logClient:completionHandler:");
}

id objc_msgSend_reportCoreDataEventForEntity_hardFailure_write_code_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCoreDataEventForEntity:hardFailure:write:code:underlyingError:");
}

id objc_msgSend_reportCoreDataEventForEntity_write_code_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCoreDataEventForEntity:write:code:underlyingError:");
}

id objc_msgSend_reportCoreDataPersistEventForLocation_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCoreDataPersistEventForLocation:underlyingError:");
}

id objc_msgSend_reportFailedRevisions_failure_downloadType_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportFailedRevisions:failure:downloadType:application:");
}

id objc_msgSend_reportToAppleURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportToAppleURI");
}

id objc_msgSend_reportValidationTime_initialResult_result_idsResponseTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportValidationTime:initialResult:result:idsResponseTime:");
}

id objc_msgSend_reportVerifySMTFailure_analyticsData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportVerifySMTFailure:analyticsData:error:");
}

id objc_msgSend_reportVerifySMTFailure_analyticsData_uri_receiptServerHint_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportVerifySMTFailure:analyticsData:uri:receiptServerHint:error:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "request");
}

id objc_msgSend_requestCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCount:");
}

id objc_msgSend_requestData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestData");
}

id objc_msgSend_requestFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFailureCount:");
}

id objc_msgSend_requestId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestId");
}

id objc_msgSend_requestIds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestIds");
}

id objc_msgSend_requestServerOptInFetchForManyReasons_delayInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestServerOptInFetchForManyReasons:delayInSeconds:");
}

id objc_msgSend_requestSuccessfulCKFetchForManyReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSuccessfulCKFetchForManyReasons:");
}

id objc_msgSend_requestTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTime");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_requests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requests");
}

id objc_msgSend_requestsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestsArray");
}

id objc_msgSend_requiredBagKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredBagKeys");
}

id objc_msgSend_requiredKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredKeys");
}

id objc_msgSend_requiresAuthorization(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresAuthorization");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reset");
}

id objc_msgSend_resetBytesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetBytesInRange:");
}

id objc_msgSend_resetCloudZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetCloudZone:");
}

id objc_msgSend_resetContactsStorage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetContactsStorage");
}

id objc_msgSend_resetEnvLogClientNetworkTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetEnvLogClientNetworkTimeout");
}

id objc_msgSend_resetLastAccountOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetLastAccountOperations");
}

id objc_msgSend_resetLocalCloudDataState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetLocalCloudDataState");
}

id objc_msgSend_resetPeersToPending_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPeersToPending:error:");
}

id objc_msgSend_resetRequestsForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetRequestsForApplication:error:");
}

id objc_msgSend_resetRequestsForTLTReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetRequestsForTLTReset:");
}

id objc_msgSend_resetUnlockDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetUnlockDependency");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "response");
}

id objc_msgSend_responseCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseCode");
}

id objc_msgSend_responseStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseStatus");
}

id objc_msgSend_responseTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseTime");
}

id objc_msgSend_responsesArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responsesArray");
}

id objc_msgSend_responsesArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responsesArray_Count");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "result");
}

id objc_msgSend_resultError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultError");
}

id objc_msgSend_resultsForUris_application_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultsForUris:application:failure:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_retainContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retainContext");
}

id objc_msgSend_retrieveTLTSTH_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveTLTSTH:");
}

id objc_msgSend_retrieveTLTSTH_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveTLTSTH:block:");
}

id objc_msgSend_retry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retry");
}

id objc_msgSend_retryEnsureIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryEnsureIdentity");
}

id objc_msgSend_retryGetPrimaryAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryGetPrimaryAccount");
}

id objc_msgSend_retryPendingValidations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryPendingValidations");
}

id objc_msgSend_retryPendingValidations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryPendingValidations:");
}

id objc_msgSend_retryScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryScheduler");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_reverseTransformedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseTransformedValue:");
}

id objc_msgSend_revision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revision");
}

id objc_msgSend_revisionArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisionArray");
}

id objc_msgSend_revisionLogMaxProofs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisionLogMaxProofs");
}

id objc_msgSend_revisionLogProofURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisionLogProofURI");
}

id objc_msgSend_revisions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisions");
}

id objc_msgSend_roll(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roll");
}

id objc_msgSend_rollKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollKey:");
}

id objc_msgSend_rollKeyForApplication_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollKeyForApplication:logClient:completionBlock:");
}

id objc_msgSend_rpcFastStatus_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rpcFastStatus:reply:");
}

id objc_msgSend_rpcFetchAndProcessChanges_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rpcFetchAndProcessChanges:reply:");
}

id objc_msgSend_rpcId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rpcId");
}

id objc_msgSend_rpcKnownBadState_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rpcKnownBadState:reply:");
}

id objc_msgSend_rpcType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rpcType");
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "run");
}

id objc_msgSend_runAsynchronousTransactionName_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runAsynchronousTransactionName:block:");
}

id objc_msgSend_runBeforeGroupFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBeforeGroupFinished:");
}

id objc_msgSend_runDutyCycleForActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runDutyCycleForActivity:");
}

id objc_msgSend_saltMessage_salt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saltMessage:salt:");
}

id objc_msgSend_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:");
}

id objc_msgSend_saveAndRefaultObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAndRefaultObject:");
}

id objc_msgSend_saveContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveContext:error:");
}

id objc_msgSend_saveDiskApplicationKeyStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveDiskApplicationKeyStore:error:");
}

id objc_msgSend_saveErrorToDB_smDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveErrorToDB:smDataStore:");
}

id objc_msgSend_saveRequestFailure_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveRequestFailure:failure:");
}

id objc_msgSend_secKeyAlgorithmForProtoAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secKeyAlgorithmForProtoAlgorithm:");
}

id objc_msgSend_seconds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seconds");
}

id objc_msgSend_securityLevelForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "securityLevelForAccount:");
}

id objc_msgSend_seenDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seenDate");
}

id objc_msgSend_selfDeviceID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfDeviceID");
}

id objc_msgSend_selfErrors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfErrors");
}

id objc_msgSend_selfInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfInfo");
}

id objc_msgSend_selfResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfResults");
}

id objc_msgSend_selfStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfStatus");
}

id objc_msgSend_selfStatusFlagMetricsKey_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfStatusFlagMetricsKey:name:");
}

id objc_msgSend_selfValidateCloudKitTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfValidateCloudKitTimeout");
}

id objc_msgSend_selfValidateNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfValidateNotification:");
}

id objc_msgSend_selfValidationEnrollment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfValidationEnrollment");
}

id objc_msgSend_selfValidationResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfValidationResult");
}

id objc_msgSend_selfValidationURIStatus_transparentData_logger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfValidationURIStatus:transparentData:logger:");
}

id objc_msgSend_selfname(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selfname");
}

id objc_msgSend_semaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semaphore");
}

id objc_msgSend_sendOptInUpdateRequest_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendOptInUpdateRequest:withCompletion:");
}

id objc_msgSend_sentToIDS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sentToIDS");
}

id objc_msgSend_sequenceId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sequenceId");
}

id objc_msgSend_serial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serial");
}

id objc_msgSend_serialNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serialNumber");
}

id objc_msgSend_serialize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serialize");
}

id objc_msgSend_serializeLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeLoggableDatas:");
}

id objc_msgSend_serializeNSError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeNSError:");
}

id objc_msgSend_serializeTranscripts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeTranscripts");
}

id objc_msgSend_serializedDataForUnknownValue_forKey_keyDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedDataForUnknownValue:forKey:keyDataType:");
}

id objc_msgSend_serializedSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedSize");
}

id objc_msgSend_serializedSizeAsMessageSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedSizeAsMessageSet");
}

id objc_msgSend_serializedSizeAsMessageSetExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedSizeAsMessageSetExtension");
}

id objc_msgSend_serverEventInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverEventInfo");
}

id objc_msgSend_serverHint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverHint");
}

id objc_msgSend_serverHints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverHints");
}

id objc_msgSend_serverLoggableDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverLoggableDatas");
}

id objc_msgSend_serverLoggableDatasDiagnostics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverLoggableDatasDiagnostics:");
}

id objc_msgSend_serverOptIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverOptIn");
}

id objc_msgSend_serverOptInFetchReasons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverOptInFetchReasons");
}

id objc_msgSend_serverOptInScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverOptInScheduler");
}

id objc_msgSend_serverProvidedSMT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverProvidedSMT");
}

id objc_msgSend_serverRPCTimeoutSeconds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverRPCTimeoutSeconds");
}

id objc_msgSend_serverSMTByURI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverSMTByURI");
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "service");
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceName");
}

id objc_msgSend_serviceUserInfos(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceUserInfos");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccount:");
}

id objc_msgSend_setAccountController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountController:");
}

id objc_msgSend_setAccountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountKey:");
}

id objc_msgSend_setAccountKeyHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountKeyHash:");
}

id objc_msgSend_setAccountKeyServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountKeyServer:");
}

id objc_msgSend_setAccountKeyService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountKeyService:");
}

id objc_msgSend_setAccountMismatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountMismatch:");
}

id objc_msgSend_setAccountOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountOperations:");
}

id objc_msgSend_setAccountStateHolder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountStateHolder:");
}

id objc_msgSend_setAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountStatus:");
}

id objc_msgSend_setAccountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountType:");
}

id objc_msgSend_setAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccounts:");
}

id objc_msgSend_setAccountsdRetryTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountsdRetryTimeout:");
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActions:");
}

id objc_msgSend_setActivateAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivateAction:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setAddedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddedDate:");
}

id objc_msgSend_setAddedMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddedMs:");
}

id objc_msgSend_setAdditionalContactKeyDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalContactKeyDescriptors:");
}

id objc_msgSend_setAdditionalHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalHeaders:");
}

id objc_msgSend_setAllowEmptyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowEmptyData:");
}

id objc_msgSend_setAllowOldKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowOldKeys:");
}

id objc_msgSend_setAllowPendingFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowPendingFlags:");
}

id objc_msgSend_setAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAltDSID:");
}

id objc_msgSend_setAnalyticsLogger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalyticsLogger:");
}

id objc_msgSend_setAppSmtKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppSmtKeyStore:");
}

id objc_msgSend_setAppSthKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppSthKeyStore:");
}

id objc_msgSend_setAppVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppVersion:");
}

id objc_msgSend_setApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplication:");
}

id objc_msgSend_setApplicationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationID:");
}

id objc_msgSend_setApplicationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationId:");
}

id objc_msgSend_setApplicationKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationKeyStore:");
}

id objc_msgSend_setApplicationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationVersion:");
}

id objc_msgSend_setApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplications:");
}

id objc_msgSend_setApplicationsToOptInStatusData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationsToOptInStatusData:");
}

id objc_msgSend_setApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApps:");
}

id objc_msgSend_setApsConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApsConnection:");
}

id objc_msgSend_setApsConnectionMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApsConnectionMachServiceName:");
}

id objc_msgSend_setAuth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuth:");
}

id objc_msgSend_setAuthenticated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticated:");
}

id objc_msgSend_setBAACertFetcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBAACertFetcher:");
}

id objc_msgSend_setBaaKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaaKey:");
}

id objc_msgSend_setBackgroundOpId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundOpId:");
}

id objc_msgSend_setBackoff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackoff:");
}

id objc_msgSend_setBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBag:");
}

id objc_msgSend_setBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuild:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setCachedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedDevices:");
}

id objc_msgSend_setCachedGossip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedGossip:");
}

id objc_msgSend_setCachedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedNotification:");
}

id objc_msgSend_setCachedPeerOptInState_uris_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedPeerOptInState:uris:application:");
}

id objc_msgSend_setCachedTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedTimes:");
}

id objc_msgSend_setCallbackWorkloop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallbackWorkloop:");
}

id objc_msgSend_setCertFetcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertFetcher:");
}

id objc_msgSend_setCertificates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificates:");
}

id objc_msgSend_setCheckAccountNFS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckAccountNFS:");
}

id objc_msgSend_setCheckIDSError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckIDSError:");
}

id objc_msgSend_setCheckIDSRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckIDSRegistration:");
}

id objc_msgSend_setCheckIDSResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckIDSResult:");
}

id objc_msgSend_setCheckIDSTimeoutSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckIDSTimeoutSeconds:");
}

id objc_msgSend_setCheckIDSTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckIDSTimer:");
}

id objc_msgSend_setCheckKTAccountKeyScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckKTAccountKeyScheduler:");
}

id objc_msgSend_setCheckKTSignatureScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckKTSignatureScheduler:");
}

id objc_msgSend_setCheckReachabilityOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckReachabilityOperation:");
}

id objc_msgSend_setCheckUnlockOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckUnlockOperation:");
}

id objc_msgSend_setCkFetchReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkFetchReasons:");
}

id objc_msgSend_setCkFetchScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkFetchScheduler:");
}

id objc_msgSend_setCkdatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkdatabase:");
}

id objc_msgSend_setCkksCheckerNFS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkksCheckerNFS:");
}

id objc_msgSend_setCkksControlInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkksControlInterface:");
}

id objc_msgSend_setCkksTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkksTimeout:");
}

id objc_msgSend_setCkksViewObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkksViewObserver:");
}

id objc_msgSend_setClearAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearAction:");
}

id objc_msgSend_setClientData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientData:");
}

id objc_msgSend_setClientDataHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientDataHash:");
}

id objc_msgSend_setClientDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientDatas:");
}

id objc_msgSend_setClientLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientLoggableDatas:");
}

id objc_msgSend_setCloudContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudContainer:");
}

id objc_msgSend_setCloudKitAccountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitAccountInfo:");
}

id objc_msgSend_setCloudKitAccountTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitAccountTracker:");
}

id objc_msgSend_setCloudKitContainerOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitContainerOptions:");
}

id objc_msgSend_setCloudKitOutgoingFlag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitOutgoingFlag");
}

id objc_msgSend_setCloudRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudRecords:");
}

id objc_msgSend_setComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComplete:");
}

id objc_msgSend_setCompletedVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedVerification:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setConditionChecksInFlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConditionChecksInFlight:");
}

id objc_msgSend_setConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfig:");
}

id objc_msgSend_setConfigApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigApp:");
}

id objc_msgSend_setConfigBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigBag:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfigurationStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigurationStore:");
}

id objc_msgSend_setConfigureGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigureGroup:");
}

id objc_msgSend_setConfigureQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigureQueue:");
}

id objc_msgSend_setConfigured_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigured:");
}

id objc_msgSend_setConsistencyVerified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConsistencyVerified:");
}

id objc_msgSend_setContactExternalIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactExternalIdentifier:");
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactIdentifier:");
}

id objc_msgSend_setContactServerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactServerPath:");
}

id objc_msgSend_setContactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactStore:");
}

id objc_msgSend_setContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContacts:");
}

id objc_msgSend_setContactsSyncController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactsSyncController:");
}

id objc_msgSend_setContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainer:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextID:");
}

id objc_msgSend_setContextRefCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextRefCount:");
}

id objc_msgSend_setContextStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextStore:");
}

id objc_msgSend_setController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setController:");
}

id objc_msgSend_setCreatedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatedAt:");
}

id objc_msgSend_setCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreationTime:");
}

id objc_msgSend_setCurrentCKAccountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentCKAccountInfo:");
}

id objc_msgSend_setCurrentCKFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentCKFetch:");
}

id objc_msgSend_setCurrentConditions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentConditions:");
}

id objc_msgSend_setCurrentDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentDelay:");
}

id objc_msgSend_setCurrentEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentEnvironment:");
}

id objc_msgSend_setCurrentItemPointerModificationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentItemPointerModificationTime:");
}

id objc_msgSend_setCurrentServerOptInFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentServerOptInFetch:");
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:");
}

id objc_msgSend_setCurrentStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentStates:");
}

id objc_msgSend_setCurrentTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTarget:");
}

id objc_msgSend_setCurrentTreeEpochBeginDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTreeEpochBeginDate:");
}

id objc_msgSend_setDaemonContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaemonContext:");
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setData:");
}

id objc_msgSend_setDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStore:");
}

id objc_msgSend_setDataStoreController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStoreController:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateProperty:forKey:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegate_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:forService:");
}

id objc_msgSend_setDeliveryQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeliveryQueue:");
}

id objc_msgSend_setDeps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeps:");
}

id objc_msgSend_setDescriptionErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionErrorCode:");
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceID:");
}

id objc_msgSend_setDeviceIDHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIDHash:");
}

id objc_msgSend_setDeviceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceId:");
}

id objc_msgSend_setDeviceIdHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIdHash:");
}

id objc_msgSend_setDeviceInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInformation:");
}

id objc_msgSend_setDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevices:");
}

id objc_msgSend_setDevicesArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesArray:");
}

id objc_msgSend_setDew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDew:");
}

id objc_msgSend_setDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectory:");
}

id objc_msgSend_setDiscretionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionary:");
}

id objc_msgSend_setDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayStyle:");
}

id objc_msgSend_setDnc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDnc:");
}

id objc_msgSend_setDownloadId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadId:");
}

id objc_msgSend_setDsid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDsid:");
}

id objc_msgSend_setEncodedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncodedError:");
}

id objc_msgSend_setEndRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndRevision:");
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntity:");
}

id objc_msgSend_setEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnvironment:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorCode:");
}

id objc_msgSend_setErrorCode_forMapping_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorCode:forMapping:error:");
}

id objc_msgSend_setErrorDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorDomain:");
}

id objc_msgSend_setErrorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorState:");
}

id objc_msgSend_setErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrors:");
}

id objc_msgSend_setEscrowExpiry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowExpiry:");
}

id objc_msgSend_setEscrowExpiryMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowExpiryMs:");
}

id objc_msgSend_setEventId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventId:");
}

id objc_msgSend_setEverCompletedVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEverCompletedVerification:");
}

id objc_msgSend_setEverOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEverOptIn:");
}

id objc_msgSend_setEverOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEverOptedIn:");
}

id objc_msgSend_setExcludedTransactionAuthors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedTransactionAuthors:");
}

id objc_msgSend_setExpirationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationTime:");
}

id objc_msgSend_setExpiry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpiry:");
}

id objc_msgSend_setExpiryMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpiryMs:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExtension_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtension:value:");
}

id objc_msgSend_setExtensionData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtensionData:");
}

id objc_msgSend_setExtensionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtensionIdentifier:");
}

id objc_msgSend_setExtensionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtensionType:");
}

id objc_msgSend_setExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtensions:");
}

id objc_msgSend_setFailedRevs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedRevs:");
}

id objc_msgSend_setFailedSMHs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedSMHs:");
}

id objc_msgSend_setFailedSigs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedSigs:");
}

id objc_msgSend_setFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailure:");
}

id objc_msgSend_setFailureEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureEvent:");
}

id objc_msgSend_setFailureNowForPropertyKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureNowForPropertyKey:");
}

id objc_msgSend_setFailureTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureTime:");
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchBatchSize:");
}

id objc_msgSend_setFetchCloudStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchCloudStorage:");
}

id objc_msgSend_setFetchCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchCount:");
}

id objc_msgSend_setFetchGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchGroup:");
}

id objc_msgSend_setFetchId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchId:");
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchLimit:");
}

id objc_msgSend_setFetchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchQueue:");
}

id objc_msgSend_setFillInError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillInError:");
}

id objc_msgSend_setFinishDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinishDate:");
}

id objc_msgSend_setFinishedOp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinishedOp:");
}

id objc_msgSend_setFirstCKAccountFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstCKAccountFetch:");
}

id objc_msgSend_setFirstLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstLaunch:");
}

id objc_msgSend_setFirstNotificationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstNotificationDelay:");
}

id objc_msgSend_setFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlag:");
}

id objc_msgSend_setFlagHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlagHandler:");
}

id objc_msgSend_setFollowUp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowUp:");
}

id objc_msgSend_setFollowUpItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowUpItems:");
}

id objc_msgSend_setFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowup:");
}

id objc_msgSend_setFollowupTicket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowupTicket:");
}

id objc_msgSend_setForceRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceRefresh:");
}

id objc_msgSend_setForceReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceReload:");
}

id objc_msgSend_setForceUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceUpdate:");
}

id objc_msgSend_setForegroundSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForegroundSession:");
}

id objc_msgSend_setForwards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForwards:");
}

id objc_msgSend_setFrequency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrequency:");
}

id objc_msgSend_setGlobalSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalSettings:");
}

id objc_msgSend_setGossip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGossip:");
}

id objc_msgSend_setGroupIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupIdentifier:");
}

id objc_msgSend_setHTTPAdditionalHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPAdditionalHeaders:");
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPBody:");
}

id objc_msgSend_setHTTPCookieStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPCookieStorage:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHalted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHalted:");
}

id objc_msgSend_setHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandle:");
}

id objc_msgSend_setHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandles:");
}

id objc_msgSend_setHasBeenEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasBeenEnabled:");
}

id objc_msgSend_setHaveNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHaveNetwork:");
}

id objc_msgSend_setHoldStateMachineOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoldStateMachineOperation:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHttpMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHttpMethod:");
}

id objc_msgSend_setIDSAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIDSAccountStatus:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityCreated:");
}

id objc_msgSend_setIdms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdms:");
}

id objc_msgSend_setIdmsOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdmsOperations:");
}

id objc_msgSend_setIdsAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsAccountStatus:");
}

id objc_msgSend_setIdsAccountTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsAccountTracker:");
}

id objc_msgSend_setIdsAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsAccounts:");
}

id objc_msgSend_setIdsConfigBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsConfigBag:");
}

id objc_msgSend_setIdsControllerQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsControllerQueue:");
}

id objc_msgSend_setIdsDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDSID:");
}

id objc_msgSend_setIdsDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDelegate:");
}

id objc_msgSend_setIdsDeviceMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDeviceMutation:");
}

id objc_msgSend_setIdsID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsID:");
}

id objc_msgSend_setIdsKTVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsKTVerification:");
}

id objc_msgSend_setIdsMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsMutation:");
}

id objc_msgSend_setIdsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsObserver:");
}

id objc_msgSend_setIdsOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsOperations:");
}

id objc_msgSend_setIdsQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsQueue:");
}

id objc_msgSend_setIdsRegistrationInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsRegistrationInterface:");
}

id objc_msgSend_setIdsResponseTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsResponseTime:");
}

id objc_msgSend_setIdsServerReportedWrong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsServerReportedWrong:");
}

id objc_msgSend_setIdsServerReportedWrongPublicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsServerReportedWrongPublicKey:");
}

id objc_msgSend_setIdsSignInController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsSignInController:");
}

id objc_msgSend_setIgnoredFailureExpiry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoredFailureExpiry:");
}

id objc_msgSend_setInclusionResult_mapHead_failure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionResult:mapHead:failure:");
}

id objc_msgSend_setInclusionResult_signedLogHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionResult:signedLogHead:error:");
}

id objc_msgSend_setInclusionVerified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionVerified:");
}

id objc_msgSend_setInclusionVerifiedState_logEntry_failure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionVerifiedState:logEntry:failure:error:");
}

id objc_msgSend_setInclusionVerifiedState_perApplicationTreeLogEntry_failure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionVerifiedState:perApplicationTreeLogEntry:failure:error:");
}

id objc_msgSend_setInclusionVerifiedState_topLevelTreeLogEntry_failure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInclusionVerifiedState:topLevelTreeLogEntry:failure:error:");
}

id objc_msgSend_setInflightCKFetchDependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInflightCKFetchDependencies:");
}

id objc_msgSend_setInformativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInformativeText:");
}

id objc_msgSend_setInitialDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialDelay:");
}

id objc_msgSend_setInitializedComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitializedComplete:");
}

id objc_msgSend_setIntendedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntendedState:");
}

id objc_msgSend_setIsMapHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMapHead:");
}

id objc_msgSend_setIsOptInSelfValidation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOptInSelfValidation:");
}

id objc_msgSend_setIsSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSupported:");
}

id objc_msgSend_setIssuanceGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIssuanceGroup:");
}

id objc_msgSend_setIssuanceQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIssuanceQueue:");
}

id objc_msgSend_setKTAccountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKTAccountKey:");
}

id objc_msgSend_setKVSSMTTime_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKVSSMTTime:forState:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyBag:");
}

id objc_msgSend_setKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyStore:");
}

id objc_msgSend_setKtApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKtApplication:");
}

id objc_msgSend_setKtLogClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKtLogClient:");
}

id objc_msgSend_setKtSelfVerificationInfoDiagnosticsJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKtSelfVerificationInfoDiagnosticsJson:");
}

id objc_msgSend_setKtStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKtStatus:");
}

id objc_msgSend_setKtVerificationInfoDiagnosticsJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKtVerificationInfoDiagnosticsJson:");
}

id objc_msgSend_setKvs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKvs:");
}

id objc_msgSend_setLastCKFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastCKFetch:");
}

id objc_msgSend_setLastCheckIDSRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastCheckIDSRegistration:");
}

id objc_msgSend_setLastDutyCycle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDutyCycle:");
}

id objc_msgSend_setLastFetchIDMS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastFetchIDMS:");
}

id objc_msgSend_setLastFetchIDSSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastFetchIDSSelf:");
}

id objc_msgSend_setLastFetchKTSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastFetchKTSelf:");
}

id objc_msgSend_setLastForceSyncKVS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastForceSyncKVS:");
}

id objc_msgSend_setLastLocalFetchTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastLocalFetchTime:");
}

id objc_msgSend_setLastMessagesStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastMessagesStatus:");
}

id objc_msgSend_setLastPhoneAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPhoneAccountStatus:");
}

id objc_msgSend_setLastPublicKeyRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPublicKeyRefresh:");
}

id objc_msgSend_setLastPush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPush:");
}

id objc_msgSend_setLastRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastRegistration:");
}

id objc_msgSend_setLastSelfValidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSelfValidate:");
}

id objc_msgSend_setLastSignalIDS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSignalIDS:");
}

id objc_msgSend_setLastUnlockedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnlockedTime:");
}

id objc_msgSend_setLastValidateSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastValidateSelf:");
}

id objc_msgSend_setLastValidateSelfOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastValidateSelfOptIn:");
}

id objc_msgSend_setLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunch:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLiveRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLiveRequest:");
}

id objc_msgSend_setLiveRequestReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLiveRequestReceived:");
}

id objc_msgSend_setLoadComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadComplete:");
}

id objc_msgSend_setLocalNC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalNC:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLock:");
}

id objc_msgSend_setLockStateTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockStateTracker:");
}

id objc_msgSend_setLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLog:");
}

id objc_msgSend_setLogClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogClient:");
}

id objc_msgSend_setLogHeadHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogHeadHash:");
}

id objc_msgSend_setLogType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogType:");
}

id objc_msgSend_setLoggableData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableData:");
}

id objc_msgSend_setLoggableDataError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableDataError:");
}

id objc_msgSend_setLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableDatas:");
}

id objc_msgSend_setLogger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogger:");
}

id objc_msgSend_setMMDVerifiedForMapHead_mmdError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMMDVerifiedForMapHead:mmdError:");
}

id objc_msgSend_setMainQueueDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainQueueDataStore:");
}

id objc_msgSend_setManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManager:");
}

id objc_msgSend_setManateeViewChangedScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManateeViewChangedScheduler:");
}

id objc_msgSend_setManateeViewToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManateeViewToken:");
}

id objc_msgSend_setMapStillPopulating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMapStillPopulating:");
}

id objc_msgSend_setMappings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMappings:");
}

id objc_msgSend_setMarkExpiryDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkExpiryDate:");
}

id objc_msgSend_setMarked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarked:");
}

id objc_msgSend_setMarkedForDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkedForDeletion:");
}

id objc_msgSend_setMarkedForDeletionMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkedForDeletionMs:");
}

id objc_msgSend_setMaybeDoFastExit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaybeDoFastExit:");
}

id objc_msgSend_setMergePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergePolicy:");
}

id objc_msgSend_setMergeResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergeResult:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:");
}

id objc_msgSend_setMetadataValue_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataValue:key:");
}

id objc_msgSend_setMetricsAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricsAccountID:");
}

id objc_msgSend_setMmdVerified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMmdVerified:");
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModel:");
}

id objc_msgSend_setMostRecentCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMostRecentCompleted:");
}

id objc_msgSend_setMostRecentSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMostRecentSuccess:");
}

id objc_msgSend_setMovedDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMovedDatabase:");
}

id objc_msgSend_setMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMutation:");
}

id objc_msgSend_setMutationMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMutationMs:");
}

id objc_msgSend_setMutationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMutationType:");
}

id objc_msgSend_setMutationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMutationVersion:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNamedDelegatePort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamedDelegatePort:");
}

id objc_msgSend_setNanos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNanos:");
}

id objc_msgSend_setNeedsRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsRefresh:");
}

id objc_msgSend_setNetworkTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkTimeout:");
}

id objc_msgSend_setNetworkingWorkloop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkingWorkloop:");
}

id objc_msgSend_setNewCKRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNewCKRequests:");
}

id objc_msgSend_setNewServerOptInRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNewServerOptInRequests:");
}

id objc_msgSend_setNextState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextState:");
}

id objc_msgSend_setNextStateMachineCycleOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextStateMachineCycleOperation:");
}

id objc_msgSend_setNfs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNfs:");
}

id objc_msgSend_setNotInSyncedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotInSyncedData:");
}

id objc_msgSend_setNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotification:");
}

id objc_msgSend_setNotificationCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationCenter:");
}

id objc_msgSend_setNsDNC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNsDNC:");
}

id objc_msgSend_setNumberProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberProperty:forKey:");
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOctagonControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOctagonControl:");
}

id objc_msgSend_setOctagonObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOctagonObserver:");
}

id objc_msgSend_setOctagonOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOctagonOperations:");
}

id objc_msgSend_setOctagonToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOctagonToken:");
}

id objc_msgSend_setOctagonTrusted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOctagonTrusted:");
}

id objc_msgSend_setOpUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpUUID:");
}

id objc_msgSend_setOperationDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationDependency:");
}

id objc_msgSend_setOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationQueue:");
}

id objc_msgSend_setOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptIn:");
}

id objc_msgSend_setOptInDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInDate:");
}

id objc_msgSend_setOptInForURI_application_state_smtTimestamp_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInForURI:application:state:smtTimestamp:complete:");
}

id objc_msgSend_setOptInOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInOut:");
}

id objc_msgSend_setOptInOutHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInOutHistory:");
}

id objc_msgSend_setOptInOutMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInOutMutation:");
}

id objc_msgSend_setOptInResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInResult:");
}

id objc_msgSend_setOptInServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInServer:");
}

id objc_msgSend_setOptInState_everOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInState:everOptIn:");
}

id objc_msgSend_setOptInStateWithURIs_application_state_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInStateWithURIs:application:state:error:");
}

id objc_msgSend_setOptInStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInStates:");
}

id objc_msgSend_setOptInStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInStatus:");
}

id objc_msgSend_setOptInTernaryState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptInTernaryState:");
}

id objc_msgSend_setOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptedIn:");
}

id objc_msgSend_setOption_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOption:forKey:");
}

id objc_msgSend_setOrderedTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrderedTimestamp:");
}

id objc_msgSend_setOsVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOsVersion:");
}

id objc_msgSend_setOutstandingCreationSignal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutstandingCreationSignal:");
}

id objc_msgSend_setOutstandingRemoteFetchSignal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutstandingRemoteFetchSignal:");
}

id objc_msgSend_setOverrideBeginTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideBeginTime:");
}

id objc_msgSend_setOverrideBeginTimeFromLogEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideBeginTimeFromLogEntry:");
}

id objc_msgSend_setOverrideIDMSFetchTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideIDMSFetchTime:");
}

id objc_msgSend_setOverrideReversePushConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideReversePushConfig:");
}

id objc_msgSend_setOverrideReversePushPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideReversePushPercentage:");
}

id objc_msgSend_setParsedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParsedLength:");
}

id objc_msgSend_setPatClosedProof_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPatClosedProof:");
}

id objc_msgSend_setPatConfigProof_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPatConfigProof:");
}

id objc_msgSend_setPatEarliestVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPatEarliestVersion:");
}

id objc_msgSend_setPatLogBeginningMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPatLogBeginningMs:");
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaused:");
}

id objc_msgSend_setPcsOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPcsOperation:");
}

id objc_msgSend_setPcsOperationsClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPcsOperationsClass:");
}

id objc_msgSend_setPeerOverride_application_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerOverride:application:state:");
}

id objc_msgSend_setPeerOverrides_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerOverrides:");
}

id objc_msgSend_setPeerOverridesStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerOverridesStore:");
}

id objc_msgSend_setPeerQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerQueue:");
}

id objc_msgSend_setPeerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerState:");
}

id objc_msgSend_setPeerStateMostRecent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerStateMostRecent:");
}

id objc_msgSend_setPendingChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingChanges:");
}

id objc_msgSend_setPendingStatusChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingStatusChanges:");
}

id objc_msgSend_setPendingValidationsComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingValidationsComplete:");
}

id objc_msgSend_setPersistentContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentContainer:");
}

id objc_msgSend_setPersistentStoreCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreCoordinator:");
}

id objc_msgSend_setPersistentStoreDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreDescriptions:");
}

id objc_msgSend_setPopulating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopulating:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPredictedNextFireTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredictedNextFireTime:");
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToFetch:");
}

id objc_msgSend_setPropertiesToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToUpdate:");
}

id objc_msgSend_setProtectionToClassDForURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtectionToClassDForURL:error:");
}

id objc_msgSend_setPublicAccountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicAccountKey:");
}

id objc_msgSend_setPublicCloudDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicCloudDatabase:");
}

id objc_msgSend_setPublicID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicID:");
}

id objc_msgSend_setPublicIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicIdentity:");
}

id objc_msgSend_setPublicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicKey:");
}

id objc_msgSend_setPublicKeyFetcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicKeyFetcher:");
}

id objc_msgSend_setPublicKeyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicKeyID:");
}

id objc_msgSend_setPublicKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicKeyStore:");
}

id objc_msgSend_setPublicKeyStoreDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublicKeyStoreDelegate:");
}

id objc_msgSend_setPushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushToken:");
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQualityOfService:");
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryItems:");
}

id objc_msgSend_setQueryRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryRequest:");
}

id objc_msgSend_setQueryResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryResponse:");
}

id objc_msgSend_setQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setQueueIsLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueueIsLocked:");
}

id objc_msgSend_setRawAccountKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawAccountKey:");
}

id objc_msgSend_setReachabilityDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReachabilityDependency:");
}

id objc_msgSend_setReachabilityTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReachabilityTracker:");
}

id objc_msgSend_setReadyComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadyComplete:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setReceiptServerHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceiptServerHint:");
}

id objc_msgSend_setReceiptTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceiptTime:");
}

id objc_msgSend_setReceivers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivers:");
}

id objc_msgSend_setRecentlyOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentlyOptedIn:");
}

id objc_msgSend_setReferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferenceKey:");
}

id objc_msgSend_setRegisteredDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredDelegate:");
}

id objc_msgSend_setRegistrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegistrationData:");
}

id objc_msgSend_setRelationshipKeyPathsForPrefetching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelationshipKeyPathsForPrefetching:");
}

id objc_msgSend_setRemainingPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemainingPath:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestContexts:");
}

id objc_msgSend_setRequestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestData:");
}

id objc_msgSend_setRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestId:");
}

id objc_msgSend_setRequestIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestIds:");
}

id objc_msgSend_setRequestTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestTime:");
}

id objc_msgSend_setRequestsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestsArray:");
}

id objc_msgSend_setRequiredKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiredKeys:");
}

id objc_msgSend_setResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponse:");
}

id objc_msgSend_setResponseForRpcId_response_responseStatus_usedReversePush_serverHint_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseForRpcId:response:responseStatus:usedReversePush:serverHint:error:");
}

id objc_msgSend_setResponseStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseStatus:");
}

id objc_msgSend_setResponseTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseTime:");
}

id objc_msgSend_setResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResult:");
}

id objc_msgSend_setResult_treeHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResult:treeHead:error:");
}

id objc_msgSend_setResultError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultError:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setRetryEnsureIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryEnsureIdentity:");
}

id objc_msgSend_setRetryGetPrimaryAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryGetPrimaryAccount:");
}

id objc_msgSend_setRetryPendingValidations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryPendingValidations:");
}

id objc_msgSend_setRetryScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryScheduler:");
}

id objc_msgSend_setReturnsDistinctResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsDistinctResults:");
}

id objc_msgSend_setRevisions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRevisions:");
}

id objc_msgSend_setRpcId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRpcId:");
}

id objc_msgSend_setRpcType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRpcType:");
}

id objc_msgSend_setSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeconds:");
}

id objc_msgSend_setSeenDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeenDate:");
}

id objc_msgSend_setSeenDate_uris_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeenDate:uris:application:error:");
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelector:");
}

id objc_msgSend_setSelfDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfDevices:");
}

id objc_msgSend_setSelfErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfErrors:");
}

id objc_msgSend_setSelfInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfInfo:");
}

id objc_msgSend_setSelfResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfResults:");
}

id objc_msgSend_setSelfStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfStatus:");
}

id objc_msgSend_setSelfValidationResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfValidationResult:");
}

id objc_msgSend_setSentToIDS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentToIDS:");
}

id objc_msgSend_setSequenceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSequenceId:");
}

id objc_msgSend_setSerial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerial:");
}

id objc_msgSend_setServerHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerHint:");
}

id objc_msgSend_setServerHints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerHints:");
}

id objc_msgSend_setServerLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerLoggableDatas:");
}

id objc_msgSend_setServerOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerOptIn:");
}

id objc_msgSend_setServerOptInFetchReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerOptInFetchReasons:");
}

id objc_msgSend_setServerOptInScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerOptInScheduler:");
}

id objc_msgSend_setServerOptInState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerOptInState:");
}

id objc_msgSend_setServerRPCTimeoutSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerRPCTimeoutSeconds:");
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setService:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSet:");
}

id objc_msgSend_setSetGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetGroup:");
}

id objc_msgSend_setSetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetQueue:");
}

id objc_msgSend_setSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettings:");
}

id objc_msgSend_setSettingsData_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsData:data:");
}

id objc_msgSend_setSettingsDate_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsDate:date:");
}

id objc_msgSend_setSettingsNumber_number_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsNumber:number:");
}

id objc_msgSend_setShouldAddStoreAsynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAddStoreAsynchronously:");
}

id objc_msgSend_setShouldPokeIDSUponSigning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPokeIDSUponSigning:");
}

id objc_msgSend_setShutDown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShutDown:");
}

id objc_msgSend_setSigTerm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSigTerm:");
}

id objc_msgSend_setSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignature:");
}

id objc_msgSend_setSignatureQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignatureQueue:");
}

id objc_msgSend_setSignatureResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignatureResult:");
}

id objc_msgSend_setSignatureTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignatureTracker:");
}

id objc_msgSend_setSignatureVerified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignatureVerified:");
}

id objc_msgSend_setSignatureVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignatureVerifier:");
}

id objc_msgSend_setSignaturesComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignaturesComplete:");
}

id objc_msgSend_setSignedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignedAt:");
}

id objc_msgSend_setSignedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignedObject:");
}

id objc_msgSend_setSleepTimeBetweenIDSCheckups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSleepTimeBetweenIDSCheckups:");
}

id objc_msgSend_setSmDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmDataStore:");
}

id objc_msgSend_setSmManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmManager:");
}

id objc_msgSend_setSmh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmh:");
}

id objc_msgSend_setSmt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmt:");
}

id objc_msgSend_setSmtTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmtTimestamp:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setSpecificUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecificUser:");
}

id objc_msgSend_setSpkiHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpkiHash:");
}

id objc_msgSend_setStartRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartRevision:");
}

id objc_msgSend_setStartSLHRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartSLHRevision:");
}

id objc_msgSend_setStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStarted:");
}

id objc_msgSend_setStartingToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingToken:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateMachine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateMachine:");
}

id objc_msgSend_setStateMachineQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateMachineQueue:");
}

id objc_msgSend_setStateMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateMonitor:");
}

id objc_msgSend_setStaticAccountKeyEnforced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticAccountKeyEnforced:");
}

id objc_msgSend_setStaticAccountKeyStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticAccountKeyStatus:");
}

id objc_msgSend_setStaticKeyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticKeyController:");
}

id objc_msgSend_setStaticKeyEnforced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticKeyEnforced:");
}

id objc_msgSend_setStaticKeyStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticKeyStatus:");
}

id objc_msgSend_setStaticKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaticKeyStore:");
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatus:");
}

id objc_msgSend_setStatusFilled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusFilled:");
}

id objc_msgSend_setSth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSth:");
}

id objc_msgSend_setStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorage:");
}

id objc_msgSend_setStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStore:");
}

id objc_msgSend_setSucceed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSucceed:");
}

id objc_msgSend_setSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccess:");
}

id objc_msgSend_setSuccessNowForPropertyKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccessNowForPropertyKey:");
}

id objc_msgSend_setSuccessfulCKFetchDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccessfulCKFetchDependency:");
}

id objc_msgSend_setSuccessfulIDSRegistrationCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccessfulIDSRegistrationCheck:");
}

id objc_msgSend_setSwtSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwtSettings:");
}

id objc_msgSend_setSynced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSynced:");
}

id objc_msgSend_setSyncedLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncedLoggableDatas:");
}

id objc_msgSend_setSysdiagnoseQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSysdiagnoseQueue:");
}

id objc_msgSend_setSystemStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemStatus:");
}

id objc_msgSend_setTapToRadar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTapToRadar:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetOptInStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetOptInStates:");
}

id objc_msgSend_setTargetResolved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetResolved:");
}

id objc_msgSend_setTargetState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetState:");
}

id objc_msgSend_setTaskDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTaskDescription:");
}

id objc_msgSend_setTimeOfLastUpsell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOfLastUpsell:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTimeoutCanOccur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutCanOccur:");
}

id objc_msgSend_setTimeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutInterval:");
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForResource:");
}

id objc_msgSend_setTimeoutWaitForCKAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutWaitForCKAccount:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimestamp:");
}

id objc_msgSend_setTimestampMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimestampMs:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTltConfigProof_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTltConfigProof:");
}

id objc_msgSend_setTltEarliestVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTltEarliestVersion:");
}

id objc_msgSend_setTltKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTltKeyStore:");
}

id objc_msgSend_setTltLogBeginningMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTltLogBeginningMs:");
}

id objc_msgSend_setTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransaction:");
}

id objc_msgSend_setTranscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranscript:");
}

id objc_msgSend_setTransparencyAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransparencyAnalytics:");
}

id objc_msgSend_setTransparencyGPBGenericValue_forTransparencyGPBGenericValueKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransparencyGPBGenericValue:forTransparencyGPBGenericValueKey:");
}

id objc_msgSend_setTransparentData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransparentData:");
}

id objc_msgSend_setTransparentDataDiagnosticsJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransparentDataDiagnosticsJson:");
}

id objc_msgSend_setTransparentDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransparentDatas:");
}

id objc_msgSend_setTreeRollInfoURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTreeRollInfoURL:");
}

id objc_msgSend_setTriggerInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggerInterface:");
}

id objc_msgSend_setTrustedAppSigningKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrustedAppSigningKeys:");
}

id objc_msgSend_setTrustedKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrustedKeys:");
}

id objc_msgSend_setTrustedTltSigningKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrustedTltSigningKeys:");
}

id objc_msgSend_setTurnedOffIgnored_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnedOffIgnored:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setTypeURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypeURL:");
}

id objc_msgSend_setURLCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURLCache:");
}

id objc_msgSend_setUiStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiStatus:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUndoManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndoManager:");
}

id objc_msgSend_setUnique_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnique:");
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniqueIdentifier:");
}

id objc_msgSend_setUnknownFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnknownFields:");
}

id objc_msgSend_setUnlockDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockDependency:");
}

id objc_msgSend_setUnsigned_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnsigned:value:");
}

id objc_msgSend_setUnsupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnsupported:");
}

id objc_msgSend_setUpdateDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateDelegate:");
}

id objc_msgSend_setUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdated:");
}

id objc_msgSend_setUploadedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUploadedAt:");
}

id objc_msgSend_setUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUri:");
}

id objc_msgSend_setUriQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUriQueue:");
}

id objc_msgSend_setUriToDiagnostics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUriToDiagnostics:");
}

id objc_msgSend_setUriVRFOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUriVRFOutput:");
}

id objc_msgSend_setUris_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUris:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUseDeviceToDeviceEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseDeviceToDeviceEncryption:");
}

id objc_msgSend_setUseReversePush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseReversePush:");
}

id objc_msgSend_setUsedReversePush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsedReversePush:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValid:");
}

id objc_msgSend_setValidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidated:");
}

id objc_msgSend_setValidationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationDate:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValueTransformer_forName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueTransformer:forName:");
}

id objc_msgSend_setVerifiableSmh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerifiableSmh:");
}

id objc_msgSend_setVerificationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerificationId:");
}

id objc_msgSend_setVerificationResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerificationResult:");
}

id objc_msgSend_setVerificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerificationType:");
}

id objc_msgSend_setVerified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerified:");
}

id objc_msgSend_setVerifiedSignedMapHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerifiedSignedMapHead:");
}

id objc_msgSend_setVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerifier:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViews:");
}

id objc_msgSend_setVrfKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVrfKey:");
}

id objc_msgSend_setVrfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVrfType:");
}

id objc_msgSend_setWatchdog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchdog:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithUriVRFHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithUriVRFHash:");
}

id objc_msgSend_setWorkQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkQueue:");
}

id objc_msgSend_setWorkloop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkloop:");
}

id objc_msgSend_setWorkloopContextStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkloopContextStore:");
}

id objc_msgSend_setXpcContextStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcContextStore:");
}

id objc_msgSend_setXpcQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcQueue:");
}

id objc_msgSend_setXpcQueueDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcQueueDataStore:");
}

id objc_msgSend_set_APSRelayTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_APSRelayTopic:");
}

id objc_msgSend_set__verifiedLogHeads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set__verifiedLogHeads:");
}

id objc_msgSend_set_alternativeServicesStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_alternativeServicesStorage:");
}

id objc_msgSend_set_appleIDContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_appleIDContext:");
}

id objc_msgSend_set_applicationKeyStores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_applicationKeyStores:");
}

id objc_msgSend_set_contexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_contexts:");
}

id objc_msgSend_set_events_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_events:");
}

id objc_msgSend_set_pcsIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_pcsIdentity:");
}

id objc_msgSend_set_pcsIdentityCachedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_pcsIdentityCachedTime:");
}

id objc_msgSend_set_tlsTrustPinningPolicyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_tlsTrustPinningPolicyName:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settings");
}

id objc_msgSend_settingsAction_eventId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsAction:eventId:");
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setup");
}

id objc_msgSend_setupCloudKit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupCloudKit");
}

id objc_msgSend_setupCloudSchema_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupCloudSchema:error:");
}

id objc_msgSend_setupComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupComplete");
}

id objc_msgSend_setupContainingMessageClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupContainingMessageClass:");
}

id objc_msgSend_setupExtraTextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupExtraTextInfo:");
}

id objc_msgSend_setupOneofs_count_firstHasIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupOneofs:count:firstHasIndex:");
}

id objc_msgSend_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAccountStore");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedKeyService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedKeyService:");
}

id objc_msgSend_sharedKeyServiceForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedKeyServiceForApplication:");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedStore");
}

id objc_msgSend_shouldDoInitialCloudSyncing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDoInitialCloudSyncing:");
}

id objc_msgSend_shouldFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldFetch:");
}

id objc_msgSend_shouldGossip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldGossip");
}

id objc_msgSend_shouldMoveAsideDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMoveAsideDatabase:");
}

id objc_msgSend_shouldPokeIDSUponSigning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPokeIDSUponSigning");
}

id objc_msgSend_shouldRemove(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRemove");
}

id objc_msgSend_shouldRetry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRetry");
}

id objc_msgSend_shouldShowCFU_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCFU:");
}

id objc_msgSend_shouldUseReversePush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseReversePush:");
}

id objc_msgSend_shutDown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shutDown");
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shutdown");
}

id objc_msgSend_shutdownTimeStamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shutdownTimeStamp:");
}

id objc_msgSend_sigTerm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sigTerm");
}

id objc_msgSend_signData_application_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signData:application:logClient:completionBlock:");
}

id objc_msgSend_signData_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signData:completionBlock:");
}

id objc_msgSend_signData_fetchNow_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signData:fetchNow:completionHandler:");
}

id objc_msgSend_signData_key_certs_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signData:key:certs:completionHandler:");
}

id objc_msgSend_signDataWithTimestamp_fetchNow_timeShift_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signDataWithTimestamp:fetchNow:timeShift:completionHandler:");
}

id objc_msgSend_signalEventHander(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalEventHander");
}

id objc_msgSend_signature(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signature");
}

id objc_msgSend_signatureDiagnosticsJsonDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureDiagnosticsJsonDictionary");
}

id objc_msgSend_signatureQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureQueue");
}

id objc_msgSend_signatureResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureResult");
}

id objc_msgSend_signatureTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureTracker");
}

id objc_msgSend_signatureVerified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureVerified");
}

id objc_msgSend_signatureVerifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureVerifier");
}

id objc_msgSend_signaturesComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signaturesComplete");
}

id objc_msgSend_signedAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedAt");
}

id objc_msgSend_signedMutationTimestampCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedMutationTimestampCount:");
}

id objc_msgSend_signedMutationTimestampsFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedMutationTimestampsFailureCount:");
}

id objc_msgSend_signedObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedObject");
}

id objc_msgSend_signedTreeHeadFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedTreeHeadFailureCount:");
}

id objc_msgSend_signedTypeWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedTypeWithObject:");
}

id objc_msgSend_signedTypeWithObject_verifier_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedTypeWithObject:verifier:dataStore:");
}

id objc_msgSend_signingKeySpkihash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signingKeySpkihash");
}

id objc_msgSend_simpleStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simpleStatus");
}

id objc_msgSend_singletonName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singletonName");
}

id objc_msgSend_singletonNameC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singletonNameC");
}

id objc_msgSend_skipField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skipField:");
}

id objc_msgSend_skipMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skipMessage");
}

id objc_msgSend_sleepTimeBetweenIDSCheckups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepTimeBetweenIDSCheckups");
}

id objc_msgSend_slh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slh");
}

id objc_msgSend_smDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smDataStore");
}

id objc_msgSend_smManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smManager");
}

id objc_msgSend_smState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smState");
}

id objc_msgSend_smh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smh");
}

id objc_msgSend_smt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smt");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortMutationsByTimestamp_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortMutationsByTimestamp:error:");
}

id objc_msgSend_sortUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingSelector:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sortedFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedFields");
}

id objc_msgSend_sortedOptInOutHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedOptInOutHistory:");
}

id objc_msgSend_sourceStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceStates");
}

id objc_msgSend_specificUser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specificUser");
}

id objc_msgSend_startContactsSyncing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startContactsSyncing");
}

id objc_msgSend_startEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startEvent:");
}

id objc_msgSend_startFollowupStatusSampler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startFollowupStatusSampler");
}

id objc_msgSend_startKeyStoreStateSampler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startKeyStoreStateSampler");
}

id objc_msgSend_startMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMetrics");
}

id objc_msgSend_startMetrics_idsAccountTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMetrics:idsAccountTracker:");
}

id objc_msgSend_startMetrics_services_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMetrics:services:");
}

id objc_msgSend_startOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOperation");
}

id objc_msgSend_startRevision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRevision");
}

id objc_msgSend_startSLHRevision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSLHRevision");
}

id objc_msgSend_startSlh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSlh");
}

id objc_msgSend_startStateMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startStateMachine");
}

id objc_msgSend_started(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "started");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateConditions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateConditions");
}

id objc_msgSend_stateEngine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateEngine");
}

id objc_msgSend_stateInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateInit");
}

id objc_msgSend_stateMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMachine");
}

id objc_msgSend_stateMachineQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMachineQueue");
}

id objc_msgSend_stateMachineRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMachineRequests");
}

id objc_msgSend_stateMachineSysInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMachineSysInfo:");
}

id objc_msgSend_stateMachineWatchers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMachineWatchers");
}

id objc_msgSend_stateMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateMonitor");
}

id objc_msgSend_states(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "states");
}

id objc_msgSend_staticAccountKeyStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticAccountKeyStatus");
}

id objc_msgSend_staticKeyController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyController");
}

id objc_msgSend_staticKeyEnforced(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyEnforced");
}

id objc_msgSend_staticKeyFeatureNotEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyFeatureNotEnabled:");
}

id objc_msgSend_staticKeyModelURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyModelURL");
}

id objc_msgSend_staticKeyStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyStatus");
}

id objc_msgSend_staticKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticKeyStore");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusCode");
}

id objc_msgSend_statusFilled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusFilled");
}

id objc_msgSend_statusOfUsersOnService_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusOfUsersOnService:withCompletion:");
}

id objc_msgSend_sth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sth");
}

id objc_msgSend_stopEventWithFailure_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopEventWithFailure:error:");
}

id objc_msgSend_stopEventWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopEventWithSuccess:");
}

id objc_msgSend_storage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storage");
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "store");
}

id objc_msgSend_storeContactsSyncToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeContactsSyncToken:");
}

id objc_msgSend_storeContext_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeContext:application:");
}

id objc_msgSend_storeDeviceSignature_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeDeviceSignature:complete:");
}

id objc_msgSend_storeExpired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeExpired");
}

id objc_msgSend_storeFixup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeFixup:");
}

id objc_msgSend_storeIDMSDeviceList_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeIDMSDeviceList:error:");
}

id objc_msgSend_storeNeedsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeNeedsUpdate:");
}

id objc_msgSend_storeOptInForApplication_uris_state_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeOptInForApplication:uris:state:error:");
}

id objc_msgSend_storeOptInIntentForApplication_state_overwrite_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeOptInIntentForApplication:state:overwrite:error:");
}

id objc_msgSend_storeQueryRequest_queryResponse_serverHint_uri_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeQueryRequest:queryResponse:serverHint:uri:application:error:");
}

id objc_msgSend_storeReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeReady");
}

id objc_msgSend_storeSMHSignatureResult_smh_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeSMHSignatureResult:smh:error:");
}

id objc_msgSend_storeSelfVerificationInfo_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeSelfVerificationInfo:application:error:");
}

id objc_msgSend_storeSignatureResult_signatureError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeSignatureResult:signatureError:");
}

id objc_msgSend_storeStaticKey_contactIdentifier_contactExternalIdentifier_mappings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeStaticKey:contactIdentifier:contactExternalIdentifier:mappings:error:");
}

id objc_msgSend_strictStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strictStore");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stripApplicationPrefixForIdentifier_uri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stripApplicationPrefixForIdentifier:uri:");
}

id objc_msgSend_stripUnexpectedPathError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stripUnexpectedPathError:");
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToWeakObjectsMapTable");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_succeed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "succeed");
}

id objc_msgSend_success(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "success");
}

id objc_msgSend_successDependencies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successDependencies");
}

id objc_msgSend_successMetricsKey_forApplicationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successMetricsKey:forApplicationID:");
}

id objc_msgSend_successMetricsKey_validationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successMetricsKey:validationName:");
}

id objc_msgSend_successState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successState");
}

id objc_msgSend_successful(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successful");
}

id objc_msgSend_successfulCKFetchDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulCKFetchDependency");
}

id objc_msgSend_successfulIDSRegistrationCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulIDSRegistrationCheck");
}

id objc_msgSend_successfulSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulSync");
}

id objc_msgSend_superclass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superclass");
}

id objc_msgSend_supportedClassTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedClassTypes");
}

id objc_msgSend_swtSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swtSettings");
}

id objc_msgSend_synced(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synced");
}

id objc_msgSend_syncedLoggableDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncedLoggableDatas");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronize");
}

id objc_msgSend_synchronizeWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeWithCompletionHandler:");
}

id objc_msgSend_syntax(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syntax");
}

id objc_msgSend_sysdiagnose(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sysdiagnose");
}

id objc_msgSend_sysdiagnoseInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sysdiagnoseInfo:");
}

id objc_msgSend_sysdiagnoseQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sysdiagnoseQueue");
}

id objc_msgSend_systemFailureFeatureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFailureFeatureEnabled");
}

id objc_msgSend_systemStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemStatus");
}

id objc_msgSend_tapToRadar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToRadar");
}

id objc_msgSend_targetOptInStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetOptInStates");
}

id objc_msgSend_targetResolved(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetResolved");
}

id objc_msgSend_targetState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetState");
}

id objc_msgSend_tbsKTIDSRegistrationData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tbsKTIDSRegistrationData");
}

id objc_msgSend_terminated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "terminated");
}

id objc_msgSend_testHoldStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testHoldStates");
}

id objc_msgSend_textFormatName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFormatName");
}

id objc_msgSend_textFormatNameForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFormatNameForValue:");
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSince1970");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeOfLastUpsell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOfLastUpsell");
}

id objc_msgSend_timeShift_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeShift:");
}

id objc_msgSend_timeZoneForSecondsFromGMT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneForSecondsFromGMT:");
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeout");
}

id objc_msgSend_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeout:");
}

id objc_msgSend_timeout_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeout:block:");
}

id objc_msgSend_timeoutCanOccur(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeoutCanOccur");
}

id objc_msgSend_timeoutQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeoutQueue");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timer");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_timestampMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestampMs");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_tltConfigProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltConfigProof");
}

id objc_msgSend_tltEarliestVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltEarliestVersion");
}

id objc_msgSend_tltKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltKeyStore");
}

id objc_msgSend_tltLeafsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltLeafsArray");
}

id objc_msgSend_tltLeafsArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltLeafsArray_Count");
}

id objc_msgSend_tltLogBeginningMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tltLogBeginningMs");
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "token");
}

id objc_msgSend_tombstone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tombstone");
}

id objc_msgSend_topLevelTreeEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topLevelTreeEntry");
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topic");
}

id objc_msgSend_transaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transaction");
}

id objc_msgSend_transcript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcript");
}

id objc_msgSend_transformedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformedValue:");
}

id objc_msgSend_transitionOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionOperation");
}

id objc_msgSend_transparencyAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyAnalytics");
}

id objc_msgSend_transparencyClearKTRegistrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyClearKTRegistrationData:");
}

id objc_msgSend_transparencyCloudDeviceAdd_clientData_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyCloudDeviceAdd:clientData:complete:");
}

id objc_msgSend_transparencyCloudDeviceRemove_clientData_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyCloudDeviceRemove:clientData:complete:");
}

id objc_msgSend_transparencyCloudDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyCloudDevices:");
}

id objc_msgSend_transparencyDumpKTRegistrationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyDumpKTRegistrationData:");
}

id objc_msgSend_transparencyFilesPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyFilesPath:");
}

id objc_msgSend_transparencyGetKTSignatures_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyGetKTSignatures:complete:");
}

id objc_msgSend_transparencyPerformRegistrationSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyPerformRegistrationSignature:");
}

id objc_msgSend_transparencySysDiagnose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencySysDiagnose:");
}

id objc_msgSend_transparencyVersionStr(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyVersionStr");
}

id objc_msgSend_transparentDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparentDatas");
}

id objc_msgSend_treeHeadCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treeHeadCount:");
}

id objc_msgSend_treeId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treeId");
}

id objc_msgSend_treeRollInfoURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treeRollInfoURL");
}

id objc_msgSend_treeStateUnstable_logBeginTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treeStateUnstable:logBeginTime:");
}

id objc_msgSend_trigger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trigger");
}

id objc_msgSend_triggerActiveMonitorForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerActiveMonitorForView:");
}

id objc_msgSend_triggerAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAt:");
}

id objc_msgSend_triggerBAACertFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerBAACertFetcher");
}

id objc_msgSend_triggerBackgroundSystemValidate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerBackgroundSystemValidate:completionHandler:");
}

id objc_msgSend_triggerCKFetchCLI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCKFetchCLI:");
}

id objc_msgSend_triggerCheckExpiredPublicKeyStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCheckExpiredPublicKeyStores");
}

id objc_msgSend_triggerCheckIDSRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCheckIDSRegistration");
}

id objc_msgSend_triggerCheckKTAccountKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCheckKTAccountKey");
}

id objc_msgSend_triggerCloudKitStaticKeyRemoteUpdateNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCloudKitStaticKeyRemoteUpdateNotification");
}

id objc_msgSend_triggerConfigBagFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerConfigBagFetch:");
}

id objc_msgSend_triggerEnsureIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerEnsureIdentity");
}

id objc_msgSend_triggerFetchSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerFetchSelf:");
}

id objc_msgSend_triggerGetPrimaryAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerGetPrimaryAccount");
}

id objc_msgSend_triggerIDMSFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerIDMSFetch:");
}

id objc_msgSend_triggerIDMSFetchBackstop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerIDMSFetchBackstop:");
}

id objc_msgSend_triggerIDSCheck_selfValidationResult_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerIDSCheck:selfValidationResult:complete:");
}

id objc_msgSend_triggerIDSRepair_selfValidationResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerIDSRepair:selfValidationResult:");
}

id objc_msgSend_triggerIDSServerBagNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerIDSServerBagNotification");
}

id objc_msgSend_triggerInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerInterface");
}

id objc_msgSend_triggerKTAccountKeySignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerKTAccountKeySignature:");
}

id objc_msgSend_triggerOptInStateChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerOptInStateChange");
}

id objc_msgSend_triggerPublicKeyFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerPublicKeyFetch");
}

id objc_msgSend_triggerRefreshFromServerStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerRefreshFromServerStatus:");
}

id objc_msgSend_triggerRegistrationDataNeedsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerRegistrationDataNeedsUpdate:");
}

id objc_msgSend_triggerRemoteBAACertFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerRemoteBAACertFetch");
}

id objc_msgSend_triggerSelfValidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerSelfValidate:");
}

id objc_msgSend_triggerSelfValidateFromEnrollment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerSelfValidateFromEnrollment");
}

id objc_msgSend_triggerServerOptInFetch4h(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerServerOptInFetch4h");
}

id objc_msgSend_triggerStatusUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerStatusUpdate:");
}

id objc_msgSend_triggerSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerSync:");
}

id objc_msgSend_triggerTapToRadarNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerTapToRadarNotification");
}

id objc_msgSend_trustedAppLeafs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedAppLeafs");
}

id objc_msgSend_trustedAppSigningKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedAppSigningKeys");
}

id objc_msgSend_trustedIntermediates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedIntermediates");
}

id objc_msgSend_trustedKeyStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedKeyStore");
}

id objc_msgSend_trustedKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedKeys");
}

id objc_msgSend_trustedTltLeafs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedTltLeafs");
}

id objc_msgSend_trustedTltSigningKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedTltSigningKeys");
}

id objc_msgSend_turnedOffIgnored(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnedOffIgnored");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_typeURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeURL");
}

id objc_msgSend_uiBlockingNetworkTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiBlockingNetworkTimeout");
}

id objc_msgSend_uiStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiStatus");
}

id objc_msgSend_uintegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uintegerForKey:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactWithIdentifier:keysToFetch:error:");
}

id objc_msgSend_unimplementedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unimplementedError:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifier");
}

id objc_msgSend_unknownFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unknownFields");
}

id objc_msgSend_unlockDependency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockDependency");
}

id objc_msgSend_unregister(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregister");
}

id objc_msgSend_unregisteredKTData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisteredKTData");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongLongValue");
}

id objc_msgSend_unsupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsupported");
}

id objc_msgSend_unsupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsupported:");
}

id objc_msgSend_unverifiedRevisions_isMapHead_inclusion_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unverifiedRevisions:isMapHead:inclusion:logBeginMs:error:");
}

id objc_msgSend_updateClientData_deps_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateClientData:deps:complete:");
}

id objc_msgSend_updateCollectionConfigurationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCollectionConfigurationWithData:");
}

id objc_msgSend_updateContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContact:");
}

id objc_msgSend_updateDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDelegate");
}

id objc_msgSend_updateDeviceRecord_withConflictingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDeviceRecord:withConflictingDevice:");
}

id objc_msgSend_updateDevicesList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDevicesList:");
}

id objc_msgSend_updateIDSCacheWithResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateIDSCacheWithResults:");
}

id objc_msgSend_updateKTDisabledForIDS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateKTDisabledForIDS:");
}

id objc_msgSend_updateLastContactSyncDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLastContactSyncDate");
}

id objc_msgSend_updateMutation_withConflictingMutation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMutation:withConflictingMutation:");
}

id objc_msgSend_updatePublicKeyStores_diskStore_contextStore_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePublicKeyStores:diskStore:contextStore:complete:");
}

id objc_msgSend_updateReliabilityThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateReliabilityThreshold:");
}

id objc_msgSend_updateResultWithStaticKey_staticKeyStore_forDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateResultWithStaticKey:staticKeyStore:forDate:");
}

id objc_msgSend_updateSelfCloudDeviceWithPushToken_tbsRegistrationData_applications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelfCloudDeviceWithPushToken:tbsRegistrationData:applications:");
}

id objc_msgSend_updateTLTKeyStoreWithApplicationKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTLTKeyStoreWithApplicationKeyStore:");
}

id objc_msgSend_updateTreeHead_withConflictingHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTreeHead:withConflictingHead:");
}

id objc_msgSend_updateUri_serverLoggableDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUri:serverLoggableDatas:");
}

id objc_msgSend_updateWithAddMutation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithAddMutation:error:");
}

id objc_msgSend_updateWithDeviceStateArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithDeviceStateArray:");
}

id objc_msgSend_updateWithExtensions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithExtensions:error:");
}

id objc_msgSend_updateWithMapLeaf_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithMapLeaf:error:");
}

id objc_msgSend_updateWithMarkDeleteMutation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithMarkDeleteMutation:error:");
}

id objc_msgSend_updateWithMutation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithMutation:error:");
}

id objc_msgSend_updateWithOptInOutMutation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithOptInOutMutation:error:");
}

id objc_msgSend_updateWithOptInOutWithExt_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithOptInOutWithExt:error:");
}

id objc_msgSend_updateWithPublicKeyResponse_dataStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithPublicKeyResponse:dataStore:error:");
}

id objc_msgSend_updateWithSMTs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithSMTs:error:");
}

id objc_msgSend_updateWithStaticKeyEnforced_isFailureIgnoredForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithStaticKeyEnforced:isFailureIgnoredForDate:");
}

id objc_msgSend_updated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updated");
}

id objc_msgSend_uploadedAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadedAt");
}

id objc_msgSend_uploadedDeviceSignature_tbs_complete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadedDeviceSignature:tbs:complete:");
}

id objc_msgSend_uploadedToKVS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadedToKVS");
}

id objc_msgSend_uri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uri");
}

id objc_msgSend_uriArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriArray");
}

id objc_msgSend_uriArray_Count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriArray_Count");
}

id objc_msgSend_uriQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriQueue");
}

id objc_msgSend_uriToServerLoggableDatas(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriToServerLoggableDatas");
}

id objc_msgSend_uriVRFOutput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriVRFOutput");
}

id objc_msgSend_uriWitness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uriWitness");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_urlForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlForKey:");
}

id objc_msgSend_useReversePush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useReversePush");
}

id objc_msgSend_usedReversePush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usedReversePush");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userReversePushPercentage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userReversePushPercentage");
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "username");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuid");
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valid");
}

id objc_msgSend_validBAAKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validBAAKey");
}

id objc_msgSend_validLoggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validLoggableDatas:error:");
}

id objc_msgSend_validateActiveClientDatas_at_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateActiveClientDatas:at:error:");
}

id objc_msgSend_validateAndReportEnroll_transparentData_accountKey_loggableDatas_initialResult_idsResponseTime_responseMetadata_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndReportEnroll:transparentData:accountKey:loggableDatas:initialResult:idsResponseTime:responseMetadata:error:");
}

id objc_msgSend_validateAndReportPeerOrEnroll_type_transparentData_accountKey_loggableDatas_initialResult_idsResponseTime_responseMetadata_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndReportPeerOrEnroll:type:transparentData:accountKey:loggableDatas:initialResult:idsResponseTime:responseMetadata:error:");
}

id objc_msgSend_validateAndReportSelf_transparentData_accountKey_serverloggableDatas_syncedLoggableDatas_optInCheck_cloudDevices_pcsAccountKey_kvsOptInHistory_isReplay_initialResult_idsResponseTime_responseMetadata_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndReportSelf:transparentData:accountKey:serverloggableDatas:syncedLoggableDatas:optInCheck:cloudDevices:pcsAccountKey:kvsOptInHistory:isReplay:initialResult:idsResponseTime:responseMetadata:error:");
}

id objc_msgSend_validateAndUpdateWithServerLoggableDatas_accountKey_idsResponseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndUpdateWithServerLoggableDatas:accountKey:idsResponseTime:error:");
}

id objc_msgSend_validateAndUpdateWithSyncedLoggableDatas_accountKey_cloudDevices_requestDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndUpdateWithSyncedLoggableDatas:accountKey:cloudDevices:requestDate:error:");
}

id objc_msgSend_validateConfigBagCertificates_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateConfigBagCertificates:error:");
}

id objc_msgSend_validateConfigBagEntries_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateConfigBagEntries:error:");
}

id objc_msgSend_validateConfigBagSignature_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateConfigBagSignature:error:");
}

id objc_msgSend_validateConfigEntries_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateConfigEntries:error:");
}

id objc_msgSend_validateEmptyOptInOutHistory_responseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateEmptyOptInOutHistory:responseTime:error:");
}

id objc_msgSend_validateEnrollKTRequest_insertResponse_transparentData_loggableDatas_cloudOptIn_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateEnrollKTRequest:insertResponse:transparentData:loggableDatas:cloudOptIn:error:");
}

id objc_msgSend_validateEnrollmentRequestId_application_logClient_cloudOptIn_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateEnrollmentRequestId:application:logClient:cloudOptIn:completionHandler:");
}

id objc_msgSend_validateEnrollmentRequestId_transparentData_loggableDatas_cloudOptIn_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateEnrollmentRequestId:transparentData:loggableDatas:cloudOptIn:error:");
}

id objc_msgSend_validateEventName_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateEventName:application:");
}

id objc_msgSend_validateOptInHistory_accountKey_responseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateOptInHistory:accountKey:responseTime:error:");
}

id objc_msgSend_validateOptInHistory_responseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateOptInHistory:responseTime:error:");
}

id objc_msgSend_validateOptInStatusWithAccountKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateOptInStatusWithAccountKey:error:");
}

id objc_msgSend_validateOtherAccountsInactiveForAccount_at_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateOtherAccountsInactiveForAccount:at:error:");
}

id objc_msgSend_validatePeer_transparentData_accountKey_loggableDatas_enforceStaticKey_idsResponseTime_responseTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeer:transparentData:accountKey:loggableDatas:enforceStaticKey:idsResponseTime:responseTime:error:");
}

id objc_msgSend_validatePeer_verificationInfo_fetchNow_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeer:verificationInfo:fetchNow:completionBlock:");
}

id objc_msgSend_validatePeerIDSKTVerification_batchQuery_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerIDSKTVerification:batchQuery:completionBlock:");
}

id objc_msgSend_validatePeerIDSKTVerification_serverRPC_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerIDSKTVerification:serverRPC:completionBlock:");
}

id objc_msgSend_validatePeerIDSKTVerification_singleQuery_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerIDSKTVerification:singleQuery:completionBlock:");
}

id objc_msgSend_validatePeerOrEnrollKTRequest_queryRequest_queryResponse_transparentData_loggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerOrEnrollKTRequest:queryRequest:queryResponse:transparentData:loggableDatas:error:");
}

id objc_msgSend_validatePeerRequestId_revalidate_fetchNow_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerRequestId:revalidate:fetchNow:completionHandler:");
}

id objc_msgSend_validatePeerRequestId_uri_application_logClient_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerRequestId:uri:application:logClient:completionHandler:");
}

id objc_msgSend_validatePeerRequestId_uri_application_logClient_revalidate_fetchNow_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeerRequestId:uri:application:logClient:revalidate:fetchNow:completionHandler:");
}

id objc_msgSend_validatePeers_application_fetchNow_logClient_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeers:application:fetchNow:logClient:completionBlock:");
}

id objc_msgSend_validatePeers_fetchNow_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePeers:fetchNow:completionBlock:");
}

id objc_msgSend_validatePendingPeersForBatchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingPeersForBatchQuery:");
}

id objc_msgSend_validatePendingPeersForRpcId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingPeersForRpcId:");
}

id objc_msgSend_validatePendingPeersForSingleQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingPeersForSingleQuery:");
}

id objc_msgSend_validatePendingSMTLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingSMTLimit");
}

id objc_msgSend_validatePendingSMTs_singleQuery_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingSMTs:singleQuery:error:");
}

id objc_msgSend_validatePendingSMTsForBatchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingSMTsForBatchQuery:");
}

id objc_msgSend_validatePendingSMTsForRpcId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingSMTsForRpcId:");
}

id objc_msgSend_validatePendingSMTsForSingleQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingSMTsForSingleQuery:");
}

id objc_msgSend_validatePendingURILimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingURILimit");
}

id objc_msgSend_validatePendingURIsAndRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePendingURIsAndRequests");
}

id objc_msgSend_validateSelf_transparentData_accountKey_serverloggableDatas_syncedLoggableDatas_idsResponseTime_responseTime_optInCheck_cloudDevices_pcsAccountKey_kvsOptInHistory_isReplay_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateSelf:transparentData:accountKey:serverloggableDatas:syncedLoggableDatas:idsResponseTime:responseTime:optInCheck:cloudDevices:pcsAccountKey:kvsOptInHistory:isReplay:error:");
}

id objc_msgSend_validateSelfDiagnostics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateSelfDiagnostics:");
}

id objc_msgSend_validateSelfKTRequest_queryRequest_queryResponse_optInCheck_cloudDevices_pcsAccountKey_kvsOptInHistory_isReplay_transparentData_loggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateSelfKTRequest:queryRequest:queryResponse:optInCheck:cloudDevices:pcsAccountKey:kvsOptInHistory:isReplay:transparentData:loggableDatas:error:");
}

id objc_msgSend_validateSelfKTRequest_queryRequest_queryResponse_optInCheck_cloudDevices_transparentData_loggableDatas_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateSelfKTRequest:queryRequest:queryResponse:optInCheck:cloudDevices:transparentData:loggableDatas:error:");
}

id objc_msgSend_validateSignature_withPublicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateSignature:withPublicKey:");
}

id objc_msgSend_validateStaticKeyForPeer_accountKey_application_staticKeyStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStaticKeyForPeer:accountKey:application:staticKeyStore:error:");
}

id objc_msgSend_validateStaticKeyForPeer_accountKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStaticKeyForPeer:accountKey:error:");
}

id objc_msgSend_validateStaticKeyStoreMappingByContactExternalURI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStaticKeyStoreMappingByContactExternalURI:error:");
}

id objc_msgSend_validateStaticKeyStoreMappingByContactIdentifer_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStaticKeyStoreMappingByContactIdentifer:error:");
}

id objc_msgSend_validateStaticKeyStoreMappingByKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStaticKeyStoreMappingByKey:error:");
}

id objc_msgSend_validateStoreEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateStoreEntry:error:");
}

id objc_msgSend_validationFunc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validationFunc");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueAtIndex:");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForHTTPHeaderField:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPointer:");
}

id objc_msgSend_varintList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "varintList");
}

id objc_msgSend_verifiableSmh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiableSmh");
}

id objc_msgSend_verificationId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verificationId");
}

id objc_msgSend_verificationInfoProviderIdForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verificationInfoProviderIdForApplication:");
}

id objc_msgSend_verificationResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verificationResult");
}

id objc_msgSend_verificationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verificationType");
}

id objc_msgSend_verificationWithinTTLOfDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verificationWithinTTLOfDate:");
}

id objc_msgSend_verified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verified");
}

id objc_msgSend_verifiedAccountOptInState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedAccountOptInState");
}

id objc_msgSend_verifiedLogHeads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedLogHeads");
}

id objc_msgSend_verifiedSignedMapHead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedSignedMapHead");
}

id objc_msgSend_verifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifier");
}

id objc_msgSend_verifierOfType_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifierOfType:key:");
}

id objc_msgSend_verifierResultForPeer_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifierResultForPeer:application:");
}

id objc_msgSend_verifierResultWithStaticKeyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifierResultWithStaticKeyStore:");
}

id objc_msgSend_verifyCertificates_intermediates_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyCertificates:intermediates:application:error:");
}

id objc_msgSend_verifyCertificates_intermediates_policy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyCertificates:intermediates:policy:error:");
}

id objc_msgSend_verifyConfigProof_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConfigProof:");
}

id objc_msgSend_verifyConfigProof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConfigProof:error:");
}

id objc_msgSend_verifyConsistency_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistency:error:");
}

id objc_msgSend_verifyConsistencyProof_startHash_startSize_endHash_endSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistencyProof:startHash:startSize:endHash:endSize:error:");
}

id objc_msgSend_verifyConsistencyProof_startLogHead_endLogHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistencyProof:startLogHead:endLogHead:error:");
}

id objc_msgSend_verifyConsistencyProofDownload_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistencyProofDownload:error:");
}

id objc_msgSend_verifyConsistencyProofDownloadRecord_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistencyProofDownloadRecord:error:");
}

id objc_msgSend_verifyConsistencyProofResponse_startRevision_receivedRevisions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConsistencyProofResponse:startRevision:receivedRevisions:error:");
}

id objc_msgSend_verifyData_signature_accountPublicKeyInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyData:signature:accountPublicKeyInfo:error:");
}

id objc_msgSend_verifyDeviceMutation_mapLeaf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyDeviceMutation:mapLeaf:");
}

id objc_msgSend_verifyHeadConsistencyDownload_application_logClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyHeadConsistencyDownload:application:logClient:");
}

id objc_msgSend_verifyHeadInclusionDownload_application_logClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyHeadInclusionDownload:application:logClient:");
}

id objc_msgSend_verifyHeadsWithPendingSignatures_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyHeadsWithPendingSignatures:error:");
}

id objc_msgSend_verifyInclusion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusion:error:");
}

id objc_msgSend_verifyInclusionOfLogLeaf_position_treeSize_treeHead_hashPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionOfLogLeaf:position:treeSize:treeHead:hashPath:error:");
}

id objc_msgSend_verifyInclusionOfMapLeaf_position_treeHead_treeId_hashPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionOfMapLeaf:position:treeHead:treeId:hashPath:error:");
}

id objc_msgSend_verifyInclusionProof_mapLeaf_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionProof:mapLeaf:error:");
}

id objc_msgSend_verifyInclusionProofDownload_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionProofDownload:error:");
}

id objc_msgSend_verifyInclusionProofDownloadRecord_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionProofDownloadRecord:error:");
}

id objc_msgSend_verifyInclusionProofWithMapEntry_perAppLogEntry_topLevelTreeEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyInclusionProofWithMapEntry:perAppLogEntry:topLevelTreeEntry:error:");
}

id objc_msgSend_verifyKTSMTSignatures_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyKTSMTSignatures:error:");
}

id objc_msgSend_verifyKTSMTsMerged_mapLeaf_analyticsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyKTSMTsMerged:mapLeaf:analyticsData:");
}

id objc_msgSend_verifyLeaf_intermediates_policy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyLeaf:intermediates:policy:error:");
}

id objc_msgSend_verifyLogConsistencyResponse_startRevision_receivedRevisions_forwards_serverHint_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyLogConsistencyResponse:startRevision:receivedRevisions:forwards:serverHint:error:");
}

id objc_msgSend_verifyLogEntryWithLogLeaf_position_hashesToRoot_signedLogHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyLogEntryWithLogLeaf:position:hashesToRoot:signedLogHead:error:");
}

id objc_msgSend_verifyLoggableDataSignatures_accountKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyLoggableDataSignatures:accountKey:error:");
}

id objc_msgSend_verifyMMD_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMMD:error:");
}

id objc_msgSend_verifyMapEntryWithMapLeaf_hashesToRoot_signedMapHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMapEntryWithMapLeaf:hashesToRoot:signedMapHead:error:");
}

id objc_msgSend_verifyMapHeadMMDs_application_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMapHeadMMDs:application:error:");
}

id objc_msgSend_verifyMessage_salt_output_proof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMessage:salt:output:proof:error:");
}

id objc_msgSend_verifyMessage_salt_output_proof_key_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMessage:salt:output:proof:key:error:");
}

id objc_msgSend_verifyMessage_signature_spkiHash_algorithm_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMessage:signature:spkiHash:algorithm:error:");
}

id objc_msgSend_verifyMessage_signature_spkiHash_trustedKeys_algorithm_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyMessage:signature:spkiHash:trustedKeys:algorithm:error:");
}

id objc_msgSend_verifyOptInOutMutationMerged_mapLeaf_pendingAccountAdds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyOptInOutMutationMerged:mapLeaf:pendingAccountAdds:");
}

id objc_msgSend_verifyOptInOutWithExtMerged_accountKeyHash_mapLeaf_pendingAccountAdds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyOptInOutWithExtMerged:accountKeyHash:mapLeaf:pendingAccountAdds:");
}

id objc_msgSend_verifyPatInclusionProofWithPerAppLogEntry_topLevelTreeEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyPatInclusionProofWithPerAppLogEntry:topLevelTreeEntry:error:");
}

id objc_msgSend_verifyPerApplicationTreeEntry_mapHead_topLevelTreeEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyPerApplicationTreeEntry:mapHead:topLevelTreeEntry:error:");
}

id objc_msgSend_verifyResponse_uri_expectedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyResponse:uri:expectedState:");
}

id objc_msgSend_verifyRevisionLogInclusionProofResponse_receivedRevisions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyRevisionLogInclusionProofResponse:receivedRevisions:error:");
}

id objc_msgSend_verifyRevisionLogProofLogEntry_patSTH_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyRevisionLogProofLogEntry:patSTH:error:");
}

id objc_msgSend_verifyRevisionLogTopLevelProof_patSTH_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyRevisionLogTopLevelProof:patSTH:error:");
}

id objc_msgSend_verifySMHInclusion_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySMHInclusion:logBeginMs:error:");
}

id objc_msgSend_verifySMTTimestamps_receiptDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySMTTimestamps:receiptDate:error:");
}

id objc_msgSend_verifySMTs_uri_serverHint_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySMTs:uri:serverHint:error:");
}

id objc_msgSend_verifySMTsWithPendingSignatures_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySMTsWithPendingSignatures:error:");
}

id objc_msgSend_verifySTHInclusion_logBeginMs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySTHInclusion:logBeginMs:error:");
}

id objc_msgSend_verifySTHs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySTHs:error:");
}

id objc_msgSend_verifyServerInvariantsAt_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyServerInvariantsAt:error:");
}

id objc_msgSend_verifyServerLoggableDatas_againstSyncedLoggableDatas_cloudDevices_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyServerLoggableDatas:againstSyncedLoggableDatas:cloudDevices:error:");
}

id objc_msgSend_verifySignatureWithAccountKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySignatureWithAccountKey:error:");
}

id objc_msgSend_verifyTLTEntryForPerApplicationLogHead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyTLTEntryForPerApplicationLogHead:error:");
}

id objc_msgSend_verifyUriWitness_uri_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyUriWitness:uri:error:");
}

id objc_msgSend_verifyWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyWithError:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "version");
}

id objc_msgSend_views(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "views");
}

id objc_msgSend_vrfKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vrfKey");
}

id objc_msgSend_vrfPublicKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vrfPublicKey");
}

id objc_msgSend_vrfPublicKeyWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vrfPublicKeyWithError:");
}

id objc_msgSend_vrfType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vrfType");
}

id objc_msgSend_wait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wait:");
}

id objc_msgSend_waitForIDSRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForIDSRegistration:");
}

id objc_msgSend_waitSetupComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitSetupComplete:");
}

id objc_msgSend_waitUntil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntil:");
}

id objc_msgSend_waitUntilFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilFinished");
}

id objc_msgSend_waitUntilFinishedOrTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilFinishedOrTimeout:");
}

id objc_msgSend_waitUntilReadyForRPCForOperation_fast_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilReadyForRPCForOperation:fast:error:");
}

id objc_msgSend_watchdog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchdog");
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakObjectsHashTable");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_wireType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wireType");
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workQueue");
}

id objc_msgSend_workloop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workloop");
}

id objc_msgSend_workloopContextStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workloopContextStore");
}

id objc_msgSend_wrapperPCSIdentitySetCreateManatee_service_options_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperPCSIdentitySetCreateManatee:service:options:block:");
}

id objc_msgSend_write_maxLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "write:maxLength:");
}

id objc_msgSend_writeBool_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBool:value:");
}

id objc_msgSend_writeBoolNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBoolNoTag:");
}

id objc_msgSend_writeBytes_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBytes:value:");
}

id objc_msgSend_writeBytesArray_values_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBytesArray:values:");
}

id objc_msgSend_writeBytesNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBytesNoTag:");
}

id objc_msgSend_writeConfigToDisk_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeConfigToDisk:error:");
}

id objc_msgSend_writeDelimitedToCodedOutputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeDelimitedToCodedOutputStream:");
}

id objc_msgSend_writeDictionaryToFile_fileName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeDictionaryToFile:fileName:error:");
}

id objc_msgSend_writeDictionaryToFile_fileName_inDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeDictionaryToFile:fileName:inDirectory:error:");
}

id objc_msgSend_writeDouble_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeDouble:value:");
}

id objc_msgSend_writeDoubleNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeDoubleNoTag:");
}

id objc_msgSend_writeEnum_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeEnum:value:");
}

id objc_msgSend_writeEnumNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeEnumNoTag:");
}

id objc_msgSend_writeExtensionsToCodedOutputStream_range_sortedExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeExtensionsToCodedOutputStream:range:sortedExtensions:");
}

id objc_msgSend_writeField_toCodedOutputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeField:toCodedOutputStream:");
}

id objc_msgSend_writeFixed32_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed32:value:");
}

id objc_msgSend_writeFixed32Array_values_tag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed32Array:values:tag:");
}

id objc_msgSend_writeFixed32NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed32NoTag:");
}

id objc_msgSend_writeFixed64_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed64:value:");
}

id objc_msgSend_writeFixed64Array_values_tag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed64Array:values:tag:");
}

id objc_msgSend_writeFixed64NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFixed64NoTag:");
}

id objc_msgSend_writeFloat_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFloat:value:");
}

id objc_msgSend_writeFloatNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFloatNoTag:");
}

id objc_msgSend_writeGroup_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeGroup:value:");
}

id objc_msgSend_writeGroupNoTag_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeGroupNoTag:value:");
}

id objc_msgSend_writeInt32NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeInt32NoTag:");
}

id objc_msgSend_writeInt64NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeInt64NoTag:");
}

id objc_msgSend_writeLoggableDatas_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeLoggableDatas:request:");
}

id objc_msgSend_writeMessage_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeMessage:value:");
}

id objc_msgSend_writeMessageNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeMessageNoTag:");
}

id objc_msgSend_writePublicKeyStoreToDisk_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writePublicKeyStoreToDisk:error:");
}

id objc_msgSend_writeRawMessageSetExtension_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeRawMessageSetExtension:value:");
}

id objc_msgSend_writeRawVarintSizeTAs32_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeRawVarintSizeTAs32:");
}

id objc_msgSend_writeResult_request_proof_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeResult:request:proof:error:");
}

id objc_msgSend_writeResult_request_proof_replay_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeResult:request:proof:replay:error:");
}

id objc_msgSend_writeResult_verification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeResult:verification:");
}

id objc_msgSend_writeSFixed32NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeSFixed32NoTag:");
}

id objc_msgSend_writeSFixed64NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeSFixed64NoTag:");
}

id objc_msgSend_writeSInt32NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeSInt32NoTag:");
}

id objc_msgSend_writeSInt64NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeSInt64NoTag:");
}

id objc_msgSend_writeString_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeString:value:");
}

id objc_msgSend_writeStringNoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeStringNoTag:");
}

id objc_msgSend_writeTag_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeTag:format:");
}

id objc_msgSend_writeToCodedOutputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToCodedOutputStream:");
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_writeToOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToOutput:");
}

id objc_msgSend_writeToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:error:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_writeUInt32_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUInt32:value:");
}

id objc_msgSend_writeUInt32NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUInt32NoTag:");
}

id objc_msgSend_writeUInt64_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUInt64:value:");
}

id objc_msgSend_writeUInt64Array_values_tag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUInt64Array:values:tag:");
}

id objc_msgSend_writeUInt64NoTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUInt64NoTag:");
}

id objc_msgSend_writeUnknownGroup_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeUnknownGroup:value:");
}

id objc_msgSend_xpc24HrNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpc24HrNotification:");
}

id objc_msgSend_xpcActivityReversePushPercentage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcActivityReversePushPercentage");
}

id objc_msgSend_xpcContextStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcContextStore");
}

id objc_msgSend_xpcDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcDataStore");
}

id objc_msgSend_xpcQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcQueue");
}

id objc_msgSend_xpcQueueDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcQueueDataStore");
}
