uint64_t sub_1003316D0(const char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_100008384(&qword_1007BA8A0) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10032B784(a1, a2, v2 + v6, v2 + v9, *(_QWORD **)(v2 + v10), *(const char **)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t destroy for SDAirDropMediaConversionResults(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t *_s16DaemoniOSLibrary31SDAirDropMediaConversionResultsVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for SDAirDropMediaConversionResults(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for SDBLEAdvertiser.Configuration.AirDrop(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for SDAirDropMediaConversionResults(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropMediaConversionResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropMediaConversionResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropMediaConversionResults()
{
  return &type metadata for SDAirDropMediaConversionResults;
}

uint64_t sub_100331960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA8B8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA8B8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003319F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[6] = a1;
  v2[7] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[12] = v6;
  v2[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA9B8);
  v2[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[15] = v8;
  v2[16] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[18] = v10;
  v2[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return swift_task_switch(sub_100331B00, v11, 0);
}

uint64_t sub_100331B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  const char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(v1 + 144);
  v2 = *(_QWORD *)(v1 + 152);
  v4 = *(_QWORD *)(v1 + 136);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    v8 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v7);
    v9 = sub_100229040((uint64_t)v8);
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v1 + 16) = 0;
    v10 = swift_allocObject(&unk_100722920, 24, 7);
    *(_QWORD *)(v10 + 16) = v9;
    v11 = sub_100008384(&qword_1007BA9D0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000016, 0x80000001006163D0, v1 + 16, &unk_1007BA9C8, v10, 0xD00000000000006ALL, 0x80000001006163F0, 56, &type metadata for Double, v11);
    v12 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v1 + 168) = v12;
    *v12 = v1;
    v12[1] = sub_100331C98;
    return SFProgressTask.finalValue.getter(v1 + 24, *(_QWORD *)(v1 + 112));
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 128);
    v15 = *(_QWORD *)(v1 + 104);
    v16 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 152));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  }
}

uint64_t sub_100331C98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  v5 = *(_QWORD *)(*v1 + 120);
  v4 = *(_QWORD *)(*v1 + 128);
  v6 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_100331DA8;
  else
    v7 = sub_100331D24;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 160), 0);
}

uint64_t sub_100331D24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 24);

  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16) != 0;
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v3);
}

uint64_t sub_100331DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  NSObject *log;
  uint64_t *v33;
  os_log_type_t type;
  uint64_t v35;
  uint64_t v36;

  if (qword_1007B3F20 != -1)
    swift_once(&qword_1007B3F20, sub_100331960);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BA8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v5);
  swift_errorRetain(v2);
  v7 = swift_errorRetain(v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 88);
  if (v10)
  {
    v15 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 72);
    type = v9;
    v16 = *(_QWORD *)(v0 + 64);
    v31 = *(_QWORD *)(v0 + 88);
    v17 = swift_slowAlloc(22, -1);
    v33 = (uint64_t *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(32, -1);
    v36 = v35;
    *(_DWORD *)v17 = 136315394;
    log = v8;
    SFAirDropReceive.AskRequest.id.getter(v35);
    v18 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v16, v18);
    v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v15, v16);
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v19, (unint64_t)v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v17 + 4);
    v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v13, v31, v22);
    *(_WORD *)(v17 + 12) = 2112;
    swift_errorRetain(v11);
    v23 = _swift_stdlib_bridgeErrorToNSError(v11);
    *(_QWORD *)(v0 + 40) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v17 + 14);
    *v33 = v23;
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to get handling app for ask request %s: %@", (uint8_t *)v17, 0x16u);
    v24 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v33, 1, v24);
    swift_slowDealloc(v33, -1, -1);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  v25 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16) != 0;
  v26 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v25);
}

void sub_1003320F4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  double v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  double v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  _BYTE v32[56];

  v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)v4).n128_u64[0];
  v7 = *(void **)(v2 + 16);
  if (v7)
  {
    v8 = objc_msgSend(v7, "localizedName", v6);
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
  }
  v12 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v12, v32);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x5F434952454E4547;
  v14 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xEC0000004B4E494CLL;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)&v15 = swift_bridgeObjectRetain((const char *)0xEC0000004B4E494CLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v15);
  v16._countAndFlagsBits = 95;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x5F434952454E4547;
  v17._object = (void *)0xEC0000004B4E494CLL;
  String.append(_:)(v17);
  swift_bridgeObjectRelease((const char *)0xEC0000004B4E494CLL);
  if (v5 > 1)
  {
    v18._countAndFlagsBits = 0x4C4152554C505FLL;
    v18._object = (void *)0xE700000000000000;
    String.append(_:)(v18);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v19._countAndFlagsBits = 0x4C4154495041435FLL;
    v19._object = (void *)0xEC00000044455A49;
    String.append(_:)(v19);
  }
  v20._countAndFlagsBits = 0x545845545FLL;
  v20._object = (void *)0xE500000000000000;
  String.append(_:)(v20);
  swift_setDeallocating(inited);
  v21 = *(_QWORD *)(inited + 16);
  v22 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v14, v21, v22);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v25 = (id)SFLocalizedStringForKey(v23, v24);

  if (v25)
  {
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v29 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v30 = swift_allocObject(v29, 112, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1005CF250;
    *(_QWORD *)(v30 + 56) = &type metadata for Int;
    *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v30 + 32) = v5;
    *(_QWORD *)(v30 + 96) = &type metadata for String;
    *(_QWORD *)(v30 + 104) = sub_100299AB0();
    *(_QWORD *)(v30 + 72) = v9;
    *(_QWORD *)(v30 + 80) = v11;
    static String.localizedStringWithFormat(_:_:)(v26, v28, v30);
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v28).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v30, v31);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003323B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_100008384(&qword_1007B9928);
  v4[20] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[21] = v6;
  v4[22] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[23] = swift_task_alloc(v7);
  v4[24] = swift_task_alloc(v7);
  v4[25] = swift_task_alloc(v7);
  v4[26] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v4[27] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[28] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v10);
  v4[30] = swift_task_alloc(v10);
  v4[31] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[32] = swift_task_alloc(v11);
  v4[33] = swift_task_alloc(v11);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v12 = static AirDropActor.shared;
  v4[34] = static AirDropActor.shared;
  return swift_task_switch(sub_100332518, v12, 0);
}

void sub_100332518()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  __n128 v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  Swift::String v39;
  double v40;
  double v41;
  char v42;
  void *v43;
  id v44;
  NSURL *v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSURL *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(double *);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  NSURL *v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v100;
  double v101;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 280) = v2;
  v3 = swift_bridgeObjectRetain((const char *)v1);
  v4 = 0;
  v5 = 0;
  v6 = 0;
  while (1)
  {
    *(_QWORD *)(v0 + 288) = v4;
    if (v6 == v2)
    {
      v99 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 56);
      ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v99)(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 216), v3);
      v7 = *(_QWORD *)(v0 + 280);
LABEL_6:
      v11 = *(_QWORD *)(v0 + 256);
      v13 = *(_QWORD *)(v0 + 160);
      v12 = *(_QWORD *)(v0 + 168);
      sub_10000D0F0(*(_QWORD *)(v0 + 208), (uint64_t *)&unk_1007B5200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v13);
      goto LABEL_9;
    }
    if (v6 >= v2)
      goto LABEL_47;
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v9 + 16))(v10, *(_QWORD *)(v0 + 152)+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v6, v8, v3);
    v7 = v6 + 1;
    v99 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56);
    v99(v10, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
      goto LABEL_6;
    v14 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 160);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 32);
    v18(v14, *(_QWORD *)(v0 + 208), v15);
    v19 = v16 + *(int *)(v17 + 48);
    v18(v19, v14, v15);
    if (__OFADD__(v5, 1))
      goto LABEL_48;
    v20 = *(_QWORD **)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = v4;
    v23 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 168);
    v25 = (char *)v20 + *(int *)(v23 + 48);
    *v20 = v5;
    v18((uint64_t)v25, v19, v21);
    v26 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56);
    v4 = v22;
    v26(v20, 0, 1, v23);
    ++v5;
LABEL_9:
    *(_QWORD *)(v0 + 296) = v5;
    *(_QWORD *)(v0 + 304) = v7;
    v27 = *(_QWORD *)(v0 + 264);
    v29 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 168);
    sub_10022E718(*(_QWORD *)(v0 + 256), v27, &qword_1007B9930);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v29);
    v31 = *(char **)(v0 + 264);
    if (v30 == 1)
    {
      v82 = *(_QWORD *)(v0 + 248);
      v81 = *(_QWORD *)(v0 + 256);
      v84 = *(_QWORD *)(v0 + 232);
      v83 = *(_QWORD *)(v0 + 240);
      v86 = *(_QWORD *)(v0 + 200);
      v85 = *(_QWORD *)(v0 + 208);
      v97 = *(_QWORD *)(v0 + 192);
      v98 = *(_QWORD *)(v0 + 184);
      v100 = *(_QWORD *)(v0 + 176);
      v87 = v4;
      v88 = *(_QWORD **)(v0 + 128);
      swift_bridgeObjectRelease(*(const char **)(v0 + 152));
      *v88 = v87;
      swift_task_dealloc(v31);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v100);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v32 = *(_QWORD *)(v0 + 240);
    v33 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 312) = *(_QWORD *)v31;
    v36 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v32, &v31[*(int *)(v35 + 48)], v33);
    URL.scheme.getter(v36);
    if (v37)
    {
      v38 = v37;
      v39 = String.lowercased()();
      *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
      if (v39._countAndFlagsBits == 1886680168 && v39._object == (void *)0xE400000000000000)
      {
        swift_bridgeObjectRelease((const char *)0xE400000000000000, v40);
LABEL_44:
        v89 = v0 + 16;
        v90 = (void *)objc_opt_self(LSAppLink);
        URL._bridgeToObjectiveC()(v91);
        v93 = v92;
        *(_QWORD *)(v0 + 320) = v92;
        *(_QWORD *)(v0 + 56) = v0 + 120;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_100332C24;
        v95 = swift_continuation_init(v0 + 16, 1, v94);
        *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
        v96 = (_QWORD *)(v0 + 80);
        v96[1] = 0x40000000;
        v96[2] = sub_100333DA4;
        v96[3] = &unk_100722938;
        v96[4] = v95;
        objc_msgSend(v90, "getAppLinksWithURL:completionHandler:", v93, v96);
        swift_continuation_await(v89);
        return;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v39._countAndFlagsBits, v39._object, 1886680168, 0xE400000000000000, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease((const char *)v39._object, v41);
        goto LABEL_44;
      }
      if (v39._countAndFlagsBits == 0x7370747468 && v39._object == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease((const char *)0xE500000000000000, v41);
        goto LABEL_44;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39._countAndFlagsBits, v39._object, 0x7370747468, 0xE500000000000000, 0);
      swift_bridgeObjectRelease((const char *)v39._object);
      if ((v42 & 1) != 0)
        goto LABEL_44;
    }
    v43 = (void *)objc_opt_self(LSApplicationWorkspace);
    v44 = objc_msgSend(v43, "defaultWorkspace");
    if (!v44)
      goto LABEL_49;
    v46 = v44;
    URL._bridgeToObjectiveC()(v45);
    v48 = v47;
    v49 = objc_msgSend(v46, "URLOverrideForURL:", v47);

    if (v49)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

      v50 = 0;
    }
    else
    {
      v50 = 1;
    }
    v52 = *(_QWORD *)(v0 + 192);
    v51 = *(_QWORD *)(v0 + 200);
    v99(v52, v50, 1, *(_QWORD *)(v0 + 216));
    sub_10022E718(v52, v51, (uint64_t *)&unk_1007B5200);
    v53 = objc_msgSend(v43, "defaultWorkspace");
    if (!v53)
      goto LABEL_50;
    v54 = v53;
    v56 = *(_QWORD *)(v0 + 216);
    v55 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 184);
    sub_100330F1C(*(_QWORD *)(v0 + 200), v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1, v56) == 1)
    {
      v59 = 0;
    }
    else
    {
      v61 = *(_QWORD *)(v0 + 216);
      v60 = *(_QWORD *)(v0 + 224);
      v62 = *(_QWORD *)(v0 + 184);
      URL._bridgeToObjectiveC()(v58);
      v59 = v63;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v61);
    }
    v64 = objc_msgSend(v54, "applicationsAvailableForOpeningURL:", v59);

    if (!v64)
      goto LABEL_51;
    v65 = sub_100221EDC(0, (unint64_t *)&qword_1007B5520, LSApplicationProxy_ptr);
    v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

    if ((unint64_t)v66 >> 62)
    {
      if (v66 < 0)
        v71 = v66;
      else
        v71 = v66 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v66);
      v72 = _CocoaArrayWrapper.endIndex.getter(v71);
      swift_bridgeObjectRelease((const char *)v66);
      if (!v72)
      {
LABEL_36:
        v73 = *(_QWORD *)(v0 + 200);
        swift_bridgeObjectRelease((const char *)v66);
        sub_10000D0F0(v73, (uint64_t *)&unk_1007B5200);

        v4 = 0;
        goto LABEL_37;
      }
    }
    else if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_36;
    }
    if ((v66 & 0xC000000000000001) != 0)
    {
      v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v66);
    }
    else
    {
      if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_46;
      v67 = *(id *)(v66 + 32);
    }
    v68 = v67;
    v69 = *(_QWORD *)(v0 + 200);
    v70 = objc_msgSend(v67, "correspondingApplicationRecord", swift_bridgeObjectRelease((const char *)v66).n128_f64[0]);

    sub_10000D0F0(v69, (uint64_t *)&unk_1007B5200);
    v4 = v70;
LABEL_37:
    v74 = *(_QWORD *)(v0 + 312);
    v75 = __OFADD__(v74, 1);
    v76 = v74 + 1;
    if (v75)
      break;
    v77 = *(_QWORD *)(v0 + 240);
    v79 = *(_QWORD *)(v0 + 216);
    v78 = *(_QWORD *)(v0 + 224);
    v80 = *(void (**)(double *))(v0 + 136);
    v101 = (double)v76 / (double)(*(_QWORD *)(v0 + 280) + 1);
    v80(&v101);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 304);
    v2 = *(_QWORD *)(v0 + 280);
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:

  __break(1u);
LABEL_50:

  __break(1u);
LABEL_51:

  __break(1u);
}

uint64_t sub_100332C24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 328) = v2;
  if (v2)
    v3 = sub_100333430;
  else
    v3 = sub_100332C84;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 272), 0);
}

void sub_100332C84()
{
  uint64_t (**v0)(_QWORD, _QWORD, _QWORD);
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(double *);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  Swift::String v50;
  double v51;
  double v52;
  char v53;
  void *v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSURL *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  NSURL *v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  double v102;

  v2 = *(_QWORD *)(v1 + 120);

  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v7 = v2;
    else
      v7 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease((const char *)v2);
    v99 = v1 + 120;
    if (v8)
    {
LABEL_3:
      if ((v2 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_61:

          __break(1u);
LABEL_62:

          __break(1u);
LABEL_63:

          __break(1u);
          return;
        }
        v3 = *(id *)(v2 + 32);
LABEL_6:
        v4 = v3;
        v5 = *(void **)(v1 + 288);
        v6 = objc_msgSend(v3, "targetApplicationRecord", swift_bridgeObjectRelease((const char *)v2).n128_f64[0]);

        goto LABEL_13;
      }
LABEL_59:
      v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
      goto LABEL_6;
    }
  }
  else
  {
    v99 = v1 + 120;
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
  }
  v9 = *(void **)(v1 + 288);
  swift_bridgeObjectRelease((const char *)v2);

  v6 = 0;
  while (1)
  {
LABEL_13:
    v11 = *(_QWORD *)(v1 + 312);
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v14 = *(_QWORD *)(v1 + 240);
    v16 = *(_QWORD *)(v1 + 216);
    v15 = *(_QWORD *)(v1 + 224);
    v17 = *(void (**)(double *))(v1 + 136);
    v2 = *(_QWORD *)(v1 + 144);
    v102 = (double)v13 / (double)(*(_QWORD *)(v1 + 280) + 1);
    v17(&v102);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v18 = *(_QWORD *)(v1 + 296);
    v19 = *(_QWORD *)(v1 + 304);
    *(_QWORD *)(v1 + 288) = v6;
    v20 = *(_QWORD *)(v1 + 280);
    v101 = v6;
    if (v19 == v20)
    {
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 224) + 56);
      v21(*(_QWORD *)(v1 + 208), 1, 1, *(_QWORD *)(v1 + 216));
      v22 = *(_QWORD *)(v1 + 280);
LABEL_18:
      v26 = *(_QWORD *)(v1 + 256);
      v28 = *(_QWORD *)(v1 + 160);
      v27 = *(_QWORD *)(v1 + 168);
      sub_10000D0F0(*(_QWORD *)(v1 + 208), (uint64_t *)&unk_1007B5200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v26, 1, 1, v28);
      goto LABEL_21;
    }
    if (v19 >= v20)
      goto LABEL_57;
    v23 = *(_QWORD *)(v1 + 216);
    v24 = *(_QWORD *)(v1 + 224);
    v25 = *(_QWORD *)(v1 + 208);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v25, *(_QWORD *)(v1 + 152)+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v19, v23);
    v22 = v19 + 1;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v21(v25, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
      goto LABEL_18;
    v29 = *(_QWORD *)(v1 + 248);
    v30 = *(_QWORD *)(v1 + 216);
    v31 = *(_QWORD *)(v1 + 176);
    v32 = *(_QWORD *)(v1 + 160);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 224) + 32);
    v33(v29, *(_QWORD *)(v1 + 208), v30);
    v2 = v31 + *(int *)(v32 + 48);
    v33(v2, v29, v30);
    if (__OFADD__(v18, 1))
      goto LABEL_58;
    v34 = *(_QWORD **)(v1 + 256);
    v35 = *(_QWORD *)(v1 + 216);
    v37 = *(_QWORD *)(v1 + 160);
    v36 = *(_QWORD *)(v1 + 168);
    v38 = (char *)v34 + *(int *)(v37 + 48);
    *v34 = v18;
    v33((uint64_t)v38, v2, v35);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v37);
    ++v18;
LABEL_21:
    *(_QWORD *)(v1 + 296) = v18;
    *(_QWORD *)(v1 + 304) = v22;
    v39 = *(_QWORD *)(v1 + 264);
    v40 = *(_QWORD *)(v1 + 160);
    v0 = *(uint64_t (***)(_QWORD, _QWORD, _QWORD))(v1 + 168);
    sub_10022E718(*(_QWORD *)(v1 + 256), v39, &qword_1007B9930);
    v41 = v0[6](v39, 1, v40);
    v42 = *(char **)(v1 + 264);
    if (v41 == 1)
    {
      v83 = *(_QWORD *)(v1 + 248);
      v82 = *(_QWORD *)(v1 + 256);
      v85 = *(_QWORD *)(v1 + 232);
      v84 = *(_QWORD *)(v1 + 240);
      v87 = *(_QWORD *)(v1 + 200);
      v86 = *(_QWORD *)(v1 + 208);
      v88 = *(_QWORD *)(v1 + 192);
      v98 = *(_QWORD *)(v1 + 184);
      v100 = *(_QWORD *)(v1 + 176);
      v89 = *(_QWORD **)(v1 + 128);
      swift_bridgeObjectRelease(*(const char **)(v1 + 152));
      *v89 = v101;
      swift_task_dealloc(v42);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v87);
      swift_task_dealloc(v88);
      swift_task_dealloc(v98);
      swift_task_dealloc(v100);
      (*(void (**)(void))(v1 + 8))();
      return;
    }
    v43 = *(_QWORD *)(v1 + 240);
    v44 = *(_QWORD *)(v1 + 216);
    v45 = *(_QWORD *)(v1 + 224);
    v46 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v1 + 312) = *(_QWORD *)v42;
    v47 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 32))(v43, &v42[*(int *)(v46 + 48)], v44);
    URL.scheme.getter(v47);
    if (!v48)
      goto LABEL_29;
    v49 = v48;
    v50 = String.lowercased()();
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v49).n128_u64[0];
    if (v50._countAndFlagsBits == 1886680168 && v50._object == (void *)0xE400000000000000)
    {
      swift_bridgeObjectRelease((const char *)0xE400000000000000, v51);
      goto LABEL_54;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v50._countAndFlagsBits, v50._object, 1886680168, 0xE400000000000000, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease((const char *)v50._object, v52);
      goto LABEL_54;
    }
    if (v50._countAndFlagsBits == 0x7370747468 && v50._object == (void *)0xE500000000000000)
      break;
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v50._countAndFlagsBits, v50._object, 0x7370747468, 0xE500000000000000, 0);
    swift_bridgeObjectRelease((const char *)v50._object);
    if ((v53 & 1) != 0)
      goto LABEL_54;
LABEL_29:
    v54 = (void *)objc_opt_self(LSApplicationWorkspace);
    v55 = objc_msgSend(v54, "defaultWorkspace");
    if (!v55)
      goto LABEL_61;
    v57 = v55;
    URL._bridgeToObjectiveC()(v56);
    v59 = v58;
    v60 = objc_msgSend(v57, "URLOverrideForURL:", v58);

    if (v60)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

      v61 = 0;
    }
    else
    {
      v61 = 1;
    }
    v63 = *(_QWORD *)(v1 + 192);
    v62 = *(_QWORD *)(v1 + 200);
    v21(v63, v61, 1, *(_QWORD *)(v1 + 216));
    sub_10022E718(v63, v62, (uint64_t *)&unk_1007B5200);
    v64 = objc_msgSend(v54, "defaultWorkspace");
    if (!v64)
      goto LABEL_62;
    v65 = v64;
    v67 = *(_QWORD *)(v1 + 216);
    v66 = *(_QWORD *)(v1 + 224);
    v68 = *(_QWORD *)(v1 + 184);
    sub_100330F1C(*(_QWORD *)(v1 + 200), v68);
    v0 = (uint64_t (**)(_QWORD, _QWORD, _QWORD))v101;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v68, 1, v67) == 1)
    {
      v70 = 0;
    }
    else
    {
      v72 = *(_QWORD *)(v1 + 216);
      v71 = *(_QWORD *)(v1 + 224);
      v73 = *(_QWORD *)(v1 + 184);
      URL._bridgeToObjectiveC()(v69);
      v70 = v74;
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v72);
    }
    v75 = objc_msgSend(v65, "applicationsAvailableForOpeningURL:", v70);

    if (!v75)
      goto LABEL_63;
    v76 = sub_100221EDC(0, (unint64_t *)&qword_1007B5520, LSApplicationProxy_ptr);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, v76);

    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v80 = v2;
      else
        v80 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v2);
      v81 = _CocoaArrayWrapper.endIndex.getter(v80);
      swift_bridgeObjectRelease((const char *)v2);
      if (!v81)
        goto LABEL_12;
LABEL_40:
      if ((v2 & 0xC000000000000001) != 0)
      {
        v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
      }
      else
      {
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
        v77 = *(id *)(v2 + 32);
      }
      v78 = v77;
      v79 = *(_QWORD *)(v1 + 200);
      v6 = objc_msgSend(v77, "correspondingApplicationRecord", swift_bridgeObjectRelease((const char *)v2).n128_f64[0]);

      sub_10000D0F0(v79, (uint64_t *)&unk_1007B5200);
    }
    else
    {
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_40;
LABEL_12:
      v10 = *(_QWORD *)(v1 + 200);
      swift_bridgeObjectRelease((const char *)v2);
      sub_10000D0F0(v10, (uint64_t *)&unk_1007B5200);

      v6 = 0;
    }
  }
  swift_bridgeObjectRelease((const char *)0xE500000000000000, v52);
LABEL_54:
  v90 = v1 + 16;
  v91 = (void *)objc_opt_self(LSAppLink);
  URL._bridgeToObjectiveC()(v92);
  v94 = v93;
  *(_QWORD *)(v1 + 320) = v93;
  *(_QWORD *)(v1 + 56) = v99;
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_100332C24;
  v96 = swift_continuation_init(v1 + 16, 1, v95);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  v97 = (_QWORD *)(v1 + 80);
  v97[1] = 0x40000000;
  v97[2] = sub_100333DA4;
  v97[3] = &unk_100722938;
  v97[4] = v96;
  objc_msgSend(v91, "getAppLinksWithURL:completionHandler:", v94, v97);
  swift_continuation_await(v90);
}

void sub_100333430(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  const char *v74;
  Swift::String v75;
  double v76;
  double v77;
  char v78;
  void *v79;
  id v80;
  NSURL *v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSURL *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  void *v118;
  NSURL *v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130[2];

  v2 = *(void **)(v1 + 320);
  v3 = *(_QWORD *)(v1 + 328);
  swift_willThrow(a1);

  v4 = (void *)_convertErrorToNSError(_:)(v3);
  v5 = objc_msgSend(v4, "code");

  if (v5 != (id)-10814)
  {
    if (qword_1007B3F20 != -1)
      goto LABEL_57;
    goto LABEL_4;
  }
  v6 = *(_QWORD *)(v1 + 328);
LABEL_6:
  swift_errorRelease(v6);
  while (1)
  {
    v30 = *(_QWORD *)(v1 + 312);
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
      break;
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_once(&qword_1007B3F20, sub_100331960);
LABEL_4:
    v7 = *(_QWORD *)(v1 + 328);
    v9 = *(_QWORD *)(v1 + 232);
    v8 = *(_QWORD *)(v1 + 240);
    v10 = *(_QWORD *)(v1 + 216);
    v11 = *(_QWORD *)(v1 + 224);
    v12 = type metadata accessor for Logger(0);
    sub_100221DF8(v12, (uint64_t)qword_1007BA8B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    swift_errorRetain(v7);
    v13 = swift_errorRetain(v7);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v1 + 328);
    v19 = *(_QWORD *)(v1 + 224);
    v18 = *(_QWORD *)(v1 + 232);
    v20 = *(_QWORD *)(v1 + 216);
    if (v16)
    {
      v21 = swift_slowAlloc(22, -1);
      v22 = (uint64_t *)swift_slowAlloc(8, -1);
      v127 = swift_slowAlloc(32, -1);
      v130[0] = v127;
      *(_DWORD *)v21 = 136315394;
      v23 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v20, v23);
      v26 = (const char *)v25;
      *(_QWORD *)(v21 + 4) = sub_100228BD8(v24, v25, v130);
      v27 = swift_bridgeObjectRelease(v26);
      (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v18, v20, v27);
      *(_WORD *)(v21 + 12) = 2112;
      swift_errorRetain(v17);
      v28 = _swift_stdlib_bridgeErrorToNSError(v17);
      *(_QWORD *)(v21 + 14) = v28;
      *v22 = v28;
      swift_errorRelease(v17);
      swift_errorRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to generate app link for %s (%@)", (uint8_t *)v21, 0x16u);
      v29 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v22, 1, v29);
      swift_slowDealloc(v22, -1, -1);
      swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v127, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      v6 = v17;
      goto LABEL_6;
    }
    swift_errorRelease(*(_QWORD *)(v1 + 328));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_errorRelease(v17);
    swift_errorRelease(v17);

  }
  v33 = *(void **)(v1 + 288);
  while (1)
  {
    v36 = *(_QWORD *)(v1 + 240);
    v38 = *(_QWORD *)(v1 + 216);
    v37 = *(_QWORD *)(v1 + 224);
    v39 = *(void (**)(uint64_t *))(v1 + 136);
    *(double *)v130 = (double)v32 / (double)(*(_QWORD *)(v1 + 280) + 1);
    v39(v130);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    v40 = *(_QWORD *)(v1 + 296);
    v41 = *(_QWORD *)(v1 + 304);
    *(_QWORD *)(v1 + 288) = v33;
    v42 = *(_QWORD *)(v1 + 280);
    if (v41 == v42)
    {
      v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 224) + 56);
      v128(*(_QWORD *)(v1 + 208), 1, 1, *(_QWORD *)(v1 + 216));
      v43 = *(_QWORD *)(v1 + 280);
LABEL_16:
      v47 = *(_QWORD *)(v1 + 256);
      v49 = *(_QWORD *)(v1 + 160);
      v48 = *(_QWORD *)(v1 + 168);
      sub_10000D0F0(*(_QWORD *)(v1 + 208), (uint64_t *)&unk_1007B5200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v47, 1, 1, v49);
      goto LABEL_19;
    }
    if (v41 >= v42)
      goto LABEL_55;
    v44 = *(_QWORD *)(v1 + 216);
    v45 = *(_QWORD *)(v1 + 224);
    v46 = *(_QWORD *)(v1 + 208);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16))(v46, *(_QWORD *)(v1 + 152)+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v41, v44);
    v43 = v41 + 1;
    v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
    v128(v46, 0, 1, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
      goto LABEL_16;
    v50 = *(_QWORD *)(v1 + 248);
    v51 = *(_QWORD *)(v1 + 216);
    v52 = *(_QWORD *)(v1 + 176);
    v53 = *(_QWORD *)(v1 + 160);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 224) + 32);
    v54(v50, *(_QWORD *)(v1 + 208), v51);
    v55 = v52 + *(int *)(v53 + 48);
    v54(v55, v50, v51);
    if (__OFADD__(v40, 1))
      goto LABEL_56;
    v56 = *(_QWORD **)(v1 + 256);
    v57 = *(_QWORD *)(v1 + 216);
    v58 = v33;
    v59 = *(_QWORD *)(v1 + 160);
    v60 = *(_QWORD *)(v1 + 168);
    v61 = (char *)v56 + *(int *)(v59 + 48);
    *v56 = v40;
    v54((uint64_t)v61, v55, v57);
    v62 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56);
    v33 = v58;
    v62(v56, 0, 1, v59);
    ++v40;
LABEL_19:
    *(_QWORD *)(v1 + 296) = v40;
    *(_QWORD *)(v1 + 304) = v43;
    v63 = *(_QWORD *)(v1 + 264);
    v65 = *(_QWORD *)(v1 + 160);
    v64 = *(_QWORD *)(v1 + 168);
    sub_10022E718(*(_QWORD *)(v1 + 256), v63, &qword_1007B9930);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v63, 1, v65);
    v67 = *(char **)(v1 + 264);
    if (v66 == 1)
    {
      v110 = *(_QWORD *)(v1 + 248);
      v109 = *(_QWORD *)(v1 + 256);
      v112 = *(_QWORD *)(v1 + 232);
      v111 = *(_QWORD *)(v1 + 240);
      v114 = *(_QWORD *)(v1 + 200);
      v113 = *(_QWORD *)(v1 + 208);
      v125 = *(_QWORD *)(v1 + 192);
      v126 = *(_QWORD *)(v1 + 184);
      v129 = *(_QWORD *)(v1 + 176);
      v115 = v33;
      v116 = *(_QWORD **)(v1 + 128);
      swift_bridgeObjectRelease(*(const char **)(v1 + 152));
      *v116 = v115;
      swift_task_dealloc(v67);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      swift_task_dealloc(v111);
      swift_task_dealloc(v112);
      swift_task_dealloc(v113);
      swift_task_dealloc(v114);
      swift_task_dealloc(v125);
      swift_task_dealloc(v126);
      swift_task_dealloc(v129);
      (*(void (**)(void))(v1 + 8))();
      return;
    }
    v68 = *(_QWORD *)(v1 + 240);
    v69 = *(_QWORD *)(v1 + 216);
    v70 = *(_QWORD *)(v1 + 224);
    v71 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v1 + 312) = *(_QWORD *)v67;
    v72 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v68, &v67[*(int *)(v71 + 48)], v69);
    URL.scheme.getter(v72);
    if (v73)
    {
      v74 = v73;
      v75 = String.lowercased()();
      *(_QWORD *)&v76 = swift_bridgeObjectRelease(v74).n128_u64[0];
      if (v75._countAndFlagsBits == 1886680168 && v75._object == (void *)0xE400000000000000)
      {
        swift_bridgeObjectRelease((const char *)0xE400000000000000, v76);
LABEL_52:
        v117 = v1 + 16;
        v118 = (void *)objc_opt_self(LSAppLink);
        URL._bridgeToObjectiveC()(v119);
        v121 = v120;
        *(_QWORD *)(v1 + 320) = v120;
        *(_QWORD *)(v1 + 56) = v1 + 120;
        *(_QWORD *)(v1 + 16) = v1;
        *(_QWORD *)(v1 + 24) = sub_100332C24;
        v123 = swift_continuation_init(v1 + 16, 1, v122);
        *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
        v124 = (_QWORD *)(v1 + 80);
        v124[1] = 0x40000000;
        v124[2] = sub_100333DA4;
        v124[3] = &unk_100722938;
        v124[4] = v123;
        objc_msgSend(v118, "getAppLinksWithURL:completionHandler:", v121, v124);
        swift_continuation_await(v117);
        return;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v75._countAndFlagsBits, v75._object, 1886680168, 0xE400000000000000, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease((const char *)v75._object, v77);
        goto LABEL_52;
      }
      if (v75._countAndFlagsBits == 0x7370747468 && v75._object == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease((const char *)0xE500000000000000, v77);
        goto LABEL_52;
      }
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v75._countAndFlagsBits, v75._object, 0x7370747468, 0xE500000000000000, 0);
      swift_bridgeObjectRelease((const char *)v75._object);
      if ((v78 & 1) != 0)
        goto LABEL_52;
    }
    v79 = (void *)objc_opt_self(LSApplicationWorkspace);
    v80 = objc_msgSend(v79, "defaultWorkspace");
    if (!v80)
      break;
    v82 = v80;
    URL._bridgeToObjectiveC()(v81);
    v84 = v83;
    v85 = objc_msgSend(v82, "URLOverrideForURL:", v83);

    if (v85)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

      v86 = 0;
    }
    else
    {
      v86 = 1;
    }
    v88 = *(_QWORD *)(v1 + 192);
    v87 = *(_QWORD *)(v1 + 200);
    v128(v88, v86, 1, *(_QWORD *)(v1 + 216));
    sub_10022E718(v88, v87, (uint64_t *)&unk_1007B5200);
    v89 = objc_msgSend(v79, "defaultWorkspace");
    if (!v89)
      goto LABEL_59;
    v90 = v89;
    v92 = *(_QWORD *)(v1 + 216);
    v91 = *(_QWORD *)(v1 + 224);
    v93 = *(_QWORD *)(v1 + 184);
    sub_100330F1C(*(_QWORD *)(v1 + 200), v93);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v93, 1, v92) == 1)
    {
      v95 = 0;
    }
    else
    {
      v97 = *(_QWORD *)(v1 + 216);
      v96 = *(_QWORD *)(v1 + 224);
      v98 = *(_QWORD *)(v1 + 184);
      URL._bridgeToObjectiveC()(v94);
      v95 = v99;
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v98, v97);
    }
    v100 = objc_msgSend(v90, "applicationsAvailableForOpeningURL:", v95);

    if (!v100)
      goto LABEL_60;
    v101 = sub_100221EDC(0, (unint64_t *)&qword_1007B5520, LSApplicationProxy_ptr);
    v102 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v100, v101);

    if ((unint64_t)v102 >> 62)
    {
      if (v102 < 0)
        v107 = v102;
      else
        v107 = v102 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v102);
      v108 = _CocoaArrayWrapper.endIndex.getter(v107);
      swift_bridgeObjectRelease((const char *)v102);
      if (!v108)
      {
LABEL_10:
        v34 = *(_QWORD *)(v1 + 200);
        swift_bridgeObjectRelease((const char *)v102);
        sub_10000D0F0(v34, (uint64_t *)&unk_1007B5200);

        v33 = 0;
        goto LABEL_11;
      }
    }
    else if (!*(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_10;
    }
    if ((v102 & 0xC000000000000001) != 0)
    {
      v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v102);
    }
    else
    {
      if (!*(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_54;
      v103 = *(id *)(v102 + 32);
    }
    v104 = v103;
    v105 = *(_QWORD *)(v1 + 200);
    v106 = objc_msgSend(v103, "correspondingApplicationRecord", swift_bridgeObjectRelease((const char *)v102).n128_f64[0]);

    sub_10000D0F0(v105, (uint64_t *)&unk_1007B5200);
    v33 = v106;
LABEL_11:
    v35 = *(_QWORD *)(v1 + 312);
    v31 = __OFADD__(v35, 1);
    v32 = v35 + 1;
    if (v31)
      goto LABEL_53;
  }

  __break(1u);
LABEL_59:

  __break(1u);
LABEL_60:

  __break(1u);
}

uint64_t sub_100333DA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_100221EDC(0, &qword_1007BA9D8, LSAppLink_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t type metadata accessor for SDAirDropContentHandlerGenericLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary35SDAirDropContentHandlerGenericLinks);
}

uint64_t sub_100333E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerGenericLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100333EA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BA8FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003319F0(a1);
}

void sub_100333EF0(uint64_t a1, char a2)
{
  sub_1003320F4(a1, a2);
}

uint64_t sub_100333F10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100333F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BA9C4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D12C;
  return sub_1003323B8(a1, a2, a3, v8);
}

_QWORD *sub_100333FA4(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (!a2)
      return _swiftEmptyArrayStorage;
    v4 = sub_100008384(&qword_1007BAAD8);
    v5 = static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
    *(_QWORD *)(v5 + 16) = a2;
    memset((void *)(v5 + 32), a1, a2);
    return (_QWORD *)v5;
  }
  return result;
}

uint64_t sub_100334064(char a1, uint64_t (*a2)(char *))
{
  char v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_100334094(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_100334114(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];

  swift_beginAccess(a1, v8, 33, 0);
  v6 = *a1;
  result = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v6;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_10026D804(v6);
  v6 = result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v6 + 16) > a2)
  {
    *(_BYTE *)(v6 + a2 + 32) = a3 & 1;
    return swift_endAccess(v8);
  }
LABEL_7:
  __break(1u);
  return result;
}

__n128 sub_1003341BC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, __n128))
{
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v14[24];

  v5 = swift_beginAccess(a1 + 16, v14, 0, 0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(*(const char **)(a1 + 16), v5.n128_f64[0]);
    v8 = 0;
    v9 = _swiftEmptyArrayStorage;
    do
    {
      v10 = *(unsigned __int8 *)(v6 + v8 + 32);
      if (v10 != 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_1002280FC(0, v9[2] + 1, 1, v9);
        v12 = v9[2];
        v11 = v9[3];
        if (v12 >= v11 >> 1)
          v9 = sub_1002280FC((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        v9[2] = v12 + 1;
        *((_BYTE *)v9 + v12 + 32) = v10 & 1;
      }
      ++v8;
    }
    while (v7 != v8);
    v5 = swift_bridgeObjectRelease((const char *)v6);
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  a3(v9, v5);
  return swift_bridgeObjectRelease((const char *)v9);
}

uint64_t sub_1003342EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA9E0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA9E0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10033437C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a1;
  v5[3] = a5;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return swift_task_switch(sub_1003343E8, v6, 0);
}

uint64_t sub_1003343E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  v2 = static AirDropActor.shared;
  v3 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v4 = swift_task_alloc(32);
  v0[5] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1003344CC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, v2, v3, 0x496C6C6174736E69, 0xEF293A5F28734150, sub_10033655C, v4, &type metadata for Bool);
}

uint64_t sub_1003344CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10033452C, v2, 0);
}

uint64_t sub_10033452C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100334544(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  dispatch_group_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  NSURL *v55;
  void *v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t (**v67)(char);
  void *v68;
  void *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  void *v82;
  dispatch_group_t v83;
  _QWORD *v84;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  const char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  dispatch_group_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  void *v115;
  id v116;
  char *v117;
  unint64_t v118;
  _QWORD *v119;
  void **aBlock;
  uint64_t v121;
  void *v122;
  void *v123;
  void *v124;
  _QWORD *v125;

  v118 = a1;
  v3 = sub_100008384(&qword_1007B9928);
  v112 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v101 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v99 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v98 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v8);
  v113 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v106 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v105 = (char *)&v91 - v15;
  v117 = v16;
  __chkstk_darwin(v14);
  v100 = (char *)&v91 - v17;
  v18 = sub_100008384(&qword_1007B9930);
  v19 = __chkstk_darwin(v18);
  v114 = (uint64_t *)((char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v111 = (char *)&v91 - v21;
  v22 = sub_100008384(&qword_1007BA838);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v25 = *(_QWORD *)(a2 + 16);
  if (!v25)
  {
    if (qword_1007B3F28 != -1)
      goto LABEL_19;
    goto LABEL_14;
  }
  v110 = v3;
  v94 = v5;
  sub_1002741DC();
  v93 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, unint64_t, unint64_t))(v23 + 16))((char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v118, v22);
  v26 = *(unsigned __int8 *)(v23 + 80);
  v27 = (v26 + 16) & ~v26;
  v92 = swift_allocObject(&unk_100722A00, v27 + v24, v26 | 7);
  (*(void (**)(uint64_t, char *, unint64_t))(v23 + 32))(v92 + v27, (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  v109 = dispatch_group_create();
  v28 = sub_100008384((uint64_t *)&unk_1007B7360);
  v107 = swift_allocObject(v28, 20, 7);
  *(_DWORD *)(v107 + 16) = 0;
  v29 = swift_allocObject(&unk_100722A28, 24, 7);
  v30 = sub_100333FA4(2, v25);
  v108 = v29;
  *(_QWORD *)(v29 + 16) = v30;
  v104 = v117 + 7;
  v103 = (const char *)a2;
  v31 = swift_bridgeObjectRetain((const char *)a2);
  v102 = 0;
  v32 = 0;
  v22 = v25;
  while (1)
  {
    v33 = (uint64_t)v113;
    if (v32 == v22)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v113, 1, 1, v10, v31);
      v34 = v22;
      v35 = v110;
LABEL_7:
      sub_10000D0F0(v33, (uint64_t *)&unk_1007B5200);
      v36 = 1;
      goto LABEL_10;
    }
    v35 = v110;
    if (v32 >= v22)
      break;
    (*(void (**)(char *, const char *, uint64_t, __n128))(v11 + 16))(v113, &v103[((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v32], v10, v31);
    v34 = v32 + 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v33, 1, v10) == 1)
      goto LABEL_7;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    v38 = v100;
    v37(v100, v33, v10);
    v39 = &v101[*(int *)(v35 + 48)];
    v37(v39, (uint64_t)v38, v10);
    v40 = v102 + 1;
    if (__OFADD__(v102, 1))
      goto LABEL_18;
    v41 = (char *)v114 + *(int *)(v35 + 48);
    *v114 = v102;
    v37(v41, (uint64_t)v39, v10);
    v36 = 0;
    v102 = v40;
LABEL_10:
    v43 = (uint64_t *)v111;
    v42 = v112;
    v44 = (uint64_t)v114;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v114, v36, 1, v35);
    sub_1002D7474(v44, (uint64_t)v43);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v42 + 48))(v43, 1, v35) == 1)
    {
      swift_bridgeObjectRelease(v103);
      v71 = (_QWORD *)swift_allocObject(&unk_100722A50, 48, 7);
      v72 = v108;
      v71[2] = v108;
      v71[3] = v22;
      v73 = v92;
      v71[4] = sub_1003365C8;
      v71[5] = v73;
      v124 = sub_1002D74E8;
      v125 = v71;
      aBlock = _NSConcreteStackBlock;
      v121 = 1107296256;
      v122 = sub_10025BBB4;
      v123 = &unk_100722A68;
      v74 = _Block_copy(&aBlock);
      swift_retain(v72);
      v75 = swift_retain(v73);
      v76 = v95;
      static DispatchQoS.unspecified.getter(v75);
      v119 = _swiftEmptyArrayStorage;
      v77 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v78 = sub_100008384((uint64_t *)&unk_1007B6410);
      v79 = sub_100273050();
      v80 = v98;
      v81 = v94;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v78, v79, v94, v77);
      v82 = (void *)v93;
      v83 = v109;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v76, v80, v93, v74);
      _Block_release(v74);
      swift_release(v107);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v80, v81);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v97);
      v84 = v125;

      swift_release(v73);
      swift_release(v72);
      return swift_release(v84);
    }
    v45 = *v43;
    v46 = (char *)v43 + *(int *)(v35 + 48);
    v117 = *(char **)(v11 + 32);
    v47 = v105;
    ((void (*)(char *, char *, uint64_t))v117)(v105, v46, v10);
    v48 = v109;
    dispatch_group_enter(v109);
    v49 = (_QWORD *)swift_allocObject(&unk_100722AA0, 48, 7);
    v118 = v34;
    v50 = v49;
    v52 = v107;
    v51 = v108;
    v49[2] = v107;
    v49[3] = v51;
    v49[4] = v45;
    v49[5] = v48;
    v53 = swift_allocObject(&unk_100722AC8, 32, 7);
    *(_QWORD *)(v53 + 16) = sub_1002D7528;
    *(_QWORD *)(v53 + 24) = v50;
    v116 = (id)objc_opt_self(IXAppInstallCoordinator);
    swift_retain(v52);
    swift_retain(v51);
    v54 = v48;
    swift_retain(v50);
    URL._bridgeToObjectiveC()(v55);
    v115 = v56;
    v57 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v58 = v11;
    v59 = v10;
    v60 = v106;
    v57(v106, v47, v59);
    v61 = *(unsigned __int8 *)(v58 + 80);
    v62 = (v61 + 16) & ~v61;
    v63 = v22;
    v64 = (unint64_t)&v104[v62] & 0xFFFFFFFFFFFFFFF8;
    v65 = swift_allocObject(&unk_100722AF0, v64 + 16, v61 | 7);
    v66 = v60;
    v10 = v59;
    v11 = v58;
    ((void (*)(uint64_t, char *, uint64_t))v117)(v65 + v62, v66, v10);
    v67 = (uint64_t (**)(char))(v65 + v64);
    v22 = v63;
    *v67 = sub_1003366C8;
    v67[1] = (uint64_t (*)(char))v53;
    v124 = sub_100336770;
    v125 = (_QWORD *)v65;
    aBlock = _NSConcreteStackBlock;
    v121 = 1107296256;
    v122 = sub_100334094;
    v123 = &unk_100722B08;
    v68 = _Block_copy(&aBlock);
    swift_release(v125);
    v69 = v115;
    objc_msgSend(v116, "installApplication:options:completion:", v115, 0, v68);
    _Block_release(v68);
    v70 = v50;
    v32 = v118;
    swift_release(v70);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v10);
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once(&qword_1007B3F28, sub_1003342EC);
LABEL_14:
  v86 = type metadata accessor for Logger(0);
  v87 = sub_100221DF8(v86, (uint64_t)qword_1007BA9E0);
  v88 = Logger.logObject.getter(v87);
  v89 = static os_log_type_t.error.getter(v88);
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "No completedURLs to install", v90, 2u);
    swift_slowDealloc(v90, -1, -1);
  }

  LOBYTE(aBlock) = 0;
  return CheckedContinuation.resume(returning:)(&aBlock, v22);
}

uint64_t sub_100334E7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  const char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;

  v63 = a6;
  v64 = a5;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v61 - v18;
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_1007B3F28 != -1)
      swift_once(&qword_1007B3F28, sub_1003342EC);
    v20 = type metadata accessor for Logger(0);
    sub_100221DF8(v20, (uint64_t)qword_1007BA9E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain(a3);
    v21 = swift_errorRetain(a3);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v62 = v10;
      v25 = v24;
      v26 = swift_slowAlloc(64, -1);
      v65 = a3;
      v66 = v26;
      *(_DWORD *)v25 = 136315394;
      swift_errorRetain(a3);
      v27 = sub_100008384(&qword_1007B5A60);
      v28 = String.init<A>(describing:)(&v65, v27);
      v30 = (const char *)v29;
      v65 = sub_100228BD8(v28, v29, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 4);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(a3);
      v31 = swift_errorRelease(a3);
      *(_WORD *)(v25 + 12) = 2080;
      v32 = URL.description.getter(v31);
      v34 = (const char *)v33;
      v65 = sub_100228BD8(v32, v33, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 14);
      v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v62, v35);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "IPA Handler: Failed to install app with error (%s for URL %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(a3);
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);

    }
LABEL_20:
    v59 = 0;
    return v64(v59);
  }
  if (!a2)
  {
    if (qword_1007B3F28 != -1)
      swift_once(&qword_1007B3F28, sub_1003342EC);
    v48 = type metadata accessor for Logger(0);
    sub_100221DF8(v48, (uint64_t)qword_1007BA9E0);
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a4, v10);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      v66 = v53;
      *(_DWORD *)v52 = 136315138;
      v54 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v55 = dispatch thunk of CustomStringConvertible.description.getter(v10, v54);
      v57 = (const char *)v56;
      v65 = sub_100228BD8(v55, v56, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v52 + 4);
      v58 = swift_bridgeObjectRelease(v57);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v17, v10, v58);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "IPA Handler: No error or success bundle ID for installing: %s", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }

    goto LABEL_20;
  }
  v36 = qword_1007B3F28;
  swift_bridgeObjectRetain(a2);
  if (v36 != -1)
    swift_once(&qword_1007B3F28, sub_1003342EC);
  v37 = type metadata accessor for Logger(0);
  sub_100221DF8(v37, (uint64_t)qword_1007BA9E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
  swift_bridgeObjectRetain(a2);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v62 = swift_slowAlloc(64, -1);
    v66 = v62;
    *(_DWORD *)v41 = 136315394;
    swift_bridgeObjectRetain(a2);
    v65 = sub_100228BD8(a1, (unint64_t)a2, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v41 + 4);
    v42 = swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v41 + 12) = 2080;
    v43 = URL.description.getter(v42);
    v45 = (const char *)v44;
    v65 = sub_100228BD8(v43, v44, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v41 + 14);
    v46 = swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v46);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "IPA Handler: Successful app install '%s' for URL %s", (uint8_t *)v41, 0x16u);
    v47 = v62;
    swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  v59 = 1;
  return v64(v59);
}

uint64_t sub_1003354E0(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    goto LABEL_4;
  if ((*(_BYTE *)(result + 32) & 1) == 0)
  {
    LOBYTE(v2) = 0;
    goto LABEL_13;
  }
  if (v1 == 1)
  {
LABEL_4:
    LOBYTE(v2) = 1;
LABEL_13:
    v7 = v2;
    v6 = sub_100008384(&qword_1007BA838);
    return CheckedContinuation.resume(returning:)(&v7, v6);
  }
  v3 = 33;
  while (1)
  {
    v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1))
      break;
    v2 = *(unsigned __int8 *)(result + v3++);
    if (v2 != 1 || v4 == v1)
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerIPA()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary26SDAirDropContentHandlerIPA);
}

uint64_t sub_100335590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerIPA();
  result = swift_allocObject(v2, 16, 7);
  *a1 = result;
  return result;
}

uint64_t sub_1003355C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1007BAAC0 + dword_1007BAAC0);
  v3 = (_QWORD *)swift_task_alloc(unk_1007BAAC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return v5(a1);
}

uint64_t sub_100335624(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *v1;
  v6 = 0;
  v4 = swift_allocObject(&unk_1007229D8, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000015, 0x80000001006164A0, &v6, &unk_1007BAAD0, v4, 0xD000000000000061, 0x80000001006164C0, 81, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003356EC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10033570C(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  os_unfair_lock_s *v6;

  v6 = a2 + 4;
  os_unfair_lock_lock(a2 + 4);
  sub_1003367FC();
  os_unfair_lock_unlock(v6);
  dispatch_group_leave(a5);
}

void sub_100335788(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  double v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  Swift::String v43;
  Swift::String v44;
  double v45;
  Swift::String v46;
  Swift::String v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  __int128 v64;
  _BYTE v65[56];
  uint64_t v66;
  unint64_t v67;
  _BYTE v68[56];

  v3 = sub_100008384(&qword_1007BA800);
  __chkstk_darwin(v3);
  v5 = &v65[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v6 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v11 = SFAirDropReceive.AskRequest.files.getter(v8);
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease((const char *)v11);
  if (v12 != 1)
    goto LABEL_7;
  v14 = SFAirDropReceive.AskRequest.files.getter(v13);
  v15 = (const char *)v14;
  if (*(_QWORD *)(v14 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v16, 1, v6);
  v17 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v17) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007BA800);
LABEL_7:
    v18 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v18, v68);
    v64 = xmmword_1005CD2A0;
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 4280393;
    v20 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = v12;
    v66 = 0x545F4E5245444F4DLL;
    v67 = 0xEF524546534E4152;
    *(_QWORD *)&v21 = swift_bridgeObjectRetain((const char *)0xE300000000000000).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v21);
    v22._countAndFlagsBits = 95;
    v22._object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    v23._countAndFlagsBits = 4280393;
    v23._object = (void *)0xE300000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease((const char *)0xE300000000000000);
    if (v12 > 1)
    {
      v24._countAndFlagsBits = 0x4C4152554C505FLL;
      v24._object = (void *)0xE700000000000000;
      String.append(_:)(v24);
    }
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v25._countAndFlagsBits = 0x4C4154495041435FLL;
      v25._object = (void *)0xEC00000044455A49;
      String.append(_:)(v25);
    }
    v26._countAndFlagsBits = 0x545845545FLL;
    v26._object = (void *)0xE500000000000000;
    String.append(_:)(v26);
    v27 = (const char *)v67;
    swift_setDeallocating(inited);
    v28 = *(_QWORD *)(inited + 16);
    v29 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v20, v28, v29);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v32 = (id)SFLocalizedStringForKey(v30, v31);

    if (v32)
    {
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v37 = swift_allocObject(v36, 72, 7);
      *(_OWORD *)(v37 + 16) = v64;
      *(_QWORD *)(v37 + 56) = &type metadata for Int;
      *(_QWORD *)(v37 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v37 + 32) = v12;
      static String.localizedStringWithFormat(_:_:)(v33, v35, v37);
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v35).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v37, v38);
      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  v39 = sub_100008384(&qword_1007B7600);
  v40 = swift_initStackObject(v39, v65);
  v64 = xmmword_1005CD2A0;
  *(_OWORD *)(v40 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v40 + 32) = 0x485449575F415049;
  v41 = v40 + 32;
  *(_QWORD *)(v40 + 40) = 0xEE00454C5449545FLL;
  *(_QWORD *)(v40 + 48) = 1;
  v66 = 0x545F4E5245444F4DLL;
  v67 = 0xEF524546534E4152;
  *(_QWORD *)&v42 = swift_bridgeObjectRetain((const char *)0xEE00454C5449545FLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v40, v42);
  v43._countAndFlagsBits = 95;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x485449575F415049;
  v44._object = (void *)0xEE00454C5449545FLL;
  String.append(_:)(v44);
  *(_QWORD *)&v45 = swift_bridgeObjectRelease((const char *)v40).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0xEE00454C5449545FLL, v45);
  if ((a2 & 1) != 0)
  {
    v46._countAndFlagsBits = 0x4C4154495041435FLL;
    v46._object = (void *)0xEC00000044455A49;
    String.append(_:)(v46);
  }
  v47._countAndFlagsBits = 0x545845545FLL;
  v47._object = (void *)0xE500000000000000;
  String.append(_:)(v47);
  v48 = (const char *)v67;
  swift_setDeallocating(v40);
  v49 = *(_QWORD *)(v40 + 16);
  v50 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v41, v49, v50);
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  v53 = (id)SFLocalizedStringForKey(v51, v52);

  if (v53)
  {
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    v57 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v58 = swift_allocObject(v57, 72, 7);
    *(_OWORD *)(v58 + 16) = v64;
    v59 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v58);
    v61 = v60;
    *(_QWORD *)(v58 + 56) = &type metadata for String;
    *(_QWORD *)(v58 + 64) = sub_100299AB0();
    *(_QWORD *)(v58 + 32) = v59;
    *(_QWORD *)(v58 + 40) = v61;
    static String.localizedStringWithFormat(_:_:)(v54, v56, v58);
    *(_QWORD *)&v62 = swift_bridgeObjectRelease(v56).n128_u64[0];
    v63 = swift_bridgeObjectRelease((const char *)v58, v62);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v63);
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100335CE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[2] = a1;
  v2 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v1[9] = static AirDropActor.shared;
  return swift_task_switch(sub_100335DA0, v6, 0);
}

uint64_t sub_100335DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 80) = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100335E18, v2, v3);
}

uint64_t sub_100335E18()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  *(_BYTE *)(v0 + 100) = objc_msgSend(v1, "isRunningInStoreDemoMode");
  return swift_task_switch(sub_100335E6C, v2, 0);
}

id sub_100335E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  id result;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(uint64_t, unint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  NSString v37;
  id v38;
  const char *v39;
  const char *v40;
  NSString v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  id v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  if ((*(_BYTE *)(v0 + 100) & 1) != 0)
  {
    if (qword_1007B3F28 != -1)
      swift_once(&qword_1007B3F28, sub_1003342EC);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007BA9E0);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      v6 = "IPA Handler: Device running in store demo mode";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
      v48 = 0;
LABEL_25:
      swift_slowDealloc(v5, -1, -1);
LABEL_41:

      v59 = *(_QWORD *)(v0 + 40);
      swift_task_dealloc(*(_QWORD *)(v0 + 64));
      swift_task_dealloc(v59);
      return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v48);
    }
    goto LABEL_40;
  }
  result = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, "isAirDropAppInstallationAllowed");

    if (v9)
    {
      v12 = *(_QWORD *)(v0 + 56);
      v11 = *(_QWORD *)(v0 + 64);
      v13 = *(_QWORD *)(v0 + 48);
      v14 = *(_QWORD *)(v0 + 16);
      v15 = SFAirDropReceive.AskRequest.files.getter(v10);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = swift_bridgeObjectRelease((const char *)v15);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 16))(v11, v14, v13, v17);
      v20 = *(_QWORD *)(v0 + 56);
      v19 = *(_QWORD *)(v0 + 64);
      v21 = *(_QWORD *)(v0 + 48);
      if (v16)
      {
        v22 = SFAirDropReceive.AskRequest.urlItems.getter(v18);
        v23 = *(_QWORD *)(v22 + 16);
        v24 = swift_bridgeObjectRelease((const char *)v22);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v19, v21, v24);
        if (!v23)
        {
          v26 = SFAirDropReceive.AskRequest.files.getter(v25);
          v27 = *(_QWORD *)(v26 + 16);
          if (!v27)
          {
            swift_bridgeObjectRelease((const char *)v26);
LABEL_27:
            if ((SFAirDropReceive.AskRequest.senderIsMe.getter(v43) & 1) != 0)
            {
              if (qword_1007B3F28 != -1)
                swift_once(&qword_1007B3F28, sub_1003342EC);
              v49 = type metadata accessor for Logger(0);
              v50 = sub_100221DF8(v49, (uint64_t)qword_1007BA9E0);
              v3 = Logger.logObject.getter(v50);
              v51 = static os_log_type_t.default.getter(v3);
              if (!os_log_type_enabled(v3, v51))
              {
                v48 = 1;
                goto LABEL_41;
              }
              v5 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v5 = 0;
              _os_log_impl((void *)&_mh_execute_header, v3, v51, "IPA Handler: Transfer is me, can handle.", v5, 2u);
              v48 = 1;
            }
            else
            {
              v52 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
              v53 = String._bridgeToObjectiveC()();
              v48 = (uint64_t)objc_msgSend(v52, "fileExistsAtPath:", v53);

              if (qword_1007B3F28 != -1)
                swift_once(&qword_1007B3F28, sub_1003342EC);
              v54 = type metadata accessor for Logger(0);
              v55 = sub_100221DF8(v54, (uint64_t)qword_1007BA9E0);
              v3 = Logger.logObject.getter(v55);
              v56 = static os_log_type_t.default.getter(v3);
              if (!os_log_type_enabled(v3, v56))
                goto LABEL_41;
              v5 = (uint8_t *)swift_slowAlloc(8, -1);
              *(_DWORD *)v5 = 67109120;
              *(_DWORD *)(v0 + 96) = v48;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 100, v5 + 4);
              _os_log_impl((void *)&_mh_execute_header, v3, v56, "IPA Handler: Developer settings bundle exists? %{BOOL}d", v5, 8u);
            }
            goto LABEL_25;
          }
          v28 = *(_QWORD *)(v0 + 32);
          v29 = v26 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
          v60 = v26;
          v61 = *(_QWORD *)(v28 + 72);
          v30 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v28 + 16);
          v31 = swift_bridgeObjectRetain((const char *)v26);
          while (1)
          {
            v32 = *(_QWORD *)(v0 + 40);
            v33 = *(_QWORD *)(v0 + 24);
            v34 = v30(v32, v29, v33, v31);
            SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v34);
            v36 = v35;
            v37 = String._bridgeToObjectiveC()();
            v38 = objc_msgSend(v37, "pathExtension", swift_bridgeObjectRelease(v36).n128_f64[0]);

            static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
            v40 = v39;

            v41 = String._bridgeToObjectiveC()();
            v42 = swift_bridgeObjectRelease(v40);
            LODWORD(v37) = SFIsIPA(v41, v42);

            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v33);
            if (!(_DWORD)v37)
              break;
            v29 += v61;
            if (!--v27)
            {
              v43 = swift_bridgeObjectRelease_n(v60, 2);
              goto LABEL_27;
            }
          }
          swift_bridgeObjectRelease_n(v60, 2);
          if (qword_1007B3F28 != -1)
            swift_once(&qword_1007B3F28, sub_1003342EC);
          v57 = type metadata accessor for Logger(0);
          v58 = sub_100221DF8(v57, (uint64_t)qword_1007BA9E0);
          v3 = Logger.logObject.getter(v58);
          v4 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v3, v4))
          {
            v5 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v5 = 0;
            v6 = "IPA Handler: File is not IPA, ignoring...";
            goto LABEL_24;
          }
          goto LABEL_40;
        }
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v20 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
      }
      if (qword_1007B3F28 != -1)
        swift_once(&qword_1007B3F28, sub_1003342EC);
      v46 = type metadata accessor for Logger(0);
      v47 = sub_100221DF8(v46, (uint64_t)qword_1007BA9E0);
      v3 = Logger.logObject.getter(v47);
      v4 = static os_log_type_t.default.getter(v3);
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v5 = 0;
        v6 = "IPA Handler: isJustFiles is false";
        goto LABEL_24;
      }
    }
    else
    {
      if (qword_1007B3F28 != -1)
        swift_once(&qword_1007B3F28, sub_1003342EC);
      v44 = type metadata accessor for Logger(0);
      v45 = sub_100221DF8(v44, (uint64_t)qword_1007BA9E0);
      v3 = Logger.logObject.getter(v45);
      v4 = static os_log_type_t.default.getter(v3);
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v5 = 0;
        v6 = "IPA Handler: AirDrop app installation not allowed";
        goto LABEL_24;
      }
    }
LABEL_40:
    v48 = 0;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003364B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003364E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BAACC);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D12C;
  return sub_10033437C(a1, a2, a3, v9, v8);
}

uint64_t sub_10033655C(unint64_t a1)
{
  uint64_t v1;

  return sub_100334544(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100336564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384(&qword_1007BA838);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003365C8(uint64_t a1)
{
  sub_100008384(&qword_1007BA838);
  return sub_1003354E0(a1);
}

uint64_t sub_100336608()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033662C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100336658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100336668(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100336670()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003366A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003366C8(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1003366F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100336770(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100334E7C(a1, a2, a3, v3 + v8, *(uint64_t (**)(uint64_t))v9, *(_QWORD *)(v9 + 8));
}

uint64_t sub_1003367DC()
{
  uint64_t v0;

  return sub_100334114(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), **(_BYTE **)(v0 + 32));
}

uint64_t sub_1003367FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100336824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BAAE0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BAAE0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003368B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = type metadata accessor for SFAirDrop.TransferType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100298F30(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000D0F0((uint64_t)v8, &qword_1007B7760);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100616630, "DaemoniOSLibrary/SDAirDropTelemetry.swift", 41, 2, 117, 0);
    __break(1u);
  }
  else
  {
    v13 = sub_100221DB4((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    SFAirDropSend.Request.type.getter(v13);
    v14 = sub_100337080((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v14;
  }
  return result;
}

uint64_t sub_100336A80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v15 - v10;
  if (*(_QWORD *)(a1 + 16) != 1)
    return 2;
  sub_100298F30(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_100221DB4((uint64_t)v4, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100244384((uint64_t)v11, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload(v9, v5);
    v13 = *(_QWORD *)((char *)&unk_1005D25D8 + EnumCaseMultiPayload * 8);
    sub_1002443C8((uint64_t)v9, (uint64_t (*)(_QWORD))off_100722B48[EnumCaseMultiPayload]);
    sub_1002443C8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }
  sub_10000D0F0((uint64_t)v4, &qword_1007B7760);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100616630, "DaemoniOSLibrary/SDAirDropTelemetry.swift", 41, 2, 130, 0);
  __break(1u);
  return result;
}

uint64_t sub_100336C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100298F30(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000D0F0((uint64_t)v8, &qword_1007B7760);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100616630, "DaemoniOSLibrary/SDAirDropTelemetry.swift", 41, 2, 138, 0);
    __break(1u);
  }
  else
  {
    sub_100221DB4((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002B1120();
    v13 = SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }
  return result;
}

uint64_t sub_100336E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, _QWORD, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  char v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for SFAirDropSend.Failure(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v22 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v15, v2);
    v17 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
    v17(v9, enum case for SFAirDropSend.Failure.cancelled(_:), v2);
    v18 = static SFAirDropSend.Failure.== infix(_:_:)(v11, v9);
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v9, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
    if ((v18 & 1) != 0)
    {
      v19(v6, v2);
      v19(v11, v2);
      return 2;
    }
    else
    {
      v17(v9, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v2);
      v21 = static SFAirDropSend.Failure.== infix(_:_:)(v6, v9);
      v19(v9, v2);
      v19(v6, v2);
      v19(v11, v2);
      if ((v21 & 1) != 0)
        return 2;
      else
        return 1;
    }
  }
  else if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:))
  {
    return 0;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100616650, "DaemoniOSLibrary/SDAirDropTelemetry.swift", 41, 2, 80, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100337080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int v12;
  int v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for SFAirDrop.TransferType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v2, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    v13 = enum case for SFAirDrop.TransferType.exchange(_:);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (v12 == v13)
      return 0x706F7264656D616ELL;
    else
      return 0x2D706F7264726961;
  }
  else
  {
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0x706F7264726961;
  }
}

uint64_t type metadata accessor for SDAirDropTelemetry()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary18SDAirDropTelemetry);
}

uint64_t sub_10033722C(const char *a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  const char *v58;

  v57 = (uint64_t)a1;
  v58 = a1 + 64;
  swift_bridgeObjectRetain(a1);
  v56 = a3;
  swift_retain(a3);
  sub_1002F89F0();
  if (!v10)
    goto LABEL_24;
  v12 = v9;
  v13 = (const char *)v10;
  v14 = v11;
  v15 = (_QWORD *)*a5;
  v17 = sub_10045C200(v9, v10);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_10046F0D8();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v27 = (uint64_t *)(v24[6] + 16 * v17);
    *v27 = v12;
    v27[1] = (uint64_t)v13;
    *(_QWORD *)(v24[7] + 8 * v17) = v14;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    sub_1002F89F0();
    if (v32)
    {
      v34 = v31;
      v35 = v32;
      v36 = v33;
      do
      {
        v42 = (_QWORD *)*a5;
        v44 = sub_10045C200(v34, (uint64_t)v35);
        v45 = v42[2];
        v46 = (v43 & 1) == 0;
        v47 = v45 + v46;
        if (__OFADD__(v45, v46))
          goto LABEL_25;
        v48 = v43;
        if (v42[3] < v47)
        {
          sub_1004673D4(v47, 1);
          v49 = sub_10045C200(v34, (uint64_t)v35);
          if ((v48 & 1) != (v50 & 1))
            goto LABEL_27;
          v44 = v49;
        }
        v51 = (_QWORD *)*a5;
        if ((v48 & 1) != 0)
        {
          swift_bridgeObjectRelease(v35);
          v37 = v51[7];
          v38 = 8 * v44;

          *(_QWORD *)(v37 + v38) = v36;
        }
        else
        {
          v51[(v44 >> 6) + 8] |= 1 << v44;
          v52 = (uint64_t *)(v51[6] + 16 * v44);
          *v52 = v34;
          v52[1] = (uint64_t)v35;
          *(_QWORD *)(v51[7] + 8 * v44) = v36;
          v53 = v51[2];
          v29 = __OFADD__(v53, 1);
          v54 = v53 + 1;
          if (v29)
            goto LABEL_26;
          v51[2] = v54;
        }
        sub_1002F89F0();
        v34 = v39;
        v35 = v40;
        v36 = v41;
      }
      while (v40);
    }
LABEL_24:
    swift_release(v56);
    swift_bridgeObjectRelease(a1);
    sub_10022E5B4(v57);
    return swift_release(v56);
  }
  sub_1004673D4(v20, a4 & 1);
  v22 = sub_10045C200(v12, (uint64_t)v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease(v13, a3, v57, v58);
    v25 = v24[7];
    v26 = 8 * v17;

    *(_QWORD *)(v25 + v26) = v14;
    goto LABEL_13;
  }
LABEL_27:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

id sub_100337510@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain(v2);
  return v4;
}

void sub_100337548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  unint64_t v26;
  NSString v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[112];

  v33 = a2;
  v31 = a1;
  v34 = type metadata accessor for SFAirDrop.TransferType(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDropSend.Failure(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008384(&qword_1007BAB90);
  inited = swift_initStackObject(v17, v35);
  *(_OWORD *)(inited + 16) = xmmword_1005CF140;
  strcpy((char *)(inited + 32), "failureSubType");
  *(_BYTE *)(inited + 47) = -18;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    SFAirDropSend.Failure.errorDescription.getter(v19);
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v21 = 0xE400000000000000;
  }
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(inited + 48) = v22;
  *(_QWORD *)(inited + 56) = 0xD000000000000010;
  *(_QWORD *)(inited + 64) = 0x8000000100616560;
  sub_1002B1120();
  SFAirDrop.DeviceRelationship.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 1701869940;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  SFAirDropSend.Request.type.getter();
  sub_100337080((uint64_t)v5);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)(inited + 96) = v25;
  v26 = sub_10021EBF8(inited);
  v27 = String._bridgeToObjectiveC()();
  sub_1002BA59C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  SFMetricsLog(v27, isa);

}

void sub_100337894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  const char *v55;
  NSString v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  const char *v69;
  uint64_t v70;
  NSString v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  const char *v77;
  NSString v78;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  Class isa;
  char v82;
  uint64_t v83;
  Class v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  const char *v90;
  uint64_t v91;
  NSString v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  int EnumCaseMultiPayload;
  Class v97;
  char v98;
  uint64_t v99;
  char *v100;
  Class v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  uint64_t v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  const char *v117;
  uint8_t *v118;
  uint64_t v119;
  NSString v120;
  char v121;
  NSString v122;
  Class v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  const char *v137;
  const char *v138;
  const char *v139;
  const char *v140;
  const char *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE v165[152];
  _QWORD v166[13];
  uint64_t v167[2];

  v152 = a8;
  v136 = a4;
  v155 = a3;
  v159 = a2;
  v162 = a5;
  v163 = a1;
  sub_10033858C(a5, (uint64_t)v166);
  v138 = (const char *)v166[1];
  v139 = (const char *)v166[3];
  v140 = (const char *)v166[6];
  v141 = (const char *)v166[8];
  v137 = (const char *)v166[10];
  v142 = v166[12];
  v143 = v166[11];
  v10 = sub_100008384(&qword_1007BA310);
  __chkstk_darwin(v10);
  v158 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  v156 = *(_QWORD *)(v12 - 8);
  v157 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v161 = (char *)&v124 - v16;
  v17 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v134 = *(_QWORD *)(v17 - 8);
  v135 = v17;
  __chkstk_darwin(v17);
  v133 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDrop.TransferType(0);
  v129 = *(_QWORD *)(v19 - 8);
  v130 = v19;
  __chkstk_darwin(v19);
  v128 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v21);
  v153 = (uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v151 = *(_QWORD *)(v154 - 8);
  v23 = __chkstk_darwin(v154);
  v131 = (uint64_t)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v132 = (uint64_t)&v124 - v25;
  v26 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v149 = *(_QWORD *)(v26 - 8);
  v150 = v26;
  __chkstk_darwin(v26);
  v28 = (char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for SFAirDropSend.Failure(0);
  v126 = *(_QWORD *)(v29 - 8);
  v127 = v29;
  __chkstk_darwin(v29);
  v125 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for UUID(0);
  v147 = *(_QWORD *)(v31 - 8);
  v148 = v31;
  __chkstk_darwin(v31);
  v33 = (char *)&v124 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v145 = *(_QWORD *)(v34 - 8);
  v146 = v34;
  __chkstk_darwin(v34);
  v36 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100008384(&qword_1007C5E70);
  __chkstk_darwin(v37);
  v39 = (char *)&v124 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100008384(&qword_1007B7E08);
  __chkstk_darwin(v40);
  v42 = (char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100221F28(a6, (uint64_t)v42, &qword_1007B7E08);
  v43 = _s13UploadRequestVMa(0);
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43);
  v160 = v15;
  if (v44 == 1)
  {
    sub_10000D0F0((uint64_t)v42, &qword_1007B7E08);
    v144 = 0;
  }
  else
  {
    v144 = *(_QWORD *)&v42[*(int *)(v43 + 20)];
    sub_1002443C8((uint64_t)v42, _s13UploadRequestVMa);
  }
  sub_100221F28(a7, (uint64_t)v39, &qword_1007C5E70);
  v45 = type metadata accessor for SFNWInterfaceType(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v39, 1, v45);
  if ((_DWORD)v47 == 1)
  {
    sub_10000D0F0((uint64_t)v39, &qword_1007C5E70);
    v48 = (const char *)0xE500000000000000;
  }
  else
  {
    SFNWInterfaceType.description.getter(v47);
    v48 = v49;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v45);
  }
  v50 = sub_100008384(&qword_1007BAB90);
  inited = swift_initStackObject(v50, v165);
  *(_OWORD *)(inited + 16) = xmmword_1005D0690;
  *(_QWORD *)(inited + 32) = 0x726566736E617274;
  *(_QWORD *)(inited + 40) = 0xEA00000000004449;
  v52 = SFAirDropSend.Request.id.getter();
  SFAirDrop.TransferIdentifier.id.getter(v52);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v36, v146);
  UUID.uuidString.getter(v53);
  v55 = v54;
  (*(void (**)(char *, uint64_t))(v147 + 8))(v33, v148);
  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  *(_QWORD *)(inited + 48) = v56;
  *(_QWORD *)(inited + 56) = 1702521203;
  *(_QWORD *)(inited + 64) = 0xE400000000000000;
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x726F70736E617274;
  *(_QWORD *)(inited + 88) = 0xE900000000000074;
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  *(_QWORD *)(inited + 96) = v57;
  *(_QWORD *)(inited + 104) = 0x746C75736572;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  v58 = v152;
  sub_100336E00();
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  strcpy((char *)(inited + 128), "failureSubType");
  *(_BYTE *)(inited + 143) = -18;
  v59 = v149;
  v60 = v58;
  v61 = v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v28, v60, v150);
  v62 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v28, v61);
  v63 = (uint64_t)v160;
  if (v62 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v59 + 96))(v28, v61);
    v65 = v125;
    v64 = v126;
    v66 = v127;
    v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v126 + 32))(v125, v28, v127);
    SFAirDropSend.Failure.errorDescription.getter(v67);
    v69 = v68;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v61);
    v69 = (const char *)0xE400000000000000;
  }
  v70 = (uint64_t)v161;
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v69);
  *(_QWORD *)(inited + 144) = v71;
  v72 = (const char *)sub_10021EBF8(inited);
  v73 = v153;
  sub_100221F28(v155, v153, &qword_1007B7760);
  v74 = v154;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v73, 1, v154) == 1)
  {
    sub_10000D0F0(v73, &qword_1007B7760);
    v75 = v136;
    if (*(_QWORD *)(v136 + 16))
    {
      sub_1003368B4(v136);
      v77 = v76;
      v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v77);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v72);
      v167[0] = (uint64_t)v72;
      sub_10046C228((uint64_t)v78, 1701869940, (const char *)0xE400000000000000, isUniquelyReferenced_nonNull_native);
      v80 = v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000);
      sub_100336A80(v75);
      isa = Int._bridgeToObjectiveC()().super.super.isa;
      v82 = swift_isUniquelyReferenced_nonNull_native(v80);
      v167[0] = v80;
      sub_10046C228((uint64_t)isa, 0x6C6F636F746F7270, (const char *)0xE800000000000000, v82);
      v83 = v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000);
      sub_100336C44(v75);
      v84 = Int._bridgeToObjectiveC()().super.super.isa;
      v85 = swift_isUniquelyReferenced_nonNull_native(v83);
      v167[0] = v83;
      sub_10046C228((uint64_t)v84, 0xD000000000000010, (const char *)0x8000000100616560, v85);
      v72 = (const char *)v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000);
    }
  }
  else
  {
    v86 = v132;
    v87 = sub_100221DB4(v73, v132, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v88 = (uint64_t)v128;
    SFAirDropSend.Request.type.getter(v87);
    sub_100337080(v88);
    v90 = v89;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v88, v130);
    v91 = v63;
    v92 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v90);
    v93 = swift_isUniquelyReferenced_nonNull_native(v72);
    v167[0] = (uint64_t)v72;
    sub_10046C228((uint64_t)v92, 1701869940, (const char *)0xE400000000000000, v93);
    v94 = v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    v95 = v131;
    sub_100244384(v86, v131, type metadata accessor for SDAirDropDiscoveredEndpoint);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v95, v74);
    sub_1002443C8(v95, (uint64_t (*)(_QWORD))off_100722B68[EnumCaseMultiPayload]);
    v97 = Int._bridgeToObjectiveC()().super.super.isa;
    v98 = swift_isUniquelyReferenced_nonNull_native(v94);
    v167[0] = v94;
    sub_10046C228((uint64_t)v97, 0x6C6F636F746F7270, (const char *)0xE800000000000000, v98);
    v99 = v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    v100 = v133;
    sub_1002B1120();
    SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v100, v135);
    v101 = Int._bridgeToObjectiveC()().super.super.isa;
    v102 = swift_isUniquelyReferenced_nonNull_native(v99);
    v167[0] = v99;
    v103 = (uint64_t)v101;
    v63 = v91;
    sub_10046C228(v103, 0xD000000000000010, (const char *)0x8000000100616560, v102);
    v72 = (const char *)v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    sub_1002443C8(v86, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v104 = v162;
  v105 = v158;
  sub_100221F28(v159, v158, &qword_1007BA310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v105, 1, v157) == 1)
  {
    sub_10000D0F0(v105, &qword_1007BA310);
  }
  else
  {
    sub_100221DB4(v105, v70, type metadata accessor for SDAirDropSendConnectionTelemetry);
    v106 = (const char *)sub_1002A5174();
    v107 = swift_isUniquelyReferenced_nonNull_native(v72);
    v167[0] = (uint64_t)v72;
    sub_10033722C(v106, (uint64_t)sub_100337510, 0, v107, v167);
    v72 = (const char *)v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    if (qword_1007B3F30 != -1)
      swift_once(&qword_1007B3F30, sub_100336824);
    v108 = type metadata accessor for Logger(0);
    sub_100221DF8(v108, (uint64_t)qword_1007BAAE0);
    v109 = sub_100244384(v70, v63, type metadata accessor for SDAirDropSendConnectionTelemetry);
    v110 = Logger.logObject.getter(v109);
    v111 = v63;
    v112 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v110, v112))
    {
      v113 = (uint8_t *)swift_slowAlloc(12, -1);
      v114 = swift_slowAlloc(32, -1);
      v167[0] = v114;
      *(_DWORD *)v113 = 136315138;
      v115 = sub_1002A533C();
      v117 = (const char *)v116;
      v164 = sub_100228BD8(v115, v116, v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v113 + 4);
      swift_bridgeObjectRelease(v117);
      sub_1002443C8(v111, type metadata accessor for SDAirDropSendConnectionTelemetry);
      _os_log_impl((void *)&_mh_execute_header, v110, v112, "Performance: %s", v113, 0xCu);
      swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v114, -1, -1);
      v118 = v113;
      v104 = v162;
      swift_slowDealloc(v118, -1, -1);

      v119 = (uint64_t)v161;
    }
    else
    {

      sub_1002443C8(v111, type metadata accessor for SDAirDropSendConnectionTelemetry);
      v119 = v70;
    }
    sub_1002443C8(v119, type metadata accessor for SDAirDropSendConnectionTelemetry);
  }
  sub_10033858C(v104, (uint64_t)v167);
  if (v167[1])
  {
    swift_bridgeObjectRetain(v137);
    swift_bridgeObjectRetain(v138);
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v140);
    swift_bridgeObjectRetain(v141);
    sub_100244404(v143, v142);
    v120 = String._bridgeToObjectiveC()();
    v121 = swift_isUniquelyReferenced_nonNull_native(v72);
    v164 = (uint64_t)v72;
    sub_10046C228((uint64_t)v120, 0xD000000000000012, (const char *)0x80000001006165E0, v121);
    v72 = (const char *)v164;
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    sub_1003385D4(v104);
  }
  v122 = String._bridgeToObjectiveC()();
  sub_1002BA59C();
  v123 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v72);
  SFMetricsLog(v122, v123);

}

uint64_t sub_10033858C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BA4D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003385D4(uint64_t a1)
{
  sub_100338624(*(_QWORD *)a1, *(const char **)(a1 + 8), *(_QWORD *)(a1 + 16), *(const char **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(const char **)(a1 + 48), *(_QWORD *)(a1 + 56), *(const char **)(a1 + 64), *(_QWORD *)(a1 + 72), *(const char **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  return a1;
}

uint64_t sub_100338624(uint64_t a1, const char *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8, const char *a9, uint64_t a10, const char *a11, uint64_t a12, unint64_t a13)
{
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t result;

  if (a2)
  {
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(a2).n128_u64[0];
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(a4, v15).n128_u64[0];
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(a7, v16).n128_u64[0];
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a9, v17).n128_u64[0];
    swift_bridgeObjectRelease(a11, v18);
    return sub_100225AA0(a12, a13);
  }
  return result;
}

void sub_100338698(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  NSString v19;
  const char *v20;
  const char *v21;
  NSString v22;
  const char *v23;
  NSString v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  _BYTE v32[160];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16))
  {
    v13 = sub_100008384(&qword_1007BAB90);
    inited = swift_initStackObject(v13, v32);
    *(_OWORD *)(inited + 16) = xmmword_1005D0690;
    *(_QWORD *)(inited + 32) = 0x726566736E617274;
    *(_QWORD *)(inited + 40) = 0xEA00000000004449;
    LODWORD(v31) = a3;
    v15 = SFAirDropSend.Request.id.getter(inited);
    SFAirDrop.TransferIdentifier.id.getter(v15);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    UUID.uuidString.getter(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    *(_QWORD *)(inited + 48) = v19;
    *(_QWORD *)(inited + 56) = 1701869940;
    *(_QWORD *)(inited + 64) = 0xE400000000000000;
    sub_1003368B4(a2);
    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    *(_QWORD *)(inited + 72) = v22;
    *(_QWORD *)(inited + 80) = 0x6C6F636F746F7270;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    sub_100336A80(a2);
    *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
    *(_QWORD *)(inited + 104) = 0xD000000000000010;
    *(_QWORD *)(inited + 112) = 0x8000000100616560;
    sub_100336C44(a2);
    *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
    *(_QWORD *)(inited + 128) = 0xD000000000000015;
    *(_QWORD *)(inited + 136) = 0x8000000100616670;
    *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
    v23 = (const char *)sub_10021EBF8(inited);
    v24 = String._bridgeToObjectiveC()();
    sub_1002BA59C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
    SFMetricsLog(v24, isa);

  }
  else
  {
    if (qword_1007B3F30 != -1)
      swift_once(&qword_1007B3F30, sub_100336824);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100221DF8(v26, (uint64_t)qword_1007BAAE0);
    v31 = Logger.logObject.getter(v27);
    v28 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v28, "No send endpoints for logging send start", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
}

uint64_t sub_1003389F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100338ACC, static AirDropActor.shared, 0);
}

void sub_100338ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C640);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C660, 1, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriTunesULinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary35SDAirDropContentHandleriTunesULinks);
}

uint64_t sub_100338DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriTunesULinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100338DDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BABC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003389F0(a1);
}

void sub_100338E30(uint64_t a1, char a2)
{
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  const char *v12;
  const char *v13;

  swift_bridgeObjectRetain("IWORK_LINK_WITH_TITLE", 0x545F4E5245444F4DLL);
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = "IWORK_LINK_WITH_TITLE";
  String.append(_:)(v4);
  swift_bridgeObjectRelease("IWORK_LINK_WITH_TITLE");
  if ((a2 & 1) != 0)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  v7 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(&qword_10071C2E0, 1, v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    static String.localizedStringWithFormat(_:_:)(v11, v13, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100338FD0()
{
  return sub_100338FF0(_s15MacApprovePhoneV4FlowVMa) & 1;
}

uint64_t sub_100338FF0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v27;

  v3 = v1;
  v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(v3 + *(int *)(v4 + 28));
  v17 = v16 > 8;
  v18 = (1 << v16) & 0x18E;
  v19 = (char *)&v27 - v14;
  if (v17 || v18 == 0)
  {
    sub_100244384(v3, (uint64_t)v19, a1);
    sub_1002443C8((uint64_t)v15, a1);
    sub_100244384(v3, (uint64_t)v13, a1);
  }
  else
  {
    sub_100244384(v3, (uint64_t)v19, a1);
    sub_100244384((uint64_t)v15, (uint64_t)v6, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1002443C8((uint64_t)v15, a1);
    v21 = v6[*(int *)(v4 + 32)];
    sub_1002443C8((uint64_t)v6, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_100244384(v3, (uint64_t)v13, a1);
    if ((v21 & 1) == 0)
    {
      sub_1002443C8((uint64_t)v13, a1);
      return 1;
    }
  }
  v23 = *(_QWORD *)&v13[*(int *)(v4 + 28)];
  v17 = v23 > 8;
  v24 = (1 << v23) & 0x18E;
  if (v17 || v24 == 0)
  {
    sub_100244384((uint64_t)v13, (uint64_t)v10, a1);
    sub_100244384((uint64_t)v10, (uint64_t)v6, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1002443C8((uint64_t)v10, a1);
    sub_1002443C8((uint64_t)v13, a1);
    v22 = v6[*(int *)(v4 + 32)];
    sub_1002443C8((uint64_t)v6, type metadata accessor for SDAuthenticationCommonOperationInput);
  }
  else
  {
    sub_100244384((uint64_t)v13, (uint64_t)v10, a1);
    sub_1002443C8((uint64_t)v10, a1);
    sub_1002443C8((uint64_t)v13, a1);
    return 0;
  }
  return v22;
}

uint64_t sub_100339224()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput(0) + 28));
}

uint64_t sub_100339244()
{
  return sub_100338FF0(_s10NanoWalletV4FlowVMa) & 1;
}

uint64_t sub_100339264()
{
  return sub_100338FF0(_s14MacUnlockPhoneV4FlowVMa) & 1;
}

uint64_t sub_100339288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BAC80);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BAC80);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100339318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  v3[25] = v4;
  v3[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v3[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[28] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v7);
  v3[30] = swift_task_alloc(v7);
  return swift_task_switch(sub_1003393B0, 0, 0);
}

uint64_t sub_1003393B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  const char *v33;
  __n128 v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  uint64_t *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v3 = 0;
  v4 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 32));
  switch(*(_QWORD *)(v1 + *(int *)(v2 + 28)))
  {
    case 0:
    case 2:
      break;
    case 1:
      if (*(_BYTE *)(v1 + *(int *)(v2 + 32)))
        v3 = 31;
      else
        v3 = 96;
      break;
    case 3:
      if (*(_BYTE *)(v1 + *(int *)(v2 + 32)))
        v3 = 2688;
      else
        v3 = 2050;
      break;
    case 4:
      if (*(_BYTE *)(v1 + *(int *)(v2 + 32)))
        v3 = 3584;
      else
        v3 = 256;
      break;
    case 5:
      v3 = 34816;
      break;
    case 6:
      v5 = v4 == 0;
      v6 = 47744;
      goto LABEL_17;
    case 7:
      v5 = v4 == 0;
      v6 = 0x4000;
LABEL_17:
      if (v5)
        v3 = v6;
      else
        v3 = 2;
      break;
    case 8:
      v3 = 128;
      break;
    default:
      if (qword_1007B3DD8 != -1)
        swift_once(&qword_1007B3DD8, sub_1002CFC70);
      v3 = qword_1007D80C0;
      break;
  }
  sub_100244418(*(_QWORD *)(v0 + 184), v0 + 56);
  v7 = sub_100008384(&qword_1007B5D70);
  v8 = sub_100008384(&qword_1007BAF88);
  if (swift_dynamicCast(v0 + 96, v0 + 56, v7, v8, 6))
  {
    sub_10026EE60((__int128 *)(v0 + 96), v0 + 16);
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    sub_10023A834((_QWORD *)(v0 + 16), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    sub_10022E75C((_QWORD *)(v0 + 16));
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    v11 = sub_10000D0F0(v0 + 96, &qword_1007BAF90);
    static Date.distantFuture.getter(v11);
  }
  if (qword_1007B3F38 != -1)
    swift_once(&qword_1007B3F38, sub_100339288);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 224);
  v16 = type metadata accessor for Logger(0);
  sub_100221DF8(v16, (uint64_t)qword_1007BAC80);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v18 = v17(v12, v13, v14);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 216);
  if (v21)
  {
    v44 = *(_QWORD *)(v0 + 224);
    v45 = v17;
    v24 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v46 = v25;
    v43 = v25;
    *(_DWORD *)v24 = 136315394;
    v26 = String.init<A>(describing:)(v25, &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy);
    v28 = (const char *)v27;
    *(_QWORD *)(v0 + 160) = sub_100228BD8(v26, v27, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v24 + 4);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v24 + 12) = 2080;
    v29 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v30 = dispatch thunk of CustomStringConvertible.description.getter(v23, v29);
    v32 = (const char *)v31;
    *(_QWORD *)(v0 + 168) = sub_100228BD8(v30, v31, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v24 + 14);
    v33 = v32;
    v17 = v45;
    v34 = swift_bridgeObjectRelease(v33);
    v35 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    v35(v22, v23, v34);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: using requestingDeviceUnlockDate: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    v35 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 224) + 8);
    ((void (*)(_QWORD, _QWORD))v35)(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  }

  *(_QWORD *)(v0 + 248) = v35;
  v36 = *(uint64_t **)(v0 + 208);
  v37 = *(_QWORD **)(v0 + 192);
  v17((uint64_t)v36 + *(int *)(*(_QWORD *)(v0 + 200) + 20), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
  *v36 = v3;
  v38 = (_QWORD *)(*sub_10023A834(v37, v37[3])
                 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
  swift_beginAccess(v38, v0 + 136, 0, 0);
  v39 = *sub_10023A834(v38, v38[3]);
  v40 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 256) = v40;
  *(_QWORD *)(v40 + 16) = v39;
  *(_QWORD *)(v40 + 24) = v36;
  v41 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 264) = v41;
  *v41 = v0;
  v41[1] = sub_100339860;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v41, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_100340AE8, v40, (char *)&type metadata for () + 8);
}

uint64_t sub_100339860()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100339960;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 256));
    v4 = sub_1003398CC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003398CC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  sub_1002443C8(v5, type metadata accessor for AuthenticationSecurityRequest);
  v2(v1, v4);
  sub_100244418(v6, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100339960()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  sub_1002443C8(v5, type metadata accessor for AuthenticationSecurityRequest);
  v1(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003399E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BAF84);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return sub_100339318(a1, a2, a3);
}

uint64_t sub_100339A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100339A60, 0, 0);
}

id sub_100339A60()
{
  uint64_t v0;
  id result;
  void *v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "bluetoothEnabled");

    if (v3)
    {
      sub_100244418(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
    }
    else
    {
      v4 = sub_100244304();
      v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0, 0);
      *(_DWORD *)v6 = 17;
      *(_QWORD *)(v6 + 8) = 0xD000000000000015;
      *(_QWORD *)(v6 + 16) = 0x8000000100616700;
      swift_willThrow(v5);
    }
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100339B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAF5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_100339A60, 0, 0);
}

uint64_t sub_100339B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100339BB0, 0, 0);
}

id sub_100339BB0()
{
  uint64_t v0;
  id result;
  void *v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "wirelessEnabled");

    if (v3)
    {
      sub_100244418(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
    }
    else
    {
      v4 = sub_100244304();
      v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0, 0);
      *(_DWORD *)v6 = 16;
      *(_QWORD *)(v6 + 8) = 0xD000000000000010;
      *(_QWORD *)(v6 + 16) = 0x8000000100616720;
      swift_willThrow(v5);
    }
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100339C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAF64);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_100339BB0, 0, 0);
}

uint64_t sub_100339CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return swift_task_switch(sub_100339D04, 0, 0);
}

uint64_t sub_100339D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100244418(*(_QWORD *)(v0 + 72) + 40, v0 + 16);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v1);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2) & 1) != 0)
  {
    sub_100244418(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v3 = sub_100244304();
    v4 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v3, 0, 0);
    *(_DWORD *)v5 = 18;
    *(_QWORD *)(v5 + 8) = 0xD000000000000025;
    *(_QWORD *)(v5 + 16) = 0x8000000100616740;
    swift_willThrow(v4);
  }
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100339DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BAF6C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return swift_task_switch(sub_100339D04, 0, 0);
}

uint64_t sub_100339E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch(sub_100339E78, 0, 0);
}

uint64_t sub_100339E78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);

  v1 = *(_QWORD *)(v0 + 88);
  sub_100244418(v1 + 40, v0 + 16);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput(0) + 28)) - 1;
  v3 = 0.0;
  if (v2 <= 7)
    v3 = flt_1005D3798[v2];
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  v8 = (float)((float)v7 / 10.0) + (float)v6;
  if (v3 <= v8)
  {
    sub_100244418(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72));
    sub_10022E75C((_QWORD *)(v0 + 16));
    v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007BAC80);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      *(_DWORD *)v13 = 134218240;
      *(double *)(v0 + 56) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 4);
      *(_WORD *)(v13 + 12) = 2048;
      *(double *)(v0 + 56) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 14);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Remote Device version is unsupported. Need: %f, got: %f", (uint8_t *)v13, 0x16u);
      swift_slowDealloc(v13, -1, -1);
    }

    _StringGuts.grow(_:)(55);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = 0xE000000000000000;
    v14._object = (void *)0x8000000100616770;
    v14._countAndFlagsBits = 0xD00000000000002CLL;
    String.append(_:)(v14);
    Float.write<A>(to:)(v0 + 56, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v3);
    v15._countAndFlagsBits = 0x203A746F67202CLL;
    v15._object = (void *)0xE700000000000000;
    String.append(_:)(v15);
    Float.write<A>(to:)(v0 + 56, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v8);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 64);
    v18 = sub_100244304();
    v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0, 0);
    *(_DWORD *)v20 = 15;
    *(_QWORD *)(v20 + 8) = v16;
    *(_QWORD *)(v20 + 16) = v17;
    swift_willThrow(v19);
    sub_10022E75C((_QWORD *)(v0 + 16));
    v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v21();
}

uint64_t sub_10033A124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BAF74);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = a1;
  return swift_task_switch(sub_100339E78, 0, 0);
}

uint64_t sub_10033A198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return swift_task_switch(sub_10033A1B4, 0, 0);
}

uint64_t sub_10033A1B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  const char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, __n128);
  uint64_t v24;
  uint64_t *v25;
  const char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v33;

  v1 = *(_QWORD **)(v0 + 104);
  v33 = *(_QWORD **)(v0 + 88);
  sub_100244418(*(_QWORD *)(v0 + 96), v0 + 16);
  v2 = v1[8];
  v3 = v1[9];
  sub_10023A834(v1 + 5, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v6 = v5;
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v7);
  v9 = (void (*)(uint64_t, _QWORD, __n128))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v0 + 56, v7, v8);
  v11 = v10;
  v12 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  v13 = (uint64_t *)(v11 + *(int *)(v12 + 80));
  v14 = (const char *)v13[1];
  *v13 = v4;
  v13[1] = v6;
  v15 = swift_bridgeObjectRelease(v14);
  v9(v0 + 56, 0, v15);
  v16 = v1[8];
  v17 = v1[9];
  sub_10023A834(v1 + 5, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v20 = v19;
  v21 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v21);
  v23 = (void (*)(uint64_t, _QWORD, __n128))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v0 + 56, v21, v22);
  v25 = (uint64_t *)(v24 + *(int *)(v12 + 84));
  v26 = (const char *)v25[1];
  *v25 = v18;
  v25[1] = v20;
  v27 = swift_bridgeObjectRelease(v26);
  v23(v0 + 56, 0, v27);
  v28 = *(_QWORD *)(v0 + 40);
  v29 = *(_QWORD *)(v0 + 48);
  v30 = sub_10023A834((_QWORD *)(v0 + 16), v28);
  v33[3] = v28;
  v33[4] = *(_QWORD *)(v29 + 8);
  v31 = sub_100244348(v33);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v31, v30, v28);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033A364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BAF7C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  return swift_task_switch(sub_10033A1B4, 0, 0);
}

uint64_t sub_10033A3D8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033A434, 0, 0);
}

uint64_t sub_10033A434()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v2 = *(_QWORD **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD **)(v0 + 96);
  sub_100340E40((uint64_t)v2, v0 + 16);
  v4 = sub_10023A834(v2, v2[3]);
  Date.init()(v4);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v6);
  v8 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0 + 64, v6, v7);
  v10 = v9;
  v11 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_1002D4998(v1, v10 + *(int *)(v11 + 28));
  v8(v0 + 64, 0);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = sub_10023A834((_QWORD *)(v0 + 16), v12);
  v3[3] = v12;
  v3[4] = *(_QWORD *)(v13 + 8);
  v15 = sub_100244348(v3);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v15, v14, v12);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033A56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB344);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033A3D8(a1, a2);
}

uint64_t sub_10033A5C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033A620, 0, 0);
}

uint64_t sub_10033A620()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = *(_QWORD **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD **)(v0 + 96);
  sub_100340E40((uint64_t)v2, v0 + 16);
  v4 = sub_10023A834(v2, v2[3]);
  Date.init()(v4);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v6);
  v8 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0 + 64, v6, v7);
  sub_1002D4998(v1, v9);
  v8(v0 + 64, 0);
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = sub_10023A834((_QWORD *)(v0 + 16), v10);
  v3[3] = v10;
  v3[4] = *(_QWORD *)(v11 + 8);
  v13 = sub_100244348(v3);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, v12, v10);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033A744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB334);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033A5C4(a1, a2);
}

uint64_t sub_10033A79C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[26] = a1;
  v2[27] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v2[29] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[30] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[31] = swift_task_alloc(v6);
  v2[32] = swift_task_alloc(v6);
  return swift_task_switch(sub_10033A830, 0, 0);
}

uint64_t sub_10033A830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 216);
  v28 = (_QWORD *)(v0 + 16);
  v2 = sub_100244418(v1, v0 + 16);
  Date.init()(v2);
  sub_100244418(v1, v0 + 96);
  v3 = sub_100008384(&qword_1007BB318);
  v4 = sub_100008384(&qword_1007BAF88);
  if ((swift_dynamicCast(v0 + 136, v0 + 96, v3, v4, 6) & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 248);
    v5 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    sub_10026EE60((__int128 *)(v0 + 136), v0 + 56);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    sub_10023A834((_QWORD *)(v0 + 56), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
    sub_10022E75C((_QWORD *)(v0 + 56));
  }
  else
  {
    *(_QWORD *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_10000D0F0(v0 + 136, &qword_1007BAF90);
  }
  v26 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD **)(v0 + 208);
  (*(void (**)(uint64_t))(v11 + 16))(v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
  v16 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8((uint64_t)v28, v16);
  v17 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v0 + 176, v16, v15);
  v19 = v18;
  v20 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_1002D4998(v13, v19 + *(int *)(v20 + 32));
  v17(v0 + 176, 0);
  v21 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 48);
  v23 = sub_10023A834(v28, v21);
  v14[3] = v21;
  v14[4] = *(_QWORD *)(v22 + 8);
  v24 = sub_100244348(v14);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v23, v21);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v12);
  sub_10022E75C(v28);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033AA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB34C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033A79C(a1, a2);
}

uint64_t sub_10033AAD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[11] = a1;
  v2[12] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033AB30, 0, 0);
}

uint64_t sub_10033AB30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD **)(v0 + 88);
  v3 = sub_100244418(*(_QWORD *)(v0 + 96), v0 + 16);
  Date.init()(v3);
  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v5);
  v7 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v0 + 56, v5, v6);
  v9 = v8;
  v10 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_1002D4998(v1, v9 + *(int *)(v10 + 40));
  v7(v0 + 56, 0);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = sub_10023A834((_QWORD *)(v0 + 16), v11);
  v2[3] = v11;
  v2[4] = *(_QWORD *)(v12 + 8);
  v14 = sub_100244348(v2);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v14, v13, v11);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033AC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB374);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033AAD4(a1, a2);
}

uint64_t sub_10033ACB0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[11] = a1;
  v2[12] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033AD0C, 0, 0);
}

uint64_t sub_10033AD0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD **)(v0 + 88);
  v3 = sub_100244418(*(_QWORD *)(v0 + 96), v0 + 16);
  Date.init()(v3);
  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v5);
  v7 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v0 + 56, v5, v6);
  v9 = v8;
  v10 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_1002D4998(v1, v9 + *(int *)(v10 + 36));
  v7(v0 + 56, 0);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = sub_10023A834((_QWORD *)(v0 + 16), v11);
  v2[3] = v11;
  v2[4] = *(_QWORD *)(v12 + 8);
  v14 = sub_100244348(v2);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v14, v13, v11);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033AE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB354);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033ACB0(a1, a2);
}

uint64_t sub_10033AE8C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033AEE8, 0, 0);
}

uint64_t sub_10033AEE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v2 = *(_QWORD **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD **)(v0 + 96);
  sub_100340E40((uint64_t)v2, v0 + 16);
  v4 = v2[3];
  v5 = v2[5];
  sub_10023A834(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 0, 1, v6);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v7);
  v9 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v0 + 64, v7, v8);
  v11 = v10;
  v12 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_1002D4998(v1, v11 + *(int *)(v12 + 68));
  v9(v0 + 64, 0);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = sub_10023A834((_QWORD *)(v0 + 16), v13);
  v3[3] = v13;
  v3[4] = *(_QWORD *)(v14 + 8);
  v16 = sub_100244348(v3);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v16, v15, v13);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033B038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB33C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033AE8C(a1, a2);
}

uint64_t sub_10033B090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch(sub_10033B0A8, 0, 0);
}

uint64_t sub_10033B0A8()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (_OWORD *)(v0 + 96);
  sub_100244418(*(_QWORD *)(v0 + 144), v0 + 56);
  v2 = sub_100008384(&qword_1007BAFA0);
  v3 = sub_100008384(&qword_1007BAFA8);
  v4 = swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6);
  v5 = *(_QWORD **)(v0 + 144);
  if (v4)
    goto LABEL_3;
  *(_QWORD *)(v0 + 128) = 0;
  *v1 = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_10000D0F0(v0 + 96, &qword_1007BAFB0);
  sub_100244418((uint64_t)v5, v0 + 56);
  v6 = sub_100008384(&qword_1007BAFB8);
  v7 = swift_dynamicCast(v0 + 96, v0 + 56, v2, v6, 6);
  v5 = *(_QWORD **)(v0 + 144);
  if (v7)
  {
LABEL_3:
    v8 = *(_QWORD **)(v0 + 136);
    sub_10026EE60((__int128 *)(v0 + 96), v0 + 16);
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    sub_10026EEE8(v0 + 16, v9);
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    v12 = v5[3];
    v13 = v5[4];
    sub_10023A834(v5, v12);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    v16 = v15;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AB4(v14, v16);
    objc_msgSend(v11, "setAwdlInfo:", isa);

    v18 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = sub_10023A834((_QWORD *)(v0 + 16), v18);
    v8[3] = v18;
    v8[4] = *(_QWORD *)(v19 + 8);
    v21 = sub_100244348(v8);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v21, v20, v18);
    sub_10022E75C((_QWORD *)(v0 + 16));
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_10000D0F0(v0 + 96, &qword_1007BAFC0);
    _StringGuts.grow(_:)(114);
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, v0 + 16, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v23._object = (void *)0x80000001006167A0;
    v23._countAndFlagsBits = 0xD000000000000070;
    String.append(_:)(v23);
    v24 = *(_QWORD *)(v0 + 16);
    v25 = *(_QWORD *)(v0 + 24);
    v26 = sub_100244304();
    v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0, 0);
    *(_DWORD *)v28 = 10;
    *(_QWORD *)(v28 + 8) = v24;
    *(_QWORD *)(v28 + 16) = v25;
    swift_willThrow(v27);
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_10033B324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAF9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[17] = a1;
  v5[18] = a2;
  return swift_task_switch(sub_10033B0A8, 0, 0);
}

uint64_t sub_10033B388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 272) = a1;
  *(_QWORD *)(v2 + 280) = a2;
  return swift_task_switch(sub_10033B3A0, 0, 0);
}

uint64_t sub_10033B3A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Class isa;
  id v7;
  const char *v8;
  id v9;
  NSString v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  sub_100340E40(v0[35], (uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  sub_10023A834(v0 + 2, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v5 = v4;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(v3, v5);
  v7 = sub_1000C7E44(isa);

  if (!v7)
  {
    v23 = sub_100244304();
    v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0, 0);
    *(_DWORD *)v25 = 1;
    *(_QWORD *)(v25 + 8) = 0xD000000000000033;
    *(_QWORD *)(v25 + 16) = 0x8000000100616A50;
    swift_willThrow(v24);
    sub_10022E75C(v0 + 2);
    v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  v8 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v0[36] = v8;

  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "BOOLForKey:", v10);

  if (v11)
  {
    swift_bridgeObjectRelease(v8);
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007BAC80);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Default classCUnlockSkipRanging is set. Skipping ranging", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v17 = (_QWORD *)v0[34];

    v18 = v0[5];
    v19 = v0[6];
    v20 = sub_10023A834(v0 + 2, v18);
    v17[3] = v18;
    v17[4] = *(_QWORD *)(*(_QWORD *)(v19 + 8) + 8);
    v21 = sub_100244348(v17);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v21, v20, v18);
    sub_10022E75C(v0 + 2);
    v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  if (qword_1007B3F38 != -1)
    swift_once(&qword_1007B3F38, sub_100339288);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100221DF8(v27, (uint64_t)qword_1007BAC80);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Starting ranging as initiator", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }
  v32 = (_QWORD *)v0[35];

  v34 = v0[5];
  v33 = v0[6];
  sub_10023A834(v0 + 2, v34);
  (*(void (**)(uint64_t))(*(_QWORD *)(v33 + 8) + 16))(v34);
  sub_10023A834(v0 + 14, v0[17]);
  v35 = v32[3];
  v36 = v32[5];
  sub_10023A834(v32, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  v39 = v38;
  v0[37] = v37;
  v0[38] = v38;
  v40 = (_QWORD *)swift_task_alloc(dword_1007BC45C);
  v0[39] = v40;
  *v40 = v0;
  v40[1] = sub_10033B7B4;
  return sub_100362338((uint64_t)v8, v37, v39);
}

uint64_t sub_10033B7B4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t (*v9)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 312);
  *(_QWORD *)(*v2 + 320) = v1;
  swift_task_dealloc(v5);
  v7 = *(_QWORD *)(v4 + 296);
  v6 = *(_QWORD *)(v4 + 304);
  v8 = *(const char **)(v4 + 288);
  if (v1)
  {
    sub_100225AB4(*(_QWORD *)(v4 + 296), *(_QWORD *)(v4 + 304));
    swift_bridgeObjectRelease(v8);
    v9 = sub_10033BA54;
  }
  else
  {
    swift_bridgeObjectRelease(*(const char **)(v4 + 288));
    *(_BYTE *)(v4 + 328) = a1 & 1;
    sub_100225AB4(v7, v6);
    v9 = sub_10033B864;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10033B864()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v1 = *(_BYTE *)(v0 + 328);
  sub_10022E75C((_QWORD *)(v0 + 112));
  if ((v1 & 1) != 0)
  {
    sub_100340E40(v0 + 16, v0 + 64);
    v2 = sub_100008384(&qword_1007BB380);
    v3 = sub_100008384(&qword_1007BB388);
    v4 = swift_dynamicCast(v0 + 192, v0 + 64, v2, v3, 6);
    v5 = *(_QWORD **)(v0 + 272);
    if (v4)
    {
      sub_10026EE60((__int128 *)(v0 + 192), v0 + 152);
      v6 = *(_QWORD *)(v0 + 176);
      v7 = *(_QWORD *)(v0 + 184);
      sub_10026EEE8(v0 + 152, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(1, v6, v7);
      sub_100244418(v0 + 152, v0 + 232);
      v8 = sub_100008384(&qword_1007B5D70);
      swift_dynamicCast(v5, v0 + 232, v3, v8, 7);
      sub_10022E75C((_QWORD *)(v0 + 152));
    }
    else
    {
      *(_QWORD *)(v0 + 224) = 0;
      *(_OWORD *)(v0 + 192) = 0u;
      *(_OWORD *)(v0 + 208) = 0u;
      sub_10000D0F0(v0 + 192, &qword_1007BB390);
      v15 = *(_QWORD *)(v0 + 40);
      v16 = *(_QWORD *)(v0 + 48);
      v17 = sub_10023A834((_QWORD *)(v0 + 16), v15);
      v5[3] = v15;
      v5[4] = *(_QWORD *)(*(_QWORD *)(v16 + 8) + 8);
      v18 = sub_100244348(v5);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v17, v15);
    }
    sub_10022E75C((_QWORD *)(v0 + 16));
    v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    type metadata accessor for SFAuthenticationError(0);
    v10 = v9;
    v11 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v12 = swift_allocError(v10, v11, 0, 0);
    *v13 = 9;
    swift_willThrow(v12);
    sub_10022E75C((_QWORD *)(v0 + 16));
    v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v14();
}

uint64_t sub_10033BA54()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 112));
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033BA94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB37C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[34] = a1;
  v5[35] = a2;
  return swift_task_switch(sub_10033B3A0, 0, 0);
}

uint64_t sub_10033BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch(sub_10033BB10, 0, 0);
}

uint64_t sub_10033BB10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v6 = v5;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(v4, v6);
  v8 = sub_1000C7E44(isa);

  if (v8)
  {
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    *(_QWORD *)(v0 + 72) = v9;

    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100221DF8(v10, (uint64_t)qword_1007BAC80);
    *(_QWORD *)(v0 + 80) = v11;
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting ranging", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    v15 = *(_QWORD **)(v0 + 64);

    v17 = v1[3];
    v16 = v1[4];
    sub_10023A834(v15, v17);
    (*(void (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17);
    sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v18 = v1[3];
    v19 = v1[5];
    sub_10023A834(v15, v18);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 88) = v20;
    *(_QWORD *)(v0 + 96) = v21;
    v23 = (_QWORD *)swift_task_alloc(dword_1007BC464);
    *(_QWORD *)(v0 + 104) = v23;
    *v23 = v0;
    v23[1] = sub_10033BD9C;
    return sub_100363C34(v9, v20, v22);
  }
  else
  {
    v25 = sub_100244304();
    v26 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v25, 0, 0);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)(v27 + 8) = 0xD000000000000033;
    *(_QWORD *)(v27 + 16) = 0x8000000100616A50;
    swift_willThrow(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10033BD9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  const char *v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  v4 = v2[11];
  v5 = v2[12];
  v6 = (const char *)v2[9];
  if (v0)
  {
    sub_100225AB4(v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = sub_10033BF28;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    sub_100225AB4(v4, v5);
    v7 = sub_10033BE38;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10033BE38()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v1 = sub_10022E75C((_QWORD *)(v0 + 16));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ranging started", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = *(_QWORD **)(v0 + 56);
  v5 = *(_QWORD **)(v0 + 64);

  v7 = v5[3];
  v8 = v5[4];
  v9 = sub_10023A834(v5, v7);
  v6[3] = v7;
  v6[4] = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 8);
  v10 = sub_100244348(v6);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v9, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033BF28()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB36C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[7] = a1;
  v5[8] = a2;
  return swift_task_switch(sub_10033BB10, 0, 0);
}

uint64_t sub_10033BFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch(sub_10033BFD8, 0, 0);
}

uint64_t sub_10033BFD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v4 = sub_1005251C4();
  sub_10022E75C((_QWORD *)(v0 + 16));
  if ((v4 & 1) != 0)
  {
    v5 = *(_QWORD **)(v0 + 56);
    v6 = v1[3];
    v7 = v1[4];
    v8 = sub_10023A834(*(_QWORD **)(v0 + 64), v6);
    v5[3] = v6;
    v5[4] = *(_QWORD *)(v7 + 8);
    v9 = sub_100244348(v5);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v8, v6);
  }
  else
  {
    v10 = sub_100244304();
    v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0, 0);
    *(_DWORD *)v12 = 33;
    *(_QWORD *)(v12 + 8) = 0x62616E6520746F4ELL;
    *(_QWORD *)(v12 + 16) = 0xEB0000000064656CLL;
    swift_willThrow(v11);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033C0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFE4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[7] = a1;
  v5[8] = a2;
  return swift_task_switch(sub_10033BFD8, 0, 0);
}

uint64_t sub_10033C160(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C4330) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  v2[6] = swift_task_alloc(v3);
  v4 = type metadata accessor for Date(0);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[8] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v6);
  v2[10] = swift_task_alloc(v6);
  return swift_task_switch(sub_10033C210, 0, 0);
}

uint64_t sub_10033C210()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  const char *object;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  const char *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[6];
  v4 = (_QWORD *)v0[3];
  v5 = v4[3];
  v6 = v4[4];
  sub_10023A834(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v7(v3, 1, v1) == 1)
  {
    sub_10000D0F0(v0[6], &qword_1007C4330);
    v8 = sub_100244304();
    v9 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v8, 0, 0);
    *(_DWORD *)v10 = 11;
    strcpy((char *)(v10 + 8), "Unregistered");
    *(_BYTE *)(v10 + 21) = 0;
    *(_WORD *)(v10 + 22) = -5120;
    swift_willThrow(v9);
  }
  else
  {
    v11 = v0[7];
    v12 = v0[5];
    v13 = (_QWORD *)v0[3];
    v14 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0[8] + 32);
    v14(v0[10], v0[6], v11);
    v15 = v4[3];
    v16 = v4[5];
    sub_10023A834(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    v17 = v7(v12, 1, v11);
    v18 = v0[10];
    if (v17 == 1)
    {
      v19 = v0[7];
      v20 = v0[8];
      sub_10000D0F0(v0[5], &qword_1007C4330);
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      strcpy((char *)v70, "Registered on ");
      HIBYTE(v70[1]) = -18;
      v21 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v19, v21);
      object = (const char *)v22._object;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(object);
      v24._countAndFlagsBits = 0xD000000000000016;
      v24._object = (void *)0x80000001006169F0;
      String.append(_:)(v24);
      v25 = v70[0];
      v26 = v70[1];
      v27 = sub_100244304();
      v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0, 0);
      *(_DWORD *)v29 = 36;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v26;
      swift_willThrow(v28);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    else
    {
      v30 = v0[9];
      v31 = v0[7];
      v14(v30, v0[5], v31);
      v32 = sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      if ((dispatch thunk of static Comparable.< infix(_:_:)(v30, v18, v31, v32) & 1) == 0)
      {
        v57 = v0[9];
        v56 = v0[10];
        v58 = v0[7];
        v59 = v0[8];
        v60 = v0[6];
        v67 = v0[5];
        v69 = v0[4];
        v61 = (_QWORD *)v0[2];
        v63 = v4[3];
        v62 = v4[4];
        v64 = sub_10023A834((_QWORD *)v0[3], v63);
        v61[3] = v63;
        v61[4] = *(_QWORD *)(v62 + 8);
        v65 = sub_100244348(v61);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v65, v64, v63);
        v66 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v66(v57, v58);
        v66(v56, v58);
        swift_task_dealloc(v56);
        swift_task_dealloc(v57);
        swift_task_dealloc(v60);
        swift_task_dealloc(v67);
        swift_task_dealloc(v69);
        v54 = (uint64_t (*)(void))v0[1];
        return v54();
      }
      v33 = v0[10];
      v68 = v0[9];
      v70[0] = 0;
      v34 = v0[7];
      v35 = v0[8];
      v37 = (_QWORD *)v0[3];
      v36 = v0[4];
      v70[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(57);
      v38._countAndFlagsBits = 0xD00000000000001CLL;
      v38._object = (void *)0x8000000100616A10;
      String.append(_:)(v38);
      v39 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v34, v39);
      v41 = (const char *)v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(v41);
      v42._object = (void *)0x8000000100616A30;
      v42._countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v42);
      v43 = v4[3];
      v44 = v4[5];
      sub_10023A834(v37, v43);
      (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v36, v34, v39);
      sub_10000D0F0(v36, &qword_1007C4330);
      v45._countAndFlagsBits = 0x736C616620736920;
      v45._object = (void *)0xE900000000000065;
      String.append(_:)(v45);
      v46 = sub_100244304();
      v47 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v46, 0, 0);
      *(_DWORD *)v48 = 36;
      *(_QWORD *)(v48 + 8) = 0;
      *(_QWORD *)(v48 + 16) = 0xE000000000000000;
      swift_willThrow(v47);
      v49 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v49(v68, v34);
      v49(v33, v34);
    }
  }
  v50 = v0[9];
  v52 = v0[5];
  v51 = v0[6];
  v53 = v0[4];
  swift_task_dealloc(v0[10]);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  v54 = (uint64_t (*)(void))v0[1];
  return v54();
}

uint64_t sub_10033C70C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB35C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033C160(a1, a2);
}

uint64_t sub_10033C764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v3[11] = v4;
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033C7C4, 0, 0);
}

uint64_t sub_10033C7C4()
{
  _QWORD *v0;
  id v1;
  NSString v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(void);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  if (v3)
  {
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007BAC80);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "### TESTING ONLY: throwAKSCreateTokenError default set, throwing generic error", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = sub_100244304();
    v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0, 0);
    *(_DWORD *)v11 = 34;
    *(_QWORD *)(v11 + 8) = 0xD00000000000002CLL;
    *(_QWORD *)(v11 + 16) = 0x8000000100616980;
    swift_willThrow(v10);
    swift_task_dealloc(v0[12]);
    v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v12 = (_QWORD *)v0[9];
    v14 = v12[3];
    v13 = v12[4];
    sub_10023A834(v12, v14);
    (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 16))(v14);
    sub_10023A834(v0 + 2, v0[5]);
    v15 = v12[3];
    v16 = v12[4];
    sub_10023A834(v12, v15);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    v19 = v18;
    sub_100524700(v17, v18);

    sub_100225AB4(v17, v19);
    sub_10022E75C(v0 + 2);
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v23 = v0[12];
    v24 = v0[10];
    v25 = type metadata accessor for Logger(0);
    sub_100221DF8(v25, (uint64_t)qword_1007BAC80);
    v26 = sub_100340DFC(v24, v23);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    v29 = os_log_type_enabled(v27, v28);
    v30 = v0[12];
    if (v29)
    {
      v31 = v0[11];
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      *(_DWORD *)v32 = 136315138;
      v43 = v33;
      v34 = sub_1003FDAA0(*(_QWORD *)(v30 + *(int *)(v31 + 28)));
      v36 = (const char *)v35;
      v0[7] = sub_100228BD8(v34, v35, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v32 + 4);
      swift_bridgeObjectRelease(v36);
      sub_1002443C8(v30, type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "AUTHENTICATION SUCCEEDED for %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      sub_1002443C8(v0[12], type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    v37 = v0[12];
    v38 = (_QWORD *)v0[8];
    v39 = v12[3];
    v40 = v12[4];
    v41 = sub_10023A834((_QWORD *)v0[9], v39);
    v38[3] = v39;
    v38[4] = *(_QWORD *)(*(_QWORD *)(v40 + 8) + 8);
    v42 = sub_100244348(v38);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v42, v41, v39);
    swift_task_dealloc(v37);
    v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_10033CC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB304);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return sub_10033C764(a1, a2, a3);
}

uint64_t sub_10033CCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_10033CCD0, 0, 0);
}

uint64_t sub_10033CCD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v6 = v5;
  sub_100225AA0(v4, v5);
  if (v6 >> 60 == 15)
  {
    v7 = sub_100244304();
    v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0, 0);
    *(_DWORD *)v9 = 1;
    *(_QWORD *)(v9 + 8) = 0xD000000000000012;
    *(_QWORD *)(v9 + 16) = 0x80000001006168A0;
    swift_willThrow(v8);
  }
  else
  {
    v10 = *(_QWORD **)(v0 + 16);
    v11 = v1[3];
    v12 = v1[4];
    v13 = sub_10023A834(*(_QWORD **)(v0 + 24), v11);
    v10[3] = v11;
    v10[4] = *(_QWORD *)(*(_QWORD *)(v12 + 8) + 8);
    v14 = sub_100244348(v10);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v14, v13, v11);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033CDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB004);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_10033CCD0, 0, 0);
}

uint64_t sub_10033CE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch(sub_10033CE58, 0, 0);
}

uint64_t sub_10033CE58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  int *v6;
  double v7;
  char *v8;
  const char *v9;
  NSString v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  double v16;
  const char *v17;
  NSString v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v1 = *(_QWORD **)(v0 + 72);
  sub_100340E40((uint64_t)v1, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v2);
  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  v5 = sub_10023A834(v1, v1[3]);
  v6 = (int *)_s15MacApprovePhoneV18InitialLockContextVMa(0);
  v8 = (char *)v5 + v6[9];
  v9 = (const char *)*((_QWORD *)v8 + 1);
  if (v9)
  {
    swift_bridgeObjectRetain(*((const char **)v8 + 1));
    v10 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  else
  {
    v10 = 0;
  }
  v11 = *(_QWORD **)(v0 + 72);
  objc_msgSend(v4, "setAppName:", v10, v7);

  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v12);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  v15 = (char *)sub_10023A834(v11, v1[3]) + v6[8];
  v17 = (const char *)*((_QWORD *)v15 + 1);
  if (v17)
  {
    swift_bridgeObjectRetain(*((const char **)v15 + 1));
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  v19 = *(_QWORD **)(v0 + 64);
  v20 = *(_QWORD **)(v0 + 72);
  objc_msgSend(v14, "setBundleID:", v18, v16);

  v21 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v21);
  v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  objc_msgSend(v23, "setBiometricOnly:", *((_BYTE *)sub_10023A834(v20, v1[3]) + v6[10]) & 1);

  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 48);
  v26 = sub_10023A834((_QWORD *)(v0 + 16), v24);
  v19[3] = v24;
  v19[4] = *(_QWORD *)(v25 + 8);
  v27 = sub_100244348(v19);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v27, v26, v24);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033D084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB00C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[8] = a1;
  v5[9] = a2;
  return swift_task_switch(sub_10033CE58, 0, 0);
}

uint64_t sub_10033D0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_10033D104, 0, 0);
}

uint64_t sub_10033D104()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  _QWORD *v8;
  int *v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  double v13;
  NSString v14;
  id v15;
  NSString v16;
  NSString v17;
  uint8_t *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD **)(v0 + 32);
  v30 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v3 = sub_1003FDA90(*(_QWORD *)((char *)v2 + *(int *)(v30 + 28)));
  v4 = v2[8];
  v5 = v2[9];
  sub_10023A834(v2 + 5, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = v6;
  v8 = sub_10023A834(v1, v1[3]);
  v9 = (int *)_s15MacApprovePhoneV26HandleApprovePromptContextVMa(0);
  v10 = *(const char **)((char *)v8 + v9[8] + 8);
  v11 = *(const char **)((char *)sub_10023A834(v1, v1[3]) + v9[7] + 8);
  v12 = *((unsigned __int8 *)sub_10023A834(v1, v1[3]) + v9[9]);
  *(_QWORD *)&v13 = swift_bridgeObjectRetain(v10).n128_u64[0];
  swift_bridgeObjectRetain(v11, v13);
  if (v7)
  {
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_allocWithZone((Class)SFAuthenticationApproveInfo);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v17 = String._bridgeToObjectiveC()();
  v18 = (uint8_t *)objc_msgSend(v15, "initWithType:idsDeviceID:appName:bundleID:biometricOnly:", v3, v14, v16, v17, v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v18)
  {
    v19 = *(_QWORD **)(v0 + 32);
    sub_10023A834(v19, v19[3]);
    sub_100560418((uint64_t)v19 + *(int *)(v30 + 24), v18);
    v24 = *(_QWORD **)(v0 + 16);
    v23 = *(_QWORD **)(v0 + 24);
    v25 = v1[3];
    v26 = v23[4];
    v27 = sub_10023A834(v23, v25);
    v24[3] = v25;
    v24[4] = *(_QWORD *)(v26 + 8);
    v28 = sub_100244348(v24);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v28, v27, v25);

  }
  else
  {
    v20 = sub_100244304();
    v21 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v20, 0, 0);
    *(_DWORD *)v22 = 10;
    *(_QWORD *)(v22 + 8) = 0xD00000000000001DLL;
    *(_QWORD *)(v22 + 16) = 0x80000001006168C0;
    swift_willThrow(v21);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033D380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB2BC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch(sub_10033D104, 0, 0);
}

uint64_t sub_10033D3F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10033D3FC()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_10033D404(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for Date(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033D464, 0, 0);
}

uint64_t sub_10033D464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD **)(v0 + 64);
  sub_100340E40((uint64_t)v4, v0 + 16);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v6);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v9 = sub_10023A834(v4, v4[3]);
  v10 = Date.init()(v9);
  v11 = Date.timeIntervalSince1970.getter(v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  objc_msgSend(v8, "setSessionStartDate:", v11);

  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = sub_10023A834((_QWORD *)(v0 + 16), v12);
  v5[3] = v12;
  v5[4] = *(_QWORD *)(v13 + 8);
  v15 = sub_100244348(v5);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v15, v14, v12);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033D588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFF4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033D404(a1, a2);
}

uint64_t sub_10033D5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return swift_task_switch(sub_10033D5F8, 0, 0);
}

uint64_t sub_10033D5F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;

  v1 = *(_QWORD **)(v0 + 120);
  sub_100340DB0((uint64_t)v1, v0 + 16);
  v2 = v1[3];
  v3 = v1[5];
  sub_10023A834(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 == 15)
  {
    v6 = sub_100244304();
    v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0, 0);
    *(_DWORD *)v8 = 1;
    *(_QWORD *)(v8 + 8) = 0xD000000000000010;
    *(_QWORD *)(v8 + 16) = 0x8000000100616900;
    swift_willThrow(v7);
  }
  else
  {
    v9 = v4;
    v10 = v5;
    v11 = *(_QWORD **)(v0 + 120);
    v12 = v1[3];
    v13 = v11[4];
    sub_10023A834(v11, v12);
    (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 16))(v12);
    sub_10023A834((_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
    v14 = v1[3];
    v15 = v11[4];
    sub_10023A834(v11, v14);
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
    sub_10022E4A8(v9, v10);
    v17 = v16(v14, v15);
    v19 = v18;
    sub_100524A50(v9, v10);
    sub_100524700(v17, v19);
    v22 = v21;
    v23 = *(_QWORD **)(v0 + 112);
    sub_100225AB4(v17, v19);
    sub_100225AA0(v9, v10);
    v24 = Data.init(referencing:)(v22);
    v26 = v25;

    sub_10022E75C((_QWORD *)(v0 + 72));
    v27 = *(_QWORD *)(v0 + 40);
    v28 = *(_QWORD *)(v0 + 64);
    sub_10026EEE8(v0 + 16, v27);
    v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    isa = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "setAksToken:", isa);

    v31 = *(_QWORD *)(v0 + 40);
    v32 = *(_QWORD *)(v0 + 64);
    v33 = sub_10023A834((_QWORD *)(v0 + 16), v31);
    v23[3] = v31;
    v23[4] = *(_QWORD *)(v32 + 8);
    v34 = sub_100244348(v23);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v34, v33, v31);
    sub_100225AB4(v24, v26);
    sub_100225AA0(v9, v10);
  }
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033D8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB2CC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[14] = a1;
  v5[15] = a2;
  return swift_task_switch(sub_10033D5F8, 0, 0);
}

uint64_t sub_10033D93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_100340E8C, 0, 0);
}

uint64_t sub_10033D958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB014);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_100340E8C, 0, 0);
}

uint64_t sub_10033D9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_10033D9E4, 0, 0);
}

uint64_t sub_10033D9E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v1 = *(_QWORD **)(v0 + 112);
  sub_100340E40((uint64_t)v1, v0 + 16);
  v2 = sub_10023A834(v1, v1[3]);
  v3 = (_QWORD *)((char *)v2 + *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0) + 36));
  v4 = v3[1];
  if (v4 >> 60 == 15)
  {
    v5 = sub_100244304();
    v6 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v5, 0, 0);
    *(_DWORD *)v7 = 1;
    *(_QWORD *)(v7 + 8) = 0xD000000000000012;
    *(_QWORD *)(v7 + 16) = 0x8000000100616880;
    swift_willThrow(v6);
  }
  else
  {
    v8 = *v3;
    v9 = *(_QWORD **)(v0 + 112);
    v10 = v1[3];
    v11 = v9[4];
    sub_10023A834(v9, v10);
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 16);
    sub_10022E4A8(v8, v4);
    v13(v10, v12);
    sub_10023A834((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
    sub_10022E4A8(v8, v4);
    sub_100524A50(v8, v4);
    sub_100524700(0, 0xF000000000000000);
    v16 = v15;
    v17 = *(_QWORD **)(v0 + 104);
    sub_100225AA0(v8, v4);
    v18 = Data.init(referencing:)(v16);
    v20 = v19;

    sub_10022E75C((_QWORD *)(v0 + 64));
    v21 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v0 + 56);
    sub_10026EEE8(v0 + 16, v21);
    v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    isa = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "setAksToken:", isa);

    v25 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 56);
    v27 = sub_10023A834((_QWORD *)(v0 + 16), v25);
    v17[3] = v25;
    v17[4] = *(_QWORD *)(v26 + 8);
    v28 = sub_100244348(v17);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v28, v27, v25);
    sub_100225AB4(v18, v20);
    sub_100225AA0(v8, v4);
  }
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033DC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFFC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[13] = a1;
  v5[14] = a2;
  return swift_task_switch(sub_10033D9E4, 0, 0);
}

uint64_t sub_10033DCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return swift_task_switch(sub_10033DCEC, 0, 0);
}

uint64_t sub_10033DCEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD **)(v0 + 120);
  sub_100340DB0((uint64_t)v1, v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 != 15)
  {
    v9 = v4;
    v10 = v5;
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v11 = type metadata accessor for Logger(0);
    sub_100221DF8(v11, (uint64_t)qword_1007BAC80);
    sub_100244404(v9, v10);
    v12 = v10 >> 62;
    v13 = sub_10022E4A8(v9, v10);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v23 = v22;
      *(_DWORD *)v16 = 136315138;
      sub_10022E4A8(v9, v10);
      v17 = Data.description.getter(v9, v10);
      v19 = v18;
      sub_100225AA0(v9, v10);
      v20 = v17;
      v12 = v10 >> 62;
      *(_QWORD *)(v0 + 72) = sub_100228BD8(v20, (unint64_t)v19, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v16 + 4);
      swift_bridgeObjectRelease(v19);
      sub_100225AA0(v9, v10);
      sub_100225AA0(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Starting MacApprovePhone AKS session with acmToken: %s", v16, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      sub_100225AA0(v9, v10);
      sub_100225AA0(v9, v10);
    }

    __asm { BR              X10 }
  }
  v6 = sub_100244304();
  v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0, 0);
  *(_DWORD *)v8 = 30;
  *(_QWORD *)(v8 + 8) = 0xD000000000000019;
  *(_QWORD *)(v8 + 16) = 0x80000001006168E0;
  swift_willThrow(v7);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB2C4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[14] = a1;
  v5[15] = a2;
  return swift_task_switch(sub_10033DCEC, 0, 0);
}

uint64_t sub_10033E268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_10033E280, 0, 0);
}

uint64_t sub_10033E280()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v1 = *(_QWORD **)(v0 + 112);
  sub_100340E40((uint64_t)v1, v0 + 16);
  v3 = v1[3];
  v2 = v1[4];
  sub_10023A834(v1, v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 16))(v3);
  sub_10023A834((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
  v4 = v1[3];
  v5 = v1[4];
  sub_10023A834(v1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v8 = v7;
  sub_100524A50(0, 0xF000000000000000);
  sub_100524700(v6, v8);
  v11 = v10;
  v12 = *(_QWORD **)(v0 + 104);
  sub_100225AB4(v6, v8);
  v13 = Data.init(referencing:)(v11);
  v15 = v14;

  sub_10022E75C((_QWORD *)(v0 + 64));
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "setAksToken:", isa);

  v20 = *(_QWORD *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 56);
  v22 = sub_10023A834((_QWORD *)(v0 + 16), v20);
  v12[3] = v20;
  v12[4] = *(_QWORD *)(v21 + 8);
  v23 = sub_100244348(v12);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
  sub_100225AB4(v13, v15);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E46C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB364);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[13] = a1;
  v5[14] = a2;
  return swift_task_switch(sub_10033E280, 0, 0);
}

uint64_t sub_10033E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return swift_task_switch(sub_10033E4E8, 0, 0);
}

uint64_t sub_10033E4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Class isa;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 200);
  sub_100340E40(v1, v0 + 16);
  sub_100340E40(v1, v0 + 64);
  v2 = sub_100008384(&qword_1007BB2E0);
  v3 = sub_100008384(&qword_1007BB2E8);
  if ((swift_dynamicCast(v0 + 152, v0 + 64, v2, v3, 6) & 1) != 0)
  {
    sub_10026EE60((__int128 *)(v0 + 152), v0 + 112);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    sub_10023A834((_QWORD *)(v0 + 112), v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    v8 = v7;
    sub_10022E75C((_QWORD *)(v0 + 112));
  }
  else
  {
    *(_QWORD *)(v0 + 184) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    sub_10000D0F0(v0 + 152, &qword_1007BB2F0);
    v6 = 0;
    v8 = 0xF000000000000000;
  }
  v9 = *(_QWORD **)(v0 + 200);
  v10 = v9[3];
  v11 = v9[4];
  sub_10023A834(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_10023A834((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
  sub_100524700(v6, v8);
  v13 = v12;
  v14 = *(_QWORD **)(v0 + 192);
  sub_10022E75C((_QWORD *)(v0 + 64));
  v15 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v15);
  v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  v18 = Data.init(referencing:)(v13);
  v20 = v19;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(v18, v20);
  objc_msgSend(v17, "setAksToken:", isa);

  v22 = *(_QWORD *)(v0 + 40);
  v23 = *(_QWORD *)(v0 + 48);
  v24 = sub_10023A834((_QWORD *)(v0 + 16), v22);
  v14[3] = v22;
  v14[4] = *(_QWORD *)(v23 + 8);
  v25 = sub_100244348(v14);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v25, v24, v22);
  sub_100225AA0(v6, v8);

  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB2DC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[24] = a1;
  v5[25] = a2;
  return swift_task_switch(sub_10033E4E8, 0, 0);
}

uint64_t sub_10033E7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch(sub_10033E7C0, 0, 0);
}

uint64_t sub_10033E7C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  sub_100340E40(*(_QWORD *)(v0 + 72), v0 + 16);
  v1 = sub_100340AF0();
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD **)(v0 + 64);
  sub_10026EEE8(v0 + 16, v4);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v4, v6);
  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "setRangingToken:", isa);

  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v9);
  v11 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
  sub_10022E4A8(v1, v3);
  v11(v1, v3, v9, v10);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = sub_10023A834((_QWORD *)(v0 + 16), v12);
  v5[3] = v12;
  v5[4] = *(_QWORD *)(v13 + 8);
  v15 = sub_100244348(v5);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v15, v14, v12);
  sub_100225AB4(v1, v3);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[8] = a1;
  v5[9] = a2;
  return swift_task_switch(sub_10033E7C0, 0, 0);
}

uint64_t sub_10033E98C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for Date(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033EA10, 0, 0);
}

uint64_t sub_10033EA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;

  v2 = (uint64_t *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD **)(v0 + 72);
  sub_100340E40((uint64_t)v4, v0 + 16);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 56);
  sub_10026EEE8(v0 + 16, v5);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  v8 = v4[3];
  v9 = v4[4];
  sub_10023A834(v4, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v24);
  if ((_DWORD)v10 == 1)
  {
    v2 = (uint64_t *)(v0 + 96);
    v11 = sub_10000D0F0(*(_QWORD *)(v0 + 104), &qword_1007C4330);
    v10 = static Date.distantFuture.getter(v11);
  }
  v12 = *v2;
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD **)(v0 + 64);
  v18 = Date.timeIntervalSince1970.getter(v10);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
  objc_msgSend(v7, "setUnlockDate:", v18);

  v19 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 48);
  v21 = sub_10023A834((_QWORD *)(v0 + 16), v19);
  v17[3] = v19;
  v17[4] = *(_QWORD *)(v20 + 8);
  v22 = sub_100244348(v17);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v21, v19);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033EBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFCC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033E98C(a1, a2);
}

uint64_t sub_10033EC00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100008384(&qword_1007C4330);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v2[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[13] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v6);
  v2[15] = swift_task_alloc(v6);
  return swift_task_switch(sub_10033EC94, 0, 0);
}

uint64_t sub_10033EC94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, __n128);
  uint64_t v48;

  v1 = v0[12];
  v2 = v0[13];
  v3 = (_QWORD *)v0[10];
  v4 = v0[11];
  sub_100340E40((uint64_t)v3, (uint64_t)(v0 + 2));
  v5 = v3[3];
  v6 = v3[4];
  sub_10023A834(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  v8 = v0[15];
  v9 = v0[11];
  if (v7 == 1)
  {
    v10 = v0[14];
    sub_10000D0F0(v0[11], &qword_1007C4330);
    v11 = sub_100244304();
    v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v11, 0, 0);
    *(_DWORD *)v13 = 11;
    *(_QWORD *)(v13 + 8) = 0xD00000000000002ELL;
    *(_QWORD *)(v13 + 16) = 0x8000000100616850;
    swift_willThrow(v12);
    sub_10022E75C(v0 + 2);
    swift_task_dealloc(v8);
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    v14 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 32))(v0[15], v0[11], v0[12]);
    if (qword_1007B3F38 != -1)
      swift_once(&qword_1007B3F38, sub_100339288);
    v16 = v0[14];
    v15 = v0[15];
    v17 = v0[12];
    v18 = v0[13];
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007BAC80);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    v23 = os_log_type_enabled(v21, v22);
    v25 = v0[13];
    v24 = v0[14];
    v26 = v0[12];
    if (v23)
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v48 = v46;
      *(_DWORD *)v27 = 136315138;
      v28 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v26, v28);
      v31 = (const char *)v30;
      v0[8] = sub_100228BD8(v29, v30, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9, v27 + 4);
      v32 = swift_bridgeObjectRelease(v31);
      v47 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      v47(v24, v26, v32);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Registration success date: %s", v27, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      v47 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      ((void (*)(_QWORD, _QWORD))v47)(v0[14], v0[12]);
    }

    v33 = v0[14];
    v34 = v0[15];
    v35 = v0[11];
    v36 = v0[12];
    v37 = (_QWORD *)v0[9];
    v38 = v0[5];
    v39 = v0[7];
    sub_10026EEE8((uint64_t)(v0 + 2), v38);
    v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    objc_msgSend(v40, "setUnlockDate:", Date.timeIntervalSince1970.getter(v40));

    v41 = v0[5];
    v42 = v0[6];
    v43 = sub_10023A834(v0 + 2, v41);
    v37[3] = v41;
    v37[4] = *(_QWORD *)(v42 + 8);
    v44 = sub_100244348(v37);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v44, v43, v41);
    ((void (*)(uint64_t, uint64_t))v47)(v34, v36);
    sub_10022E75C(v0 + 2);
    swift_task_dealloc(v34);
    swift_task_dealloc(v33);
    swift_task_dealloc(v35);
    v14 = (uint64_t (*)(void))v0[1];
  }
  return v14();
}

uint64_t sub_10033F058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BAFEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_10033EC00(a1, a2);
}

uint64_t sub_10033F0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10033F0CC, 0, 0);
}

uint64_t sub_10033F0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t *v34;

  v1 = *(_QWORD *)(v0 + 96);
  sub_100244418(*(_QWORD *)(v0 + 88), v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v2);
  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  objc_msgSend(v4, "setVersion:", 1);

  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v5);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  UUID.uuidString.getter(v8);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSessionID:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v12);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  if (HIDWORD(*(_QWORD *)(v1 + *(int *)(v8 + 28))))
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  v15 = v14;
  v16 = v0 + 56;
  objc_msgSend(v14, "setType:");

  if (qword_1007B3F38 != -1)
    swift_once(&qword_1007B3F38, sub_100339288);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100221DF8(v17, (uint64_t)qword_1007BAC80);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v21 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33, 0);
    v23 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v0 + 48);
    sub_10026EEE8(v0 + 16, v23);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 24);
    v25 = v22;
    v16 = v0 + 56;
    v26 = v24(v23, v25);
    swift_endAccess(v0 + 56);
    *(_QWORD *)(v0 + 56) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v21 + 4);
    *v34 = v26;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Sending %@", v21, 0xCu);
    v27 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v34, 1, v27);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  v28 = *(_QWORD **)(v0 + 80);

  swift_beginAccess(v0 + 16, v16, 0, 0);
  v29 = *(_QWORD *)(v0 + 40);
  v30 = *(_QWORD *)(v0 + 48);
  v31 = sub_10023A834((_QWORD *)(v0 + 16), v29);
  v28[3] = v29;
  v28[4] = *(_QWORD *)(v30 + 8);
  v32 = sub_100244348(v28);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v32, v31, v29);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033F450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BAFDC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10033F0CC, 0, 0);
}

uint64_t sub_10033F4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_100340E90, 0, 0);
}

uint64_t sub_10033F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB2D4);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_100340E90, 0, 0);
}

uint64_t sub_10033F554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10033F570, 0, 0);
}

uint64_t sub_10033F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v26;

  sub_100244418(*(_QWORD *)(v0 + 88), v0 + 16);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  objc_msgSend(v3, "setVersion:", 1);

  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v7 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setSessionID:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (qword_1007B3F38 != -1)
    swift_once(&qword_1007B3F38, sub_100339288);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007BAC80);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33, 0);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    sub_10026EEE8(v0 + 16, v16);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    swift_endAccess(v0 + 56);
    *(_QWORD *)(v0 + 56) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v15 + 4);
    *v26 = v18;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Sending %@", v15, 0xCu);
    v19 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v26, 1, v19);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  v20 = *(_QWORD **)(v0 + 80);

  swift_beginAccess(v0 + 16, v0 + 56, 0, 0);
  v21 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 48);
  v23 = sub_10023A834((_QWORD *)(v0 + 16), v21);
  v20[3] = v21;
  v20[4] = *(_QWORD *)(v22 + 8);
  v24 = sub_100244348(v20);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v23, v21);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033F83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB2FC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10033F570, 0, 0);
}

uint64_t sub_10033F8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10033F8CC, 0, 0);
}

uint64_t sub_10033F8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t *v29;

  sub_100244418(*(_QWORD *)(v0 + 88), v0 + 16);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  objc_msgSend(v3, "setVersion:", 1);

  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v7 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setSessionID:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  sub_10026EEE8(v0 + 16, v11);
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  objc_msgSend(v13, "setSuccess:", 1);

  if (qword_1007B3F38 != -1)
    swift_once(&qword_1007B3F38, sub_100339288);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100221DF8(v14, (uint64_t)qword_1007BAC80);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v18 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33, 0);
    v19 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 48);
    sub_10026EEE8(v0 + 16, v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    swift_endAccess(v0 + 56);
    *(_QWORD *)(v0 + 56) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v18 + 4);
    *v29 = v21;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Sending %@", v18, 0xCu);
    v22 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v29, 1, v22);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  v23 = *(_QWORD **)(v0 + 80);

  swift_beginAccess(v0 + 16, v0 + 56, 0, 0);
  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 48);
  v26 = sub_10023A834((_QWORD *)(v0 + 16), v24);
  v23[3] = v24;
  v23[4] = *(_QWORD *)(v25 + 8);
  v27 = sub_100244348(v23);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v27, v26, v24);
  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033FBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB30C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10033F8CC, 0, 0);
}

uint64_t sub_10033FC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_10033FC60, 0, 0);
}

uint64_t sub_10033FC60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3) & 1) != 0)
  {
    v4 = *(_QWORD **)(v0 + 16);
    v5 = v1[3];
    v6 = v1[4];
    v7 = sub_10023A834(*(_QWORD **)(v0 + 24), v5);
    v4[3] = v5;
    v4[4] = *(_QWORD *)(v6 + 8);
    v8 = sub_100244348(v4);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v7, v5);
  }
  else
  {
    v9 = sub_100244304();
    v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0, 0);
    *(_DWORD *)v11 = 10;
    *(_QWORD *)(v11 + 8) = 0xD000000000000037;
    *(_QWORD *)(v11 + 16) = 0x80000001006169B0;
    swift_willThrow(v10);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1007BB32C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_10033FC60, 0, 0);
}

uint64_t sub_10033FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch(sub_10033FDD4, 0, 0);
}

uint64_t sub_10033FDD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[3];
  v3 = v1[4];
  sub_10023A834(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1005250BC();
  v5 = *(_QWORD **)(v0 + 56);
  v4 = *(_QWORD **)(v0 + 64);
  sub_10022E75C((_QWORD *)(v0 + 16));
  v6 = v1[3];
  v7 = v1[4];
  v8 = sub_10023A834(v4, v6);
  v5[3] = v6;
  v5[4] = *(_QWORD *)(v7 + 8);
  v9 = sub_100244348(v5);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v8, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033FEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  v4 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  v3[29] = v4;
  v3[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v3[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10033FF3C, 0, 0);
}

uint64_t sub_10033FF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 216);
  sub_100244418(v1, *(_QWORD *)(v0 + 208));
  sub_100244418(v1, v0 + 56);
  v2 = sub_100008384(&qword_1007B5D70);
  v3 = sub_100008384(&qword_1007BB318);
  if ((swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD **)(v0 + 208);
    v8 = sub_10026EE60((__int128 *)(v0 + 96), v0 + 16);
    Date.init()(v8);
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    sub_10026EEE8(v0 + 16, v10);
    v12 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v0 + 176, v10, v11);
    sub_1002D4998(v5, v13 + *(int *)(v6 + 20));
    v12(v0 + 176, 0);
    v14 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD *)(v0 + 48);
    sub_10023A834((_QWORD *)(v0 + 16), v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    type metadata accessor for SDAuthenticationCommonOperationInput(0);
    sub_100522C80();
    sub_1002443C8(v4, type metadata accessor for SDAuthenticationSessionMetrics);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = sub_10023A834((_QWORD *)(v0 + 16), v16);
    *(_QWORD *)(v0 + 160) = v16;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v17 + 8);
    v19 = sub_100244348((_QWORD *)(v0 + 136));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v19, v18, v16);
    sub_10022E75C(v7);
    sub_10026EE60((__int128 *)(v0 + 136), (uint64_t)v7);
    sub_10022E75C((_QWORD *)(v0 + 16));
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_10000D0F0(v0 + 96, &qword_1007BB320);
  }
  v20 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1007BB314);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D12C;
  return sub_10033FEB8(a1, a2, a3);
}

id sub_1003401C4()
{
  id *v0;

  return objc_msgSend(*v0, "hasErrorCode");
}

id sub_1003401E4()
{
  id *v0;

  return objc_msgSend(*v0, "errorCode");
}

uint64_t sub_1003401F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v14);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = a3[6];
    v10 = v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[8];
    *(_QWORD *)(v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(_BYTE *)(v4 + v13) = *((_BYTE *)a2 + v13);
  }
  return v4;
}

uint64_t sub_1003402D8(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  sub_10022E75C(a1);
  sub_10022E75C(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100340324(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

_QWORD *sub_1003403D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_10023D490(a1, a2);
  sub_10023D490(a1 + 5, a2 + 5);
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100340460(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_100340500(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_10022E75C((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_10022E75C((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_1003405AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003405B8);
}

uint64_t sub_1003405B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100340634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100340640);
}

uint64_t sub_100340640(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationCommonOperationInput(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BACF0;
  if (!qword_1007BACF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationCommonOperationInput);
  return result;
}

uint64_t sub_1003406F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_1005D2F80;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *destroy for SDAuthenticationApproveResult(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if (v1 >> 60 != 15)
    return (uint64_t *)sub_100225AB4(*result, v1);
  return result;
}

uint64_t _s16DaemoniOSLibrary29SDAuthenticationApproveResultVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_10022E4A8(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  return a1;
}

uint64_t assignWithCopy for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *(_QWORD *)a1;
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v4;
      sub_100225AB4(v7, v8);
      goto LABEL_8;
    }
    sub_10023D5F8(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)a2;
  sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
LABEL_8:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithTake for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      v6 = *(_QWORD *)a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      sub_100225AB4(v6, v4);
      goto LABEL_6;
    }
    sub_10023D5F8(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationApproveResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAuthenticationApproveResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationApproveResult()
{
  return &type metadata for SDAuthenticationApproveResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendApprovePromptMessage()
{
  return &type metadata for SDAuthentication.Operation.SendApprovePromptMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeApproveMetadataInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeApproveMetadataInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckACMTokenExists()
{
  return &type metadata for SDAuthentication.Operation.CheckACMTokenExists;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeSessionStartDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckEnabledWithPeer()
{
  return &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendRequestMessage()
{
  return &type metadata for SDAuthentication.Operation.SendRequestMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeRangingTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeRangingTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastUnlockDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastUnlockDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeAWDLInfoInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeAWDLInfoInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLocalSecurityPolicy()
{
  return &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteDevice()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported()
{
  return &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckWatchIsNearby()
{
  return &type metadata for SDAuthentication.Operation.CheckWatchIsNearby;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsWiFiEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsBluetoothEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
}

uint64_t sub_100340AE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D1F90(a1, *(char **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_100340AF0()
{
  uint64_t v0;
  Swift::String v1;
  const char *object;
  Swift::String v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = static Array._allocateBufferUninitialized(minimumCapacity:)(64, &type metadata for Int8);
  *(_QWORD *)(v0 + 16) = 64;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  if (SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v0 + 32)))
  {
    swift_bridgeObjectRelease((const char *)v0);
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    object = (const char *)v1._object;
    String.append(_:)(v1);
    swift_bridgeObjectRelease(object);
    v3._countAndFlagsBits = 41;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v4 = sub_100244304();
    v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0, 0);
    *(_DWORD *)v6 = 10;
    *(_QWORD *)(v6 + 8) = 0xD000000000000027;
    *(_QWORD *)(v6 + 16) = 0x8000000100616820;
    return swift_willThrow(v5);
  }
  else
  {
    v8 = sub_1003EE318((_BYTE *)(v0 + 32), 64);
    swift_bridgeObjectRelease((const char *)v0);
    return v8;
  }
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsInitiator()
{
  return &type metadata for SDAuthentication.Operation.RangeAsInitiator;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordAWDLBringUpStart()
{
  return &type metadata for SDAuthentication.Operation.RecordAWDLBringUpStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsResponder()
{
  return &type metadata for SDAuthentication.Operation.RangeAsResponder;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConfirmAKSSession()
{
  return &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLockRegisteredAndArmed()
{
  return &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeStart()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordDiscoveryEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteUnlockDate()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordSessionStart()
{
  return &type metadata for SDAuthentication.Operation.RecordSessionStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.HandleSucceededResult()
{
  return &type metadata for SDAuthentication.Operation.HandleSucceededResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.FinishSession()
{
  return &type metadata for SDAuthentication.Operation.FinishSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendConfirmation()
{
  return &type metadata for SDAuthentication.Operation.SendConfirmation;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConsumeAKSToken()
{
  return &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendTokenMessage()
{
  return &type metadata for SDAuthentication.Operation.SendTokenMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeNextAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendResponseMessage()
{
  return &type metadata for SDAuthentication.Operation.SendResponseMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RequestUserApproval()
{
  return &type metadata for SDAuthentication.Operation.RequestUserApproval;
}

ValueMetadata *type metadata accessor for SDAuthentication()
{
  return &type metadata for SDAuthentication;
}

uint64_t sub_100340DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  v4 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100340DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100340E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100340E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BB398);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB398);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100340F24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = type metadata accessor for URL(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034101C, static AirDropActor.shared, 0);
}

uint64_t sub_10034101C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  id v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  Swift::Bool v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;

  v2 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v3, v2, v5, v8);
  v11 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  v12 = *(_QWORD *)(v1 + 112);
  if (!v7)
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 112));
    goto LABEL_6;
  }
  v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = swift_bridgeObjectRelease((const char *)v13);
  (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
  if (v14)
  {
LABEL_6:
    v19 = 0;
    goto LABEL_7;
  }
  v16 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v17 = objc_msgSend(v16, "URLForUbiquityContainerIdentifier:", BRUbiquitousDefaultContainerID);

  if (v17)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  v26 = *(_QWORD *)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 104);
  v27 = *(_QWORD *)(v1 + 56);
  v19 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 72) + 56))(v25, v18, 1, *(_QWORD *)(v1 + 64));
  sub_1003417A8(v25, v26);
  v28 = v27 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  swift_beginAccess(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder, v1 + 16, 33, 0);
  sub_1003417F0(v26, v28);
  v29 = swift_endAccess(v1 + 16);
  if ((SFFilesAppAvailable(v29) & 1) == 0)
  {
    if (qword_1007B3F40 != -1)
      swift_once(&qword_1007B3F40, sub_100340E94);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100221DF8(v30, (uint64_t)qword_1007BB398);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Files App not available", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }
    v35 = *(_QWORD *)(v1 + 88);
    v36 = *(_QWORD *)(v1 + 64);
    v37 = *(_QWORD *)(v1 + 72);

    sub_100330F1C(v28, v35);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      v38 = sub_10000D0F0(*(_QWORD *)(v1 + 88), (uint64_t *)&unk_1007B5200);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "iCloud drive not enabled or accessible.", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }

      goto LABEL_6;
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 32))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 64));
    v42 = URL.checkResourceIsReachable()();
    if (v43)
    {
      swift_errorRetain(v43);
      v44 = swift_errorRetain(v43);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.error.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v50 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v47 = 138412290;
        swift_errorRetain(v43);
        v48 = _swift_stdlib_bridgeErrorToNSError(v43);
        *(_QWORD *)(v1 + 40) = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v47 + 4);
        *v50 = v48;
        swift_errorRelease(v43);
        swift_errorRelease(v43);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "iCloud drive not enabled or accessible. Error: %@", v47, 0xCu);
        v49 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v50, 1, v49);
        swift_slowDealloc(v50, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {

        swift_errorRelease(v43);
        swift_errorRelease(v43);
      }
      swift_errorRelease(v43);
      v19 = 0;
    }
    else
    {
      v19 = v42;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 8))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 64));
  }
LABEL_7:
  v20 = *(_QWORD *)(v1 + 96);
  v21 = *(_QWORD *)(v1 + 104);
  v23 = *(_QWORD *)(v1 + 80);
  v22 = *(_QWORD *)(v1 + 88);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v19 & 1);
}

uint64_t sub_1003414C4()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder, (uint64_t *)&unk_1007B5200);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003414FC()
{
  return type metadata accessor for SDAirDropContentHandleriCloudDrive(0);
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudDrive(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BB3E0;
  if (!qword_1007BB3E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropContentHandleriCloudDrive);
  return result;
}

void sub_100341540(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100239FA8(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_1003415AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriCloudDrive(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  v5 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *a1 = v3;
  return result;
}

uint64_t sub_10034161C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BB3F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_100340F24(a1);
}

uint64_t sub_10034166C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100324988(a1, a2, 1, a3);
}

uint64_t sub_1003416BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_100323EA0(a1, 0, 0, a3);
  return sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007C5DE0);
}

uint64_t sub_1003417A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003417F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100341838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BB4B8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB4B8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003418C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v6);
  v2[9] = swift_task_alloc(v6);
  v7 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v2[13] = static AirDropActor.shared;
  return swift_task_switch(sub_1003419C8, v9, 0);
}

void sub_1003419C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  __n128 v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  NSURL *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSURL *v46;
  void *v47;
  void *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int64_t v59;
  void (*v60)(uint64_t);

  v3 = *(_QWORD *)(v1 + 88);
  v2 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    v14 = 0;
LABEL_5:
    v16 = *(_QWORD *)(v1 + 64);
    v15 = *(_QWORD *)(v1 + 72);
    v18 = *(_QWORD *)(v1 + 32);
    v17 = *(_QWORD *)(v1 + 40);
    swift_task_dealloc(*(_QWORD *)(v1 + 96));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    (*(void (**)(uint64_t))(v1 + 8))(v14);
    return;
  }
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v7);
  sub_100298F1C((uint64_t)v11, v10);
  v12 = swift_bridgeObjectRelease(v11);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48);
  *(_QWORD *)(v1 + 112) = v13;
  if (v13(v10, 1, v8, v12) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v1 + 40), (uint64_t *)&unk_1007B5200);
    goto LABEL_4;
  }
  v19 = *(_QWORD *)(v1 + 72);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = *(_QWORD *)(v1 + 40);
  v22 = *(_QWORD *)(v1 + 24);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 56) + 32);
  *(_QWORD *)(v1 + 120) = v23;
  v23(v19, v21, v20);
  sub_10034281C(v24);
  v25 = *(void **)(v22 + 16);
  *(_QWORD *)(v22 + 16) = v26;

  if (!*(_QWORD *)(v22 + 16))
  {
    v52 = *(_QWORD *)(v1 + 24);
    v53 = type metadata accessor for SDAirDropContentHandlerWebLinks();
    v54 = swift_allocObject(v53, 16, 7);
    v55 = *(_QWORD *)(v52 + 24);
    *(_QWORD *)(v52 + 24) = v54;
    swift_release(v55);
    v56 = *(_QWORD *)(v52 + 24);
    *(_QWORD *)(v1 + 128) = v56;
    if (v56)
    {
      v57 = unk_1007B7C1C;
      v60 = (void (*)(uint64_t))((char *)&dword_1007B7C18 + dword_1007B7C18);
      swift_retain(v56);
      v58 = (_QWORD *)swift_task_alloc(v57);
      *(_QWORD *)(v1 + 136) = v58;
      *v58 = v1;
      v58[1] = sub_100341DCC;
      v60(*(_QWORD *)(v1 + 16));
      return;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 56) + 8))(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 48));
    goto LABEL_4;
  }
  v28 = *(_QWORD *)(v1 + 56);
  v29 = SFAirDropReceive.AskRequest.urlItems.getter(v27);
  v30 = v29;
  v31 = 0;
  v32 = v29 + 56;
  v33 = -1;
  v34 = -1 << *(_BYTE *)(v29 + 32);
  if (-v34 < 64)
    v33 = ~(-1 << -(char)v34);
  v35 = v33 & *(_QWORD *)(v29 + 56);
  v59 = (unint64_t)(63 - v34) >> 6;
  while (1)
  {
    if (v35)
    {
      v36 = __clz(__rbit64(v35));
      v35 &= v35 - 1;
      v37 = v36 | (v31 << 6);
      goto LABEL_26;
    }
    v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v38 >= v59)
      goto LABEL_31;
    v39 = *(_QWORD *)(v32 + 8 * v38);
    ++v31;
    if (!v39)
    {
      v31 = v38 + 1;
      if (v38 + 1 >= v59)
        goto LABEL_31;
      v39 = *(_QWORD *)(v32 + 8 * v31);
      if (!v39)
      {
        v31 = v38 + 2;
        if (v38 + 2 >= v59)
          goto LABEL_31;
        v39 = *(_QWORD *)(v32 + 8 * v31);
        if (!v39)
          break;
      }
    }
LABEL_25:
    v35 = (v39 - 1) & v39;
    v37 = __clz(__rbit64(v39)) + (v31 << 6);
LABEL_26:
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 112);
    v42 = *(_QWORD *)(v1 + 48);
    v43 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16))(v43, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v28 + 72) * v37, v42);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v43, 0, 1, v42);
    if (v41(v43, 1, v42) == 1)
      goto LABEL_32;
    v44 = *(_QWORD *)(v1 + 64);
    v45 = *(_QWORD *)(v1 + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 120))(v44, *(_QWORD *)(v1 + 32), v45);
    URL._bridgeToObjectiveC()(v46);
    v48 = v47;
    v49 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v49(v44, v45);
    LOBYTE(v44) = objc_msgSend(v48, "isiWorkURL");

    if ((v44 & 1) == 0)
    {
      v50 = *(_QWORD *)(v1 + 72);
      v51 = *(_QWORD *)(v1 + 48);
      swift_release(v30);
      v49(v50, v51);
      goto LABEL_4;
    }
  }
  v40 = v38 + 3;
  if (v40 >= v59)
  {
LABEL_31:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v28 + 56))(*(_QWORD *)(v1 + 32), 1, 1, *(_QWORD *)(v1 + 48));
LABEL_32:
    swift_release(v30);
    (*(void (**)(_QWORD, _QWORD))(v28 + 8))(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 48));
    v14 = 1;
    goto LABEL_5;
  }
  v39 = *(_QWORD *)(v32 + 8 * v40);
  if (v39)
  {
    v31 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    v31 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v31 >= v59)
      goto LABEL_31;
    v39 = *(_QWORD *)(v32 + 8 * v31);
    ++v40;
    if (v39)
      goto LABEL_25;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_100341DCC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_BYTE *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100341E2C, v3, 0);
}

void sub_100341E2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSURL *v21;
  void *v22;
  void *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v1 = *(_BYTE *)(v0 + 144);
  v2 = swift_release(*(_QWORD *)(v0 + 128));
  if ((v1 & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    v27 = 0;
LABEL_27:
    v29 = *(_QWORD *)(v0 + 64);
    v28 = *(_QWORD *)(v0 + 72);
    v31 = *(_QWORD *)(v0 + 32);
    v30 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v0 + 8))(v27);
    return;
  }
  v3 = *(_QWORD *)(v0 + 56);
  v4 = SFAirDropReceive.AskRequest.urlItems.getter(v2);
  v5 = v4;
  v6 = 0;
  v7 = v4 + 56;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v4 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & *(_QWORD *)(v4 + 56);
  v32 = (unint64_t)(63 - v9) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_21;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v32)
      goto LABEL_25;
    v14 = *(_QWORD *)(v7 + 8 * v13);
    ++v6;
    if (!v14)
    {
      v6 = v13 + 1;
      if (v13 + 1 >= v32)
        goto LABEL_25;
      v14 = *(_QWORD *)(v7 + 8 * v6);
      if (!v14)
      {
        v6 = v13 + 2;
        if (v13 + 2 >= v32)
          goto LABEL_25;
        v14 = *(_QWORD *)(v7 + 8 * v6);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_21:
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v18, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v3 + 72) * v12, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v17);
    if (v16(v18, 1, v17) == 1)
      goto LABEL_26;
    v19 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 120))(v19, *(_QWORD *)(v0 + 32), v20);
    URL._bridgeToObjectiveC()(v21);
    v23 = v22;
    v24 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v24(v19, v20);
    LOBYTE(v19) = objc_msgSend(v23, "isiWorkURL");

    if ((v19 & 1) == 0)
    {
      v25 = *(_QWORD *)(v0 + 72);
      v26 = *(_QWORD *)(v0 + 48);
      swift_release(v5);
      v24(v25, v26);
      v27 = 0;
      goto LABEL_27;
    }
  }
  v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_25:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 48));
LABEL_26:
    swift_release(v5);
    (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    v27 = 1;
    goto LABEL_27;
  }
  v14 = *(_QWORD *)(v7 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v32)
      goto LABEL_25;
    v14 = *(_QWORD *)(v7 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1003420E4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSURL *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  const char *v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  const char *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  double v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  const char *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE v71[56];

  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + 40);
  if (v11)
  {
    v12 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain(*(const char **)(v2 + 40));
    v14 = SFAirDropReceive.AskRequest.urlItems.getter(v13);
    v15 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRelease((const char *)v14);
    v17 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v16);
    sub_100298F1C((uint64_t)v17, (uint64_t)v6);
    v18 = swift_bridgeObjectRelease(v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v18) == 1)
    {
      sub_10000D0F0((uint64_t)v6, (uint64_t *)&unk_1007B5200);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      URL._bridgeToObjectiveC()(v24);
      v26 = v25;
      v27 = objc_msgSend(v25, "iWorkDocumentName");

      if (v27)
      {
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v30 = v29;

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        if (v15 == 1)
        {
          v69 = 0x545F4E5245444F4DLL;
          v70 = 0xEF524546534E4152;
          swift_bridgeObjectRetain("PHONE_LINK_WITH_NUMBER");
          v31._countAndFlagsBits = 95;
          v31._object = (void *)0xE100000000000000;
          String.append(_:)(v31);
          v32._countAndFlagsBits = 0xD000000000000015;
          v32._object = "PHONE_LINK_WITH_NUMBER";
          String.append(_:)(v32);
          swift_bridgeObjectRelease("PHONE_LINK_WITH_NUMBER");
          if ((a2 & 1) != 0)
          {
            v33._countAndFlagsBits = 0x4C4154495041435FLL;
            v33._object = (void *)0xEC00000044455A49;
            String.append(_:)(v33);
          }
          v34._countAndFlagsBits = 0x545845545FLL;
          v34._object = (void *)0xE500000000000000;
          String.append(_:)(v34);
          v35 = (const char *)v70;
          v36 = sub_100008384(&qword_1007B7608);
          swift_arrayDestroy(&qword_10071C2A8, 1, v36);
          v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v35);
          v39 = (id)SFLocalizedStringForKey(v37, v38);

          if (v39)
          {
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
            v42 = v41;

            v43 = sub_100008384((uint64_t *)&unk_1007B86C0);
            v44 = swift_allocObject(v43, 112, 7);
            *(_OWORD *)(v44 + 16) = xmmword_1005CF250;
            *(_QWORD *)(v44 + 56) = &type metadata for String;
            v45 = sub_100299AB0();
            *(_QWORD *)(v44 + 32) = v12;
            *(_QWORD *)(v44 + 40) = v11;
            *(_QWORD *)(v44 + 96) = &type metadata for String;
            *(_QWORD *)(v44 + 104) = v45;
            *(_QWORD *)(v44 + 64) = v45;
            *(_QWORD *)(v44 + 72) = v28;
            *(_QWORD *)(v44 + 80) = v30;
            static String.localizedStringWithFormat(_:_:)(v40, v42, v44);
            *(_QWORD *)&v46 = swift_bridgeObjectRelease(v42).n128_u64[0];
            swift_bridgeObjectRelease((const char *)v44, v46);
            return;
          }
LABEL_24:
          __break(1u);
          return;
        }
        swift_bridgeObjectRelease(v30);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    v47 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v47, v71);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x494C5F4B524F5749;
    v49 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xEA00000000004B4ELL;
    *(_QWORD *)(inited + 48) = v15;
    v69 = 0x545F4E5245444F4DLL;
    v70 = 0xEF524546534E4152;
    *(_QWORD *)&v50 = swift_bridgeObjectRetain((const char *)0xEA00000000004B4ELL).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v50);
    v51._countAndFlagsBits = 95;
    v51._object = (void *)0xE100000000000000;
    String.append(_:)(v51);
    v52._countAndFlagsBits = 0x494C5F4B524F5749;
    v52._object = (void *)0xEA00000000004B4ELL;
    String.append(_:)(v52);
    swift_bridgeObjectRelease((const char *)0xEA00000000004B4ELL);
    if (v15 > 1)
    {
      v53._countAndFlagsBits = 0x4C4152554C505FLL;
      v53._object = (void *)0xE700000000000000;
      String.append(_:)(v53);
    }
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v54._countAndFlagsBits = 0x4C4154495041435FLL;
      v54._object = (void *)0xEC00000044455A49;
      String.append(_:)(v54);
    }
    v55._countAndFlagsBits = 0x545845545FLL;
    v55._object = (void *)0xE500000000000000;
    String.append(_:)(v55);
    v56 = (const char *)v70;
    swift_setDeallocating(inited);
    v57 = *(_QWORD *)(inited + 16);
    v58 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v49, v57, v58);
    v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v56);
    v61 = (id)SFLocalizedStringForKey(v59, v60);

    if (v61)
    {
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v64 = v63;

      v65 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v66 = swift_allocObject(v65, 112, 7);
      *(_OWORD *)(v66 + 16) = xmmword_1005CF250;
      *(_QWORD *)(v66 + 56) = &type metadata for Int;
      *(_QWORD *)(v66 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v66 + 32) = v15;
      *(_QWORD *)(v66 + 96) = &type metadata for String;
      *(_QWORD *)(v66 + 104) = sub_100299AB0();
      *(_QWORD *)(v66 + 72) = v12;
      *(_QWORD *)(v66 + 80) = v11;
      static String.localizedStringWithFormat(_:_:)(v62, v64, v66);
      *(_QWORD *)&v67 = swift_bridgeObjectRelease(v64).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v66, v67);
      return;
    }
    __break(1u);
    goto LABEL_24;
  }
  if (qword_1007B3F48 != -1)
    swift_once(&qword_1007B3F48, sub_100341838);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100221DF8(v19, (uint64_t)qword_1007BB4B8);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Called localizedDescription on SDAirDropContentHandleriWorkLinks without an appName", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

}

uint64_t sub_100342700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v5 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 24);
  if (v8)
  {
    swift_retain(*(_QWORD *)(v2 + 24));
    sub_100299084(a1, a2);
    return swift_release(v8);
  }
  else
  {
    v10 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = v10;
    sub_100323EA0(a1, v10, 1, a2);

    return sub_10000D0F0((uint64_t)v7, (uint64_t *)&unk_1007C5DE0);
  }
}

void sub_10034281C(NSURL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned int v5;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  const char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  const char *v20;
  id v21;
  id v22;
  id v23;
  unsigned int v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  id v31;

  v2 = v1;
  URL._bridgeToObjectiveC()(a1);
  v4 = v3;
  v5 = objc_msgSend(v3, "isiWorkURL");

  if (v5)
  {
    URL._bridgeToObjectiveC()(v6);
    v8 = v7;
    v9 = objc_msgSend(v7, "iWorkApplicationName");

    if (!v9)
    {
      __break(1u);
      return;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

    v12 = sub_100221E10();
    v13 = StringProtocol.capitalized.getter(&type metadata for String, v12);
    v15 = v14;
    swift_bridgeObjectRelease(v11);
    if (v13 == 0x7365676150 && v15 == (const char *)0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x7365676150, 0xE500000000000000, 0) & 1) != 0)
    {
      v16 = objc_allocWithZone((Class)LSApplicationRecord);
      v17 = 0x6C7070612E6D6F63;
      v18 = 0xEF73656761502E65;
    }
    else
    {
      if (v13 == 0x737265626D754ELL && v15 == (const char *)0xE700000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x737265626D754ELL, 0xE700000000000000, 0) & 1) != 0)
      {
        v19 = objc_allocWithZone((Class)LSApplicationRecord);
        v20 = "com.apple.Numbers";
      }
      else
      {
        if ((v13 != 0x65746F6E79654BLL || v15 != (const char *)0xE700000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x65746F6E79654BLL, 0xE700000000000000, 0) & 1) == 0)
        {
LABEL_16:
          v30 = *(const char **)(v2 + 40);
          *(_QWORD *)(v2 + 32) = v13;
          *(_QWORD *)(v2 + 40) = v15;
          swift_bridgeObjectRelease(v30);
          return;
        }
        v31 = objc_allocWithZone((Class)LSApplicationRecord);
        v20 = "com.apple.Keynote";
      }
      v18 = (unint64_t)(v20 - 32) | 0x8000000000000000;
      v17 = 0xD000000000000011;
    }
    v21 = sub_100528FF4(v17, v18, 1);
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v22, "applicationState");
      v24 = objc_msgSend(v23, "isInstalled");

      if (v24)
      {
        v25 = objc_msgSend(v22, "localizedName", swift_bridgeObjectRelease(v15).n128_f64[0]);
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        v29 = *(const char **)(v2 + 40);
        *(_QWORD *)(v2 + 32) = v26;
        *(_QWORD *)(v2 + 40) = v28;
        swift_bridgeObjectRelease(v29);
        return;
      }

    }
    goto LABEL_16;
  }
}

uint64_t sub_100342D24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SDAirDropContentHandleriWorkLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropContentHandleriWorkLinks);
}

double sub_100342D78@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = type metadata accessor for SDAirDropContentHandleriWorkLinks();
  v3 = swift_allocObject(v2, 48, 7);
  result = 0.0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *a1 = v3;
  return result;
}

uint64_t sub_100342DB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BB4FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003418C8(a1);
}

void sub_100342E00(uint64_t a1, char a2)
{
  sub_1003420E4(a1, a2);
}

uint64_t sub_100342E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100342700(a1, a2);
}

uint64_t sub_100342E40(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100227FB4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100342F88(uint64_t a1)
{
  return sub_100342FD0(a1, &qword_1007BB660, (unint64_t *)&unk_1007BB670, &qword_1007BB668, (uint64_t *)sub_100345D84);
}

uint64_t sub_100342FAC(uint64_t a1)
{
  return sub_100342FD0(a1, (uint64_t *)&unk_1007C0E40, &qword_1007BB6A8, &qword_1007BB6A0, (uint64_t *)sub_100345E30);
}

uint64_t sub_100342FD0(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_100345968(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

void sub_1003431E0(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100227EB4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease((const char *)a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100343324(uint64_t a1)
{
  sub_100343D5C(a1, (uint64_t (*)(void))sub_100228488, &qword_1007B53E8);
}

uint64_t sub_100343338(uint64_t a1)
{
  return sub_100343518(a1, (uint64_t (*)(void))sub_100227A54, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

const char *sub_10034334C(uint64_t a1)
{
  const char **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  const char *result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease((const char *)a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = (uint64_t)*v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = (uint64_t)*v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease((const char *)v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = (uint64_t)*v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = (const char *)v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain((const char *)v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = (const char *)v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = (const char *)sub_100345B70(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((const char *)v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)(((unint64_t)*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)(((unint64_t)*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return (const char *)specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_100343504(uint64_t a1)
{
  return sub_100343518(a1, (uint64_t (*)(void))sub_1002286E4, (uint64_t (*)(_QWORD))&type metadata accessor for SFSecurityScopedURL);
}

uint64_t sub_100343518(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy(v16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

void sub_100343690(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100227A68(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease((const char *)a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_1003437E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100228958(isUniquelyReferenced_nonNull_native, v14, 1, (uint64_t)v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[9 * v8 + 4];
  if (a1 + 32 < v9 + 72 * v2 && v9 < a1 + 32 + 72 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease((const char *)a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100343938(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Data.Iterator(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1003439BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;

  v7 = (_QWORD *)*v2;
  v8 = *(_QWORD *)(*v2 + 16);
  v9 = v8 + BYTE6(v3);
  if (__OFADD__(v8, BYTE6(v3)))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v11 = v7[3] >> 1, v11 < v9))
  {
    if (v8 <= v9)
      v12 = v8 + BYTE6(v3);
    else
      v12 = v8;
    v7 = sub_100227EB4(isUniquelyReferenced_nonNull_native, v12, 1, v7);
    *v2 = v7;
    v11 = v7[3] >> 1;
  }
  v13 = v7[2];
  v14 = v11 - v13;
  v15 = (uint64_t)v7 + v13 + 32;
  sub_10022E4A8(v4, v3);
  v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))Data._copyContents(initializing:))(v1, v15, v14, v4, v3);
  sub_100225AB4(v4, v3);
  sub_100225AB4(v4, v3);
  if (v16 < BYTE6(v3))
    goto LABEL_15;
  if (v16 >= 1)
  {
    v17 = v7[2];
    v18 = __OFADD__(v17, v16);
    v19 = v17 + v16;
    if (v18)
    {
      __break(1u);
      JUMPOUT(0x100343BB4);
    }
    v7[2] = v19;
  }
  if (v16 == v14)
  {
LABEL_16:
    v21 = v7[2];
    v22 = sub_100220D78(&qword_1007BB6B0, (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator, (uint64_t)&protocol conformance descriptor for Data.Iterator);
    dispatch thunk of IteratorProtocol.next()(v0, v22);
    if ((*(_BYTE *)(v6 - 81) & 1) != 0)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
    while (1)
    {
      v23 = v7[3];
      v24 = v23 >> 1;
      if ((uint64_t)(v23 >> 1) >= v21 + 1)
        break;
      v7 = sub_100227EB4((_QWORD *)(v23 > 1), v21 + 1, 1, v7);
      *v2 = v7;
      v25 = *(_BYTE *)(v6 - 81);
      v24 = v7[3] >> 1;
      if ((v25 & 1) == 0)
        goto LABEL_21;
LABEL_18:
      v7[2] = v21;
      if ((v25 & 1) != 0)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
    }
    v25 = 0;
    do
    {
LABEL_21:
      if (v21 >= v24)
        break;
      *((_BYTE *)v7 + v21++ + 32) = *(_BYTE *)(v6 - 82);
      dispatch thunk of IteratorProtocol.next()(v0, v22);
      v25 = *(_BYTE *)(v6 - 81);
    }
    while ((v25 & 1) == 0);
    goto LABEL_18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
}

void sub_100343BCC(uint64_t a1)
{
  sub_100343D5C(a1, (uint64_t (*)(void))sub_100228B9C, (uint64_t *)&unk_1007BB690);
}

void sub_100343BE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1002281F4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_100008384(&qword_1007B5358);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100343D48(uint64_t a1)
{
  sub_100343D5C(a1, (uint64_t (*)(void))sub_100228BC4, (uint64_t *)&unk_1007BB680);
}

void sub_100343D5C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3)
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10)
    goto LABEL_21;
  sub_100008384(a3);
  swift_arrayInitWithCopy(v12);
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v10);
  v16 = v14 + v10;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_16:
    swift_bridgeObjectRelease((const char *)a1);
    *v3 = v5;
    return;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v17 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
}

uint64_t SFAirDropTransfer.init(incomingTransfer:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  char *v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  const char *v76;
  const char *v77;
  NSString v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  NSURL *v82;
  void *v83;
  void *v84;
  NSString v85;
  NSString v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  _QWORD *v92;
  const char *v93;
  Class isa;
  double v95;
  void *v96;
  id v97;
  uint64_t result;
  uint64_t (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  __n128 v107;
  char *v108;
  uint64_t (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSString v122;
  uint64_t v123;
  id v124;
  const char *v125;
  uint64_t v126;
  __n128 v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  int *v149;
  char *v150;
  double v151;
  double v152;
  __n128 v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, char *, uint64_t);
  uint64_t v167;
  char *v168;
  int v169;
  uint64_t v170;
  const char **v171;
  uint64_t v172;
  char *v173;
  const char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  Swift::String v181;
  uint64_t v182;
  const char *v183;
  const char *v184;
  __n128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  const char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  _QWORD v215[2];
  const char *v216;
  unint64_t v217;

  v2 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v206 = *(_QWORD *)(v2 - 8);
  v207 = v2;
  __chkstk_darwin(v2);
  v205 = (char *)&v190 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v199 = *(_QWORD *)(v4 - 8);
  v200 = v4;
  __chkstk_darwin(v4);
  v198 = (char *)&v190 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = type metadata accessor for CodableError(0);
  v191 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v190 = (char *)&v190 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for SFAirDropReceive.Failure(0);
  v194 = *(_QWORD *)(v211 - 8);
  v7 = __chkstk_darwin(v211);
  v193 = (char *)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v209 = (char *)&v190 - v9;
  v210 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v208 = *(_QWORD *)(v210 - 8);
  v10 = __chkstk_darwin(v210);
  v12 = (char *)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v195 = (char *)&v190 - v13;
  v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384((uint64_t *)&unk_1007B5200);
  v19 = __chkstk_darwin(v18);
  v197 = (uint64_t)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v196 = (char *)&v190 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v190 - v23;
  v25 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v190 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100221EDC(0, &qword_1007BB608, SFAirDropTransferMetaData_ptr);
  v202 = v26;
  v203 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, a1, v25);
  v201 = SFAirDropTransferMetaData.init(transfer:)((uint64_t)v28);
  v29 = type metadata accessor for URL(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 56);
  v213 = v24;
  v214 = v29;
  v32 = v31(v24, 1, 1);
  v212 = a1;
  SFAirDropReceive.Transfer.state.getter(v32);
  v33 = (uint64_t *)v17;
  v34 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v35 = sub_100008384(&qword_1007B5280);
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v17, v35);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v211 = 0;
    v38 = 1;
LABEL_3:
    v208 = v38;
LABEL_4:
    v209 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v39 = &v17[*(int *)(sub_100008384(&qword_1007BB658) + 48)];
    v40 = sub_100008384((uint64_t *)&unk_1007BB630);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    v41 = type metadata accessor for SFAirDrop.ContactInfo(0);
LABEL_9:
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v17, v41);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v208 = 1;
    v209 = (char *)_swiftEmptyArrayStorage;
    v211 = 1;
    goto LABEL_19;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v41 = sub_100008384(&qword_1007B5280);
    goto LABEL_9;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.transferring(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v42 = (int *)sub_100008384(&qword_1007BB650);
    v43 = &v17[v42[12]];
    v44 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v17[v42[16] + 8]);
    v45 = &v17[v42[20]];
    v46 = v208;
    v47 = v195;
    v48 = v31;
    v49 = v210;
    v50 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, __n128))(v208 + 32))(v195, v33, v210, v44);
    v51 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v50);
    v52 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v48)(v51, 0, 1, v214);
    sub_1003417A8(v51, v52);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v49);
    v53 = type metadata accessor for SFAirDrop.DeclineAction(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v45, v53);
    v54 = type metadata accessor for SFAirDrop.Progress(0);
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v43, v54);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v209 = (char *)_swiftEmptyArrayStorage;
    v55 = 2;
LABEL_18:
    v208 = v55;
    goto LABEL_19;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.analyzingFullContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v56 = sub_100008384(&qword_1007B5298);
    v209 = *(char **)&v17[*(int *)(v56 + 48)];
    v57 = &v17[*(int *)(v56 + 80)];
    v58 = v31;
    v59 = v208;
    v60 = v195;
    v61 = v210;
    v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v208 + 32))(v195, v17, v210);
    v63 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v62);
    v64 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v58)(v63, 0, 1, v214);
    sub_1003417A8(v63, v64);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    v65 = type metadata accessor for SFAirDrop.DeclineAction(0);
LABEL_17:
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v57, v65);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v55 = 5;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:)
    || (_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v66 = sub_100008384(&qword_1007B5290);
    v209 = *(char **)&v17[*(int *)(v66 + 48)];
    v57 = &v17[*(int *)(v66 + 64)];
    v67 = v31;
    v68 = v208;
    v69 = v195;
    v70 = v210;
    v71 = (*(uint64_t (**)(char *, char *, uint64_t))(v208 + 32))(v195, v17, v210);
    v72 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v71);
    v73 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v67)(v72, 0, 1, v214);
    sub_1003417A8(v72, v73);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    v65 = sub_100008384(&qword_1007B5280);
    goto LABEL_17;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.importing(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v209 = *(char **)&v17[*(int *)(sub_100008384(&qword_1007B5288) + 48)];
    v99 = v31;
    v100 = v208;
    v101 = v195;
    v102 = v210;
    v103 = (*(uint64_t (**)(char *, char *, uint64_t))(v208 + 32))(v195, v17, v210);
    v104 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v103);
    v105 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v99)(v104, 0, 1, v214);
    sub_1003417A8(v104, v105);
    v34 = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v101, v102);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v55 = 6;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v106 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
    v107 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v17[v106[12]]);
    v209 = *(char **)&v17[v106[16]];
    v108 = &v17[v106[20]];
    v109 = v31;
    v110 = v208;
    v111 = v195;
    v112 = v210;
    v113 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v17, v210, v107);
    v114 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v113);
    v115 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v109)(v114, 0, 1, v214);
    sub_1003417A8(v114, v115);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
    v116 = sub_100008384(&qword_1007B5280);
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 8))(v108, v116);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v55 = 7;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v117 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
    v118 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v17[v117[12]]);
    v209 = *(char **)&v17[v117[16]];
    v119 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v12, v17, v210, v118);
    v120 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v119);
    v121 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v31)(v120, 0, 1, v214);
    sub_1003417A8(v120, v121);
    v122 = String._bridgeToObjectiveC()();
    v124 = (id)SFLocalizedStringForKey(v122, v123);

    if (v124)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v124);
      v36 = v125;

    }
    else
    {
      v36 = 0;
    }
    v139 = &v17[v117[20]];
    (*(void (**)(char *, uint64_t))(v208 + 8))(v12, v210);
    v140 = sub_100008384(&qword_1007B5280);
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v140 - 8) + 8))(v139, v140);
    v37 = 0;
    v210 = 0;
    v211 = 1;
    v55 = 7;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.opening(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v126 = sub_100008384((uint64_t *)&unk_1007B5270);
    v127 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v17[*(int *)(v126 + 48)]);
    v209 = *(char **)&v17[*(int *)(v126 + 64)];
    v128 = v31;
    v129 = v208;
    v130 = v195;
    v131 = v210;
    v132 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v17, v210, v127);
    v133 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v132);
    v134 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v128)(v133, 0, 1, v214);
    sub_1003417A8(v133, v134);
    v34 = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v130, v131);
LABEL_38:
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v55 = 8;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
  {
    v135 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v136 = &v17[*(int *)(sub_100008384((uint64_t *)&unk_1007BCFC0) + 48)];
    v211 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v135, 1, 1, v214);
    v137 = &qword_1007B5280;
LABEL_41:
    v138 = sub_100008384(v137);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v136, v138);
LABEL_46:
    v142 = type metadata accessor for SFAirDrop.ContactInfo(0);
    v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v142 - 8) + 8))(v17, v142);
LABEL_47:
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v209 = (char *)_swiftEmptyArrayStorage;
    v55 = 8;
    goto LABEL_18;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.importingReceivedContact(_:))
  {
    v141 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v211 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v141, 1, 1, v214);
    goto LABEL_46;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
  {
    v143 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v136 = &v17[*(int *)(sub_100008384(&qword_1007BB628) + 48)];
    v211 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v143, 1, 1, v214);
    v137 = (uint64_t *)&unk_1007BB630;
    goto LABEL_41;
  }
  v144 = v31;
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:))
  {
    v145 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v146 = (char *)v33 + *(int *)(sub_100008384(&qword_1007BB620) + 48);
    v211 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v145, 1, 1, v214);
    v147 = type metadata accessor for SFAirDrop.ContactRequest(0);
    v148 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v147 - 8) + 8);
    v148(v146, v147);
    v34 = ((uint64_t (*)(uint64_t *, uint64_t))v148)(v33, v147);
    goto LABEL_47;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v149 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
    v150 = (char *)v33 + v149[12];
    *(_QWORD *)&v151 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[16] + 8)).n128_u64[0];
    *(_QWORD *)&v152 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[20]), v151).n128_u64[0];
    v209 = *(char **)((char *)v33 + v149[24]);
    v153 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[28]), v152);
    v154 = v208;
    v155 = v195;
    v156 = v210;
    v157 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v150, v210, v153);
    v158 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v157);
    v159 = (uint64_t)v213;
    sub_100232FE8((uint64_t)v213);
    v211 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v144)(v158, 0, 1, v214);
    sub_1003417A8(v158, v159);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v155, v156);
    v160 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v160 - 8) + 8))(v33, v160);
    goto LABEL_38;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v161 = sub_100008384(&qword_1007B9BB0);
    v162 = v194;
    v163 = v209;
    v164 = v211;
    (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v209, (char *)v33 + *(int *)(v161 + 48), v211);
    v165 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v37 = swift_allocError(v164, v165, 0, 0);
    v166 = *(void (**)(uint64_t, char *, uint64_t))(v162 + 16);
    v166(v167, v163, v164);
    v210 = SFAirDropReceive.Failure.legacyFailureReason.getter();
    v168 = v193;
    v166((uint64_t)v193, v163, v164);
    v169 = (*(uint64_t (**)(char *, uint64_t))(v162 + 88))(v168, v164);
    if (v169 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
    {
      v170 = v194;
      v171 = (const char **)v193;
      v172 = v211;
      (*(void (**)(char *, uint64_t))(v194 + 96))(v193, v211);
      swift_bridgeObjectRelease(v171[1]);
      v173 = (char *)v171 + *(int *)(sub_100008384((uint64_t *)&unk_1007BB610) + 48);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v209, v172);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v173, v214);
      v174 = "Unsupported type";
LABEL_57:
      v36 = (const char *)((unint64_t)(v174 - 32) | 0x8000000000000000);
LABEL_58:
      v211 = 2;
      v175 = 9;
LABEL_74:
      v208 = v175;
LABEL_75:
      v188 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v188 - 8) + 8))(v33, v188);
      goto LABEL_4;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.unexpected(_:))
    {
      v176 = v194;
      v177 = v193;
      (*(void (**)(char *, uint64_t))(v194 + 96))(v193, v211);
      v178 = v191;
      v179 = v190;
      v180 = v192;
      (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v177, v192);
      v216 = 0;
      v217 = 0xE000000000000000;
      v181._countAndFlagsBits = 0x203A64656C696146;
      v181._object = (void *)0xE800000000000000;
      String.append(_:)(v181);
      v182 = CodableError.localizedDescription.getter();
      v184 = v183;
      v215[0] = v182;
      v215[1] = v183;
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v215, &type metadata for String, &protocol witness table for String);
      v185 = swift_bridgeObjectRelease(v184);
      v36 = (const char *)v217;
      (*(void (**)(char *, uint64_t, __n128))(v178 + 8))(v179, v180, v185);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v209, v211);
      v211 = 0;
      v175 = 9;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.declined(_:))
      goto LABEL_69;
    if (v169 == enum case for SFAirDropReceive.Failure.askDismissed(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v36 = (const char *)0xED00006465737369;
      v187 = 3;
      goto LABEL_72;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v36 = (const char *)0xEF64656C65636E61;
      v175 = 3;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
    {
LABEL_69:
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v36 = (const char *)0xE800000000000000;
      v187 = 2;
LABEL_72:
      v211 = v187;
LABEL_73:
      v175 = 8;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v36 = (const char *)0xEB00000000736570;
      goto LABEL_58;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v208 = 9;
      v36 = (const char *)0x8000000100616C20;
      goto LABEL_75;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v36 = (const char *)0x8000000100616C00;
      v175 = 9;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.streamError(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v36 = (const char *)0xEC000000726F7272;
      v175 = 9;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v36 = (const char *)0xEF64656C646E6168;
      goto LABEL_58;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v174 = "Incomplete Transfer";
      goto LABEL_57;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.badRequest(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v36 = (const char *)0xEB00000000747365;
      v175 = 9;
      goto LABEL_74;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v189 = "Move To App Failed, Content In Default";
LABEL_98:
      v36 = (const char *)((unint64_t)(v189 - 32) | 0x8000000000000000);
      goto LABEL_73;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v211 = 0;
      v189 = "Insufficient Space";
      goto LABEL_98;
    }
LABEL_100:
    swift_errorRelease(v37);
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v211, v211);
    __break(1u);
    return result;
  }
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.legacyTransferState(_:))
  {
    v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v211 = 0;
    v38 = *v33;
    goto LABEL_3;
  }
  v208 = 1;
  v209 = (char *)_swiftEmptyArrayStorage;
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.created(_:)
    || (_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:))
  {
    v36 = 0;
    v37 = 0;
    v210 = 0;
    v211 = 0;
    goto LABEL_19;
  }
  v36 = 0;
  v37 = 0;
  v210 = 0;
  v211 = 0;
  if ((_DWORD)v34 != enum case for SFAirDropReceive.Transfer.State.analyizingPreview(_:))
  {
    if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForContactExchangeRequest(_:))
    {
      v186 = (uint64_t)v213;
      sub_100232FE8((uint64_t)v213);
      v211 = 1;
      v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144)(v186, 1, 1, v214);
      goto LABEL_47;
    }
    _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
    __break(1u);
    goto LABEL_100;
  }
LABEL_19:
  v74 = v198;
  v75 = SFAirDropReceive.Transfer.id.getter(v34);
  SFAirDrop.TransferIdentifier.stringValue.getter(v75);
  v77 = v76;
  (*(void (**)(char *, uint64_t))(v199 + 8))(v74, v200);
  v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v77);
  if (v37)
  {
    swift_errorRetain(v37);
    v79 = (void *)_convertErrorToNSError(_:)(v37);
    swift_errorRelease(v37);
  }
  else
  {
    v79 = 0;
  }
  v80 = v197;
  sub_100330F1C((uint64_t)v213, v197);
  v81 = v214;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v80, 1, v214) == 1)
  {
    v83 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v82);
    v83 = v84;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v80, v81);
  }
  v85 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xE700000000000000);
  if (v36)
  {
    v86 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
  }
  else
  {
    v86 = 0;
  }
  v87 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v204));
  v88 = v205;
  v89 = v212;
  v90 = SFAirDropReceive.Transfer.askRequest.getter(v87);
  v91 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v90);
  (*(void (**)(char *, uint64_t))(v206 + 8))(v88, v207);
  v92 = sub_100229040((uint64_t)v91);
  swift_bridgeObjectRelease(v91);
  v216 = v209;
  sub_100343518((uint64_t)v92, (uint64_t (*)(void))sub_100227A54, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
  v93 = v216;
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v95 = swift_bridgeObjectRelease(v93).n128_u64[0];
  v96 = v201;
  v97 = objc_msgSend(v87, "initWithIdentifier:metaData:userResponse:transferState:failureReason:error:customDestinationURL:contentsTitle:contentsDescription:selectedAction:possibleActions:cancelAction:completedURLs:", v78, v201, v211, v208, v210, v79, v95, v83, v85, v86, 0, 0, 0, isa);

  swift_errorRelease(v37);
  (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v89, v203);
  sub_100232FE8((uint64_t)v213);
  return (uint64_t)v97;
}

uint64_t sub_100345754(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003460C4((unint64_t *)&unk_1007BB6E0, &qword_1007BB6D8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100008384(&qword_1007BB6D8);
          v13 = sub_100345DDC(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100221EDC(0, &qword_1007BB6D0, SFDevice_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100345968(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1003460C4(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100008384(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_unknownObjectRetain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_100008384(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100345B70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease((const char *)a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease((const char *)a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003460C4(&qword_1007BB6C8, &qword_1007BB6B8);
        swift_bridgeObjectRetain((const char *)a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100008384(&qword_1007BB6B8);
          v13 = sub_100345E84(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease((const char *)a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100221EDC(0, &qword_1007BB6C0, PHMediaFormatConversionDestination_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100345D84(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100345F04(v6, a2, a3);
  return sub_100345DD8;
}

void (*sub_100345DDC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100345F78(v6, a2, a3);
  return sub_100345DD8;
}

void (*sub_100345E30(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100345FE4(v6, a2, a3);
  return sub_100345DD8;
}

void (*sub_100345E84(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100346050(v6, a2, a3);
  return sub_100345DD8;
}

void sub_100345ED8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t *sub_100345F04(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_100345F70;
  }
  __break(1u);
  return result;
}

uint64_t sub_100345F70(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t (*sub_100345F78(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100346108;
  }
  __break(1u);
  return result;
}

uint64_t *sub_100345FE4(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_100346104;
  }
  __break(1u);
  return result;
}

void (*sub_100346050(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1003460BC;
  }
  __break(1u);
  return result;
}

void sub_1003460BC(id *a1)
{

}

uint64_t sub_1003460C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10021FF9C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10034610C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_100346128(a1, a2, type metadata accessor for SDAirDropDiscoveredEndpoint, a3);
}

uint64_t sub_100346128@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v29 = a4;
  v28 = a3(0);
  v32 = *(_QWORD *)(v28 - 8);
  v8 = __chkstk_darwin(v28);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 56);
  v30 = a2 + 56;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v31 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain((const char *)a2, v28);
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_100244384(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v12, a3);
    sub_100221DB4((uint64_t)v12, (uint64_t)v10, a3);
    v24 = a1(v10);
    if (v4)
    {
      sub_1002443C8((uint64_t)v10, a3);
      return swift_release(a2);
    }
    if ((v24 & 1) != 0)
    {
      swift_release(a2);
      v25 = v29;
      sub_100221DB4((uint64_t)v10, v29, a3);
      v26 = 0;
      v27 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
    result = sub_1002443C8((uint64_t)v10, a3);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v31)
      goto LABEL_28;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        v22 = *(_QWORD *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v31)
              goto LABEL_28;
            v22 = *(_QWORD *)(v30 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v27 = v28;
      v25 = v29;
      swift_release(a2);
      v26 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003463D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BB6F0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB6F0);
  if (qword_1007B3E58 != -1)
    swift_once(&qword_1007B3E58, sub_1002E9E60);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100346464(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint8_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = type metadata accessor for NWEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  swift_bridgeObjectRetain(a2);
  sub_1004FB77C((uint64_t)v12, a1, (uint64_t)a2, (uint64_t)v16);
  sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID, v16, v13);
  v43 = v16;
  *v9 = nw_endpoint_create_application_service("com.apple.AirDrop", v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for NWEndpoint.opaque(_:), v6);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint, v9, v6);
  v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID);
  *v17 = a1;
  v17[1] = (uint64_t)a2;
  swift_bridgeObjectRetain(a2);
  v18 = sub_1004312F0(8, a1, (unint64_t)a2);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease(a2);
  v25 = static String._fromSubstring(_:)(v18, v20, v22, v24);
  v27 = v26;
  swift_bridgeObjectRelease(v24);
  v28 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  *v28 = v25;
  v28[1] = v27;
  if (qword_1007B3F50 != -1)
    swift_once(&qword_1007B3F50, sub_1003463D4);
  v29 = type metadata accessor for Logger(0);
  sub_100221DF8(v29, (uint64_t)qword_1007BB6F0);
  v30 = swift_retain(v3);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v45 = v34;
    *(_DWORD *)v33 = 136315138;
    v42 = v33 + 4;
    v35 = v14;
    v36 = v13;
    v38 = *(_QWORD *)(v3 + 16);
    v37 = *(const char **)(v3 + 24);
    swift_bridgeObjectRetain(v37);
    v39 = v38;
    v13 = v36;
    v14 = v35;
    v44 = sub_100228BD8(v39, (unint64_t)v37, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v42);
    swift_release(v3);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Creating Person %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {

    swift_release(v3);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v43, v13);
  return v3;
}

uint64_t sub_10034685C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  _QWORD v14[3];
  _QWORD v15[3];
  uint64_t v16;
  unint64_t v17;

  v1 = v0;
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16 = 0x286E6F73726550;
  v17 = 0xE700000000000000;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier + 8);
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x6F6A6E6F42202D20;
  v5._object = (void *)0xEC000000203A7275;
  String.append(_:)(v5);
  v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints;
  swift_beginAccess(v6, v15, 0, 0);
  v14[0] = *(_QWORD *)(*(_QWORD *)v6 + 16);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x8000000100616D60;
  v9._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v9);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints, v14, 0, 0);
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return v16;
}

uint64_t sub_1003469FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const char *v13;
  const char *v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  Swift::String v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  const char *v41;
  uint64_t *v42;
  const char *v43;
  double v44;
  uint64_t v45;
  const char *v46;
  const char *v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[24];
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  const char *v69;
  char v70[24];

  v1 = v0;
  v2 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TXTRecord(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10034685C();
  v14 = v13;
  result = NWEndpoint.nw.getter(v59);
  v62 = result;
  if (result)
  {
    v61 = v6;
    v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v70, 0, 0);
    sub_100298F30(*v16, (uint64_t)v12);
    v17 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
    {
      sub_10000D0F0((uint64_t)v12, &qword_1007B7760);
    }
    else
    {
      sub_1002B35A4();
      v19 = v18;
      v21 = v20;
      sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (v21)
      {
        v22 = String.utf8CString.getter(v19, v21);
        swift_bridgeObjectRelease(v21);
        nw_endpoint_set_contact_id(v62, v22 + 32);
        swift_release(v22);
      }
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for SFAirDrop.DeviceRelationship.contact(_:), v2);
    SFAirDrop.TXTRecord.init(deviceRelationship:)(v5);
    SFAirDrop.TXTRecord.addToEndpoint(_:)(v62);
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID);
    v24 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID + 8);
    swift_bridgeObjectRetain(v24);
    v25 = sub_1004312F0(8, v23, (unint64_t)v24);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    swift_bridgeObjectRelease(v24);
    v32 = static String._fromSubstring(_:)(v25, v27, v29, v31);
    v34 = v33;
    swift_bridgeObjectRelease(v31);
    v66 = v32;
    v67 = v34;
    v35._countAndFlagsBits = 58;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    v68 = v66;
    v69 = v67;
    v36 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints, &v66, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v36 + 16))
    {
      v37._countAndFlagsBits = 97;
      v37._object = (void *)0xE100000000000000;
      String.append(_:)(v37);
    }
    v38 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints, v65, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v38 + 16))
    {
      v39._countAndFlagsBits = 98;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
    }
    v60 = v7;
    v40._countAndFlagsBits = 99;
    v40._object = (void *)0xE100000000000000;
    String.append(_:)(v40);
    v41 = v69;
    v42 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
    v43 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier + 8);
    *v42 = v68;
    v42[1] = (uint64_t)v41;
    *(_QWORD *)&v44 = swift_bridgeObjectRetain(v41).n128_u64[0];
    swift_bridgeObjectRelease(v43, v44);
    v45 = sub_10034685C();
    v47 = v46;
    if (qword_1007B3F50 != -1)
      swift_once(&qword_1007B3F50, sub_1003463D4);
    v48 = type metadata accessor for Logger(0);
    sub_100221DF8(v48, (uint64_t)qword_1007BB6F0);
    v50 = v68;
    v49 = v69;
    *(_QWORD *)&v51 = swift_bridgeObjectRetain(v69).n128_u64[0];
    *(_QWORD *)&v52 = swift_bridgeObjectRetain(v14, v51).n128_u64[0];
    swift_bridgeObjectRetain(v47, v52);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.default.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc(32, -1);
      v57 = swift_slowAlloc(96, -1);
      v64 = v57;
      *(_DWORD *)v56 = 136315651;
      v58 = v9;
      swift_bridgeObjectRetain(v49);
      v63 = sub_100228BD8(v50, (unint64_t)v49, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 4);
      swift_bridgeObjectRelease_n(v49, 3);
      *(_WORD *)(v56 + 12) = 2081;
      swift_bridgeObjectRetain(v14);
      v63 = sub_100228BD8(v59, (unint64_t)v14, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 14);
      swift_bridgeObjectRelease_n(v14, 3);
      *(_WORD *)(v56 + 22) = 2081;
      swift_bridgeObjectRetain(v47);
      v63 = sub_100228BD8(v45, (unint64_t)v47, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 24);
      swift_bridgeObjectRelease_n(v47, 3);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "DiscoveredPerson Updated %s [%{private}s] -> [%{private}s]", (uint8_t *)v56, 0x20u);
      swift_arrayDestroy(v57, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v56, -1, -1);

      swift_unknownObjectRelease(v62);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v61);
    }
    else
    {
      swift_bridgeObjectRelease_n(v49, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease_n(v47, 2);

      swift_unknownObjectRelease(v62);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v9, v61);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100346F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint;
  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier
                                      + 8));
  return v0;
}

uint64_t sub_100347050()
{
  uint64_t v0;

  sub_100346F84();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100347074()
{
  return type metadata accessor for SDAirDropDiscoveredPerson(0);
}

uint64_t type metadata accessor for SDAirDropDiscoveredPerson(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BB750;
  if (!qword_1007BB750)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredPerson);
  return result;
}

uint64_t sub_1003470B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  v5[0] = &unk_1005D38C0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for NWEndpoint(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = &unk_1005D38C0;
      v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[7] = &unk_1005D38C0;
      result = swift_updateClassMetadata2(a1, 256, 8, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_100347160@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100347170()
{
  return sub_10034685C();
}

uint64_t sub_100347190@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint, (uint64_t (*)(_QWORD))&type metadata accessor for NWEndpoint, a1);
}

uint64_t sub_1003471A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  const char *v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v29 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v29);
  v28[2] = (char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v28[1] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v33 = *(_QWORD *)(v31 - 8);
  v4 = __chkstk_darwin(v31);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)v28 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)v28 - v10;
  v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v35, 0, 0);
  v13 = *v12;
  v14 = *v12 + 56;
  v15 = 1 << *(_BYTE *)(*v12 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(*v12 + 56);
  v32 = (unint64_t)(v15 + 63) >> 6;
  v34 = v13;
  swift_bridgeObjectRetain_n(v13, 2);
  v18 = 0;
  v19 = 0;
  v30 = v14;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_25;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v22 >= v32)
      goto LABEL_27;
    v23 = *(_QWORD *)(v14 + 8 * v22);
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v32)
        goto LABEL_27;
      v23 = *(_QWORD *)(v14 + 8 * v18);
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v32)
          goto LABEL_27;
        v23 = *(_QWORD *)(v14 + 8 * v18);
        if (!v23)
        {
          v18 = v22 + 3;
          if (v22 + 3 >= v32)
            goto LABEL_27;
          v23 = *(_QWORD *)(v14 + 8 * v18);
          if (!v23)
          {
            v18 = v22 + 4;
            if (v22 + 4 >= v32)
              goto LABEL_27;
            v23 = *(_QWORD *)(v14 + 8 * v18);
            if (!v23)
              break;
          }
        }
      }
    }
LABEL_24:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_25:
    sub_100244384(*(_QWORD *)(v34 + 48) + *(_QWORD *)(v33 + 72) * v21, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4((uint64_t)v11, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v19 & 1) == 0)
    {
      sub_100244384((uint64_t)v9, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v25 = (char *)&loc_10034748C + *((int *)qword_100347580 + swift_getEnumCaseMultiPayload(v6, v31));
      __asm { BR              X9 }
    }
    v19 = 1;
    sub_1002443C8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v24 = v22 + 5;
  if (v24 < v32)
  {
    v23 = *(_QWORD *)(v14 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        v18 = v24 + 1;
        if (__OFADD__(v24, 1))
          break;
        if (v18 >= v32)
          goto LABEL_27;
        v23 = *(_QWORD *)(v14 + 8 * v18);
        ++v24;
        if (v23)
          goto LABEL_24;
      }
LABEL_29:
      __break(1u);
      JUMPOUT(0x100347580);
    }
    v18 = v24;
    goto LABEL_24;
  }
LABEL_27:
  v26 = (const char *)v34;
  swift_release(v34);
  swift_bridgeObjectRelease(v26);
  return v19 & 1;
}

uint64_t sub_100347590(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2[20] = a1;
  v2[21] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v3);
  v2[23] = swift_task_alloc(v3);
  v2[24] = swift_task_alloc(v3);
  v4 = type metadata accessor for UUID(0);
  v2[25] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[26] = v5;
  v2[27] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BB840) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[28] = swift_task_alloc(v6);
  v2[29] = swift_task_alloc(v6);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v2[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[31] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v9);
  v2[33] = swift_task_alloc(v9);
  v2[34] = swift_task_alloc(v9);
  v2[35] = swift_task_alloc(v9);
  v2[36] = swift_task_alloc(v9);
  v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[37] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[38] = swift_task_alloc(v11);
  v2[39] = swift_task_alloc(v11);
  v2[40] = swift_task_alloc(v11);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034772C, static AirDropActor.shared, 0);
}

void sub_10034772C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[40];
  v2 = v0[37];
  sub_100244384(v0[20], v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v3 = (char *)sub_1003477B4 + 4 * byte_1005D3890[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1003477B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint8_t *buf, uint64_t a13, os_log_type_t type, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char **v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char **v102;
  uint64_t v103;
  uint64_t v104[13];

  v98 = v34;
  v100 = v36;
  v94 = v35;
  v96 = v32;
  v39 = *(_QWORD *)(v33 + 288);
  v40 = *(_QWORD *)(v33 + 240);
  v41 = *(_QWORD *)(v33 + 248);
  v42 = *(_QWORD *)(v33 + 232);
  v43 = *(_QWORD *)(v33 + 168);
  sub_100221DB4(*(_QWORD *)(v33 + 320), v39, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v44 = (const char **)(v43 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints);
  swift_beginAccess(v44, v33 + 88, 0, 0);
  v102 = v44;
  v45 = *v44;
  v46 = swift_task_alloc(32);
  *(_QWORD *)(v46 + 16) = v39;
  swift_bridgeObjectRetain(v45);
  sub_100346128((uint64_t (*)(char *))sub_100348AC8, (uint64_t)v45, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, v42);
  swift_bridgeObjectRelease(v45);
  swift_task_dealloc(v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v33 + 232), &qword_1007BB840);
  }
  else
  {
    sub_100221DB4(*(_QWORD *)(v33 + 232), *(_QWORD *)(v33 + 280), type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (qword_1007B3F50 != -1)
      swift_once(&qword_1007B3F50, sub_1003463D4);
    v47 = *(_QWORD *)(v33 + 272);
    v48 = *(_QWORD *)(v33 + 280);
    v49 = type metadata accessor for Logger(0);
    sub_100221DF8(v49, (uint64_t)qword_1007BB6F0);
    v50 = sub_100244384(v48, v47, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter(v51);
    v53 = os_log_type_enabled(v51, v52);
    v54 = *(_QWORD *)(v33 + 272);
    if (v53)
    {
      v55 = *(_QWORD *)(v33 + 216);
      v86 = *(_QWORD *)(v33 + 208);
      v56 = *(_QWORD *)(v33 + 200);
      v92 = v52;
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v90 = swift_slowAlloc(32, -1);
      v104[0] = v90;
      v88 = v57;
      *(_DWORD *)v57 = 136315138;
      v85 = v57 + 4;
      sub_1002B107C();
      v58 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v59 = dispatch thunk of CustomStringConvertible.description.getter(v56, v58);
      v61 = v60;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v55, v56);
      *(_QWORD *)(v33 + 152) = sub_100228BD8(v59, (unint64_t)v61, v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v100, v38, v85);
      swift_bridgeObjectRelease(v61);
      sub_1002443C8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v51, v92, "Removing duplicate/stale endpoint %s", v88, 0xCu);
      swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v90, -1, -1);
      swift_slowDealloc(v88, -1, -1);
    }
    else
    {
      sub_1002443C8(*(_QWORD *)(v33 + 272), type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    }

    v62 = *(_QWORD *)(v33 + 280);
    v63 = *(_QWORD *)(v33 + 224);
    swift_beginAccess(v102, v37, 33, 0);
    sub_100472B48(v62, v63);
    swift_endAccess(v37);
    sub_10000D0F0(v63, &qword_1007BB840);
    sub_1002443C8(v62, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }
  if (qword_1007B3F50 != -1)
    swift_once(&qword_1007B3F50, sub_1003463D4);
  v64 = *(_QWORD *)(v33 + 168);
  v65 = type metadata accessor for Logger(0);
  sub_100221DF8(v65, (uint64_t)qword_1007BB6F0);
  v66 = swift_retain(v64);
  v67 = Logger.logObject.getter(v66);
  v68 = static os_log_type_t.debug.getter();
  v69 = os_log_type_enabled(v67, v68);
  v70 = *(_QWORD *)(v33 + 168);
  if (v69)
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = swift_slowAlloc(32, -1);
    v104[0] = v72;
    *(_DWORD *)v71 = 136315138;
    v73 = *(_QWORD *)(v70 + 16);
    v74 = *(const char **)(v70 + 24);
    swift_bridgeObjectRetain(v74);
    *v94 = sub_100228BD8(v73, (unint64_t)v74, v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v94, v96, v71 + 4);
    swift_bridgeObjectRelease(v74);
    swift_release(v70);
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "Person: %s adding application service endpoint", v71, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);
  }
  else
  {
    swift_release(*(_QWORD *)(v33 + 168));
  }

  v75 = *(_QWORD *)(v33 + 288);
  v76 = *(_QWORD *)(v33 + 256);
  v77 = *(_QWORD *)(v33 + 264);
  sub_100244384(v75, v76, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_beginAccess(v102, v98, 33, 0);
  sub_10045F254(v77, v76);
  swift_endAccess(v98);
  sub_1002443C8(v77, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1002443C8(v75, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v78 = *(_QWORD *)(v33 + 312);
  v79 = *(_QWORD *)(v33 + 320);
  v80 = *(_QWORD *)(v33 + 304);
  v81 = *(_QWORD *)(v33 + 280);
  v82 = *(_QWORD *)(v33 + 288);
  v87 = *(_QWORD *)(v33 + 272);
  v89 = *(_QWORD *)(v33 + 264);
  v91 = *(_QWORD *)(v33 + 256);
  v93 = *(_QWORD *)(v33 + 232);
  v95 = *(_QWORD *)(v33 + 224);
  v97 = *(_QWORD *)(v33 + 216);
  v99 = *(_QWORD *)(v33 + 192);
  v101 = *(_QWORD *)(v33 + 184);
  v83 = *(_QWORD *)(v33 + 168);
  v103 = *(_QWORD *)(v33 + 176);
  sub_100244384(*(_QWORD *)(v33 + 160), v80, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess(v83 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v33 + 16, 33, 0);
  sub_10045DA0C(v78, v80);
  swift_endAccess(v33 + 16);
  sub_1002443C8(v78, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003469FC();
  swift_task_dealloc(v79);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v81);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v97);
  swift_task_dealloc(v99);
  swift_task_dealloc(v101);
  swift_task_dealloc(v103);
  return (*(uint64_t (**)(void))(v33 + 8))();
}

uint64_t sub_100348144()
{
  uint64_t result;
  uint64_t v1;
  uint64_t device_id;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  result = NWEndpoint.nw.getter();
  if (result)
  {
    v1 = result;
    device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v1);
    if (device_id)
    {
      v3 = String.init(cString:)(device_id);
      device_id = v4;
    }
    else
    {
      v3 = 0;
    }
    result = NWEndpoint.nw.getter();
    if (result)
    {
      v5 = result;
      v6 = nw_endpoint_get_device_id();
      swift_unknownObjectRelease(v5);
      if (v6)
      {
        v7 = String.init(cString:)(v6);
        v9 = v8;
        if (device_id)
        {
          if (v8)
          {
            if (v3 == v7 && device_id == v8)
            {
              swift_bridgeObjectRelease(device_id);
              v10 = 1;
            }
            else
            {
              v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, device_id, v7, v8, 0);
              swift_bridgeObjectRelease(device_id);
            }
            goto LABEL_18;
          }
          goto LABEL_13;
        }
        if (v8)
        {
          v10 = 0;
          goto LABEL_18;
        }
      }
      else if (device_id)
      {
LABEL_13:
        v10 = 0;
        v9 = device_id;
LABEL_18:
        swift_bridgeObjectRelease(v9);
        return v10 & 1;
      }
      v10 = 1;
      return v10 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100348268(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[11] = a1;
  v2[12] = v1;
  v3 = sub_100008384(&qword_1007B7760);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007BB838);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007BB840);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[18] = v8;
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003483A0, static AirDropActor.shared, 0);
}

void sub_1003483A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v2 = v0[18];
  v1 = v0[19];
  sub_100244384(v0[11], v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v3 = (char *)sub_10034840C + 4 * byte_1005D3894[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10034840C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_100221DB4(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 136), type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if (qword_1007B3F50 != -1)
    swift_once(&qword_1007B3F50, sub_1003463D4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BB6F0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Person: Removing application service endpoint", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  v8 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 96);

  swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints, v0, 33, 0);
  sub_100472B48(v7, v8);
  swift_endAccess(v0);
  sub_10000D0F0(v8, &qword_1007BB840);
  sub_1002443C8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v10 = *(_QWORD *)(v1 + 152);
  v12 = *(_QWORD *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 136);
  v13 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 112);
  v14 = *(_QWORD *)(v1 + 104);
  v15 = *(_QWORD *)(v1 + 88);
  swift_beginAccess(*(_QWORD *)(v1 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v1 + 16, 33, 0);
  sub_100472B6C(v15, v14);
  swift_endAccess(v1 + 16);
  sub_10000D0F0(v14, &qword_1007B7760);
  sub_1003469FC();
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v17);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100348878()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 24));
  return v1;
}

uint64_t sub_1003488A8()
{
  return sub_1003471A4() & 1;
}

uint64_t sub_1003488CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, a1);
}

uint64_t sub_1003488E0@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t sub_100348924()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034898C, static AirDropActor.shared, 0);
}

uint64_t sub_10034898C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)(**(_QWORD **)(v0 + 40) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_1003489EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BB84C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  return sub_100347590(a1);
}

uint64_t sub_100348A3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BB834);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  return sub_100348268(a1);
}

uint64_t sub_100348A8C(uint64_t a1)
{
  uint64_t result;

  result = sub_100220D78(&qword_1007BB828, type metadata accessor for SDAirDropDiscoveredPerson, (uint64_t)&unk_1005D392C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100348AC8()
{
  return sub_100348144() & 1;
}

void sub_100348AE4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener])
  {
    v2 = v0;
    if (qword_1007B3F58 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007BB850);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting AirDrop Application Service Server", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    type metadata accessor for NWListener(0);
    v8 = sub_100501C2C(0);
    v9 = NWListener.__allocating_init(applicationService:using:)(0xD00000000000001ALL, 0x8000000100616DF0, v8);
    v10 = *(_QWORD *)&v2[v1];
    *(_QWORD *)&v2[v1] = v9;
    swift_retain(v9);
    swift_release(v10);
    v11 = swift_allocObject(&unk_100723420, 32, 7);
    *(_QWORD *)(v11 + 16) = v2;
    *(_QWORD *)(v11 + 24) = v9;
    swift_retain(v9);
    v12 = v2;
    NWListener.stateUpdateHandler.setter(sub_10034A434, v11);
    v13 = swift_allocObject(&unk_100723448, 24, 7);
    *(_QWORD *)(v13 + 16) = v12;
    v14 = v12;
    NWListener.newConnectionHandler.setter(sub_10034A460, v13);
    NWListener.start(queue:)(*(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_queue]);
    swift_release(v9);
  }
}

uint64_t sub_100348D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BB850);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB850);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100348DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;

  v6 = type metadata accessor for NWListener.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject(&unk_100723470, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a2);
  v15 = swift_allocObject(&unk_1007234E8, 24, 7);
  swift_weakInit(v15 + 16, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject(&unk_100723510, v18 + 8, v16 | 7);
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v19[v17], v9, v6);
  *(_QWORD *)&v19[v18] = v15;
  v20 = sub_100252EE0((uint64_t)v12, (uint64_t)&unk_1007BB8F0, (uint64_t)v19);
  return swift_release(v20);
}

uint64_t sub_100348F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch(sub_100348F68, 0, 0);
}

uint64_t sub_100348F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 72) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v4, v0 + 40, 0, 0);
    v5 = swift_weakLoadStrong(v4);
    *(_QWORD *)(v0 + 104) = v5;
    v6 = (_QWORD *)swift_task_alloc(dword_1007BB8FC);
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_1002E7F80;
    return sub_100349034(*(_QWORD *)(v0 + 80), v5);
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100349034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = type metadata accessor for NWError(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v3[15] = swift_task_alloc(v6);
  v7 = type metadata accessor for NWListener.State(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v3[19] = static AirDropActor.shared;
  return swift_task_switch(sub_10034911C, v9, 0);
}

uint64_t sub_10034911C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  const char *v58;
  uint64_t v59;
  uint64_t Strong;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  NSString v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint8_t *buf;
  uint64_t v89;
  uint64_t *v90;

  v90 = (uint64_t *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v2, *(_QWORD *)(v0 + 56), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v5, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1007B3F58 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007BB850);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15 = v14(v10, v9, v12);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    if (v18)
    {
      v89 = *(_QWORD *)(v0 + 88);
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v87 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138412290;
      v23 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v24 = swift_allocError(v21, v23, 0, 0);
      v14(v25, v19, v21);
      v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *v90 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v90, v0 + 56, v22 + 4);
      *v87 = v26;
      v27 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v27(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop Application Service server waiting with error %@", v22, 0xCu);
      v28 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v87, 1, v28);
      swift_slowDealloc(v87, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }
    v27(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 80));
    goto LABEL_43;
  }
  if (v4 == enum case for NWListener.State.failed(_:))
  {
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v29, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1007B3F58 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v33 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 88);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007BB850);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v39 = v38(v33, v34, v35);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v44 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 96);
    v45 = *(_QWORD *)(v0 + 80);
    if (v42)
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      buf = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138412290;
      v47 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v48 = swift_allocError(v45, v47, 0, 0);
      v38(v49, v43, v45);
      v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(_QWORD *)(v0 + 40) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v90, v46 + 4);
      *(_QWORD *)buf = v50;
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop Application Service server failed with error %@", v46, 0xCu);
      v52 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(buf, 1, v52);
      swift_slowDealloc(buf, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    }

    *(_QWORD *)(v0 + 168) = v51;
    if (*(_QWORD *)(v0 + 64))
      NWListener.cancel()();
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate, v59);
    *(_QWORD *)(v0 + 176) = Strong;
    if (Strong)
    {
      v61 = (_QWORD *)swift_task_alloc(dword_1007B9C44);
      *(_QWORD *)(v0 + 184) = v61;
      *v61 = v0;
      v61[1] = sub_100349AE0;
      return sub_1002DBEF0(0, *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    goto LABEL_43;
  }
  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_1007B3F58 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v53 = type metadata accessor for Logger(0);
    v54 = sub_100221DF8(v53, (uint64_t)qword_1007BB850);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter(v55);
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_37;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Application Service server setting up";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1, -1);
LABEL_37:

    goto LABEL_43;
  }
  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_1007B3F58 != -1)
        swift_once(&qword_1007B3F58, sub_100348D1C);
      v75 = type metadata accessor for Logger(0);
      v76 = sub_100221DF8(v75, (uint64_t)qword_1007BB850);
      v77 = Logger.logObject.getter(v76);
      v78 = static os_log_type_t.default.getter(v77);
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Unknown AirDrop server state", v79, 2u);
        swift_slowDealloc(v79, -1, -1);
      }
      v81 = *(_QWORD *)(v0 + 136);
      v80 = *(_QWORD *)(v0 + 144);
      v82 = *(_QWORD *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
      goto LABEL_43;
    }
    if (qword_1007B3F58 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v73 = type metadata accessor for Logger(0);
    v74 = sub_100221DF8(v73, (uint64_t)qword_1007BB850);
    v55 = Logger.logObject.getter(v74);
    v56 = static os_log_type_t.default.getter(v55);
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_37;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Application Service server stopped";
    goto LABEL_36;
  }
  if (qword_1007B3F58 != -1)
    swift_once(&qword_1007B3F58, sub_100348D1C);
  v63 = type metadata accessor for Logger(0);
  v64 = sub_100221DF8(v63, (uint64_t)qword_1007BB850);
  v65 = Logger.logObject.getter(v64);
  v66 = static os_log_type_t.default.getter(v65);
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "AirDrop Application Service server ready", v67, 2u);
    swift_slowDealloc(v67, -1, -1);
  }
  v68 = *(_QWORD *)(v0 + 72);

  v69 = String._bridgeToObjectiveC()();
  v70 = getpid();
  sub_100045388((uint64_t)CFSTR("ApplicationServiceAdvertise"), (uint64_t)CFSTR("Start"), (uint64_t)v69, v70);

  v72 = swift_unknownObjectWeakLoadStrong(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate, v71);
  *(_QWORD *)(v0 + 160) = v72;
  if (v72)
    return swift_task_switch(sub_100349A04, static AirDropActor.shared, 0);
LABEL_43:
  v83 = *(_QWORD *)(v0 + 112);
  v84 = *(_QWORD *)(v0 + 120);
  v86 = *(_QWORD *)(v0 + 96);
  v85 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v84);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100349A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char **v3;
  double v4;
  const char *v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = (const char **)(v2
                     + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
  *(_QWORD *)&v4 = swift_beginAccess(v2+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors, v0 + 16, 1, 0).n128_u64[0];
  v5 = *v3;
  *v3 = (const char *)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v5, v4);
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_100349A80, v1, 0);
}

uint64_t sub_100349A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100349AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100349B40, v2, 0);
}

uint64_t sub_100349B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100349BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_100723470, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  v9 = (_QWORD *)swift_allocObject(&unk_100723498, 48, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  v10 = sub_100252EE0((uint64_t)v6, (uint64_t)&unk_1007BB8D0, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_100349C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100349CB8, 0, 0);
}

uint64_t sub_100349CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    return swift_task_switch(sub_100349D68, static AirDropActor.shared, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100349D68()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  sub_100349DA8(*(_QWORD *)(v0 + 56));

  return swift_task_switch(sub_10028A0E4, 0, 0);
}

uint64_t sub_100349DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1003FF7CC();
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
  swift_beginAccess(v7, v21, 33, 0);
  v8 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a1);
  specialized Array._endMutation()(v11);
  swift_endAccess(v21);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = swift_allocObject(&unk_100723470, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = qword_1007B3D98;
  swift_retain(a1);
  swift_retain(v13);
  if (v14 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v17 = (_QWORD *)swift_allocObject(&unk_1007234C0, 48, 7);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v13;
  v17[5] = a1;
  swift_retain(v15);
  swift_release(v13);
  v18 = sub_100252EE0((uint64_t)v6, (uint64_t)&unk_1007BB8E0, (uint64_t)v17);
  return swift_release(v18);
}

void sub_100349F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener);
  if (v2)
  {
    v3 = v0;
    v4 = qword_1007B3F58;
    swift_retain(v2);
    if (v4 != -1)
      swift_once(&qword_1007B3F58, sub_100348D1C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007BB850);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping AirDrop Application Service Server", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    NWListener.cancel()();
    v10 = String._bridgeToObjectiveC()();
    v11 = getpid();
    sub_100045388((uint64_t)CFSTR("ApplicationServiceAdvertise"), (uint64_t)CFSTR("Stop"), (uint64_t)v10, v11);

    sub_1002E91E8();
    swift_release(v2);
    v12 = *(_QWORD *)(v3 + v1);
    *(_QWORD *)(v3 + v1) = 0;
    swift_release(v12);
  }
}

uint64_t sub_10034A0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v6 = type metadata accessor for SDAirDropServerConnection(0);
  v5[8] = v6;
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v5[10] = static AirDropActor.shared;
  return swift_task_switch(sub_10034A18C, v7, 0);
}

uint64_t sub_10034A18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong
    && (v5 = (void *)Strong,
        v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate, v4), *(_QWORD *)(v0 + 88) = v6, v5, v6))
  {
    v8 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD **)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 56);
    *v7 = v9;
    swift_storeEnumTagMultiPayload(v7, v8, 1);
    v10 = dword_1007B9B5C;
    swift_retain(v9);
    v11 = (_QWORD *)swift_task_alloc(v10);
    *(_QWORD *)(v0 + 96) = v11;
    *v11 = v0;
    v11[1] = sub_10034A278;
    return sub_1002D8598(*(_QWORD *)(v0 + 72));
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 72);
    **(_BYTE **)(v0 + 40) = 1;
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034A278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_unknownObjectRelease(v1);
  sub_1002E9C4C(v3);
  return swift_task_switch(sub_10034A2E8, v2, 0);
}

uint64_t sub_10034A2E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  **(_BYTE **)(v0 + 40) = 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceServer()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer);
}

uint64_t sub_10034A3E4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener));
}

uint64_t sub_10034A3F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType);
}

uint64_t sub_10034A408()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034A434(uint64_t a1)
{
  uint64_t v1;

  return sub_100348DAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10034A43C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034A460(uint64_t a1)
{
  uint64_t v1;

  return sub_100349BB0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10034A468()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034A490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BB8CC);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_100349CB8, 0, 0);
}

uint64_t sub_10034A4FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007BB8DC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_10034A0F8(a1, v4, v5, v7, v6);
}

uint64_t sub_10034A574()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034A598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for NWListener.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10034A630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for NWListener.State(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1007BB8EC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return swift_task_switch(sub_100348F68, 0, 0);
}

id sub_10034A6D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *ObjectType;
  objc_super v35;
  _QWORD *v36;

  v5 = v4;
  v32 = a4;
  v33 = a3;
  v30 = a1;
  v31 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener] = 0;
  v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections] = _swiftEmptyArrayStorage;
  v15 = &v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15, 0);
  v27 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_queue;
  sub_1002741DC();
  v16 = v5;
  static DispatchQoS.default.getter();
  v36 = _swiftEmptyArrayStorage;
  v17 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v19 = sub_10021FF50();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v18, v19, v9, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v29);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x8000000100616E80, v14, v11, v8, 0);
  *(_QWORD *)&v5[v27] = v20;
  v22 = v30;
  v21 = v31;
  *(_QWORD *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_deviceStatus] = v30;
  *(_QWORD *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_sessionLogger] = v21;
  v23 = v33;
  *((_QWORD *)v15 + 1) = v32;
  swift_unknownObjectWeakAssign(v15, v23);
  v24 = v22;
  swift_retain(v21);

  v35.receiver = v16;
  v35.super_class = ObjectType;
  return objc_msgSendSuper2(&v35, "init");
}

uint64_t sub_10034A93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  void *v26;
  id v27;
  NSString *v28;
  id v29;
  id v30;
  void *v31;
  double v32;
  id v33;
  void *v34;
  char *v35;
  id v36;
  id v37;
  _QWORD v39[2];
  uint64_t v40;
  char v41[40];

  v1 = v0;
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v39 - v9;
  v40 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v11 = __chkstk_darwin(v40);
  v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v39 - v14;
  sub_1002B35A4();
  if (!v17)
    goto LABEL_9;
  v18 = v16;
  v19 = v17;
  sub_10022E534(v0, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v5) == 1)
  {
    sub_100221DB4((uint64_t)v10, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v20 = (uint64_t *)&v15[*(int *)(v40 + 48)];
    v21 = *v20;
    v22 = (const char *)v20[1];
    swift_bridgeObjectRetain(v22);
    sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v22)
    {
      swift_bridgeObjectRelease(v19);
      return v21;
    }
  }
  else
  {
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v23 = type metadata accessor for SDContactStore();
  inited = swift_initStackObject(v23, v41);
  v39[0] = v4;
  v39[1] = v13;
  v25 = v18;
  v26 = (void *)CNContactStoreMeContactDidChangeNotification;
  v27 = objc_allocWithZone((Class)CNContactStore);
  v28 = CNContactStoreDidChangeNotification;
  v29 = v26;
  v30 = objc_msgSend(v27, "init");
  *(_QWORD *)(inited + 32) = v30;
  v31 = (void *)sub_1004925C8(v25, (unint64_t)v19);

  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v19).n128_u64[0];
  if (!v31)
  {
LABEL_9:
    sub_10022E534(v1, (uint64_t)v8);
    v35 = (char *)&loc_10034ABBC + *((int *)qword_10034AD20 + swift_getEnumCaseMultiPayload(v8, v5));
    __asm { BR              X10 }
  }
  v33 = objc_msgSend(v31, "displayName", v32);
  if (v33)
  {
    v34 = v33;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);

  }
  else
  {
    v36 = objc_msgSend(objc_allocWithZone((Class)CNContactFormatter), "init");
    v37 = objc_msgSend(v36, "stringFromContact:", v31);

    if (v37)
    {
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);

    }
    else
    {

      return 0;
    }
  }
  return v21;
}

uint64_t sub_10034AD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BB900);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB900);
  if (qword_1007B3E38 != -1)
    swift_once(&qword_1007B3E38, sub_1002E9DE4);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10034ADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  double v10;
  uint64_t v11;
  const char *v12;
  double v13;
  double v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  const char *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  const char *v43;
  uint64_t v44;
  _QWORD *v45;

  v1 = type metadata accessor for SDTempPairingEndpoint(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v6 = objc_msgSend(v5, "adHocPairedDeviceIdentities");

  if (v6)
  {
    v7 = sub_100221EDC(0, (unint64_t *)&unk_1007BBA50, RPIdentity_ptr);
    v8 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  }
  else
  {
    v8 = (const char *)_swiftEmptyArrayStorage;
  }
  v9 = *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  *(_QWORD *)&v10 = swift_bridgeObjectRetain(v8).n128_u64[0];
  swift_bridgeObjectRetain(v9, v10);
  v12 = (const char *)sub_1003503C4(v11, (uint64_t)v8);
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v9).n128_u64[0];
  v44 = (uint64_t)v8;
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v8, v13).n128_u64[0];
  v15 = *((_QWORD *)v12 + 2);
  if (v15)
  {
    v45 = _swiftEmptyArrayStorage;
    sub_100229940(0, v15, 0);
    v16 = *(unsigned __int8 *)(v2 + 80);
    v43 = v12;
    v17 = (uint64_t)&v12[(v16 + 32) & ~v16];
    v18 = *(_QWORD *)(v2 + 72);
    v19 = v45;
    do
    {
      sub_10035175C(v17, (uint64_t)v4);
      v20 = &v4[*(int *)(v1 + 20)];
      v21 = *(_QWORD *)v20;
      v22 = (const char *)*((_QWORD *)v20 + 1);
      swift_bridgeObjectRetain(v22);
      sub_1003517A0((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_100229940(0, v19[2] + 1, 1);
        v19 = v45;
      }
      v24 = v19[2];
      v23 = v19[3];
      if (v24 >= v23 >> 1)
      {
        sub_100229940(v23 > 1, v24 + 1, 1);
        v19 = v45;
      }
      v19[2] = v24 + 1;
      v25 = &v19[2 * v24];
      v25[4] = v21;
      v25[5] = v22;
      v17 += v18;
      --v15;
    }
    while (v15);
    v26 = swift_bridgeObjectRelease(v43).n128_u64[0];
  }
  else
  {
    v26 = swift_bridgeObjectRelease(v12, v14).n128_u64[0];
    v19 = _swiftEmptyArrayStorage;
  }
  v27 = v44;
  if (!((unint64_t)v44 >> 62))
  {
    v28 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain((const char *)v44, *(double *)&v26);
    if (v28)
      goto LABEL_15;
LABEL_32:
    v31 = _swiftEmptyArrayStorage;
LABEL_33:
    swift_bridgeObjectRelease_n(v27, 2);
    v45 = v19;
    sub_100343690((uint64_t)v31);
    return;
  }
  if (v44 < 0)
    v42 = v44;
  else
    v42 = v44 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v44, *(double *)&v26, v43);
  v28 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v28)
    goto LABEL_32;
LABEL_15:
  if (v28 >= 1)
  {
    v29 = 0;
    v30 = v27 & 0xC000000000000001;
    v31 = _swiftEmptyArrayStorage;
    do
    {
      if (v30)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      else
        v32 = *(id *)(v27 + 8 * v29 + 32);
      v33 = v32;
      v34 = objc_msgSend(v32, "name", v43);
      if (v34)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
          v31 = sub_100227A68(0, v31[2] + 1, 1, v31);
        v40 = v31[2];
        v39 = v31[3];
        if (v40 >= v39 >> 1)
          v31 = sub_100227A68((_QWORD *)(v39 > 1), v40 + 1, 1, v31);
        v31[2] = v40 + 1;
        v41 = &v31[2 * v40];
        v41[4] = v36;
        v41[5] = v38;
        v27 = v44;
      }
      else
      {

      }
      ++v29;
    }
    while (v28 != v29);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_10034B14C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v2 = objc_msgSend(v1, "adHocPairedDeviceIdentities");

  if (v2)
  {
    v3 = sub_100221EDC(0, (unint64_t *)&unk_1007BBA50, RPIdentity_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if (!((unint64_t)v4 >> 62))
      goto LABEL_3;
  }
  else
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_11:
      swift_bridgeObjectRelease((const char *)v4);
      v11 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
      goto LABEL_12;
    }
  }
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v4);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease((const char *)v4);
  if (!v13)
    goto LABEL_11;
LABEL_4:
  v5 = *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  swift_bridgeObjectRetain(v5);
  v7 = (const char *)sub_100350C18(v6, v4);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v5).n128_u64[0];
  *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)v4, v8).n128_u64[0];
  v10 = *((_QWORD *)v7 + 2);
  swift_bridgeObjectRelease(v7, v9);
  v11 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
  if (!v10)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 2;
    goto LABEL_13;
  }
LABEL_12:
  *(_QWORD *)(v0 + v11) = 0;
LABEL_13:
  v14 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v14)
  {
    v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    v16 = swift_retain(v15);
    v14(v16);
    sub_1002845F4((uint64_t)v14, v15);
  }
}

id sub_10034B2E0(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __CFString *v27;
  objc_super v29;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = type metadata accessor for NWBrowser.Descriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (id *)((char *)&v29.receiver - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = &v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 0;
  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_bluetoothController;
  v11 = qword_1007B41A8;
  v12 = v2;
  if (v11 != -1)
    swift_once(&qword_1007B41A8, sub_1004A2368);
  v13 = (void *)qword_1007D84C0;
  *(_QWORD *)&v12[v10] = qword_1007D84C0;
  UUID.init()(v13);
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier] = &_swiftEmptyDictionarySingleton;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing] = 0;
  v14 = objc_msgSend(objc_allocWithZone((Class)RPClient), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue] = a1;
  v15 = type metadata accessor for NWParameters(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = a1;
  v17 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1);
  *v8 = 0xD000000000000011;
  v8[1] = 0x8000000100617080;
  v8[2] = 0;
  v8[3] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v5);
  v18 = type metadata accessor for NWBrowser(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser] = NWBrowser.init(for:using:)(v8, v17);
  v19 = type metadata accessor for SDTempPairingStatusItemController();
  v20 = swift_allocObject(v19, 32, 7);
  *(_QWORD *)(v20 + 16) = objc_msgSend(objc_allocWithZone((Class)STStatusItemsStatusDomainPublisher), "init");
  *(_QWORD *)(v20 + 24) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_statusItemController] = v20;

  v29.receiver = v12;
  v29.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v29, "init");
  v22 = (void *)objc_opt_self(NSNotificationCenter);
  v23 = v21;
  v24 = objc_msgSend(v22, "defaultCenter");
  objc_msgSend(v24, "addObserver:selector:name:object:", v23, "handleRapportIdentitiesChanged", off_1007B39B0, 0);

  v25 = objc_msgSend(v22, "defaultCenter");
  v26 = v23;
  v27 = CFSTR("com.apple.sharingd.DiscoverableModeChanged");
  objc_msgSend(v25, "addObserver:selector:name:object:", v26, "handleDiscoverableModeChanged", v27, 0);

  return v26;
}

void sub_10034B61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007BB900);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting to scan over bluetooth", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier, v2);
  v11 = swift_allocObject(&unk_1007235D0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  swift_retain(v11);
  sub_1004A18F0((uint64_t)v5, (uint64_t)sub_1003518D4, v11);
  swift_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release(v11);
  sub_10034B14C();
}

void sub_10034B7C8(void *a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a3 + 16;
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(a3 + 16, v10, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
    if (!Strong)
      return;
    v7 = (void *)Strong;
    sub_10034B854(a1);
  }
  else
  {
    swift_beginAccess(a3 + 16, v10, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v4, v8);
    if (!v9)
      return;
    v7 = (void *)v9;
    sub_10034C5E4(a1);
  }

}

void sub_10034B854(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  const char **v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  Class isa;
  Class v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  const char *v55;
  id v56;
  void *v57;
  id v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  double v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  const char **v73;
  double v74;
  __objc2_class_ro **p_info;
  char **v76;
  char v77;
  id v78;
  id v79;
  uint64_t v80;
  void *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char isUniquelyReferenced_nonNull_native;
  const char *v98;
  double v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  const char **v105;
  uint64_t v106;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  char v111[24];

  v2 = v1;
  v3 = objc_msgSend(a1, "identifier");
  if (!v3)
    return;
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;

  v8 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier, v111, 0, 0);
  v103 = v5;
  v105 = v8;
  if (*((_QWORD *)*v8 + 2))
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v9 = type metadata accessor for Logger(0);
    sub_100221DF8(v9, (uint64_t)qword_1007BB900);
    v10 = a1;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v108 = v10;
      v109 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
      v16 = v10;
      v17 = String.init<A>(describing:)(&v108, v15);
      v19 = (const char *)v18;
      v108 = (const char *)sub_100228BD8(v17, v18, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v13 + 4);
      swift_bridgeObjectRelease(v19);
LABEL_11:

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Found AirDrop device: %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
      goto LABEL_13;
    }
  }
  else
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v20 = type metadata accessor for Logger(0);
    sub_100221DF8(v20, (uint64_t)qword_1007BB900);
    v10 = a1;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v108 = v10;
      v109 = v14;
      *(_DWORD *)v13 = 136315138;
      v21 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
      v16 = v10;
      v22 = String.init<A>(describing:)(&v108, v21);
      v24 = (const char *)v23;
      v108 = (const char *)sub_100228BD8(v22, v23, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v13 + 4);
      swift_bridgeObjectRelease(v24);
      goto LABEL_11;
    }
  }

LABEL_13:
  v25 = objc_msgSend(a1, "airdropTempAuthTagData");
  if (v25)
  {
    v26 = v25;
    v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    v30 = objc_msgSend(a1, "btAddressData");
    if (v30)
    {
      v31 = v30;
      v32 = v7;
      v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v35 = v34;

      v36 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
      isa = Data._bridgeToObjectiveC()().super.isa;
      v38 = Data._bridgeToObjectiveC()().super.isa;
      v39 = objc_msgSend(v36, "isTempAuthTagKnown:bluetoothAddressData:", isa, v38);

      if (v39)
      {
        v104 = v35;
        v106 = v33;
        swift_bridgeObjectRelease(v32);
        if (qword_1007B3F60 != -1)
          swift_once(&qword_1007B3F60, sub_10034AD30);
        v40 = type metadata accessor for Logger(0);
        sub_100221DF8(v40, (uint64_t)qword_1007BB900);
        sub_10022E4A8(v27, v29);
        v41 = sub_10022E4A8(v27, v29);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.default.getter(v42);
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc(12, -1);
          v45 = swift_slowAlloc(32, -1);
          v108 = (const char *)v45;
          *(_DWORD *)v44 = 136315138;
          sub_10038D14C(v27, v29);
          v47 = (const char *)v46;
          v109 = v46;
          v48 = sub_100008384((uint64_t *)&unk_1007BD6A0);
          v49 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
          v50 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v48, v49);
          v52 = v51;
          swift_bridgeObjectRelease(v47);
          v109 = v50;
          v110 = v52;
          v53 = String.init<A>(describing:)(&v109, &type metadata for String);
          v55 = (const char *)v54;
          v109 = sub_100228BD8(v53, v54, (uint64_t *)&v108);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v44 + 4);
          swift_bridgeObjectRelease(v55);
          sub_100225AB4(v27, v29);
          sub_100225AB4(v27, v29);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Recognized temp auth tag: %s", v44, 0xCu);
          swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v45, -1, -1);
          swift_slowDealloc(v44, -1, -1);
        }
        else
        {
          sub_100225AB4(v27, v29);
          sub_100225AB4(v27, v29);
        }

        sub_1004A1BD8();
        sub_100225AB4(v106, v104);
        sub_100225AB4(v27, v29);
        return;
      }
      sub_100225AB4(v33, v35);
      v7 = v32;
    }
    sub_100225AB4(v27, v29);
  }
  v56 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!v56)
  {
    __break(1u);
    return;
  }
  v57 = v56;
  v58 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v59 = sub_1004360A0(v57, v58);

  if ((v59 & 1) != 0)
  {
    swift_bridgeObjectRelease(v7);
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v60 = type metadata accessor for Logger(0);
    v61 = sub_100221DF8(v60, (uint64_t)qword_1007BB900);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Device is already known", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }
LABEL_64:

    return;
  }
  if ((objc_msgSend(a1, "airdropConfigData") & 1) != 0)
  {
    v73 = v105;
    *(_QWORD *)&v74 = swift_beginAccess(v105, &v109, 32, 0).n128_u64[0];
    p_info = &OBJC_METACLASS___SDAutoUnlockAuthPromptResponse.info;
    v76 = &selRef_setSupportsApproveIcon_;
    if (*((_QWORD *)*v105 + 2))
    {
      swift_bridgeObjectRetain(v7, v74);
      sub_10045C200(v103, (uint64_t)v7);
      if ((v77 & 1) != 0)
      {
        swift_endAccess(&v109);
        swift_bridgeObjectRelease_n(v7, 2);
        goto LABEL_61;
      }
      swift_bridgeObjectRelease(v7);
    }
    swift_endAccess(&v109);
    v78 = objc_msgSend((id)objc_opt_self(SDProximityController), "sharedController");
    v79 = objc_msgSend(v78, "checkDeviceRegion:", a1);

    if (v79 != (id)4)
    {
      v80 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
      v81 = (void *)static NSUserDefaults.airdrop.getter(v80);
      v82 = SFAirDropUserDefaults.a2aRangingAssumeClose.getter();

      if ((v82 & 1) == 0)
      {
        if (qword_1007B3F60 != -1)
          swift_once(&qword_1007B3F60, sub_10034AD30);
        v89 = type metadata accessor for Logger(0);
        sub_100221DF8(v89, (uint64_t)qword_1007BB900);
        v90 = swift_bridgeObjectRetain_n(v7, 2);
        v91 = Logger.logObject.getter(v90);
        v92 = static os_log_type_t.default.getter(v91);
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc(12, -1);
          v94 = swift_slowAlloc(32, -1);
          v109 = v94;
          *(_DWORD *)v93 = 136315138;
          swift_bridgeObjectRetain(v7);
          v95 = v103;
          v108 = (const char *)sub_100228BD8(v103, (unint64_t)v7, &v109);
          v76 = &selRef_setSupportsApproveIcon_;
          v73 = v105;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v93 + 4);
          swift_bridgeObjectRelease_n(v7, 3);
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "Starting to measure RSSI for Ask to AirDrop for %s", v93, 0xCu);
          swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
          v96 = v94;
          p_info = (__objc2_class_ro **)(&OBJC_METACLASS___SDAutoUnlockAuthPromptResponse + 32);
          swift_slowDealloc(v96, -1, -1);
          swift_slowDealloc(v93, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n(v7, 2);

          v95 = v103;
        }
        swift_beginAccess(v73, &v109, 33, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v73);
        v108 = *v73;
        *v73 = (const char *)0x8000000000000000;
        sub_10046CCCC(0, v95, v7, isUniquelyReferenced_nonNull_native);
        v98 = *v73;
        *v73 = v108;
        *(_QWORD *)&v99 = swift_bridgeObjectRelease(v98).n128_u64[0];
        swift_bridgeObjectRelease(v7, v99);
        swift_endAccess(&v109);
        v100 = *(void (**)(uint64_t))(v2
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
        if (v100)
        {
          v101 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
          v102 = swift_retain(v101);
          v100(v102);
          sub_1002845F4((uint64_t)v100, v101);
        }
        sub_1004A1E0C();
        goto LABEL_61;
      }
      if (qword_1007B3F60 != -1)
        swift_once(&qword_1007B3F60, sub_10034AD30);
      v83 = type metadata accessor for Logger(0);
      v84 = sub_100221DF8(v83, (uint64_t)qword_1007BB900);
      v85 = Logger.logObject.getter(v84);
      v86 = static os_log_type_t.default.getter(v85);
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v87 = 0;
        _os_log_impl((void *)&_mh_execute_header, v85, v86, "Assuming device is in range", v87, 2u);
        v88 = v87;
        p_info = &OBJC_METACLASS___SDAutoUnlockAuthPromptResponse.info;
        swift_slowDealloc(v88, -1, -1);
      }

    }
    sub_10034EF60(v103, v7);
    swift_bridgeObjectRelease(v7);
LABEL_61:
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) & 1) == 0)
      sub_10034D864();
    v62 = objc_msgSend((id)objc_opt_self(p_info + 331), v76[228]);
    -[NSObject sender:notifyBluetoothSample:forType:](v62, "sender:notifyBluetoothSample:forType:", v2, a1, 3);
    goto LABEL_64;
  }
  *(_QWORD *)&v65 = swift_beginAccess(v105, &v109, 32, 0).n128_u64[0];
  if (!*((_QWORD *)*v105 + 2))
  {
LABEL_41:
    swift_endAccess(&v109);
    swift_bridgeObjectRelease(v7);
    return;
  }
  swift_bridgeObjectRetain(v7, v65);
  sub_10045C200(v103, (uint64_t)v7);
  if ((v66 & 1) == 0)
  {
    swift_bridgeObjectRelease(v7);
    goto LABEL_41;
  }
  swift_endAccess(&v109);
  swift_bridgeObjectRelease(v7);
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v67 = type metadata accessor for Logger(0);
  sub_100221DF8(v67, (uint64_t)qword_1007BB900);
  swift_bridgeObjectRetain(v7);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.default.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = swift_slowAlloc(32, -1);
    v109 = v72;
    *(_DWORD *)v71 = 136315138;
    swift_bridgeObjectRetain(v7);
    v108 = (const char *)sub_100228BD8(v103, (unint64_t)v7, &v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v71 + 4);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "Device (%s) no longer advertising Ask to AirDrop", v71, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }

  sub_10034F4D0(a1, 0);
}

void sub_10034C5E4(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BB900);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = (uint64_t)v3;
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
    v9 = v3;
    v10 = String.init<A>(describing:)(&v13, v8);
    v12 = (const char *)v11;
    v13 = sub_100228BD8(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Lost AirDrop device: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  sub_10034F4D0(v3, 1);
}

void sub_10034C7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char **v31;
  double v32;
  const char *v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[24];

  v1 = v0;
  v2 = type metadata accessor for NWBrowser.Descriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007BB900);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping browsing over Bonjour for available endpoints", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier, v6);
  sub_1004A1928((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser);
  swift_retain(v16);
  NWBrowser.cancel()();
  swift_release(v16);
  v17 = type metadata accessor for NWParameters(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1);
  *v5 = 0xD000000000000011;
  v5[1] = 0x8000000100617080;
  v5[2] = 0;
  v5[3] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v2);
  v19 = type metadata accessor for NWBrowser(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = NWBrowser.init(for:using:)(v5, v18);
  v21 = *(_QWORD *)(v1 + v15);
  *(_QWORD *)(v1 + v15) = v20;
  swift_release(v21);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0;
  v22 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged;
  v23 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v23)
  {
    v24 = *(_QWORD *)(v22 + 8);
    v25 = swift_retain(v24);
    v23(v25);
    sub_1002845F4((uint64_t)v23, v24);
  }
  v26 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v26);
  sub_10034B14C();
  v27 = *(void (**)(uint64_t))v22;
  if (*(_QWORD *)v22)
  {
    v28 = *(_QWORD *)(v22 + 8);
    v29 = swift_retain(v28);
    v27(v29);
    sub_1002845F4((uint64_t)v27, v28);
  }
  v30 = sub_10021F6DC((uint64_t)_swiftEmptyArrayStorage);
  v31 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(_QWORD *)&v32 = swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier, v38, 1, 0).n128_u64[0];
  v33 = *v31;
  *v31 = (const char *)v30;
  swift_bridgeObjectRelease(v33, v32);
  v34 = *(void (**)(uint64_t))v22;
  if (*(_QWORD *)v22)
  {
    v35 = *(_QWORD *)(v22 + 8);
    v36 = swift_retain(v35);
    v34(v36);
    sub_1002845F4((uint64_t)v34, v35);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
}

void sub_10034CB0C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a1;
  v44 = type metadata accessor for SDTempPairingConnection.Role(0);
  __chkstk_darwin(v44);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v7 = objc_msgSend(v6, "temporarySelfIdentity");

  v46 = v7;
  if (!v7)
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007BB900);
    v46 = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v15, "No temporary identity", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    goto LABEL_20;
  }
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007BB900);
  v9 = v2;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v12 = 134217984;
    v47 = *(_QWORD *)(*(_QWORD *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v12 + 4);

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Pairing to %ld available endpoints", v12, 0xCu);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 1;
  v17 = *(void (**)(uint64_t))&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
  if (v17)
  {
    v18 = *(_QWORD *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8];
    v19 = swift_retain(v18);
    v17(v19);
    sub_1002845F4((uint64_t)v17, v18);
  }
  v20 = *(_QWORD *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints];
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
LABEL_20:

    return;
  }
  v22 = &v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections];
  v42 = *(id *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue];
  v43 = v9;
  v23 = *(_QWORD *)(type metadata accessor for SDTempPairingEndpoint(0) - 8);
  v24 = v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  v25 = *(_QWORD *)(v23 + 72);
  v41 = (const char *)v20;
  swift_bridgeObjectRetain((const char *)v20);
  do
  {
    v26 = &v5[*(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48)];
    sub_10035175C(v24, (uint64_t)v5);
    v27 = v44;
    *(_QWORD *)v26 = v45;
    *((_QWORD *)v26 + 1) = a2;
    swift_storeEnumTagMultiPayload(v5, v27, 0);
    v28 = type metadata accessor for SDTempPairingConnection(0);
    swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
    swift_bridgeObjectRetain(a2);
    v29 = v46;
    v30 = v42;
    v31 = sub_1003D2B40((uint64_t)v5, v29, v30);

    v32 = swift_allocObject(&unk_1007235D0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v43);
    v33 = swift_allocObject(&unk_100723710, 32, 7);
    *(_QWORD *)(v33 + 16) = v32;
    *(_QWORD *)(v33 + 24) = v31;
    v34 = v31[3];
    v35 = v31[4];
    v31[3] = sub_100351E28;
    v31[4] = v33;
    swift_retain(v31);
    sub_1002845F4(v34, v35);
    swift_beginAccess(v22, &v47, 33, 0);
    v36 = swift_retain(v31);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)((*(_QWORD *)v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((*(_QWORD *)v22 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v31);
    specialized Array._endMutation()(v39);
    swift_endAccess(&v47);
    swift_release(v31);
    v24 += v25;
    --v21;
  }
  while (v21);

  swift_bridgeObjectRelease(v41);
}

void sub_10034CFB4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_10034D020(a1, a3);

  }
}

uint64_t sub_10034D020(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v3 = v2;
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BB900);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = v3;
    v31 = (uint64_t)v7;
    v11 = swift_slowAlloc(32, -1);
    v33[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_100221EDC(0, (unint64_t *)&unk_1007BBA50, RPIdentity_ptr);
    v13 = v7;
    v14 = String.init<A>(describing:)(&v31, v12);
    v16 = (const char *)v15;
    v31 = sub_100228BD8(v14, v15, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v10 + 4);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding remote identity: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    v17 = v11;
    v3 = v30;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient);
  objc_msgSend(v18, "addOrUpdateIdentity:completion:", v7, 0, v30);
  NWConnection.cancel()();
  v19 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections;
  swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections, v33, 33, 0);
  swift_retain(a2);
  v20 = sub_1003519E4((const char **)v19, a2);
  swift_release(a2);
  v21 = *(_QWORD *)v19;
  if (!(*(_QWORD *)v19 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22 >= v20)
      goto LABEL_8;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v21 < 0)
    v27 = *(_QWORD *)v19;
  else
    v27 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)v19);
  v22 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease((const char *)v21);
  if (v22 < v20)
    goto LABEL_18;
LABEL_8:
  sub_1004754DC(v20, v22);
  swift_endAccess(v33);
  v19 = *(_QWORD *)v19;
  if (!((unint64_t)v19 >> 62))
  {
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_19:
  if (v19 < 0)
    v28 = v19;
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v19);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease((const char *)v19);
  if (v29)
    goto LABEL_11;
LABEL_10:
  objc_msgSend(v18, "invalidate");
LABEL_11:
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 2;
  v23 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v23)
  {
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    v25 = swift_retain(v24);
    v23(v25);
    sub_1002845F4((uint64_t)v23, v24);
  }
  return sub_1004A1BD8();
}

void sub_10034D37C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;

  v1 = v0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 3;
  v2 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    v4 = swift_retain(v3);
    v2(v4);
    sub_1002845F4((uint64_t)v2, v3);
  }
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100221DF8(v5, (uint64_t)qword_1007BB900);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unpairing and regenerating temporary self identity", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = objc_msgSend(objc_allocWithZone((Class)RPClient), "init");
  v11 = swift_allocObject(&unk_1007235D0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  v12 = swift_allocObject(&unk_1007236C0, 32, 7);
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  v16[4] = sub_100351DF4;
  v17 = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002D6B08;
  v16[3] = &unk_1007236D8;
  v13 = _Block_copy(v16);
  v14 = v17;
  v15 = v10;
  swift_release(v14);
  sub_10016AF20(v15, v13);
  _Block_release(v13);

}

void sub_10034D55C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t Strong;
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];

  v4 = a3 + 16;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v6 = type metadata accessor for Logger(0);
    sub_100221DF8(v6, (uint64_t)qword_1007BB900);
    swift_errorRetain(a1);
    v7 = swift_errorRetain(a1);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v26 = a1;
      v27[0] = v11;
      *(_DWORD *)v10 = 136315138;
      swift_errorRetain(a1);
      v12 = sub_100008384(&qword_1007B5A60);
      v13 = String.init<A>(describing:)(&v26, v12);
      v15 = (const char *)v14;
      v26 = sub_100228BD8(v13, v14, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v10 + 4);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to regenerate temporary self identity: %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a1);
      goto LABEL_12;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007BB900);
    v8 = Logger.logObject.getter(v17);
    v18 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v18, "Successfully regenerated temporary self identity", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
  }

LABEL_12:
  objc_msgSend(a2, "invalidate");
  swift_beginAccess(v4, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v20);
  if (Strong)
  {
    v22 = (void *)Strong;
    *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0;
    v23 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v23)
    {
      v24 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
      v25 = swift_retain(v24);
      v23(v25);
      sub_1002845F4((uint64_t)v23, v24);
    }

  }
}

void sub_10034D864()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *oslog;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing;
  if ((v0[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing] & 1) != 0)
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007BB900);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Already browsing over Bonjour for temp pairing", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

  }
  else
  {
    v6 = v0;
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007BB900);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Starting to browse over Bonjour for available endpoints", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v6[v1] = 1;
    v12 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser;
    v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser];
    v14 = swift_allocObject(&unk_100723648, 24, 7);
    *(_QWORD *)(v14 + 16) = v6;
    swift_retain(v13);
    v15 = v6;
    NWBrowser.stateUpdateHandler.setter(sub_100351900, v14);
    swift_release(v13);
    v16 = *(_QWORD *)&v6[v12];
    v17 = swift_allocObject(&unk_1007235D0, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v15);
    swift_retain(v16);
    swift_retain(v17);
    NWBrowser.browseResultsChangedHandler.setter(sub_100351908, v17);
    swift_release(v17);
    swift_release(v16);
    v18 = *(_QWORD *)&v6[v12];
    v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue];
    swift_retain(v18);
    NWBrowser.start(queue:)(v19);
    swift_release(v18);
  }
}

uint64_t sub_10034DAE4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint8_t *v32;
  uint64_t result;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  char *v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NWBrowser.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v38 - v15;
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v17 = type metadata accessor for Logger(0);
  sub_100221DF8(v17, (uint64_t)qword_1007BB900);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v43 = a1;
  v19 = v18(v16, a1, v7);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v41 = a2;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v42 = v11;
    v25 = v24;
    v45 = v24;
    v40 = v6;
    *(_DWORD *)v23 = 136315138;
    v39 = v23 + 4;
    v18(v14, (uint64_t)v16, v7);
    v26 = String.init<A>(describing:)(v14, v7);
    v28 = (const char *)v27;
    v44 = sub_100228BD8(v26, v27, &v45);
    v6 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v39);
    v29 = swift_bridgeObjectRelease(v28);
    v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v30(v16, v7, v29);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Bonjour server state changed to %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v31 = v25;
    v11 = v42;
    swift_slowDealloc(v31, -1, -1);
    v32 = v23;
    a2 = v41;
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v30)(v16, v7);
  }

  v18(v11, v43, v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if ((_DWORD)result == enum case for NWBrowser.State.failed(_:))
  {
    v34 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
    v35 = (_QWORD *)swift_allocObject(&unk_100723698, 40, 7);
    v35[2] = 0;
    v35[3] = 0;
    v35[4] = a2;
    v36 = a2;
    v37 = sub_100252EC0((uint64_t)v6, (uint64_t)&unk_1007BBAB0, (uint64_t)v35);
    swift_release(v37);
    return ((uint64_t (*)(char *, uint64_t))v30)(v11, v7);
  }
  if ((_DWORD)result == enum case for NWBrowser.State.waiting(_:)
    || (_DWORD)result != enum case for NWBrowser.State.setup(_:)
    && (_DWORD)result != enum case for NWBrowser.State.ready(_:)
    && (_DWORD)result != enum case for NWBrowser.State.cancelled(_:))
  {
    return ((uint64_t (*)(char *, uint64_t))v30)(v11, v7);
  }
  return result;
}

uint64_t sub_10034DE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_10034DE7C, 0, 0);
}

uint64_t sub_10034DE7C()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034DEE0, static AirDropActor.shared, 0);
}

uint64_t sub_10034DEE0()
{
  uint64_t v0;

  sub_10034DF10();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10034DF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for NWBrowser.Descriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007BB900);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Restarting Bonjour browsing", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  *(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
  v11 = type metadata accessor for NWParameters(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1);
  *v5 = 0xD000000000000011;
  v5[1] = 0x8000000100617080;
  v5[2] = 0;
  v5[3] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v2);
  v13 = type metadata accessor for NWBrowser(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = NWBrowser.init(for:using:)(v5, v12);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser) = v14;
  swift_release(v15);
  sub_10034D864();
}

uint64_t sub_10034E0E4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v15[24];

  v5 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3, v8);
  if (result)
  {
    v10 = result;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject(&unk_100723670, 48, 7);
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v10;
    v12[5] = a1;
    swift_bridgeObjectRetain(a1);
    v13 = sub_100252EC0((uint64_t)v7, (uint64_t)&unk_1007BBA88, (uint64_t)v12);
    return swift_release(v13);
  }
  return result;
}

uint64_t sub_10034E1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_10034E1F0, 0, 0);
}

uint64_t sub_10034E1F0()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034E254, static AirDropActor.shared, 0);
}

uint64_t sub_10034E254()
{
  uint64_t v0;

  sub_10034E284(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10034E284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  const char *v69;
  double v70;
  uint64_t v71;
  const char *v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102[3];
  const char *v103;
  unint64_t v104[2];
  _OWORD v105[3];
  __int128 v106;
  __int128 v107;
  __int128 v108;

  v80 = type metadata accessor for NWEndpoint(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NWBrowser.Result.Metadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for NWTXTRecord(0);
  v82 = *(_QWORD *)(v85 - 8);
  v7 = __chkstk_darwin(v85);
  v84 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v81 = (char *)&v76 - v9;
  v10 = sub_100008384(&qword_1007BBA90);
  __chkstk_darwin(v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for SDTempPairingEndpoint(0);
  v99 = *(_QWORD *)(v97 - 8);
  v13 = __chkstk_darwin(v97);
  v94 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v77 = (char *)&v76 - v16;
  __chkstk_darwin(v15);
  v93 = (uint64_t)&v76 - v17;
  v18 = type metadata accessor for NWBrowser.Result(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v91 = (char *)&v76 - v23;
  v103 = (const char *)_swiftEmptyArrayStorage;
  v24 = *(_QWORD *)(a1 + 56);
  v86 = a1 + 56;
  v25 = 1 << *(_BYTE *)(a1 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v87 = (unint64_t)(v25 + 63) >> 6;
  v90 = enum case for NWBrowser.Result.Metadata.bonjour(_:);
  v28 = swift_bridgeObjectRetain((const char *)a1);
  v29 = 0;
  v96 = v3;
  v89 = v4;
  v88 = v6;
  v95 = v12;
  v92 = v18;
  v98 = v19;
  v83 = a1;
  while (1)
  {
    if (v27)
    {
      v30 = v4;
      v31 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v100 = v29;
      v32 = v31 | (v29 << 6);
      goto LABEL_22;
    }
    v33 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v33 >= v87)
      goto LABEL_33;
    v34 = *(_QWORD *)(v86 + 8 * v33);
    v35 = v29 + 1;
    if (!v34)
    {
      v35 = v29 + 2;
      if (v29 + 2 >= v87)
        goto LABEL_33;
      v34 = *(_QWORD *)(v86 + 8 * v35);
      if (!v34)
      {
        v35 = v29 + 3;
        if (v29 + 3 >= v87)
          goto LABEL_33;
        v34 = *(_QWORD *)(v86 + 8 * v35);
        if (!v34)
          break;
      }
    }
LABEL_21:
    v30 = v4;
    v27 = (v34 - 1) & v34;
    v100 = v35;
    v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_22:
    v37 = v91;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v19 + 16))(v91, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v19 + 72) * v32, v18, v28);
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v22, v37, v18);
    NWBrowser.Result.metadata.getter(v38);
    v4 = v30;
    v39 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v6, v3);
    if (v39 == v90)
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v6, v3);
      v40 = v82;
      v41 = v81;
      v42 = v30;
      v43 = v85;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v6, v85);
      v44 = (uint64_t)v84;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v84, v41, v43);
      sub_1003CE6FC(v44, v104);
      v45 = sub_100351D1C((uint64_t)v104, (uint64_t)v105);
      if (*((_QWORD *)&v105[0] + 1))
      {
        v106 = v105[0];
        v107 = v105[1];
        v108 = v105[2];
        v46 = v78;
        NWBrowser.Result.endpoint.getter(v45);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v22, v18);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v43);
        v47 = v77;
        v48 = v46;
        v6 = v88;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v48, v80);
        v49 = &v47[*(int *)(v97 + 20)];
        v50 = v107;
        *(_OWORD *)v49 = v106;
        *((_OWORD *)v49 + 1) = v50;
        v4 = v89;
        *((_OWORD *)v49 + 2) = v108;
        v51 = (uint64_t)v47;
        v12 = v95;
        sub_1003517DC(v51, (uint64_t)v95);
        v52 = 0;
        a1 = v83;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v98 + 8))(v22, v18);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v43);
        v52 = 1;
        a1 = v83;
        v12 = v95;
        v4 = v42;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
      v52 = 1;
    }
    v53 = v99;
    v54 = v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v12, v52, 1, v97);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v12, 1, v54) == 1)
    {
      sub_1003519A4((uint64_t)v12);
      v3 = v96;
      v18 = v92;
      v19 = v98;
    }
    else
    {
      v55 = v93;
      sub_1003517DC((uint64_t)v12, v93);
      sub_10035175C(v55, v94);
      v56 = (unint64_t)v103;
      if ((swift_isUniquelyReferenced_nonNull_native(v103) & 1) == 0)
        v56 = sub_1002286F8(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
      v19 = v98;
      v58 = *(_QWORD *)(v56 + 16);
      v57 = *(_QWORD *)(v56 + 24);
      if (v58 >= v57 >> 1)
        v56 = sub_1002286F8(v57 > 1, v58 + 1, 1, v56);
      *(_QWORD *)(v56 + 16) = v58 + 1;
      sub_1003517DC(v94, v56+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(_QWORD *)(v99 + 72) * v58);
      v103 = (const char *)v56;
      sub_1003517A0(v93);
      v3 = v96;
      v4 = v89;
      v6 = v88;
      v12 = v95;
      v18 = v92;
    }
    v29 = v100;
  }
  v36 = v29 + 4;
  if (v29 + 4 < v87)
  {
    v34 = *(_QWORD *)(v86 + 8 * v36);
    if (!v34)
    {
      while (1)
      {
        v35 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_41;
        if (v35 >= v87)
          goto LABEL_33;
        v34 = *(_QWORD *)(v86 + 8 * v35);
        ++v36;
        if (v34)
          goto LABEL_21;
      }
    }
    v35 = v29 + 4;
    goto LABEL_21;
  }
LABEL_33:
  swift_release(a1);
  if (qword_1007B3F60 == -1)
    goto LABEL_34;
LABEL_42:
  swift_once(&qword_1007B3F60, sub_10034AD30);
LABEL_34:
  v59 = type metadata accessor for Logger(0);
  sub_100221DF8(v59, (uint64_t)qword_1007BB900);
  v60 = v103;
  v61 = swift_bridgeObjectRetain_n(v103, 2);
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.default.getter(v62);
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc(12, -1);
    v65 = swift_slowAlloc(32, -1);
    v102[0] = v65;
    *(_DWORD *)v64 = 136315138;
    v101 = (uint64_t)v60;
    swift_bridgeObjectRetain(v60);
    v66 = sub_100008384(&qword_1007BBAA0);
    v67 = String.init<A>(describing:)(&v101, v66);
    v69 = (const char *)v68;
    v101 = sub_100228BD8(v67, v68, v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v102, v64 + 4);
    swift_bridgeObjectRelease_n(v60, 2);
    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "Temp pairing endpoints changed: %s", v64, 0xCu);
    swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v64, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v60, 2);
  }
  *(_QWORD *)&v70 = swift_beginAccess(&v103, v102, 0, 0).n128_u64[0];
  v71 = v76;
  v72 = *(const char **)(v76 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  *(_QWORD *)(v76 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints) = v103;
  swift_bridgeObjectRelease(v72, v70);
  sub_10034B14C();
  v73 = *(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v73)
  {
    v74 = *(_QWORD *)(v71 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    v75 = swift_retain(v74);
    v73(v75);
    sub_1002845F4((uint64_t)v73, v74);
  }
}

void sub_10034EC28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB900);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Rapport identities changed, updating connection state", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  sub_10034B14C();
  v5 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v6 = objc_msgSend(v5, "adHocPairedDeviceIdentities");

  if (v6)
  {
    v7 = sub_100221EDC(0, (unint64_t *)&unk_1007BBA50, RPIdentity_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v10 = v8;
      else
        v10 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease((const char *)v8);
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease((const char *)v8);
    if (!v9)
      sub_1004A1BEC();
  }
  else
  {
    __break(1u);
  }
}

void sub_10034EE00()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  void *v6;
  id v7;

  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BB900);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AirDrop discoverable mode changed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "discoverableLevel");

    if (v7)
    {
      sub_10034B61C();
    }
    else
    {
      sub_10034C7C0();
      sub_10034D37C();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10034EF60(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  const char **v29;
  double v30;
  char isUniquelyReferenced_nonNull_native;
  const char *v32;
  double v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock[5];
  uint64_t v65;
  const char *v66;
  uint64_t v67;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v61 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTimeInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char **)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = type metadata accessor for DispatchTime(0);
  v55 = *(_QWORD *)(v57 - 8);
  v14 = __chkstk_darwin(v57);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v56 = (char *)&v52 - v17;
  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v18 = type metadata accessor for Logger(0);
  sub_100221DF8(v18, (uint64_t)qword_1007BB900);
  v19 = swift_bridgeObjectRetain_n(a2, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v53 = v11;
    v22 = swift_slowAlloc(12, -1);
    v52 = v16;
    v23 = a1;
    v24 = (uint8_t *)v22;
    v25 = swift_slowAlloc(32, -1);
    v54 = v10;
    v26 = v25;
    aBlock[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_bridgeObjectRetain(a2);
    v66 = (const char *)sub_100228BD8(v23, (unint64_t)a2, aBlock);
    v11 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v24 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Ask to AirDrop device (%s) within bubble", v24, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    v27 = v26;
    v10 = v54;
    swift_slowDealloc(v27, -1, -1);
    v28 = v24;
    a1 = v23;
    v16 = v52;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
  }

  v29 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(_QWORD *)&v30 = swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier, aBlock, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v30);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
  v66 = *v29;
  *v29 = (const char *)0x8000000000000000;
  sub_10046CCCC(1, a1, a2, isUniquelyReferenced_nonNull_native);
  v32 = *v29;
  *v29 = v66;
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
  swift_bridgeObjectRelease(a2, v33);
  swift_endAccess(aBlock);
  v34 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v34)
  {
    v35 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    v36 = swift_retain(v35);
    v34(v36);
    sub_1002845F4((uint64_t)v34, v35);
  }
  sub_1003F3800(1);
  v37 = sub_1004A1E20();
  v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue);
  static DispatchTime.now()(v37);
  *v13 = 5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchTimeInterval.seconds(_:), v10);
  v38 = v56;
  + infix(_:_:)(v16, v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  v39 = *(void (**)(char *, uint64_t))(v55 + 8);
  v40 = v57;
  v39(v16, v57);
  v41 = swift_allocObject(&unk_1007235D0, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v3);
  aBlock[4] = (uint64_t)sub_100351844;
  v65 = v41;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10025BBB4;
  aBlock[3] = (uint64_t)&unk_1007235E8;
  v42 = _Block_copy(aBlock);
  v43 = swift_retain(v41);
  v44 = v58;
  static DispatchQoS.unspecified.getter(v43);
  v66 = (const char *)_swiftEmptyArrayStorage;
  v45 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_100008384((uint64_t *)&unk_1007B6410);
  v47 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  v48 = v61;
  v49 = v46;
  v50 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v66, v49, v47, v63, v45);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v38, v44, v48, v42);
  _Block_release(v42);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v48, v50);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v60);
  v39(v38, v40);
  swift_release(v65);
  return swift_release(v41);
}

void sub_10034F4D0(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE v16[24];

  v3 = v2;
  v6 = objc_msgSend(a1, "identifier");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    v11 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier;
    swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier, v16, 33, 0);
    sub_10026AD5C(v8, (uint64_t)v10);
    swift_endAccess(v16);
    swift_bridgeObjectRelease(v10);
    v12 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v12)
    {
      v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
      v14 = swift_retain(v13);
      v12(v14);
      sub_1002845F4((uint64_t)v12, v13);
    }
    if ((a2 & 1) != 0)
    {
      v15 = objc_msgSend((id)objc_opt_self(SDProximityController), "sharedController");
      objc_msgSend(v15, "notifyDeviceLost:", a1);

    }
    if (!*(_QWORD *)(*(_QWORD *)v11 + 16))
    {
      sub_1004A1E20();
      sub_1003F3800(0);
    }
  }
}

uint64_t sub_10034F61C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v16[24];

  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1, v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v9 = qword_1007B3D98;
    v10 = v7;
    if (v9 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v11 = static AirDropActor.shared;
    v12 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v13 = (_QWORD *)swift_allocObject(&unk_100723620, 40, 7);
    v13[2] = v11;
    v13[3] = v12;
    v13[4] = v10;
    swift_retain(v11);
    v14 = sub_100252EC0((uint64_t)v4, (uint64_t)&unk_1007BBA70, (uint64_t)v13);

    return swift_release(v14);
  }
  return result;
}

uint64_t sub_10034F77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10034F7E4, static AirDropActor.shared, 0);
}

uint64_t sub_10034F7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_1007B3F60 != -1)
    swift_once(&qword_1007B3F60, sub_10034AD30);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BB900);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Nearby device is close timer fired", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  sub_1003F3800(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034F9D8()
{
  return type metadata accessor for SDTempPairingClient(0);
}

uint64_t type metadata accessor for SDTempPairingClient(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007BB9A8, (uint64_t)&nominal type descriptor for SDTempPairingClient);
}

uint64_t sub_10034F9F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_1005D3A18;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for () + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = &unk_1005D3A30;
    return swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
  return result;
}

__n128 sub_10034FAC0()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  __n128 result;
  uint64_t v9;
  const char *v10;
  const char *v11;
  NSObject *oslog;

  v0 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v1 = (void *)static NSUserDefaults.airdrop.getter(v0);
  v2 = SFAirDropUserDefaults.a2aRangingAssumeFar.getter();

  if ((v2 & 1) != 0)
  {
    if (qword_1007B3F60 != -1)
      swift_once(&qword_1007B3F60, sub_10034AD30);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007BB900);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Assuming device is not in range", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

  }
  else
  {
    v9 = UUID.uuidString.getter(v3);
    v11 = v10;
    sub_10034EF60(v9, v10);
    return swift_bridgeObjectRelease(v11);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDTempPairingDeviceRangingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10034FCE4 + 4 * byte_1005D39D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10034FD18 + 4 * asc_1005D39D0[v4]))();
}

uint64_t sub_10034FD18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034FD20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034FD28);
  return result;
}

uint64_t sub_10034FD34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10034FD3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10034FD40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034FD48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingDeviceRangingState()
{
  return &type metadata for SDTempPairingDeviceRangingState;
}

uint64_t *sub_10034FD64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  const char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *(const char **)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = *(uint64_t *)((char *)a2 + v8 + 16);
    v13 = v10[3];
    swift_bridgeObjectRetain(v11);
    sub_10022E4A8(v12, v13);
    v9[2] = v12;
    v9[3] = v13;
    v14 = v10[4];
    v15 = v10[5];
    sub_10022E4A8(v14, v15);
    v9[4] = v14;
    v9[5] = v15;
  }
  return a1;
}

uint64_t sub_10034FE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(const char **)(v5 + 8));
  sub_100225AB4(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  return sub_100225AB4(*(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40));
}

uint64_t sub_10034FE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(const char **)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = *(_QWORD *)(a2 + v7 + 16);
  v12 = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain(v10);
  sub_10022E4A8(v11, v12);
  v8[2] = v11;
  v8[3] = v12;
  v13 = *(_QWORD *)(v9 + 32);
  v14 = *(_QWORD *)(v9 + 40);
  sub_10022E4A8(v13, v14);
  v8[4] = v13;
  v8[5] = v14;
  return a1;
}

uint64_t sub_10034FF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  const char *v10;
  const char *v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *(_QWORD *)(a2 + v7);
  v10 = *(const char **)(a2 + v7 + 8);
  v11 = *(const char **)(a1 + v7 + 8);
  v8[1] = v10;
  *(_QWORD *)&v12 = swift_bridgeObjectRetain(v10).n128_u64[0];
  swift_bridgeObjectRelease(v11, v12);
  v13 = v9[2];
  v14 = v9[3];
  sub_10022E4A8(v13, v14);
  v15 = v8[2];
  v16 = v8[3];
  v8[2] = v13;
  v8[3] = v14;
  sub_100225AB4(v15, v16);
  v17 = v9[4];
  v18 = v9[5];
  sub_10022E4A8(v17, v18);
  v19 = v8[4];
  v20 = v8[5];
  v8[4] = v17;
  v8[5] = v18;
  sub_100225AB4(v19, v20);
  return a1;
}

uint64_t sub_10034FFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_100350040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  v11 = *(const char **)(a1 + v7 + 8);
  *v8 = *(_QWORD *)v9;
  v8[1] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = v8[2];
  v13 = v8[3];
  *((_OWORD *)v8 + 1) = *(_OWORD *)(v9 + 16);
  sub_100225AB4(v12, v13);
  v14 = v8[4];
  v15 = v8[5];
  *((_OWORD *)v8 + 2) = *(_OWORD *)(v9 + 32);
  sub_100225AB4(v14, v15);
  return a1;
}

uint64_t sub_1003500CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003500D8);
}

uint64_t sub_1003500D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for NWEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100350158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100350164);
}

uint64_t sub_100350164(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for NWEndpoint(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SDTempPairingEndpoint(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BBA10, (uint64_t)&nominal type descriptor for SDTempPairingEndpoint);
}

uint64_t sub_1003501F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for NWEndpoint(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "0";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100350268()
{
  unint64_t result;

  result = qword_1007BBA48;
  if (!qword_1007BBA48)
  {
    result = swift_getWitnessTable(&unk_1005D3AE0, &type metadata for SDTempPairingDeviceRangingState);
    atomic_store(result, (unint64_t *)&qword_1007BBA48);
  }
  return result;
}

uint64_t sub_1003502AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }
    v7 = static UUID.== infix(_:_:)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier, a2);
    swift_release(v6);
    if ((v7 & 1) != 0)
      return v5;
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4)
      return 0;
  }
}

_QWORD *sub_1003503C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v45 = type metadata accessor for SDTempPairingEndpoint(0);
  v4 = __chkstk_darwin(v45);
  v38 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v46 = (uint64_t)&v31 - v7;
  result = _swiftEmptyArrayStorage;
  v47 = _swiftEmptyArrayStorage;
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v39 = *(_QWORD *)(v6 + 72);
    v33 = v10;
    v36 = a1 + v10;
    v11 = a2 & 0xFFFFFFFFFFFFFF8;
    v34 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v11 = a2;
    v32 = v11;
    v44 = a2 & 0xC000000000000001;
    v12 = _swiftEmptyArrayStorage;
    v35 = (unint64_t)a2 >> 62;
    v42 = a2;
    while (1)
    {
      sub_10035175C(v36 + v39 * v9, v46);
      if (v35)
      {
        swift_bridgeObjectRetain((const char *)a2);
        v13 = _CocoaArrayWrapper.endIndex.getter(v32);
        v40 = v12;
        v41 = v9;
        if (v13)
        {
LABEL_8:
          v15 = 4;
          v43 = v13;
          do
          {
            if (v44)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a2);
            else
              v16 = *(id *)(a2 + 8 * v15);
            v17 = v16;
            v18 = v15 - 3;
            if (__OFADD__(v15 - 4, 1))
            {
              __break(1u);
              JUMPOUT(0x100350B78);
            }
            v19 = objc_msgSend(v16, "edPKData");
            if (v19)
            {
              v20 = v19;
              static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
              v22 = v21;

              __asm { BR              X8 }
            }
            v23 = v46 + *(int *)(v45 + 20);
            v24 = *(_QWORD *)(v23 + 16);
            v25 = *(_QWORD *)(v23 + 24);
            sub_10022E4A8(v24, v25);
            sub_100225AA0(0, 0xF000000000000000);
            sub_100225AA0(v24, v25);

            ++v15;
          }
          while (v18 != v13);
        }
      }
      else
      {
        v13 = *(_QWORD *)(v34 + 16);
        *(_QWORD *)&v14 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
        v40 = v12;
        v41 = v9;
        if (v13)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease((const char *)a2, v14);
      sub_1003517DC(v46, v38);
      v26 = v40;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
      v28 = v41;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_100229A70(0, v26[2] + 1, 1);
      v12 = v47;
      v30 = v47[2];
      v29 = v47[3];
      if (v30 >= v29 >> 1)
      {
        sub_100229A70(v29 > 1, v30 + 1, 1);
        v12 = v47;
      }
      v12[2] = v30 + 1;
      sub_1003517DC(v38, (uint64_t)v12 + v33 + v30 * v39);
      v9 = v28 + 1;
      if (v9 == v37)
        return v47;
    }
  }
  return result;
}

_QWORD *sub_100350C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  v49 = type metadata accessor for SDTempPairingEndpoint(0);
  v4 = __chkstk_darwin(v49);
  v40 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v6);
  v11 = (char *)&v33 - v10;
  result = _swiftEmptyArrayStorage;
  v50 = _swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v13 = 0;
    v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v41 = *(_QWORD *)(v9 + 72);
    v35 = v14;
    v38 = a1 + v14;
    v15 = a2 & 0xFFFFFFFFFFFFFF8;
    v36 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v15 = a2;
    v34 = v15;
    v48 = a2 & 0xC000000000000001;
    v16 = _swiftEmptyArrayStorage;
    v37 = (unint64_t)a2 >> 62;
    v47 = (char *)&v33 - v10;
    v44 = v8;
    v45 = a2;
    while (1)
    {
      v43 = v13;
      sub_10035175C(v38 + v41 * v13, (uint64_t)v11);
      if (v37)
      {
        swift_bridgeObjectRetain((const char *)a2);
        v17 = _CocoaArrayWrapper.endIndex.getter(v34);
        v42 = v16;
        if (v17)
        {
LABEL_8:
          v19 = 4;
          v46 = v17;
          do
          {
            if (v48)
              v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, a2);
            else
              v23 = *(id *)(a2 + 8 * v19);
            v24 = v23;
            v25 = v19 - 3;
            if (__OFADD__(v19 - 4, 1))
            {
              __break(1u);
              JUMPOUT(0x1003514C8);
            }
            v26 = objc_msgSend(v23, "edPKData");
            if (v26)
            {
              v27 = v26;
              static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
              v29 = v28;

              __asm { BR              X8 }
            }
            v20 = &v11[*(int *)(v49 + 20)];
            v21 = *((_QWORD *)v20 + 2);
            v22 = *((_QWORD *)v20 + 3);
            sub_10022E4A8(v21, v22);
            sub_100225AA0(0, 0xF000000000000000);
            sub_100225AA0(v21, v22);
            sub_10035175C((uint64_t)v11, (uint64_t)v8);
            sub_1003517A0((uint64_t)v8);

            ++v19;
          }
          while (v25 != v17);
        }
      }
      else
      {
        v17 = *(_QWORD *)(v36 + 16);
        *(_QWORD *)&v18 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
        v42 = v16;
        if (v17)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease((const char *)a2, v18);
      sub_1003517DC((uint64_t)v11, v40);
      v30 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
        sub_100229A70(0, v30[2] + 1, 1);
      v16 = v50;
      v32 = v50[2];
      v31 = v50[3];
      if (v32 >= v31 >> 1)
      {
        sub_100229A70(v31 > 1, v32 + 1, 1);
        v16 = v50;
      }
      v16[2] = v32 + 1;
      sub_1003517DC(v40, (uint64_t)v16 + v35 + v32 * v41);
      v11 = v47;
      v13 = v43 + 1;
      if (v43 + 1 == v39)
        return v50;
    }
  }
  return result;
}

void sub_100351568()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v0 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v1 = objc_msgSend(v0, "adHocPairedDeviceIdentities");

  if (!v1)
    goto LABEL_23;
  v2 = sub_100221EDC(0, (unint64_t *)&unk_1007BBA50, RPIdentity_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v17 = v3;
    else
      v17 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v4)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease_n(v3, 2);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain((const char *)v3);
  if (!v4)
    goto LABEL_21;
LABEL_4:
  if (v4 >= 1)
  {
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v7 = *(id *)(v3 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "name");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_100227A68(0, v6[2] + 1, 1, v6);
        v15 = v6[2];
        v14 = v6[3];
        if (v15 >= v14 >> 1)
          v6 = sub_100227A68((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
        v6[2] = v15 + 1;
        v16 = &v6[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {

      }
      ++v5;
    }
    while (v4 != v5);
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_10035175C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003517A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003517DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100351820()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100351844()
{
  uint64_t v0;

  return sub_10034F61C(v0);
}

uint64_t sub_10035184C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10035185C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100351868(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BBA64);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_10034F77C(a1, v4, v5, v6);
}

void sub_1003518D4(void *a1, char a2)
{
  uint64_t v2;

  sub_10034B7C8(a1, a2, v2);
}

uint64_t sub_1003518DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100351900(uint64_t a1)
{
  uint64_t v1;

  return sub_10034DAE4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100351908(const char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10034E0E4(a1, a2, v2);
}

uint64_t sub_100351910()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100351944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1007BBA84);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000D098;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_10034E1F0, 0, 0);
}

uint64_t sub_1003519A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007BBA90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003519E4(const char **a1, uint64_t a2)
{
  uint64_t v2;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  const char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __objc2_class **p_superclass;
  unint64_t i;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  v7 = sub_1003502AC(v6, a2);
  v9 = (unint64_t)v8;
  v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (!v2)
  {
    if ((v9 & 1) != 0)
    {
      v29 = (uint64_t)*a1;
      if ((unint64_t)v29 >> 62)
      {
        if (v29 < 0)
          v33 = v29;
        else
          v33 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain((const char *)v29, *(double *)&v10);
        v7 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease((const char *)v29);
      }
      else
      {
        return *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_57;
      v9 = (unint64_t)*a1;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_58:
        if ((v9 & 0x8000000000000000) != 0)
          v31 = v9;
        else
          v31 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain((const char *)v9, *(double *)&v10);
        v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        v10 = swift_bridgeObjectRelease((const char *)v9).n128_u64[0];
        if (v11 != v32)
          goto LABEL_6;
      }
      else if (v11 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        p_superclass = &OBJC_METACLASS____TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedFileType.superclass;
        a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
        for (i = v7 + 5; ; ++i)
        {
          v9 = i - 4;
          v14 = *a1;
          if (((unint64_t)*a1 & 0xC000000000000001) != 0)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v14);
          }
          else
          {
            if ((v9 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
            if (v9 >= *(_QWORD *)(((unint64_t)v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_48;
            v15 = *(_QWORD *)&v14[8 * i];
            swift_retain(v15);
          }
          v11 = static UUID.== infix(_:_:)((char *)p_superclass[271] + v15, a2);
          swift_release(v15);
          if ((v11 & 1) == 0)
            break;
LABEL_32:
          v11 = i - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_49;
          v26 = (uint64_t)*a1;
          if ((unint64_t)*a1 >> 62)
          {
            if (v26 < 0)
              v28 = (uint64_t)*a1;
            else
              v28 = v26 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*a1);
            v27 = _CocoaArrayWrapper.endIndex.getter(v28);
            v10 = swift_bridgeObjectRelease((const char *)v26).n128_u64[0];
          }
          else
          {
            v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v11 == v27)
            return v7;
        }
        if (v9 == v7)
        {
LABEL_31:
          if (__OFADD__(v7++, 1))
            goto LABEL_50;
          goto LABEL_32;
        }
        v11 = (uint64_t)*a1;
        if (((unint64_t)*a1 & 0xC000000000000001) != 0)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
          v11 = (uint64_t)*a1;
          if (((unint64_t)*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v9 & 0x8000000000000000) != 0)
              goto LABEL_53;
            if (v9 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_54;
            v17 = *(_QWORD *)(v11 + 8 * i);
            swift_retain(v17);
            goto LABEL_20;
          }
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_51;
          if (v7 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_52;
          v16 = *(_QWORD *)(v11 + 8 * v7 + 32);
          swift_retain(v16);
          if ((v11 & 0xC000000000000001) == 0)
            goto LABEL_17;
        }
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v11);
        v11 = (uint64_t)*a1;
LABEL_20:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
        *a1 = (const char *)v11;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v11 < 0 || (v11 & 0x4000000000000000) != 0)
        {
          v11 = sub_10026D800(v11);
          *a1 = (const char *)v11;
        }
        v19 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v17;
        v20 = swift_release(v19);
        specialized Array._endMutation()(v20);
        v11 = (uint64_t)*a1;
        v21 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
        *a1 = (const char *)v11;
        if (!v21 || v11 < 0 || (v11 & 0x4000000000000000) != 0)
        {
          v11 = sub_10026D800(v11);
          *a1 = (const char *)v11;
        }
        p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedFileType
                                        + 8);
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_55;
        v22 = v11 & 0xFFFFFFFFFFFFFF8;
        if (v9 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
        v23 = *(_QWORD *)(v22 + 8 * i);
        *(_QWORD *)(v22 + 8 * i) = v16;
        v24 = swift_release(v23);
        specialized Array._endMutation()(v24);
        goto LABEL_31;
      }
    }
  }
  return v7;
}

uint64_t sub_100351D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BBA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100351D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007BBAAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_10034DE7C, 0, 0);
}

uint64_t sub_100351DC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100351DF4(uint64_t a1)
{
  uint64_t v1;

  sub_10034D55C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100351DFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100351E28(void *a1)
{
  uint64_t v1;

  sub_10034CFB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100351E38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  v2[11] = static AirDropActor.shared;
  return swift_task_switch(sub_100351F18, v8, 0);
}

void sub_100351F18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSURL *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
LABEL_27:
    v40 = 0;
LABEL_28:
    v42 = *(_QWORD *)(v1 + 48);
    v41 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    (*(void (**)(uint64_t))(v1 + 8))(v40);
    return;
  }
  v7 = objc_allocWithZone((Class)LSApplicationRecord);
  v8 = sub_100528FF4(0xD000000000000011, 0x8000000100616B70, 1);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(void **)(v9 + 16);
  *(_QWORD *)(v9 + 16) = v8;

  if (!*(_QWORD *)(v9 + 16))
  {
    v33 = *(_QWORD *)(v1 + 24);
    v34 = type metadata accessor for SDAirDropContentHandlerWebLinks();
    v35 = swift_allocObject(v34, 16, 7);
    v36 = *(_QWORD *)(v33 + 24);
    *(_QWORD *)(v33 + 24) = v35;
    swift_release(v36);
    v37 = *(_QWORD *)(v33 + 24);
    *(_QWORD *)(v1 + 96) = v37;
    if (v37)
    {
      v38 = unk_1007B7C1C;
      v43 = (void (*)(uint64_t))((char *)&dword_1007B7C18 + dword_1007B7C18);
      swift_retain(v37);
      v39 = (_QWORD *)swift_task_alloc(v38);
      *(_QWORD *)(v1 + 104) = v39;
      *v39 = v1;
      v39[1] = sub_100352288;
      v43(*(_QWORD *)(v1 + 16));
      return;
    }
    goto LABEL_27;
  }
  v12 = *(_QWORD *)(v1 + 40);
  v13 = SFAirDropReceive.AskRequest.urlItems.getter(v11);
  v14 = v13;
  v15 = 0;
  v16 = v13 + 56;
  v17 = -1;
  v18 = -1 << *(_BYTE *)(v13 + 32);
  if (-v18 < 64)
    v17 = ~(-1 << -(char)v18);
  v19 = v17 & *(_QWORD *)(v13 + 56);
  v20 = (unint64_t)(63 - v18) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_22;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v23 >= v20)
      goto LABEL_30;
    v24 = *(_QWORD *)(v16 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_30;
      v24 = *(_QWORD *)(v16 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_30;
        v24 = *(_QWORD *)(v16 + 8 * v15);
        if (!v24)
          break;
      }
    }
LABEL_21:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v1 + 56);
    v27 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v26, *(_QWORD *)(v14 + 48) + *(_QWORD *)(v12 + 72) * v22, v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v27);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v26, 1, v27) == 1)
    {
      swift_release(v14);
      v40 = 1;
      goto LABEL_28;
    }
    v28 = *(_QWORD *)(v1 + 48);
    v29 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 32))(v28, *(_QWORD *)(v1 + 56), v29);
    URL._bridgeToObjectiveC()(v30);
    v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v28, v29);
    LOBYTE(v28) = SFIsKeynoteLiveLink(v32);

    if ((v28 & 1) == 0)
    {
      swift_release(v14);
      goto LABEL_27;
    }
  }
  v25 = v23 + 3;
  if (v25 >= v20)
  {
LABEL_30:
    v40 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v12 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v14);
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v16 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v20)
      goto LABEL_30;
    v24 = *(_QWORD *)(v16 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100352288(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_BYTE *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003522E8, v3, 0);
}

void sub_1003522E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSURL *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(unsigned __int8 *)(v0 + 112);
  v2 = swift_release(*(_QWORD *)(v0 + 96));
  if (v1 != 1)
  {
LABEL_24:
    v24 = 0;
LABEL_27:
    v26 = *(_QWORD *)(v0 + 48);
    v25 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    (*(void (**)(uint64_t))(v0 + 8))(v24);
    return;
  }
  v3 = *(_QWORD *)(v0 + 40);
  v4 = SFAirDropReceive.AskRequest.urlItems.getter(v2);
  v5 = v4;
  v6 = 0;
  v7 = v4 + 56;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v4 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(63 - v9) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_21;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v14 >= v11)
      goto LABEL_26;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_26;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_26;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_21:
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v17, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v3 + 72) * v13, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v17, 1, v18) == 1)
    {
      swift_release(v5);
      v24 = 1;
      goto LABEL_27;
    }
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v19, *(_QWORD *)(v0 + 56), v20);
    URL._bridgeToObjectiveC()(v21);
    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v20);
    LOBYTE(v19) = SFIsKeynoteLiveLink(v23);

    if ((v19 & 1) == 0)
    {
      swift_release(v5);
      goto LABEL_24;
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
  {
LABEL_26:
    v24 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v3 + 56))(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 32));
    swift_release(v5);
    goto LABEL_27;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_26;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100352540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v5 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 24);
  if (v8)
  {
    swift_retain(*(_QWORD *)(v2 + 24));
    sub_100299084(a1, a2);
    return swift_release(v8);
  }
  else
  {
    v10 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = v10;
    sub_100323EA0(a1, v10, 1, a2);

    return sub_100223280((uint64_t)v7);
  }
}

uint64_t sub_100352654()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary39SDAirDropContentHandlerKeynoteLiveLinks);
}

uint64_t sub_1003526A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks();
  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003526D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BBAFC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_100351E38(a1);
}

uint64_t sub_100352728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100352540(a1, a2);
}

void sub_100352748(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0x80000001006170F0;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0x80000001006170F0).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  v10._object = (void *)0x80000001006170F0;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0x80000001006170F0);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100352988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BBBD8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BBBD8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100352A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  char v9;
  char v11;
  uint64_t v12;

  v1 = type metadata accessor for SFPlatform(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (SFFilesAppAvailable(v3)
    && (static SFPlatform.visionOS.getter(),
        v6 = static SFPlatform.isPlatform(_:)(v5),
        v7 = *(void (**)(char *, uint64_t))(v2 + 8),
        v8 = ((uint64_t (*)(char *, uint64_t))v7)(v5, v1),
        (v6 & 1) == 0))
  {
    static SFPlatform.macOS.getter(v8);
    v11 = static SFPlatform.isPlatform(_:)(v5);
    v7(v5, v1);
    if ((v11 & 1) != 0)
      v9 = 1;
    else
      v9 = *(_BYTE *)(v0 + 24) ^ 1;
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_100352AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t (*v7)(char *, uint64_t);
  uint64_t v8;
  char v10;
  uint64_t v11;

  v1 = type metadata accessor for SFPlatform(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.visionOS.getter(v3);
  v6 = static SFPlatform.isPlatform(_:)(v5);
  v7 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  v8 = v7(v5, v1);
  if ((v6 & 1) != 0)
    return 1;
  static SFPlatform.macOS.getter(v8);
  v10 = static SFPlatform.isPlatform(_:)(v5);
  v7(v5, v1);
  if ((v10 & 1) != 0)
    return 0;
  else
    return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_100352BB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100352C40, static AirDropActor.shared, 0);
}

void sub_100352C40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  Swift::String v32;
  Swift::Bool v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v5, v4, v8);
  v11 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 32);
  if (!v7)
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
    v16 = 0;
    goto LABEL_29;
  }
  v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = swift_bridgeObjectRelease((const char *)v13);
  (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
  if (v14)
  {
    v16 = 0;
LABEL_29:
    swift_task_dealloc(*(_QWORD *)(v1 + 48));
    (*(void (**)(uint64_t))(v1 + 8))(v16);
    return;
  }
  v17 = *(_QWORD *)(v1 + 24);
  v18 = sub_10032DA4C();
  v19 = *(const char **)(v17 + 16);
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
  v22 = *(_QWORD *)(v17 + 16);
  if (!v22)
  {
LABEL_23:
    v16 = SFFilesAppAvailable(v20);
    v39 = *(_QWORD *)(v17 + 16);
    if (v39)
    {
      if ((unint64_t)v39 >> 62)
      {
        if (v39 >= 0)
          v41 = v39 & 0xFFFFFFFFFFFFFF8;
        else
          v41 = *(_QWORD *)(v17 + 16);
        swift_bridgeObjectRetain(*(const char **)(v17 + 16));
        v40 = _CocoaArrayWrapper.endIndex.getter(v41);
        swift_bridgeObjectRelease((const char *)v39);
      }
      else
      {
        v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v40)
        v16 = 1;
      else
        v16 = v16;
    }
    goto LABEL_29;
  }
  v23 = v22 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v22 >> 62))
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v17 + 16), v21).n128_u64[0];
    if (v24 == 1)
      goto LABEL_8;
    goto LABEL_22;
  }
  if (v22 >= 0)
    v36 = v22 & 0xFFFFFFFFFFFFFF8;
  else
    v36 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v17 + 16), 2);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  v25 = swift_bridgeObjectRelease((const char *)v22).n128_u64[0];
  if (v37 != 1
    || (v23 = v22 & 0xFFFFFFFFFFFFFF8,
        swift_bridgeObjectRetain((const char *)v22, *(double *)&v25),
        v38 = _CocoaArrayWrapper.endIndex.getter(v36),
        v25 = swift_bridgeObjectRelease((const char *)v22).n128_u64[0],
        !v38))
  {
LABEL_22:
    swift_bridgeObjectRelease((const char *)v22, *(double *)&v25);
    goto LABEL_23;
  }
LABEL_8:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
LABEL_11:
    v27 = v26;
    v28 = objc_msgSend(v26, "bundleIdentifier", swift_bridgeObjectRelease((const char *)v22).n128_f64[0]);

    if (v28)
    {
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      v32._countAndFlagsBits = 0x6C7070612E6D6F63;
      v32._object = (void *)0xEA00000000002E65;
      v33 = String.hasPrefix(_:)(v32);
      if (v29 == 0xD000000000000014 && v31 == (const char *)0x8000000100617240)
      {
        swift_bridgeObjectRelease((const char *)0x8000000100617240);
        v34 = 0;
      }
      else
      {
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, 0xD000000000000014, 0x8000000100617240, 0);
        swift_bridgeObjectRelease(v31);
        v34 = v33 & (v35 ^ 1);
      }
      *(_BYTE *)(*(_QWORD *)(v1 + 24) + 24) = v34 & 1;
    }
    goto LABEL_23;
  }
  if (*(_QWORD *)(v23 + 16))
  {
    v26 = *(id *)(v22 + 32);
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_100352F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char v16;
  char v18;
  uint64_t v19;

  v7 = type metadata accessor for SFPlatform(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = SFFilesAppAvailable(v9);
  if ((_DWORD)v12
    && (static SFPlatform.visionOS.getter(v12),
        v13 = static SFPlatform.isPlatform(_:)(v11),
        v14 = *(void (**)(char *, uint64_t))(v8 + 8),
        v15 = ((uint64_t (*)(char *, uint64_t))v14)(v11, v7),
        (v13 & 1) == 0))
  {
    static SFPlatform.macOS.getter(v15);
    v18 = static SFPlatform.isPlatform(_:)(v11);
    v14(v11, v7);
    if ((v18 & 1) != 0)
      v16 = 1;
    else
      v16 = *(_BYTE *)(v3 + 24) ^ 1;
  }
  else
  {
    v16 = 0;
  }
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100324988(a1, a2, v16 & 1, a3);
}

void sub_100353004(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  double v18;
  uint64_t *v19;
  char v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  char v28;
  const char *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t *v37;
  uint64_t **v38;
  os_log_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t **v47;
  uint8_t *v48;
  os_log_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;

  v52 = a3;
  v53 = a2;
  v50 = a1;
  v4 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v4);
  v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for SFPlatform(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v3 + 16);
  if (v15)
  {
    v16 = v15 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v15 >> 62)
    {
      if (v15 >= 0)
        v45 = v15 & 0xFFFFFFFFFFFFFF8;
      else
        v45 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRetain(*(const char **)(v3 + 16));
      v17 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v45);
      if (v17)
        goto LABEL_4;
    }
    else
    {
      v17 = *(uint64_t **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)&v18 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v3 + 16)).n128_u64[0];
      if (v17)
      {
LABEL_4:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v19 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
        }
        else
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_38;
          }
          v19 = (uint64_t *)*(id *)(v15 + 32);
        }
        v17 = v19;
      }
    }
    swift_bridgeObjectRelease((const char *)v15, v18);
    goto LABEL_10;
  }
  v17 = 0;
LABEL_10:
  static SFPlatform.visionOS.getter(v12);
  v20 = static SFPlatform.isPlatform(_:)(v14);
  v21 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v22 = v21(v14, v10);
  if ((v20 & 1) != 0)
  {
    v23 = 1;
  }
  else
  {
    static SFPlatform.macOS.getter(v22);
    v24 = static SFPlatform.isPlatform(_:)(v14);
    v21(v14, v10);
    if ((v24 & 1) != 0)
      v23 = 0;
    else
      v23 = *(unsigned __int8 *)(v3 + 24);
  }
  v25 = v53;
  v11 = *(_QWORD *)(v7 + 16);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v9, v53, v6);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6) == enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    v27 = *v9;
    v26 = (const char *)v9[1];
    if (*v9 == 0xD000000000000034 && v26 == (const char *)0x80000001006133A0)
    {
      swift_bridgeObjectRelease((const char *)0x80000001006133A0);
      v16 = v50;
      goto LABEL_29;
    }
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(*v9, v9[1], 0xD000000000000034, 0x80000001006133A0, 0);
    v16 = v50;
    if ((v28 & 1) != 0 || (v29 = *(const char **)(v3 + 16)) == 0)
    {
      swift_bridgeObjectRelease(v26);
      goto LABEL_29;
    }
    *(_QWORD *)&v30 = swift_bridgeObjectRetain(v26).n128_u64[0];
    swift_bridgeObjectRetain(v29, v30);
    v9 = (uint64_t *)sub_100354B10(v31, v27, (uint64_t)v26);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease_n(v26, 2);
    if (!v9)
    {
LABEL_29:
      v25 = v53;
      goto LABEL_30;
    }
    if (qword_1007B3F68 == -1)
    {
LABEL_24:
      v32 = type metadata accessor for Logger(0);
      sub_100221DF8(v32, (uint64_t)qword_1007BBBD8);
      v33 = v9;
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v49 = v34;
        v36 = (uint8_t *)swift_slowAlloc(12, -1);
        v47 = (uint64_t **)swift_slowAlloc(8, -1);
        v48 = v36;
        *(_DWORD *)v36 = 138412290;
        v46 = v36 + 4;
        v54 = v33;
        v37 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v46);
        v38 = v47;
        *v47 = v9;

        v39 = v49;
        v40 = v35;
        v41 = v48;
        _os_log_impl((void *)&_mh_execute_header, v49, v40, "Opening with chosen app %@", v48, 0xCu);
        v42 = sub_100008384(&qword_1007B4C30);
        v23 = 1;
        swift_arrayDestroy(v38, 1, v42);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v41, -1, -1);

      }
      else
      {

        v23 = 1;
      }
      v17 = v9;
      goto LABEL_29;
    }
LABEL_38:
    swift_once(&qword_1007B3F68, sub_100352988);
    goto LABEL_24;
  }
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  v16 = v50;
LABEL_30:
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v43 = (uint64_t)v51;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v51, v25, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
  v44 = v17;
  sub_100323EA0(v16, v17, v23, v52);

  sub_100223280(v43);
}

uint64_t sub_1003534D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for SDAirDropContentHandlerGenericFiles()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary35SDAirDropContentHandlerGenericFiles);
}

BOOL sub_10035351C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v7;

  v0 = type metadata accessor for SFPlatform(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter(v2);
  v5 = static SFPlatform.isPlatform(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (v5 & 1) == 0;
}

uint64_t sub_1003535A4()
{
  return sub_100352AEC() & 1;
}

uint64_t sub_1003535C8()
{
  return sub_100352A18() & 1;
}

uint64_t sub_1003535EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  result = swift_allocObject(v2, 25, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100353624(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BBC1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_100352BB0(a1);
}

uint64_t sub_100353674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_100352F00(a1, a2, a3);
}

void sub_100353694(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100353004(a1, a2, a3);
}

BOOL sub_1003536B4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) > 1uLL;
}

uint64_t sub_1003536C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 24) = static AirDropActor.shared;
  return swift_task_switch(sub_100353730, v2, 0);
}

uint64_t sub_100353730()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v0[4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()), "init");
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1007C53F8 + dword_1007C53F8);
  v1 = (_QWORD *)swift_task_alloc(unk_1007C53FC);
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1003537AC;
  return v3(v0[2]);
}

uint64_t sub_1003537AC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 40);
  v5 = *v2;
  *(_QWORD *)(v5 + 48) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_100353834, *(_QWORD *)(v5 + 24), 0);

  return (*(uint64_t (**)(_QWORD))(v5 + 8))(a1 & 1);
}

uint64_t sub_100353834()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10035386C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  const char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  const char *v46;
  const char *v47;
  uint64_t v48;
  uint64_t *v49;
  const char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSString v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  const char *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  __n128 v84;
  __n128 v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  const char *v98;
  const char *v99;
  unint64_t v100;
  char *v101;
  const char *v102;
  __n128 v103;
  uint64_t *v104;
  NSString v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  const char *v109;
  const char *v110;
  char *v111;
  unint64_t v112;
  double v113;
  uint64_t result;
  uint64_t *v115;
  uint64_t *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t **v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t **v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  const char *v153;
  char *v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  id v171;
  const char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  const char *v179;
  uint64_t *v180;
  uint64_t v181;
  char *v182;

  v3 = 0xD00000000000006ALL;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100008384(&qword_1007B5720);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v141 = (uint64_t **)((char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Date(0);
  __chkstk_darwin(v8);
  v140 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  __chkstk_darwin(v10);
  v137 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B5280);
  v142 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v147 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v157 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v156 = (uint64_t *)((char *)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v160 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v177 = (uint64_t *)((char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_100008384(&qword_1007B52B8);
  v174 = *(_QWORD *)(v21 - 8);
  v175 = v21;
  v22 = __chkstk_darwin(v21);
  v173 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v182 = (char *)&v136 - v24;
  v25 = sub_100008384(&qword_1007BBD28);
  v163 = *(_QWORD *)(v25 - 8);
  v164 = (char *)v25;
  v26 = __chkstk_darwin(v25);
  v161 = v27;
  v162 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v149 = (unint64_t)"openDestinationRequest";
  v165 = (char *)&v136 - v28;
  v176 = v18;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD000000000000016, 0x8000000100617190, v29, 0xD00000000000006ALL, 0x80000001006171B0, 140, (char *)&type metadata for () + 8, v18);
  v30 = *(_QWORD *)(v1 + 16);
  v146 = v15;
  v158 = v17;
  v145 = a1;
  v144 = v6;
  v143 = v12;
  if (!v30)
  {
    v34 = (const char *)_swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  if ((unint64_t)v30 >> 62)
  {
    if (v30 >= 0)
      v74 = v30 & 0xFFFFFFFFFFFFFF8;
    else
      v74 = v30;
    swift_bridgeObjectRetain((const char *)v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v74);
    if (v31)
      goto LABEL_4;
  }
  else
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v32 = swift_bridgeObjectRetain((const char *)v30).n128_u64[0];
    if (v31)
    {
LABEL_4:
      v155 = v31;
      if (v31 < 1)
      {
        __break(1u);
LABEL_42:
        swift_once(&qword_1007B3D98, sub_1002ACAEC);
        goto LABEL_40;
      }
      v33 = 0;
      v166 = v30 & 0xC000000000000001;
      v152 = enum case for SFAirDrop.ButtonConfiguration.text(_:);
      v151 = enum case for SFAirDropReceive.ItemDestination.customApp(_:);
      v150 = enum case for SFAirDrop.AcceptAction.single<A>(_:);
      v34 = (const char *)_swiftEmptyArrayStorage;
      v35 = v165;
      v36 = v155;
      v154 = v14;
      v153 = (const char *)v30;
      do
      {
        if (v166)
          v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v30);
        else
          v37 = *(id *)(v30 + 8 * v33 + 32);
        v38 = v37;
        v39 = objc_msgSend(v37, "bundleIdentifier");
        if (v39)
        {
          v40 = v39;
          v170 = v33;
          v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v43 = v42;

          v171 = v38;
          v44 = objc_msgSend(v38, "localizedName");
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v167 = v45;
          v47 = v46;

          v48 = sub_100008384(&qword_1007BA2B0);
          v169 = &v182[*(int *)(v48 + 48)];
          v49 = v177;
          *v177 = v45;
          v49[1] = (uint64_t)v47;
          v50 = v47;
          (*(void (**)(void))(v159 + 104))();
          v51 = v156;
          *v156 = v41;
          v51[1] = v43;
          v52 = v41;
          v168 = v41;
          v53 = v35;
          v54 = v43;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v157 + 104))(v51, v151, v176);
          v172 = v34;
          v55 = v162;
          v56 = v163;
          v57 = v53;
          v58 = v164;
          (*(void (**)(char *, char *, char *))(v163 + 16))(v162, v57, v164);
          v59 = *(unsigned __int8 *)(v56 + 80);
          v60 = (v59 + 48) & ~v59;
          v61 = (char *)swift_allocObject(&unk_1007238E0, v60 + v161, v59 | 7);
          *((_QWORD *)v61 + 2) = v167;
          *((_QWORD *)v61 + 3) = v50;
          *((_QWORD *)v61 + 4) = v52;
          *((_QWORD *)v61 + 5) = v54;
          (*(void (**)(char *, char *, char *))(v56 + 32))(&v61[v60], v55, v58);
          v62 = sub_100220D78(&qword_1007BBD30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
          v63 = sub_100220D78(&qword_1007BBD38, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
          v64 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
          swift_bridgeObjectRetain_n(v54, 2);
          swift_bridgeObjectRetain(v50);
          v135 = v63;
          v34 = v172;
          v65 = v182;
          v66 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)(v168, v54, v177, 0, 0, v51, sub_100354EB4, v61, v176, v62, v135, v64);
          UUID.init()(v66);
          v68 = v174;
          v67 = v175;
          (*(void (**)(char *, _QWORD, uint64_t))(v174 + 104))(v65, v150, v175);
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v173, v65, v67);
          if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
            v34 = (const char *)sub_1002280D4(0, *((_QWORD *)v34 + 2) + 1, 1, (unint64_t)v34);
          v70 = *((_QWORD *)v34 + 2);
          v69 = *((_QWORD *)v34 + 3);
          v14 = v154;
          v17 = v158;
          v36 = v155;
          if (v70 >= v69 >> 1)
            v34 = (const char *)sub_1002280D4(v69 > 1, v70 + 1, 1, (unint64_t)v34);
          *((_QWORD *)v34 + 2) = v70 + 1;
          v71 = v174;
          v72 = (unint64_t)&v34[((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
                                     + *(_QWORD *)(v174 + 72) * v70];
          v73 = v175;
          (*(void (**)(unint64_t, char *, uint64_t))(v174 + 32))(v72, v173, v175);

          (*(void (**)(char *, uint64_t))(v71 + 8))(v182, v73);
          v35 = v165;
          v30 = (uint64_t)v153;
          v33 = v170;
        }
        else
        {

        }
        ++v33;
      }
      while (v36 != v33);
      goto LABEL_23;
    }
  }
  v34 = (const char *)_swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease((const char *)v30, v32);
LABEL_24:
  v75 = String._bridgeToObjectiveC()();
  v77 = (id)SFLocalizedStringForKey(v75, v76);

  if (v77)
  {
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
    v80 = v79;

  }
  else
  {
    v78 = 0;
    v80 = 0;
  }
  v178 = v78;
  v179 = v80;
  v81 = sub_100008384(&qword_1007B54E0);
  v82 = v148;
  Optional.tryUnwrap(_:file:line:)(0xD000000000000013, 0x8000000100617220, 0xD00000000000006ALL, v149 | 0x8000000000000000, 157, v81);
  if (v82)
  {
    *(_QWORD *)&v83 = swift_bridgeObjectRelease(v34).n128_u64[0];
    v84 = swift_bridgeObjectRelease(v80, v83);
    return (*(uint64_t (**)(char *, char *, __n128))(v163 + 8))(v165, v164, v84);
  }
  v182 = 0;
  v172 = v34;
  v85 = swift_bridgeObjectRelease(v80);
  v86 = v181;
  v87 = v177;
  *v177 = (uint64_t)v180;
  v87[1] = v86;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, __n128))(v159 + 104))(v87, enum case for SFAirDrop.ButtonConfiguration.text(_:), v160, v85);
  v89 = v162;
  v88 = v163;
  v90 = v164;
  v171 = *(id *)(v163 + 16);
  ((void (*)(char *, char *, char *))v171)(v162, v165, v164);
  v91 = *(unsigned __int8 *)(v88 + 80);
  v92 = (v91 + 16) & ~v91;
  v175 = v91;
  v173 = (char *)(v91 | 7);
  v93 = swift_allocObject(&unk_100723890, v92 + v161, v91 | 7);
  v174 = *(_QWORD *)(v88 + 32);
  ((void (*)(uint64_t, char *, char *))v174)(v93 + v92, v89, v90);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x6C65636E6143, 0xE600000000000000, v87, 0, sub_100354D04, v93);
  v94 = String._bridgeToObjectiveC()();
  v96 = (id)SFLocalizedStringForKey(v94, v95);

  if (v96)
  {
    v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
    v99 = v98;

  }
  else
  {
    v97 = 0;
    v99 = 0;
  }
  v100 = v147;
  v101 = v182;
  v178 = v97;
  v179 = v99;
  Optional.tryUnwrap(_:file:line:)(0x706F7244726941, 0xE700000000000000, 0xD00000000000006ALL, v149 | 0x8000000000000000, 163, v81);
  v102 = v172;
  if (v101)
  {
    v103 = swift_bridgeObjectRelease(v99);
    (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v17, v146, v103);
    v84 = swift_bridgeObjectRelease(v102, v113);
    return (*(uint64_t (**)(char *, char *, __n128))(v163 + 8))(v165, v164, v84);
  }
  v182 = (char *)v81;
  swift_bridgeObjectRelease(v99);
  v104 = (uint64_t *)v181;
  v177 = v180;
  v105 = String._bridgeToObjectiveC()();
  v107 = (id)SFLocalizedStringForKey(v105, v106);

  v154 = v14;
  if (v107)
  {
    v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
    v110 = v109;

  }
  else
  {
    v108 = 0;
    v110 = 0;
  }
  v111 = v162;
  v178 = v108;
  v179 = v110;
  Optional.tryUnwrap(_:file:line:)(0xD000000000000012, 0x8000000100616C80, 0xD00000000000006ALL, v149 | 0x8000000000000000, 164, v182);
  v112 = v147;
  v182 = 0;
  v170 = ~v175;
  swift_bridgeObjectRelease(v110);
  v115 = v180;
  v116 = (uint64_t *)v181;
  v117 = v137;
  v119 = UUID.init()(v118);
  v120 = v140;
  static Date.now.getter(v119);
  v121 = sub_100008384(&qword_1007B5728);
  v122 = v141;
  v123 = (char *)v141 + *(int *)(v121 + 80);
  *v141 = v177;
  v122[1] = v104;
  v122[2] = v115;
  v122[3] = v116;
  v122[4] = (uint64_t *)v102;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v123, v158, v146);
  (*(void (**)(uint64_t **, _QWORD, uint64_t))(v138 + 104))(v122, enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:), v139);
  v124 = sub_100220D78(&qword_1007BBD30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v125 = sub_100220D78(&qword_1007BBD38, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v126 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)(v117, v120, v122, 0, v176, v124, v125, v126);
  v127 = type metadata accessor for TaskPriority(0);
  v15 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v144, 1, 1, v127);
  v128 = v111;
  v18 = (uint64_t)v111;
  v14 = v164;
  v17 = v165;
  ((void (*)(char *, char *, char *))v171)(v128, v165, v164);
  v3 = v112;
  if (qword_1007B3D98 != -1)
    goto LABEL_42;
LABEL_40:
  v129 = static AirDropActor.shared;
  v130 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v131 = (v175 + 32) & v170;
  v132 = swift_allocObject(&unk_1007238B8, v131 + v161, v173);
  *(_QWORD *)(v132 + 16) = v129;
  *(_QWORD *)(v132 + 24) = v130;
  ((void (*)(uint64_t, uint64_t, char *))v174)(v132 + v131, v18, v14);
  swift_retain(v129);
  v133 = sub_100252B04(v15, (uint64_t)&unk_1007BBD48, v132);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v158, v146);
  (*(void (**)(char *, char *))(v163 + 8))(v17, v14);
  v134 = v145;
  (*(void (**)(uint64_t, char *, uint64_t))(v142 + 32))(v145, v154, v143);
  result = sub_100008384(&qword_1007B6BF0);
  *(_QWORD *)(v134 + *(int *)(result + 52)) = v133;
  return result;
}

uint64_t sub_100354650(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_1007B3F68 != -1)
    swift_once(&qword_1007B3F68, sub_100352988);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007BBBD8);
  swift_bridgeObjectRetain_n(a3, 2);
  v11 = swift_bridgeObjectRetain_n(a5, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v19 = v15;
    *(_DWORD *)v14 = 136315394;
    swift_bridgeObjectRetain(a3);
    v18 = sub_100228BD8(a2, (unint64_t)a3, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v14 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain(a5);
    v18 = sub_100228BD8(a4, (unint64_t)a5, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v14 + 14);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "View destination chosen was %s [bundleID = %s]", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  v16 = sub_100008384(&qword_1007BBD28);
  return SFProgressContinuation.finish(with:)(a1, v16);
}

uint64_t sub_10035488C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1007B3F68 != -1)
    swift_once(&qword_1007B3F68, sub_100352988);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BBBD8);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "View destination chosen was 'Cancel', cancelling AirDrop", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = type metadata accessor for SFAirDropReceive.Failure(0);
  v6 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v7 = swift_allocError(v5, v6, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v8, enum case for SFAirDropReceive.Failure.declined(_:), v5);
  v9 = sub_100008384(&qword_1007BBD28);
  SFProgressContinuation.fail(with:)(v7, v9);
  return swift_errorRelease(v7);
}

uint64_t sub_1003549DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_100008384(&qword_1007BBD50);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100354A74, v7, 0);
}

uint64_t sub_100354A74()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_100008384(&qword_1007BBD28);
  SFProgressContinuation.task.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_100319024;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_100354AE8(uint64_t a1, uint64_t a2)
{
  return sub_100354EFC(a2);
}

uint64_t sub_100354AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_10035386C(a1);
}

void *sub_100354B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    do
    {
      v6 = 4;
      while (1)
      {
        v7 = (a1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
           : *(id *)(a1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, "bundleIdentifier");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease(a1);
            v17 = a3;
            goto LABEL_18;
          }
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
          swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
          {
            v17 = a1;
LABEL_18:
            swift_bridgeObjectRelease(v17);
            return v8;
          }
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      v18 = a3;
      if (a1 < 0)
        v19 = a1;
      else
        v19 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v20 = _CocoaArrayWrapper.endIndex.getter(v19);
      a3 = v18;
      v5 = v20;
    }
    while (v20);
  }
LABEL_24:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100354CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384(&qword_1007BBD28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100354D04()
{
  sub_100008384(&qword_1007BBD28);
  return sub_10035488C();
}

uint64_t sub_100354D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384(&qword_1007BBD28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100354DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007BBD28) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1007BBD44);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_1003549DC(a1, v5, v6, v7);
}

uint64_t sub_100354E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  __n128 v8;

  v1 = sub_100008384(&qword_1007BBD28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  *(_QWORD *)&v7 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 24)).n128_u64[0];
  v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 40), v7);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v8);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100354EB4(uint64_t a1)
{
  uint64_t v1;

  sub_100008384(&qword_1007BBD28);
  return sub_100354650(a1, *(_QWORD *)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(const char **)(v1 + 40));
}

uint64_t sub_100354EFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v17;
  uint64_t v18;

  v2 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v18 - v8;
  v10 = SFFilesAppAvailable(v7);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, a1, v2);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  v11(v6, (uint64_t)v9, v2);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v12 != enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    if (v12 != enum case for SFAirDropReceive.ItemDestination.noItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v15 = 1;
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
  v13 = *(_QWORD *)v6;
  v14 = *((_QWORD *)v6 + 1);
  if (v13 == 0xD000000000000034 && v14 == 0x80000001006133A0)
  {
    swift_bridgeObjectRelease(0x80000001006133A0);
    v15 = 0;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0xD000000000000034, 0x80000001006133A0, 0);
    swift_bridgeObjectRelease(v14);
    v15 = v17 ^ 1;
  }
LABEL_8:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v15 & 1;
}

uint64_t sub_10035509C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BBD58);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BBD58);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10035512C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10035521C, static AirDropActor.shared, 0);
}

uint64_t sub_10035521C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(_QWORD, unint64_t, _QWORD);
  uint64_t v23;
  const char *v24;
  const char *v25;
  NSString v26;
  NSString v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *type;
  uint64_t v42;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v3, v2, v4, v8);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v15);
    if (v14)
    {
      v17 = 0;
    }
    else
    {
      v18 = SFAirDropReceive.AskRequest.files.getter(v16);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        type = (const char *)v18;
        v20 = *(_QWORD *)(v1 + 80);
        v21 = v18 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        v42 = *(_QWORD *)(v20 + 72);
        v22 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v20 + 16);
        while (1)
        {
          v23 = v22(*(_QWORD *)(v1 + 88), v21, *(_QWORD *)(v1 + 72));
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v23);
          v25 = v24;
          v26 = String._bridgeToObjectiveC()();
          v27 = objc_msgSend(v26, "pathExtension", swift_bridgeObjectRelease(v25).n128_f64[0]);

          if (!v27)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0);
            v29 = v28;
            v27 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v29);
          }
          v30 = *(_QWORD *)(v1 + 88);
          v31 = *(_QWORD *)(v1 + 72);
          v32 = SFIsNote(v27);

          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, v31);
          if ((v32 & 1) == 0)
            break;
          v21 += v42;
          if (!--v19)
          {
            swift_bridgeObjectRelease(type);
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease(type);
        v17 = 0;
      }
      else
      {
        swift_bridgeObjectRelease((const char *)v18);
LABEL_13:
        v33 = objc_allocWithZone((Class)LSApplicationRecord);
        v34 = sub_100528FF4(0xD000000000000015, 0x80000001006172A0, 1);
        v35 = *(_QWORD *)(v1 + 40);
        v36 = *(void **)(v35 + 16);
        *(_QWORD *)(v35 + 16) = v34;

        v17 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    v17 = 0;
  }
  v37 = *(_QWORD *)(v1 + 112);
  v38 = *(_QWORD *)(v1 + 88);
  v39 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v17);
}

uint64_t type metadata accessor for SDAirDropContentHandlerNotes()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary28SDAirDropContentHandlerNotes);
}

uint64_t sub_10035571C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerNotes();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100355750(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BBD9C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_10035512C(a1);
}

void sub_1003557A4(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 1163153230;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xE400000000000000).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 1163153230;
  v10._object = (void *)0xE400000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE400000000000000);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003559D8(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  id v34;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v7 = a3;
    else
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a3);
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = type metadata accessor for SDAirDropSendConnection(0);
    v10 = sub_100220D78(&qword_1007BA4F0, type metadata accessor for SDAirDropSendConnection, (uint64_t)&protocol conformance descriptor for NSObject);
    v11 = Set.Iterator.init(_cocoa:)(v33, v8, v9, v10);
    v5 = v33[0];
    v31 = v33[1];
    v12 = v33[2];
    v13 = v33[3];
    v14 = v33[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v31 = a3 + 56;
    v16 = ~v15;
    v17 = -v15;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v14 = v18 & *(_QWORD *)(a3 + 56);
    v11 = (_QWORD *)swift_bridgeObjectRetain((const char *)a3);
    v12 = v16;
    v13 = 0;
  }
  v30 = (unint64_t)(v12 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v19 = __CocoaSet.Iterator.next()(v11);
  if (v19)
  {
    v20 = v19;
    v32 = v19;
    v21 = type metadata accessor for SDAirDropSendConnection(0);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = v34;
    swift_unknownObjectRelease(v20);
    v23 = v13;
    v24 = v14;
    while (v22)
    {
      v34 = v22;
      v28 = a1(&v34);

      if (v4 || (v28 & 1) != 0)
        break;
      v13 = v23;
      v14 = v24;
      if (v5 < 0)
        goto LABEL_11;
LABEL_14:
      if (v14)
      {
        v24 = (v14 - 1) & v14;
        v25 = __clz(__rbit64(v14)) | (v13 << 6);
        v23 = v13;
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          return;
        }
        if (v23 >= v30)
          break;
        v26 = *(_QWORD *)(v31 + 8 * v23);
        if (!v26)
        {
          v27 = v13 + 2;
          if (v13 + 2 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
            goto LABEL_25;
          v27 = v13 + 3;
          if (v13 + 3 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
            goto LABEL_25;
          v27 = v13 + 4;
          if (v13 + 4 >= v30)
            break;
          v26 = *(_QWORD *)(v31 + 8 * v27);
          if (v26)
          {
LABEL_25:
            v23 = v27;
          }
          else
          {
            v23 = v13 + 5;
            if (v13 + 5 >= v30)
              break;
            v26 = *(_QWORD *)(v31 + 8 * v23);
            if (!v26)
            {
              v29 = v13 + 6;
              while (v30 != v29)
              {
                v26 = *(_QWORD *)(v31 + 8 * v29++);
                if (v26)
                {
                  v23 = v29 - 1;
                  goto LABEL_26;
                }
              }
              break;
            }
          }
        }
LABEL_26:
        v24 = (v26 - 1) & v26;
        v25 = __clz(__rbit64(v26)) + (v23 << 6);
      }
      v22 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v25);
    }
  }
  sub_10022E5B4(v5);
}

uint64_t sub_100355CE8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  char v18;
  char v19;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(a3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1))
      break;
    if (v12 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v10)
        goto LABEL_27;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 2;
        if (v12 + 2 >= v10)
          goto LABEL_27;
        v16 = *(_QWORD *)(v6 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 3;
          if (v12 + 3 >= v10)
            goto LABEL_27;
          v16 = *(_QWORD *)(v6 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release(a3);
              v18 = 0;
              return v18 & 1;
            }
            v16 = *(_QWORD *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_30;
                if (v12 >= v10)
                  goto LABEL_27;
                v16 = *(_QWORD *)(v6 + 8 * v12);
                ++v17;
                if (v16)
                  goto LABEL_18;
              }
            }
          }
        }
      }
      v12 = v17;
    }
LABEL_18:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    v19 = *(_BYTE *)(*(_QWORD *)(a3 + 56) + v14);
    result = a1(&v19);
    if (v3)
    {
      swift_release(a3);
      return v18 & 1;
    }
    if ((result & 1) != 0)
    {
      swift_release(a3);
      v18 = 1;
      return v18 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100355E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BBE60);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BBE60);
  if (qword_1007B3E38 != -1)
    swift_once(&qword_1007B3E38, sub_1002E9DE4);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100355F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  id v38;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;

  v54 = sub_100008384(&qword_1007BC068);
  __chkstk_darwin(v54);
  v51 = (char *)&v40 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100008384(&qword_1007BC070);
  v52 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  __chkstk_darwin(v1);
  v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for SFTempPairingSenderStateUpdate(0);
  __chkstk_darwin(v49);
  v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100008384(&qword_1007BC078);
  __chkstk_darwin(v47);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100008384(&qword_1007BC080);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SFTempPairingStateUpdate(0);
  __chkstk_darwin(v41);
  v40 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1002741DC();
  static DispatchQoS.userInitiated.getter(v17);
  v55 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v19, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x8000000100617380, v16, v13, v10, 0);
  v22 = v45;
  *(_QWORD *)(v45 + 16) = v21;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client) = 0;
  v23 = v40;
  SFTempPairingStateUpdate.init()(v21);
  v24 = sub_100008384(&qword_1007BC088);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = CurrentValueSubject.init(_:)(v23);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdateSequence) = v25;
  v55 = (_QWORD *)v25;
  v26 = sub_10026E2FC(&qword_1007BC090, &qword_1007BC088, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v27 = v43;
  Publisher<>.values.getter(v24, v26);
  v28 = sub_10026E2FC(&qword_1007BC098, &qword_1007BC078, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  v29 = v42;
  SFNoThrowAsyncSequence.init<A>(_:)(v27, v41, v47, v28);
  v30 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates, v29, v46);
  v31 = v48;
  SFTempPairingSenderStateUpdate.init()(v30);
  v32 = sub_100008384(&qword_1007BC0A0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = CurrentValueSubject.init(_:)(v31);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence) = v33;
  v55 = (_QWORD *)v33;
  v34 = sub_10026E2FC(&qword_1007BC0A8, &qword_1007BC0A0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v35 = v51;
  Publisher<>.values.getter(v32, v34);
  v36 = sub_10026E2FC(&qword_1007BC0B0, &qword_1007BC068, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  v37 = v50;
  SFNoThrowAsyncSequence.init<A>(_:)(v35, v49, v54, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates, v37, v53);
  v38 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v38, "addObserver:selector:name:object:", v22, "handleRapportIdentitiesChanged", off_1007B39B0, 0);

  return v22;
}

void sub_10035645C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)();
  uint64_t v22;
  uint64_t v23;
  NSObject *oslog;

  v3 = v2;
  type metadata accessor for SFAirDropUserDefaults(0, a2);
  v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  v5 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if ((v5 & 1) != 0)
  {
    v6 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client;
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client))
    {
      v14 = *(void **)(v3 + 16);
      v15 = objc_allocWithZone((Class)type metadata accessor for SDTempPairingClient(0));
      v16 = sub_10034B2E0(v14);
      v17 = *(void **)(v3 + v6);
      *(_QWORD *)(v3 + v6) = v16;
      oslog = v16;

      v18 = swift_allocObject(&unk_1007239B0, 24, 7);
      swift_weakInit(v18 + 16, v3);
      v19 = swift_allocObject(&unk_1007239D8, 24, 7);
      swift_unknownObjectWeakInit(v19 + 16, oslog);
      v20 = swift_allocObject(&unk_100723A00, 32, 7);
      *(_QWORD *)(v20 + 16) = v18;
      *(_QWORD *)(v20 + 24) = v19;
      v21 = (void (**)())((char *)oslog + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      v23 = *(uint64_t *)((char *)&oslog->isa + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      v22 = *(uint64_t *)((char *)&oslog[1].isa + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      *v21 = sub_100357818;
      v21[1] = (void (*)())v20;
      sub_1002845F4(v23, v22);
      sub_10034B61C();
      sub_100356FE0((uint64_t)oslog);
      goto LABEL_13;
    }
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      v11 = "Attempted to start browsing but already browsing";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, v11, v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
  }
  else
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v13);
    v9 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      v11 = "Ask to AirDrop not enabled";
      goto LABEL_11;
    }
  }
LABEL_13:

}

void sub_1003566C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = a2 + 16;
    swift_beginAccess(v6, &v10, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v6, v7);
    if (v8)
    {
      v9 = (void *)v8;
      sub_100356FE0(v8);
      swift_release(v5);

    }
    else
    {
      swift_release(v5);
    }
  }
}

void sub_100356754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  const char *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *oslog;

  v3 = v2;
  type metadata accessor for SFAirDropUserDefaults(0, a2);
  v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  v5 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if ((v5 & 1) == 0)
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v13);
    v9 = static os_log_type_t.default.getter(oslog);
    if (!os_log_type_enabled(oslog, v9))
      goto LABEL_12;
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    v11 = "Ask to AirDrop not enabled";
    goto LABEL_11;
  }
  v6 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server))
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(oslog, v9))
      goto LABEL_12;
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    v11 = "Attempted to start advertising but already advertising";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, v11, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
LABEL_12:

    return;
  }
  v14 = (const char *)sub_1003575CC();
  v16 = v15;
  v17 = *(void **)(v3 + 16);
  v18 = type metadata accessor for SDTempPairingServer();
  swift_allocObject(v18, 80, 7);
  v19 = sub_100484E0C(v14, v16, v17);
  v20 = *(_QWORD *)(v3 + v6);
  *(_QWORD *)(v3 + v6) = v19;
  swift_release(v20);
  v21 = *(_QWORD *)(v3 + v6);
  if (v21)
  {
    v22 = swift_allocObject(&unk_1007239B0, 24, 7);
    swift_weakInit(v22 + 16, v3);
    v23 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v21 + 24) = sub_100357820;
    *(_QWORD *)(v21 + 32) = v22;
    sub_1002845F4(v23, v24);
    v25 = *(_QWORD *)(v3 + v6);
    if (v25)
    {
      swift_retain(*(_QWORD *)(v3 + v6));
      sub_100484974();
      swift_release(v25);
    }
  }
}

uint64_t sub_100356B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_100356DC4();
    return swift_release(v3);
  }
  return result;
}

void sub_100356BCC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1003575CC();
    v5 = v4;
    sub_10034CB0C((uint64_t)v3, v4);

    swift_bridgeObjectRelease(v5);
  }
  else
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempting to connect while not browsing.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
}

void sub_100356CD4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    oslog = v1;
    sub_10034D37C();
  }
  else
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007BBE60);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Attempting to disconnect while not browsing.", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }
  }

}

uint64_t sub_100356DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v1 = v0;
  v2 = sub_100008384(&qword_1007BC068);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007BC070);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFTempPairingSenderStateUpdate(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence);
  LOBYTE(v26[0]) = 1;
  swift_retain(v12);
  CurrentValueSubject.send(completion:)(v26);
  swift_release(v12);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0;
  v14 = swift_release(v13);
  SFTempPairingSenderStateUpdate.init()(v14);
  v15 = sub_100008384(&qword_1007BC0A0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = CurrentValueSubject.init(_:)(v10);
  v17 = *(_QWORD *)(v1 + v11);
  *(_QWORD *)(v1 + v11) = v16;
  swift_release(v17);
  v26[0] = *(_QWORD *)(v1 + v11);
  v18 = sub_10026E2FC(&qword_1007BC0A8, &qword_1007BC0A0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v15, v18);
  v19 = sub_10026E2FC(&qword_1007BC0B0, &qword_1007BC068, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  SFNoThrowAsyncSequence.init<A>(_:)(v4, v8, v2, v19);
  v20 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  v21 = swift_beginAccess(v20, v26, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v24 + 40))(v20, v7, v25, v21);
  return swift_endAccess(v26);
}

uint64_t sub_100356FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const char **v15;
  double v16;
  const char *v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  __n128 v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  uint64_t *v39;
  uint64_t v40;
  _BYTE v41[24];
  uint64_t v42[4];
  _BYTE v43[24];

  v2 = v1;
  v4 = type metadata accessor for SFTempPairingStateUpdate(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v34 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v34 - v13;
  SFTempPairingStateUpdate.init()(v12);
  sub_10034ADC0();
  SFTempPairingStateUpdate.nearbyDeviceNames.setter();
  sub_100351568();
  SFTempPairingStateUpdate.connectedDeviceNames.setter();
  SFTempPairingStateUpdate.connectionState.setter(*(_QWORD *)(a1
                                                            + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState));
  v15 = (const char **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(_QWORD *)&v16 = swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier, v43, 0, 0).n128_u64[0];
  v17 = *v15;
  LOBYTE(v42[0]) = 1;
  v39 = v42;
  swift_bridgeObjectRetain(v17, v16);
  LOBYTE(a1) = sub_100355CE8((uint64_t (*)(char *))sub_1003575B0, (uint64_t)v38, (uint64_t)v17);
  v18 = swift_bridgeObjectRelease(v17);
  SFTempPairingStateUpdate.isNearbyDeviceClose.setter(a1 & 1, v18);
  v19 = sub_1003575CC();
  SFTempPairingStateUpdate.sharingName.setter(v19);
  if (qword_1007B3F78 != -1)
    swift_once(&qword_1007B3F78, sub_100355E88);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100221DF8(v20, (uint64_t)qword_1007BBE60);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v37 = v2;
    v24 = v5;
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = swift_slowAlloc(32, -1);
    v42[0] = v36;
    *(_DWORD *)v25 = 136315138;
    v35 = v25 + 4;
    v26 = swift_beginAccess(v14, v41, 0, 0);
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
    v27(v11, v14, v4, v26);
    ((void (*)(char *, char *, uint64_t))v27)(v8, v11, v4);
    v28 = String.init<A>(describing:)(v8, v4);
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v4);
    v40 = sub_100228BD8(v28, v30, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v35);
    v31 = (const char *)v30;
    v5 = v24;
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Updating pairing state: %s", v25, 0xCu);
    v32 = v36;
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  swift_beginAccess(v14, v42, 0, 0);
  CurrentValueSubject.send(_:)(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

uint64_t sub_10035737C()
{
  id *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates;
  v2 = sub_100008384(&qword_1007BC080);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  v4 = sub_100008384(&qword_1007BC070);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdateSequence));
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence));
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server));

  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100357444()
{
  return type metadata accessor for SDTempPairingService(0);
}

uint64_t type metadata accessor for SDTempPairingService(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BBED0;
  if (!qword_1007BBED0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDTempPairingService);
  return result;
}

void sub_100357488(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for () + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100357564(319, &qword_1007BBEE0, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_100357564(319, (unint64_t *)&unk_1007BBEE8, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = "\b";
      v6[7] = "\b";
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

void sub_100357564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for SFNoThrowAsyncSequence(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

BOOL sub_1003575B0(unsigned __int8 *a1)
{
  uint64_t v1;

  return ((*a1 ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

id sub_1003575CC()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v0 = (void *)objc_opt_self(SDStatusMonitor);
  result = objc_msgSend(v0, "sharedMonitor");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "meCard");

    if (v3)
    {
      v4 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "stringFromContact:style:", v3, 0);
      if (v4)
      {
        v5 = v4;
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

        return (id)v6;
      }

    }
    result = objc_msgSend(v0, "sharedMonitor");
    if (result)
    {
      v7 = result;
      v8 = objc_msgSend(result, "computerName");

      if (v8)
      {
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

      }
      else
      {
        if (qword_1007B3F78 != -1)
          swift_once(&qword_1007B3F78, sub_100355E88);
        v9 = type metadata accessor for Logger(0);
        v10 = sub_100221DF8(v9, (uint64_t)qword_1007BBE60);
        v11 = Logger.logObject.getter(v10);
        v12 = static os_log_type_t.error.getter(v11);
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Could not find local sharing name.", v13, 2u);
          swift_slowDealloc(v13, -1, -1);
        }

        return 0;
      }
      return (id)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003577A4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003577C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003577EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100357818()
{
  uint64_t v0;

  sub_1003566C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100357820()
{
  uint64_t v0;

  return sub_100356B78(v0);
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerUnsupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary42SDAirDropPlatformHapticsManagerUnsupported);
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary38SDAirDropPlatformHapticsManagerFactory);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHapticState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1003578B4 + 4 * byte_1005D3C95[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1003578E8 + 4 * byte_1005D3C90[v4]))();
}

uint64_t sub_1003578E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003578F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003578F8);
  return result;
}

uint64_t sub_100357904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035790CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100357910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100357918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHapticState()
{
  return &type metadata for SDAirDropHapticState;
}

unint64_t sub_100357938()
{
  unint64_t result;

  result = qword_1007BC200;
  if (!qword_1007BC200)
  {
    result = swift_getWitnessTable(&unk_1005D3D88, &type metadata for SDAirDropHapticState);
    atomic_store(result, (unint64_t *)&qword_1007BC200);
  }
  return result;
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(char a1)
{
  id v2;
  NSString v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  NSString v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)SFUserAlert), "init");
  v3 = String._bridgeToObjectiveC()();
  v5 = (id)SFLocalizedStringForKey(v3, v4);

  if (v5)
  {
    objc_msgSend(v2, "setTitle:", v5);

    if ((a1 & 1) != 0)
    {
      v6 = String._bridgeToObjectiveC()();
      v7 = String._bridgeToObjectiveC()();
      v8 = (id)SFLocalizedStringForKeyInStringsFileNamed(v6, v7);

      if (!v8)
        goto LABEL_7;
    }
    else
    {
      v9 = String._bridgeToObjectiveC()();
      v8 = (id)SFLocalizedStringForKey(v9, v10);

      if (!v8)
      {
LABEL_7:
        objc_msgSend(v2, "setMessage:", v8);

        objc_msgSend(v2, "setHasDefaultButton:", 1);
        return;
      }
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    goto LABEL_7;
  }
  __break(1u);
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0()
{
  id v0;
  NSString v1;
  uint64_t v2;
  id v3;
  NSString v4;
  uint64_t v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)SFUserAlert), "init");
  v1 = String._bridgeToObjectiveC()();
  v3 = (id)SFLocalizedStringForKey(v1, v2);

  if (v3)
  {
    objc_msgSend(v0, "setTitle:", v3);

    v4 = String._bridgeToObjectiveC()();
    v6 = (id)SFLocalizedStringForKey(v4, v5);

    objc_msgSend(v0, "setMessage:", v6);
    objc_msgSend(v0, "setHasDefaultButton:", 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100357C04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Swift::String v30;
  unint64_t v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  unint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  unint64_t v47;

  v1 = type metadata accessor for KeyDataFormatStyle(0);
  v36 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IDSIdentifierFormatStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(126);
  v38 = v46;
  v39 = v47;
  v8._countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x8000000100617520;
  String.append(_:)(v8);
  sub_10022E718((uint64_t)(v0 + 2), (uint64_t)&v46, &qword_1007B54E0);
  sub_10022E718((uint64_t)&v46, (uint64_t)v45, &qword_1007B54E0);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v45, &type metadata for String, &protocol witness table for String);
  v9._countAndFlagsBits = 0x20644D202C22;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  sub_10022E718((uint64_t)(v0 + 6), (uint64_t)v45, &qword_1007B54E0);
  sub_10022E718((uint64_t)v45, (uint64_t)&v43, &qword_1007B54E0);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v43, &type metadata for String, &protocol witness table for String);
  v10._countAndFlagsBits = 0x2720534449202CLL;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  v12 = v0[12];
  v11 = v0[13];
  if (v11)
  {
    v41 = v0[12];
    v42 = v11;
    v13 = swift_bridgeObjectRetain(v11);
    static FormatStyle<>.idsID.getter(v13);
    v14 = sub_100220D78(&qword_1007BC210, (uint64_t (*)(uint64_t))&type metadata accessor for IDSIdentifierFormatStyle, (uint64_t)&protocol conformance descriptor for IDSIdentifierFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v7, &type metadata for String, v4, &protocol witness table for String, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease(v42);
    v12 = v43;
    v15 = v44;
  }
  else
  {
    v15 = 0;
  }
  v43 = v12;
  v44 = v15;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v43, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x204B5249202C27;
  v16._object = (void *)0xE700000000000000;
  String.append(_:)(v16);
  v17 = v0[9];
  if (v17 >> 60 == 15)
  {
    v18 = 0;
    v19 = 0;
  }
  else
  {
    v41 = v0[8];
    v42 = v17;
    v20 = sub_10022E4A8(v41, v17);
    static FormatStyle<>.irk.getter(v20);
    v21 = sub_100358394();
    v22 = sub_100220D78(&qword_1007BC208, (uint64_t (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle, (uint64_t)&protocol conformance descriptor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v3, &type metadata for Data, v1, v21, v22);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v1);
    sub_100225AB4(v41, v42);
    v18 = v43;
    v19 = v44;
  }
  v43 = v18;
  v44 = v19;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v43, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v19);
  v23._countAndFlagsBits = 0x204B50202CLL;
  v23._object = (void *)0xE500000000000000;
  String.append(_:)(v23);
  v24 = v0[11];
  if (v24 >> 60 == 15)
  {
    v25 = 0;
    v26 = 0;
  }
  else
  {
    v41 = v0[10];
    v42 = v24;
    v27 = sub_10022E4A8(v41, v24);
    static FormatStyle<>.publicKey.getter(v27);
    v28 = sub_100358394();
    v29 = sub_100220D78(&qword_1007BC208, (uint64_t (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle, (uint64_t)&protocol conformance descriptor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v3, &type metadata for Data, v1, v28, v29);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v1);
    sub_100225AB4(v41, v42);
    v25 = v43;
    v26 = v44;
  }
  v43 = v25;
  v44 = v26;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v43, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v26);
  v30._object = (void *)0x8000000100617540;
  v30._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v30);
  sub_10022E718((uint64_t)v0, (uint64_t)&v43, &qword_1007B5220);
  sub_10022E718((uint64_t)&v43, (uint64_t)&v41, &qword_1007B5220);
  v31 = sub_100287B60();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v41, &type metadata for Data, v31);
  v32._countAndFlagsBits = 0xD000000000000017;
  v32._object = (void *)0x8000000100617560;
  String.append(_:)(v32);
  sub_10022E718((uint64_t)(v0 + 4), (uint64_t)&v41, &qword_1007B5220);
  sub_10022E718((uint64_t)&v41, (uint64_t)v40, &qword_1007B5220);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, &type metadata for Data, v31);
  v33._object = (void *)0x8000000100617580;
  v33._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v33);
  sub_10022E718((uint64_t)(v0 + 16), (uint64_t)v40, &qword_1007B54E0);
  sub_10022E718((uint64_t)v40, (uint64_t)v37, &qword_1007B54E0);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v37, &type metadata for String, &protocol witness table for String);
  return v38;
}

Swift::Int sub_100358108()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD000000000000010, 0x8000000100611310);
  return Hasher._finalize()();
}

uint64_t sub_10035815C(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000010, 0x8000000100611310);
}

Swift::Int sub_100358178()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD000000000000010, 0x8000000100611310);
  return Hasher._finalize()();
}

uint64_t sub_1003581C8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071C9B8, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100358218(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000100611310;
}

unint64_t sub_100358238()
{
  return 0xD000000000000010;
}

uint64_t sub_100358254@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071C9F0, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

void sub_1003582A8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1003582B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003595C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003582DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003595C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100358304(uint64_t a1, uint64_t a2)
{
  Swift::String v4;
  unint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  unint64_t v9;

  v8 = 0;
  v9 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  v4._object = (void *)0x80000001006174F0;
  v4._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v4);
  v7[0] = a1;
  v7[1] = a2;
  v5 = sub_100287B60();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v7, &type metadata for Data, v5);
  return v8;
}

unint64_t sub_100358394()
{
  unint64_t result;

  result = qword_1007C4220;
  if (!qword_1007C4220)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1007C4220);
  }
  return result;
}

__n128 _s16DiscoverResponseVwxx(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double v6;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)a1, v2);
  swift_bridgeObjectRelease(*(const char **)(a1 + 24));
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)(a1 + 32), v3);
  swift_bridgeObjectRelease(*(const char **)(a1 + 56));
  v4 = *(_QWORD *)(a1 + 72);
  if (v4 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)(a1 + 64), v4);
  v5 = *(_QWORD *)(a1 + 88);
  if (v5 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)(a1 + 80), v5);
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + 104)).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + 136), v6);
}

uint64_t _s16DiscoverResponseVwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  const char *v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  const char *v10;
  _OWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  double v20;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_10022E4A8(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = (const char *)a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2 + 4;
  v8 = a2[5];
  swift_bridgeObjectRetain(v6);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_10022E4A8(v9, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
  }
  v10 = (const char *)a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  v11 = a2 + 8;
  v12 = a2[9];
  swift_bridgeObjectRetain(v10);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *v11;
  }
  else
  {
    v13 = *(_QWORD *)v11;
    sub_10022E4A8(v13, v12);
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v12;
  }
  v14 = a2 + 10;
  v15 = a2[11];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_10022E4A8(*v14, a2[11]);
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v15;
  }
  v17 = (const char *)a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  v18 = a2[16];
  v19 = (const char *)a2[17];
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)&v20 = swift_bridgeObjectRetain(v17).n128_u64[0];
  swift_bridgeObjectRetain(v19, v20);
  return a1;
}

uint64_t _s16DiscoverResponseVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const char *v9;
  const char *v10;
  double v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  const char *v19;
  double v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  const char *v34;
  double v35;
  double v36;
  uint64_t v37;
  const char *v38;
  const char *v39;
  double v40;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      v5 = *(_QWORD *)a2;
      sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_10023D5F8(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)a2;
  sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v4;
  sub_100225AB4(v7, v8);
LABEL_8:
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(const char **)(a2 + 24);
  v10 = *(const char **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)&v11 = swift_bridgeObjectRetain(v9).n128_u64[0];
  swift_bridgeObjectRelease(v10, v11);
  v12 = (uint64_t *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      v14 = *v12;
      sub_10022E4A8(*v12, *(_QWORD *)(a2 + 40));
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v13;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
    sub_10023D5F8(a1 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_15;
  }
  v15 = *v12;
  sub_10022E4A8(*v12, *(_QWORD *)(a2 + 40));
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v13;
  sub_100225AB4(v16, v17);
LABEL_15:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v18 = *(const char **)(a2 + 56);
  v19 = *(const char **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v18;
  *(_QWORD *)&v20 = swift_bridgeObjectRetain(v18).n128_u64[0];
  swift_bridgeObjectRelease(v19, v20);
  v21 = (uint64_t *)(a2 + 64);
  v22 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      v23 = *v21;
      sub_10022E4A8(*v21, *(_QWORD *)(a2 + 72));
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v22;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v22 >> 60 == 15)
  {
    sub_10023D5F8(a1 + 64);
LABEL_20:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v21;
    goto LABEL_22;
  }
  v24 = *v21;
  sub_10022E4A8(*v21, *(_QWORD *)(a2 + 72));
  v25 = *(_QWORD *)(a1 + 64);
  v26 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v24;
  *(_QWORD *)(a1 + 72) = v22;
  sub_100225AB4(v25, v26);
LABEL_22:
  v27 = (uint64_t *)(a2 + 80);
  v28 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) >> 60 != 15)
  {
    if (v28 >> 60 != 15)
    {
      v30 = *v27;
      sub_10022E4A8(*v27, *(_QWORD *)(a2 + 88));
      v31 = *(_QWORD *)(a1 + 80);
      v32 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = v30;
      *(_QWORD *)(a1 + 88) = v28;
      sub_100225AB4(v31, v32);
      goto LABEL_29;
    }
    sub_10023D5F8(a1 + 80);
    goto LABEL_27;
  }
  if (v28 >> 60 == 15)
  {
LABEL_27:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v27;
    goto LABEL_29;
  }
  v29 = *v27;
  sub_10022E4A8(*v27, *(_QWORD *)(a2 + 88));
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v28;
LABEL_29:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v33 = *(const char **)(a2 + 104);
  v34 = *(const char **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v33;
  *(_QWORD *)&v35 = swift_bridgeObjectRetain(v33).n128_u64[0];
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v34, v35).n128_u64[0];
  v37 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v37;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v38 = *(const char **)(a2 + 136);
  v39 = *(const char **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)&v40 = swift_bridgeObjectRetain(v38, v36).n128_u64[0];
  swift_bridgeObjectRelease(v39, v40);
  return a1;
}

__n128 _s16DiscoverResponseVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s16DiscoverResponseVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  double v25;
  uint64_t v26;
  const char *v27;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_10023D5F8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_100225AB4(v6, v4);
LABEL_6:
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(const char **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = (_OWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v9;
    goto LABEL_11;
  }
  v11 = *(_QWORD *)(a2 + 40);
  if (v11 >> 60 == 15)
  {
    sub_10023D5F8(a1 + 32);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 40) = v11;
  sub_100225AB4(v12, v10);
LABEL_11:
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(const char **)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = (_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  if (v16 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *v15;
    goto LABEL_16;
  }
  v17 = *(_QWORD *)(a2 + 72);
  if (v17 >> 60 == 15)
  {
    sub_10023D5F8(a1 + 64);
    goto LABEL_14;
  }
  v18 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)v15;
  *(_QWORD *)(a1 + 72) = v17;
  sub_100225AB4(v18, v16);
LABEL_16:
  v19 = (_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  if (v20 >> 60 != 15)
  {
    v21 = *(_QWORD *)(a2 + 88);
    if (v21 >> 60 != 15)
    {
      v22 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 80) = *v19;
      *(_QWORD *)(a1 + 88) = v21;
      sub_100225AB4(v22, v20);
      goto LABEL_21;
    }
    sub_10023D5F8(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)v19;
LABEL_21:
  v23 = *(_QWORD *)(a2 + 104);
  v24 = *(const char **)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v23;
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v24).n128_u64[0];
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v26 = *(_QWORD *)(a2 + 136);
  v27 = *(const char **)(a1 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v26;
  swift_bridgeObjectRelease(v27, v25);
  return a1;
}

uint64_t _s16DiscoverResponseVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s16DiscoverResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *_s16DiscoverResponseVMa()
{
  return &_s16DiscoverResponseVN;
}

uint64_t sub_100358B1C(uint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_10022E4A8(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *_s15DiscoverRequestVwca(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_100225AB4(v7, v8);
      return a1;
    }
    sub_10023D5F8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v5 = *(_QWORD *)a2;
  sub_10022E4A8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *_s15DiscoverRequestVwta(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_100225AB4(v6, v4);
      return a1;
    }
    sub_10023D5F8((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s15DiscoverRequestVwet(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s15DiscoverRequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15DiscoverRequestVMa()
{
  return &_s15DiscoverRequestVN;
}

uint64_t sub_100358D34(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v6 = sub_100008384(&qword_1007BC228);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_10023A834(a1, v10);
  v12 = sub_1003595C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s15DiscoverRequestV10CodingKeysON, &_s15DiscoverRequestV10CodingKeysON, v12, v10, v11);
  v16[0] = a2;
  v16[1] = a3;
  v13 = sub_100285DE4();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v16, v14, v6, &type metadata for Data, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

_QWORD *sub_100358E38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_100359608(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100358E60(_QWORD *a1)
{
  uint64_t *v1;

  return sub_100358D34(a1, *v1, v1[1]);
}

uint64_t sub_100358E78()
{
  uint64_t *v0;

  return sub_100358304(*v0, v0[1]);
}

uint64_t sub_100358E80(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100358EBC + 4 * byte_1005D3DB0[a1]))(0xD000000000000014, 0x80000001006113B0);
}

uint64_t sub_100358EBC()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_100358F4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100358F88 + 4 * byte_1005D3DB9[a1]))(0xD000000000000014, 0x80000001006113B0);
}

uint64_t sub_100358F88()
{
  uint64_t v0;

  return v0 + 8;
}

void sub_100359018(char *a1)
{
  sub_1004A79D0(*a1);
}

Swift::Int sub_100359024()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1004A8A04((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_100359068(uint64_t a1)
{
  char *v1;

  sub_1004A8A04(a1, *v1);
}

Swift::Int sub_100359070()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1004A8A04((uint64_t)v3, v1);
  return Hasher._finalize()();
}

unint64_t sub_1003590B0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10035972C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003590DC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100358E80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100359104()
{
  unsigned __int8 *v0;

  return sub_100358F4C(*v0);
}

unint64_t sub_10035910C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10035972C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100359130(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100359580();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100359158(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100359580();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100359180(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  _BYTE v26[16];
  _BYTE v27[16];
  _BYTE v28[16];
  _BYTE v29[16];
  _BYTE v30[16];

  v3 = v1;
  v5 = sub_100008384(&qword_1007BC218);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_100359580();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s16DiscoverResponseV10CodingKeysON, &_s16DiscoverResponseV10CodingKeysON, v11, v9, v10);
  v12 = *(_QWORD *)(v3 + 16);
  v13 = *(_QWORD *)(v3 + 24);
  v26[0] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, v26, v5);
  if (!v2)
  {
    sub_10022E718(v3, (uint64_t)v30, &qword_1007B5220);
    sub_10022E718((uint64_t)v30, (uint64_t)v26, &qword_1007B5220);
    v25 = 1;
    v14 = sub_100285DE4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    sub_10022E718(v3 + 32, (uint64_t)v29, &qword_1007B5220);
    sub_10022E718((uint64_t)v29, (uint64_t)v26, &qword_1007B5220);
    v25 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    v15 = *(_QWORD *)(v3 + 48);
    v16 = *(_QWORD *)(v3 + 56);
    v26[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, v26, v5);
    sub_10022E718(v3 + 64, (uint64_t)v28, &qword_1007B5220);
    sub_10022E718((uint64_t)v28, (uint64_t)v26, &qword_1007B5220);
    v25 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    sub_10022E718(v3 + 80, (uint64_t)v27, &qword_1007B5220);
    sub_10022E718((uint64_t)v27, (uint64_t)v26, &qword_1007B5220);
    v25 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    v17 = *(_QWORD *)(v3 + 96);
    v18 = *(_QWORD *)(v3 + 104);
    v26[0] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, v26, v5);
    v19 = *(_QWORD *)(v3 + 112);
    v20 = *(unsigned __int8 *)(v3 + 120);
    v26[0] = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, v26, v5);
    v21 = *(_QWORD *)(v3 + 128);
    v22 = *(_QWORD *)(v3 + 136);
    v26[0] = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, v26, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_100359488@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[9];

  sub_100359774(a1, v8);
  if (!v2)
  {
    v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v8[8];
    v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1003594E0(_QWORD *a1)
{
  return sub_100359180(a1);
}

uint64_t sub_100359530()
{
  return sub_100357C04();
}

unint64_t sub_100359580()
{
  unint64_t result;

  result = qword_1007BC220;
  if (!qword_1007BC220)
  {
    result = swift_getWitnessTable(&unk_1005D4130, &_s16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC220);
  }
  return result;
}

unint64_t sub_1003595C4()
{
  unint64_t result;

  result = qword_1007BC230;
  if (!qword_1007BC230)
  {
    result = swift_getWitnessTable(&unk_1005D40E0, &_s15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC230);
  }
  return result;
}

_QWORD *sub_100359608(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v3 = sub_100008384(&qword_1007BC238);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10023A834(a1, v7);
  v10 = sub_1003595C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s15DiscoverRequestV10CodingKeysON, &_s15DiscoverRequestV10CodingKeysON, v10, v7, v8);
  if (v1)
  {
    sub_10022E75C(a1);
  }
  else
  {
    v11 = sub_100285DA0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v14, &type metadata for Data, v12, v3, &type metadata for Data, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v14;
    sub_10022E75C(a1);
  }
  return v9;
}

unint64_t sub_10035972C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071CA28, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9)
    return 9;
  else
    return v3;
}

uint64_t *sub_100359774@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *result;
  const char *v14;
  const char *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  __n128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  const char *v39;
  double v40;
  const char *v41;
  unint64_t v42;
  const char *v43;
  unint64_t v44;
  uint64_t v45;
  const char *v46;
  const char *v47;
  double v48;
  unint64_t v49;
  const char *v50;
  uint64_t v51;
  const char *v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  _OWORD *v56;
  __int128 v57;
  unsigned __int128 v58;
  __int128 v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  const char *v76;
  uint64_t v77;
  unint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  unsigned __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  uint64_t v109;
  const char *v110;
  _BYTE v111[7];
  char v112;
  const char *v113;

  v73 = sub_100008384(&qword_1007BC240);
  v5 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = 1;
  v8 = a1[3];
  v9 = a1[4];
  sub_10023A834(a1, v8);
  v10 = sub_100359580();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s16DiscoverResponseV10CodingKeysON, &_s16DiscoverResponseV10CodingKeysON, v10, v8, v9);
  v75 = a1;
  if (v2)
  {
    v74 = v2;
    v76 = 0;
    v77 = 0;
    v79 = 0;
    v80 = 0;
    v81 = 0;
    v113 = 0;
    v78 = 0xF000000000000000;
    sub_10022E75C(v75);
    v92 = 0;
    v93 = 0xF000000000000000;
    v94 = 0;
    v95 = v113;
    v96 = v81;
    v97 = 0xF000000000000000;
    v98 = 0;
    v99 = v79;
    v100 = v80;
    v101 = 0xF000000000000000;
    v102 = v77;
    v103 = v78;
    v104 = 0;
    v105 = v76;
    v106 = 0;
    v107 = v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v111[3];
    *(_DWORD *)v108 = *(_DWORD *)v111;
    v109 = 0;
    v110 = 0;
    return sub_1003217E0(&v92);
  }
  else
  {
    v71 = a2;
    v72 = v5;
    LOBYTE(v92) = 0;
    v11 = v73;
    v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v73);
    v15 = v14;
    v70 = v12;
    LOBYTE(v82) = 1;
    v16 = sub_100285DA0();
    swift_bridgeObjectRetain(v15);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v92, &type metadata for Data, &v82, v11, &type metadata for Data, v16);
    v113 = v15;
    v17 = v92;
    LOBYTE(v82) = 2;
    v18 = v93;
    sub_100244404(v92, v93);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v92, &type metadata for Data, &v82, v73, &type metadata for Data, v16);
    v78 = v16;
    v68 = v18;
    v69 = v17;
    v19 = v92;
    v20 = v93;
    LOBYTE(v92) = 3;
    v21 = v19;
    sub_100244404(v19, v93);
    v22 = v73;
    v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v73);
    v81 = v21;
    v67 = v23;
    LOBYTE(v82) = 4;
    v25 = v24;
    swift_bridgeObjectRetain(v24);
    v26 = v22;
    v27 = v22;
    v28 = v78;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v92, &type metadata for Data, &v82, v27, &type metadata for Data, v78);
    v79 = v25;
    v29 = v93;
    LOBYTE(v82) = 5;
    v80 = v92;
    sub_100244404(v92, v93);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v92, &type metadata for Data, &v82, v26, &type metadata for Data, v28);
    v66 = v29;
    v30 = v80;
    v31 = v92;
    LOBYTE(v92) = 6;
    v77 = v31;
    v78 = v93;
    sub_100244404(v31, v93);
    v65 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v26);
    v32 = v77;
    LOBYTE(v92) = 7;
    v76 = v33;
    v34 = swift_bridgeObjectRetain(v33);
    v64 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v26, v34);
    v63 = v35 & 1;
    v112 = v35 & 1;
    v91 = 8;
    v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v91, v26);
    v74 = 0;
    v37 = v36;
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v7, v26);
    *(_QWORD *)&v40 = swift_bridgeObjectRetain(v39).n128_u64[0];
    swift_bridgeObjectRelease(0, v40);
    *(_QWORD *)&v82 = v69;
    *((_QWORD *)&v82 + 1) = v68;
    v41 = v39;
    *(_QWORD *)&v83 = v70;
    *((_QWORD *)&v83 + 1) = v113;
    *(_QWORD *)&v84 = v81;
    *((_QWORD *)&v84 + 1) = v20;
    v42 = v20;
    v44 = v78;
    v43 = v79;
    *(_QWORD *)&v85 = v67;
    *((_QWORD *)&v85 + 1) = v79;
    *(_QWORD *)&v86 = v30;
    *((_QWORD *)&v86 + 1) = v66;
    v45 = v32;
    v87 = __PAIR128__(v78, v32);
    v46 = v76;
    *(_QWORD *)&v88 = v65;
    *((_QWORD *)&v88 + 1) = v76;
    *(_QWORD *)&v89 = v64;
    BYTE8(v89) = v63;
    v61 = v41;
    v62 = v37;
    *(_QWORD *)&v90 = v37;
    *((_QWORD *)&v90 + 1) = v41;
    v47 = v41;
    sub_100321728((uint64_t *)&v82);
    *(_QWORD *)&v48 = swift_bridgeObjectRelease(v46).n128_u64[0];
    swift_bridgeObjectRelease(v47, v48);
    sub_100225AA0(v45, v44);
    v49 = v66;
    sub_100225AA0(v30, v66);
    v50 = v43;
    swift_bridgeObjectRelease(v43);
    v51 = v81;
    sub_100225AA0(v81, v42);
    v52 = v113;
    swift_bridgeObjectRelease(v113);
    v53 = v68;
    v54 = v69;
    sub_100225AA0(v69, v68);
    sub_10022E75C(v75);
    v92 = v54;
    v93 = v53;
    v94 = v70;
    v95 = v52;
    v96 = v51;
    v97 = v42;
    v98 = v67;
    v99 = v50;
    v100 = v30;
    v101 = v49;
    v102 = v77;
    v103 = v78;
    v104 = v65;
    v105 = v76;
    v106 = v64;
    v107 = v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v111[3];
    *(_DWORD *)v108 = *(_DWORD *)v111;
    v109 = v62;
    v110 = v61;
    result = sub_1003217E0(&v92);
    v55 = v89;
    v56 = v71;
    v71[6] = v88;
    v56[7] = v55;
    v56[8] = v90;
    v57 = v85;
    v56[2] = v84;
    v56[3] = v57;
    v58 = v87;
    v56[4] = v86;
    v56[5] = v58;
    v59 = v83;
    *v56 = v82;
    v56[1] = v59;
  }
  return result;
}

uint64_t _s15DiscoverRequestV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10035A088 + 4 * byte_1005D3DC2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10035A0A8 + 4 * byte_1005D3DC7[v4]))();
}

_BYTE *sub_10035A088(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10035A0A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10035A0B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10035A0B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10035A0C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10035A0C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15DiscoverRequestV10CodingKeysOMa()
{
  return &_s15DiscoverRequestV10CodingKeysON;
}

uint64_t _s16DiscoverResponseV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_10035A130 + 4 * byte_1005D3DD1[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10035A164 + 4 * byte_1005D3DCC[v4]))();
}

uint64_t sub_10035A164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035A16C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10035A174);
  return result;
}

uint64_t sub_10035A180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035A188);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_10035A18C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035A194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s16DiscoverResponseV10CodingKeysOMa()
{
  return &_s16DiscoverResponseV10CodingKeysON;
}

unint64_t sub_10035A1B4()
{
  unint64_t result;

  result = qword_1007BC248;
  if (!qword_1007BC248)
  {
    result = swift_getWitnessTable(&unk_1005D3FC8, &_s16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC248);
  }
  return result;
}

unint64_t sub_10035A1FC()
{
  unint64_t result;

  result = qword_1007BC250;
  if (!qword_1007BC250)
  {
    result = swift_getWitnessTable(&unk_1005D40B8, &_s15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC250);
  }
  return result;
}

unint64_t sub_10035A244()
{
  unint64_t result;

  result = qword_1007BC258;
  if (!qword_1007BC258)
  {
    result = swift_getWitnessTable(&unk_1005D3FF0, &_s15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC258);
  }
  return result;
}

unint64_t sub_10035A28C()
{
  unint64_t result;

  result = qword_1007BC260;
  if (!qword_1007BC260)
  {
    result = swift_getWitnessTable(&unk_1005D4018, &_s15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC260);
  }
  return result;
}

unint64_t sub_10035A2D4()
{
  unint64_t result;

  result = qword_1007BC268;
  if (!qword_1007BC268)
  {
    result = swift_getWitnessTable(&unk_1005D3F00, &_s16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC268);
  }
  return result;
}

unint64_t sub_10035A31C()
{
  unint64_t result;

  result = qword_1007BC270;
  if (!qword_1007BC270)
  {
    result = swift_getWitnessTable(&unk_1005D3F28, &_s16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BC270);
  }
  return result;
}

uint64_t sub_10035A360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BC278);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BC278);
  if (qword_1007B3EB0 != -1)
    swift_once(&qword_1007B3EB0, sub_1002E9FCC);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D82E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t *sub_10035A3F0@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_10035A408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10035C9B8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10035A464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10035C9B8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10035A4B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10035A4E8 + 4 * byte_1005D4180[a1]))(0xD000000000000010, 0x80000001006176D0);
}

uint64_t sub_10035A4E8()
{
  return 0x6574617473;
}

uint64_t sub_10035A4FC(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_10035A524(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v19[23];
  char v20;
  _BYTE v21[16];

  v3 = v1;
  v5 = sub_100008384(&qword_1007BC2F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_10035C1E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v19[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v19, v5);
  if (!v2)
  {
    v19[0] = *((_BYTE *)v3 + 16);
    v20 = 1;
    v14 = sub_10035C22C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v20, v5, &type metadata for HeadphoneDigitalEngravingManager.Record.State, v14);
    sub_10022E718((uint64_t)(v3 + 3), (uint64_t)v21, &qword_1007B5220);
    sub_10022E718((uint64_t)v21, (uint64_t)v19, &qword_1007B5220);
    v20 = 2;
    v15 = sub_100285DE4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v19, &v20, v5, &type metadata for Data, v15);
    v16 = v3[5];
    v19[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v19, v5);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10035A6D8()
{
  unsigned __int8 *v0;

  return sub_10035A4B0(*v0);
}

uint64_t sub_10035A6E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10035C270(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10035A704(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10035C1E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035A72C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10035C1E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10035A754@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_10035C40C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10035A794(_QWORD *a1)
{
  return sub_10035A524(a1);
}

uint64_t sub_10035A7CC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *(_QWORD *)(v3 + *a1);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v8 = v3;
    v9 = a2();
    swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
    v6 = a3();
    v10 = *(_QWORD *)(v8 + v4);
    *(_QWORD *)(v8 + v4) = v6;
    swift_retain(v6);
    swift_release(v10);
    v5 = 0;
  }
  swift_retain(v5);
  return v6;
}

void sub_10035A8E0(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(void);
  void *v6;
  uint64_t v7;
  id v8;

  v5 = *(void (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_100723EE8, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = a2;
  v5();
  swift_release(v4);
  swift_release(v7);

}

void sub_10035A974(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Class isa;
  Class v5;

  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

uint64_t sub_10035AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void (*v8)(uint64_t, uint64_t, void *);
  _QWORD v10[5];
  uint64_t v11;

  v10[4] = a2;
  v11 = a3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10035AAD8;
  v10[3] = &unk_100723E88;
  v7 = _Block_copy(v10);
  v8 = *(void (**)(uint64_t, uint64_t, void *))(a4 + 16);
  swift_retain(a3);
  v8(a4, a1, v7);
  _Block_release(v7);
  return swift_release(v11);
}

uint64_t sub_10035AAD8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void (*v4)(void *, unint64_t);
  id v5;
  unint64_t v6;
  unint64_t v7;

  v2 = a2;
  v4 = *(void (**)(void *, unint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v3);
    v5 = v2;
    v2 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v7 = v6;

  }
  else
  {
    swift_retain(v3);
    v7 = 0xF000000000000000;
  }
  v4(v2, v7);
  sub_100225AA0((uint64_t)v2, v7);
  return swift_release(v3);
}

id sub_10035AB58()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  id v3;
  char *v4;
  NSString v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___decoder] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___encoder] = 0;
  v2 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = objc_allocWithZone((Class)NSUserDefaults);
  v4 = v0;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "initWithSuiteName:", v5);

  if (!v6)
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage] = v6;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "init");
}

void sub_10035AC78(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  void (*v11)(void *, void (*)(uint64_t, unint64_t), _QWORD *);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE v15[48];
  _BYTE v16[8];
  uint64_t v17;
  _QWORD v18[2];
  char v19;
  __int128 v20;
  uint64_t v21;

  v3 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", objc_msgSend(a1, "productIdentifier"));
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "supportsDigitalEngraving");

    if (v5)
    {
      v6 = objc_msgSend(a1, "addressString");
      if (v6)
      {
        v7 = v6;
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v10 = v9;

        sub_10035AE50(v8, v10, (uint64_t)v15);
        sub_10035BC98((uint64_t)v15);
        sub_10022E718((uint64_t)v15, (uint64_t)v16, &qword_1007BC2D8);
        if (v17)
          goto LABEL_5;
        v18[0] = v8;
        v18[1] = v10;
        v19 = 0;
        v20 = xmmword_1005CF260;
        v21 = 0;
        swift_bridgeObjectRetain(v10);
        sub_10035B2B0((uint64_t)v18);
        swift_bridgeObjectRelease(v10);
        sub_100225AA0(0, 0xF000000000000000);
        v11 = *(void (**)(void *, void (*)(uint64_t, unint64_t), _QWORD *))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler);
        if (!v11)
        {
LABEL_5:
          swift_bridgeObjectRelease(v10);
        }
        else
        {
          v12 = *(_QWORD *)(v1
                          + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler
                          + 8);
          v13 = swift_allocObject(&unk_100723E20, 24, 7);
          swift_unknownObjectWeakInit(v13 + 16, v1);
          v14 = (_QWORD *)swift_allocObject(&unk_100723E48, 40, 7);
          v14[2] = v8;
          v14[3] = v10;
          v14[4] = v13;
          sub_1002845E4((uint64_t)v11, v12);
          swift_retain(v13);
          v11(a1, sub_10035BD54, v14);
          sub_1002845F4((uint64_t)v11, v12);
          swift_release(v13);
          swift_release(v14);
        }
      }
    }
  }
}

void sub_10035AE50(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id v7;
  NSString v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _BYTE v24[24];
  uint64_t v25;
  _QWORD v26[2];

  v7 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "dictionaryForKey:", v8);

  v10 = 0uLL;
  if (!v9)
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    goto LABEL_13;
  }
  v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v11 + 16))
  {
    v23 = 0u;
    *(_OWORD *)v24 = 0u;
LABEL_10:
    swift_bridgeObjectRelease((const char *)v11);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(a2);
  v12 = sub_10045C200(a1, (uint64_t)a2);
  if ((v13 & 1) == 0)
  {
    v23 = 0u;
    *(_OWORD *)v24 = 0u;
    swift_bridgeObjectRelease(a2);
    goto LABEL_10;
  }
  sub_10022E77C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v23);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(a2).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v11, v14);
  if (!*(_QWORD *)&v24[8])
  {
LABEL_11:
    sub_10035BE24((uint64_t)&v23);
    goto LABEL_12;
  }
  if ((swift_dynamicCast(v26, &v23, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_12:
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v10 = 0uLL;
    goto LABEL_13;
  }
  v16 = v26[0];
  v15 = v26[1];
  v17 = sub_10035A7CC(&OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___decoder, (uint64_t (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init());
  v18 = sub_10035BE64();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for HeadphoneDigitalEngravingManager.Record, v16, v15, &type metadata for HeadphoneDigitalEngravingManager.Record, v18);
  sub_100225AB4(v16, v15);
  swift_release(v17);
  v20 = *((_QWORD *)&v23 + 1);
  v19 = v23;
  v21 = v24[0];
  v10 = *(_OWORD *)&v24[8];
  v22 = v25;
LABEL_13:
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v20;
  *(_QWORD *)(a3 + 16) = v21;
  *(_OWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 40) = v22;
}

void sub_10035B2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  const char *v14;
  const char *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  double v18;
  id v19;
  Class isa;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v2 = v1;
  v4 = sub_10035A7CC(&OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___encoder, (uint64_t (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init());
  v5 = *(_OWORD *)(a1 + 16);
  v35 = *(_OWORD *)a1;
  v36 = v5;
  v37 = *(_OWORD *)(a1 + 32);
  v6 = sub_10035BD60();
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v35, &type metadata for HeadphoneDigitalEngravingManager.Record, v6);
  v9 = v8;
  swift_release(v4);
  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage;
  v11 = *(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "dictionaryForKey:", v12);

  if (v13)
  {
    v14 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v14 = (const char *)&_swiftEmptyDictionarySingleton;
  }
  v16 = *(_QWORD *)a1;
  v15 = *(const char **)(a1 + 8);
  *((_QWORD *)&v36 + 1) = &type metadata for Data;
  *(_QWORD *)&v35 = v7;
  *((_QWORD *)&v35 + 1) = v9;
  sub_10022138C(&v35, v34);
  swift_bridgeObjectRetain(v15);
  sub_10022E4A8(v7, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
  sub_10046B5EC(v34, v16, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(v15).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0x8000000000000000, v18);
  v19 = *(id *)(v2 + v10);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setObject:forKey:", isa, v21);

  if (qword_1007B3F80 != -1)
    swift_once(&qword_1007B3F80, sub_10035A360);
  v22 = type metadata accessor for Logger(0);
  sub_100221DF8(v22, (uint64_t)qword_1007BC278);
  sub_10022E4A8(v7, v9);
  sub_10035BDA4(a1);
  sub_10022E4A8(v7, v9);
  v23 = sub_10035BDA4(a1);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v34[0] = v27;
    *(_DWORD *)v26 = 136315394;
    *(_QWORD *)&v35 = v7;
    *((_QWORD *)&v35 + 1) = v9;
    sub_10022E4A8(v7, v9);
    v28 = String.init<A>(describing:)(&v35, &type metadata for Data);
    v30 = (const char *)v29;
    *(_QWORD *)&v35 = sub_100228BD8(v28, v29, (uint64_t *)v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, (char *)&v35 + 8, v26 + 4);
    swift_bridgeObjectRelease(v30);
    sub_100225AB4(v7, v9);
    sub_100225AB4(v7, v9);
    *(_WORD *)(v26 + 12) = 2080;
    *(_QWORD *)&v35 = v16;
    *((_QWORD *)&v35 + 1) = v15;
    swift_bridgeObjectRetain(v15);
    v31 = String.init<A>(describing:)(&v35, &type metadata for String);
    v33 = (const char *)v32;
    *(_QWORD *)&v35 = sub_100228BD8(v31, v32, (uint64_t *)v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, (char *)&v35 + 8, v26 + 14);
    swift_bridgeObjectRelease(v33);
    sub_10035BDE4(a1);
    sub_10035BDE4(a1);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Storing engraving data received from AACP %s for:%s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    sub_100225AB4(v7, v9);
  }
  else
  {
    sub_100225AB4(v7, v9);
    sub_100225AB4(v7, v9);
    sub_100225AB4(v7, v9);
    sub_10035BDE4(a1);
    sub_10035BDE4(a1);

  }
}

void sub_10035B930(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a2 >> 60 != 15)
  {
    v33 = v5;
    v34 = v6;
    v11 = a5 + 16;
    sub_10022E4A8(a1, a2);
    if (qword_1007B3F80 != -1)
      swift_once(&qword_1007B3F80, sub_10035A360);
    v12 = type metadata accessor for Logger(0);
    sub_100221DF8(v12, (uint64_t)qword_1007BC278);
    sub_10022E4A8(a1, a2);
    v13 = sub_10022E4A8(a1, a2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v26[0] = v25;
      *(_DWORD *)v16 = 136315138;
      v27 = a1;
      v28 = a2;
      sub_10022E4A8(a1, a2);
      v17 = String.init<A>(describing:)(&v27, &type metadata for Data);
      v18 = a3;
      v20 = (const char *)v19;
      v27 = sub_100228BD8(v17, v19, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v16 + 4);
      v21 = v20;
      a3 = v18;
      swift_bridgeObjectRelease(v21);
      sub_100225AA0(a1, a2);
      sub_100225AA0(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Engraving data received from AACP %s", v16, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      sub_100225AA0(a1, a2);
      sub_100225AA0(a1, a2);
    }

    v27 = a3;
    v28 = (unint64_t)a4;
    v29 = 1;
    v30 = a1;
    v31 = a2;
    v32 = 0;
    swift_beginAccess(v11, v26, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v11, v22);
    if (Strong)
    {
      v24 = (void *)Strong;
      sub_100244404(a1, a2);
      swift_bridgeObjectRetain(a4);
      sub_10035B2B0((uint64_t)&v27);
      sub_100225AA0(a1, a2);
      swift_bridgeObjectRelease(a4);
      sub_100225AA0(a1, a2);

    }
    else
    {
      sub_100225AA0(a1, a2);
    }
  }
}

uint64_t type metadata accessor for HeadphoneDigitalEngravingManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager);
}

uint64_t sub_10035BC98(uint64_t a1)
{
  sub_10035BCCC(*(_QWORD *)a1, *(const char **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t sub_10035BCCC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return sub_100225AA0(a4, a5);
  }
  return result;
}

uint64_t sub_10035BD04()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035BD28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10035BD54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_10035B930(a1, a2, *(_QWORD *)(v2 + 16), *(const char **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

unint64_t sub_10035BD60()
{
  unint64_t result;

  result = qword_1007BC2E0;
  if (!qword_1007BC2E0)
  {
    result = swift_getWitnessTable(&unk_1005D41F0, &type metadata for HeadphoneDigitalEngravingManager.Record);
    atomic_store(result, (unint64_t *)&qword_1007BC2E0);
  }
  return result;
}

uint64_t sub_10035BDA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain(*(const char **)(a1 + 8));
  sub_100244404(v2, v3);
  return a1;
}

uint64_t sub_10035BDE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  sub_100225AA0(v2, v3);
  return a1;
}

uint64_t sub_10035BE24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384((uint64_t *)&unk_1007B6890);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10035BE64()
{
  unint64_t result;

  result = qword_1007BC2E8;
  if (!qword_1007BC2E8)
  {
    result = swift_getWitnessTable(&unk_1005D41C8, &type metadata for HeadphoneDigitalEngravingManager.Record);
    atomic_store(result, (unint64_t *)&qword_1007BC2E8);
  }
  return result;
}

uint64_t sub_10035BEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10035AA34(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_10035BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10035BEC0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10035BEC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10035BEEC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_10035A974(a1, a2, *(_QWORD *)(v2 + 16));
}

void destroy for HeadphoneDigitalEngravingManager.Record(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)(a1 + 24), v2);
}

uint64_t initializeWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  const char *v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(const char **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v4);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_10022E4A8(v7, v6);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  const char *v4;
  const char *v5;
  double v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(const char **)(a2 + 8);
  v5 = *(const char **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)&v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (uint64_t *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      v10 = *v7;
      sub_10022E4A8(*v7, *(_QWORD *)(a2 + 32));
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v8;
      sub_100225AB4(v11, v12);
      goto LABEL_8;
    }
    sub_10023D5F8(a1 + 24);
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    goto LABEL_8;
  }
  v9 = *v7;
  sub_10022E4A8(*v7, *(_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v8;
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for SDTempPairingTXTRecord(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(const char **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 32);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v6;
      *(_QWORD *)(a1 + 32) = v8;
      sub_100225AB4(v9, v7);
      goto LABEL_6;
    }
    sub_10023D5F8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingTXTRecord(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingTXTRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record;
}

unint64_t sub_10035C1E8()
{
  unint64_t result;

  result = qword_1007BC2F8;
  if (!qword_1007BC2F8)
  {
    result = swift_getWitnessTable(&unk_1005D43D4, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BC2F8);
  }
  return result;
}

unint64_t sub_10035C22C()
{
  unint64_t result;

  result = qword_1007BC300;
  if (!qword_1007BC300)
  {
    result = swift_getWitnessTable(&unk_1005D43AC, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1007BC300);
  }
  return result;
}

uint64_t sub_10035C270(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  char v8;

  if (a1 == 0xD000000000000010)
  {
    v4 = 0x80000001006176D0;
    if (a2 == 0x80000001006176D0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001006176D0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    v6 = 0xE500000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574617473, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000001006176F0)
  {
    v7 = 0x80000001006176F0;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001006176F0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100617710)
  {
    swift_bridgeObjectRelease(0x8000000100617710);
    return 3;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100617710, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_10035C40C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  char v26;

  v5 = sub_100008384(&qword_1007BC308);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_10035C1E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_10022E75C(a1);
  }
  else
  {
    LOBYTE(v23) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    v14 = v13;
    v26 = 1;
    v15 = sub_10035C6BC();
    swift_bridgeObjectRetain(v14);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for HeadphoneDigitalEngravingManager.Record.State, &v26, v5, &type metadata for HeadphoneDigitalEngravingManager.Record.State, v15);
    v25 = v23;
    v26 = 2;
    v16 = sub_100285DA0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v23, &type metadata for Data, &v26, v5, &type metadata for Data, v16);
    v17 = v23;
    LOBYTE(v23) = 3;
    v21 = v24;
    v22 = v17;
    sub_100244404(v17, v24);
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain(v14);
    v20 = v21;
    v19 = v22;
    sub_100244404(v22, v21);
    sub_100225AA0(v19, v20);
    swift_bridgeObjectRelease(v14);
    sub_10022E75C(a1);
    swift_bridgeObjectRelease(v14);
    sub_100225AA0(v19, v20);
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v14;
    *(_BYTE *)(a2 + 16) = v25;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v20;
    *(_QWORD *)(a2 + 40) = v18;
  }
}

unint64_t sub_10035C6BC()
{
  unint64_t result;

  result = qword_1007BC310;
  if (!qword_1007BC310)
  {
    result = swift_getWitnessTable(&unk_1005D4384, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1007BC310);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10035C74C + 4 * byte_1005D4189[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10035C780 + 4 * byte_1005D4184[v4]))();
}

uint64_t sub_10035C780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035C788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10035C790);
  return result;
}

uint64_t sub_10035C79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035C7A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10035C7A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035C7B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.CodingKeys()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10035C818 + 4 * byte_1005D4193[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10035C84C + 4 * byte_1005D418E[v4]))();
}

uint64_t sub_10035C84C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035C854(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10035C85CLL);
  return result;
}

uint64_t sub_10035C868(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035C870);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10035C874(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035C87C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.State()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.State;
}

unint64_t sub_10035C89C()
{
  unint64_t result;

  result = qword_1007BC318;
  if (!qword_1007BC318)
  {
    result = swift_getWitnessTable(&unk_1005D42A4, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1007BC318);
  }
  return result;
}

unint64_t sub_10035C8E4()
{
  unint64_t result;

  result = qword_1007BC320;
  if (!qword_1007BC320)
  {
    result = swift_getWitnessTable(&unk_1005D435C, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BC320);
  }
  return result;
}

unint64_t sub_10035C92C()
{
  unint64_t result;

  result = qword_1007BC328;
  if (!qword_1007BC328)
  {
    result = swift_getWitnessTable(&unk_1005D42CC, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BC328);
  }
  return result;
}

unint64_t sub_10035C974()
{
  unint64_t result;

  result = qword_1007BC330;
  if (!qword_1007BC330)
  {
    result = swift_getWitnessTable(&unk_1005D42F4, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BC330);
  }
  return result;
}

unint64_t sub_10035C9B8()
{
  unint64_t result;

  result = qword_1007BC338;
  if (!qword_1007BC338)
  {
    result = swift_getWitnessTable(&unk_1005D422C, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1007BC338);
  }
  return result;
}

uint64_t sub_10035CA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BC340);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BC340);
  if (qword_1007B3EC8 != -1)
    swift_once(&qword_1007B3EC8, sub_1002EA080);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8328);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10035CB40(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  const char **v25;
  double v26;
  const char *v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  double v34;
  const char *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  char v45[24];
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  const char *v49;
  uint64_t v50[3];

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007BC340);
  v11 = v2;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v44 = a2;
    v15 = v14;
    v16 = swift_slowAlloc(32, -1);
    v43 = a1;
    v17 = v16;
    v50[0] = v16;
    *(_DWORD *)v15 = 136315394;
    v41 = v5;
    v42 = v10;
    v19 = *(_QWORD *)&v11[OBJC_IVAR___SDDeferrableOperation_identifier];
    v18 = *(const char **)&v11[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v18);
    v46 = sub_100228BD8(v19, (unint64_t)v18, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v15 + 4);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v15 + 12) = 2048;
    v20 = &v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess(&v11[OBJC_IVAR___SDDeferrableOperation_reasons], v45, 0, 0);
    v46 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    v5 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v15 + 14);

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s addReason start: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v21 = v17;
    a1 = v43;
    swift_slowDealloc(v21, -1, -1);
    v22 = v15;
    a2 = v44;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

  }
  v23 = *(void **)&v11[OBJC_IVAR___SDDeferrableOperation_queue];
  *v8 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v23 & 1) != 0)
  {
    sub_100360444();
    v25 = (const char **)&v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    *(_QWORD *)&v26 = swift_beginAccess(&v11[OBJC_IVAR___SDDeferrableOperation_reasons], v50, 0, 0).n128_u64[0];
    v27 = *v25;
    swift_bridgeObjectRetain(*v25, v26);
    v28 = sub_100455328(a1, (uint64_t)a2, (uint64_t)v27);
    swift_bridgeObjectRelease(v27);
    if ((v28 & 1) != 0)
    {
      v29 = swift_bridgeObjectRetain_n(a2, 2);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(12, -1);
        v33 = swift_slowAlloc(32, -1);
        v46 = v33;
        *(_DWORD *)v32 = 136315138;
        swift_bridgeObjectRetain(a2);
        v48 = sub_100228BD8(a1, (unint64_t)a2, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v32 + 4);
        swift_bridgeObjectRelease_n(a2, 3);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Exiting addReason, %s is already in set", v32, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v32, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
    }
    else
    {
      *(_QWORD *)&v34 = swift_beginAccess(v25, &v46, 33, 0).n128_u64[0];
      swift_bridgeObjectRetain(a2, v34);
      sub_10045DF5C(&v48, a1, (uint64_t)a2);
      v35 = v49;
      swift_endAccess(&v46);
      swift_bridgeObjectRelease(v35);
      v36 = v11;
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.default.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v39 = 134217984;
        v46 = *((_QWORD *)*v25 + 2);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v39 + 4);

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "addReason end: %ld", v39, 0xCu);
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10035D058(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  const char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  const char *v43;
  const char *v44;
  const char *v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  char v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  double v53;
  __n128 v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t, __n128);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  int v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  void (*v72)(char *, uint64_t);
  NSObject *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD, _QWORD);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  const char *v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  char *v91;
  char v92[24];
  uint64_t v93;
  _BYTE v94[16];
  uint64_t v95;
  uint64_t v96[4];

  v89 = (const char *)a2;
  v84 = sub_100008384(&qword_1007BC3F0);
  __chkstk_darwin(v84);
  v88 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v6 = __chkstk_darwin(v5);
  v82 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v85 = (char *)&v77 - v9;
  v10 = __chkstk_darwin(v8);
  v83 = (uint64_t)&v77 - v11;
  __chkstk_darwin(v10);
  v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v77 - v12);
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(_QWORD, _QWORD, _QWORD))(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v81 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v87 = (char *)&v77 - v17;
  v18 = type metadata accessor for DispatchPredicate(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100221DF8(v22, (uint64_t)qword_1007BC340);
  v24 = v2;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v91 = v24;
  if (v27)
  {
    v28 = swift_slowAlloc(22, -1);
    v80 = v13;
    v29 = v28;
    v30 = swift_slowAlloc(32, -1);
    v79 = v14;
    v31 = v30;
    v96[0] = v30;
    *(_DWORD *)v29 = 136315394;
    v78 = a1;
    v32 = &v24[OBJC_IVAR___SDDeferrableOperation_identifier];
    v86 = v23;
    v33 = *(_QWORD *)&v24[OBJC_IVAR___SDDeferrableOperation_identifier];
    v34 = (const char *)*((_QWORD *)v32 + 1);
    swift_bridgeObjectRetain(v34);
    v93 = sub_100228BD8(v33, (unint64_t)v34, v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94, v29 + 4);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v29 + 12) = 2048;
    v35 = &v91[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess(&v91[OBJC_IVAR___SDDeferrableOperation_reasons], v92, 0, 0);
    v36 = *(_QWORD *)v35;
    a1 = v78;
    v93 = *(_QWORD *)(v36 + 16);
    v24 = v91;
    v23 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94, v29 + 14);

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s removeReason start: %ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    v37 = v31;
    v14 = v79;
    swift_slowDealloc(v37, -1, -1);
    v38 = v29;
    v13 = v80;
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

  }
  v39 = *(void **)&v24[OBJC_IVAR___SDDeferrableOperation_queue];
  *v21 = v39;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  v40 = v39;
  LOBYTE(v39) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  v41 = (uint64_t)v90;
  if ((v39 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v42 = &v24[OBJC_IVAR___SDDeferrableOperation_reasons];
  swift_beginAccess(&v24[OBJC_IVAR___SDDeferrableOperation_reasons], v96, 33, 0);
  v43 = v89;
  sub_100471DBC(a1, (uint64_t)v89);
  v45 = v44;
  swift_endAccess(v96);
  swift_bridgeObjectRelease(v45);
  v46 = &v24[OBJC_IVAR___SDDeferrableOperation_timedReasons];
  v47 = swift_beginAccess(&v24[OBJC_IVAR___SDDeferrableOperation_timedReasons], v96, 0, 0);
  v48 = *(_QWORD *)v46;
  if (*(_QWORD *)(*(_QWORD *)v46 + 16))
  {
    *(_QWORD *)&v49 = swift_bridgeObjectRetain(v43, v47.n128_f64[0]).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v48, v49);
    v50 = sub_10045C200(a1, (uint64_t)v43);
    if ((v51 & 1) != 0)
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v14 + 2))(v41, *(_QWORD *)(v48 + 56) + *((_QWORD *)v14 + 9) * v50, v13);
      v52 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v14 + 7);
      v52(v41, 0, 1, v13);
    }
    else
    {
      v52 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v14 + 7);
      v52(v41, 1, 1, v13);
    }
    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v43).n128_u64[0];
    v54 = swift_bridgeObjectRelease((const char *)v48, v53);
    v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v14 + 6);
    if (v55(v41, 1, v13, v54) == 1)
      goto LABEL_13;
    v80 = (uint64_t)v42;
    v86 = v23;
    v57 = (uint64_t)v43;
    v58 = v87;
    v79 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v14 + 4);
    v79(v87, v41, v13);
    v59 = v91;
    v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v55;
    sub_100360444();
    swift_beginAccess(v46, &v93, 33, 0);
    v60 = v83;
    sub_10026AC0C(a1, v57, v83);
    sub_10000D0F0(v60, &qword_1007C4330);
    swift_endAccess(&v93);
    v61 = v85;
    (*((void (**)(char *, char *, uint64_t))v14 + 2))(v85, v58, v13);
    v52((uint64_t)v61, 0, 1, v13);
    v62 = (uint64_t)&v59[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    v63 = (uint64_t)v61;
    swift_beginAccess(v62, &v93, 0, 0);
    v64 = v88;
    v65 = v88 + *(int *)(v84 + 48);
    sub_100221F28(v63, v88, &qword_1007C4330);
    v66 = v90;
    sub_100221F28(v62, v65, &qword_1007C4330);
    if (v66(v64, 1, v13) == 1)
    {
      sub_10000D0F0(v63, &qword_1007C4330);
      v67 = v66(v65, 1, v13);
      v56 = v91;
      v42 = (char *)v80;
      if (v67 == 1)
      {
        sub_10000D0F0(v88, &qword_1007C4330);
LABEL_21:
        sub_10035EC90();
        sub_10035F340();
        goto LABEL_22;
      }
    }
    else
    {
      v68 = v82;
      sub_100221F28(v88, v82, &qword_1007C4330);
      if (v66(v65, 1, v13) != 1)
      {
        v69 = v81;
        v79(v81, v65, v13);
        v70 = sub_100361EDC(&qword_1007BC3F8, (uint64_t)&protocol conformance descriptor for Date);
        v71 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v69, v13, v70);
        v72 = (void (*)(char *, uint64_t))*((_QWORD *)v14 + 1);
        v72(v69, v13);
        sub_10000D0F0(v63, &qword_1007C4330);
        v72((char *)v68, v13);
        sub_10000D0F0(v88, &qword_1007C4330);
        v56 = v91;
        v42 = (char *)v80;
        if ((v71 & 1) != 0)
          goto LABEL_21;
LABEL_22:
        (*((void (**)(char *, uint64_t))v14 + 1))(v87, v13);
        goto LABEL_23;
      }
      sub_10000D0F0(v63, &qword_1007C4330);
      (*((void (**)(uint64_t, uint64_t))v14 + 1))(v68, v13);
      v56 = v91;
      v42 = (char *)v80;
    }
    sub_10000D0F0(v88, &qword_1007BC3F0);
    goto LABEL_22;
  }
  (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v14 + 7))(v41, 1, 1, v13, v47);
LABEL_13:
  sub_10000D0F0(v41, &qword_1007C4330);
  v56 = v91;
  sub_100360444();
LABEL_23:
  v73 = v56;
  v74 = Logger.logObject.getter(v73);
  v75 = static os_log_type_t.default.getter(v74);
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v76 = 134217984;
    v95 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v76 + 4);

    _os_log_impl((void *)&_mh_execute_header, v74, v75, "removeReason end: %ld", v76, 0xCu);
    swift_slowDealloc(v76, -1, -1);
  }
  else
  {

    v74 = v73;
  }

  if (!*(_QWORD *)(*(_QWORD *)v42 + 16)
    && *((_BYTE *)&v73->isa + OBJC_IVAR___SDDeferrableOperation_pendingOperation) == 1)
  {
    sub_1003600A8(1);
  }
}

uint64_t sub_10035D91C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease(v8);
}

void sub_10035D970(uint64_t a1, const char *a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  NSObject *v32;
  const char *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  const char **v53;
  double v54;
  const char *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t, __n128);
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  const char *v71;
  double v72;
  __n128 v73;
  uint64_t v74;
  double v75;
  char *v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  const char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  const char *v117;
  __n128 v118;
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, __n128);
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char v139[24];
  uint64_t v140;
  _BYTE v141[16];
  uint64_t v142[3];
  uint64_t v143;
  _BYTE v144[16];
  uint64_t v145[2];

  v138 = a1;
  v6 = sub_100008384(&qword_1007C4330);
  v7 = __chkstk_darwin(v6);
  v127 = (uint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v124 = (uint64_t)&v121 - v10;
  v11 = __chkstk_darwin(v9);
  v130 = (char *)&v121 - v12;
  __chkstk_darwin(v11);
  v129 = (char *)&v121 - v13;
  v133 = type metadata accessor for DispatchPredicate(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v15 = (uint64_t *)((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD **)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v125 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v123 = (char *)&v121 - v21;
  v22 = __chkstk_darwin(v20);
  v122 = (char *)&v121 - v23;
  v24 = __chkstk_darwin(v22);
  v126 = (char *)&v121 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v121 - v26;
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100221DF8(v28, (uint64_t)qword_1007BC340);
  v135 = (void (*)(char *, uint64_t, uint64_t))v17[2];
  v135(v27, a3, v16);
  v30 = v3;
  swift_bridgeObjectRetain_n(a2, 2);
  v31 = (char *)v30;
  v137 = v29;
  v32 = Logger.logObject.getter(v31);
  v33 = a2;
  v34 = static os_log_type_t.default.getter(v32);
  v35 = os_log_type_enabled(v32, v34);
  v131 = a3;
  v136 = v17;
  if (v35)
  {
    v36 = swift_slowAlloc(32, -1);
    v134 = v16;
    v37 = v36;
    v121 = swift_slowAlloc(96, -1);
    v145[0] = v121;
    *(_DWORD *)v37 = 136315650;
    v39 = *(_QWORD *)&v31[OBJC_IVAR___SDDeferrableOperation_identifier];
    v38 = *(const char **)&v31[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v38);
    v143 = sub_100228BD8(v39, (unint64_t)v38, v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 4);

    *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain(v33, v40);
    v143 = sub_100228BD8(v138, (unint64_t)v33, v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 14);
    swift_bridgeObjectRelease_n(v33, 3);
    *(_WORD *)(v37 + 22) = 2080;
    v41 = sub_100361EDC(&qword_1007BCF90, (uint64_t)&protocol conformance descriptor for Date);
    v42 = dispatch thunk of CustomStringConvertible.description.getter(v134, v41);
    v44 = (const char *)v43;
    v143 = sub_100228BD8(v42, v43, v145);
    v17 = v136;
    a3 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 24);
    v45 = swift_bridgeObjectRelease(v44);
    v128 = (void (*)(char *, uint64_t, __n128))v17[1];
    v128(v27, v134, v45);
    _os_log_impl((void *)&_mh_execute_header, v32, v34, "%s pushPreventionDateForReason, reason: %s, date: %s", (uint8_t *)v37, 0x20u);
    v46 = v121;
    swift_arrayDestroy(v121, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    v47 = v37;
    v16 = v134;
    swift_slowDealloc(v47, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v33, 2);

    v128 = (void (*)(char *, uint64_t, __n128))v17[1];
    ((void (*)(char *, uint64_t))v128)(v27, v16);
  }

  v48 = v33;
  v49 = *(void **)&v31[OBJC_IVAR___SDDeferrableOperation_queue];
  *v15 = v49;
  v50 = v132;
  v51 = v133;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v132 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v133);
  v52 = v49;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v50 + 8))(v15, v51);
  if ((v49 & 1) == 0)
  {
    __break(1u);
    return;
  }
  sub_100360444();
  v53 = (const char **)&v31[OBJC_IVAR___SDDeferrableOperation_reasons];
  *(_QWORD *)&v54 = swift_beginAccess(&v31[OBJC_IVAR___SDDeferrableOperation_reasons], v145, 0, 0).n128_u64[0];
  v55 = *v53;
  swift_bridgeObjectRetain(v55, v54);
  v56 = v138;
  v57 = sub_100455328(v138, (uint64_t)v48, (uint64_t)v55);
  swift_bridgeObjectRelease(v55);
  if ((v57 & 1) == 0)
  {
    v68 = Logger.logObject.getter(v58);
    v69 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      v71 = "Cannot bump date for reason that is not in set";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, v68, v69, v71, v70, 2u);
      swift_slowDealloc(v70, -1, -1);
    }
LABEL_29:

    return;
  }
  v59 = &v31[OBJC_IVAR___SDDeferrableOperation_timedReasons];
  v60 = swift_beginAccess(&v31[OBJC_IVAR___SDDeferrableOperation_timedReasons], &v143, 0, 0);
  v61 = *(_QWORD *)v59;
  if (!*(_QWORD *)(*(_QWORD *)v59 + 16))
  {
    v67 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v17[7];
    v64 = (uint64_t)v129;
    v67(v129, 1, 1, v16, v60);
LABEL_16:
    sub_10000D0F0(v64, &qword_1007C4330);
    goto LABEL_17;
  }
  *(_QWORD *)&v62 = swift_bridgeObjectRetain(v48, v60.n128_f64[0]).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v61, v62);
  v63 = sub_10045C200(v56, (uint64_t)v48);
  v64 = (uint64_t)v129;
  if ((v65 & 1) != 0)
  {
    v135(v129, *(_QWORD *)(v61 + 56) + v17[9] * v63, v16);
    v66 = v17;
    v67 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v17[7];
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v67)(v64, 0, 1, v16);
  }
  else
  {
    v66 = v17;
    v67 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v17[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v67)(v129, 1, 1, v16);
  }
  *(_QWORD *)&v72 = swift_bridgeObjectRelease(v48).n128_u64[0];
  v73 = swift_bridgeObjectRelease((const char *)v61, v72);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v66[6])(v64, 1, v16, v73) == 1)
    goto LABEL_16;
  v88 = (void (*)(char *, uint64_t, uint64_t))v66[4];
  v89 = v126;
  v88(v126, v64, v16);
  if ((static Date.> infix(_:_:)(a3, v89) & 1) == 0)
  {
    v107 = v122;
    v108 = ((uint64_t (*)(char *, uint64_t, uint64_t))v135)(v122, a3, v16);
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.default.getter(v109);
    if (os_log_type_enabled(v109, v110))
    {
      v111 = (uint8_t *)swift_slowAlloc(12, -1);
      v112 = v16;
      v113 = swift_slowAlloc(32, -1);
      v142[0] = v113;
      *(_DWORD *)v111 = 136315138;
      v114 = sub_100361EDC(&qword_1007BCF90, (uint64_t)&protocol conformance descriptor for Date);
      v115 = dispatch thunk of CustomStringConvertible.description.getter(v112, v114);
      v117 = (const char *)v116;
      v140 = sub_100228BD8(v115, v116, v142);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, v141, v111 + 4);
      v118 = swift_bridgeObjectRelease(v117);
      v119 = (void (*)(char *, uint64_t))v128;
      v128(v107, v112, v118);
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "This function is for moving the date further into the future: %s", v111, 0xCu);
      swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v111, -1, -1);

      v119(v126, v112);
    }
    else
    {

      v120 = (void (*)(char *, uint64_t))v128;
      ((void (*)(char *, uint64_t))v128)(v107, v16);
      v120(v126, v16);
    }
    return;
  }
  ((void (*)(char *, uint64_t))v128)(v89, v16);
LABEL_17:
  v74 = (uint64_t)v130;
  v135(v130, a3, v16);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v67)(v74, 0, 1, v16);
  *(_QWORD *)&v75 = swift_beginAccess(v59, v142, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v48, v75);
  sub_1003950F0(v74, v56, (uint64_t)v48);
  swift_endAccess(v142);
  v76 = v31;
  v77 = v16;
  v78 = Logger.logObject.getter(v76);
  v79 = static os_log_type_t.default.getter(v78);
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc(18, -1);
    v81 = swift_slowAlloc(32, -1);
    v142[0] = v81;
    *(_DWORD *)v80 = 136315394;
    v82 = &v76[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v76[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v139, 0, 0);
    v83 = (uint64_t)v82;
    v84 = v124;
    sub_100221F28(v83, v124, &qword_1007C4330);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v136[6])(v84, 1, v77))
    {
      v85 = v77;
      sub_10000D0F0(v84, &qword_1007C4330);
      v86 = (const char *)0x80000001006177A0;
      v87 = 0xD00000000000001ALL;
    }
    else
    {
      v90 = v123;
      v135(v123, v84, v77);
      v91 = sub_10000D0F0(v84, &qword_1007C4330);
      v87 = Date.description.getter(v91);
      v86 = v92;
      v93 = v90;
      v85 = v77;
      ((void (*)(char *, uint64_t))v128)(v93, v77);
    }
    v140 = sub_100228BD8(v87, (unint64_t)v86, v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, v141, v80 + 4);

    swift_bridgeObjectRelease(v86);
    *(_WORD *)(v80 + 12) = 1024;
    v94 = *(_QWORD *)&v76[OBJC_IVAR___SDDeferrableOperation_mainTimer];

    LODWORD(v140) = v94 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, (char *)&v140 + 4, v80 + 14);

    _os_log_impl((void *)&_mh_execute_header, v78, v79, "preventUntilDate: %s, activeTimer: %{BOOL}d", (uint8_t *)v80, 0x12u);
    swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v80, -1, -1);

  }
  else
  {
    v85 = v77;

  }
  v95 = (uint64_t)&v76[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  swift_beginAccess(&v76[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v142, 0, 0);
  v96 = v127;
  sub_100221F28(v95, v127, &qword_1007C4330);
  v97 = v136;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v136[6])(v96, 1, v85) == 1)
  {
    sub_10000D0F0(v96, &qword_1007C4330);
    v98 = (uint64_t)v130;
    v135(v130, v131, v85);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v67)(v98, 0, 1, v85);
    swift_beginAccess(v95, &v140, 33, 0);
    sub_1002D4998(v98, v95);
    v99 = swift_endAccess(&v140);
    v68 = Logger.logObject.getter(v99);
    v69 = static os_log_type_t.default.getter(v68);
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      v71 = "First time setting date";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  v100 = v125;
  ((void (*)(char *, uint64_t, uint64_t))v97[4])(v125, v96, v85);
  v101 = v131;
  v102 = static Date.> infix(_:_:)(v131, v100);
  if ((v102 & 1) != 0)
  {
    v103 = Logger.logObject.getter(v102);
    v104 = static os_log_type_t.default.getter(v103);
    if (os_log_type_enabled(v103, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v105 = 0;
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "preventUntilDate updated", v105, 2u);
      swift_slowDealloc(v105, -1, -1);
    }

    v106 = (uint64_t)v130;
    v135(v130, v101, v85);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v67)(v106, 0, 1, v85);
    swift_beginAccess(v95, &v140, 33, 0);
    sub_1002D4998(v106, v95);
    swift_endAccess(&v140);
  }
  ((void (*)(char *, uint64_t))v128)(v100, v85);
}

void sub_10035E7A8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  const char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  const char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46[24];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v45 = (char *)&v39 - v6;
  v7 = sub_100008384(&qword_1007C4330);
  v8 = __chkstk_darwin(v7);
  v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v39 - v13;
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v15 = type metadata accessor for Logger(0);
  sub_100221DF8(v15, (uint64_t)qword_1007BC340);
  v16 = v0;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = &off_1007BC000;
  if (os_log_type_enabled(v17, v18))
  {
    v42 = v5;
    v20 = swift_slowAlloc(18, -1);
    v21 = swift_slowAlloc(32, -1);
    v49[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v22 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v46, 0, 0);
    sub_100221F28(v22, (uint64_t)v14, &qword_1007C4330);
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1);
    v43 = v1;
    v41 = v2;
    if (v23)
    {
      sub_10000D0F0((uint64_t)v14, &qword_1007C4330);
      v24 = (const char *)0x80000001006177A0;
      v25 = 0xD00000000000001ALL;
    }
    else
    {
      v26 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      v40 = v12;
      v27 = v45;
      v26(v45, v14, v1);
      v28 = sub_10000D0F0((uint64_t)v14, &qword_1007C4330);
      v25 = Date.description.getter(v28);
      v24 = v29;
      v30 = v27;
      v12 = v40;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v30, v1);
    }
    v47 = sub_100228BD8(v25, (unint64_t)v24, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v20 + 4);

    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v20 + 12) = 1024;
    v31 = *(_QWORD *)&v16[OBJC_IVAR___SDDeferrableOperation_mainTimer];

    LODWORD(v47) = v31 != 0;
    v19 = &off_1007BC000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, (char *)&v47 + 4, v20 + 14);

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "scheduleOperation:%s, %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v5 = v42;
    v1 = v43;
    v2 = v41;
  }
  else
  {

  }
  if (!*(_QWORD *)((char *)v19[114] + (_QWORD)v16))
  {
    v32 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v49, 0, 0);
    sub_100221F28(v32, (uint64_t)v12, &qword_1007C4330);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) == 1)
    {
      sub_10000D0F0((uint64_t)v12, &qword_1007C4330);
    }
    else
    {
      v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
      v34 = v45;
      Date.init()(v33);
      v35 = static Date.< infix(_:_:)(v5, v34);
      v36 = *(void (**)(char *, uint64_t))(v2 + 8);
      v36(v34, v1);
      if ((v35 & 1) != 0)
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
        v38 = (uint64_t)v44;
        v37(v44, 1, 1, v1);
        swift_beginAccess(v32, &v47, 33, 0);
        sub_1002D4998(v38, v32);
        swift_endAccess(&v47);
        sub_100360444();
      }
      else
      {
        sub_10035F340();
      }
      v36(v5, v1);
    }
  }
  sub_1003600A8(0);
}

void sub_10035EC90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  _UNKNOWN **v25;
  uint8_t *v26;
  uint64_t v27;
  const char **v28;
  double v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  const char *v36;
  const char **v37;
  const char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  _QWORD v63[2];
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69[24];
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73[3];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007BC3E0);
  __chkstk_darwin(v6);
  v8 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C4330);
  v10 = __chkstk_darwin(v9);
  v65 = (uint64_t)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v67 = (char *)v63 - v12;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (_QWORD *)((char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v1[OBJC_IVAR___SDDeferrableOperation_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  v19 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) != 0)
  {
    v64 = v5;
    v66 = v3;
    v68 = v2;
    if (qword_1007B3F88 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3F88, sub_10035CA08);
LABEL_3:
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100221DF8(v20, (uint64_t)qword_1007BC340);
  v22 = v1;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  v25 = &off_1007BC000;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v73[0] = v27;
    v63[1] = v21;
    *(_DWORD *)v26 = 136315138;
    v63[0] = v26 + 4;
    v28 = (const char **)&v22[OBJC_IVAR___SDDeferrableOperation_timedReasons];
    *(_QWORD *)&v29 = swift_beginAccess(&v22[OBJC_IVAR___SDDeferrableOperation_timedReasons], v69, 0, 0).n128_u64[0];
    v30 = *v28;
    swift_bridgeObjectRetain(v30, v29);
    v32 = Dictionary.description.getter(v31, &type metadata for String, v68, &protocol witness table for String);
    v33 = v8;
    v35 = v34;
    swift_bridgeObjectRelease(v30);
    v71 = (_QWORD *)sub_100228BD8(v32, v35, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v63[0]);

    v36 = (const char *)v35;
    v8 = v33;
    v25 = &off_1007BC000;
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "recalculateDate timedReasons:%s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

  }
  v37 = (const char **)((char *)v25[111] + (_QWORD)v22);
  swift_beginAccess(v37, v73, 0, 0);
  v38 = *v37;
  swift_bridgeObjectRetain_n(*v37, 2);
  v39 = sub_100229524((uint64_t)v38);
  swift_bridgeObjectRelease(v38);
  v71 = v39;
  sub_100360D64(&v71);
  v40 = v66;
  swift_bridgeObjectRelease(v38);
  v41 = (uint64_t)v71;
  v42 = v71[2];
  v43 = sub_100008384(&qword_1007B54B0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = v68;
  if (v42)
  {
    sub_100221F28(v41 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80)), (uint64_t)v8, &qword_1007B54B0);
    v46 = 0;
  }
  else
  {
    v46 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v8, v46, 1, v43);
  swift_release(v41);
  v47 = sub_100008384(&qword_1007B54B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v8, 1, v47) == 1)
  {
    sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007BC3E0);
    v48 = 1;
    v49 = (uint64_t)v67;
  }
  else
  {
    v50 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v8 + 1));
    v49 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t, __n128))(v40 + 32))(v67, &v8[*(int *)(v47 + 48)], v45, v50);
    v48 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v49, v48, 1, v45);
  v51 = (uint64_t)&v22[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  swift_beginAccess(&v22[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], &v71, 33, 0);
  sub_1002D4998(v49, v51);
  swift_endAccess(&v71);
  v52 = v22;
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.default.getter(v53);
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc(12, -1);
    v56 = swift_slowAlloc(32, -1);
    v71 = (_QWORD *)v56;
    *(_DWORD *)v55 = 136315138;
    v57 = v65;
    sub_100221F28(v51, v65, &qword_1007C4330);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v57, 1, v45))
    {
      sub_10000D0F0(v57, &qword_1007C4330);
      v58 = (const char *)0x80000001006177A0;
      v59 = 0xD00000000000001ALL;
    }
    else
    {
      v60 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v64, v57, v45);
      v61 = sub_10000D0F0(v57, &qword_1007C4330);
      v59 = Date.description.getter(v61);
      v58 = v62;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v60, v45);
    }
    v70 = sub_100228BD8(v59, (unint64_t)v58, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v55 + 4);

    swift_bridgeObjectRelease(v58);
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "recalculateDate, preventUntilDate changed to %s", v55, 0xCu);
    swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1, -1);
    swift_slowDealloc(v55, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10035F340()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  id v48;
  char v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  uint64_t v73;
  _QWORD *v74;
  uint64_t (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  char *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char v139[24];
  uint64_t aBlock[5];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144[8];

  v122 = type metadata accessor for DispatchWorkItemFlags(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v111 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for DispatchQoS(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for DispatchTimeInterval(0);
  v125 = *(_QWORD *)(v126 - 8);
  v3 = __chkstk_darwin(v126);
  v124 = (uint64_t *)((char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v123 = (uint64_t)&v111 - v5;
  v133 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for DispatchTime(0);
  v130 = *(_QWORD *)(v134 - 8);
  v7 = __chkstk_darwin(v134);
  v129 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v136 = (char *)&v111 - v9;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v138 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v127 = (char *)&v111 - v18;
  v19 = sub_100008384(&qword_1007C4330);
  v20 = __chkstk_darwin(v19);
  v128 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v116 = (uint64_t)&v111 - v23;
  v24 = __chkstk_darwin(v22);
  v137 = (uint64_t)&v111 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v111 - v26;
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100221DF8(v28, (uint64_t)qword_1007BC340);
  v30 = v0;
  v135 = v29;
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    v114 = v32;
    v115 = v11;
    v112 = v10;
    v33 = swift_slowAlloc(22, -1);
    v113 = swift_slowAlloc(64, -1);
    aBlock[0] = v113;
    *(_DWORD *)v33 = 136315394;
    v34 = v15;
    v35 = v14;
    v36 = *(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_identifier];
    v37 = *(const char **)&v30[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v37);
    v143 = sub_100228BD8(v36, (unint64_t)v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v33 + 4);
    v38 = v37;
    v14 = v35;
    v15 = v34;
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v33 + 12) = 2080;
    v39 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v139, 0, 0);
    sub_100221F28(v39, (uint64_t)v27, &qword_1007C4330);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v27, 1, v14))
    {
      v40 = 0xD00000000000001ALL;
      sub_10000D0F0((uint64_t)v27, &qword_1007C4330);
      v41 = (const char *)0x80000001006177A0;
    }
    else
    {
      v42 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v43 = v127;
      v42(v127, v27, v14);
      v44 = sub_10000D0F0((uint64_t)v27, &qword_1007C4330);
      v40 = Date.description.getter(v44);
      v41 = v45;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v14);
    }
    v10 = v112;
    v143 = sub_100228BD8(v40, (unint64_t)v41, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v33 + 14);

    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v114, "%s handleTimer %s", (uint8_t *)v33, 0x16u);
    v46 = v113;
    swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    v11 = v115;
  }
  else
  {

  }
  v47 = *(void **)&v30[OBJC_IVAR___SDDeferrableOperation_queue];
  *v13 = v47;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v48 = v47;
  v49 = _dispatchPreconditionTest(_:)(v13);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v49 & 1) != 0)
  {
    v51 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], &v143, 0, 0);
    v52 = v137;
    sub_100221F28(v51, v137, &qword_1007C4330);
    v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v53(v52, 1, v14) == 1)
    {
      result = sub_10000D0F0(v52, &qword_1007C4330);
      v54 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
      v55 = *(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
      if (v55)
      {
        swift_getObjectType(*(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer]);
        swift_unknownObjectRetain(v55);
        OS_dispatch_source.cancel()();
        v56 = *(_QWORD *)&v30[v54];
        *(_QWORD *)&v30[v54] = 0;
        swift_unknownObjectRelease(v55);
        return swift_unknownObjectRelease(v56);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v138, v52, v14);
      sub_100360444();
      v59 = Date.timeIntervalSinceNow.getter(v57);
      if (v59 <= 0.0)
      {
        v91 = (uint64_t)v128;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v128, 1, 1, v14);
        swift_beginAccess(v51, aBlock, 33, 0);
        sub_1002D4998(v91, v51);
        swift_endAccess(aBlock);
        v92 = *(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
        *(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0;
        v93 = swift_unknownObjectRelease(v92);
        v94 = Logger.logObject.getter(v93);
        v95 = static os_log_type_t.default.getter(v94);
        if (os_log_type_enabled(v94, v95))
        {
          v96 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v96 = 0;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "handleTimer calling try operation", v96, 2u);
          swift_slowDealloc(v96, -1, -1);
        }

        sub_1003600A8(1);
        return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v138, v14);
      }
      else
      {
        v60 = v59;
        v61 = v15;
        v111 = v14;
        v62 = v129;
        static DispatchTime.now()(v58);
        + infix(_:_:)(v62, v60);
        v63 = *(void (**)(char *, uint64_t))(v130 + 8);
        v64 = v134;
        v63(v62, v134);
        v65 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
        v66 = *(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
        if (v66)
        {
          swift_getObjectType(*(_QWORD *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer]);
          swift_unknownObjectRetain(v66);
          OS_dispatch_source.cancel()();
          v67 = *(_QWORD *)&v30[v65];
          *(_QWORD *)&v30[v65] = 0;
          swift_unknownObjectRelease(v66);
          swift_unknownObjectRelease(v67);
        }
        sub_100360CE4();
        v68 = v131;
        static OS_dispatch_source.TimerFlags.strict.getter();
        v69 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v68, v48);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v68, v133);
        v70 = *(_QWORD *)&v30[v65];
        *(_QWORD *)&v30[v65] = v69;
        swift_unknownObjectRelease(v70);
        v71 = *(_QWORD *)&v30[v65];
        if (v71)
        {
          ObjectType = swift_getObjectType(*(_QWORD *)&v30[v65]);
          v73 = v123;
          sub_10027D6F8(v123);
          v74 = v124;
          sub_10027D73C(v124);
          swift_unknownObjectRetain(v71);
          OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v136, v73, v74, ObjectType);
          swift_unknownObjectRelease(v71);
          v75 = *(uint64_t (**)(uint64_t, uint64_t))(v125 + 8);
          v76 = v126;
          v75((uint64_t)v74, v126);
          v77 = v75(v73, v76);
          v78 = *(_QWORD *)&v30[v65];
          if (v78)
          {
            v79 = swift_getObjectType(*(_QWORD *)&v30[v65]);
            v80 = swift_allocObject(&unk_100724188, 24, 7);
            *(_QWORD *)(v80 + 16) = v30;
            aBlock[4] = (uint64_t)sub_100360D44;
            v141 = v80;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_10025BBB4;
            aBlock[3] = (uint64_t)&unk_1007241A0;
            v81 = _Block_copy(aBlock);
            v82 = v30;
            swift_unknownObjectRetain(v78);
            v83 = v117;
            j___s8Dispatch0A3QoSV11unspecifiedACvgZ(v79);
            v84 = v120;
            sub_10048671C();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)(v83, v84, v81, v79);
            _Block_release(v81);
            swift_unknownObjectRelease(v78);
            (*(void (**)(char *, uint64_t))(v121 + 8))(v84, v122);
            (*(void (**)(char *, uint64_t))(v118 + 8))(v83, v119);
            v77 = swift_release(v141);
            v85 = *(_QWORD *)&v30[v65];
            if (v85)
            {
              swift_getObjectType(*(_QWORD *)&v30[v65]);
              swift_unknownObjectRetain(v85);
              OS_dispatch_source.resume()();
              v77 = swift_unknownObjectRelease(v85);
            }
          }
          v86 = Logger.logObject.getter(v77);
          v87 = static os_log_type_t.default.getter(v86);
          if (os_log_type_enabled(v86, v87))
          {
            v88 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v88 = 0;
            _os_log_impl((void *)&_mh_execute_header, v86, v87, "handleTimer timer activated", v88, 2u);
            swift_slowDealloc(v88, -1, -1);
          }

          v89 = v136;
          v90 = v64;
        }
        else
        {
          v97 = v30;
          v98 = Logger.logObject.getter(v97);
          v99 = static os_log_type_t.error.getter(v98);
          if (os_log_type_enabled(v98, v99))
          {
            v100 = (uint8_t *)swift_slowAlloc(12, -1);
            v101 = swift_slowAlloc(32, -1);
            aBlock[0] = v101;
            *(_DWORD *)v100 = 136315138;
            v102 = v116;
            sub_100221F28(v51, v116, &qword_1007C4330);
            v103 = v111;
            if (v53(v102, 1, v111))
            {
              v104 = 0xD00000000000001ALL;
              sub_10000D0F0(v102, &qword_1007C4330);
              v105 = (const char *)0x80000001006177A0;
            }
            else
            {
              v106 = v127;
              (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v127, v102, v103);
              v107 = sub_10000D0F0(v102, &qword_1007C4330);
              v108 = Date.description.getter(v107);
              v109 = v103;
              v104 = v108;
              v105 = v110;
              (*(void (**)(char *, uint64_t))(v61 + 8))(v106, v109);
            }
            v142 = sub_100228BD8(v104, (unint64_t)v105, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, &v143, v100 + 4);

            swift_bridgeObjectRelease(v105);
            _os_log_impl((void *)&_mh_execute_header, v98, v99, "Error making timer %s", v100, 0xCu);
            swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v101, -1, -1);
            swift_slowDealloc(v100, -1, -1);
          }
          else
          {

          }
          v89 = v136;
          v90 = v134;
        }
        v63(v89, v90);
        return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v138, v111);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100360048(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___SDDeferrableOperation_mainTimer);
  if (v1)
  {
    swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR___SDDeferrableOperation_mainTimer));
    swift_unknownObjectRetain(v1);
    OS_dispatch_source.cancel()();
    a1 = swift_unknownObjectRelease(v1);
  }
  return sub_10035F340(a1);
}

void sub_1003600A8(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char **v13;
  double v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v28 = a1;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007B3F88 != -1)
    swift_once(&qword_1007B3F88, sub_10035CA08);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BC340);
  v7 = v1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(28, -1);
    v26 = swift_slowAlloc(64, -1);
    v32[0] = v26;
    *(_DWORD *)v10 = 136315650;
    v12 = *(_QWORD *)&v7[OBJC_IVAR___SDDeferrableOperation_identifier];
    v11 = *(const char **)&v7[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v11);
    v30 = sub_100228BD8(v12, (unint64_t)v11, v32);
    v27 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v10 + 4);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v30) = v28 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, (char *)&v30 + 4, v10 + 14);
    *(_WORD *)(v10 + 18) = 2080;
    v13 = (const char **)&v7[OBJC_IVAR___SDDeferrableOperation_reasons];
    *(_QWORD *)&v14 = swift_beginAccess(&v7[OBJC_IVAR___SDDeferrableOperation_reasons], &v30, 0, 0).n128_u64[0];
    v15 = *v13;
    swift_bridgeObjectRetain(v15, v14);
    v17 = Set.description.getter(v16, &type metadata for String, &protocol witness table for String);
    v19 = v18;
    swift_bridgeObjectRelease(v15);
    v29 = sub_100228BD8(v17, v19, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v10 + 20);

    v20 = (const char *)v19;
    v2 = v27;
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s _scheduleOperation delayed:%{BOOL}d, reason: %s", (uint8_t *)v10, 0x1Cu);
    v21 = v26;
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v22 = *(void **)&v7[OBJC_IVAR___SDDeferrableOperation_queue];
  *v5 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v22 & 1) != 0)
  {
    v24 = &v7[OBJC_IVAR___SDDeferrableOperation_reasons];
    v25 = swift_beginAccess(&v7[OBJC_IVAR___SDDeferrableOperation_reasons], v32, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v24 + 16))
    {
      if ((v28 & 1) == 0)
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 1;
    }
    else if (v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] == 1)
    {
      if ((v28 & 1) != 0)
      {
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
        (*(void (**)(uint64_t, __n128))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(1, v25);
      }
    }
    else if ((v28 & 1) == 0)
    {
      (*(void (**)(_QWORD, __n128))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(0, v25);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100360444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  const char **v18;
  double v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  __n128 v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char **v45;
  const char *v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  double v52;
  const char *v53;
  unint64_t v54;
  char v55;
  char v56;
  int isUniquelyReferenced_nonNull_native;
  const char *v58;
  __n128 v59;
  const char *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  char *v70;
  const char *v71;
  uint64_t v72;
  int64_t v73;
  char *v74;
  const char *v75;
  _BYTE v76[24];
  char v77[32];

  v1 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v1);
  v69 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v74 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007BC3E0);
  v7 = __chkstk_darwin(v6);
  v70 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v61 - v9);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v0 + OBJC_IVAR___SDDeferrableOperation_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  v17 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    v18 = (const char **)(v0 + OBJC_IVAR___SDDeferrableOperation_timedReasons);
    *(_QWORD *)&v19 = swift_beginAccess(v0 + OBJC_IVAR___SDDeferrableOperation_timedReasons, v77, 0, 0).n128_u64[0];
    v20 = *v18;
    v21 = *((_QWORD *)*v18 + 8);
    v63 = (uint64_t)(*v18 + 64);
    v22 = 1 << v20[32];
    v23 = -1;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    v24 = v23 & v21;
    v67 = v0 + OBJC_IVAR___SDDeferrableOperation_reasons;
    v64 = (unint64_t)(v22 + 63) >> 6;
    v62 = v64 - 1;
    v71 = v20;
    swift_bridgeObjectRetain(v20, v19);
    v73 = 0;
    v25 = v70;
    v68 = v10;
    v65 = v3;
    v66 = v4;
    while (!v24)
    {
      v40 = v73 + 1;
      if (__OFADD__(v73, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v40 < v64)
      {
        v41 = *(_QWORD *)(v63 + 8 * v40);
        if (v41)
          goto LABEL_14;
        v42 = v73 + 2;
        ++v73;
        if (v40 + 1 < v64)
        {
          v41 = *(_QWORD *)(v63 + 8 * v42);
          if (v41)
            goto LABEL_17;
          v73 = v40 + 1;
          if (v40 + 2 < v64)
          {
            v41 = *(_QWORD *)(v63 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2;
              goto LABEL_14;
            }
            v42 = v40 + 3;
            v73 = v40 + 2;
            if (v40 + 3 < v64)
            {
              v41 = *(_QWORD *)(v63 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  v40 = v42 + 1;
                  if (__OFADD__(v42, 1))
                    goto LABEL_38;
                  if (v40 >= v64)
                  {
                    v73 = v62;
                    goto LABEL_28;
                  }
                  v41 = *(_QWORD *)(v63 + 8 * v40);
                  ++v42;
                  if (v41)
                    goto LABEL_14;
                }
              }
LABEL_17:
              v40 = v42;
LABEL_14:
              v24 = (v41 - 1) & v41;
              v34 = __clz(__rbit64(v41)) + (v40 << 6);
              v73 = v40;
LABEL_10:
              v35 = *((_QWORD *)v71 + 7);
              v36 = (_QWORD *)(*((_QWORD *)v71 + 6) + 16 * v34);
              v37 = (const char *)v36[1];
              *(_QWORD *)v25 = *v36;
              *((_QWORD *)v25 + 1) = v37;
              v38 = v35 + *(_QWORD *)(v4 + 72) * v34;
              v39 = sub_100008384(&qword_1007B54B0);
              (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(&v25[*(int *)(v39 + 48)], v38, v3);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v25, 0, 1, v39);
              swift_bridgeObjectRetain(v37);
              goto LABEL_29;
            }
          }
        }
      }
LABEL_28:
      v43 = sub_100008384(&qword_1007B54B0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v25, 1, 1, v43);
      v24 = 0;
LABEL_29:
      sub_10022E718((uint64_t)v25, (uint64_t)v10, (uint64_t *)&unk_1007BC3E0);
      v44 = sub_100008384(&qword_1007B54B0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v10, 1, v44) == 1)
      {
        swift_release(v71);
        return;
      }
      v45 = v18;
      v47 = *v10;
      v46 = (const char *)v10[1];
      v48 = (char *)v10 + *(int *)(v44 + 48);
      v49 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
      v50 = v74;
      v51 = v49(v74, v48, v3);
      v31.n128_f64[0] = Date.timeIntervalSinceNow.getter(v51);
      v32 = v50;
      if (v31.n128_f64[0] <= 0.0)
      {
        *(_QWORD *)&v52 = swift_beginAccess(v45, v76, 33, 0).n128_u64[0];
        v53 = *v45;
        swift_bridgeObjectRetain(*v45, v52);
        v72 = v47;
        v54 = sub_10045C200(v47, (uint64_t)v46);
        v56 = v55;
        swift_bridgeObjectRelease(v53);
        if ((v56 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v45);
          v58 = *v45;
          v75 = *v45;
          *v45 = (const char *)0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_10046FF78();
            v58 = v75;
          }
          v59 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(*((_QWORD *)v58 + 6) + 16 * v54 + 8));
          v28 = v65;
          v4 = v66;
          v27 = (uint64_t)v69;
          ((void (*)(char *, unint64_t, uint64_t, __n128))v49)(v69, *((_QWORD *)v58 + 7) + *(_QWORD *)(v66 + 72) * v54, v65, v59);
          sub_10026C998(v54, (uint64_t)v58);
          v60 = *v45;
          *v45 = v58;
          swift_bridgeObjectRelease(v60);
          v26 = 0;
        }
        else
        {
          v26 = 1;
          v27 = (uint64_t)v69;
          v28 = v65;
          v4 = v66;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v27, v26, 1, v28);
        sub_10000D0F0(v27, &qword_1007C4330);
        swift_endAccess(v76);
        swift_beginAccess(v67, v76, 33, 0);
        sub_100471DBC(v72, (uint64_t)v46);
        v30 = v29;
        swift_endAccess(v76);
        v31 = swift_bridgeObjectRelease(v30);
        v3 = v28;
        v32 = v74;
        v25 = v70;
        v10 = v68;
      }
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v32, v3, v31);
      swift_bridgeObjectRelease(v46);
      v18 = v45;
    }
    v33 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v34 = v33 | (v73 << 6);
    goto LABEL_10;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

id sub_100360B1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDDeferrableOperation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100360BE8()
{
  return type metadata accessor for SDDeferrableOperation(0);
}

uint64_t type metadata accessor for SDDeferrableOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BC3C0;
  if (!qword_1007BC3C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDDeferrableOperation);
  return result;
}

void sub_100360C2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1005D4458;
  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_1005D4470;
    v4[7] = &unk_1005D4488;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

unint64_t sub_100360CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B7390;
  if (!qword_1007B7390)
  {
    v1 = objc_opt_self(OS_dispatch_source);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B7390);
  }
  return result;
}

uint64_t sub_100360D20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100360D44()
{
  uint64_t v0;

  return sub_100360048(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100360D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100360D5C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100360D64(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_100008384(&qword_1007B54B0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1003A9B34(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100360DE8(v5);
  *a1 = v3;
}

void sub_100360DE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  unint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  Swift::Int v36;
  uint64_t v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Swift::Int v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  double v119;
  const char *v120;
  char *v121;
  const char *v122;
  Swift::Int v123;
  Swift::Int v124;
  uint64_t v125;
  Swift::Int v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  Swift::Int v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v135 = sub_100008384(&qword_1007B54B0);
  v128 = *(_QWORD *)(v135 - 8);
  v3 = __chkstk_darwin(v135);
  v125 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v136 = (uint64_t)&v121 - v6;
  v7 = __chkstk_darwin(v5);
  v133 = (uint64_t)&v121 - v8;
  __chkstk_darwin(v7);
  v132 = (uint64_t)&v121 - v9;
  v10 = a1[1];
  v11 = _minimumMergeRunLength(_:)(v10);
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      sub_1003617E8(0, v10, 1, a1);
    return;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v134 = a1;
  v123 = v11;
  v129 = v1;
  if (v10 < 2)
  {
    v16 = (char *)_swiftEmptyArrayStorage;
    v127 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    v122 = (const char *)_swiftEmptyArrayStorage;
    if (v10 != 1)
    {
      v18 = _swiftEmptyArrayStorage[2];
LABEL_105:
      v105 = v16;
      if (v18 >= 2)
      {
        v112 = *v134;
        do
        {
          v113 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v112)
            goto LABEL_146;
          v114 = *(_QWORD *)&v105[16 * v113 + 32];
          v115 = *(_QWORD *)&v105[16 * v18 + 24];
          v116 = v129;
          sub_100361A28(v112 + *(_QWORD *)(v128 + 72) * v114, v112 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v105[16 * v18 + 16], v112 + *(_QWORD *)(v128 + 72) * v115, v127);
          v129 = v116;
          if (v116)
            break;
          if (v115 < v114)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
            v105 = sub_1003A9300((uint64_t)v105);
          if (v113 >= *((_QWORD *)v105 + 2))
            goto LABEL_136;
          v117 = &v105[16 * v113 + 32];
          *(_QWORD *)v117 = v114;
          *((_QWORD *)v117 + 1) = v115;
          v118 = *((_QWORD *)v105 + 2);
          if (v18 > v118)
            goto LABEL_137;
          memmove(&v105[16 * v18 + 16], &v105[16 * v18 + 32], 16 * (v118 - v18));
          *((_QWORD *)v105 + 2) = v118 - 1;
          v18 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      *(_QWORD *)&v119 = swift_bridgeObjectRelease(v105, v121).n128_u64[0];
      v120 = v122;
      *((_QWORD *)v122 + 2) = 0;
      swift_bridgeObjectRelease(v120, v119);
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = static Array._allocateBufferUninitialized(minimumCapacity:)(v12 >> 1, v135);
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v128 + 80);
    v122 = (const char *)v14;
    v127 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v134;
    v22 = *(_QWORD *)(v128 + 72);
    v23 = v132;
    sub_100221F28(*v134 + v22 * v20, v132, &qword_1007B54B0);
    v24 = v21 + v22 * v17;
    v25 = v133;
    sub_100221F28(v24, v133, &qword_1007B54B0);
    LODWORD(v131) = static Date.> infix(_:_:)(v23 + *(int *)(v135 + 48), v25 + *(int *)(v135 + 48));
    sub_10000D0F0(v25, &qword_1007B54B0);
    sub_10000D0F0(v23, &qword_1007B54B0);
    v17 = v19 + 2;
    v130 = v21;
    v137 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v126 = v19;
    v26 = v16;
    v27 = v22 * v20;
    v28 = v21;
    v29 = v19 + 2;
    v30 = v22 * v29;
    do
    {
      v31 = v10;
      v32 = v132;
      sub_100221F28(v28 + v30, v132, &qword_1007B54B0);
      v33 = v133;
      sub_100221F28(v28 + v27, v133, &qword_1007B54B0);
      v34 = static Date.> infix(_:_:)(v32 + *(int *)(v135 + 48), v33 + *(int *)(v135 + 48));
      sub_10000D0F0(v33, &qword_1007B54B0);
      sub_10000D0F0(v32, &qword_1007B54B0);
      if (((v131 ^ v34) & 1) != 0)
      {
        v16 = v26;
        v17 = v29;
        v19 = v126;
        v10 = v31;
        if ((v131 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v28 += v137;
      ++v29;
      v10 = v31;
    }
    while (v31 != v29);
    v16 = v26;
    v17 = v31;
    v19 = v126;
LABEL_21:
    if ((v131 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v51 = v137;
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v35 = v134;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_1003A8EEC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_1003A8EEC((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_122;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_123;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_125;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_128;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_132;
            v92 = v67 < v102;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_88;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_127;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_130;
        if (__OFADD__(v86, v91))
          goto LABEL_131;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_94:
          if (v92)
            v64 = v76;
          goto LABEL_96;
        }
LABEL_88:
        if ((v87 & 1) != 0)
          goto LABEL_126;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_129;
        if (v98 < v86)
          goto LABEL_14;
LABEL_96:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v134)
          goto LABEL_144;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v129;
        sub_100361A28(*v134 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v106, *v134 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v108, *v134 + *(_QWORD *)(v128 + 72) * v109, v127);
        v129 = v110;
        if (v110)
          goto LABEL_116;
        if (v109 < v107)
          goto LABEL_119;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_120;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_121;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v134[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v131 = v10;
  v121 = v16;
  v52 = 0;
  v53 = v137 * (v17 - 1);
  v54 = v17 * v137;
  v55 = v19;
  v56 = v19 * v137;
  v35 = v134;
  v126 = v19;
  do
  {
    if (v55 != v17 + v52 - 1)
    {
      v57 = v130;
      if (!v130)
        goto LABEL_145;
      v58 = v130 + v56;
      v59 = v130 + v53;
      sub_10022E718(v130 + v56, v125, &qword_1007B54B0);
      if (v56 < v53 || v58 >= v57 + v54)
      {
        swift_arrayInitWithTakeFrontToBack(v57 + v56, v57 + v53, 1, v135);
        v51 = v137;
      }
      else
      {
        v51 = v137;
        if (v56 != v53)
          swift_arrayInitWithTakeBackToFront(v58);
      }
      sub_10022E718(v125, v59, &qword_1007B54B0);
      v35 = v134;
      v19 = v126;
    }
    ++v55;
    --v52;
    v53 -= v51;
    v54 -= v51;
    v56 += v51;
  }
  while (v55 < v17 + v52);
  v16 = v121;
  v10 = v131;
  if (v17 >= v131)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v123)
    goto LABEL_57;
  if (__OFADD__(v19, v123))
    goto LABEL_141;
  if (v19 + v123 >= v10)
    v36 = v10;
  else
    v36 = v19 + v123;
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      v121 = v16;
      v37 = *(_QWORD *)(v128 + 72);
      v137 = v37 * (v17 - 1);
      v130 = v37;
      v38 = v17 * v37;
      v126 = v19;
      v124 = v36;
      do
      {
        v40 = 0;
        v41 = v19;
        v131 = v17;
        while (1)
        {
          v42 = *v35;
          v43 = v38;
          v44 = v38 + v40 + *v35;
          v45 = v132;
          v46 = v35;
          sub_100221F28(v44, v132, &qword_1007B54B0);
          v47 = v133;
          sub_100221F28(v137 + v40 + v42, v133, &qword_1007B54B0);
          LOBYTE(v42) = static Date.> infix(_:_:)(v45 + *(int *)(v135 + 48), v47 + *(int *)(v135 + 48));
          sub_10000D0F0(v47, &qword_1007B54B0);
          sub_10000D0F0(v45, &qword_1007B54B0);
          if ((v42 & 1) == 0)
            break;
          v48 = *v46;
          if (!*v46)
            goto LABEL_143;
          v38 = v43;
          v49 = v48 + v43 + v40;
          v50 = v48 + v137 + v40;
          sub_10022E718(v49, v136, &qword_1007B54B0);
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v135);
          sub_10022E718(v136, v50, &qword_1007B54B0);
          v39 = v131;
          v40 -= v130;
          ++v41;
          v35 = v134;
          if (v131 == v41)
            goto LABEL_35;
        }
        v39 = v131;
        v38 = v43;
        v35 = v46;
LABEL_35:
        v17 = v39 + 1;
        v137 += v130;
        v38 += v130;
        v19 = v126;
      }
      while (v17 != v124);
      v17 = v124;
      v16 = v121;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1003617E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v26 = a1;
  v30 = sub_100008384(&qword_1007B54B0);
  v7 = __chkstk_darwin(v30);
  v31 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v27 = (uint64_t)&v24 - v10;
  result = __chkstk_darwin(v9);
  v14 = (char *)&v24 - v13;
  v29 = a3;
  v25 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v33 = v15 * (v29 - 1);
    v28 = v15;
    v32 = v15 * v29;
LABEL_5:
    v16 = 0;
    v17 = v26;
    while (1)
    {
      v18 = *a4;
      sub_100221F28(v32 + v16 + *a4, (uint64_t)v14, &qword_1007B54B0);
      v19 = v27;
      sub_100221F28(v33 + v16 + v18, v27, &qword_1007B54B0);
      LOBYTE(v18) = static Date.> infix(_:_:)(&v14[*(int *)(v30 + 48)], v19 + *(int *)(v30 + 48));
      sub_10000D0F0(v19, &qword_1007B54B0);
      result = sub_10000D0F0((uint64_t)v14, &qword_1007B54B0);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v33 += v28;
        v32 += v28;
        if (++v29 == v25)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      v23 = v20 + v33 + v16;
      sub_10022E718(v22, v31, &qword_1007B54B0);
      swift_arrayInitWithTakeFrontToBack(v22, v23, 1, v30);
      result = sub_10022E718(v31, v23, &qword_1007B54B0);
      v16 -= v28;
      ++v17;
      a4 = v21;
      if (v29 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100361A28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v45 = sub_100008384(&qword_1007B54B0);
  v8 = __chkstk_darwin(v45);
  v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v48 = a1;
  v47 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v45);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v25 = a4 + v18;
      v46 = a4 + v18;
      v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v42 = a4;
        v43 = a1;
        do
        {
          v28 = a3 + v27;
          sub_100221F28(v25 + v27, (uint64_t)v11, &qword_1007B54B0);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_100221F28(a2 + v27, v44, &qword_1007B54B0);
          v33 = static Date.> infix(_:_:)(v31 + *(int *)(v45 + 48), v32 + *(int *)(v45 + 48));
          v34 = v32;
          v11 = (char *)v31;
          sub_10000D0F0(v34, &qword_1007B54B0);
          sub_10000D0F0(v31, &qword_1007B54B0);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v28, a2 + v27, 1, v45);
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28);
            }
            v48 += v27;
          }
          else
          {
            v38 = v46;
            v39 = v46 + v27;
            v46 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v39, 1, v45);
              v29 = a2;
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28);
              v29 = a2;
            }
          }
          v25 = v46;
          if (v46 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v45);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v43 = a4 + v17;
    v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_100221F28(a2, (uint64_t)v11, &qword_1007B54B0);
        sub_100221F28(a4, v20, &qword_1007B54B0);
        v21 = static Date.> infix(_:_:)(&v11[*(int *)(v45 + 48)], v20 + *(int *)(v45 + 48));
        sub_10000D0F0(v20, &qword_1007B54B0);
        sub_10000D0F0((uint64_t)v11, &qword_1007B54B0);
        v22 = v48;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v48 < a2 || v48 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack(v48, a2, 1, v45);
          }
          else if (v48 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }
        }
        else
        {
          v24 = v47 + v13;
          if (v48 < v47 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack(v48, v47, 1, v45);
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }
          v47 = v24;
          v23 = a2;
        }
        v48 = v22 + v13;
        a4 = v47;
        if (v47 >= v43)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_1003A9148(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100361EDC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100361F1C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100361F40(char a1)
{
  uint64_t v1;

  return sub_1003CAE40(a1, *(_QWORD *)(v1 + 16));
}

id sub_100361F48(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  objc_class *v22;
  uint64_t v24;
  objc_super v25;
  _BYTE v26[24];

  v24 = a4;
  v10 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v5[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
  *(_QWORD *)&v5[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___SDDeferrableOperation_queue] = a3;
  v17 = &v5[OBJC_IVAR___SDDeferrableOperation_identifier];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  *(_QWORD *)&v5[OBJC_IVAR___SDDeferrableOperation_timedReasons] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v5[OBJC_IVAR___SDDeferrableOperation_reasons] = &_swiftEmptySetSingleton;
  v15((uint64_t)v12, 1, 1, v14);
  swift_beginAccess(v13, v26, 33, 0);
  v18 = v5;
  v19 = a3;
  sub_1002D4998((uint64_t)v12, v13);
  swift_endAccess(v26);
  v20 = &v18[OBJC_IVAR___SDDeferrableOperation_operation];
  *(_QWORD *)v20 = v24;
  *((_QWORD *)v20 + 1) = a5;
  v18[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
  v21 = *(_QWORD *)&v5[v16];
  *(_QWORD *)&v5[v16] = 0;
  swift_retain(a5);

  swift_unknownObjectRelease(v21);
  v22 = (objc_class *)type metadata accessor for SDDeferrableOperation(0);
  v25.receiver = v18;
  v25.super_class = v22;
  return objc_msgSendSuper2(&v25, "init");
}

uint64_t sub_1003620F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BC400);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BC400);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100362188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  v2 = sub_100008384(&qword_1007B5B00);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation, 1, 1, v2);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingSucceeded) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = 0;
  v4 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = (int *)type metadata accessor for RangingMetrics(0);
  v6(v4 + v7[5], 1, 1, v5);
  v6(v4 + v7[6], 1, 1, v5);
  *(_BYTE *)(v4 + v7[7]) = 0;
  v6(v4 + v7[8], 1, 1, v5);
  v6(v4 + v7[9], 1, 1, v5);
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock;
  v9 = sub_100008384((uint64_t *)&unk_1007B7360);
  v10 = swift_allocObject(v9, 20, 7);
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v0 + v8) = v10;
  *(_QWORD *)(v0 + 16) = sub_100366DC4();
  *(_QWORD *)(v0 + 24) = v11;
  v12 = type metadata accessor for ResponseTimer();
  v13 = (_QWORD *)swift_allocObject(v12, 40, 7);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer) = v13;
  v13[2] = v0;
  v13[3] = &off_100724210;
  v13[4] = 0;
  swift_retain(v0);
  sub_1000C8A34(1);
  return v0;
}

uint64_t sub_100362338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[47] = a3;
  v4[48] = v3;
  v4[45] = a1;
  v4[46] = a2;
  v4[49] = *v3;
  v5 = sub_100008384(&qword_1007B68A0);
  v4[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C4330);
  v4[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003623C4, 0, 0);
}

uint64_t sub_1003623C4()
{
  uint64_t v0;
  const char *v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  double v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  Class v31;
  Class v32;
  id v33;
  id v34;
  Class v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  id v45;
  const char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char **v62;
  uint64_t v63;

  v1 = *(const char **)(v0 + 360);
  *(_QWORD *)(v0 + 352) = v1;
  strcpy((char *)(v0 + 328), "AWDL_INFO_SELF");
  *(_BYTE *)(v0 + 343) = -18;
  swift_bridgeObjectRetain(v1);
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 56), v0 + 328, &type metadata for String, &protocol witness table for String);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v3 = sub_1000C7E44(isa);

  v62 = (const char **)(v0 + 352);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 360);
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    *(_QWORD *)(v0 + 152) = sub_100008384((uint64_t *)&unk_1007B5260);
    *(_QWORD *)(v0 + 128) = v5;
    sub_10022138C((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 192));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    v63 = v4;
    sub_10046B4A8((_OWORD *)(v0 + 192), v0 + 56, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v0 + 352) = v4;
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    sub_10022E6C0(v0 + 56);
  }
  else
  {
    sub_100269BA4(v0 + 56, (_OWORD *)(v0 + 96));
    sub_10022E6C0(v0 + 56);
    sub_10000D0F0(v0 + 96, (uint64_t *)&unk_1007B6890);
  }
  v7 = (_QWORD *)(v0 + 16);
  v8 = v0 + 296;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007BC400);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = swift_slowAlloc(32, -1);
    v63 = v59;
    *(_DWORD *)v13 = 136315138;
    *(_QWORD *)&v14 = swift_beginAccess(v62, v0 + 224, 0, 0).n128_u64[0];
    v15 = *v62;
    swift_bridgeObjectRetain(*v62, v14);
    v17 = Dictionary.description.getter(v16, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v19 = v18;
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)(v0 + 344) = sub_100228BD8(v17, v19, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v62, v13 + 4);
    v20 = (const char *)v19;
    v7 = (_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "combinedAWDLInfo = %s", v13, 0xCu);
    v8 = v0 + 296;
    swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }

  v21 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 296) = 0xD000000000000013;
  *(_QWORD *)(v0 + 304) = 0x8000000100617950;
  AnyHashable.init<A>(_:)(v7, v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_10045C1D0((uint64_t)v7), (v23 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(*(_QWORD *)(v0 + 360) + 56) + 32 * v22, v0 + 160);
  }
  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  sub_10022E6C0((uint64_t)v7);
  if (!*(_QWORD *)(v0 + 184))
  {
    sub_10000D0F0(v0 + 160, (uint64_t *)&unk_1007B6890);
    goto LABEL_17;
  }
  if ((swift_dynamicCast(v0 + 312, v0 + 160, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_17:
    v26 = 0;
    goto LABEL_18;
  }
  v24 = *(_QWORD *)(v0 + 312);
  v25 = *(_QWORD *)(v0 + 320);
  v26 = objc_msgSend(objc_allocWithZone((Class)SDAutoUnlockRangingPeer), "init");
  if (v26)
  {
    v28 = *(_QWORD *)(v0 + 368);
    v27 = *(_QWORD *)(v0 + 376);
    v29 = objc_allocWithZone((Class)_NIRangingPeer);
    v30 = v26;
    sub_10022E4A8(v24, v25);
    sub_10022E4A8(v28, v27);
    v31 = Data._bridgeToObjectiveC()().super.isa;
    v32 = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AB4(v28, v27);
    v33 = objc_msgSend(v29, "initWithMacAddressAsData:secureRangingKeyID:", v31, v32);
    sub_100225AB4(v24, v25);

    objc_msgSend(v30, "setNiRangingPeer:", v33);
    v34 = v30;
    v35 = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "setMacAddressData:", v35);
    sub_100225AB4(v24, v25);

  }
  else
  {
    sub_100225AB4(v24, v25);
  }
LABEL_18:
  *(_QWORD *)(v0 + 416) = v26;
  v58 = *(_QWORD *)(v0 + 408);
  v61 = *(_QWORD *)(v0 + 400);
  v36 = v26;
  v38 = *(_QWORD *)(v0 + 384);
  v37 = *(_QWORD *)(v0 + 392);
  v60 = v37;
  v39 = swift_allocObject(&unk_100724230, 24, 7);
  *(_QWORD *)(v0 + 424) = v39;
  swift_weakInit(v39 + 16, v38);
  v40 = swift_allocObject(&unk_100724230, 24, 7);
  *(_QWORD *)(v0 + 432) = v40;
  swift_weakInit(v40 + 16, v38);
  v41 = swift_allocObject(&unk_100724230, 24, 7);
  swift_weakInit(v41 + 16, v38);
  v42 = swift_allocObject(&unk_100724398, 32, 7);
  *(_QWORD *)(v0 + 440) = v42;
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v37;
  v43 = swift_allocObject(&unk_100724230, 24, 7);
  *(_QWORD *)(v0 + 448) = v43;
  swift_weakInit(v43 + 16, v38);
  swift_beginAccess(v62, v0 + 272, 0, 0);
  v44 = *(const char **)(v0 + 352);
  objc_allocWithZone((Class)SDAutoUnlockWiFiRequest);
  v45 = v36;
  swift_retain(v39);
  swift_retain(v40);
  swift_retain(v42);
  swift_retain(v43);
  swift_bridgeObjectRetain(v44);
  v47 = sub_100366978(v46, 1, v36, (uint64_t)sub_100362DA0, 0, sub_100367208, v39, sub_100367210, v40, sub_10036723C, v42, sub_100367244, v43, sub_1003639D4, 0);
  *(_QWORD *)(v0 + 456) = v47;
  Date.init()(objc_msgSend(v47, "setRangingTimeout:", 5));
  v48 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v58, 0, 1, v48);
  v49 = v38 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
  swift_beginAccess(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v0 + 248, 33, 0);
  sub_10023A084(v58, v49, &qword_1007C4330);
  swift_endAccess(v0 + 248);
  v50 = *(void **)(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  *(_QWORD *)(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = v47;
  v51 = v47;

  v52 = objc_msgSend((id)objc_opt_self(SDAutoUnlockWiFiManager), "sharedManager");
  objc_msgSend(v52, "scheduleWiFiRequest:", v51);

  v53 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v61, 1, 1, v53);
  v54 = (_QWORD *)swift_allocObject(&unk_1007243C0, 48, 7);
  v54[2] = 0;
  v54[3] = 0;
  v54[4] = v38;
  v54[5] = v60;
  swift_retain(v38);
  v55 = sub_100252EC0(v61, (uint64_t)&unk_1007BC698, (uint64_t)v54);
  swift_release(v55);
  v56 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 464) = v56;
  *v56 = v0;
  v56[1] = sub_100362C10;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 480, 0, 0, 0xD00000000000002ELL, 0x80000001006179B0, sub_1003672B0, *(_QWORD *)(v0 + 384), &type metadata for Bool);
}

uint64_t sub_100362C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100362D0C;
  else
    v3 = sub_100362C74;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100362C74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(void **)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 440);
  v5 = *(void **)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 424));
  swift_release(v4);
  swift_release(v3);
  swift_release(v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
  v8 = *(unsigned __int8 *)(v0 + 480);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t sub_100362D0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(void **)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 440);
  v5 = *(void **)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 424));
  swift_release(v4);
  swift_release(v3);
  swift_release(v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100362DA0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BC400);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting wifi request", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return a1(1);
}

uint64_t sub_100362E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v5 = sub_100008384(&qword_1007BC680);
  v6 = __chkstk_darwin(v5);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v40[-v9];
  v11 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v11);
  v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a3 + 16;
  swift_beginAccess(a3 + 16, v43, 0, 0);
  result = swift_weakLoadStrong(a3 + 16);
  if (result)
  {
    v16 = result;
    if (qword_1007B3F90 != -1)
      swift_once(&qword_1007B3F90, sub_1003620F8);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007BC400);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "AWDL started", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    if (a2)
    {
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v25 = 134217984;
        v41 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v25 + 4);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "AWDL failed to start: %ld", v25, 0xCu);
        swift_slowDealloc(v25, -1, -1);
      }

      v26 = *(_QWORD *)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
      swift_retain(v26);
      sub_1004B1D7C();
      swift_release(v26);
      v27 = *(os_unfair_lock_s **)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock);
      swift_retain(v27);
      os_unfair_lock_lock(v27 + 4);
      sub_1003356EC(v28, (uint64_t (*)(void))sub_10036707C);
      os_unfair_lock_unlock(v27 + 4);
      swift_release(v27);
      sub_100367094((uint64_t)v10, (uint64_t)v8);
      v29 = sub_100008384(&qword_1007B5B00);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v8, 1, v29) == 1)
      {
        sub_10000D0F0((uint64_t)v10, &qword_1007BC680);
        swift_release(v16);
        return sub_10000D0F0((uint64_t)v8, &qword_1007BC680);
      }
      else
      {
        v37 = sub_100244304();
        v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0, 0);
        *(_DWORD *)v39 = 10;
        *(_QWORD *)(v39 + 8) = 0xD000000000000014;
        *(_QWORD *)(v39 + 16) = 0x80000001006179E0;
        v41 = v38;
        CheckedContinuation.resume(throwing:)(&v41, v29);
        swift_release(v16);
        sub_10000D0F0((uint64_t)v10, &qword_1007BC680);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v30 + 8))(v8, v29);
      }
    }
    else
    {
      swift_beginAccess(v14, &v41, 0, 0);
      Strong = swift_weakLoadStrong(v14);
      if (Strong)
      {
        v32 = Strong;
        Date.init()(Strong);
        swift_release(v16);
        v33 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 0, 1, v33);
        v34 = v32 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
        swift_beginAccess(v32 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v40, 33, 0);
        v35 = type metadata accessor for RangingMetrics(0);
        sub_10023A084((uint64_t)v13, v34 + *(int *)(v35 + 20), &qword_1007C4330);
        swift_endAccess(v40);
        v36 = v32;
      }
      else
      {
        v36 = v16;
      }
      return swift_release(v36);
    }
  }
  return result;
}

uint64_t sub_1003632D0(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v22[24];
  _BYTE v23[24];
  char v24[24];

  v4 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a2 + 16;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007BC400);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "peer found", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  swift_beginAccess(v7, v24, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v14 = Strong;
    Date.init()(Strong);
    v15 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
    v16 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v23, 33, 0);
    v17 = type metadata accessor for RangingMetrics(0);
    sub_10023A084((uint64_t)v6, v16 + *(int *)(v17 + 24), &qword_1007C4330);
    swift_endAccess(v23);
    swift_release(v14);
  }
  swift_beginAccess(v7, v23, 0, 0);
  result = swift_weakLoadStrong(v7);
  if (result)
  {
    v19 = result;
    v20 = result + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(result + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v22, 1, 0);
    *(_BYTE *)(v20 + *(int *)(type metadata accessor for RangingMetrics(0) + 28)) = a1 & 1;
    return swift_release(v19);
  }
  return result;
}

uint64_t sub_1003634EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v18[24];
  char v19[24];

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v11 = result;
    Date.init()(result);
    v12 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 0, 1, v12);
    v13 = v11 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v18, 33, 0);
    v14 = type metadata accessor for RangingMetrics(0);
    sub_10023A084((uint64_t)v9, v13 + *(int *)(v14 + 32), &qword_1007C4330);
    swift_endAccess(v18);
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject(&unk_1007243E8, 48, 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v11;
    v16[5] = a2;
    swift_retain(v11);
    v17 = sub_100252EC0((uint64_t)v6, (uint64_t)&unk_1007BC6A8, (uint64_t)v16);
    swift_release(v17);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_10036369C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1003636B4, 0, 0);
}

uint64_t sub_1003636B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BC400);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Ranging started", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[2];

  v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  v0[3] = v7;
  v8 = dword_1007C30AC;
  swift_retain(v7);
  v9 = (_QWORD *)swift_task_alloc(v8);
  v0[4] = v9;
  *v9 = v0;
  v9[1] = sub_10036739C;
  return sub_1004B1FA8(10);
}

uint64_t sub_1003637D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[24];
  char v23[24];

  v6 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a3 + 16;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007BC400);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Ranging completed", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  swift_beginAccess(v9, v23, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v16 = Strong;
    Date.init()(Strong);
    v17 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 0, 1, v17);
    v18 = v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v22, 33, 0);
    v19 = type metadata accessor for RangingMetrics(0);
    sub_10023A084((uint64_t)v8, v18 + *(int *)(v19 + 36), &qword_1007C4330);
    swift_endAccess(v22);
    swift_release(v16);
  }
  swift_beginAccess(v9, v22, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v21 = result;
    sub_100364C88(a1, a2);
    return swift_release(v21);
  }
  return result;
}

void sub_1003639D4()
{
  sub_100364A5C("Request invalidated");
}

uint64_t sub_1003639E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1003639F8, 0, 0);
}

uint64_t sub_1003639F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  v0[3] = v1;
  v2 = dword_1007C30AC;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_100363A60;
  return sub_1004B1FA8(10);
}

uint64_t sub_100363A60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 24);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_100363AB0(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  uint64_t v3;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                          + 16);
  os_unfair_lock_lock(v2);
  sub_1003356EC(v3, sub_1003672B8);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_100363B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v4 = sub_100008384(&qword_1007BC680);
  v5 = __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v15[-v8 - 8];
  v10 = sub_100008384(&qword_1007B5B00);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_100367148((uint64_t)v9, (uint64_t)v7);
  v12 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished, v15, 33, 0);
  sub_10023A084((uint64_t)v7, v12, &qword_1007BC680);
  return swift_endAccess(v15);
}

uint64_t sub_100363C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  return swift_task_switch(sub_100363C50, 0, 0);
}

uint64_t sub_100363C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  Class isa;
  id v8;
  const char *v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  const char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;

  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BC400);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Scheduling ranging request as responder", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(const char **)(v0 + 176);

  strcpy((char *)(v0 + 152), "AWDL_INFO_SELF");
  *(_BYTE *)(v0 + 167) = -18;
  *(_QWORD *)(v0 + 168) = v6;
  swift_bridgeObjectRetain(v6);
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 16), v0 + 152, &type metadata for String, &protocol witness table for String);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v8 = sub_1000C7E44(isa);

  if (v8)
  {
    v9 = *(const char **)(v0 + 176);
    v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    *(_QWORD *)(v0 + 80) = sub_100008384((uint64_t *)&unk_1007B5260);
    *(_QWORD *)(v0 + 56) = v10;
    sub_10022138C((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    sub_10046B4A8((_OWORD *)(v0 + 88), v0 + 16, isUniquelyReferenced_nonNull_native);
    v12 = v9;
    *(_QWORD *)(v0 + 168) = v9;
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
    sub_10022E6C0(v0 + 16);
  }
  else
  {
    sub_100269BA4(v0 + 16, (_OWORD *)(v0 + 120));
    sub_10022E6C0(v0 + 16);
    sub_10000D0F0(v0 + 120, (uint64_t *)&unk_1007B6890);
    v12 = *(const char **)(v0 + 168);
  }
  v14 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 200);
  v16 = *(const char **)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v17 = swift_allocObject(&unk_100724230, 24, 7);
  swift_weakInit(v17 + 16, v13);
  v18 = (_QWORD *)swift_allocObject(&unk_100724258, 48, 7);
  *(_QWORD *)(v0 + 208) = v18;
  v18[2] = v17;
  v18[3] = v16;
  v18[4] = v15;
  v18[5] = v14;
  objc_allocWithZone((Class)SDAutoUnlockWiFiRequest);
  swift_bridgeObjectRetain(v16);
  sub_10022E4A8(v15, v14);
  swift_retain(v18);
  v19 = sub_100366978(v12, 0, 0, (uint64_t)sub_100367134, (uint64_t)v18, sub_100364934, 0, 0, 0, 0, 0, 0, 0, sub_100364A50, 0);
  *(_QWORD *)(v0 + 216) = v19;
  objc_msgSend(v19, "setRangingTimeout:", 5);
  v20 = *(void **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = v19;
  v21 = v19;

  v22 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 224) = v22;
  *(_QWORD *)(v22 + 16) = v13;
  *(_QWORD *)(v22 + 24) = v21;
  v23 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 232) = v23;
  *v23 = v0;
  v23[1] = sub_100363FF4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 248, 0, 0, 0xD00000000000003FLL, 0x80000001006178C0, sub_100367140, v22, &type metadata for Bool);
}

uint64_t sub_100363FF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10036409C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 224));
    v4 = sub_100364060;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100364060()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 248));
}

uint64_t sub_10036409C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 208));

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1003640E4(void (*a1)(_QWORD), char *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  char *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t Strong;
  char *v29;
  void *v30;
  id v31;
  void (*v32)(_QWORD);
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  Class isa;
  Class v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  void (*v65)(_QWORD);
  char *v66;
  uint64_t v67;
  const char *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  Swift::String v76;
  Swift::String v77;
  const char *object;
  __int128 v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  id v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(_QWORD);
  unint64_t v92;
  unint64_t v93;
  uint64_t v94[5];
  __int128 v95;
  __int128 v96;
  char v97[32];

  v87 = a5;
  v88 = a6;
  v91 = a4;
  v9 = sub_100008384(&qword_1007BC680);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v83 - v13;
  v15 = sub_100008384(&qword_1007B5B00);
  v89 = *(_QWORD *)(v15 - 8);
  v90 = v15;
  v16 = __chkstk_darwin(v15);
  v86 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v83 - v18;
  v20 = a3 + 16;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100221DF8(v21, (uint64_t)qword_1007BC400);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = a2;
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Starting wifi request", v26, 2u);
    v27 = v26;
    a2 = v25;
    swift_slowDealloc(v27, -1, -1);
  }

  swift_beginAccess(v20, v97, 0, 0);
  Strong = swift_weakLoadStrong(v20);
  if (!Strong)
    goto LABEL_18;
  v29 = (char *)Strong;
  v30 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (!v30)
  {
    swift_release(Strong);
LABEL_18:
    a1(0);
    return;
  }
  v92 = 0xD000000000000013;
  v93 = 0x8000000100617950;
  v31 = v30;
  AnyHashable.init<A>(_:)(v94, &v92, &type metadata for String, &protocol witness table for String);
  v32 = v91;
  if (*((_QWORD *)v91 + 2) && (v33 = sub_10045C1D0((uint64_t)v94), (v34 & 1) != 0))
  {
    sub_10022E77C(*((_QWORD *)v32 + 7) + 32 * v33, (uint64_t)&v95);
  }
  else
  {
    v95 = 0u;
    v96 = 0u;
  }
  sub_10022E6C0((uint64_t)v94);
  v85 = v31;
  if (*((_QWORD *)&v96 + 1))
  {
    if ((swift_dynamicCast(&v92, &v95, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v86 = a2;
      v91 = a1;
      v84 = v29;
      v35 = v92;
      v36 = v93;
      v83 = objc_msgSend(objc_allocWithZone((Class)SDAutoUnlockRangingPeer), "init");
      v37 = objc_allocWithZone((Class)_NIRangingPeer);
      sub_10022E4A8(v35, v36);
      v38 = v87;
      v39 = v88;
      sub_10022E4A8(v87, v88);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v41 = Data._bridgeToObjectiveC()().super.isa;
      v42 = v38;
      v43 = v83;
      v44 = v39;
      v45 = v85;
      sub_100225AB4(v42, v44);
      v46 = objc_msgSend(v37, "initWithMacAddressAsData:secureRangingKeyID:", isa, v41);
      v87 = v35;
      v88 = v36;
      sub_100225AB4(v35, v36);

      objc_msgSend(v43, "setNiRangingPeer:", v46);
      v47 = objc_msgSend((id)objc_opt_self(SDAutoUnlockWiFiManager), "sharedManager");
      v48 = v43;
      objc_msgSend(v47, "updateWiFiRequest:setRangingPeer:", v45, v43);

      v49 = v84;
      v50 = (uint64_t)&v84[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
      swift_beginAccess(&v84[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation], v94, 0, 0);
      sub_100367094(v50, (uint64_t)v14);
      v52 = v89;
      v51 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v14, 1, v90) == 1)
      {
        v53 = v87;
        v54 = sub_10000D0F0((uint64_t)v14, &qword_1007BC680);
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.error.getter(v55);
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v57 = 0;
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "No continuation. ScheduleRangingRequestAsResponder is stuck. Attempting to clear current request", v57, 2u);
          swift_slowDealloc(v57, -1, -1);
        }

        v91(0);
        sub_100225AB4(v53, v88);
        swift_release(v49);

      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v19, v14, v51);
        LOBYTE(v95) = 1;
        CheckedContinuation.resume(returning:)(&v95, v51);
        v91(1);
        swift_release(v49);

        sub_100225AB4(v87, v88);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v51);
      }
      return;
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v95, (uint64_t *)&unk_1007B6890);
  }
  v58 = swift_bridgeObjectRetain_n(v32, 2);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.error.getter(v59);
  v61 = v60;
  if (os_log_type_enabled(v59, v60))
  {
    v62 = swift_slowAlloc(12, -1);
    LODWORD(v88) = v61;
    v63 = (uint8_t *)v62;
    v87 = swift_slowAlloc(32, -1);
    v94[0] = v87;
    *(_DWORD *)v63 = 136315138;
    v83 = v63 + 4;
    swift_bridgeObjectRetain((const char *)v32);
    v84 = (char *)&type metadata for Any + 8;
    v65 = a1;
    v66 = v29;
    v67 = Dictionary.description.getter(v64, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v69 = v68;
    swift_bridgeObjectRelease((const char *)v32);
    v70 = v67;
    v29 = v66;
    a1 = v65;
    *(_QWORD *)&v95 = sub_100228BD8(v70, (unint64_t)v69, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v83);
    swift_bridgeObjectRelease_n(v32, 2);
    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v88, "Could not find peer mac address in remote AWDL info: %s", v63, 0xCu);
    v71 = v87;
    swift_arrayDestroy(v87, 1, v84);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v63, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v32, 2);
  }
  v73 = v89;
  v72 = v90;
  v74 = (uint64_t)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
  swift_beginAccess(&v29[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation], v94, 0, 0);
  sub_100367094(v74, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v12, 1, v72))
  {
    sub_10000D0F0((uint64_t)v12, &qword_1007BC680);
  }
  else
  {
    v75 = v86;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v86, v12, v72);
    sub_10000D0F0((uint64_t)v12, &qword_1007BC680);
    *(_QWORD *)&v95 = 0;
    *((_QWORD *)&v95 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v76._countAndFlagsBits = 0xD000000000000035;
    v76._object = (void *)0x8000000100617970;
    String.append(_:)(v76);
    v77._countAndFlagsBits = Dictionary.description.getter(v91, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    object = (const char *)v77._object;
    String.append(_:)(v77);
    swift_bridgeObjectRelease(object);
    v79 = v95;
    v80 = sub_100244304();
    v81 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v80, 0, 0);
    *(_DWORD *)v82 = 1;
    *(_OWORD *)(v82 + 8) = v79;
    *(_QWORD *)&v95 = v81;
    CheckedContinuation.resume(throwing:)(&v95, v72);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
  }
  a1(0);
  swift_release(v29);

}

void sub_100364934(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;
  uint64_t v8;
  uint64_t v9;

  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007BC400);
  oslog = Logger.logObject.getter(v4);
  v5 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v6 = 134217984;
    v8 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9, v6 + 4);
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "AWDL started (error = %ld)", v6, 0xCu);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
}

void sub_100364A50()
{
  sub_100364A5C("Wifi request invalidated");
}

void sub_100364A5C(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BC400);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a1, v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

}

void sub_100364B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];

  v6 = sub_100008384(&qword_1007BC680);
  v7 = __chkstk_darwin(v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v17[-v10 - 8];
  v12 = sub_100008384(&qword_1007B5B00);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_100367148((uint64_t)v11, (uint64_t)v9);
  v14 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation;
  swift_beginAccess(v14, v17, 33, 0);
  sub_10023A084((uint64_t)v9, v14, &qword_1007BC680);
  swift_endAccess(v17);
  v15 = objc_msgSend((id)objc_opt_self(SDAutoUnlockWiFiManager), "sharedManager");
  objc_msgSend(v15, "scheduleWiFiRequest:", a3);

}

uint64_t sub_100364C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  id v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[6];
  char v44;
  _BYTE v45[9];

  v3 = v2;
  v6 = sub_100008384(&qword_1007BC680);
  v7 = __chkstk_darwin(v6);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v7);
  v12 = &v43[-v11];
  __chkstk_darwin(v10);
  v14 = &v43[-v13];
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  swift_retain(v15);
  sub_1004B1D7C();
  swift_release(v15);
  v16 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v17)
  {
    v18 = (void *)objc_opt_self(SDAutoUnlockWiFiManager);
    v19 = v17;
    v20 = objc_msgSend(v18, "sharedManager");
    objc_msgSend(v20, "cancelWiFiRequest:", v19);

    v21 = *(void **)(v3 + v16);
    *(_QWORD *)(v3 + v16) = 0;

  }
  v22 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                           + 16);
  os_unfair_lock_lock(v22);
  sub_1003356EC(v23, (uint64_t (*)(void))sub_10036707C);
  os_unfair_lock_unlock(v22);
  if (!a2 && a1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    else
    {
      if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_25;
      }
      v24 = *(id *)(a1 + 32);
    }
    v25 = v24;
    v26 = objc_msgSend(v24, "shouldUnlock");

    if (v26)
    {
      if (qword_1007B3F90 == -1)
      {
LABEL_10:
        v27 = type metadata accessor for Logger(0);
        v28 = sub_100221DF8(v27, (uint64_t)qword_1007BC400);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.default.getter(v29);
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Peer in range", v31, 2u);
          swift_slowDealloc(v31, -1, -1);
        }

        sub_100367094((uint64_t)v14, (uint64_t)v12);
        v32 = sub_100008384(&qword_1007B5B00);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32) == 1)
        {
          sub_10000D0F0((uint64_t)v14, &qword_1007BC680);
          v34 = (uint64_t)v12;
          return sub_10000D0F0(v34, &qword_1007BC680);
        }
        v44 = 1;
        CheckedContinuation.resume(returning:)(&v44, v32);
        sub_10000D0F0((uint64_t)v14, &qword_1007BC680);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v12, v32);
      }
LABEL_25:
      swift_once(&qword_1007B3F90, sub_1003620F8);
      goto LABEL_10;
    }
  }
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v35 = type metadata accessor for Logger(0);
  v36 = sub_100221DF8(v35, (uint64_t)qword_1007BC400);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Peer out of range", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  sub_100367094((uint64_t)v14, (uint64_t)v9);
  v40 = sub_100008384(&qword_1007B5B00);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v40) == 1)
  {
    sub_10000D0F0((uint64_t)v14, &qword_1007BC680);
    v34 = (uint64_t)v9;
    return sub_10000D0F0(v34, &qword_1007BC680);
  }
  v45[0] = 0;
  CheckedContinuation.resume(returning:)(v45, v40);
  sub_10000D0F0((uint64_t)v14, &qword_1007BC680);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v41 + 8))(v9, v40);
}

uint64_t sub_1003650D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  _BYTE v11[24];

  v4 = sub_100008384(&qword_1007BC680);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess(v7, v11, 0, 0);
  sub_100367094(v7, a2);
  v8 = sub_100008384(&qword_1007B5B00);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  swift_beginAccess(v7, v10, 33, 0);
  sub_10023A084((uint64_t)v6, v7, &qword_1007BC680);
  return swift_endAccess(v10);
}

uint64_t sub_1003651D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v1 = v0;
  v2 = sub_100008384(&qword_1007BC680);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)v21 - v6;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007BC400);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Ranging timer fired", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                           + 16);
  os_unfair_lock_lock(v13);
  sub_1003356EC(v14, (uint64_t (*)(void))sub_10036707C);
  os_unfair_lock_unlock(v13);
  sub_100367094((uint64_t)v7, (uint64_t)v5);
  v15 = sub_100008384(&qword_1007B5B00);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007BC680);
  }
  else
  {
    v17 = sub_100244304();
    v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0, 0);
    *(_DWORD *)v19 = 24;
    *(_QWORD *)(v19 + 8) = 0x20676E69676E6152;
    *(_QWORD *)(v19 + 16) = 0xEF74756F656D6974;
    v21[0] = v18;
    CheckedContinuation.resume(throwing:)(v21, v15);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
  }
  sub_10036541C();
  return sub_10000D0F0((uint64_t)v7, &qword_1007BC680);
}

void sub_10036541C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v1 = v0;
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BC400);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "invalidating wifi request", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v7)
  {
    v8 = (void *)objc_opt_self(SDAutoUnlockWiFiManager);
    v10 = v7;
    v9 = objc_msgSend(v8, "sharedManager");
    objc_msgSend(v9, "cancelWiFiRequest:", v10);

    sub_1000C8A34(0);
  }
}

uint64_t sub_10036556C()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished, &qword_1007BC680);
  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation, &qword_1007BC680);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer));
  sub_100367360(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10036560C()
{
  return type metadata accessor for SDAuthenticationRangingSession(0);
}

uint64_t type metadata accessor for SDAuthenticationRangingSession(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007BC448, (uint64_t)&nominal type descriptor for SDAuthenticationRangingSession);
}

void sub_100365628(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;

  v6 = &unk_1005D44F0;
  sub_1003656E0(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = &unk_1005D4508;
    v10 = &unk_1005D4520;
    v11 = (char *)&value witness table for Builtin.NativeObject + 64;
    v4 = type metadata accessor for RangingMetrics(319);
    if (v5 <= 0x3F)
    {
      v12 = *(_QWORD *)(v4 - 8) + 64;
      v13 = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256, 8, &v6, a1 + 80);
    }
  }
}

void sub_1003656E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007BC468)
  {
    v2 = sub_10021FF9C(&qword_1007B5B00);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007BC468);
  }
}

uint64_t type metadata accessor for RangingMetrics(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BC638, (uint64_t)&nominal type descriptor for RangingMetrics);
}

uint64_t *sub_10036574C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = sub_100008384(&qword_1007C4330);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = sub_100008384(&qword_1007C4330);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = sub_100008384(&qword_1007C4330);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      v23 = sub_100008384(&qword_1007C4330);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v9((uint64_t *)v26, 1, v7))
    {
      v27 = sub_100008384(&qword_1007C4330);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1003659F8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + a2[6];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v9 = a1 + a2[8];
  if (!v6(v9, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  v10 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  return result;
}

char *sub_100365B20(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *sub_100365DA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  v30 = a3[9];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

char *sub_100366180(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *sub_100366400(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  v30 = a3[9];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

uint64_t sub_1003667DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003667E8);
}

uint64_t sub_1003667E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_100008384(&qword_1007C4330);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100366878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100366884);
}

uint64_t sub_100366884(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100008384(&qword_1007C4330);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

void sub_100366900(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = &unk_1005D4508;
    v4[4] = v4[0];
    v4[5] = v4[0];
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

id sub_100366978(const char *a1, char a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15)
{
  NSDictionary v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v33;
  void **v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v22.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  aBlock[4] = a4;
  v41 = a5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100366C1C;
  aBlock[3] = &unk_100724270;
  v23 = _Block_copy(aBlock);
  if (a6)
  {
    v38 = a6;
    v39 = a7;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100366C8C;
    v37 = &unk_100724338;
    v24 = _Block_copy(&v34);
    swift_release(v39);
    v25 = a10;
    if (!a8)
      goto LABEL_4;
    goto LABEL_3;
  }
  v24 = 0;
  v25 = a10;
  if (a8)
  {
LABEL_3:
    v38 = a8;
    v39 = a9;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100366D0C;
    v37 = &unk_100724310;
    a8 = _Block_copy(&v34);
    swift_release(v39);
  }
LABEL_4:
  v26 = a12;
  if (v25)
  {
    v38 = v25;
    v39 = a11;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_10025BBB4;
    v37 = &unk_1007242E8;
    v27 = _Block_copy(&v34);
    swift_release(v39);
    v28 = a14;
    if (!a12)
      goto LABEL_7;
    goto LABEL_6;
  }
  v27 = 0;
  v28 = a14;
  if (a12)
  {
LABEL_6:
    v38 = a12;
    v39 = a13;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100366D48;
    v37 = &unk_1007242C0;
    v26 = _Block_copy(&v34);
    swift_release(v39);
  }
LABEL_7:
  if (v28)
  {
    v38 = v28;
    v39 = a15;
    v34 = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_10025BBB4;
    v37 = &unk_100724298;
    v29 = _Block_copy(&v34);
    swift_release(v39);
  }
  else
  {
    v29 = 0;
  }
  v30 = objc_msgSend(v33, "initWithAwdlInfo:isRangingInitiator:rangingPeer:queueAvailableHandler:awdlStartedHandler:peerFoundHandler:rangingStartedHandler:rangingCompletedHandler:invalidationHandler:", v22.super.isa, a2 & 1, a3, v23, v24, a8, v27, v26, v29);

  _Block_release(v29);
  _Block_release(v26);
  _Block_release(v27);
  _Block_release(a8);
  _Block_release(v24);
  _Block_release(v23);
  swift_release(v41);
  return v30;
}

uint64_t sub_100366C1C(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(uint64_t (*)(char), uint64_t);
  void *v4;
  uint64_t v5;

  v3 = *(void (**)(uint64_t (*)(char), uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_100724370, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  swift_retain(v2);
  v3(sub_100361F40, v5);
  swift_release(v2);
  return swift_release(v5);
}

uint64_t sub_100366C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v6 = 0;
  swift_retain(v4);
  v5(v6, a3);
  swift_release(v4);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_100366D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

__n128 sub_100366D48(uint64_t a1, const char *a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  void (*v6)(const char *, void *);
  unint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(const char *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_1003671A8();
    v4 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

id sub_100366DC4()
{
  id result;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSDictionary v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v1 = result;
  v2 = objc_msgSend(result, "awdlInfo");

  if (v2)
  {
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v3 = 0;
  }
  if (qword_1007B3F90 != -1)
    swift_once(&qword_1007B3F90, sub_1003620F8);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BC400);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    if (v3)
    {
      v10 = Dictionary.description.getter(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v12 = v11;
    }
    else
    {
      v12 = 0x80000001006178A0;
      v10 = 0xD000000000000012;
    }
    v16 = sub_100228BD8(v10, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4);
    swift_bridgeObjectRelease_n(v3, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AWDLInfo = %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    if (!v3)
      goto LABEL_14;
  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
    if (!v3)
    {
LABEL_14:
      v13.super.isa = 0;
      goto LABEL_15;
    }
  }
  v13.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
LABEL_15:
  v14 = sub_1000C7CE0(v13.super.isa);

  if (!v14)
    return 0;
  v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);

  return (id)v15;
}

uint64_t sub_10036707C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003650D8(v1, a1);
}

uint64_t sub_100367094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BC680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003670DC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100367100()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(const char **)(v0 + 24));
  sub_100225AB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100367134(void (*a1)(_QWORD), char *a2)
{
  uint64_t v2;

  sub_1003640E4(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_100367140(uint64_t a1)
{
  uint64_t v1;

  sub_100364B30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100367148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BC680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100367190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003671A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1003671A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BC688;
  if (!qword_1007BC688)
  {
    v1 = objc_opt_self(_NIRangingPeerDistance);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1007BC688);
  }
  return result;
}

uint64_t sub_1003671E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100367208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100362E88(a1, a2, v2);
}

uint64_t sub_100367210(char a1)
{
  uint64_t v1;

  return sub_1003632D0(a1, v1);
}

uint64_t sub_100367218()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10036723C()
{
  uint64_t v0;

  return sub_1003634EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100367244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003637D0(a1, a2, v2);
}

uint64_t sub_100367250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007BC694);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  v3[2] = v2;
  return swift_task_switch(sub_1003639F8, 0, 0);
}

void sub_1003672B0(uint64_t a1)
{
  uint64_t v1;

  sub_100363AB0(a1, v1);
}

uint64_t sub_1003672B8()
{
  uint64_t v0;

  return sub_100363B10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003672D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100367300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007BC6A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1003636B4, 0, 0);
}

uint64_t sub_100367360(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RangingMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003673C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BC6B0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BC6B0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100367458(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t SDAirDropService.transferObserverClientsBundleIDs.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_100367508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = sub_100008384(&qword_1007BCCB8);
  v1 = type metadata accessor for SFAirDropClient.Identifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject(v0, v4 + *(_QWORD *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + 16) = xmmword_1005CD2A0;
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5 + v4, enum case for SFAirDropClient.Identifier.shareSheet(_:), v1);
  qword_1007D8400 = v5;
  return result;
}

void sub_10036759C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  objc_class *v46;
  id v47;
  char *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  objc_class *v71;
  id v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  objc_class *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t Strong;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  objc_super v149;
  _QWORD v150[5];
  __int128 v151;
  objc_class *v152;
  _UNKNOWN **v153;

  v1 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v1);
  v130 = (char *)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SFAirDrop.Transfers(0);
  v146 = *(_QWORD *)(v3 - 8);
  v147 = v3;
  v4 = __chkstk_darwin(v3);
  v127 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v145 = (char *)&v126 - v6;
  v134 = sub_100008384(&qword_1007BCB78);
  v133 = *(_QWORD *)(v134 - 8);
  v7 = __chkstk_darwin(v134);
  v129 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = v8;
  __chkstk_darwin(v7);
  v148 = (char *)&v126 - v9;
  v144 = sub_100008384(&qword_1007B8108);
  v132 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v143 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100008384(&qword_1007BA0B8);
  v131 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v137 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v138 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v13);
  v136 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_deviceStatus;
  v19 = (void *)objc_opt_self(SDStatusMonitor);
  v20 = v0;
  v21 = objc_msgSend(v19, "sharedMonitor");
  v140 = (uint64_t)v0;
  *(_QWORD *)&v0[v18] = v21;
  v22 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearbyAgent;
  v23 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v135 = v22;
  *(_QWORD *)&v20[v22] = v23;
  v24 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_bleController;
  if (qword_1007B41A8 != -1)
    swift_once(&qword_1007B41A8, sub_1004A2368);
  v25 = (void *)qword_1007D84C0;
  v126 = v24;
  *(_QWORD *)&v20[v24] = qword_1007D84C0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters] = _swiftEmptyArrayStorage;
  v26 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_queue;
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.default.getter(v25);
  *(_QWORD *)&v151 = _swiftEmptyArrayStorage;
  v27 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v28 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v29 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v136;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v151, v28, v29, v13, v27);
  v31 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v137 + 104))(v138, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v139);
  v32 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x8000000100611710, v17, v30, v31, 0);
  v139 = v26;
  *(_QWORD *)&v20[v26] = v32;
  v33 = v140;
  v34 = *(void **)(v140 + v18);
  if (!v34)
  {
    __break(1u);
    goto LABEL_11;
  }
  v35 = v18;
  v36 = type metadata accessor for SDAirDropLegacySessionLogger(0);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v37 = sub_100449EA8((uint64_t)v34);
  v38 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger] = v37;
  v39 = objc_allocWithZone((Class)IDSService);
  v40 = v34;
  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(v39, "initWithService:", v41);

  if (!v42)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v43 = type metadata accessor for SDPseudonymNetworkPathMonitor();
  swift_allocObject(v43, 57, 7);
  v44 = sub_10042449C();
  v45 = sub_1003700C0((uint64_t)v42, v44, v40);
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pseudonymService] = v45;
  v46 = (objc_class *)type metadata accessor for SDAirDropUISessionManager(0);
  v47 = objc_msgSend(objc_allocWithZone(v46), "init");
  v48 = &v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_airDropUISessionManager];
  *((_QWORD *)v48 + 3) = v46;
  *((_QWORD *)v48 + 4) = &off_100724600;
  *(_QWORD *)v48 = v47;
  v49 = *(void **)(v33 + v35);
  if (!v49)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v50 = *(void **)&v20[v135];
  if (!v50)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v51 = *(void **)&v20[v126];
  v52 = *(_QWORD *)&v20[v38];
  v53 = objc_allocWithZone((Class)type metadata accessor for SDAirDropEndpointService(0));
  v54 = v49;
  v55 = v50;
  v56 = v51;
  swift_retain(v52);
  v57 = sub_10039935C(v54, v55, v56, v52);
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService] = v57;
  sub_100244418((uint64_t)v48, (uint64_t)&v151);
  v58 = type metadata accessor for SDAirDropSendService();
  swift_allocObject(v58, 136, 7);
  v59 = v54;
  v60 = v55;
  swift_retain(v52);
  swift_retain(v45);
  v61 = sub_1002ABAF0(v59, v60, v52, v57, (uint64_t)v45, (uint64_t)&v151);

  swift_release(v52);
  swift_release(v45);
  v140 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService] = v61;
  sub_100244418((uint64_t)v48, (uint64_t)&v151);
  v62 = type metadata accessor for SDAirDropReceiveService();
  swift_allocObject(v62, 176, 7);
  v63 = v59;
  v64 = v60;
  v65 = v56;
  swift_retain(v52);
  swift_retain(v45);
  v66 = v57;
  v67 = sub_1002F9BB0(v63, v64, v65, v52, v66, (uint64_t)v45, &v151);

  swift_release(v52);
  swift_release(v45);
  v68 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService] = v67;
  v69 = v139;
  v70 = *(void **)&v20[v139];
  sub_100244418((uint64_t)v48, (uint64_t)v150);
  sub_100244418((uint64_t)v150, (uint64_t)&v151);
  v71 = (objc_class *)type metadata accessor for SDAirDropNearFieldService(0);
  v72 = objc_allocWithZone(v71);
  v73 = v63;
  v74 = v70;
  v75 = sub_10026D9B0(v74, &v151, v73);

  v152 = v71;
  v153 = &off_10071E830;
  *(_QWORD *)&v151 = v75;
  sub_10022E75C(v150);
  sub_10026EE60(&v151, (uint64_t)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService]);
  v76 = type metadata accessor for SDTempPairingService(0);
  swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService] = sub_100355F18();
  sub_100008384(&qword_1007BCB80);
  v77 = AirDropMachServiceName.getter();
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener] = SFXPCListener.__allocating_init(machServiceName:queue:)(v77, v78, *(id *)&v20[v69]);
  *(_QWORD *)&v151 = *(_QWORD *)(*(_QWORD *)&v20[v68] + 48);
  v79 = sub_100008384(&qword_1007BA0C8);
  v80 = sub_10026E2FC(&qword_1007BA0D0, &qword_1007BA0C8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v81 = v141;
  Publisher<>.values.getter(v79, v80);
  *(_QWORD *)&v151 = *(_QWORD *)(*(_QWORD *)&v20[v140] + 16);
  v82 = sub_100008384(&qword_1007B8118);
  v83 = sub_10026E2FC(&qword_1007B8120, &qword_1007B8118, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v84 = v143;
  Publisher<>.values.getter(v82, v83);
  v85 = sub_10026E2FC(&qword_1007BCB88, &qword_1007BA0B8, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  v86 = sub_10026E2FC(&qword_1007BCB90, &qword_1007B8108, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)(v81, v84, v142, v144, v85, v86);
  v87 = sub_10021F350((uint64_t)_swiftEmptyArrayStorage);
  v88 = sub_10021EC04((uint64_t)_swiftEmptyArrayStorage);
  v89 = v145;
  SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)(v87, v88);
  v90 = v127;
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v127, v89, v147);
  v91 = sub_100008384(&qword_1007BCB98);
  swift_allocObject(v91, *(unsigned int *)(v91 + 48), *(unsigned __int16 *)(v91 + 52));
  *(_QWORD *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject] = CurrentValueSubject.init(_:)(v90);

  v92 = (objc_class *)type metadata accessor for SDAirDropService();
  v149.receiver = v20;
  v149.super_class = v92;
  v93 = (char *)objc_msgSendSuper2(&v149, "init");
  v94 = *(_QWORD *)&v93[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]
      + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate;
  *(_QWORD *)(v94 + 8) = &off_100724410;
  swift_unknownObjectWeakAssign(v94, v93);
  v95 = *(_QWORD *)&v93[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService];
  *(_QWORD *)(v95 + 48) = &off_100724450;
  swift_unknownObjectWeakAssign(v95 + 40, v93);
  v96 = *(_QWORD *)&v93[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService];
  *(_QWORD *)(v96 + 64) = &off_100724428;
  v97 = swift_unknownObjectWeakAssign(v96 + 56, v93);
  v98 = *(_QWORD *)(v96 + 32);
  Strong = swift_unknownObjectWeakLoadStrong(v97, v99);
  *(_QWORD *)(v98 + 40) = *(_QWORD *)(v96 + 64);
  swift_unknownObjectWeakAssign(v98 + 32, Strong);
  v101 = v93;
  swift_unknownObjectRelease(Strong);
  v102 = (uint64_t)&v101[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess(&v101[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService], &v151, 33, 0);
  v103 = *(_QWORD *)(v102 + 24);
  v104 = *(_QWORD *)(v102 + 32);
  sub_10026EEE8(v102, v103);
  v105 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v104 + 16);
  v106 = v101;
  v105(v93, &off_100724468, v103, v104);
  swift_endAccess(&v151);
  v107 = type metadata accessor for TaskPriority(0);
  v108 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v130, 1, 1, v107);
  v109 = v133;
  v110 = v129;
  v111 = v134;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v129, v148, v134);
  v112 = qword_1007B3D98;
  v113 = v106;
  if (v112 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v114 = static AirDropActor.shared;
  v115 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v116 = *(unsigned __int8 *)(v109 + 80);
  v117 = (v116 + 32) & ~v116;
  v118 = (v128 + v117 + 7) & 0xFFFFFFFFFFFFFFF8;
  v119 = swift_allocObject(&unk_1007244D8, v118 + 8, v116 | 7);
  *(_QWORD *)(v119 + 16) = v114;
  *(_QWORD *)(v119 + 24) = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v119 + v117, v110, v111);
  *(_QWORD *)(v119 + v118) = v113;
  swift_retain(v114);
  v120 = sub_100252EC0(v108, (uint64_t)&unk_1007BCBA8, v119);
  v121 = *(_QWORD *)&v113[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask];
  *(_QWORD *)&v113[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask] = v120;
  swift_release(v121);
  v122 = *(void **)&v113[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener];
  v123 = swift_allocObject(&unk_100724500, 24, 7);
  swift_unknownObjectWeakInit(v123 + 16, v113);
  v124 = v122;
  swift_retain(v123);
  SFXPCListener.didAddConnectionHandler.setter(sub_10037115C, v123);

  swift_release(v123);
  v125 = swift_allocObject(&unk_100724500, 24, 7);
  swift_unknownObjectWeakInit(v125 + 16, v113);
  swift_retain(v125);
  SFXPCListener.didRemoveConnectionHandler.setter(sub_100371164, v125);

  (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v147);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v148, v111);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v143, v144);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v141, v142);
  swift_release(v125);
}

uint64_t sub_1003682DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for SFAirDrop.Transfers(0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007BCBB0);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007BCBB8);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[10] = v10;
  v5[11] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v5[12] = static AirDropActor.shared;
  return swift_task_switch(sub_1003683C0, v11, 0);
}

uint64_t sub_1003683C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_100008384(&qword_1007BCB78);
  SFNoThrowAsyncSequence.makeAsyncIterator()(v1);
  v2 = static AirDropActor.shared;
  v0[13] = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject;
  v0[14] = v2;
  v0[15] = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v3 = sub_10026E2FC(&qword_1007BCBC0, &qword_1007BCBB8, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_10036848C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[8], v0[9], v3);
}

uint64_t sub_10036848C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[14];
    if (v4)
    {
      v5 = v2[15];
      ObjectType = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v11 = sub_100368678;
    v10 = v7;
  }
  else
  {
    v10 = v2[12];
    v11 = sub_100368524;
    v9 = 0;
  }
  return swift_task_switch(v11, v10, v9);
}

uint64_t sub_100368524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v4, *(_QWORD *)(v0 + 72));
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v1, v2);
    CurrentValueSubject.value.setter(v7);
    *(_QWORD *)(v0 + 112) = static AirDropActor.shared;
    *(_QWORD *)(v0 + 120) = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v8 = sub_10026E2FC(&qword_1007BCBC0, &qword_1007BCBB8, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
    v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = sub_10036848C;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v8);
  }
}

uint64_t sub_100368678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 136);
  v1 = sub_100008384(&qword_1007B5A60);
  v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

void sub_1003686D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10037116C(a1);

  }
}

void sub_100368730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100368C88(a1);

  }
}

uint64_t sub_1003687A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BC6B0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting AirDrop Service", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = swift_allocObject(&unk_1007244B0, 24, 7);
  *(_QWORD *)(v7 + 16) = v1;
  v8 = v1;
  SFXPCListener.contextProvider.setter(sub_100370FD0, v7);
  SFXPCListener.resume()();
  v9 = objc_msgSend(objc_allocWithZone((Class)SDAirDropAgent), "initWithEndpointService:", *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]);
  v10 = *(void **)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent];
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent] = v9;

  sub_1002A8744();
  sub_1002F54D4();
  v11 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess(v11, &v15, 0, 0);
  sub_100244418(v11, (uint64_t)v16);
  v12 = v17;
  v13 = v18;
  sub_10023A834(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  return sub_10022E75C(v16);
}

uint64_t sub_100368978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BC6B0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Stopping AirDrop Service", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  SFXPCListener.invalidate()();
  SFXPCListener.contextProvider.setter(0, 0);
  if (qword_1007B3EE8 != -1)
    swift_once(&qword_1007B3EE8, sub_1002F5234);
  v7 = sub_100221DF8(v2, (uint64_t)qword_1007B9F58);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropReceiveService stop", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  sub_1002FA7B0();
  if (qword_1007B3D88 != -1)
    swift_once(&qword_1007B3D88, sub_1002A84A4);
  v11 = sub_100221DF8(v2, (uint64_t)qword_1007B7FF8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropSendService stop", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, &v22, 0, 0);
  sub_100244418(v15, (uint64_t)v23);
  v16 = v24;
  v17 = v25;
  sub_10023A834(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
  sub_10022E75C(v23);
  v18 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask;
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask);
  if (v19)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask));
    Task.cancel()();
    swift_release(v19);
    v20 = *(_QWORD *)(v1 + v18);
  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)(v1 + v18) = 0;
  return swift_release(v20);
}

uint64_t sub_100368C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  __n128 v37;
  uint8_t *v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  const char *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v55;
  __n128 v56;
  const char *v57;
  const char *v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint8_t *v73;
  uint8_t *v74;
  uint64_t v75;
  const char *v76;
  void (*v77)(_QWORD, _QWORD, _QWORD);
  char *v78;
  char *v79;
  char *v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _BYTE v87[24];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[3];
  uint64_t v91;
  uint64_t v92;

  v2 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  v76 = *(const char **)(v2 - 8);
  __chkstk_darwin(v2);
  v75 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v85);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7280);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v73 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v73 - v14;
  __chkstk_darwin(v13);
  v79 = (char *)&v73 - v16;
  v17 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v78 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v86 = (char *)&v73 - v20;
  v21 = type metadata accessor for SFClientIdentity(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v25 = type metadata accessor for Logger(0);
  sub_100221DF8(v25, (uint64_t)qword_1007BC6B0);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v83 = a1;
  v27 = v26(v24, a1, v21);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter(v28);
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v80 = v9;
  if (v31)
  {
    LODWORD(v81) = v30;
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc(32, -1);
    v90[0] = (uint64_t)v77;
    v74 = v32;
    *(_DWORD *)v32 = 136315138;
    v73 = v32 + 4;
    v33 = sub_100220D78(&qword_1007B6490, (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity, (uint64_t)&protocol conformance descriptor for SFClientIdentity);
    v34 = dispatch thunk of CustomStringConvertible.description.getter(v21, v33);
    v36 = (const char *)v35;
    v88 = sub_100228BD8(v34, v35, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v73);
    v37 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v24, v21, v37);
    v38 = v74;
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v81, "Removing AirDrop Client %s", v74, 0xCu);
    v39 = v77;
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }

  v40 = v84;
  v41 = v84 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v84 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, &v88, 0, 0);
  sub_100244418(v41, (uint64_t)v90);
  v42 = v91;
  v43 = v92;
  sub_10023A834(v90, v91);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 136))(v83, v42, v43);
  v44 = sub_10022E75C(v90);
  v45 = SFClientIdentity.bundleIdentifier.getter(v44);
  if (v46)
  {
    v47 = v45;
    v48 = v46;
    swift_beginAccess(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs, v90, 33, 0);
    sub_100471DBC(v47, (uint64_t)v48);
    v50 = v49;
    swift_endAccess(v90);
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v48).n128_u64[0];
    swift_bridgeObjectRelease(v50, v51);
  }
  v52 = (uint64_t)v79;
  SFClientIdentity.connectionID.getter(v45);
  v53 = v82;
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
  if (v81(v52, 1, v17) == 1)
    return sub_10000D0F0(v52, &qword_1007B7280);
  v77 = *(void (**)(_QWORD, _QWORD, _QWORD))(v53 + 32);
  v77(v86, v52, v17);
  v55 = (uint8_t *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  v56 = swift_beginAccess(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters, v90, 0, 0);
  v57 = *(const char **)v55;
  v84 = *(_QWORD *)(*(_QWORD *)v55 + 16);
  if (!v84)
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v53 + 8))(v86, v17, v56);
  v74 = v55;
  v58 = &v57[(*((unsigned __int8 *)v76 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v76 + 80)];
  v83 = *((_QWORD *)v76 + 9);
  v76 = v57;
  swift_bridgeObjectRetain(v57, v56.n128_f64[0]);
  v60 = 0;
  v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v81;
  while (1)
  {
    SFClientIdentity.connectionID.getter(v59);
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v12, v86, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v12, 0, 1, v17);
    v62 = (uint64_t)&v5[*(int *)(v85 + 48)];
    sub_100370F28((uint64_t)v15, (uint64_t)v5);
    sub_100370F28((uint64_t)v12, v62);
    if (v61(v5, 1, v17) == 1)
      break;
    v63 = (uint64_t)v5;
    v64 = v5;
    v65 = (uint64_t)v80;
    sub_100370F28(v63, (uint64_t)v80);
    if (v61((char *)v62, 1, v17) == 1)
    {
      sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v65, v17);
      v5 = v64;
      v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v81;
      goto LABEL_13;
    }
    v66 = v78;
    v77(v78, v62, v17);
    v67 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    LODWORD(v79) = dispatch thunk of static Equatable.== infix(_:_:)(v65, v66, v17, v67);
    v68 = (uint64_t)v64;
    v69 = *(void (**)(char *, uint64_t))(v82 + 8);
    v69(v66, v17);
    sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
    sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
    v69((char *)v65, v17);
    v53 = v82;
    v59 = sub_10000D0F0(v68, &qword_1007B7280);
    v5 = (char *)v68;
    v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v81;
    if ((v79 & 1) != 0)
      goto LABEL_23;
LABEL_14:
    ++v60;
    v58 += v83;
    if (v84 == v60)
    {
      v56 = swift_bridgeObjectRelease(v76);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v53 + 8))(v86, v17, v56);
    }
  }
  sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
  sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
  if (v61((char *)v62, 1, v17) != 1)
  {
LABEL_13:
    v59 = sub_10000D0F0((uint64_t)v5, &qword_1007B6470);
    goto LABEL_14;
  }
  sub_10000D0F0((uint64_t)v5, &qword_1007B7280);
LABEL_23:
  swift_bridgeObjectRelease(v76);
  swift_beginAccess(v74, v87, 33, 0);
  v70 = v53;
  v71 = v75;
  sub_100268CC0(v60, v75);
  sub_100370F70(v71);
  swift_endAccess(v87);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v70 + 8))(v86, v17, v72);
}

void sub_10036943C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  os_log_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  const char *v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  const char *v76;
  __n128 v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  const char **v86;
  __n128 v87;
  const char *v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unsigned int v92;
  const char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, char *);
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char v101;
  char *v102;
  void (*v103)(uint64_t, char *);
  void (*v104)(char *, uint64_t, uint64_t, __n128);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double *v109;
  uint64_t v110;
  unint64_t *v111;
  unint64_t v112;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  NSObject **v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double *v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  unint64_t isa;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t *v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  char *v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, __n128);
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint8_t *v156;
  uint8_t *v157;
  uint64_t v158;
  uint64_t (*v159)(char *, char *, uint64_t);
  unsigned int (*v160)(uint64_t, uint64_t, char *);
  char *v161;
  uint64_t v162;
  char *v163;
  os_log_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v169 = a2;
  v151 = a1;
  v147 = type metadata accessor for SFClientIdentity(0);
  v11 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v164 = (os_log_t)((char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v145 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  v146 = *(_QWORD *)(v145 - 8);
  v13 = __chkstk_darwin(v145);
  v142 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v143 = (char *)&v135 - v16;
  v17 = __chkstk_darwin(v15);
  v141 = (unint64_t)&v135 - v18;
  v19 = __chkstk_darwin(v17);
  v139 = (uint64_t)&v135 - v20;
  __chkstk_darwin(v19);
  v140 = (char *)&v135 - v21;
  v162 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v162);
  v23 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008384(&qword_1007B7280);
  v25 = __chkstk_darwin(v24);
  v153 = (uint64_t)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v29 = ((char *)&v135 - v28);
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v135 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v135 - v33;
  v35 = type metadata accessor for UUID(0);
  v155 = *(_QWORD *)(v35 - 8);
  v36 = __chkstk_darwin(v35);
  v149 = (char *)&v135 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v161 = (char *)&v135 - v39;
  v40 = __chkstk_darwin(v38);
  v163 = (char *)&v135 - v41;
  if (qword_1007B3FA0 != -1)
    v40 = swift_once(&qword_1007B3FA0, sub_100367508);
  v42 = (const char *)qword_1007D8400;
  v43 = *(_QWORD *)(qword_1007D8400 + 16);
  v150 = v6;
  v148 = v11;
  if (v43)
  {
    v44 = *(_QWORD *)(type metadata accessor for SFAirDropClient.Identifier(0) - 8);
    v45 = &v42[(*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80)];
    v46 = *(_QWORD *)(v44 + 72);
    v47 = swift_bridgeObjectRetain(v42);
    while ((static SFAirDropClient.Identifier.== infix(_:_:)(v169, v45, v47) & 1) == 0)
    {
      v45 += v46;
      if (!--v43)
      {
        swift_bridgeObjectRelease(v42);
        v11 = v148;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease(v42);
    if (qword_1007B3F98 != -1)
      swift_once(&qword_1007B3F98, sub_1003673C8);
    v81 = type metadata accessor for Logger(0);
    v82 = sub_100221DF8(v81, (uint64_t)qword_1007BC6B0);
    v54 = Logger.logObject.getter(v82);
    v83 = static os_log_type_t.default.getter(v54);
    if (os_log_type_enabled(v54, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v83, "Unsupported client for presenter", v84, 2u);
      swift_slowDealloc(v84, -1, -1);
    }
LABEL_21:

    return;
  }
LABEL_8:
  SFClientIdentity.connectionID.getter(v40);
  v48 = v155;
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
  if (v49(v34, 1, v35) == 1)
  {
    sub_10000D0F0((uint64_t)v34, &qword_1007B7280);
    if (qword_1007B3F98 != -1)
      swift_once(&qword_1007B3F98, sub_1003673C8);
    v50 = type metadata accessor for Logger(0);
    sub_100221DF8(v50, (uint64_t)qword_1007BC6B0);
    v51 = v164;
    v52 = v147;
    v53 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v11 + 16))(v164, v151, v147);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = v51;
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = swift_slowAlloc(32, -1);
      v168 = v58;
      *(_DWORD *)v57 = 136315138;
      v59 = sub_100220D78(&qword_1007B6490, (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity, (uint64_t)&protocol conformance descriptor for SFClientIdentity);
      v60 = dispatch thunk of CustomStringConvertible.description.getter(v52, v59);
      v62 = (const char *)v61;
      v166 = sub_100228BD8(v60, v61, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v57 + 4);
      v63 = swift_bridgeObjectRelease(v62);
      (*(void (**)(os_log_t, uint64_t, __n128))(v148 + 8))(v56, v52, v63);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "No connectionID present - %s", v57, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {
      (*(void (**)(os_log_t, uint64_t))(v11 + 8))(v51, v52);
    }
    goto LABEL_21;
  }
  v160 = (unsigned int (*)(uint64_t, uint64_t, char *))v49;
  v64 = v163;
  v144 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  v144(v163, v34, v35);
  v65 = v48;
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v66 = type metadata accessor for Logger(0);
  v67 = sub_100221DF8(v66, (uint64_t)qword_1007BC6B0);
  v68 = v161;
  v159 = *(uint64_t (**)(char *, char *, uint64_t))(v65 + 16);
  v69 = v159(v161, v64, v35);
  v137 = v67;
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v164 = v70;
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v158 = swift_slowAlloc(32, -1);
    v168 = v158;
    *(_DWORD *)v72 = 136315138;
    v156 = v72 + 4;
    v157 = v72;
    v73 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v74 = dispatch thunk of CustomStringConvertible.description.getter(v35, v73);
    v76 = (const char *)v75;
    v166 = sub_100228BD8(v74, v75, &v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v156);
    v77 = swift_bridgeObjectRelease(v76);
    v65 = v155;
    v152 = *(void (**)(char *, uint64_t, __n128))(v155 + 8);
    v152(v68, v35, v77);
    v70 = v164;
    v78 = v71;
    v79 = v157;
    _os_log_impl((void *)&_mh_execute_header, v164, v78, "Becoming presenter for connectionID %s", v157, 0xCu);
    v80 = v158;
    swift_arrayDestroy(v158, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v79, -1, -1);
  }
  else
  {
    v152 = *(void (**)(char *, uint64_t, __n128))(v65 + 8);
    ((void (*)(char *, uint64_t))v152)(v68, v35);
  }

  v85 = v65;
  v86 = (const char **)&v165[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters];
  v87 = swift_beginAccess(&v165[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters], &v168, 0, 0);
  v138 = (unint64_t *)v86;
  v88 = *v86;
  v158 = *((_QWORD *)*v86 + 2);
  if (!v158)
  {
LABEL_35:
    v104 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
    v105 = (uint64_t)v143;
    v104(v143, v151, v147, v87);
    v106 = v145;
    v107 = v105 + *(int *)(v145 + 20);
    v108 = type metadata accessor for SFAirDropClient.Identifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v107, v169, v108);
    v109 = (double *)(v105 + *(int *)(v106 + 24));
    *v109 = a3;
    v109[1] = a4;
    v109[2] = a5;
    v109[3] = a6;
    v110 = v142;
    sub_1003713A8(v105, v142);
    v111 = v138;
    swift_beginAccess(v138, &v166, 33, 0);
    v112 = *v111;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v111);
    *v111 = v112;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v112 = sub_100228818(0, *(_QWORD *)(v112 + 16) + 1, 1, v112);
      *v111 = v112;
    }
    v115 = *(_QWORD *)(v112 + 16);
    v114 = *(_QWORD *)(v112 + 24);
    if (v115 >= v114 >> 1)
    {
      v112 = sub_100228818(v114 > 1, v115 + 1, 1, v112);
      *v111 = v112;
    }
    *(_QWORD *)(v112 + 16) = v115 + 1;
    sub_1003713EC(v110, v112+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(_QWORD *)(v146 + 72) * v115);
    swift_endAccess(&v166);
    sub_100370F70(v105);
    v116 = v163;
    v117 = v35;
    goto LABEL_48;
  }
  v161 = (char *)v35;
  v165 = v32;
  v89 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
  v156 = *(uint8_t **)(v146 + 72);
  swift_bridgeObjectRetain(v88, v87.n128_f64[0]);
  v91 = 0;
  v136 = v89;
  v164 = v29;
  v154 = v23;
  v157 = (uint8_t *)v88;
  while (1)
  {
    v94 = (uint64_t)v165;
    SFClientIdentity.connectionID.getter(v90);
    v95 = v161;
    v159((char *)v29, v163, (uint64_t)v161);
    (*(void (**)(NSObject *, _QWORD, uint64_t, char *))(v85 + 56))(v29, 0, 1, v95);
    v96 = (uint64_t)&v23[*(int *)(v162 + 48)];
    sub_100370F28(v94, (uint64_t)v23);
    sub_100370F28((uint64_t)v29, v96);
    v97 = v160;
    if (v160((uint64_t)v23, 1, v95) == 1)
      break;
    v98 = v153;
    sub_100370F28((uint64_t)v23, v153);
    if (v97(v96, 1, v95) == 1)
    {
      sub_10000D0F0((uint64_t)v164, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v165, &qword_1007B7280);
      ((void (*)(uint64_t, char *))v152)(v98, v95);
      v85 = v155;
      v93 = (const char *)v157;
      goto LABEL_27;
    }
    v99 = v149;
    v144(v149, (char *)v96, (uint64_t)v95);
    v100 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v101 = dispatch thunk of static Equatable.== infix(_:_:)(v98, v99, v95, v100);
    v102 = v99;
    v103 = (void (*)(uint64_t, char *))v152;
    ((void (*)(char *, char *))v152)(v102, v95);
    sub_10000D0F0((uint64_t)v164, &qword_1007B7280);
    sub_10000D0F0((uint64_t)v165, &qword_1007B7280);
    v103(v98, v95);
    v90 = sub_10000D0F0((uint64_t)v23, &qword_1007B7280);
    v85 = v155;
    v93 = (const char *)v157;
    if ((v101 & 1) != 0)
      goto LABEL_41;
LABEL_28:
    ++v91;
    v89 += (unint64_t)v156;
    v29 = v164;
    if (v158 == v91)
    {
      v87 = swift_bridgeObjectRelease(v93);
      v11 = v148;
      v35 = (uint64_t)v161;
      goto LABEL_35;
    }
  }
  sub_10000D0F0((uint64_t)v29, &qword_1007B7280);
  sub_10000D0F0(v94, &qword_1007B7280);
  v92 = v97(v96, 1, v95);
  v93 = (const char *)v157;
  if (v92 != 1)
  {
LABEL_27:
    v23 = v154;
    v90 = sub_10000D0F0((uint64_t)v154, &qword_1007B6470);
    goto LABEL_28;
  }
  sub_10000D0F0((uint64_t)v154, &qword_1007B7280);
LABEL_41:
  swift_bridgeObjectRelease(v93);
  v119 = Logger.logObject.getter(v118);
  v120 = static os_log_type_t.default.getter(v119);
  if (os_log_type_enabled(v119, v120))
  {
    v121 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v121 = 0;
    _os_log_impl((void *)&_mh_execute_header, v119, v120, "Presenter already exists, becoming first presenter", v121, 2u);
    swift_slowDealloc(v121, -1, -1);
  }

  v122 = (NSObject **)v138;
  v123 = v161;
  if (v91 >= *(_QWORD *)(*v138 + 16))
  {
    __break(1u);
  }
  else
  {
    v124 = *v138 + v89;
    v89 = (unint64_t)v140;
    (*(void (**)(char *, unint64_t, uint64_t))(v148 + 16))(v140, v124, v147);
    v125 = v145;
    v126 = *(int *)(v145 + 20);
    v127 = v124 + v126;
    v128 = v89 + v126;
    v129 = type metadata accessor for SFAirDropClient.Identifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v128, v127, v129);
    v130 = (double *)(v89 + *(int *)(v125 + 24));
    *v130 = a3;
    v130[1] = a4;
    v130[2] = a5;
    v130[3] = a6;
    swift_beginAccess(v122, &v166, 33, 0);
    v131 = v139;
    sub_100268CC0(v91, v139);
    sub_100370F70(v131);
    v91 = v141;
    sub_1003713A8(v89, v141);
    v119 = *v122;
    v132 = swift_isUniquelyReferenced_nonNull_native(*v122);
    *v122 = v119;
    if ((v132 & 1) != 0)
      goto LABEL_45;
  }
  v119 = sub_100228818(0, (int64_t)v119[2].isa + 1, 1, (unint64_t)v119);
  *v122 = v119;
LABEL_45:
  isa = (unint64_t)v119[2].isa;
  v133 = (unint64_t)v119[3].isa;
  if (isa >= v133 >> 1)
  {
    v119 = sub_100228818(v133 > 1, isa + 1, 1, (unint64_t)v119);
    *v122 = v119;
  }
  v119[2].isa = (Class)(isa + 1);
  sub_1003713EC(v91, (uint64_t)v119 + v136 + isa * (_QWORD)v156);
  swift_endAccess(&v166);
  sub_100370F70(v89);
  v116 = v163;
  v117 = (uint64_t)v123;
LABEL_48:
  ((void (*)(char *, uint64_t))v152)(v116, v117);
}

void sub_10036A294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t (**v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  const char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)(uint64_t, _QWORD, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  const char *v54;
  __n128 v55;
  uint8_t *v56;
  uint64_t v57;
  uint8_t *v58;
  __n128 v59;
  const char *v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69;
  char *v70;
  void (*v71)(uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  const char *v82;
  __n128 v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  void (*v95)(char *, uint64_t, __n128);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (**v100)(uint64_t, _QWORD, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint8_t *v103;
  uint64_t v104;
  _BYTE v105[16];
  uint64_t v106[4];
  uint64_t v107;
  uint64_t v108;

  v102 = type metadata accessor for SFClientIdentity(0);
  v100 = *(uint64_t (***)(uint64_t, _QWORD, uint64_t))(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (uint64_t)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  v90 = *(const char **)(v3 - 8);
  __chkstk_darwin(v3);
  v89 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v101);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B7280);
  v8 = __chkstk_darwin(v7);
  v96 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v86 - v11;
  v13 = __chkstk_darwin(v10);
  v97 = (uint64_t)&v86 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v86 - v15;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v91 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v93 = (char *)&v86 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v86 - v24;
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v86 - v27;
  SFClientIdentity.connectionID.getter(v26);
  v103 = (uint8_t *)v18;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v29(v16, 1, v17) == 1)
  {
    sub_10000D0F0((uint64_t)v16, &qword_1007B7280);
    if (qword_1007B3F98 != -1)
      swift_once(&qword_1007B3F98, sub_1003673C8);
    v30 = type metadata accessor for Logger(0);
    sub_100221DF8(v30, (uint64_t)qword_1007BC6B0);
    v31 = v100;
    v32 = v98;
    v33 = v102;
    v34 = v100[2](v98, a1, v102);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v106[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v103 = v37 + 4;
      v39 = sub_100220D78(&qword_1007B6490, (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity, (uint64_t)&protocol conformance descriptor for SFClientIdentity);
      v40 = dispatch thunk of CustomStringConvertible.description.getter(v33, v39);
      v42 = (const char *)v41;
      v104 = sub_100228BD8(v40, v41, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v103);
      v43 = swift_bridgeObjectRelease(v42);
      ((void (*)(uint64_t, uint64_t, __n128))v31[1])(v32, v33, v43);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "No connectionID present - %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v31[1])(v32, v33);
    }

    return;
  }
  v92 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v103 + 4);
  v92(v28, v16, v17);
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_100221DF8(v44, (uint64_t)qword_1007BC6B0);
  v46 = (uint64_t (**)(uint64_t, _QWORD, uint64_t))*((_QWORD *)v103 + 2);
  v102 = (uint64_t)v28;
  v100 = v46;
  v47 = ((uint64_t (*)(char *, char *, uint64_t))v46)(v25, v28, v17);
  v88 = v45;
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter(v48);
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v98 = swift_slowAlloc(32, -1);
    v106[0] = v98;
    v87 = v50;
    *(_DWORD *)v50 = 136315138;
    v95 = (void (*)(char *, uint64_t, __n128))(v50 + 4);
    v51 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v52 = dispatch thunk of CustomStringConvertible.description.getter(v17, v51);
    v54 = (const char *)v53;
    v104 = sub_100228BD8(v52, v53, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v95);
    v55 = swift_bridgeObjectRelease(v54);
    v95 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v103 + 1);
    v95(v25, v17, v55);
    v56 = v87;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Resigning presenter for connectionID %s", v87, 0xCu);
    v57 = v98;
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v56, -1, -1);
  }
  else
  {
    v95 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v103 + 1);
    ((void (*)(char *, uint64_t))v95)(v25, v17);
  }

  v58 = (uint8_t *)(v99 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  v59 = swift_beginAccess(v99 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters, v106, 0, 0);
  v60 = *(const char **)v58;
  v61 = v97;
  v99 = *(_QWORD *)(*(_QWORD *)v58 + 16);
  if (!v99)
  {
LABEL_24:
    v72 = v91;
    v73 = v102;
    v74 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v100)(v91, v102, v17, v59);
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.error.getter(v75);
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc(12, -1);
      v78 = swift_slowAlloc(32, -1);
      v104 = v78;
      *(_DWORD *)v77 = 136315138;
      v79 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v80 = dispatch thunk of CustomStringConvertible.description.getter(v17, v79);
      v82 = (const char *)v81;
      v107 = sub_100228BD8(v80, v81, &v104);
      v73 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v77 + 4);
      v83 = swift_bridgeObjectRelease(v82);
      v84 = (void (*)(uint64_t, uint64_t))v95;
      v95(v72, v17, v83);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "No existing transfer presenter for connectionID %s", v77, 0xCu);
      swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v77, -1, -1);
    }
    else
    {
      v84 = (void (*)(uint64_t, uint64_t))v95;
      ((void (*)(char *, uint64_t))v95)(v72, v17);
    }

    v84(v73, v17);
    return;
  }
  v87 = v58;
  v62 = &v60[(*((unsigned __int8 *)v90 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v90 + 80)];
  v98 = *((_QWORD *)v90 + 9);
  v90 = v60;
  swift_bridgeObjectRetain(v60, v59.n128_f64[0]);
  v64 = 0;
  v94 = v29;
  while (1)
  {
    SFClientIdentity.connectionID.getter(v63);
    ((void (*)(char *, uint64_t, uint64_t))v100)(v12, v102, v17);
    (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v103 + 7))(v12, 0, 1, v17);
    v65 = (uint64_t)&v6[*(int *)(v101 + 48)];
    sub_100370F28(v61, (uint64_t)v6);
    sub_100370F28((uint64_t)v12, v65);
    if (v29(v6, 1, v17) == 1)
      break;
    v66 = v96;
    sub_100370F28((uint64_t)v6, v96);
    if (v29((char *)v65, 1, v17) == 1)
    {
      sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
      sub_10000D0F0(v61, &qword_1007B7280);
      ((void (*)(uint64_t, uint64_t))v95)(v66, v17);
      v29 = v94;
      goto LABEL_16;
    }
    v67 = v93;
    v92(v93, (char *)v65, v17);
    v68 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v69 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67, v17, v68);
    v70 = v67;
    v71 = (void (*)(uint64_t, uint64_t))v95;
    ((void (*)(char *, uint64_t))v95)(v70, v17);
    sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
    sub_10000D0F0(v97, &qword_1007B7280);
    v71(v66, v17);
    v61 = v97;
    v63 = sub_10000D0F0((uint64_t)v6, &qword_1007B7280);
    v29 = v94;
    if ((v69 & 1) != 0)
      goto LABEL_29;
LABEL_17:
    ++v64;
    v62 += v98;
    if (v99 == v64)
    {
      v59 = swift_bridgeObjectRelease(v90);
      goto LABEL_24;
    }
  }
  sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
  sub_10000D0F0(v61, &qword_1007B7280);
  if (v29((char *)v65, 1, v17) != 1)
  {
LABEL_16:
    v63 = sub_10000D0F0((uint64_t)v6, &qword_1007B6470);
    goto LABEL_17;
  }
  sub_10000D0F0((uint64_t)v6, &qword_1007B7280);
LABEL_29:
  swift_bridgeObjectRelease(v90);
  swift_beginAccess(v87, &v104, 33, 0);
  v85 = v89;
  sub_100268CC0(v64, v89);
  sub_100370F70(v85);
  swift_endAccess(&v104);
  ((void (*)(uint64_t, uint64_t))v95)(v102, v17);
}

uint64_t sub_10036ACCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[3];
  uint64_t v20[2];

  v1 = v0;
  v2 = sub_100008384(&qword_1007BCC90);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = SFClientIdentity.bundleIdentifier.getter(v4);
  if (v8)
  {
    v9 = v7;
    v10 = v8;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs, v19, 33, 0);
    sub_10045DF5C(v20, v9, v10);
    v11 = (const char *)v20[1];
    swift_endAccess(v19);
    swift_bridgeObjectRelease(v11);
  }
  v19[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject);
  v12 = sub_100008384(&qword_1007BCB98);
  v13 = sub_10026E2FC(&qword_1007BCC98, &qword_1007BCB98, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v12, v13);
  v14 = sub_10026E2FC(&qword_1007BCCA0, &qword_1007BCC90, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  v15 = sub_100220D78(&qword_1007BCCA8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers, (uint64_t)&protocol conformance descriptor for SFAirDrop.Transfers);
  v16 = sub_100220D78(&qword_1007BCCB0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers, (uint64_t)&protocol conformance descriptor for SFAirDrop.Transfers);
  AsyncSequence<>.xpc.getter(v2, v14, v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SDAirDropService.description.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  type metadata accessor for SFAirDropUserDefaults(0, a2);
  v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  v3 = SFAirDropUserDefaults.description.getter();

  return v3;
}

id SDAirDropService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAirDropService()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary16SDAirDropService);
}

uint64_t sub_10036B0C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  unsigned int *v18;
  _BYTE v20[24];

  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess(v7, v20, 0, 0);
  v9 = *v7;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v10 - 1;
    v12 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
    v13 = v9
        + ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v11
        + *(int *)(v12 + 20);
    v14 = type metadata accessor for SFAirDropClient.Identifier(0);
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v13, v14);
  }
  else
  {
    static SFPlatform.iOS.getter(v8);
    v16 = static SFPlatform.isPlatform(_:)(v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v17 = type metadata accessor for SFAirDropClient.Identifier(0);
    if ((v16 & 1) != 0)
      v18 = (unsigned int *)&enum case for SFAirDropClient.Identifier.airdropUI(_:);
    else
      v18 = (unsigned int *)&enum case for SFAirDropClient.Identifier.daemon(_:);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a1, *v18, v17);
  }
}

uint64_t SFAirDropInvocations.Send.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100008384(&qword_1007B6738);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036B270, 0, 0);
}

uint64_t sub_10036B270(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t **v3;

  SFClientIdentity.bundleIdentifier.getter(a1);
  v1[9] = v2;
  v3 = (uint64_t **)swift_task_alloc(dword_1007B813C);
  v1[10] = (uint64_t)v3;
  *v3 = v1;
  v3[1] = (uint64_t *)sub_10036B2F4;
  return sub_1002A8958(v1[8], v1[3]);
}

uint64_t sub_10036B2F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10036B418;
  }
  else
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 72));
    v4 = sub_10036B360;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10036B360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = sub_100220D78(&qword_1007BC6E0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  v5 = sub_100220D78(&qword_1007BC6E8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter(v3, v4, v5, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B418()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC88, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Send);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036B524(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v6 = sub_100008384(&qword_1007B6738);
  v4[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[6] = v7;
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a3;
  v4[7] = v8;
  v4[8] = v9;
  return swift_task_switch(sub_10036B594, 0, 0);
}

uint64_t sub_10036B594(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t **v3;

  SFClientIdentity.bundleIdentifier.getter(a1);
  v1[9] = v2;
  v3 = (uint64_t **)swift_task_alloc(dword_1007B813C);
  v1[10] = (uint64_t)v3;
  *v3 = v1;
  v3[1] = (uint64_t *)sub_10036B61C;
  return sub_1002A8958(v1[7], v1[3]);
}

uint64_t sub_10036B61C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10036B740;
  }
  else
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 72));
    v4 = sub_10036B688;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10036B688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_100220D78(&qword_1007BC6E0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  v5 = sub_100220D78(&qword_1007BC6E8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter(v3, v4, v5, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B740()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.Cancel.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch(sub_10036B79C, 0, 0);
}

uint64_t sub_10036B79C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1007B812C);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_10036B7F8;
  return sub_1002AAF0C(*(_QWORD *)(v0 + 40));
}

uint64_t sub_10036B7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10036B8F4;
  else
    v3 = sub_10036B85C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10036B85C()
{
  uint64_t v0;

  VoidResponse.init()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10036BAF8;
  else
    v3 = sub_100371434;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10036B8F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v1 = v0[8];
  v2 = type metadata accessor for Logger(0);
  v0[11] = sub_100221DF8(v2, (uint64_t)qword_1007BC6B0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[8];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    v0[3] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Send cancel failed %@, attempting receive cancel with same transferID", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(v0[8]);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v12 = (_QWORD *)swift_task_alloc(dword_1007BA13C);
  v0[9] = v12;
  *v12 = v0;
  v12[1] = sub_10036B890;
  return sub_1002F576C(v0[5]);
}

uint64_t sub_10036BAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 80);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Receive cancel failed %@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 80);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  v11 = *(_QWORD *)(v0 + 80);

  v12 = type metadata accessor for SFAirDropReceive.Failure(0);
  v13 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v12, v13, 0, 0);
  v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, enum case for SFAirDropReceive.Failure.badRequest(_:), v12);
  swift_willThrow(v15);
  swift_errorRelease(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036BCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC80, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Cancel);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036BDB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC6F4);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[5] = a2;
  v7[6] = v6;
  v7[4] = a1;
  return swift_task_switch(sub_10036B79C, 0, 0);
}

uint64_t SFAirDropInvocations.FetchUserDefaults.invoke(with:context:client:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  type metadata accessor for SFAirDropUserDefaults(0, a2);
  v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  v3 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  return v3;
}

uint64_t sub_10036BE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;

  v16 = sub_100220D78(&qword_1007BCC78, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchUserDefaults, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchUserDefaults);
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v16);
}

void sub_10036BF28(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;

  type metadata accessor for SFAirDropUserDefaults(0, a1);
  v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  v5 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  if (!v2)
    *a2 = v5;
}

uint64_t SFAirDropInvocations.FetchEndpointMetadata.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_10036BFA4, 0, 0);
}

uint64_t sub_10036BFA4()
{
  uint64_t *v0;
  uint64_t **v1;

  v1 = (uint64_t **)swift_task_alloc(dword_1007BDAAC);
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10036C000;
  return sub_100398BE0(v0[2], v0[3]);
}

uint64_t sub_10036C000()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10036C04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchEndpointMetadata);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036C11C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *a3;
  return swift_task_switch(sub_10036BFA4, 0, 0);
}

uint64_t SFAirDropInvocations.BecomeTransferPresenter.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for SFAirDropClient.Identifier(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036C1A0, 0, 0);
}

uint64_t sub_10036C1A0()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  v2 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter(v1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  *((_QWORD *)v0 + 9) = v8;
  *((_QWORD *)v0 + 10) = v6;
  *((_QWORD *)v0 + 11) = v4;
  v0[12] = v2;
  return swift_task_switch(sub_10036C23C, static AirDropActor.shared, 0);
}

uint64_t sub_10036C23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_10036943C(*(_QWORD *)(v0 + 40), v1, *(double *)(v0 + 96), *(double *)(v0 + 88), *(double *)(v0 + 80), *(double *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10036C2AC, 0, 0);
}

uint64_t sub_10036C2AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  VoidResponse.init()();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036C2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC68, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BecomeTransferPresenter);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036C3BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v6 = type metadata accessor for SFAirDropClient.Identifier(0);
  v4[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[6] = v7;
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a3;
  v4[7] = v8;
  v4[8] = v9;
  return swift_task_switch(sub_10036C428, 0, 0);
}

uint64_t sub_10036C428()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  v2 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter(v1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  *((_QWORD *)v0 + 9) = v8;
  *((_QWORD *)v0 + 10) = v6;
  *((_QWORD *)v0 + 11) = v4;
  v0[12] = v2;
  return swift_task_switch(sub_10036C4C4, static AirDropActor.shared, 0);
}

uint64_t sub_10036C4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  sub_10036943C(*(_QWORD *)(v0 + 32), v1, *(double *)(v0 + 96), *(double *)(v0 + 88), *(double *)(v0 + 80), *(double *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_10036C534, 0, 0);
}

uint64_t sub_10036C534()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  VoidResponse.init()();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.ResignTransferPresenter.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  return swift_task_switch(sub_10036C590, 0, 0);
}

uint64_t sub_10036C590()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036C5F4, static AirDropActor.shared, 0);
}

uint64_t sub_10036C5F4()
{
  uint64_t v0;

  sub_10036A294(*(_QWORD *)(v0 + 32));
  return swift_task_switch(sub_10036C638, 0, 0);
}

uint64_t sub_10036C638()
{
  uint64_t v0;

  VoidResponse.init()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036C66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ResignTransferPresenter);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036C73C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *a3;
  return swift_task_switch(sub_10036C75C, 0, 0);
}

uint64_t sub_10036C75C()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036C7C0, static AirDropActor.shared, 0);
}

uint64_t sub_10036C7C0()
{
  uint64_t v0;

  sub_10036A294(*(_QWORD *)(v0 + 24));
  return swift_task_switch(sub_100371430, 0, 0);
}

uint64_t SFAirDropInvocations.TransfersMonitor.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  return swift_task_switch(sub_10036C820, 0, 0);
}

uint64_t sub_10036C820()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036C884, static AirDropActor.shared, 0);
}

uint64_t sub_10036C884()
{
  uint64_t v0;

  sub_10036ACCC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036C8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC58, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TransfersMonitor);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036C98C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *a3;
  return swift_task_switch(sub_10036C9AC, 0, 0);
}

uint64_t sub_10036C9AC()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036CA10, static AirDropActor.shared, 0);
}

uint64_t sub_10036CA10()
{
  uint64_t v0;

  sub_10036ACCC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.StartNearbySharingDiscovery.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_10036CA64, 0, 0);
}

uint64_t sub_10036CA64()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036CAC8, static AirDropActor.shared, 0);
}

uint64_t sub_10036CAC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036CB30, 0, 0);
}

uint64_t sub_10036CB30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10023A834(v0 + 2, v1);
  v0[17] = *(_QWORD *)(v2 + 120);
  return swift_task_switch(sub_10036CB88, static AirDropActor.shared, 0);
}

uint64_t sub_10036CB88()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return swift_task_switch(sub_100371438, 0, 0);
}

uint64_t sub_10036CBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartNearbySharingDiscovery);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036CCA0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a3;
  v9 = (_QWORD *)swift_task_alloc(dword_1007BC72C);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D098;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return swift_task_switch(sub_10036CA64, 0, 0);
}

uint64_t SFAirDropInvocations.StopNearbySharingDiscovery.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_10036CD34, 0, 0);
}

uint64_t sub_10036CD34()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036CD98, static AirDropActor.shared, 0);
}

uint64_t sub_10036CD98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036CE00, 0, 0);
}

uint64_t sub_10036CE00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10023A834(v0 + 2, v1);
  v0[17] = *(_QWORD *)(v2 + 144);
  return swift_task_switch(sub_10036CE58, static AirDropActor.shared, 0);
}

uint64_t sub_10036CE58()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return swift_task_switch(sub_10036CE9C, 0, 0);
}

uint64_t sub_10036CE9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_10022E75C((_QWORD *)(v0 + 16));
  VoidResponse.init()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC48, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopNearbySharingDiscovery);
  *v15 = v14;
  v15[1] = sub_10036CFAC;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *v3;
  v8 = swift_task_dealloc(v6);
  if (!v2)
  {
    v8 = a1;
    v9 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
}

uint64_t sub_10036D010(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *a2;
  v6 = a2[1];
  v7 = *a3;
  v8 = (_QWORD *)swift_task_alloc(dword_1007BC73C);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000D12C;
  v8[12] = v6;
  v8[13] = v7;
  v8[10] = a1;
  v8[11] = v5;
  return swift_task_switch(sub_10036CD34, 0, 0);
}

uint64_t SFAirDropInvocations.TakeNearbySharingAssertion.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_10036D0A0, 0, 0);
}

uint64_t sub_10036D0A0()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036D104, static AirDropActor.shared, 0);
}

uint64_t sub_10036D104()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036D16C, 0, 0);
}

uint64_t sub_10036D16C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10023A834(v0 + 2, v1);
  v0[17] = *(_QWORD *)(v2 + 152);
  return swift_task_switch(sub_10036D1C4, static AirDropActor.shared, 0);
}

uint64_t sub_10036D1C4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return swift_task_switch(sub_10036D20C, 0, 0);
}

uint64_t sub_10036D20C()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036D240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC40, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TakeNearbySharingAssertion);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036D310(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a3;
  v9 = (_QWORD *)swift_task_alloc(dword_1007BC744);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D098;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return swift_task_switch(sub_10036D0A0, 0, 0);
}

uint64_t SFAirDropInvocations.ReleaseNearbySharingAssertion.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10036D3A4, 0, 0);
}

uint64_t sub_10036D3A4()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036D408, static AirDropActor.shared, 0);
}

uint64_t sub_10036D408()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036D470, 0, 0);
}

uint64_t sub_10036D470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10023A834(v0 + 2, v1);
  v0[16] = *(_QWORD *)(v2 + 160);
  return swift_task_switch(sub_10036D4C8, static AirDropActor.shared, 0);
}

uint64_t sub_10036D4C8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 128))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return swift_task_switch(sub_10036CE9C, 0, 0);
}

uint64_t sub_10036D50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC38, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036D5DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC74C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_10036D3A4, 0, 0);
}

uint64_t SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[10] = a1;
  v3[11] = a3;
  v4 = sub_100008384(&qword_1007BC758);
  v3[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[13] = v5;
  v3[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036D6B4, 0, 0);
}

uint64_t sub_10036D6B4()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036D718, static AirDropActor.shared, 0);
}

uint64_t sub_10036D718()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036D780, 0, 0);
}

uint64_t sub_10036D780()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[15] = v1;
  v0[16] = v2;
  v0[17] = sub_10023A834(v0 + 2, v1);
  v0[18] = *(_QWORD *)(v2 + 96);
  return swift_task_switch(sub_10036D7D8, static AirDropActor.shared, 0);
}

uint64_t sub_10036D7D8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  return swift_task_switch(sub_10036D81C, 0, 0);
}

uint64_t sub_10036D81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = sub_10026E2FC(&qword_1007BC760, &qword_1007BC758, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  v5 = sub_10037003C(&qword_1007BC768, &qword_1007BC770, (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v6 = sub_10037003C(&qword_1007BC778, &qword_1007BC780, (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction, (uint64_t)&protocol conformance descriptor for <A> [A]);
  AsyncSequence<>.xpc.getter(v3, v4, v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036D914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.NearbySharingInteractions);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036D9E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = *a3;
  v6 = (_QWORD *)swift_task_alloc(dword_1007BC754);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000D098;
  return SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)(a1, v7, v5);
}

uint64_t SFAirDropInvocations.SimulateNearbySharingInteractions.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10036DA58, 0, 0);
}

uint64_t sub_10036DA58()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036DABC, static AirDropActor.shared, 0);
}

uint64_t sub_10036DABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036DB24, 0, 0);
}

uint64_t sub_10036DB24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10023A834(v0 + 2, v1);
  v0[16] = *(_QWORD *)(v2 + 56);
  return swift_task_switch(sub_10036DB7C, static AirDropActor.shared, 0);
}

uint64_t sub_10036DB7C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 128))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return swift_task_switch(sub_100371438, 0, 0);
}

uint64_t sub_10036DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC28, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SimulateNearbySharingInteractions);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036DC90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC78C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_10036DA58, 0, 0);
}

uint64_t SFAirDropInvocations.BoopAtADistanceBegin.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10036DD20, 0, 0);
}

uint64_t sub_10036DD20()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036DD84, static AirDropActor.shared, 0);
}

uint64_t sub_10036DD84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036DDEC, 0, 0);
}

uint64_t sub_10036DDEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  int *v6;

  v1 = v0[5];
  v2 = v0[6];
  sub_10023A834(v0 + 2, v1);
  v3 = *(int **)(v2 + 64);
  v6 = (int *)((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_10036DE6C;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v6)(v0[10], v0[11], v1, v2);
}

uint64_t sub_10036DE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10036DED0;
  else
    v3 = sub_10036D20C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10036DED0()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036DF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC20, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceBegin);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036DFD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC794);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_10036DD20, 0, 0);
}

uint64_t SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v4 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0);
  v3[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[14] = v5;
  v3[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0, v6);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036E0D4, 0, 0);
}

uint64_t sub_10036E0D4()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036E138, static AirDropActor.shared, 0);
}

uint64_t sub_10036E138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036E1A0, 0, 0);
}

uint64_t sub_10036E1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = v0[5];
  v2 = v0[6];
  sub_10023A834(v0 + 2, v1);
  v3 = SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.transaction.getter();
  SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.tap.getter(v3);
  v4 = *(int **)(v2 + 72);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_10036E250;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v7)(v0[18], v0[15], v1, v2);
}

uint64_t sub_10036E250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v9 = sub_10036E358;
  else
    v9 = sub_10036E2F8;
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10036E2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = sub_10022E75C((_QWORD *)(v0 + 16));
  VoidResponse.init()(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036E358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036E3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC18, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceUpdate);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036E474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC79C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.BoopAtADistanceEnd.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10036E4F8, 0, 0);
}

uint64_t sub_10036E4F8()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036E55C, static AirDropActor.shared, 0);
}

uint64_t sub_10036E55C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036E5C4, 0, 0);
}

uint64_t sub_10036E5C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10023A834(v0 + 2, v1);
  v0[16] = *(_QWORD *)(v2 + 80);
  return swift_task_switch(sub_10036E61C, static AirDropActor.shared, 0);
}

uint64_t sub_10036E61C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 128))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  *(_QWORD *)(v0 + 136) = 0;
  return swift_task_switch(sub_100371438, 0, 0);
}

uint64_t sub_10036E680()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036E6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC10, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceEnd);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036E784(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC7A4);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_10036E4F8, 0, 0);
}

uint64_t SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v4 = sub_100008384(&qword_1007B7280);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036E858, 0, 0);
}

uint64_t sub_10036E858()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036E8BC, static AirDropActor.shared, 0);
}

uint64_t sub_10036E8BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  sub_100244418(v1, v0 + 16);
  return swift_task_switch(sub_10036E924, 0, 0);
}

uint64_t sub_10036E924()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[13];
  v2 = v0[11];
  v3 = v0[5];
  v4 = v0[6];
  v0[14] = v3;
  v0[15] = v4;
  v0[16] = sub_10023A834(v0 + 2, v3);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v2, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  v0[17] = *(_QWORD *)(v4 + 88);
  return swift_task_switch(sub_10036E9D0, static AirDropActor.shared, 0);
}

uint64_t sub_10036E9D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 136))(v1, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  sub_10000D0F0(v1, &qword_1007B7280);
  return swift_task_switch(sub_10036EA28, 0, 0);
}

uint64_t sub_10036EA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_10022E75C((_QWORD *)(v0 + 16));
  VoidResponse.init()(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036EA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC08, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.EndNearbySharingInteraction);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036EB44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BC7AC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[5] = a1;
  v3[6] = a3;
  v4 = sub_100008384(&qword_1007BC070);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036EC10, 0, 0);
}

uint64_t sub_10036EC10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036EC88, static AirDropActor.shared, 0);
}

uint64_t sub_10036EC88(uint64_t a1, uint64_t a2)
{
  sub_100356754(a1, a2);
  return swift_task_switch(sub_10036ECC4, 0, 0);
}

uint64_t sub_10036ECC4()
{
  return swift_task_switch(sub_10036ECE0, static AirDropActor.shared, 0);
}

uint64_t sub_10036ECE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  v5 = swift_beginAccess(v4, v0 + 16, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v1, v4, v2, v5);
  v6 = sub_10026E2FC(&qword_1007BC7C0, &qword_1007BC070, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  v7 = sub_100220D78(&qword_1007BC7C8, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate, (uint64_t)&protocol conformance descriptor for SFTempPairingSenderStateUpdate);
  v8 = sub_100220D78(&qword_1007BC7D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate, (uint64_t)&protocol conformance descriptor for SFTempPairingSenderStateUpdate);
  AsyncSequence<>.xpc.getter(v2, v6, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCC00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartTempPairing);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036EEC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = *a3;
  v6 = (_QWORD *)swift_task_alloc(dword_1007BC7B4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000D098;
  return SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)(a1, v7, v5);
}

uint64_t SFAirDropInvocations.StopTempPairing.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch(sub_10036EF30, 0, 0);
}

uint64_t sub_10036EF30()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036EFA8, static AirDropActor.shared, 0);
}

uint64_t sub_10036EFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server));
    sub_100484AD8();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v4);
  return swift_task_switch(sub_10036C638, 0, 0);
}

uint64_t sub_10036F020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBF8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopTempPairing);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036F0F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = *a3;
  v6 = (_QWORD *)swift_task_alloc(dword_1007BC7DC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000D098;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch(sub_10036EF30, 0, 0);
}

uint64_t SFAirDropInvocations.TempPairingMonitor.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch(sub_10036F16C, 0, 0);
}

uint64_t sub_10036F16C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036F1E4, static AirDropActor.shared, 0);
}

uint64_t sub_10036F1E4(uint64_t a1, uint64_t a2)
{
  sub_10035645C(a1, a2);
  return swift_task_switch(sub_10036F220, 0, 0);
}

uint64_t sub_10036F220()
{
  return swift_task_switch(sub_10036F23C, static AirDropActor.shared, 0);
}

uint64_t sub_10036F23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_100008384(&qword_1007BC080);
  v2 = sub_10026E2FC(&qword_1007BC7E8, &qword_1007BC080, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  v3 = sub_100220D78(&qword_1007BC7F0, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate, (uint64_t)&protocol conformance descriptor for SFTempPairingStateUpdate);
  v4 = sub_100220D78(&qword_1007BC7F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate, (uint64_t)&protocol conformance descriptor for SFTempPairingStateUpdate);
  AsyncSequence<>.xpc.getter(v1, v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036F310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBF0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingMonitor);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036F3E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch(sub_10036F16C, 0, 0);
}

id SFAirDropInvocations.SharingName.invoke(with:context:client:)()
{
  return sub_1003575CC();
}

uint64_t sub_10036F420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;

  v16 = sub_100220D78(&qword_1007BCBE8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SharingName, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SharingName);
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v16);
}

id sub_10036F4CC@<X0>(_QWORD *a1@<X8>)
{
  id result;
  uint64_t v3;

  result = sub_1003575CC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SFAirDropInvocations.TempPairingConnect.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch(sub_10036F510, 0, 0);
}

uint64_t sub_10036F510()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036F588, static AirDropActor.shared, 0);
}

uint64_t sub_10036F588()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  id v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1003575CC();
    v5 = v4;
    sub_10034CB0C((uint64_t)v3, v4);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007BBE60);
    v2 = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v8, "Attempting to connect while not browsing.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
  }

  return swift_task_switch(sub_100371430, 0, 0);
}

uint64_t sub_10036F6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBE0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingConnect);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036F774(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch(sub_10036F790, 0, 0);
}

uint64_t sub_10036F790()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036F808, static AirDropActor.shared, 0);
}

uint64_t sub_10036F808()
{
  sub_100356BCC();
  return swift_task_switch(sub_10036C638, 0, 0);
}

uint64_t SFAirDropInvocations.TempPairingDisconnect.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch(sub_10036F85C, 0, 0);
}

uint64_t sub_10036F85C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036F8D4, static AirDropActor.shared, 0);
}

uint64_t sub_10036F8D4()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    v2 = v1;
    sub_10034D37C();
  }
  else
  {
    if (qword_1007B3F78 != -1)
      swift_once(&qword_1007B3F78, sub_100355E88);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007BBE60);
    v2 = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v5, "Attempting to disconnect while not browsing.", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
  }

  return swift_task_switch(sub_100371430, 0, 0);
}

uint64_t sub_10036F9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBD8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingDisconnect);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036FAB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch(sub_10036FACC, 0, 0);
}

uint64_t sub_10036FACC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10036FB44, static AirDropActor.shared, 0);
}

uint64_t sub_10036FB44()
{
  sub_100356CD4();
  return swift_task_switch(sub_100371430, 0, 0);
}

uint64_t SFAirDropInvocations.UserSafetyIntervention.invoke(with:context:client:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_10036FB98, 0, 0);
}

uint64_t sub_10036FB98()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[4] = (uint64_t)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()), "init");
  v1 = (uint64_t **)swift_task_alloc(dword_1007BE6FC);
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10036FC04;
  return sub_1003CAA6C(v0[2], v0[3]);
}

uint64_t sub_10036FC04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10036FC78, 0, 0);

  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10036FC78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036FCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBD0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.UserSafetyIntervention, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.UserSafetyIntervention);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t SFAirDropInvocations.ItemDestinationAlert.invoke(with:context:client:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1007B5718 + dword_1007B5718);
  v3 = (_QWORD *)swift_task_alloc(unk_1007B571C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10036FDDC;
  return v5(a1);
}

uint64_t sub_10036FDDC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *v3;
  swift_task_dealloc(v6);
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  if (a2)
    v9 = a1;
  else
    v9 = 0;
  if (a2)
    v10 = a2;
  else
    v10 = 0xE000000000000000;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v7 + 8))(v9, v10);
}

uint64_t sub_10036FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = v8;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(_QWORD *)(v14 + 16) = v15;
  v16 = sub_100220D78(&qword_1007BCBC8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ItemDestinationAlert, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ItemDestinationAlert);
  *v15 = v14;
  v15[1] = sub_10037143C;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10036FF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1007B5718 + dword_1007B5718);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B571C);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_10036FF94;
  return v6(a2);
}

uint64_t sub_10036FF94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 24);
  v8 = *v3;
  swift_task_dealloc(v7);
  if (v2)
    return (*(uint64_t (**)(void))(v8 + 8))();
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  return swift_task_switch(sub_100370014, 0, 0);
}

uint64_t sub_100370014()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD **)(v0 + 16);
  if (!v2)
  {
    v1 = 0;
    v2 = 0xE000000000000000;
  }
  *v3 = v1;
  v3[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037003C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_10021FF9C(&qword_1007B64B8);
    sub_100220D78(a2, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.NearbySharingInteraction, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1003700C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v20[5];
  _QWORD v21[5];
  _QWORD v22[5];

  v22[3] = &type metadata for SDPseudonymPropertiesProvider;
  v22[4] = &off_100726978;
  v21[3] = &type metadata for SDPseudonymStorage;
  v21[4] = &off_10071F320;
  v6 = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v20[3] = v6;
  v20[4] = &off_100728610;
  v20[0] = a2;
  v7 = type metadata accessor for SDAirDropPseudonymService(0);
  v8 = (_QWORD *)swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v9 = sub_10026EEE8((uint64_t)v22, (uint64_t)&type metadata for SDPseudonymPropertiesProvider);
  __chkstk_darwin(v9);
  (*(void (**)(void))(v10 + 16))();
  v11 = sub_10026EEE8((uint64_t)v21, (uint64_t)&type metadata for SDPseudonymStorage);
  __chkstk_darwin(v11);
  (*(void (**)(void))(v12 + 16))();
  v13 = sub_10026EEE8((uint64_t)v20, v6);
  __chkstk_darwin(v13);
  v15 = (_QWORD *)((char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  v17 = sub_100370268(a1, *v15, a3, v8);
  sub_10022E75C(v20);
  sub_10022E75C(v21);
  sub_10022E75C(v22);
  return v17;
}

_QWORD *sub_100370268(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v21[24];
  _QWORD v22[5];
  _QWORD v23[5];
  _QWORD v24[5];
  _QWORD v25[5];

  v25[3] = sub_100221EDC(0, (unint64_t *)&unk_1007C3190, IDSService_ptr);
  v25[4] = &off_100729CE0;
  v25[0] = a1;
  v24[3] = &type metadata for SDPseudonymPropertiesProvider;
  v24[4] = &off_100726978;
  v23[3] = &type metadata for SDPseudonymStorage;
  v23[4] = &off_10071F320;
  v22[3] = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v22[4] = &off_100728610;
  v22[0] = a2;
  a4[22] = 0;
  a4[23] = 0;
  v8 = (char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_lastProvisionAttempt;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_processStartupDelaySeconds) = 0x4014000000000000;
  *(_QWORD *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_provisionThrottleSeconds) = 0x402E000000000000;
  sub_100244418((uint64_t)v25, (uint64_t)(a4 + 2));
  sub_100244418((uint64_t)v24, (uint64_t)(a4 + 7));
  sub_100244418((uint64_t)v23, (uint64_t)(a4 + 12));
  sub_100244418((uint64_t)v22, (uint64_t)(a4 + 17));
  *(_QWORD *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_deviceStatus) = a3;
  v10 = a3;
  if ((sub_1003EF9D0() & 1) != 0)
  {
    v11 = swift_allocObject(&unk_100724528, 24, 7);
    swift_weakInit(v11 + 16, a4);
    swift_beginAccess(a4 + 17, v21, 33, 0);
    v12 = a4[20];
    v13 = a4[21];
    sub_10026EEE8((uint64_t)(a4 + 17), v12);
    v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 16);
    swift_retain(v11);
    v14(sub_1003713A0, v11, v12, v13);
    swift_endAccess(v21);
    swift_release(v11);
    sub_1004BF59C();
  }
  else
  {
    if (qword_1007B41E8 != -1)
      swift_once(&qword_1007B41E8, sub_1004BF404);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007C35E0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Pseudonym service is disabled", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  sub_10022E75C(v22);
  sub_10022E75C(v23);
  sub_10022E75C(v24);
  sub_10022E75C(v25);
  return a4;
}

uint64_t sub_10037051C()
{
  return sub_100220D78(qword_1007BC828, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Send);
}

uint64_t sub_100370548()
{
  return sub_100220D78((unint64_t *)&unk_1007BC840, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Cancel);
}

uint64_t sub_100370574()
{
  return sub_100220D78((unint64_t *)&unk_1007BC850, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchUserDefaults, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchUserDefaults);
}

uint64_t sub_1003705A0()
{
  return sub_100220D78(qword_1007BC860, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchEndpointMetadata);
}

uint64_t sub_1003705CC()
{
  return sub_100220D78(qword_1007BC878, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BecomeTransferPresenter);
}

uint64_t sub_1003705F8()
{
  return sub_100220D78(qword_1007BC890, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ResignTransferPresenter);
}

uint64_t sub_100370624()
{
  return sub_100220D78(qword_1007BC8A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TransfersMonitor);
}

uint64_t sub_100370650()
{
  return sub_100220D78(qword_1007BC8C0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartNearbySharingDiscovery);
}

uint64_t sub_10037067C()
{
  return sub_100220D78(qword_1007BC8D8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopNearbySharingDiscovery);
}

uint64_t sub_1003706A8()
{
  return sub_100220D78(qword_1007BC8F0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TakeNearbySharingAssertion);
}

uint64_t sub_1003706D4()
{
  return sub_100220D78(qword_1007BC908, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
}

uint64_t sub_100370700()
{
  return sub_100220D78(qword_1007BC920, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.NearbySharingInteractions);
}

uint64_t sub_10037072C()
{
  return sub_100220D78(qword_1007BC938, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SimulateNearbySharingInteractions);
}

uint64_t sub_100370758()
{
  return sub_100220D78(qword_1007BC950, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceBegin);
}

uint64_t sub_100370784()
{
  return sub_100220D78(qword_1007BC968, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceUpdate);
}

uint64_t sub_1003707B0()
{
  return sub_100220D78(qword_1007BC980, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceEnd);
}

uint64_t sub_1003707DC()
{
  return sub_100220D78(qword_1007BC998, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.EndNearbySharingInteraction);
}

uint64_t sub_100370808()
{
  return sub_100220D78(qword_1007BC9B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartTempPairing);
}

uint64_t sub_100370834()
{
  return sub_100220D78(qword_1007BC9C8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopTempPairing);
}

uint64_t sub_100370860()
{
  return sub_100220D78((unint64_t *)&unk_1007BC9E0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingMonitor);
}

uint64_t sub_10037088C()
{
  return sub_100220D78((unint64_t *)&unk_1007BC9F0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SharingName, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SharingName);
}

uint64_t sub_1003708B8()
{
  return sub_100220D78(qword_1007BCA00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingConnect);
}

uint64_t sub_1003708E4()
{
  return sub_100220D78(qword_1007BCA18, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingDisconnect);
}

uint64_t sub_100370910()
{
  return sub_100220D78(qword_1007BCA30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.UserSafetyIntervention, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.UserSafetyIntervention);
}

uint64_t sub_10037093C()
{
  return sub_100220D78((unint64_t *)&unk_1007BCA48, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ItemDestinationAlert, (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ItemDestinationAlert);
}

uint64_t sub_100370968@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t *sub_1003709C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for SFClientIdentity(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SFAirDropClient.Identifier(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
  }
  return a1;
}

uint64_t sub_100370A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for SFClientIdentity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for SFAirDropClient.Identifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100370AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = type metadata accessor for SFClientIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropClient.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100370B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = type metadata accessor for SFClientIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropClient.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  return a1;
}

uint64_t sub_100370C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = type metadata accessor for SFClientIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropClient.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100370CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = type metadata accessor for SFClientIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropClient.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100370D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100370D64);
}

uint64_t sub_100370D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SFClientIdentity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for SFAirDropClient.Identifier(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100370DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100370DE4);
}

uint64_t sub_100370DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SFClientIdentity(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for SFAirDropClient.Identifier(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SDAirDropService.TransferPresenterClient(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BCB38;
  if (!qword_1007BCB38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropService.TransferPresenterClient);
  return result;
}

uint64_t sub_100370E9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for SFClientIdentity(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SFAirDropClient.Identifier(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = " ";
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100370F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B7280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100370F70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100370FAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100370FD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_100370FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100008384(&qword_1007BCB78);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100371090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007BCB78) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1007BCBA4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D12C;
  return sub_1003682DC(a1, v6, v7, v8, v9);
}

uint64_t sub_100371138()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10037115C(uint64_t a1)
{
  uint64_t v1;

  sub_1003686D8(a1, v1);
}

void sub_100371164(uint64_t a1)
{
  uint64_t v1;

  sub_100368730(a1, v1);
}

void sub_10037116C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for SFClientIdentity(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3F98 != -1)
    swift_once(&qword_1007B3F98, sub_1003673C8);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BC6B0);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_100220D78(&qword_1007B6490, (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity, (uint64_t)&protocol conformance descriptor for SFClientIdentity);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v2, v12);
    v15 = (const char *)v14;
    v17 = sub_100228BD8(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4);
    v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "New AirDrop Client %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_10037137C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003713A0()
{
  uint64_t v0;

  return sub_1004BF494(v0);
}

uint64_t sub_1003713A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003713EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropService.TransferPresenterClient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100371440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BCCC0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BCCC0);
  if (qword_1007B3E88 != -1)
    swift_once(&qword_1007B3E88, sub_1002E9F38);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8268);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1003714D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  _QWORD *v29;

  v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_transferObserver;
  v11 = objc_allocWithZone((Class)SFAirDropTransferObserver);
  v12 = v0;
  *(_QWORD *)&v0[v10] = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById] = &_swiftEmptyDictionarySingleton;
  v13 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AirDropUISessionClient()), "init");
  v14 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14, 0);
  v15 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIBundleIdentifier];
  *(_QWORD *)v15 = 0xD00000000000001BLL;
  *((_QWORD *)v15 + 1) = 0x8000000100617E90;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_assertionDurationInSeconds] = 2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion] = 0;
  v16 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate];
  v17 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue;
  v19 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v19);
  v29 = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v22 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v21, v22, v4, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v27);
  *(_QWORD *)&v12[v18] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002ALL, 0x8000000100617EB0, v9, v6, v3, 0);

  v23 = (objc_class *)type metadata accessor for SDAirDropUISessionManager(0);
  v28.receiver = v12;
  v28.super_class = v23;
  return objc_msgSendSuper2(&v28, "init");
}

uint64_t sub_1003717E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;

  v1 = v0;
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BCCC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Activate AirDrop UI session manager.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_transferObserver);
  objc_msgSend(v7, "setDelegate:", v1);
  objc_msgSend(v7, "activate");
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession)
     + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate;
  *(_QWORD *)(v8 + 8) = &off_1007245C8;
  return swift_unknownObjectWeakAssign(v8, v1);
}

void sub_100371944(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  NSString v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  const char **v11;
  double v12;
  const char *v13;
  char v14;
  char v15;
  double v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  const char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  NSString v35;
  double v36;
  const char *v37;
  const char *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  __CFData *v43;
  __CFData *v44;
  unint64_t v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  __CFData *v51;
  __CFData *v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void *v57;
  void *v58;
  Class v59;
  Class isa;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  void *v71;
  void *v72;
  _OWORD v73[2];
  _OWORD v74[2];
  char v75[32];

  v2 = v1;
  v4 = objc_msgSend(a1, "identifier");
  v5 = v4;
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v10 = v9;
  v11 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById, v75, 0, 0).n128_u64[0];
  v13 = *v11;
  if (*((_QWORD *)*v11 + 2))
  {
    swift_bridgeObjectRetain(*v11, v12);
    sub_10045C200(v8, (uint64_t)v10);
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
    {

      swift_bridgeObjectRelease(v10);
      return;
    }
  }
  *(_QWORD *)&v16 = swift_beginAccess(v11, v74, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v10, v16);
  v17 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  *(_QWORD *)&v73[0] = *v11;
  *v11 = (const char *)0x8000000000000000;
  v69 = v8;
  sub_10046CE3C((uint64_t)v17, v8, v10, isUniquelyReferenced_nonNull_native);
  v19 = *v11;
  *v11 = *(const char **)&v73[0];
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
  swift_bridgeObjectRelease(v10, v20);
  swift_endAccess(v74);
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v71 = v5;
  v21 = type metadata accessor for Logger(0);
  sub_100221DF8(v21, (uint64_t)qword_1007BCCC0);
  v22 = swift_bridgeObjectRetain_n(v10, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v74[0] = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain(v10);
    *(_QWORD *)&v73[0] = sub_100228BD8(v69, (unint64_t)v10, (uint64_t *)v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v73, (char *)v73 + 8, v25 + 4);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Tracking new transfer session with AirDropUI over XPC: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }

  v27 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
  v28 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
  v29 = *(void **)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
  if (v29
    || (v30 = v28,
        sub_100378568(),
        v30,
        (v29 = *(void **)(*(_QWORD *)(v2 + v27)
                        + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)) != 0))
  {
    swift_unknownObjectRetain(v29);
    v68 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v17, "transferState", swift_bridgeObjectRelease(v10).n128_f64[0]));
    v31 = objc_msgSend(v17, "metaData");
    v32 = objc_msgSend(v31, "senderIsMe");

    v70 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v32);
    v67 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v17, "itemCount"));
    v33 = objc_msgSend(v17, "metaData");
    v34 = objc_msgSend(v33, "senderCompositeName");

    v35 = objc_msgSend(v17, "contentsDescription");
    if (!v35)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v38 = v37;
      v35 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v36 = swift_bridgeObjectRelease(v38).n128_u64[0];
    }
    v39 = objc_msgSend(v17, "metaData", v36);
    v40 = objc_msgSend(v39, "smallPreviewImage");

    if (v40)
    {
      _bridgeAnyObjectToAny(_:)(v73, v40);
      swift_unknownObjectRelease(v40);
      sub_10022138C(v73, v74);
      sub_10022E77C((uint64_t)v74, (uint64_t)v73);
      type metadata accessor for CGImage(0);
      swift_dynamicCast(&v72, v73, (char *)&type metadata for Any + 8, v41, 7);
      v42 = v72;
      v43 = sub_1000CE720((uint64_t)v72, 0);
      if (!v43)
      {

        __break(1u);
LABEL_32:
        sub_100225AA0(v2, v27);

        __break(1u);
        return;
      }
      v44 = v43;
      v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v27 = v45;

      sub_10022E75C(v74);
    }
    else
    {
      v2 = 0;
      v27 = 0xF000000000000000;
    }
    v40 = v35;
    v46 = objc_msgSend(v17, "metaData");
    v47 = objc_msgSend(v46, "previewImage");

    v48 = v29;
    if (!v47)
    {
      v56 = v27;
      v53 = v34;
      if (v27 >> 60 == 15)
      {
        v58 = v67;
        v57 = v68;
        v59 = 0;
        v66 = v2;
LABEL_26:
        sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
        isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
        objc_msgSend(v48, "transferStartedForIdentifier:isFromMe:withTransferState:itemCount:senderName:localizedTransferDescription:previewImageData:previewImageIsSensitive:", v71, v70, v57, v58, v53, v40, v59, isa);
        sub_100225AA0(v66, v56);

        swift_unknownObjectRelease(v48);
        return;
      }
      v57 = v68;
      v54 = v2;
LABEL_25:
      v58 = v67;
      v66 = v54;
      sub_10022E4A8(v54, v56);
      v59 = Data._bridgeToObjectiveC()().super.isa;
      sub_100225AA0(v54, v56);
      goto LABEL_26;
    }
    _bridgeAnyObjectToAny(_:)(v73, v47);
    swift_unknownObjectRelease(v47);
    sub_10022138C(v73, v74);
    sub_10022E77C((uint64_t)v74, (uint64_t)v73);
    type metadata accessor for CGImage(0);
    swift_dynamicCast(&v72, v73, (char *)&type metadata for Any + 8, v49, 7);
    v50 = v72;
    v51 = sub_1000CE720((uint64_t)v72, 0);
    if (v51)
    {
      v52 = v51;
      v53 = v34;
      v54 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v56 = v55;

      sub_100225AA0(v2, v27);
      sub_10022E75C(v74);
      v57 = v68;
      goto LABEL_25;
    }
    goto LABEL_32;
  }

  swift_bridgeObjectRetain(v10);
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.error.getter(v62);
  if (os_log_type_enabled(v62, (os_log_type_t)v63))
  {
    v64 = (uint8_t *)swift_slowAlloc(12, -1);
    v65 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v74[0] = v65;
    *(_DWORD *)v64 = 136315138;
    swift_bridgeObjectRetain(v10);
    *(_QWORD *)&v73[0] = sub_100228BD8(v69, (unint64_t)v10, (uint64_t *)v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v73, (char *)v73 + 8, v64 + 4);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v63, "AirDropUI server was not found, cannot track transfer: %s", v64, 0xCu);
    swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v64, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }

}

void sub_100372160(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  NSString v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  uint64_t *v11;
  double v12;
  const char *v13;
  double v14;
  char v15;
  char v16;
  double v17;
  double v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  const char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  CFDictionaryRef (__cdecl **v47)(CFErrorRef);
  char **v48;
  Class isa;
  const char *v50;
  void *v51;
  id v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSString v67;
  unint64_t v68;
  const char *v69;
  const char *v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint8_t *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  const char *v90;
  const char *v91;
  NSString v92;
  double v93;
  const char *v94;
  const char *v95;
  Class v96;
  Class v97;
  uint64_t v98;
  NSString v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107[3];
  char v108[24];

  v2 = v1;
  v4 = objc_msgSend(a1, "identifier");
  v5 = v4;
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v10 = v9;
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById, v108, 0, 0).n128_u64[0];
  v13 = (const char *)*v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    *(_QWORD *)&v14 = swift_bridgeObjectRetain(v10, v12).n128_u64[0];
    swift_bridgeObjectRetain(v13, v14);
    sub_10045C200(v8, (uint64_t)v10);
    v16 = v15;
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v13).n128_u64[0];
    swift_bridgeObjectRelease(v10, v17);
    if ((v16 & 1) != 0)
    {
      *(_QWORD *)&v18 = swift_beginAccess(v11, v107, 33, 0).n128_u64[0];
      swift_bridgeObjectRetain(v10, v18);
      v19 = a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
      v106 = *v11;
      *v11 = 0x8000000000000000;
      sub_10046CE3C((uint64_t)v19, v8, v10, isUniquelyReferenced_nonNull_native);
      v21 = (const char *)*v11;
      *v11 = v106;
      *(_QWORD *)&v22 = swift_bridgeObjectRelease(v21).n128_u64[0];
      swift_bridgeObjectRelease(v10, v22);
      swift_endAccess(v107);
      sub_100373084(v19);
      if (qword_1007B3FA8 != -1)
        swift_once(&qword_1007B3FA8, sub_100371440);
      v23 = type metadata accessor for Logger(0);
      sub_100221DF8(v23, (uint64_t)qword_1007BCCC0);
      swift_bridgeObjectRetain(v10);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(12, -1);
        v28 = (void *)swift_slowAlloc(32, -1);
        v107[0] = v28;
        *(_DWORD *)v27 = 136315138;
        swift_bridgeObjectRetain(v10);
        v106 = sub_100228BD8(v8, (unint64_t)v10, (uint64_t *)v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v27 + 4);
        swift_bridgeObjectRelease_n(v10, 3);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Updating transfer session with AirDropUI over XPC: %s", v27, 0xCu);
        swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1, -1);
        swift_slowDealloc(v27, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v10, 2);
      }

      v35 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
      v36 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
      v105 = *(id *)&v36[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
      if (!v105)
      {
        v37 = v36;
        sub_100378568();

        v105 = *(id *)(*(_QWORD *)(v2 + v35) + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer);
        if (!v105)
        {

          return;
        }
      }
      swift_unknownObjectRetain(v105);
      v103 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v19, "transferState"));
      if (objc_msgSend(v19, "userResponse") == (id)1)
      {
        v38 = 1;
      }
      else
      {
        v39 = objc_msgSend(v19, "metaData");
        v38 = (uint64_t)objc_msgSend(v39, "didAutoAccept");

      }
      v102 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v38);
      v40 = objc_msgSend(v19, "transferProgress");
      if (v40)
      {
        v41 = v40;
        v101 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", objc_msgSend(v40, "completedUnitCount"));
        v100 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", objc_msgSend(v41, "totalUnitCount"));

      }
      else
      {
        v101 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 0);
        v100 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 0);
      }
      v42 = objc_msgSend(v19, "possibleActions");
      v43 = sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr);
      v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v43);

      if ((unint64_t)v44 >> 62)
      {
        if (v44 < 0)
          v98 = v44;
        else
          v98 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain((const char *)v44);
        v45 = _CocoaArrayWrapper.endIndex.getter(v98);
        swift_bridgeObjectRelease((const char *)v44);
      }
      else
      {
        v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v46 = swift_bridgeObjectRelease((const char *)v44).n128_u64[0];
      v47 = &CFErrorCopyUserInfo_ptr;
      v48 = &selRef_addEntriesFromDictionary_;
      if (v45)
      {
        isa = (Class)objc_msgSend(v19, "possibleActions", v46);
        if (!isa)
        {
          v50 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v43);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v50);
        }
        v51 = (void *)objc_opt_self(NSKeyedArchiver);
        v107[0] = 0;
        v52 = objc_msgSend(v51, "archivedDataWithRootObject:requiringSecureCoding:error:", isa, 1, v107);

        v53 = v107[0];
        if (v52)
        {
          v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v55 = v54;

          goto LABEL_37;
        }
        v56 = v53;
        v57 = _convertNSErrorToError(_:)(v53);

        swift_willThrow(v58);
        swift_errorRetain(v57);
        v59 = swift_errorRetain(v57);
        v60 = Logger.logObject.getter(v59);
        v61 = static os_log_type_t.error.getter(v60);
        if (os_log_type_enabled(v60, v61))
        {
          v62 = (uint8_t *)swift_slowAlloc(12, -1);
          v63 = (void *)swift_slowAlloc(32, -1);
          v106 = v57;
          v107[0] = v63;
          *(_DWORD *)v62 = 136315138;
          swift_errorRetain(v57);
          v64 = sub_100008384(&qword_1007B5A60);
          v65 = String.init<A>(describing:)(&v106, v64);
          v66 = v19;
          v67 = v5;
          v69 = (const char *)v68;
          v106 = sub_100228BD8(v65, v68, (uint64_t *)v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v62 + 4);
          v70 = v69;
          v5 = v67;
          v19 = v66;
          v47 = &CFErrorCopyUserInfo_ptr;
          swift_bridgeObjectRelease(v70);
          swift_errorRelease(v57);
          swift_errorRelease(v57);
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "Could not archive actions array into Data for XPC: %s", v62, 0xCu);
          swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
          v71 = v63;
          v48 = &selRef_addEntriesFromDictionary_;
          swift_slowDealloc(v71, -1, -1);
          swift_slowDealloc(v62, -1, -1);

          swift_errorRelease(v57);
        }
        else
        {
          swift_errorRelease(v57);
          swift_errorRelease(v57);
          swift_errorRelease(v57);

        }
        v45 = 0;
      }
      v55 = 0xF000000000000000;
LABEL_37:
      v72 = objc_msgSend(v19, "completedURLs");
      if (v72)
      {
        v73 = v72;
        v74 = (void *)objc_opt_self(v47[510]);
        v107[0] = 0;
        v75 = objc_msgSend(v74, v48[173], v73, 1, v107);

        v76 = v107[0];
        if (v75)
        {
          v104 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v75);
          v78 = v77;

LABEL_44:
          v92 = objc_msgSend(v19, "contentsDescription");
          if (!v92)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0);
            v95 = v94;
            v92 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v93 = swift_bridgeObjectRelease(v95).n128_u64[0];
          }
          if (v55 >> 60 == 15)
          {
            v96 = 0;
          }
          else
          {
            sub_10022E4A8(v45, v55);
            v96 = Data._bridgeToObjectiveC()().super.isa;
            sub_100225AA0(v45, v55);
          }
          if (v78 >> 60 == 15)
          {
            v97 = 0;
          }
          else
          {
            sub_10022E4A8(v104, v78);
            v97 = Data._bridgeToObjectiveC()().super.isa;
            sub_100225AA0(v104, v78);
          }
          objc_msgSend(v105, "transferUpdatedForIdentifier:withTransferState:transferAccepted:completedUnitCount:totalUnitCount:localizedTransferDescription:actionsData:completedURLsData:", v5, v103, v102, v101, v100, v92, v93, v96, v97);
          sub_100225AA0(v45, v55);

          sub_100225AA0(v104, v78);
          swift_unknownObjectRelease(v105);
          return;
        }
        v79 = v76;
        v80 = _convertNSErrorToError(_:)(v76);

        swift_willThrow(v81);
        swift_errorRetain(v80);
        v82 = swift_errorRetain(v80);
        v83 = Logger.logObject.getter(v82);
        v84 = static os_log_type_t.error.getter(v83);
        if (os_log_type_enabled(v83, (os_log_type_t)v84))
        {
          v99 = v5;
          v85 = (uint8_t *)swift_slowAlloc(12, -1);
          v86 = (void *)swift_slowAlloc(32, -1);
          v106 = v80;
          v107[0] = v86;
          *(_DWORD *)v85 = 136315138;
          swift_errorRetain(v80);
          v87 = sub_100008384(&qword_1007B5A60);
          v88 = String.init<A>(describing:)(&v106, v87);
          v90 = (const char *)v89;
          v106 = sub_100228BD8(v88, v89, (uint64_t *)v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v85 + 4);
          v91 = v90;
          v5 = v99;
          swift_bridgeObjectRelease(v91);
          swift_errorRelease(v80);
          swift_errorRelease(v80);
          _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v84, "Could not archive completedURLs array into Data for XPC: %s", v85, 0xCu);
          swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v86, -1, -1);
          swift_slowDealloc(v85, -1, -1);

          swift_errorRelease(v80);
        }
        else
        {
          swift_errorRelease(v80);
          swift_errorRelease(v80);
          swift_errorRelease(v80);

        }
      }
      v104 = 0;
      v78 = 0xF000000000000000;
      goto LABEL_44;
    }
  }

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v29 = type metadata accessor for Logger(0);
  sub_100221DF8(v29, (uint64_t)qword_1007BCCC0);
  swift_bridgeObjectRetain(v10);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = (void *)swift_slowAlloc(32, -1);
    v107[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain(v10);
    v106 = sub_100228BD8(v8, (unint64_t)v10, (uint64_t *)v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v33 + 4);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Transfer not tracked. Skipping update. %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }

}

void sub_100372D4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  NSString v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  const char **v11;
  double v12;
  const char *v13;
  double v14;
  char v15;
  char v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];
  char v33[24];

  v2 = v1;
  v4 = objc_msgSend(a1, "identifier");
  v5 = v4;
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v10 = v9;
  v11 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById, v33, 0, 0).n128_u64[0];
  v13 = *v11;
  if (*((_QWORD *)*v11 + 2))
  {
    *(_QWORD *)&v14 = swift_bridgeObjectRetain(v10, v12).n128_u64[0];
    swift_bridgeObjectRetain(v13, v14);
    sub_10045C200(v8, (uint64_t)v10);
    v16 = v15;
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v13).n128_u64[0];
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v10, v17).n128_u64[0];
    if ((v16 & 1) != 0)
    {
      if (qword_1007B3FA8 != -1)
        swift_once(&qword_1007B3FA8, sub_100371440);
      v19 = type metadata accessor for Logger(0);
      sub_100221DF8(v19, (uint64_t)qword_1007BCCC0);
      v20 = swift_bridgeObjectRetain_n(v10, 2);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.default.getter(v21);
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(12, -1);
        v30 = swift_slowAlloc(32, -1);
        v32[0] = v30;
        *(_DWORD *)v23 = 136315138;
        swift_bridgeObjectRetain(v10);
        v31 = sub_100228BD8(v8, (unint64_t)v10, v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32, v23 + 4);
        swift_bridgeObjectRelease_n(v10, 3);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Transfer %s no longer being tracked. Ending session for it over XPC.", v23, 0xCu);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v23, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v10, 2);
      }

      swift_beginAccess(v11, v32, 33, 0);
      v24 = (void *)sub_10026AE28(v8, (uint64_t)v10);
      swift_endAccess(v32);
      swift_bridgeObjectRelease(v10);

      sub_100373694(a1);
      v25 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
      v26 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
      v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
      if (v27
        || (v28 = v26,
            sub_100378568(),
            v28,
            (v27 = *(_QWORD *)(*(_QWORD *)(v2 + v25)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)) != 0))
      {
        objc_msgSend((id)swift_unknownObjectRetain(v27), "transferEndedForIdentifier:", v5);
        swift_unknownObjectRelease(v27);
      }

      if (!*((_QWORD *)*v11 + 2))
      {
        v29 = *(id *)(v2 + v25);
        sub_1003792B0();

      }
    }
    else
    {
      swift_bridgeObjectRelease(v10, v18);

    }
  }
  else
  {

    swift_bridgeObjectRelease(v10);
  }
}

void sub_100373084(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t *v10;
  double v11;
  const char *v12;
  double v13;
  char v14;
  char v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  void *v30;
  id v31;
  char isUniquelyReferenced_nonNull_native;
  const char *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  _BYTE v38[24];

  v2 = v1;
  v4 = objc_msgSend(a1, "transferProgress");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(a1, "identifier");
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById);
    *(_QWORD *)&v11 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById, v38, 0, 0).n128_u64[0];
    v12 = (const char *)*v10;
    if (*(_QWORD *)(*v10 + 16)
      && (*(_QWORD *)&v13 = swift_bridgeObjectRetain(v9, v11).n128_u64[0],
          swift_bridgeObjectRetain(v12, v13),
          sub_10045C200(v7, (uint64_t)v9),
          v15 = v14,
          *(_QWORD *)&v16 = swift_bridgeObjectRelease(v12).n128_u64[0],
          *(_QWORD *)&v17 = swift_bridgeObjectRelease(v9, v16).n128_u64[0],
          (v15 & 1) != 0))
    {
      swift_bridgeObjectRelease(v9, v17);
    }
    else
    {
      if (qword_1007B3FA8 != -1)
        swift_once(&qword_1007B3FA8, sub_100371440);
      v18 = type metadata accessor for Logger(0);
      sub_100221DF8(v18, (uint64_t)qword_1007BCCC0);
      v19 = swift_bridgeObjectRetain_n(v9, 2);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = v2;
        v23 = v7;
        v24 = swift_slowAlloc(32, -1);
        v37[0] = v24;
        *(_DWORD *)v22 = 136315138;
        swift_bridgeObjectRetain(v9);
        v36 = sub_100228BD8(v23, (unint64_t)v9, v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v22 + 4);
        swift_bridgeObjectRelease_n(v9, 3);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Starting to observe transfer progress for %s", v22, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        v25 = v24;
        v7 = v23;
        v2 = v35;
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v22, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v9, 2);
      }

      v37[0] = (uint64_t)v5;
      KeyPath = swift_getKeyPath(&unk_1005D5178);
      v27 = swift_allocObject(&unk_1007249C8, 24, 7);
      swift_unknownObjectUnownedInit(v27 + 16, v2);
      v28 = (_QWORD *)swift_allocObject(&unk_1007249F0, 40, 7);
      v28[2] = v7;
      v28[3] = v9;
      v28[4] = v27;
      v29 = swift_bridgeObjectRetain(v9);
      v30 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_10037B878, v28, &protocol witness table for NSObject, v29);
      swift_release(v28);
      swift_release(KeyPath);
      swift_beginAccess(v10, v37, 33, 0);
      v31 = v30;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
      v36 = *v10;
      *v10 = 0x8000000000000000;
      sub_10046CE48((uint64_t)v31, v7, v9, isUniquelyReferenced_nonNull_native);
      v33 = (const char *)*v10;
      *v10 = v36;
      *(_QWORD *)&v34 = swift_bridgeObjectRelease(v33).n128_u64[0];
      swift_bridgeObjectRelease(v9, v34);
      swift_endAccess(v37);

    }
  }
}

__n128 sub_1003733F4(void **a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *Strong;
  char *v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char v22;
  id v23;
  double v24;
  void *v25;
  __n128 result;
  double v27;
  uint64_t v28;
  uint64_t v29[3];

  v7 = *a1;
  v8 = a5 + 16;
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007BCCC0);
  swift_bridgeObjectRetain_n(a4, 2);
  v10 = v7;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(32, -1);
    v29[0] = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain(a4);
    v28 = sub_100228BD8(a3, (unint64_t)a4, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v13 + 4);
    swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v13 + 12) = 2048;
    objc_msgSend(v10, "fractionCompleted");
    v28 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v13 + 14);

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "KVO: Transfer %s updated progress: %f", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);

  }
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(v8);
  v17 = &Strong[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById];
  *(_QWORD *)&v18 = swift_beginAccess(&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById], v29, 0, 0).n128_u64[0];
  v19 = *(_QWORD *)v17;
  *(_QWORD *)&v20 = swift_bridgeObjectRetain(a4, v18).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v19, v20);

  if (*(_QWORD *)(v19 + 16) && (v21 = sub_10045C200(a3, (uint64_t)a4), (v22 & 1) != 0))
  {
    v23 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v21);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease((const char *)v19).n128_u64[0];
    swift_bridgeObjectRelease(a4, v24);
    v25 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    sub_100372160(v23);

  }
  else
  {
    *(_QWORD *)&v27 = swift_bridgeObjectRelease((const char *)v19).n128_u64[0];
    return swift_bridgeObjectRelease(a4, v27);
  }
  return result;
}

void sub_100373694(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  const char *v4;
  const char *v5;
  uint64_t *v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char v11;
  NSObject *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27[3];
  _BYTE v28[24];

  v2 = objc_msgSend(a1, "identifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById);
  *(_QWORD *)&v7 = swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById, v28, 0, 0).n128_u64[0];
  v8 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    *(_QWORD *)&v9 = swift_bridgeObjectRetain(v5, v7).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v8, v9);
    v10 = sub_10045C200(v3, (uint64_t)v5);
    if ((v11 & 1) != 0)
    {
      v12 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v10);
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v5).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v8, v13);
      if (qword_1007B3FA8 != -1)
        swift_once(&qword_1007B3FA8, sub_100371440);
      v14 = type metadata accessor for Logger(0);
      sub_100221DF8(v14, (uint64_t)qword_1007BCCC0);
      v15 = swift_bridgeObjectRetain_n(v5, 2);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        v27[0] = v19;
        *(_DWORD *)v18 = 136315138;
        swift_bridgeObjectRetain(v5);
        v26 = sub_100228BD8(v3, (unint64_t)v5, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v18 + 4);
        swift_bridgeObjectRelease_n(v5, 3);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Stopping observing transfer progress for %s", v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v5, 2);
      }
      swift_beginAccess(v6, v27, 33, 0);
      v25 = (void *)sub_10026AE34(v3, (uint64_t)v5);
      swift_endAccess(v27);
      swift_bridgeObjectRelease(v5);

      dispatch thunk of NSKeyValueObservation.invalidate()();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease((const char *)v8, v20);
  }
  else
  {
    swift_bridgeObjectRelease(v5, v7);
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100221DF8(v21, (uint64_t)qword_1007BCCC0);
  v12 = Logger.logObject.getter(v22);
  v23 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v23, "Didn't find progress observer to stop observing. Returning", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }
LABEL_15:

}

uint64_t sub_1003739D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_1003739EC, 0, 0);
}

uint64_t sub_1003739EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[16];
  v2 = swift_task_alloc(32);
  v0[17] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[18] = v3;
  v4 = sub_100008384(&qword_1007BCF88);
  *v3 = v0;
  v3[1] = sub_100373A9C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 15, 0, 0, 0xD000000000000011, 0x8000000100617E50, sub_10037B740, v2, v4);
}

uint64_t sub_100373A9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100373C2C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 136));
    v4 = sub_100373B08;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100373B08(__n128 a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1 + 2;
  v3 = (void *)v1[15];
  v1[20] = v3;
  v1[2] = v1;
  v1[3] = sub_100373B98;
  v4 = swift_continuation_init(v1 + 2, 1, a1);
  v1[10] = _NSConcreteStackBlock;
  v5 = v1 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1002EF5D4;
  v5[3] = &unk_100724950;
  v5[4] = v4;
  objc_msgSend(v3, "registerForPermissionRequests:", v5);
  return swift_continuation_await(v2);
}

uint64_t sub_100373B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 168) = v1;
  if (v1)
    v2 = sub_100373C60;
  else
    v2 = sub_100373BF8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100373BF8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100373C2C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100373C60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_willThrow();
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100373CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384((uint64_t *)&unk_1007BCFE0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  v14 = swift_allocObject(&unk_1007246B8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_100724978, v16 + v12, v15 | 7);
  *(_QWORD *)(v17 + 16) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v13, v10);
  aBlock[4] = sub_10037B7C0;
  v30 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724990;
  v18 = _Block_copy(aBlock);
  v19 = swift_retain(v14);
  static DispatchQoS.unspecified.getter(v19);
  v28 = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100008384((uint64_t *)&unk_1007B6410);
  v22 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v21, v22, v4, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  swift_release(v30);
  return swift_release(v14);
}

void sub_100373F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
    v6 = *(char **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
    v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
    if (v7
      || (v8 = v6,
          sub_100378568(),
          v8,
          (v7 = *(_QWORD *)(*(_QWORD *)&v4[v5]
                          + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)) != 0))
    {
      v19 = v7;
      swift_unknownObjectRetain(v7);
      v9 = sub_100008384((uint64_t *)&unk_1007BCFE0);
      CheckedContinuation.resume(returning:)(&v19, v9);
    }
    else
    {
      v15 = sub_100244304();
      v16 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v15, 0, 0);
      *(_DWORD *)v17 = 10;
      *(_QWORD *)(v17 + 8) = 0xD000000000000010;
      *(_QWORD *)(v17 + 16) = 0x8000000100617E70;
      swift_willThrow(v16);
      v19 = v16;
      v18 = sub_100008384((uint64_t *)&unk_1007BCFE0);
      CheckedContinuation.resume(throwing:)(&v19, v18);
    }

  }
  else
  {
    v10 = type metadata accessor for SFAirDropSend.Failure(0);
    v11 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v12 = swift_allocError(v10, v11, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v13, enum case for SFAirDropSend.Failure.cancelled(_:), v10);
    v19 = v12;
    v14 = sub_100008384((uint64_t *)&unk_1007BCFE0);
    CheckedContinuation.resume(throwing:)(&v19, v14);
  }
}

void sub_1003740E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;

  v4 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for SFAirDrop.DisplayPriority.high(_:), v8);
  LOBYTE(a2) = static SFAirDrop.DisplayPriority.== infix(_:_:)(a2, v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((a2 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v13 == enum case for SFAirDropSend.Transfer.State.transferring(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      swift_bridgeObjectRelease(*((const char **)v7 + 1));
      v14 = (int *)sub_100008384((uint64_t *)&unk_1007C3410);
      v15 = &v7[v14[12]];
      swift_bridgeObjectRelease(*(const char **)&v7[v14[16] + 8]);
      v16 = &v7[v14[20]];
      v17 = type metadata accessor for SFAirDrop.DeclineAction(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      v18 = type metadata accessor for SFAirDrop.Progress(0);
      v12 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v15, v18);
    }
    else
    {
      if (v13 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v19 = &v7[*(int *)(sub_100008384(&qword_1007B8858) + 48)];
        v20 = type metadata accessor for SFAirDropSend.Failure(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      else
      {
        if (v13 != enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          return;
        }
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v21 = sub_100008384((uint64_t *)&unk_1007BCFD0);
        swift_bridgeObjectRelease(*(const char **)&v7[*(int *)(v21 + 48) + 8]);
      }
      v22 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v12 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v7, v22);
    }
  }
  v23 = SFAirDropSend.Transfer.State.description.getter(v12);
  v25 = v24;
  sub_10037475C(v23, v24);
  swift_bridgeObjectRelease(v25);
}

void sub_100374378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  int *v19;
  double v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  int *v26;
  char *v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for SFAirDrop.DisplayPriority.high(_:), v8);
  LOBYTE(a2) = static SFAirDrop.DisplayPriority.== infix(_:_:)(a2, v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((a2 & 1) != 0)
    goto LABEL_12;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v13 != enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
  {
    if (v13 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = &qword_1007BB658;
    }
    else
    {
      if (v13 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:)
        || v13 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v19 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
        *(_QWORD *)&v20 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v7[v19[12]]).n128_u64[0];
        swift_bridgeObjectRelease(*(const char **)&v7[v19[16]], v20);
        v21 = &v7[v19[20]];
        v22 = sub_100008384(&qword_1007B5280);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        v14 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
        goto LABEL_11;
      }
      if (v13 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v16 = &v7[*(int *)(sub_100008384((uint64_t *)&unk_1007BCFC0) + 48)];
        v17 = &qword_1007B5280;
        goto LABEL_7;
      }
      if (v13 != enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
      {
        if (v13 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
          v26 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
          v27 = &v7[v26[12]];
          *(_QWORD *)&v28 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v7[v26[16] + 8]).n128_u64[0];
          *(_QWORD *)&v29 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v7[v26[20]], v28).n128_u64[0];
          *(_QWORD *)&v30 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v7[v26[24]], v29).n128_u64[0];
          swift_bridgeObjectRelease(*(const char **)&v7[v26[28]], v30);
          v31 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v27, v31);
        }
        else
        {
          if (v13 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
          {
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            return;
          }
          (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
          v32 = &v7[*(int *)(sub_100008384(&qword_1007B9BB0) + 48)];
          v33 = type metadata accessor for SFAirDropReceive.Failure(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        }
        v14 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = &qword_1007BB628;
    }
    v16 = &v7[*(int *)(sub_100008384(v15) + 48)];
    v17 = (uint64_t *)&unk_1007BB630;
LABEL_7:
    v18 = sub_100008384(v17);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    v14 = type metadata accessor for SFAirDrop.ContactInfo(0);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
  v14 = sub_100008384(&qword_1007B5280);
LABEL_11:
  v12 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v7, v14);
LABEL_12:
  v23 = SFAirDropReceive.Transfer.State.description.getter(v12);
  v25 = v24;
  sub_10037475C(v23, v24);
  swift_bridgeObjectRelease(v25);
}

uint64_t sub_10037475C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  v12 = swift_allocObject(&unk_1007246B8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  v13 = (_QWORD *)swift_allocObject(&unk_100724910, 40, 7);
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_10037B734;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724928;
  v14 = _Block_copy(aBlock);
  swift_retain(v12);
  swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v15);
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100008384((uint64_t *)&unk_1007B6410);
  v18 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v5, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release(v24);
  return swift_release(v12);
}

void sub_100374990(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_1003749FC(a2, a3);

  }
}

void sub_1003749FC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  const char *v30;
  NSString v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void **v36;
  void *v37;
  void **v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  id v48;
  id v49;
  NSString v50;
  Class isa;
  id v52;
  unsigned __int8 v53;
  void **v54;
  uint64_t v55;
  void **v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  NSObject *v64;
  uint8_t *v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  void ***v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint8_t *v109;
  id v110;
  uint64_t v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  id v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  void **aBlock;
  _QWORD v131[4];
  _QWORD *v132;

  v3 = v2;
  v126 = a1;
  v127 = (char *)a2;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v124 = *(_QWORD *)(v7 - 8);
  v125 = v7;
  __chkstk_darwin(v7);
  v123 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v121 = *(_QWORD *)(v9 - 8);
  v122 = v9;
  __chkstk_darwin(v9);
  v120 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTimeInterval(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = type metadata accessor for DispatchTime(0);
  v116 = *(_QWORD *)(v119 - 8);
  v15 = __chkstk_darwin(v119);
  v17 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v118 = (char *)&v108 - v18;
  v19 = type metadata accessor for DispatchPredicate(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (uint64_t *)((char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  v117 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v24 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion))
  {
    if (qword_1007B3FA8 == -1)
    {
LABEL_4:
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100221DF8(v25, (uint64_t)qword_1007BCCC0);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.default.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Not taking assertion to ensure AirDropUI is active because assertion was already taken", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      return;
    }
LABEL_29:
    swift_once(&qword_1007B3FA8, sub_100371440);
    goto LABEL_4;
  }
  if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer))
  {
    v30 = *(const char **)(v3
                         + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIBundleIdentifier
                         + 8);
    swift_bridgeObjectRetain(v30);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v32 = objc_msgSend((id)objc_opt_self(RBSProcessPredicate), "predicateMatchingBundleIdentifier:", v31);

    v33 = (void *)objc_opt_self(RBSProcessHandle);
    aBlock = 0;
    v34 = v32;
    v35 = objc_msgSend(v33, "handleForPredicate:error:", v34, &aBlock);
    v36 = aBlock;
    if (v35)
    {
      v37 = v35;
      v111 = v12;
      v38 = aBlock;
      v115 = v34;

      v39 = objc_msgSend(v37, "identity");
      v40 = objc_msgSend((id)objc_opt_self(RBSTarget), "targetWithProcessIdentity:", v39);
      v114 = v37;
      v41 = v40;

      v42 = String._bridgeToObjectiveC()();
      v43 = String._bridgeToObjectiveC()();
      v44 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v42, v43);

      v45 = sub_100008384(&qword_1007B5390);
      v46 = swift_allocObject(v45, 40, 7);
      *(_OWORD *)(v46 + 16) = xmmword_1005D1DF0;
      *(_QWORD *)(v46 + 32) = v44;
      aBlock = (void **)v46;
      specialized Array._endMutation()(v46);
      v47 = (const char *)aBlock;
      v48 = objc_allocWithZone((Class)RBSAssertion);
      v49 = v41;
      v112 = v44;
      v50 = String._bridgeToObjectiveC()();
      sub_100221EDC(0, (unint64_t *)&unk_1007BCF78, RBSAttribute_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v52 = objc_msgSend(v48, "initWithExplanation:target:attributes:", v50, v49, isa, swift_bridgeObjectRelease(v47).n128_f64[0]);
      v113 = v49;

      aBlock = 0;
      v53 = objc_msgSend(v52, "acquireWithError:", &aBlock);
      v54 = aBlock;
      if ((v53 & 1) != 0)
      {
        v55 = qword_1007B3FA8;
        v56 = aBlock;
        if (v55 != -1)
          swift_once(&qword_1007B3FA8, sub_100371440);
        v110 = v52;
        v57 = type metadata accessor for Logger(0);
        sub_100221DF8(v57, (uint64_t)qword_1007BCCC0);
        v58 = v127;
        v59 = swift_bridgeObjectRetain_n(v127, 2);
        v60 = Logger.logObject.getter(v59);
        v61 = static os_log_type_t.info.getter();
        v62 = os_log_type_enabled(v60, v61);
        v63 = v111;
        if (v62)
        {
          v64 = v60;
          v65 = (uint8_t *)swift_slowAlloc(12, -1);
          v66 = (void **)swift_slowAlloc(32, -1);
          aBlock = v66;
          *(_DWORD *)v65 = 136315138;
          v109 = v65 + 4;
          swift_bridgeObjectRetain(v127);
          v128 = (_QWORD *)sub_100228BD8(v126, (unint64_t)v127, (uint64_t *)&aBlock);
          v58 = v127;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129, v109);
          swift_bridgeObjectRelease_n(v58, 3);
          _os_log_impl((void *)&_mh_execute_header, v64, v61, "Successfully acquired assertion for state %s", v65, 0xCu);
          swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v66, -1, -1);
          swift_slowDealloc(v65, -1, -1);

          v63 = v111;
        }
        else
        {
          swift_bridgeObjectRelease_n(v58, 2);

        }
        v89 = v116;
        v90 = *(void **)(v3 + v24);
        v91 = v110;
        *(_QWORD *)(v3 + v24) = v110;
        v127 = v91;

        static DispatchTime.now()(v92);
        *v14 = 2;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v63 + 104))(v14, enum case for DispatchTimeInterval.seconds(_:), v11);
        v93 = v118;
        DispatchTime.advanced(by:)(v14);
        (*(void (**)(_QWORD *, uint64_t))(v63 + 8))(v14, v11);
        v94 = *(void (**)(char *, uint64_t))(v89 + 8);
        v95 = v119;
        v94(v17, v119);
        v96 = swift_allocObject(&unk_1007246B8, 24, 7);
        swift_unknownObjectWeakInit(v96 + 16, v3);
        v97 = (_QWORD *)swift_allocObject(&unk_1007248C0, 40, 7);
        v98 = v126;
        v97[2] = v96;
        v97[3] = v98;
        v97[4] = v58;
        v131[3] = sub_10037B6F8;
        v132 = v97;
        aBlock = _NSConcreteStackBlock;
        v131[0] = 1107296256;
        v131[1] = sub_10025BBB4;
        v131[2] = &unk_1007248D8;
        v99 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain(v58);
        v100 = swift_retain(v96);
        v101 = v120;
        static DispatchQoS.unspecified.getter(v100);
        v128 = _swiftEmptyArrayStorage;
        v102 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v103 = sub_100008384((uint64_t *)&unk_1007B6410);
        v104 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
        v105 = v123;
        v106 = v103;
        v107 = v125;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v128, v106, v104, v125, v102);
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v93, v101, v105, v99);
        _Block_release(v99);

        (*(void (**)(char *, uint64_t))(v124 + 8))(v105, v107);
        (*(void (**)(char *, uint64_t))(v121 + 8))(v101, v122);
        v94(v93, v95);
        swift_release(v132);
        swift_release(v96);
        return;
      }
      v79 = aBlock;
      v76 = _convertNSErrorToError(_:)(v54);

      swift_willThrow(v80);
      v34 = v115;
      v78 = v113;
    }
    else
    {
      v75 = aBlock;
      v76 = _convertNSErrorToError(_:)(v36);

      swift_willThrow(v77);
      v78 = v34;
    }

    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v81 = type metadata accessor for Logger(0);
    sub_100221DF8(v81, (uint64_t)qword_1007BCCC0);
    swift_errorRetain(v76);
    v82 = swift_errorRetain(v76);
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.error.getter(v83);
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc(12, -1);
      v86 = (void ***)swift_slowAlloc(8, -1);
      *(_DWORD *)v85 = 138412290;
      swift_errorRetain(v76);
      v87 = (void **)_swift_stdlib_bridgeErrorToNSError(v76);
      aBlock = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v85 + 4);
      *v86 = v87;
      swift_errorRelease(v76);
      swift_errorRelease(v76);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "Failed to take assertion on AirDropUI ensuring it is active: %@", v85, 0xCu);
      v88 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v86, 1, v88);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v85, -1, -1);

      swift_errorRelease(v76);
    }
    else
    {
      swift_errorRelease(v76);
      swift_errorRelease(v76);
      swift_errorRelease(v76);

    }
  }
  else
  {
    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v67 = type metadata accessor for Logger(0);
    v68 = sub_100221DF8(v67, (uint64_t)qword_1007BCCC0);
    v69 = Logger.logObject.getter(v68);
    v70 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "AirDropUI process is suspended and we need it to be active. Launching AirDropUI", v71, 2u);
      swift_slowDealloc(v71, -1, -1);
    }

    v72 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v6, 1, 1, v72);
    v73 = swift_allocObject(&unk_1007246B8, 24, 7);
    swift_unknownObjectWeakInit(v73 + 16, v3);
    v74 = static Task<>.noThrow(priority:operation:)(v6, &unk_1007BCFA0, v73, (char *)&type metadata for () + 8);
    swift_release(v73);
    swift_release(v74);
    sub_10000D0F0((uint64_t)v6, &qword_1007B68A0);
  }
}

uint64_t sub_10037569C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 48) = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v3 = static AirDropActor.shared;
  *(_QWORD *)(v2 + 56) = static AirDropActor.shared;
  return swift_task_switch(sub_100375708, v3, 0);
}

uint64_t sub_100375708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = Strong;
  v5 = (_QWORD *)swift_task_alloc(dword_1007BCD64);
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_1003757A8;
  v5[16] = v4;
  return swift_task_switch(sub_1003739EC, 0, 0);
}

uint64_t sub_1003757A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10037583C;
  else
    v4 = sub_10037580C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_10037580C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037583C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BCCC0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v13 = *(void **)(v0 + 64);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 40) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to launch AirDropUI: %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100375A1C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion), "invalidate");
    v10 = *(void **)&v8[v9];
    *(_QWORD *)&v8[v9] = 0;

    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v11 = type metadata accessor for Logger(0);
    sub_100221DF8(v11, (uint64_t)qword_1007BCCC0);
    v12 = swift_bridgeObjectRetain_n(a3, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v18 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(a3);
      v17 = sub_100228BD8(a2, (unint64_t)a3, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v15 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Invalidated assertion for state %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
  }
}

uint64_t sub_100375C14(const char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  int64_t v21;
  unint64_t v22;
  const char *v23;
  uint64_t (*v24)(char *, const char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v2 = v1;
  v60 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v4 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v56 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  __chkstk_darwin(v12);
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007C4330);
  v49 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v50 = v16;
  v51 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v52 = (char *)&v46 - v17;
  swift_bridgeObjectRetain(a1);
  v19 = sub_100377DA4(v18);
  v20 = (const char *)v19;
  v21 = *(_QWORD *)(v19 + 16);
  if (v21)
  {
    v47 = v2;
    v48 = v10;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002299D0(0, v21, 0);
    v22 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v46 = v20;
    v23 = &v20[v22];
    v58 = *(_QWORD *)(v4 + 72);
    v24 = *(uint64_t (**)(char *, const char *, uint64_t))(v4 + 16);
    v25 = v4;
    do
    {
      v26 = v60;
      v27 = v24(v6, v23, v60);
      SFAirDropReceive.Transfer.startDate.getter(v27);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      v28 = (const char *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
      {
        sub_1002299D0(0, *((_QWORD *)v28 + 2) + 1, 1);
        v28 = (const char *)aBlock[0];
      }
      v30 = *((_QWORD *)v28 + 2);
      v29 = *((_QWORD *)v28 + 3);
      if (v30 >= v29 >> 1)
      {
        sub_1002299D0(v29 > 1, v30 + 1, 1);
        v28 = (const char *)aBlock[0];
      }
      *((_QWORD *)v28 + 2) = v30 + 1;
      (*(void (**)(const char *, char *, uint64_t))(v7 + 32))(&v28[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v30], v9, v59);
      aBlock[0] = v28;
      v23 += v58;
      --v21;
      v4 = v25;
    }
    while (v21);
    swift_bridgeObjectRelease(v46);
    v10 = v48;
    v2 = v47;
  }
  else
  {
    swift_bridgeObjectRelease((const char *)v19);
    v28 = (const char *)_swiftEmptyArrayStorage;
  }
  v31 = v52;
  sub_1003781A4((uint64_t)v28, v52);
  swift_bridgeObjectRelease(v28);
  v32 = swift_allocObject(&unk_1007246B8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v2);
  v33 = v51;
  sub_100221F28((uint64_t)v31, v51, &qword_1007C4330);
  v34 = *(unsigned __int8 *)(v49 + 80);
  v35 = (v34 + 24) & ~v34;
  v36 = swift_allocObject(&unk_100724708, v35 + v50, v34 | 7);
  *(_QWORD *)(v36 + 16) = v32;
  sub_10022E718(v33, v36 + v35, &qword_1007C4330);
  aBlock[4] = sub_10037A320;
  v63 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724720;
  v37 = _Block_copy(aBlock);
  v38 = swift_retain(v32);
  v39 = v53;
  static DispatchQoS.unspecified.getter(v38);
  v61 = _swiftEmptyArrayStorage;
  v40 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_100008384((uint64_t *)&unk_1007B6410);
  v42 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  v43 = v56;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v41, v42, v10, v40);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v39, v43, v37);
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v10);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
  sub_10000D0F0((uint64_t)v31, &qword_1007C4330);
  v44 = v63;
  swift_release(v32);
  return swift_release(v44);
}

id sub_1003760F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropUISessionManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003761D8()
{
  return type metadata accessor for SDAirDropUISessionManager(0);
}

uint64_t type metadata accessor for SDAirDropUISessionManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BCD50;
  if (!qword_1007BCD50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropUISessionManager);
  return result;
}

void sub_10037621C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_1005D50A0;
  v4[5] = &unk_1005D50B8;
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[7] = &unk_1005D50D0;
  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1003762D4(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);

}

uint64_t sub_100376314()
{
  return sub_1003717E8();
}

uint64_t sub_100376334()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc(dword_1007BCD64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  v3[16] = v2;
  return swift_task_switch(sub_1003739EC, 0, 0);
}

void sub_100376394(uint64_t a1, uint64_t a2)
{
  sub_1003740E8(a1, a2);
}

void sub_1003763B4(uint64_t a1, uint64_t a2)
{
  sub_100374378(a1, a2);
}

uint64_t sub_1003763D4(uint64_t a1, const char *a2)
{
  return sub_10037475C(a1, a2);
}

uint64_t sub_1003763F4(const char *a1)
{
  return sub_100375C14(a1);
}

uint64_t sub_100376414(uint64_t a1)
{
  return sub_100376434(a1);
}

uint64_t sub_100376434(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v20[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_100724668, v13 + v11, v12 | 7);
  *(_QWORD *)(v14 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_100379F90;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724680;
  v15 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v1);
  v24 = _swiftEmptyArrayStorage;
  v16 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100008384((uint64_t *)&unk_1007B6410);
  v18 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  return swift_release(v26);
}

void sub_100376690(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  const char *v5;
  const char *v6;
  id v7;
  id v8;
  void *v9;
  const char *v10;
  const char *v11;
  id v12;
  const char *v13;
  const char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  const char *v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  const char **v31;
  double v32;
  const char *v33;
  double v34;
  char v35;
  double v36;
  double v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  const char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55[2];

  v2 = v1;
  v4 = objc_msgSend(a1, "identifier");
  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;

  v7 = objc_msgSend(a1, "transferState");
  v8 = (id)SFAirDropTransferStateToString(v7);
  if (v8)
  {
    v9 = v8;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v49 = 0;
    v11 = 0;
  }
  v12 = (id)SFAirDropTransferUserResponseToString(objc_msgSend(a1, "userResponse"));
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15 = objc_msgSend(a1, "transferProgress");
  v16 = objc_msgSend(a1, "completedURLs");
  if (v16)
  {
    v17 = v16;
    v18 = type metadata accessor for URL(0);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v48 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRelease((const char *)v19);
  }
  else
  {
    v48 = 0;
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v51 = (unint64_t)v7 - 10;
  v20 = type metadata accessor for Logger(0);
  sub_100221DF8(v20, (uint64_t)qword_1007BCCC0);
  *(_QWORD *)&v21 = swift_bridgeObjectRetain(v11).n128_u64[0];
  swift_bridgeObjectRetain(v14, v21);
  swift_bridgeObjectRetain_n(v6, 2);
  v46 = v15;
  v22 = v15;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(52, -1);
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    v45 = swift_slowAlloc(96, -1);
    v53 = v45;
    *(_DWORD *)v25 = 136316162;
    swift_bridgeObjectRetain(v6);
    v54 = sub_100228BD8(v50, (unint64_t)v6, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    *(_WORD *)(v25 + 12) = 2080;
    v26 = v11;
    if (!v11)
    {
      v54 = 0;
      v55[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v55[0]);
      v26 = (const char *)0x8000000100612DF0;
      v49 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain(v11);
    v54 = sub_100228BD8(v49, (unint64_t)v26, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 14);
    swift_bridgeObjectRelease_n(v11, 2);
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v26).n128_u64[0];
    *(_WORD *)(v25 + 22) = 2080;
    swift_bridgeObjectRetain(v14, v27);
    v54 = sub_100228BD8(v47, (unint64_t)v14, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 24);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v25 + 32) = 2112;
    if (v22)
    {
      v54 = (uint64_t)v22;
      v28 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 34);
      v29 = v46;
    }
    else
    {
      v54 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 34);
      v29 = 0;
    }
    *v44 = v29;

    *(_WORD *)(v25 + 42) = 2048;
    v54 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 44);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Transfer %s changed to state: %s. Response: %s. Progress: %@. Completed URLs: %ld", (uint8_t *)v25, 0x34u);
    v30 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v44, 1, v30);
    swift_slowDealloc(v44, -1, -1);
    swift_arrayDestroy(v45, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v14, 2);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease_n(v6, 2);
  }
  if (v51 > 0xFFFFFFFFFFFFFFFDLL)
  {
    v31 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
    *(_QWORD *)&v32 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById, &v54, 0, 0).n128_u64[0];
    v33 = *v31;
    if (*((_QWORD *)*v31 + 2))
    {
      *(_QWORD *)&v34 = swift_bridgeObjectRetain(v6, v32).n128_u64[0];
      swift_bridgeObjectRetain(v33, v34);
      sub_10045C200(v50, (uint64_t)v6);
      if ((v35 & 1) == 0)
      {

        swift_bridgeObjectRelease_n(v6, 2);
        swift_bridgeObjectRelease(v33);
        return;
      }
      *(_QWORD *)&v36 = swift_bridgeObjectRelease(v6).n128_u64[0];
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v33, v36).n128_u64[0];
      swift_bridgeObjectRetain(v6, v37);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = v6;
        v43 = swift_slowAlloc(32, -1);
        v53 = v43;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain(v42);
        v52 = sub_100228BD8(v50, (unint64_t)v42, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v41 + 4);
        swift_bridgeObjectRelease_n(v42, 3);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Transfer %s no longer needs to be tracked. It is either terminated or failed.", v41, 0xCu);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v41, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v6, 2);
      }
      sub_100372D4C(a1);
    }
    else
    {
      swift_bridgeObjectRelease(v6, v32);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    sub_100371944(a1);
    sub_100372160(a1);
  }

}

void sub_100376DAC(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BCCC0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = objc_msgSend(v3, "identifier");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = sub_100228BD8(v9, (unint64_t)v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Transfer %s was removed by transfer manager. Ending session.", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  sub_100372D4C(v3);
}

uint64_t sub_100376FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007BCCC0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting Wallet UI service for peerPayment type boop", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  v16 = swift_allocObject(&unk_1007246B8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(&unk_1007246E0, v18 + v6, v17 | 7);
  *(_QWORD *)(v19 + 16) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20 = static Task<>.noThrow(priority:operation:)(v9, &unk_1007BCEE8, v19, (char *)&type metadata for () + 8);
  swift_release(v20);
  swift_release(v19);
  return sub_10000D0F0((uint64_t)v9, &qword_1007B68A0);
}

uint64_t sub_100377214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 48) = a2;
  *(_QWORD *)(v3 + 56) = a3;
  return swift_task_switch(sub_10037722C, 0, 0);
}

uint64_t sub_10037722C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  char *v8;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = unk_1007C4B54;
  v8 = (char *)&dword_1007C4B50 + dword_1007C4B50;
  v5 = Strong;
  v6 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_1003772E4;
  return ((uint64_t (*)(_QWORD, id))v8)(*(_QWORD *)(v0 + 56), v5);
}

uint64_t sub_1003772E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100377350;
  }
  else
  {

    v4 = sub_10037580C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100377350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BCCC0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(NSObject **)(v0 + 64);
  if (v6)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v7);
    v11 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 40) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v9 + 4);
    *v10 = v11;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Wallet UI service show failed with error %@", v9, 0xCu);
    v12 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    v8 = v4;
  }
  swift_errorRelease(v7);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100377620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  v8 = swift_allocObject(&unk_1007246B8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v0);
  aBlock[4] = sub_10037B698;
  v20 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724888;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v8);
  static DispatchQoS.unspecified.getter(v10);
  v18 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_100008384((uint64_t *)&unk_1007B6410);
  v13 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v20;
  swift_release(v8);
  return swift_release(v14);
}

uint64_t sub_100377888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  void *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  const char *v41;
  __n128 v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint8_t *v52;
  int v53;
  uint64_t v54;
  os_log_t v55;
  void (*v56)(char *, uint64_t, __n128);
  uint64_t (*v57)(char *, char *, uint64_t);
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  char v69[32];

  v2 = type metadata accessor for Calendar.Component(0);
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007C4330);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD **)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v61 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v51 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v51 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v51 - v24;
  a1 += 16;
  swift_beginAccess(a1, v69, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1, v26);
  if (result)
  {
    v28 = (void *)result;
    v60 = v11;
    v29 = result + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate;
    swift_beginAccess(result + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate, v68, 0, 0);
    sub_100221F28(v29, (uint64_t)v13, &qword_1007C4330);
    v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v15[6];
    if (v30((uint64_t)v13, 1, v14) == 1)
    {

      return sub_10000D0F0((uint64_t)v13, &qword_1007C4330);
    }
    else
    {
      v59 = (void (*)(char *, char *, uint64_t))v15[4];
      v59(v25, v13, v14);
      if (qword_1007B3FA8 != -1)
        swift_once(&qword_1007B3FA8, sub_100371440);
      v58 = v30;
      v31 = type metadata accessor for Logger(0);
      sub_100221DF8(v31, (uint64_t)qword_1007BCCC0);
      v57 = (uint64_t (*)(char *, char *, uint64_t))v15[2];
      v32 = v57(v23, v25, v14);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter(v33);
      v35 = v34;
      if (os_log_type_enabled(v33, v34))
      {
        v55 = v33;
        v36 = swift_slowAlloc(12, -1);
        v53 = v35;
        v37 = (uint8_t *)v36;
        v54 = swift_slowAlloc(32, -1);
        v67 = v54;
        v52 = v37;
        *(_DWORD *)v37 = 136315138;
        v56 = (void (*)(char *, uint64_t, __n128))(v37 + 4);
        v38 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v39 = dispatch thunk of CustomStringConvertible.description.getter(v14, v38);
        v41 = (const char *)v40;
        v66 = sub_100228BD8(v39, v40, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v56);
        v42 = swift_bridgeObjectRelease(v41);
        v56 = (void (*)(char *, uint64_t, __n128))v15[1];
        v56(v23, v14, v42);
        v33 = v55;
        v43 = v52;
        _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v53, "Relaunching Wallet UI for transfer with start date %s", v52, 0xCu);
        v44 = v54;
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {
        v56 = (void (*)(char *, uint64_t, __n128))v15[1];
        ((void (*)(char *, uint64_t))v56)(v23, v14);
      }

      v45 = (uint64_t)v60;
      static Calendar.current.getter(v46);
      v47 = v64;
      v48 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v4, enum case for Calendar.Component.second(_:), v65);
      Calendar.date(byAdding:value:to:wrappingComponents:)(v4, -1, v25, 0);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v63);
      v49 = v61;
      v57(v61, v25, v14);
      if (v58(v45, 1, v14) == 1)
      {
        v59(v20, v49, v14);
        sub_10000D0F0(v45, &qword_1007C4330);
        v50 = (void (*)(char *, uint64_t))v56;
      }
      else
      {
        v50 = (void (*)(char *, uint64_t))v56;
        ((void (*)(char *, uint64_t))v56)(v49, v14);
        v59(v20, (char *)v45, v14);
      }
      sub_100376434((uint64_t)v20);

      v50(v20, v14);
      return ((uint64_t (*)(char *, uint64_t))v50)(v25, v14);
    }
  }
  return result;
}

uint64_t sub_100377DA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  unsigned int v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  char *v58;

  v2 = type metadata accessor for SFAirDropClient.Identifier(0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  v3 = __chkstk_darwin(v2);
  v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v51 = (char *)&v44 - v5;
  v6 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v47 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v50 = (char *)&v44 - v11;
  result = __chkstk_darwin(v10);
  v14 = (char *)&v44 - v13;
  v15 = 0;
  v58 = (char *)_swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(a1 + 64);
  v45 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v46 = (unint64_t)(v17 + 63) >> 6;
  v49 = enum case for SFAirDropClient.Identifier.wallet(_:);
  v48 = a1;
  while (1)
  {
    if (v19)
    {
      v56 = (v19 - 1) & v19;
      v57 = v15;
      v20 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_24;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v46)
      goto LABEL_30;
    v22 = *(_QWORD *)(v45 + 8 * v21);
    v23 = v15 + 1;
    if (!v22)
    {
      v23 = v15 + 2;
      if (v15 + 2 >= v46)
        goto LABEL_30;
      v22 = *(_QWORD *)(v45 + 8 * v23);
      if (!v22)
      {
        v23 = v15 + 3;
        if (v15 + 3 >= v46)
          goto LABEL_30;
        v22 = *(_QWORD *)(v45 + 8 * v23);
        if (!v22)
        {
          v23 = v15 + 4;
          if (v15 + 4 >= v46)
            goto LABEL_30;
          v22 = *(_QWORD *)(v45 + 8 * v23);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v56 = (v22 - 1) & v22;
    v57 = v23;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_24:
    v25 = *(_QWORD *)(a1 + 56);
    v55 = *(_QWORD *)(v7 + 72);
    v26 = v50;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v50, v25 + v55 * v20, v6);
    v27 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    v28 = v27(v14, v26, v6);
    v29 = v51;
    SFAirDropReceive.Transfer.presenter.getter(v28);
    v30 = v53;
    v31 = v6;
    v32 = v52;
    v33 = v7;
    v34 = v54;
    v35.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, v49, v54);
    v36 = static SFAirDropClient.Identifier.== infix(_:_:)(v29, v32, v35);
    v37 = *(void (**)(char *, uint64_t))(v30 + 8);
    v37(v32, v34);
    v37(v29, v34);
    if ((v36 & 1) != 0)
    {
      v38 = v55;
      v39 = v14;
      v27(v47, v14, v31);
      v40 = v58;
      v6 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
      {
        sub_1002299FC(0, *((_QWORD *)v40 + 2) + 1, 1);
        v40 = v58;
      }
      v41 = v38;
      v43 = *((_QWORD *)v40 + 2);
      v42 = *((_QWORD *)v40 + 3);
      if (v43 >= v42 >> 1)
      {
        sub_1002299FC(v42 > 1, v43 + 1, 1);
        v40 = v58;
      }
      *((_QWORD *)v40 + 2) = v43 + 1;
      v7 = v33;
      result = v27(&v40[((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ v43 * v41], v47, v6);
      v58 = v40;
      a1 = v48;
      v14 = v39;
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v14, v31);
      v6 = v31;
      v7 = v33;
      a1 = v48;
    }
    v19 = v56;
    v15 = v57;
  }
  v24 = v15 + 5;
  if (v15 + 5 >= v46)
  {
LABEL_30:
    swift_release(a1);
    return (uint64_t)v58;
  }
  v22 = *(_QWORD *)(v45 + 8 * v24);
  if (v22)
  {
    v23 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v46)
      goto LABEL_30;
    v22 = *(_QWORD *)(v45 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1003781A4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  const char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);

  v4 = sub_100008384(&qword_1007C4330);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v31 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v33 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v36(v9, a1 + v33, v10);
  v34 = (const char *)a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_10000D0F0((uint64_t)v9, &qword_1007C4330);
    v24 = a2;
    v25 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v24, v25, 1, v10);
  }
  v32 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  v21 = swift_bridgeObjectRetain(v34);
  v22 = v17 - 1;
  if (v22)
  {
    v35 = *(_QWORD *)(v11 + 72);
    v27 = &v34[v35 + v33];
    while (1)
    {
      ((void (*)(char *, const char *, uint64_t, __n128))v36)(v7, v27, v10, v21);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      v28 = sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v29 = dispatch thunk of static Comparable.< infix(_:_:)(v16, v14, v10, v28);
      v30 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v29 & 1) != 0)
      {
        v30(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v30(v14, v10);
      }
      v27 += v35;
      if (!--v22)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v18)(v7, 1, 1, v10, v21);
  }
  swift_bridgeObjectRelease(v34);
  sub_10000D0F0((uint64_t)v7, &qword_1007C4330);
  v23 = v32;
  v20(v32, v16, v10);
  v24 = v23;
  v25 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v24, v25, 1, v10);
}

void sub_10037848C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v4 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    sub_100221F28(a2, (uint64_t)v6, &qword_1007C4330);
    v10 = (uint64_t)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate];
    swift_beginAccess(&v9[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate], v11, 33, 0);
    sub_1002D4998((uint64_t)v6, v10);
    swift_endAccess(v11);

  }
}

void sub_100378568()
{
  void *v0;
  void *v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSString v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  id v55;
  Class isa;
  id v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *oslog;
  id v63;
  id v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  _QWORD aBlock[5];
  uint64_t v69;
  __objc2_prot *v70;

  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  v63 = objc_msgSend((id)objc_opt_self(BSMutableServiceInterface), "interfaceWithIdentifier:", v2);

  v3 = (void *)objc_opt_self(BSObjCProtocol);
  v4 = objc_msgSend(v3, "protocolForProtocol:", &OBJC_PROTOCOL___SFAirDropUIServer);
  objc_msgSend(v63, "setServer:", v4);

  v5 = objc_msgSend(v3, "protocolForProtocol:", &OBJC_PROTOCOL___SFAirDropUIClient);
  objc_msgSend(v63, "setClient:", v5);

  objc_msgSend(v63, "setClientMessagingExpectation:", 0);
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(BSServiceConnectionEndpoint), "endpointForMachName:service:instance:", v6, v7, 0);

  v9 = qword_1007B3FA8;
  if (v8)
  {
    v10 = v8;
    if (v9 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100221DF8(v11, (uint64_t)qword_1007BCCC0);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "SDAirDropUISessionManager: endpoint created!", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v16 = objc_msgSend((id)objc_opt_self(BSServiceConnection), "connectionWithEndpoint:", v10);
    if (v16)
    {
      v17 = v16;
      v70 = &OBJC_PROTOCOL___BSServiceConnectionClient;
      v18 = swift_dynamicCastObjCProtocolConditional(v16, 1, &v70);
      if (v18)
      {
        v19 = (void *)v18;
        v20 = v17;
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "SDAirDropUISessionManager: connection created", v23, 2u);
          swift_slowDealloc(v23, -1, -1);
        }

        v24 = swift_allocObject(&unk_1007247A8, 32, 7);
        *(_QWORD *)(v24 + 16) = v63;
        *(_QWORD *)(v24 + 24) = v1;
        v25 = swift_allocObject(&unk_1007247D0, 32, 7);
        *(_QWORD *)(v25 + 16) = sub_10037B614;
        *(_QWORD *)(v25 + 24) = v24;
        aBlock[4] = sub_100287F38;
        v69 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100379274;
        aBlock[3] = &unk_1007247E8;
        v26 = _Block_copy(aBlock);
        v27 = v69;
        v28 = v20;
        v29 = v63;
        v30 = v1;
        swift_retain(v25);
        swift_release(v27);
        objc_msgSend(v19, "configureConnection:", v26);

        _Block_release(v26);
        LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v25, "", 96, 503, 34, 1);
        v31 = swift_release(v25);
        if ((v26 & 1) != 0)
        {
          __break(1u);
        }
        else
        {
          v64 = v29;
          v32 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection;
          if (*(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection])
          {
            v33 = Logger.logObject.getter(v31);
            v34 = static os_log_type_t.error.getter(v33);
            if (os_log_type_enabled(v33, v34))
            {
              v35 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v35 = 0;
              _os_log_impl((void *)&_mh_execute_header, v33, v34, "SDAirDropUISessionManager: Previous connection present while trying to activate. Ending previous then activating new connection", v35, 2u);
              swift_slowDealloc(v35, -1, -1);
            }

            sub_1003792B0();
            v36 = *(void **)&v30[v32];
          }
          else
          {
            v36 = 0;
          }
          *(_QWORD *)&v30[v32] = v19;
          v44 = v28;

          v46 = Logger.logObject.getter(v45);
          v47 = static os_log_type_t.default.getter(v46);
          if (os_log_type_enabled(v46, v47))
          {
            v48 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v48 = 0;
            _os_log_impl((void *)&_mh_execute_header, v46, v47, "SDAirDropUISessionManager: Activating Session", v48, 2u);
            swift_slowDealloc(v48, -1, -1);
          }

          objc_msgSend(v19, "activate");
          v49 = String._bridgeToObjectiveC()();
          v50 = String._bridgeToObjectiveC()();
          v51 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v49, v50);

          v52 = sub_100008384(&qword_1007B5390);
          v53 = swift_allocObject(v52, 40, 7);
          *(_OWORD *)(v53 + 16) = xmmword_1005D1DF0;
          *(_QWORD *)(v53 + 32) = v51;
          aBlock[0] = v53;
          specialized Array._endMutation()(v53);
          v54 = (const char *)aBlock[0];
          sub_100221EDC(0, (unint64_t *)&unk_1007BCF78, RBSAttribute_ptr);
          v55 = v51;
          isa = Array._bridgeToObjectiveC()().super.isa;
          v57 = objc_msgSend(v19, "remoteTargetWithLaunchingAssertionAttributes:", isa, swift_bridgeObjectRelease(v54).n128_f64[0]);

          if (v57)
          {
            _bridgeAnyObjectToAny(_:)(&v66, v57);
            swift_unknownObjectRelease(v57);
          }
          else
          {
            v66 = 0u;
            v67 = 0u;
          }
          sub_10022E718((uint64_t)&v66, (uint64_t)aBlock, (uint64_t *)&unk_1007B6890);
          sub_100221F28((uint64_t)aBlock, (uint64_t)&v66, (uint64_t *)&unk_1007B6890);
          if (*((_QWORD *)&v67 + 1))
          {
            v58 = sub_100008384(&qword_1007BCF88);
            v59 = swift_dynamicCast(&v65, &v66, (char *)&type metadata for Any + 8, v58, 6);
            v60 = v65;
            if (!v59)
              v60 = 0;
          }
          else
          {
            sub_10000D0F0((uint64_t)&v66, (uint64_t *)&unk_1007B6890);
            v60 = 0;
          }
          v61 = *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
          *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer] = v60;

          swift_unknownObjectRelease(v61);
          sub_10000D0F0((uint64_t)aBlock, (uint64_t *)&unk_1007B6890);
          swift_release(v24);
        }
        return;
      }

    }
    v41 = Logger.logObject.getter(v16);
    v42 = static os_log_type_t.error.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Could not create a connection with the AirDropUI endpoint", v43, 2u);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

    }
    return;
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v37 = type metadata accessor for Logger(0);
  v38 = sub_100221DF8(v37, (uint64_t)qword_1007BCCC0);
  oslog = Logger.logObject.getter(v38);
  v39 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v39, "Could not find endpoint for AirDropUI launch angel. It may not be loaded.", v40, 2u);
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

  }
}

id sub_100378E3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSString v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void **v17;
  uint64_t v18;
  void (*v19)(uint64_t, void *);
  void *v20;
  void *v21;
  uint64_t v22;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007BCCC0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropUISessionManager: configuring session...", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setName:", v11);

  v12 = objc_msgSend((id)objc_opt_self(BSServiceQuality), "userInitiated");
  objc_msgSend(a1, "setServiceQuality:", v12);

  objc_msgSend(a1, "setInterface:", a2);
  objc_msgSend(a1, "setInterfaceTarget:", a3);
  v21 = sub_1003790B8;
  v22 = 0;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1002377A0;
  v20 = &unk_100724810;
  v13 = _Block_copy(&v17);
  objc_msgSend(a1, "setActivationHandler:", v13);
  _Block_release(v13);
  v14 = swift_allocObject(&unk_100724848, 24, 7);
  swift_unknownObjectUnownedInit(v14 + 16, a3);
  v21 = sub_10037B650;
  v22 = v14;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1002377A0;
  v20 = &unk_100724860;
  v15 = _Block_copy(&v17);
  swift_release(v22);
  objc_msgSend(a1, "setInvalidationHandler:", v15);
  _Block_release(v15);
  return objc_msgSend(a1, "setTargetQueue:", *(_QWORD *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_queue));
}

void sub_1003790B8()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BCCC0);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "SDAirDropUISessionManager connection activated!", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_100379184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id Strong;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007BCCC0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SDAirDropUISessionManager connection invalidated with endpoint!", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  sub_1003792B0();

}

uint64_t sub_100379274(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain(a2);
  v3(a2);
  return swift_unknownObjectRelease(a2);
}

void sub_1003792B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  NSObject *v39;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection);
  if (!v6)
  {
    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100221DF8(v34, (uint64_t)qword_1007BCCC0);
    v39 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v39, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v36, "XPC Connection not available, skipping end.", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }
    goto LABEL_17;
  }
  v7 = qword_1007B3FA8;
  v39 = v6;
  if (v7 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007BCCC0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "SDAirDropUISessionManager: Invalidating connection", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate, v14);
  if (Strong)
  {
    v16 = (char *)Strong;
    v17 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion), "invalidate");
    v18 = *(void **)&v16[v17];
    *(_QWORD *)&v16[v17] = 0;

  }
  -[NSObject invalidate](v39, "invalidate");
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer) = 0;
  swift_unknownObjectRelease(v19);
  v20 = *(void **)(v1 + v5);
  *(_QWORD *)(v1 + v5) = 0;

  v22 = (char *)swift_unknownObjectWeakLoadStrong(v13, v21);
  if (!v22)
  {
LABEL_17:

    return;
  }
  v38 = v22;
  v24 = swift_unknownObjectWeakLoadStrong(&v22[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_delegate], v23);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 1, 1, v26);
    v27 = swift_allocObject(&unk_100724758, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v25);
    v28 = qword_1007B3D98;
    swift_retain(v27);
    v29 = v38;
    if (v28 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v30 = static AirDropActor.shared;
    v31 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v32 = (_QWORD *)swift_allocObject(&unk_100724780, 48, 7);
    v32[2] = v30;
    v32[3] = v31;
    v32[4] = v27;
    v32[5] = v29;
    swift_retain(v30);
    swift_release(v27);
    v33 = sub_100252EC0((uint64_t)v4, (uint64_t)&unk_1007BCF08, (uint64_t)v32);
    swift_release(v33);

  }
  else
  {

  }
}

id sub_100379660()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection];
  if (v1)
    objc_msgSend(v1, "invalidate");
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AirDropUISessionClient();
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_10037976C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  _QWORD *v22;

  v20 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_queue;
  v18[1] = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  v10 = v0;
  static DispatchQoS.userInitiated.getter(v10);
  v22 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v13 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v20);
  v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000016, 0x80000001005D50F0, v9, v6, v3, 0);
  *(_QWORD *)(v18[2] + v19) = v14;
  *(_QWORD *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer] = 0;
  v15 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15, 0);

  v16 = (objc_class *)type metadata accessor for AirDropUISessionClient();
  v21.receiver = v10;
  v21.super_class = v16;
  return objc_msgSendSuper2(&v21, "init");
}

uint64_t type metadata accessor for AirDropUISessionClient()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary22AirDropUISessionClient);
}

__n128 sub_100379A08(void *a1, uint64_t a2, uint64_t a3, const char *a4, void (*a5)(uint64_t, const char *))
{
  uint64_t v8;
  const char *v9;
  const char *v10;
  id v11;

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v10 = v9;
  v11 = a1;
  sub_100379D28(v8, v10, a4, a5);

  return swift_bridgeObjectRelease(v10);
}

void sub_100379A70(uint64_t a1, const char *a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v19;
  uint64_t v20;

  v5 = v4;
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007BCCC0);
  swift_bridgeObjectRetain_n(a2, 2);
  v10 = swift_bridgeObjectRetain_n(a4, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v20 = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain(a2);
    v19 = sub_100228BD8(a1, (unint64_t)a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v19 = sub_100228BD8(a3, (unint64_t)a4, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 14);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropUISessionManager: Received remote request for run action for transfer identifier: %s and action identifier: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate, v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    sub_10037B02C(a1, a2, a3, a4);

  }
}

void sub_100379D28(uint64_t a1, const char *a2, const char *a3, void (*a4)(uint64_t, const char *))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v19;
  uint64_t v20;

  v7 = v4;
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007BCCC0);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain(a2);
    v19 = sub_100228BD8(a1, (unint64_t)a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate, v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    a4(a1, a2);

  }
}

uint64_t sub_100379F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100379F90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return sub_100376FE0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100379FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100379FD0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100379FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10037A04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + ((v2 + 24) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1007BCEE4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000D098;
  v5[6] = v3;
  v5[7] = v4;
  return swift_task_switch(sub_10037722C, 0, 0);
}

_QWORD *sub_10037A0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_23;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
        v10 = objc_msgSend(v7, "actionIdentifier");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            v17 = swift_bridgeObjectRelease(a3);
LABEL_18:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v18 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
            v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
            specialized ContiguousArray._endMutation()(v19);
            goto LABEL_5;
          }
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
          v17 = swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
            goto LABEL_18;
        }

LABEL_5:
        ++v6;
        if (v9 == v5)
          return _swiftEmptyArrayStorage;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      if (a1 < 0)
        v21 = a1;
      else
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10037A280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100008384(&qword_1007C4330) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10037A320()
{
  return sub_10037B7D4(&qword_1007C4330, (uint64_t (*)(_QWORD, uint64_t))sub_10037848C);
}

void sub_10037A334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BCCC0);
  swift_errorRetain(a1);
  v3 = swift_errorRetain(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    if (a1)
    {
      swift_errorRetain(a1);
      v8 = _swift_stdlib_bridgeErrorToNSError(a1);
      v10 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v6 + 4);
    }
    else
    {
      v10 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v6 + 4);
      v8 = 0;
    }
    *v7 = v8;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Wallet UI service invalidated with error: %@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    if (a1)
      goto LABEL_10;
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    if (a1)
LABEL_10:
      sub_100377620();
  }
}

void sub_10037A538(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t *v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char v10;
  id v11;
  double v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v6 = swift_beginAccess(v5, v23, 0, 0).n128_u64[0];
  v7 = *v5;
  if (*(_QWORD *)(v7 + 16))
  {
    *(_QWORD *)&v8 = swift_bridgeObjectRetain(a2, v6).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v7, v8);
    v9 = sub_10045C200(a1, (uint64_t)a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v9);
      *(_QWORD *)&v12 = swift_bridgeObjectRelease(a2).n128_u64[0];
      v13 = objc_msgSend(v11, "cancelAction", swift_bridgeObjectRelease((const char *)v7, v12).n128_f64[0]);
      objc_msgSend(v13, "triggerAction");

      return;
    }
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(a2).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v7, v14);
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v15 = type metadata accessor for Logger(0);
  sub_100221DF8(v15, (uint64_t)qword_1007BCCC0);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v22 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain(a2);
    v21 = sub_100228BD8(a1, (unint64_t)a2, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v19 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "AirDrop transfer %s not found in actively tracked transfers. Ignoring cancel request.", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

void sub_10037A784(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t *v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char v10;
  id v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v6 = swift_beginAccess(v5, v35, 0, 0).n128_u64[0];
  v7 = *v5;
  if (!*(_QWORD *)(*v5 + 16))
    goto LABEL_12;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain(a2, v6).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v7, v8);
  v9 = sub_10045C200(a1, (uint64_t)a2);
  if ((v10 & 1) == 0)
  {
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a2).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v7, v18);
LABEL_12:
    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007BCCC0);
    v20 = swift_bridgeObjectRetain_n(a2, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v34 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain(a2);
      v33 = sub_100228BD8(a1, (unint64_t)a2, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v23 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "AirDrop transfer %s not found in actively tracked transfers. Ignoring accept request.", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return;
  }
  v11 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v9);
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(a2).n128_u64[0];
  if (objc_msgSend(v11, "transferState", swift_bridgeObjectRelease((const char *)v7, v12).n128_f64[0]) == (id)1)
  {
    objc_msgSend(v11, "setUserResponse:", 1);
    v13 = objc_msgSend(v11, "possibleActions");
    v14 = sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v32 = v15;
      else
        v32 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v15);
      v16 = (void *)_CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease((const char *)v15);
      if (!v16)
        goto LABEL_10;
    }
    else
    {
      v16 = *(void **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v16)
      {
LABEL_10:
        objc_msgSend(v16, "triggerAction", swift_bridgeObjectRelease((const char *)v15).n128_f64[0]);

        return;
      }
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(id *)(v15 + 32);
LABEL_9:
      v16 = v17;
      goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    if (qword_1007B3FA8 != -1)
      swift_once(&qword_1007B3FA8, sub_100371440);
    v25 = type metadata accessor for Logger(0);
    sub_100221DF8(v25, (uint64_t)qword_1007BCCC0);
    swift_bridgeObjectRetain_n(a2, 2);
    v26 = v11;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(22, -1);
      v30 = swift_slowAlloc(32, -1);
      v34 = v30;
      *(_DWORD *)v29 = 136315394;
      swift_bridgeObjectRetain(a2);
      v33 = sub_100228BD8(a1, (unint64_t)a2, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v29 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v29 + 12) = 2048;
      v31 = objc_msgSend(v26, "transferState");

      v33 = (uint64_t)v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v29 + 14);

      _os_log_impl((void *)&_mh_execute_header, v27, v28, "AirDrop transfer %s is not in Created state%lu. Ignoring accepted request.", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
}

void sub_10037AC70(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t *v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char v10;
  id v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v6 = swift_beginAccess(v5, v28, 0, 0).n128_u64[0];
  v7 = *v5;
  if (*(_QWORD *)(v7 + 16))
  {
    *(_QWORD *)&v8 = swift_bridgeObjectRetain(a2, v6).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v7, v8);
    v9 = sub_10045C200(a1, (uint64_t)a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v9);
      *(_QWORD *)&v12 = swift_bridgeObjectRelease(a2).n128_u64[0];
      if (objc_msgSend(v11, "transferState", swift_bridgeObjectRelease((const char *)v7, v12).n128_f64[0]) == (id)7)
      {
        objc_msgSend(v11, "setUserResponse:", 3);

      }
      else
      {
        if (qword_1007B3FA8 != -1)
          swift_once(&qword_1007B3FA8, sub_100371440);
        v20 = type metadata accessor for Logger(0);
        sub_100221DF8(v20, (uint64_t)qword_1007BCCC0);
        v21 = swift_bridgeObjectRetain_n(a2, 2);
        v22 = Logger.logObject.getter(v21);
        v23 = static os_log_type_t.error.getter(v22);
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc(12, -1);
          v25 = swift_slowAlloc(32, -1);
          v27 = v25;
          *(_DWORD *)v24 = 136315138;
          swift_bridgeObjectRetain(a2);
          v26 = sub_100228BD8(a1, (unint64_t)a2, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v24 + 4);
          swift_bridgeObjectRelease_n(a2, 3);
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "AirDrop transfer %s is not in ReadyForOpen state. Ignoring close request.", v24, 0xCu);
          swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v25, -1, -1);
          swift_slowDealloc(v24, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(a2, 2);
        }
      }
      return;
    }
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(a2).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v7, v13);
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v14 = type metadata accessor for Logger(0);
  sub_100221DF8(v14, (uint64_t)qword_1007BCCC0);
  v15 = swift_bridgeObjectRetain_n(a2, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v27 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain(a2);
    v26 = sub_100228BD8(a1, (unint64_t)a2, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop transfer %s not found in actively tracked transfers. Ignoring close request.", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

void sub_10037B02C(uint64_t a1, const char *a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t *v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char v14;
  id v15;
  double v16;
  id v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  *(_QWORD *)&v10 = swift_beginAccess(v9, v41, 0, 0).n128_u64[0];
  v11 = *v9;
  if (*(_QWORD *)(v11 + 16))
  {
    *(_QWORD *)&v12 = swift_bridgeObjectRetain(a2, v10).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v11, v12);
    v13 = sub_10045C200(a1, (uint64_t)a2);
    if ((v14 & 1) != 0)
    {
      v15 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v13);
      *(_QWORD *)&v16 = swift_bridgeObjectRelease(a2).n128_u64[0];
      v17 = objc_msgSend(v15, "possibleActions", swift_bridgeObjectRelease((const char *)v11, v16).n128_f64[0]);
      v18 = sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr);
      v19 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

      swift_bridgeObjectRetain(a4);
      v20 = (uint64_t)sub_10037A0C8((uint64_t)v19, a3, (uint64_t)a4);
      *(_QWORD *)&v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
      *(_QWORD *)&v22 = swift_bridgeObjectRelease(a4, v21).n128_u64[0];
      if ((unint64_t)v20 >> 62)
      {
        if (v20 < 0)
          v32 = v20;
        else
          v32 = v20 & 0xFFFFFFFFFFFFFF8;
        if (_CocoaArrayWrapper.endIndex.getter(v32))
          goto LABEL_5;
      }
      else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v20 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
          goto LABEL_8;
        }
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v23 = *(id *)(v20 + 32);
LABEL_8:
          v24 = v23;
          objc_msgSend(v23, "triggerAction", swift_bridgeObjectRelease((const char *)v20).n128_f64[0]);

          return;
        }
        __break(1u);
LABEL_25:
        swift_once(&qword_1007B3FA8, sub_100371440);
LABEL_20:
        v33 = type metadata accessor for Logger(0);
        sub_100221DF8(v33, (uint64_t)qword_1007BCCC0);
        swift_bridgeObjectRetain_n(a2, 2);
        v34 = swift_bridgeObjectRetain_n(a4, 2);
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.error.getter(v35);
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc(22, -1);
          v38 = swift_slowAlloc(64, -1);
          v40 = v38;
          *(_DWORD *)v37 = 136315394;
          swift_bridgeObjectRetain(a2);
          v39 = sub_100228BD8(a1, (unint64_t)a2, &v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v37 + 4);
          swift_bridgeObjectRelease_n(a2, 3);
          *(_WORD *)(v37 + 12) = 2080;
          swift_bridgeObjectRetain(a4);
          v39 = sub_100228BD8(a3, (unint64_t)a4, &v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v37 + 14);
          swift_bridgeObjectRelease_n(a4, 3);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "AirDrop transfer %s does not have an action with identifier %s. Ignoring runAction request.", (uint8_t *)v37, 0x16u);
          swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v38, -1, -1);
          swift_slowDealloc(v37, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(a4, 2);
          swift_bridgeObjectRelease_n(a2, 2);

        }
        return;
      }
      swift_bridgeObjectRelease((const char *)v20, v22);
      if (qword_1007B3FA8 == -1)
        goto LABEL_20;
      goto LABEL_25;
    }
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(a2).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v11, v25);
  }
  if (qword_1007B3FA8 != -1)
    swift_once(&qword_1007B3FA8, sub_100371440);
  v26 = type metadata accessor for Logger(0);
  sub_100221DF8(v26, (uint64_t)qword_1007BCCC0);
  v27 = swift_bridgeObjectRetain_n(a2, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v40 = v31;
    *(_DWORD *)v30 = 136315138;
    swift_bridgeObjectRetain(a2);
    v39 = sub_100228BD8(a1, (unint64_t)a2, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v30 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "AirDrop transfer %s not found in actively tracked transfers. Ignoring runAction request.", v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

uint64_t sub_10037B518()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037B53C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10037B570(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007B664C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_100264140(a1, v4, v5, v7, v6);
}

uint64_t sub_10037B5E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10037B614(void *a1)
{
  uint64_t v1;

  return sub_100378E3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10037B61C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10037B62C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10037B650(uint64_t a1)
{
  uint64_t v1;

  sub_100379184(a1, v1);
}

uint64_t sub_10037B658(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10021FF9C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10037B698()
{
  uint64_t v0;

  return sub_100377888(v0);
}

uint64_t sub_10037B6A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007BCF9C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D098;
  return sub_10037569C(a1, v1);
}

void sub_10037B6F8()
{
  uint64_t v0;

  sub_100375A1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(const char **)(v0 + 32));
}

uint64_t sub_10037B708()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10037B734()
{
  uint64_t v0;

  sub_100374990(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(const char **)(v0 + 32));
}

uint64_t sub_10037B740(uint64_t a1)
{
  uint64_t v1;

  return sub_100373CA4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10037B748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384((uint64_t *)&unk_1007BCFE0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10037B7C0()
{
  return sub_10037B7D4((uint64_t *)&unk_1007BCFE0, (uint64_t (*)(_QWORD, uint64_t))sub_100373F38);
}

uint64_t sub_10037B7D4(uint64_t *a1, uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(a1) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

const char *sub_10037B810()
{
  return "fractionCompleted";
}

id sub_10037B81C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "fractionCompleted");
  *a2 = v4;
  return result;
}

uint64_t sub_10037B84C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10037B878(void **a1, uint64_t a2)
{
  uint64_t *v2;
  double result;

  *(_QWORD *)&result = sub_1003733F4(a1, a2, v2[2], (const char *)v2[3], v2[4]).n128_u64[0];
  return result;
}

uint64_t sub_10037B8CC(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_10037B8E0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v2 = (uint64_t)a2;
  v3 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    v4 = a2;
    v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v6 = 0xF000000000000000;
  }
  v8[0] = v2;
  v8[1] = v6;
  sub_1002BFA18((uint64_t)v8, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
  return swift_continuation_resume(v3);
}

uint64_t sub_10037B954(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10037B9BC, static AirDropActor.shared, 0);
}

uint64_t sub_10037B9BC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropContentHandlerPeerPayment()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary34SDAirDropContentHandlerPeerPayment);
}

uint64_t sub_10037B9F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPeerPayment();
  result = swift_allocObject(v2, 16, 7);
  *a1 = result;
  return result;
}

uint64_t sub_10037BA24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = type metadata accessor for SFAirDrop.TransferType(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10037BAB4, static AirDropActor.shared, 0);
}

uint64_t sub_10037BAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = SFAirDropReceive.AskRequest.type.getter();
  v5 = SFAirDrop.TransferType.isPeerPayment.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v5 & 1);
}

uint64_t sub_10037BB1C()
{
  return 0x6D79615072656550;
}

uint64_t sub_10037BB3C()
{
  uint64_t v1;

  v1 = 0x3FF0000000000000;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x695620796D6D7544, 0xEF6B736154207765, &v1, &unk_1007BD0F8, 0, 0xD000000000000069, 0x8000000100617F20, 59, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_10037BBC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 136) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 144) = static AirDropActor.shared;
  return swift_task_switch(sub_10037BC2C, v2, 0);
}

uint64_t sub_10037BC2C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  Class isa;
  id v9;
  const char *v10;
  __n128 v11;
  const char *v12;
  NSString v13;

  v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  v4 = sub_100008384(&qword_1007B5220);
  Optional.tryUnwrap(_:file:line:)(0x61506D6F74737563, 0xED000064616F6C79, 0xD000000000000069, 0x8000000100617F20, 38, v4);
  sub_100225AA0(v1, v3);
  v5 = v0[10];
  v6 = v0[11];
  v0[19] = v5;
  v0[20] = v6;
  v7 = objc_allocWithZone((Class)SDNearbyPeerPaymentReceiverCoordinator);
  sub_10022E4A8(v5, v6);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "initWithSenderMetadata:", isa);
  v0[21] = v9;
  sub_100225AB4(v5, v6);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    v11 = swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = 0;
  }
  v0[22] = v13;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10037BE20;
  v0[14] = swift_continuation_init(v0 + 2, 0, v11);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10037B8CC;
  v0[13] = &unk_100724A98;
  objc_msgSend(v9, "nearbyReceiverRequiresConfirmationWithContactID:completion:", v13, v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_10037BE20()
{
  uint64_t v0;

  return swift_task_switch(sub_10037BE6C, *(_QWORD *)(*(_QWORD *)v0 + 144), 0);
}

uint64_t sub_10037BE6C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  sub_100225AB4(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));

  LOBYTE(v1) = *(_BYTE *)(v0 + 120);
  return (*(uint64_t (**)(BOOL))(v0 + 8))((v1 & 1) == 0);
}

uint64_t sub_10037BEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 136) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 144) = static AirDropActor.shared;
  return swift_task_switch(sub_10037BF24, v2, 0);
}

uint64_t sub_10037BF24()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  Class isa;
  id v9;
  const char *v10;
  __n128 v11;
  const char *v12;
  NSString v13;

  v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  v4 = sub_100008384(&qword_1007B5220);
  Optional.tryUnwrap(_:file:line:)(0x61506D6F74737563, 0xED000064616F6C79, 0xD000000000000069, 0x8000000100617F20, 49, v4);
  sub_100225AA0(v1, v3);
  v5 = v0[10];
  v6 = v0[11];
  v0[19] = v5;
  v0[20] = v6;
  v7 = objc_allocWithZone((Class)SDNearbyPeerPaymentReceiverCoordinator);
  sub_10022E4A8(v5, v6);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "initWithSenderMetadata:", isa);
  v0[21] = v9;
  sub_100225AB4(v5, v6);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    v11 = swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = 0;
  }
  v0[22] = v13;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10037C114;
  v0[14] = swift_continuation_init(v0 + 2, 0, v11);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10037B8E0;
  v0[13] = &unk_100724AB0;
  objc_msgSend(v9, "recipientMetadataWithContactID:completion:", v13, v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_10037C114()
{
  uint64_t v0;

  return swift_task_switch(sub_10037C160, *(_QWORD *)(*(_QWORD *)v0 + 144), 0);
}

uint64_t sub_10037C160()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  if (v1 >> 60 == 15)
  {

    v6 = type metadata accessor for SFError(0);
    v7 = sub_10037C2A0();
    swift_allocError(v6, v7, 0, 0);
    *v8 = 0xD000000000000023;
    v8[1] = 0x8000000100617F90;
    v8[2] = 0xD000000000000069;
    v8[3] = 0x8000000100617F20;
    v8[4] = 52;
    v9 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v8, enum case for SFError.unexpected(_:), v6);
    swift_willThrow(v9);

    sub_100225AB4(v4, v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 120);
    sub_100225AB4(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));

    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v11, v1);
  }
}

unint64_t sub_10037C2A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B64E8;
  if (!qword_1007B64E8)
  {
    v1 = type metadata accessor for SFError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SFError, v1);
    atomic_store(result, &qword_1007B64E8);
  }
  return result;
}

id sub_10037C2E8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HUDManager()), "init");
  qword_1007D8408 = (uint64_t)result;
  return result;
}

uint64_t sub_10037C354()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  __int128 aBlock;
  __int128 v11;
  uint64_t (*v12)();
  uint64_t v13;

  v1 = *(void **)(v0 + OBJC_IVAR___SDHUDManager_activeConnection);
  if (v1)
  {
    v12 = sub_10037C484;
    v13 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v11 = sub_1002377A0;
    *((_QWORD *)&v11 + 1) = &unk_100724C30;
    v2 = _Block_copy(&aBlock);
    v3 = v1;
    v4 = objc_msgSend(v3, "synchronousRemoteObjectProxyWithErrorHandler:", v2);
    _Block_release(v2);

    _bridgeAnyObjectToAny(_:)(&aBlock, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    aBlock = 0u;
    v11 = 0u;
  }
  sub_100221E54((uint64_t)&aBlock, (uint64_t)v8);
  if (v9)
  {
    v5 = sub_100008384(&qword_1007BD290);
    if (swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v5, 6))
      return v7;
    else
      return 0;
  }
  else
  {
    sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007B6890);
    return 0;
  }
}

char *sub_10037C488()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  objc_class *ObjectType;
  objc_super v23;
  _QWORD *v24;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v21 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR___SDHUDManager_serviceConnection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___SDHUDManager_activeConnection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___SDHUDManager_requests] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR___SDHUDManager_bannerDismissalRequested] = 0;
  sub_1002741DC();
  v11 = v1;
  static DispatchQoS.unspecified.getter(v11);
  v24 = _swiftEmptyArrayStorage;
  v12 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v14 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  *(_QWORD *)&v11[OBJC_IVAR___SDHUDManager_dispatchQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001CLL, 0x8000000100618120, v10, v7, v4, 0);
  v15 = objc_allocWithZone((Class)NSXPCListener);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithMachServiceName:", v16);

  *(_QWORD *)&v11[OBJC_IVAR___SDHUDManager_xpcListener] = v17;
  v23.receiver = v11;
  v23.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v23, "init");
  objc_msgSend(*(id *)&v18[OBJC_IVAR___SDHUDManager_xpcListener], "setDelegate:", v18);
  return v18;
}

id sub_10037C748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007D82F8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting HUD manager", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return objc_msgSend(*(id *)(a1 + OBJC_IVAR___SDHUDManager_xpcListener), "resume");
}

uint64_t sub_10037C87C(uint64_t a1, const char *a2, char a3, char a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&v4[OBJC_IVAR___SDHUDManager_dispatchQueue];
  v16 = swift_allocObject(&unk_100724F88, 48, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_BYTE *)(v16 + 32) = a3;
  *(_BYTE *)(v16 + 33) = a4;
  *(_QWORD *)(v16 + 40) = v4;
  aBlock[4] = sub_1003806A0;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724FA0;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v4);
  v26 = _swiftEmptyArrayStorage;
  v19 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100008384((uint64_t *)&unk_1007B6410);
  v21 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v9, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  return swift_release(v28);
}

void sub_10037CA90(uint64_t a1, const char *a2, char a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  char v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  void *v18;
  NSString v19;
  id v20;
  _QWORD *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28[3];

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007D82F8);
  v11 = swift_bridgeObjectRetain_n(a2, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v26 = a3;
    v14 = a4;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v28[0] = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain(a2);
    v27 = sub_100228BD8(a1, (unint64_t)a2, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v15 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Paired Unlock: Posting pill as Unlocking for %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    v17 = v15;
    a4 = v14;
    a3 = v26;
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v18 = (void *)objc_opt_self(SFHUDBannerModel);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "pairedUnlockModelWithWatchName:needsLockButton:needsUpdate:", v19, a3 & 1, a4 & 1);

  v21 = (_QWORD *)(a5 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess(a5 + OBJC_IVAR___SDHUDManager_requests, v28, 33, 0);
  v22 = v20;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
  specialized Array._endMutation()(v25);
  swift_endAccess(v28);
  sub_10037CD18();

}

void sub_10037CD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55[4];
  void **aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  void (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v55[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR___SDHUDManager_dispatchQueue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(_BYTE *)(v0 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) = 0;
  v7 = OBJC_IVAR___SDHUDManager_serviceConnection;
  if (*(_QWORD *)(v0 + OBJC_IVAR___SDHUDManager_serviceConnection))
  {
    if (!*(_QWORD *)(v0 + OBJC_IVAR___SDHUDManager_activeConnection))
    {
      if (qword_1007B3EB8 == -1)
      {
LABEL_18:
        v31 = type metadata accessor for Logger(0);
        v32 = sub_100221DF8(v31, (uint64_t)qword_1007D82F8);
        v33 = Logger.logObject.getter(v32);
        v34 = static os_log_type_t.error.getter(v33);
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "Active HUD service exists but no active connection. Cannot display banner", v35, 2u);
          swift_slowDealloc(v35, -1, -1);
        }

        v36 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        -[NSObject postNotificationName:object:](v36, "postNotificationName:object:", CFSTR("SDUnlockBannerCouldNotBeDisplayed"), 0);
        goto LABEL_21;
      }
LABEL_44:
      swift_once(&qword_1007B3EB8, sub_1002E9FF0);
      goto LABEL_18;
    }
    v8 = (uint64_t *)(v0 + OBJC_IVAR___SDHUDManager_requests);
    swift_beginAccess(v0 + OBJC_IVAR___SDHUDManager_requests, &aBlock, 0, 0);
    v1 = *v8;
    if (!((unint64_t)v1 >> 62))
    {
      v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v1);
      if (v9)
      {
LABEL_6:
        if ((v1 & 0xC000000000000001) != 0)
        {
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
          goto LABEL_9;
        }
        if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v10 = *(id *)(v1 + 32);
LABEL_9:
          v11 = v10;
          if (objc_msgSend(v10, "type", swift_bridgeObjectRelease(v1).n128_f64[0]) == (id)2)
          {
LABEL_10:

            return;
          }
          v37 = sub_10037C354();
          if (v37)
          {
            v38 = (void *)v37;
            if (qword_1007B3EB8 != -1)
              swift_once(&qword_1007B3EB8, sub_1002E9FF0);
            v39 = type metadata accessor for Logger(0);
            sub_100221DF8(v39, (uint64_t)qword_1007D82F8);
            v40 = v11;
            v41 = Logger.logObject.getter(v40);
            v42 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v41, v42))
            {
              v43 = (uint8_t *)swift_slowAlloc(12, -1);
              v44 = swift_slowAlloc(32, -1);
              *(_DWORD *)v43 = 136315138;
              v54 = v43 + 4;
              v55[0] = v44;
              v45 = objc_msgSend((id)objc_opt_self(SFHUDBannerModel), "descriptionForType:", objc_msgSend(v40, "type"));
              v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
              v48 = v47;

              v62 = sub_100228BD8(v46, v48, v55);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v54);

              swift_bridgeObjectRelease(v48);
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "Requesting banner of type %s", v43, 0xCu);
              swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v44, -1, -1);
              swift_slowDealloc(v43, -1, -1);

            }
            else
            {

            }
            objc_msgSend(v38, "showBanner:", v40);

            swift_unknownObjectRelease(v38);
            return;
          }
          if (qword_1007B3EB8 != -1)
            swift_once(&qword_1007B3EB8, sub_1002E9FF0);
          v49 = type metadata accessor for Logger(0);
          v50 = sub_100221DF8(v49, (uint64_t)qword_1007D82F8);
          v36 = Logger.logObject.getter(v50);
          v51 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v36, v51))
          {

            goto LABEL_10;
          }
          v52 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v52 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v51, "No remote object found", v52, 2u);
          swift_slowDealloc(v52, -1, -1);

LABEL_21:
          return;
        }
        __break(1u);
        goto LABEL_44;
      }
LABEL_41:
      swift_bridgeObjectRelease(v1);
      return;
    }
LABEL_37:
    if (v1 < 0)
      v53 = v1;
    else
      v53 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    if (_CocoaArrayWrapper.endIndex.getter(v53))
      goto LABEL_6;
    goto LABEL_41;
  }
  v12 = objc_allocWithZone((Class)NSXPCConnection);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithServiceName:", v13);

  v15 = objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", &OBJC_PROTOCOL___SSUSB332UIProtocol);
  objc_msgSend(v14, "setRemoteObjectInterface:", v15);

  v16 = swift_allocObject(&unk_100724B50, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v0);
  v60 = sub_10037FC78;
  v61 = v16;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_10025BBB4;
  v59 = &unk_100724B68;
  v17 = _Block_copy(&aBlock);
  swift_release(v61);
  objc_msgSend(v14, "setInvalidationHandler:", v17);
  _Block_release(v17);
  v18 = swift_allocObject(&unk_100724B50, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v0);
  v60 = sub_10037FC98;
  v61 = v18;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_10025BBB4;
  v59 = &unk_100724B90;
  v19 = _Block_copy(&aBlock);
  swift_release(v61);
  objc_msgSend(v14, "setInterruptionHandler:", v19);
  _Block_release(v19);
  objc_msgSend(v14, "resume");
  v20 = *(void **)(v0 + v7);
  *(_QWORD *)(v0 + v7) = v14;
  v21 = v14;

  v60 = (void (*)())sub_10037C484;
  v61 = 0;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_1002377A0;
  v59 = &unk_100724BB8;
  v22 = _Block_copy(&aBlock);
  v23 = objc_msgSend(v21, "synchronousRemoteObjectProxyWithErrorHandler:", v22);
  _Block_release(v22);
  _bridgeAnyObjectToAny(_:)(v55, v23);
  swift_unknownObjectRelease(v23);
  sub_10022E77C((uint64_t)v55, (uint64_t)&aBlock);
  v24 = sub_100008384((uint64_t *)&unk_1007BD220);
  if ((swift_dynamicCast(&v62, &aBlock, (char *)&type metadata for Any + 8, v24, 6) & 1) != 0)
  {
    v25 = (void *)v62;
    if (qword_1007B3EB8 != -1)
      swift_once(&qword_1007B3EB8, sub_1002E9FF0);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100221DF8(v26, (uint64_t)qword_1007D82F8);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Displaying HUD", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    objc_msgSend(v25, "start");
    swift_unknownObjectRelease(v25);
  }
  else
  {

  }
  sub_10022E75C(v55);
}

uint64_t sub_10037D60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)&v3[OBJC_IVAR___SDHUDManager_dispatchQueue];
  v15 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v15 + 16) = v3;
  aBlock[4] = a2;
  v25 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a3;
  v16 = _Block_copy(aBlock);
  v17 = v14;
  static DispatchQoS.unspecified.getter(v3);
  v23 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008384((uint64_t *)&unk_1007B6410);
  v20 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v25);
}

void sub_10037D7F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char **v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  NSObject *v12;
  NSObject *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  char isUniquelyReferenced_nonNull_bridgeObject;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v32[24];
  _BYTE v33[24];

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007D82F8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Paired Unlock: Updating pill to Unlocked", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (const char **)(a1 + OBJC_IVAR___SDHUDManager_requests);
  *(_QWORD *)&v8 = swift_beginAccess(a1 + OBJC_IVAR___SDHUDManager_requests, v33, 0, 0).n128_u64[0];
  v9 = (uint64_t)*v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v11 = swift_bridgeObjectRetain(*v7, v8).n128_u64[0];
    if (v10)
      goto LABEL_7;
LABEL_28:
    swift_bridgeObjectRelease((const char *)v9, v11);
LABEL_29:
    v13 = Logger.logObject.getter(v24);
    v30 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v30, "Not currently showing paired unlock banner which needs update", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }
    goto LABEL_31;
  }
  if (v9 < 0)
    v29 = (uint64_t)*v7;
  else
    v29 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v7, v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v29))
    goto LABEL_28;
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_34;
    }
    v12 = *(id *)(v9 + 32);
  }
  v13 = v12;
  if (-[NSObject type](v12, "type", swift_bridgeObjectRelease((const char *)v9).n128_f64[0])
    || !-[NSObject needsUpdate](v13, "needsUpdate")
    || (v14 = -[NSObject watchName](v13, "watchName")) == 0)
  {

    goto LABEL_29;
  }
  v15 = v14;
  v16 = sub_10037C354();
  if (!v16)
  {

    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "No remote object found", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    goto LABEL_31;
  }
  v17 = (void *)v16;
  v18 = objc_msgSend((id)objc_opt_self(SFHUDBannerModel), "pairedUnlockModelWithWatchName:needsLockButton:needsUpdate:", v15, -[NSObject needsLockButton](v13, "needsLockButton"), 0);

  swift_beginAccess(v7, v32, 33, 0);
  v19 = (uint64_t)*v7;
  v20 = v18;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v19);
  *v7 = (const char *)v19;
  if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0 || v19 < 0 || (v19 & 0x4000000000000000) != 0)
  {
    v19 = sub_10026D800(v19);
    *v7 = (const char *)v19;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v22 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 0x20);
    *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x20) = v20;

    specialized Array._endMutation()(v23);
    swift_endAccess(v32);
    objc_msgSend(v17, "updatePairedUnlockBannerToUnlocked");

    swift_unknownObjectRelease(v17);
    v13 = v20;
LABEL_31:

    return;
  }
LABEL_34:
  __break(1u);
}

void sub_10037DBFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE v24[24];

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007D82F8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Asked to dismiss paired unlock banner", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (uint64_t *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  *(_QWORD *)&v8 = swift_beginAccess(a1 + OBJC_IVAR___SDHUDManager_requests, v24, 0, 0).n128_u64[0];
  v9 = *v7;
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v11 = swift_bridgeObjectRetain((const char *)v9, v8).n128_u64[0];
    if (v10)
      goto LABEL_7;
LABEL_21:
    swift_bridgeObjectRelease((const char *)v9, v11);
    goto LABEL_22;
  }
  if (v9 < 0)
    v20 = v9;
  else
    v20 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v9, v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v20))
    goto LABEL_21;
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v12 = *(id *)(v9 + 32);
  }
  v13 = v12;
  if (objc_msgSend(v12, "type", swift_bridgeObjectRelease((const char *)v9).n128_f64[0]))
  {

LABEL_22:
    v21 = Logger.logObject.getter(v14);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Not currently showing paired unlock banner", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    return;
  }
  *(_BYTE *)(a1 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) = 1;
  v15 = (void *)sub_10037C354();
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "dismissBanner");

    swift_unknownObjectRelease(v16);
  }
  else
  {
    v17 = Logger.logObject.getter(0);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "No remote object found, marking banner for dismissal", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
}

uint64_t sub_10037DF18()
{
  return sub_10037D60C((uint64_t)&unk_100724B00, (uint64_t)sub_10037FC14, (uint64_t)&unk_100724B18);
}

uint64_t sub_10037DF34()
{
  return sub_10037D60C((uint64_t)&unk_100724C68, (uint64_t)sub_10037FCD0, (uint64_t)&unk_100724C80);
}

void sub_10037DF50(uint64_t a1, const char *a2, SEL *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  _QWORD *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007D82F8);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a2, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(SFHUDBannerModel), *a3);
  v12 = (_QWORD *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess(a1 + OBJC_IVAR___SDHUDManager_requests, v17, 33, 0);
  v13 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
  specialized Array._endMutation()(v16);
  swift_endAccess(v17);
  sub_10037CD18();

}

uint64_t sub_10037E0D0()
{
  return sub_10037D60C((uint64_t)&unk_100724CB8, (uint64_t)sub_10037FCF8, (uint64_t)&unk_100724CD0);
}

void sub_10037E0EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char **v7;
  double v8;
  uint64_t v9;
  NSObject *v10;
  double v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007D82F8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Asked to dismiss pencil pairing HUD", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (const char **)(a1 + OBJC_IVAR___SDHUDManager_requests);
  *(_QWORD *)&v8 = swift_beginAccess(a1 + OBJC_IVAR___SDHUDManager_requests, v22, 0, 0).n128_u64[0];
  v9 = (uint64_t)*v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v9 < 0)
      v17 = (uint64_t)*v7;
    else
      v17 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v7, v8);
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v10)
      goto LABEL_7;
LABEL_21:
    swift_bridgeObjectRelease((const char *)v9, v11);
    goto LABEL_22;
  }
  v10 = *(NSObject **)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)&v11 = swift_bridgeObjectRetain(*v7, v8).n128_u64[0];
  if (!v10)
    goto LABEL_21;
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    v12 = *(id *)(v9 + 32);
  }
  v10 = v12;
  if (-[NSObject type](v12, "type", swift_bridgeObjectRelease((const char *)v9).n128_f64[0]) == (id)2)
  {
    sub_10037E388();
    v3 = (uint64_t)*v7;
    if (!((unint64_t)*v7 >> 62))
    {
      if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_24;
LABEL_13:
      v13 = OBJC_IVAR___SDHUDManager_serviceConnection;
      v14 = *(void **)(a1 + OBJC_IVAR___SDHUDManager_serviceConnection);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v15, "invalidate");

      }
      v10 = *(NSObject **)(a1 + v13);
      *(_QWORD *)(a1 + v13) = 0;
      goto LABEL_24;
    }
LABEL_27:
    if (v3 < 0)
      v20 = v3;
    else
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v3);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease((const char *)v3);
    if (v21)
      goto LABEL_24;
    goto LABEL_13;
  }

LABEL_22:
  v10 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v18, "Not currently showing pencil pairing UI", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }
LABEL_24:

}

void sub_10037E388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  _BYTE v30[24];
  uint64_t v31;
  __int128 aBlock;
  __int128 v33;
  uint64_t (*v34)();
  uint64_t v35;
  _BYTE v36[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_dispatchQueue);
  *(_QWORD *)v5 = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v2 = v1 + OBJC_IVAR___SDHUDManager_requests;
    *(_QWORD *)&v8 = swift_beginAccess(v1 + OBJC_IVAR___SDHUDManager_requests, v36, 0, 0).n128_u64[0];
    v5 = *(_QWORD *)v2;
    if (!(*(_QWORD *)v2 >> 62))
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
LABEL_4:
      v9 = swift_beginAccess(v2, &aBlock, 33, 0).n128_u64[0];
      v10 = *(_QWORD *)v2;
      if (*(_QWORD *)v2 >> 62)
      {
        if (v10 < 0)
          v15 = *(_QWORD *)v2;
        else
          v15 = v10 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(const char **)v2, *(double *)&v9);
        v16 = _CocoaArrayWrapper.endIndex.getter(v15);
        v9 = swift_bridgeObjectRelease((const char *)v10).n128_u64[0];
        if (v16)
        {
LABEL_6:
          v10 = *(_QWORD *)v2;
          if (!(*(_QWORD *)v2 >> 62))
          {
            v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v11)
              goto LABEL_8;
            goto LABEL_31;
          }
LABEL_27:
          if (v10 < 0)
            v17 = v10;
          else
            v17 = v10 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain((const char *)v10, *(double *)&v9);
          v11 = _CocoaArrayWrapper.endIndex.getter(v17);
          swift_bridgeObjectRelease((const char *)v10);
          if (v11)
          {
LABEL_8:
            if ((v10 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_34;
              }
              v12 = (char *)*(id *)(v10 + 32);
LABEL_11:
              v10 = (uint64_t)v12;
              v11 = *(_QWORD *)v2;
              if (!(*(_QWORD *)v2 >> 62))
              {
                if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_13;
                goto LABEL_38;
              }
LABEL_34:
              if (v11 < 0)
                v18 = v11;
              else
                v18 = v11 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain((const char *)v11);
              v19 = _CocoaArrayWrapper.endIndex.getter(v18);
              swift_bridgeObjectRelease((const char *)v11);
              if (v19)
              {
LABEL_13:
                sub_1004754E8(0, 1);
                swift_endAccess(&aBlock);

                v2 = *(_QWORD *)v2;
                if (!((unint64_t)v2 >> 62))
                {
                  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
LABEL_15:
                    sub_10037CD18();
                    return;
                  }
                  goto LABEL_43;
                }
LABEL_39:
                if (v2 < 0)
                  v20 = v2;
                else
                  v20 = v2 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain((const char *)v2);
                v21 = _CocoaArrayWrapper.endIndex.getter(v20);
                swift_bridgeObjectRelease((const char *)v2);
                if (v21)
                  goto LABEL_15;
LABEL_43:
                v22 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection);
                if (v22)
                {
                  v34 = sub_10037C484;
                  v35 = 0;
                  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                  *((_QWORD *)&aBlock + 1) = 1107296256;
                  *(_QWORD *)&v33 = sub_1002377A0;
                  *((_QWORD *)&v33 + 1) = &unk_100724CF8;
                  v23 = _Block_copy(&aBlock);
                  v24 = v22;
                  v25 = objc_msgSend(v24, "synchronousRemoteObjectProxyWithErrorHandler:", v23);
                  _Block_release(v23);

                  _bridgeAnyObjectToAny(_:)(&aBlock, v25);
                  swift_unknownObjectRelease(v25);
                }
                else
                {
                  aBlock = 0u;
                  v33 = 0u;
                }
                sub_10037FD00((uint64_t)&aBlock, (uint64_t)v30);
                if (v31)
                {
                  v26 = sub_100008384(&qword_1007BD298);
                  if ((swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, v26, 6) & 1) != 0)
                  {
                    v27 = v29;
                    objc_msgSend(v29, "releaseHUDTransaction");
                    swift_unknownObjectRelease(v27);
                  }
                }
                else
                {
                  sub_10000D0F0((uint64_t)v30, (uint64_t *)&unk_1007B6890);
                }
                sub_10000D0F0((uint64_t)&aBlock, (uint64_t *)&unk_1007B6890);
                return;
              }
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
LABEL_32:
            v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
            goto LABEL_11;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
      }
      else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
  }
  if (v5 < 0)
    v13 = v5;
  else
    v13 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v5, v8);
  v14 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease((const char *)v5);
  if (v14)
    goto LABEL_4;
}

void sub_10037E760(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007D82F8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v3, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_10037D60C((uint64_t)&unk_100724BF0, (uint64_t)sub_10037FCB8, (uint64_t)&unk_100724C08);

  }
}

void sub_10037E884()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007D82F8);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Could not create HUD service", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

uint64_t type metadata accessor for HUDManager()
{
  return objc_opt_self(SDHUDManager);
}

void sub_10037E9D8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t v16;

  v3 = a2 + 16;
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007D82F8);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v15 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v8 + 4);
    *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Connection invalidated from %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  swift_beginAccess(v3, &v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    sub_10037D60C((uint64_t)&unk_100724E98, (uint64_t)sub_10038064C, (uint64_t)&unk_100724EB0);

  }
}

void sub_10037EBB4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007D82F8);
  v9 = a1;
  v3 = Logger.logObject.getter(v9);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v10 = v9;
    v7 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v5 + 4);
    *v6 = v9;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Connection interrupted from %@", v5, 0xCu);
    v8 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10037EDC0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v2[OBJC_IVAR___SDHUDManager_dispatchQueue];
  v13 = (_QWORD *)swift_allocObject(&unk_100724DA8, 40, 7);
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100380604;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724DC0;
  v14 = _Block_copy(aBlock);
  v15 = v12;
  v16 = v2;
  v17 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v17);
  v23 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008384((uint64_t *)&unk_1007B6410);
  v20 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release(v25);
}

void sub_10037EFC4(uint64_t a1, void (*a2)(_QWORD, __n128))
{
  uint8_t *v2;
  uint64_t v4;
  const char **v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  __objc2_meth_list **p_opt_class_meths;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  double v17;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  const char **v28;
  void (*v29)(_QWORD, __n128);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  const char *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  void *v49;
  double v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];

  v4 = a1;
  v5 = (const char **)(a1 + OBJC_IVAR___SDHUDManager_requests);
  *(_QWORD *)&v6 = swift_beginAccess(a1 + OBJC_IVAR___SDHUDManager_requests, v58, 0, 0).n128_u64[0];
  v7 = (uint64_t)*v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v7 < 0)
      v37 = (uint64_t)*v5;
    else
      v37 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v5, v6);
    v8 = _CocoaArrayWrapper.endIndex.getter(v37);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v9 = swift_bridgeObjectRetain(*v5, v6).n128_u64[0];
  }
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  if (v8)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    }
    else
    {
      if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_51;
      }
      v11 = *(id *)(v7 + 32);
    }
    v12 = v11;
    if (objc_msgSend(v11, "type", swift_bridgeObjectRelease((const char *)v7).n128_f64[0]))
    {
      if (qword_1007B3EB8 != -1)
        swift_once(&qword_1007B3EB8, sub_1002E9FF0);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_100221DF8(v13, (uint64_t)qword_1007D82F8);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v2 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v2 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "No paired unlock watch name", v2, 2u);
        swift_slowDealloc(v2, -1, -1);
      }

    }
  }
  else
  {
    *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)v7, v9).n128_u64[0];
  }
  v7 = (uint64_t)*v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v7 < 0)
      v38 = (uint64_t)*v5;
    else
      v38 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v5, v17);
    if (_CocoaArrayWrapper.endIndex.getter(v38))
    {
LABEL_17:
      if ((v7 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_53;
        }
        v20 = *(id *)(v7 + 32);
LABEL_20:
        v21 = v20;
        v2 = (uint8_t *)objc_msgSend(v20, "type", swift_bridgeObjectRelease((const char *)v7).n128_f64[0]);

        if (qword_1007B3EB8 == -1)
        {
LABEL_21:
          v22 = type metadata accessor for Logger(0);
          v23 = sub_100221DF8(v22, (uint64_t)qword_1007D82F8);
          v24 = Logger.logObject.getter(v23);
          v25 = static os_log_type_t.default.getter(v24);
          if (!os_log_type_enabled(v24, v25))
            goto LABEL_36;
          v26 = (uint8_t *)swift_slowAlloc(12, -1);
          v55 = swift_slowAlloc(32, -1);
          v57 = v55;
          *(_DWORD *)v26 = 136315138;
          v54 = v26 + 4;
          v27 = objc_msgSend((id)objc_opt_self(SFHUDBannerModel), "descriptionForType:", v2);
          v28 = v5;
          v29 = a2;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v31 = v4;
          v33 = v32;

          v34 = v30;
          a2 = v29;
          v5 = v28;
          v56 = sub_100228BD8(v34, v33, &v57);
          p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v26 + 4);
          v35 = (const char *)v33;
          v4 = v31;
          swift_bridgeObjectRelease(v35);
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Requesting banner of type %s", v26, 0xCu);
          swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v55, -1, -1);
          v36 = v26;
          goto LABEL_35;
        }
LABEL_53:
        swift_once(&qword_1007B3EB8, sub_1002E9FF0);
        goto LABEL_21;
      }
LABEL_51:
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
      goto LABEL_20;
    }
  }
  else
  {
    v18 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v19 = swift_bridgeObjectRetain(*v5, v17).n128_u64[0];
    if (v18)
      goto LABEL_17;
  }
  swift_bridgeObjectRelease((const char *)v7, v19);
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v39 = type metadata accessor for Logger(0);
  v40 = sub_100221DF8(v39, (uint64_t)qword_1007D82F8);
  v24 = Logger.logObject.getter(v40);
  v41 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v41, "No current banner to request", v42, 2u);
    v36 = v42;
LABEL_35:
    swift_slowDealloc(v36, -1, -1);
  }
LABEL_36:

  if (*(_BYTE *)(v4 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) != 1)
  {
    v48 = (uint64_t)*v5;
    if ((unint64_t)*v5 >> 62)
    {
      if (v48 < 0)
        v53 = (uint64_t)*v5;
      else
        v53 = v48 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5, v54);
      v49 = (void *)_CocoaArrayWrapper.endIndex.getter(v53);
      if (!v49)
        goto LABEL_48;
    }
    else
    {
      v49 = *(void **)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)&v50 = swift_bridgeObjectRetain(*v5).n128_u64[0];
      if (!v49)
        goto LABEL_48;
    }
    if ((v48 & 0xC000000000000001) != 0)
    {
      v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
    }
    else
    {
      if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v51 = *(id *)(v48 + 32);
    }
    v49 = v51;
LABEL_48:
    v52 = swift_bridgeObjectRelease((const char *)v48, v50, v54);
    a2(v49, v52);

    return;
  }
  if (p_opt_class_meths[471] != (__objc2_meth_list *)-1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100221DF8(v43, (uint64_t)qword_1007D82F8);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter(v45);
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Not displaying banner because dismissal requested before presentation", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }

  ((void (*)(_QWORD))a2)(0);
  sub_10037E388();
}

uint64_t sub_10037F618(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v1[OBJC_IVAR___SDHUDManager_dispatchQueue];
  v11 = swift_allocObject(&unk_100724D30, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v1;
  aBlock[4] = sub_10038059C;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100724D48;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  static DispatchQoS.unspecified.getter(v1);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release(v21);
}

void sub_10037F810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  const char *v26;
  const char *v27;
  _BYTE v28[24];
  uint64_t v29;
  uint64_t v30;

  if (a1)
    goto LABEL_21;
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007D82F8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing paired unlock watch name", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = (uint64_t *)(a2 + OBJC_IVAR___SDHUDManager_requests);
  *(_QWORD *)&v10 = swift_beginAccess(a2 + OBJC_IVAR___SDHUDManager_requests, v28, 0, 0).n128_u64[0];
  v11 = *v9;
  if ((unint64_t)*v9 >> 62)
  {
    if (v11 < 0)
      v17 = *v9;
    else
      v17 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v11, v10);
    if (_CocoaArrayWrapper.endIndex.getter(v17))
      goto LABEL_8;
LABEL_20:
    swift_bridgeObjectRelease((const char *)v11, v13);
    goto LABEL_21;
  }
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)&v13 = swift_bridgeObjectRetain((const char *)v11, v10).n128_u64[0];
  if (!v12)
    goto LABEL_20;
LABEL_8:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v11 + 32);
  }
  v15 = v14;
  if (objc_msgSend(v14, "type", swift_bridgeObjectRelease((const char *)v11).n128_f64[0])
    || !objc_msgSend(v15, "needsUpdate")
    || (*(_BYTE *)(a2 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) & 1) != 0)
  {

  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v16, "postNotificationName:object:", CFSTR("SDUnlockBannerDismissed"), 0);

  }
LABEL_21:
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100221DF8(v18, (uint64_t)qword_1007D82F8);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v30 = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = objc_msgSend((id)objc_opt_self(SFHUDBannerModel), "descriptionForType:", a1);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v29 = sub_100228BD8(v25, (unint64_t)v27, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v22 + 4);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Banner of type %s did dismiss", v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  sub_10037E388();
}

uint64_t sub_10037FBF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10037FC14()
{
  uint64_t v0;

  sub_10037DF50(*(_QWORD *)(v0 + 16), "Asked to display Oneness unlocked banner", (SEL *)&selRef_onenessUnlockedModel);
}

uint64_t sub_10037FC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10037FC4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10037FC54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10037FC78()
{
  uint64_t v0;

  sub_10037E760(v0, "Connection invalidated for HUD service");
}

void sub_10037FC98()
{
  uint64_t v0;

  sub_10037E760(v0, "Connection interrupted for HUD service");
}

void sub_10037FCB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection);
  *(_QWORD *)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection) = 0;

}

void sub_10037FCD0()
{
  uint64_t v0;

  sub_10037DF50(*(_QWORD *)(v0 + 16), "Asked to display pencil pairing HUD", (SEL *)&selRef_pencilModel);
}

void sub_10037FCF8()
{
  uint64_t v0;

  sub_10037E0EC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10037FD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B6890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037FD48(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void **v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  void (*v27)();
  uint64_t v28;

  v2 = v1;
  if (qword_1007B3EB8 != -1)
    swift_once(&qword_1007B3EB8, sub_1002E9FF0);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007D82F8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received new connection", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  objc_msgSend(a1, "setExportedObject:", v2);
  v9 = (void *)objc_opt_self(NSXPCInterface);
  v10 = objc_msgSend(v9, "interfaceWithProtocol:", &OBJC_PROTOCOL___SUIHUDHostProtocol);
  objc_msgSend(a1, "setExportedInterface:", v10);

  v11 = objc_msgSend(v9, "interfaceWithProtocol:", &OBJC_PROTOCOL___SUIHUDClientProtocol);
  objc_msgSend(a1, "setRemoteObjectInterface:", v11);

  v12 = swift_allocObject(&unk_100724B50, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  v13 = swift_allocObject(&unk_100724DF8, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  v27 = sub_10038063C;
  v28 = v13;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_10025BBB4;
  v26 = &unk_100724E10;
  v14 = _Block_copy(&v23);
  v15 = v28;
  v16 = a1;
  swift_release(v15);
  objc_msgSend(v16, "setInvalidationHandler:", v14);
  _Block_release(v14);
  v17 = swift_allocObject(&unk_100724E48, 24, 7);
  *(_QWORD *)(v17 + 16) = v16;
  v27 = sub_100380644;
  v28 = v17;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_10025BBB4;
  v26 = &unk_100724E60;
  v18 = _Block_copy(&v23);
  v19 = v28;
  v20 = v16;
  swift_release(v19);
  objc_msgSend(v20, "setInterruptionHandler:", v18);
  _Block_release(v18);
  v21 = *(void **)(v2 + OBJC_IVAR___SDHUDManager_activeConnection);
  *(_QWORD *)(v2 + OBJC_IVAR___SDHUDManager_activeConnection) = v20;

  objc_msgSend(v20, "resume");
  return 1;
}

void sub_100380018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  void *v31;
  Class isa;
  unsigned __int8 v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  const char *v41;
  __n128 v42;
  void (*v43)(char *, uint64_t, __n128);
  void (*v44)(char *, uint64_t);
  id v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[136];

  v2 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v45 - v10;
  if (a1 == 1)
  {
    if (qword_1007B3EB8 != -1)
      swift_once(&qword_1007B3EB8, sub_1002E9FF0);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007D82F8);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Oneness unlocked banner Settings button tapped", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    URL.init(string:)(0xD000000000000048, 0x80000001006180D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10000D0F0((uint64_t)v4, (uint64_t *)&unk_1007B5200);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      v22 = sub_100008384((uint64_t *)&unk_1007C4210);
      inited = swift_initStackObject(v22, v48);
      *(_OWORD *)(inited + 16) = xmmword_1005CF250;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
      *(_QWORD *)(inited + 40) = v24;
      *(_QWORD *)(inited + 72) = &type metadata for Bool;
      *(_BYTE *)(inited + 48) = 1;
      *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
      *(_QWORD *)(inited + 88) = v25;
      *(_QWORD *)(inited + 120) = &type metadata for Bool;
      *(_BYTE *)(inited + 96) = 1;
      v26 = (const char *)sub_10021E744(inited);
      v27 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
      if (v27)
      {
        v29 = v27;
        URL._bridgeToObjectiveC()(v28);
        v31 = v30;
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v33 = objc_msgSend(v29, "openSensitiveURL:withOptions:", v31, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

        if ((v33 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        }
        else
        {
          v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
          v35 = Logger.logObject.getter(v34);
          v36 = static os_log_type_t.error.getter(v35);
          if (os_log_type_enabled(v35, v36))
          {
            v37 = (uint8_t *)swift_slowAlloc(12, -1);
            v38 = swift_slowAlloc(32, -1);
            v47 = v38;
            *(_DWORD *)v37 = 136315138;
            v45 = v37 + 4;
            v39 = URL.absoluteString.getter(v38);
            v41 = (const char *)v40;
            v46 = sub_100228BD8(v39, v40, &v47);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v45);
            v42 = swift_bridgeObjectRelease(v41);
            v43 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
            v43(v9, v5, v42);
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to open URL: %s", v37, 0xCu);
            swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v38, -1, -1);
            swift_slowDealloc(v37, -1, -1);

            ((void (*)(char *, uint64_t))v43)(v11, v5);
          }
          else
          {

            v44 = *(void (**)(char *, uint64_t))(v6 + 8);
            v44(v9, v5);
            v44(v11, v5);
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  else if (!a1)
  {
    if (qword_1007B3EB8 != -1)
      swift_once(&qword_1007B3EB8, sub_1002E9FF0);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007D82F8);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Paired unlock banner tapped", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v45 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v45, "postNotificationName:object:", CFSTR("SDUnlockBannerButtonTapped"), 0);

  }
}

uint64_t sub_100380578()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10038059C()
{
  uint64_t v0;

  sub_10037F810(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003805A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003805C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1003805D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100380604()
{
  uint64_t v0;

  sub_10037EFC4(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD, __n128))(v0 + 24));
}

uint64_t sub_100380610()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10038063C()
{
  uint64_t v0;

  sub_10037E9D8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100380644()
{
  uint64_t v0;

  sub_10037EBB4(*(void **)(v0 + 16));
}

void sub_10038064C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_activeConnection);
  *(_QWORD *)(v1 + OBJC_IVAR___SDHUDManager_activeConnection) = 0;

}

void sub_100380664()
{
  uint64_t v0;

  sub_10037DBFC(*(_QWORD *)(v0 + 16));
}

void sub_10038066C()
{
  uint64_t v0;

  sub_10037D7F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100380674()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1003806A0()
{
  uint64_t v0;

  sub_10037CA90(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(_QWORD *)(v0 + 40));
}

id sub_1003806B4()
{
  uint64_t v0;

  return sub_10037C748(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100380764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BD2C0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BD2C0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003807F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003808E4, static AirDropActor.shared, 0);
}

uint64_t sub_1003808E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(_QWORD, unint64_t, _QWORD);
  uint64_t v23;
  const char *v24;
  const char *v25;
  NSString v26;
  NSString v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BOOL8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  const char *type;
  uint64_t v43;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v3, v2, v4, v8);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v15);
    if (v14 || (v17 = SFPlaygroundsAppAvailable(v16), !(_DWORD)v17))
    {
      v33 = 0;
    }
    else
    {
      v18 = SFAirDropReceive.AskRequest.files.getter(v17);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        type = (const char *)v18;
        v20 = *(_QWORD *)(v1 + 80);
        v21 = v18 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        v43 = *(_QWORD *)(v20 + 72);
        v22 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v20 + 16);
        while (1)
        {
          v23 = v22(*(_QWORD *)(v1 + 88), v21, *(_QWORD *)(v1 + 72));
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v23);
          v25 = v24;
          v26 = String._bridgeToObjectiveC()();
          v27 = objc_msgSend(v26, "pathExtension", swift_bridgeObjectRelease(v25).n128_f64[0]);

          if (!v27)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0);
            v29 = v28;
            v27 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v29);
          }
          v30 = *(_QWORD *)(v1 + 88);
          v31 = *(_QWORD *)(v1 + 72);
          v32 = SFIsPlaygroundItem(v27);

          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, v31);
          if ((v32 & 1) == 0)
            break;
          v21 += v43;
          if (!--v19)
          {
            swift_bridgeObjectRelease(type);
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease(type);
        v33 = 0;
      }
      else
      {
        swift_bridgeObjectRelease((const char *)v18);
LABEL_15:
        v38 = objc_allocWithZone((Class)LSApplicationRecord);
        v39 = sub_100528FF4(0xD000000000000015, 0x80000001006181B0, 1);
        v40 = *(_QWORD *)(v1 + 40);
        v41 = *(void **)(v40 + 16);
        *(_QWORD *)(v40 + 16) = v39;

        v33 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    v33 = 0;
  }
  v34 = *(_QWORD *)(v1 + 112);
  v35 = *(_QWORD *)(v1 + 88);
  v36 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v33);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPlaygroundItems()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary38SDAirDropContentHandlerPlaygroundItems);
}

uint64_t sub_100380DEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPlaygroundItems();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100380E20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BD304);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003807F4(a1);
}

void sub_100380E74(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x554F524759414C50;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xEA0000000000444ELL;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xEA0000000000444ELL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x554F524759414C50;
  v10._object = (void *)0xEA0000000000444ELL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xEA0000000000444ELL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10038117C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E496E6F73726570;
  else
    return 0x746E756F636361;
}

uint64_t sub_1003811BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100381DEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003811E0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1003811EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100381C04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100381214(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100381C04();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10038123C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Class isa;
  id v27;
  id v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;

  v3 = v1;
  v5 = sub_100008384(&qword_1007BD450);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_100381C04();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SDAppleIDAccountInfo.CodingKeys, &type metadata for SDAppleIDAccountInfo.CodingKeys, v11, v9, v10);
  v12 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account);
  if (v12)
  {
    v13 = (void *)objc_opt_self(NSKeyedArchiver);
    v37 = 0;
    v14 = v12;
    v15 = objc_msgSend(v13, "archivedDataWithRootObject:requiringSecureCoding:error:", v14, 1, &v37);
    v16 = v37;
    if (!v15)
    {
      v23 = v16;
      _convertNSErrorToError(_:)(v16);

      swift_willThrow(v24);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    v17 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

    v37 = v17;
    v38 = v19;
    HIBYTE(v36) = 0;
    v20 = sub_100285DE4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, (char *)&v36 + 7, v5, &type metadata for Data, v20);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      v21 = (uint64_t)v17;
      v22 = v19;
      return sub_100225AB4(v21, v22);
    }

    sub_100225AB4((uint64_t)v17, v19);
  }
  v25 = (void *)objc_opt_self(NSKeyedArchiver);
  sub_100221EDC(0, &qword_1007BD438, SFAppleIDPersonInfo_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v37 = 0;
  v27 = objc_msgSend(v25, "archivedDataWithRootObject:requiringSecureCoding:error:", isa, 1, &v37);

  v28 = v37;
  if (v27)
  {
    v29 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

    v37 = v29;
    v38 = v31;
    HIBYTE(v36) = 1;
    v32 = sub_100285DE4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, (char *)&v36 + 7, v5, &type metadata for Data, v32);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = (uint64_t)v29;
    v22 = v31;
    return sub_100225AB4(v21, v22);
  }
  v34 = v28;
  _convertNSErrorToError(_:)(v28);

  swift_willThrow(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_10038154C(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  id v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t ObjectType;
  _QWORD *v46;
  uint64_t v47;
  objc_super v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v1;
  ObjectType = swift_getObjectType(v3);
  v5 = sub_100008384(&qword_1007BD428);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v47 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account] = 0;
  v10 = a1[3];
  v9 = a1[4];
  sub_10023A834(a1, v10);
  v11 = sub_100381C04();
  v44 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SDAppleIDAccountInfo.CodingKeys, &type metadata for SDAppleIDAccountInfo.CodingKeys, v11, v10, v9);
  if (v2)
    goto LABEL_3;
  v12 = v6;
  LOBYTE(v52) = 0;
  v13 = sub_100285DA0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v52, v5, &type metadata for Data, v13);
  v14 = v5;
  v15 = v8;
  v17 = v49;
  v16 = v50;
  sub_100221EDC(0, &qword_1007B6CA8, NSKeyedUnarchiver_ptr);
  v18 = sub_100221EDC(0, &qword_1007BD448, SFAppleIDAccount_ptr);
  v19 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v18, v17, v16, v18);
  v28 = v19;
  if (!v19)
  {
    v34 = type metadata accessor for SFError(0);
    v35 = sub_10037C2A0();
    swift_allocError(v34, v35, 0, 0);
    *v36 = 0xD00000000000001ELL;
    v36[1] = 0x8000000100618340;
    v36[2] = 0xD000000000000059;
    v36[3] = 0x80000001006182E0;
    v36[4] = 44;
    v37 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, enum case for SFError.unexpected(_:), v34);
    swift_willThrow(v37);
    sub_100225AB4(v17, v16);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v14);
LABEL_3:
    v25 = v44;
    v24 = (objc_class *)ObjectType;
    goto LABEL_4;
  }
  sub_100225AB4(v17, v16);
  v29 = *(void **)&v3[v47];
  *(_QWORD *)&v3[v47] = v28;

  LOBYTE(v52) = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v52, v14, &type metadata for Data, v13);
  v21 = v49;
  v20 = v50;
  sub_100221EDC(0, &qword_1007B6CA8, NSKeyedUnarchiver_ptr);
  v22 = sub_100008384(&qword_1007B6CB0);
  v23 = swift_allocObject(v22, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1005CF140;
  *(_QWORD *)(v23 + 32) = sub_100221EDC(0, (unint64_t *)&unk_1007B59E0, NSString_ptr);
  *(_QWORD *)(v23 + 40) = sub_100221EDC(0, (unint64_t *)&unk_1007B5230, NSDictionary_ptr);
  *(_QWORD *)(v23 + 48) = sub_100221EDC(0, &qword_1007BD438, SFAppleIDPersonInfo_ptr);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(&v49, v23, v21, v20);
  swift_bridgeObjectRelease((const char *)v23);
  v43 = v15;
  if (v51)
  {
    v30 = sub_100008384(&qword_1007BD440);
    v31 = swift_dynamicCast(&v52, &v49, (char *)&type metadata for Any + 8, v30, 6);
    v25 = v44;
    v24 = (objc_class *)ObjectType;
    v32 = v12;
    if ((v31 & 1) != 0)
    {
      sub_100225AB4(v21, v20);
      v33 = v52;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v43, v14);
      *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_personInfo] = v33;

      v48.receiver = v25;
      v48.super_class = v24;
      v26 = objc_msgSendSuper2(&v48, "init");
      sub_10022E75C(v46);
      return v26;
    }
  }
  else
  {
    sub_10035BE24((uint64_t)&v49);
    v25 = v44;
    v24 = (objc_class *)ObjectType;
    v32 = v12;
  }
  v38 = type metadata accessor for SFError(0);
  v39 = sub_10037C2A0();
  swift_allocError(v38, v39, 0, 0);
  *v40 = 0xD000000000000021;
  v40[1] = 0x80000001006182B0;
  v40[2] = 0xD000000000000059;
  v40[3] = 0x80000001006182E0;
  v40[4] = 51;
  v41 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, enum case for SFError.unexpected(_:), v38);
  swift_willThrow(v41);
  sub_100225AB4(v21, v20);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v43, v14);
LABEL_4:
  sub_10022E75C(v46);
  v26 = *(id *)&v3[v47];

  swift_deallocPartialClassInstance(v25, v24, 24, 7);
  return v26;
}

uint64_t type metadata accessor for SDAppleIDAccountInfo()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary20SDAppleIDAccountInfo);
}

id sub_100381B04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = sub_10038154C(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_100381B50(_QWORD *a1)
{
  return sub_10038123C(a1);
}

id sub_100381BB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAppleIDAccountInfoStoreFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAppleIDAccountInfoStoreFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary32SDAppleIDAccountInfoStoreFactory);
}

unint64_t sub_100381C04()
{
  unint64_t result;

  result = qword_1007BD430;
  if (!qword_1007BD430)
  {
    result = swift_getWitnessTable(&unk_1005D5428, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BD430);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDAppleIDAccountInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100381C94 + 4 * byte_1005D52C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100381CC8 + 4 * byte_1005D52C0[v4]))();
}

uint64_t sub_100381CC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100381CD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100381CD8);
  return result;
}

uint64_t sub_100381CE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100381CECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100381CF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100381CF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAppleIDAccountInfo.CodingKeys()
{
  return &type metadata for SDAppleIDAccountInfo.CodingKeys;
}

unint64_t sub_100381D18()
{
  unint64_t result;

  result = qword_1007BD458;
  if (!qword_1007BD458)
  {
    result = swift_getWitnessTable(&unk_1005D5400, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BD458);
  }
  return result;
}

unint64_t sub_100381D60()
{
  unint64_t result;

  result = qword_1007BD460;
  if (!qword_1007BD460)
  {
    result = swift_getWitnessTable(&unk_1005D5370, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BD460);
  }
  return result;
}

unint64_t sub_100381DA8()
{
  unint64_t result;

  result = qword_1007BD468;
  if (!qword_1007BD468)
  {
    result = swift_getWitnessTable(&unk_1005D5398, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BD468);
  }
  return result;
}

uint64_t sub_100381DEC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E756F636361, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E496E6F73726570 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease(0xEA00000000006F66);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E496E6F73726570, 0xEA00000000006F66, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100381EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BD470);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BD470);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100381F78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  v39 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v39 + 64);
  v6 = __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v39 - v8);
  v10 = type metadata accessor for Date(0);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  v19 = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v13 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
    v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
    switch(v20)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
      case 7:
      case 8:
        if (qword_1007B3FC0 == -1)
          goto LABEL_4;
        goto LABEL_15;
      case 4:
        v20 = 3584;
        break;
      case 5:
        v20 = 34816;
        break;
      case 6:
        v20 = 2;
        break;
      default:
        if (qword_1007B3DD8 != -1)
          v19 = swift_once(&qword_1007B3DD8, sub_1002CFC70);
        v20 = qword_1007D80C0;
        break;
    }
    Date.init()(v19);
    v31 = v40;
    v30 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v9 + *(int *)(v4 + 20), v12, v41);
    *v9 = v20;
    v32 = type metadata accessor for TaskPriority(0);
    v33 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v42, 1, 1, v32);
    sub_1002D48DC((uint64_t)v9, (uint64_t)v7);
    v34 = *(unsigned __int8 *)(v39 + 80);
    v35 = (v34 + 40) & ~v34;
    v36 = (_QWORD *)swift_allocObject(&unk_100725438, v35 + v5, v34 | 7);
    v36[2] = 0;
    v36[3] = 0;
    v36[4] = v1;
    sub_10038A290((uint64_t)v7, (uint64_t)v36 + v35);
    v37 = v1;
    v38 = sub_100252EC0(v33, (uint64_t)&unk_1007BD500, (uint64_t)v36);
    swift_release(v38);
    sub_1002D4920((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
  }
  else
  {
    __break(1u);
LABEL_15:
    swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_4:
    v21 = type metadata accessor for Logger(0);
    sub_100221DF8(v21, (uint64_t)qword_1007BD470);
    v22 = v1;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v44 = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = sub_1003FDAA0(*(_QWORD *)&v1[v13]);
      v29 = (const char *)v28;
      v43 = sub_100228BD8(v27, v28, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v25 + 4);

      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Authentication type %s does not support this method", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1003823DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[32] = a4;
  v5[33] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[35] = v7;
  v5[36] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[38] = v9;
  v5[39] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100382464, 0, 0);
}

uint64_t sub_100382464()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0[32] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 24, 0, 0);
  sub_100221F28(v1, (uint64_t)(v0 + 19), &qword_1007BFF70);
  if (v0[22])
  {
    v2 = v0[33];
    sub_100244418((uint64_t)(v0 + 19), (uint64_t)(v0 + 14));
    sub_10000D0F0((uint64_t)(v0 + 19), &qword_1007BFF70);
    v3 = (_QWORD *)(*sub_10023A834(v0 + 14, v0[17])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 27, 0, 0);
    v4 = *sub_10023A834(v3, v3[3]);
    v5 = swift_task_alloc(32);
    v0[40] = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[41] = v6;
    *v6 = v0;
    v6[1] = sub_10038274C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_10038A650, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000D0F0((uint64_t)(v0 + 19), &qword_1007BFF70);
    v8 = v0[39];
    v9 = v0[36];
    v18 = v0[38];
    v19 = v0[37];
    v11 = v0[34];
    v10 = v0[35];
    v12 = (void *)v0[32];
    v13 = swift_allocObject(&unk_100725460, 24, 7);
    *(_QWORD *)(v13 + 16) = v12;
    v0[12] = sub_10038A5AC;
    v0[13] = v13;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10025BBB4;
    v0[11] = &unk_100725478;
    v14 = _Block_copy(v0 + 8);
    static DispatchQoS.unspecified.getter(v12);
    v0[30] = _swiftEmptyArrayStorage;
    v15 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v16 = sub_100008384((uint64_t *)&unk_1007B6410);
    v17 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v16, v17, v11, v15);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v9, v14);
    _Block_release(v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v8, v19);
    swift_release(v0[13]);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_10038274C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100382950;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v4 = sub_1003827B8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003827B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_10022E75C(v0 + 14);
  v1 = v0[39];
  v2 = v0[36];
  v12 = v0[38];
  v13 = v0[37];
  v4 = v0[34];
  v3 = v0[35];
  v5 = (void *)v0[32];
  v6 = swift_allocObject(&unk_100725460, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v0[12] = sub_10038A5AC;
  v0[13] = v6;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10025BBB4;
  v0[11] = &unk_100725478;
  v7 = _Block_copy(v0 + 8);
  static DispatchQoS.unspecified.getter(v5);
  v0[30] = _swiftEmptyArrayStorage;
  v8 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v9 = sub_100008384((uint64_t *)&unk_1007B6410);
  v10 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release(v0[13]);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100382950()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[42];
  v2 = v0[39];
  v3 = v0[36];
  v21 = v0[38];
  v23 = v0[37];
  v4 = v0[34];
  v20 = v0[35];
  v5 = (void *)v0[32];
  swift_task_dealloc(v0[40]);
  sub_10022E75C(v0 + 14);
  v6 = swift_allocObject(&unk_1007254B0, 32, 7);
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  v0[6] = sub_10038A5E4;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10025BBB4;
  v0[5] = &unk_1007254C8;
  v7 = _Block_copy(v0 + 2);
  swift_errorRetain(v1);
  static DispatchQoS.unspecified.getter(v5);
  v0[31] = _swiftEmptyArrayStorage;
  v8 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v9 = sub_100008384((uint64_t *)&unk_1007B6410);
  v10 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 31, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v3, v7);
  _Block_release(v7);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v23);
  swift_release(v0[7]);
  v11 = v0[39];
  v12 = v0[36];
  v22 = v0[38];
  v24 = v0[37];
  v14 = v0[34];
  v13 = v0[35];
  v15 = (void *)v0[32];
  v16 = swift_allocObject(&unk_100725460, 24, 7);
  *(_QWORD *)(v16 + 16) = v15;
  v0[8] = _NSConcreteStackBlock;
  v0[12] = sub_10038A5AC;
  v0[13] = v16;
  v0[9] = 1107296256;
  v0[10] = sub_10025BBB4;
  v0[11] = &unk_100725478;
  v17 = _Block_copy(v0 + 8);
  static DispatchQoS.unspecified.getter(v15);
  v0[30] = _swiftEmptyArrayStorage;
  v18 = sub_100008384((uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v18, v10, v14, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v12, v17);
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v24);
  swift_release(v0[13]);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_100382C2C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSData v21;
  void *v22;
  Class isa;
  const char *v24;
  const char *v25;
  NSString v26;
  char *v27;
  __n128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  Class v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  void *v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  uint8_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  void (**v92)(void *, _QWORD, uint64_t);
  char v93[24];
  char v94[32];
  __int128 v95;
  uint64_t v96;
  char v97[24];
  __int128 v98;
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;

  v2 = type metadata accessor for DispatchPredicate(0);
  v92 = *(void (***)(void *, _QWORD, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  v91 = (uint64_t *)((char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)type metadata accessor for UUID(0);
  v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v97, 0, 0);
  v12 = &qword_1007B9E38;
  sub_100221F28(v11, (uint64_t)&v98, &qword_1007B9E38);
  sub_100221F28((uint64_t)&v98, (uint64_t)&v95, &qword_1007B9E38);
  if (!v96)
  {
    sub_10000D0F0((uint64_t)&v95, &qword_1007B9E38);
    v37 = sub_100244304();
    v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0, 0);
    *(_DWORD *)v39 = 10;
    strcpy((char *)(v39 + 8), "No peer device");
    *(_BYTE *)(v39 + 23) = -18;
    swift_willThrow(v38);
    sub_10000D0F0((uint64_t)&v98, &qword_1007B9E38);
    goto LABEL_16;
  }
  v89 = (_QWORD *)v2;
  sub_10026EE60(&v95, (uint64_t)v100);
  sub_10000D0F0((uint64_t)&v98, &qword_1007B9E38);
  sub_100244418((uint64_t)v100, (uint64_t)&v98);
  (*(void (**)(char *, char *, _QWORD *))(v8 + 16))(v10, &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], v7);
  v13 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  v15 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
  v12 = (uint64_t *)swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
  v16 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (!v16)
  {
    __break(1u);
LABEL_41:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
    __break(1u);
    return;
  }
  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = (uint64_t)v16;
  *((_BYTE *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
  sub_10026EE60(&v98, (uint64_t)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
  (*(void (**)(uint64_t, char *, _QWORD *))(v8 + 32))((uint64_t)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v10, v7);
  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v14;
  v7 = *(_QWORD **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = v12;
  swift_retain(v12);
  swift_release(v7);
  v17 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationRequest), "init");
  if (!v17)
  {
    v40 = sub_100244304();
    v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v40, 0, 0);
    *(_DWORD *)v41 = 10;
    *(_QWORD *)(v41 + 8) = 0xD000000000000030;
    *(_QWORD *)(v41 + 16) = 0x80000001006185B0;
    swift_willThrow(v38);
    swift_release(v12);
LABEL_15:
    sub_10022E75C(v100);
    v2 = (uint64_t)v89;
    goto LABEL_16;
  }
  v7 = v17;
  if ((unint64_t)(*(_QWORD *)&a1[v13] - 1) >= 4)
    goto LABEL_7;
  v18 = *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession];
  if (!v18)
  {
    v42 = sub_100244304();
    v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0, 0);
    *(_DWORD *)v43 = 10;
    *(_QWORD *)(v43 + 8) = 0xD00000000000001ELL;
    *(_QWORD *)(v43 + 16) = 0x80000001006185F0;
    swift_willThrow(v38);
    swift_release(v12);

    goto LABEL_15;
  }
  v20 = *(_QWORD *)(v18 + 16);
  v19 = *(_QWORD *)(v18 + 24);
  swift_retain(*(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession]);
  sub_10022E4A8(v20, v19);
  v21.super.isa = Data._bridgeToObjectiveC()().super.isa;
  v88 = v13;
  v22 = v7;
  isa = v21.super.isa;
  sub_100225AB4(v20, v19);
  objc_msgSend(v22, "setAwdlInfo:", isa);
  swift_release(v18);

  v7 = v22;
  v13 = v88;
LABEL_7:
  UUID.uuidString.getter(objc_msgSend(v7, "setVersion:", 1));
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSessionID:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v27 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  v28 = swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate], v94, 0, 0);
  v29 = 0.0;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48))(v27, 1, v90, v28))
  {
    v30 = v13;
    v31 = v90;
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v27, v90);
    v29 = Date.timeIntervalSince1970.getter(v32);
    v33 = v31;
    v13 = v30;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
  }
  v34 = Date.init()(objc_msgSend(v7, "setUnlockDate:", v29));
  v35 = Date.timeIntervalSince1970.getter(v34);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v90);
  objc_msgSend(v7, "setSessionStartDate:", v35);
  v2 = (uint64_t)v89;
  if (HIDWORD(*(_QWORD *)&a1[v13]))
    goto LABEL_41;
  objc_msgSend(v7, "setType:");
  if ((unint64_t)(*(_QWORD *)&a1[v13] - 3) <= 5)
  {
    v36 = v13;
    sub_100524A50(0, 0xF000000000000000);
    sub_100524700(0, 0xF000000000000000);
    v58 = v57;
    v59 = Data.init(referencing:)(v57);
    v61 = v60;
    v4 = (uint64_t)v7;
    v62 = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AB4(v59, v61);
    objc_msgSend((id)v4, "setAksToken:", v62);

    v7 = (_QWORD *)v4;
    v13 = v36;
  }
  v63 = objc_msgSend(v7, "data");
  if (v63)
  {
    v64 = v63;
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v38 = v65;

    if (qword_1007B3FC0 == -1)
    {
LABEL_29:
      v66 = type metadata accessor for Logger(0);
      sub_100221DF8(v66, (uint64_t)qword_1007BD470);
      v67 = a1;
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.default.getter(v68);
      if (os_log_type_enabled(v68, v69))
      {
        v88 = v13;
        v70 = swift_slowAlloc(12, -1);
        v91 = (_QWORD *)v38;
        v71 = (uint8_t *)v70;
        v72 = swift_slowAlloc(8, -1);
        v92 = (void (**)(void *, _QWORD, uint64_t))v7;
        v89 = (_QWORD *)v72;
        *(_DWORD *)v71 = 138412290;
        v90 = v4;
        v73 = *(Class *)((char *)&v67->isa + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
        *(_QWORD *)&v98 = v73;
        v74 = v73;
        v13 = v88;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v71 + 4);
        v75 = v89;
        *v89 = v73;
        v4 = v90;

        _os_log_impl((void *)&_mh_execute_header, v68, v69, "Sending authentication request on queue %@", v71, 0xCu);
        v76 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v75, 1, v76);
        v7 = v92;
        swift_slowDealloc(v75, -1, -1);
        v77 = v71;
        v38 = (uint64_t)v91;
        swift_slowDealloc(v77, -1, -1);
      }
      else
      {

        v68 = v67;
      }

      v80 = (uint64_t)v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
      swift_beginAccess((char *)v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v93, 0, 0);
      sub_100221F28(v80, (uint64_t)&v98, &qword_1007BFF70);
      if (v99)
      {
        sub_100244418((uint64_t)&v98, (uint64_t)&v95);
        sub_10000D0F0((uint64_t)&v98, &qword_1007BFF70);
        v81 = sub_10023A834(&v95, v96);
        v82 = *(_QWORD *)&a1[v13];
        v83 = *v81;
        v84 = v101;
        v85 = v102;
        v86 = sub_10023A834(v100, v101);
        sub_10056A0EC(v4, v38, (uint64_t)v86, 0, v82, v83, v84, v85);
        sub_10022E75C(&v95);
      }
      else
      {
        sub_10000D0F0((uint64_t)&v98, &qword_1007BFF70);
      }
      sub_1003FCE8C(0, 1);
      sub_100225AB4(v4, v38);
      swift_release(v12);

      sub_10022E75C(v100);
      return;
    }
LABEL_39:
    swift_once(&qword_1007B3FC0, sub_100381EE8);
    goto LABEL_29;
  }
  v78 = sub_100244304();
  v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v78, 0, 0);
  *(_DWORD *)v79 = 10;
  *(_QWORD *)(v79 + 8) = 0xD000000000000020;
  *(_QWORD *)(v79 + 16) = 0x80000001006159A0;
  swift_willThrow(v38);
  swift_release(v12);

  sub_10022E75C(v100);
LABEL_16:
  *(_QWORD *)&v98 = v38;
  swift_errorRetain(v38);
  v44 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v100, &v98, v44, &type metadata for SFAuthenticationErrorMessage, 6) & 1) != 0)
  {
    v13 = LODWORD(v100[0]);
    v45 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    v12 = (uint64_t *)v100[1];
    v46 = (char *)v100[2];
    v7 = v91;
    *v91 = v45;
    v4 = (uint64_t)v92;
    v92[13](v7, enum case for DispatchPredicate.onQueue(_:), v2);
    v47 = v45;
    LOBYTE(v45) = _dispatchPreconditionTest(_:)(v7);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v2);
    if ((v45 & 1) != 0)
    {
      v48 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], &v95, 0, 0);
      sub_100221F28(v48, (uint64_t)v100, &qword_1007BFF70);
      if (v101)
      {
        sub_100244418((uint64_t)v100, (uint64_t)&v98);
        sub_10000D0F0((uint64_t)v100, &qword_1007BFF70);
        v49 = (char *)*sub_10023A834(&v98, v99);
        v50 = a1;
        sub_100388748(v50, v13, (uint64_t)v12, v46, v49, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

        sub_10022E75C(&v98);
      }
      else
      {
        sub_10000D0F0((uint64_t)v100, &qword_1007BFF70);
      }
      swift_errorRelease(v38);
      swift_bridgeObjectRelease(v46);
      return;
    }
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v51 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v52 = v91;
  *v91 = v51;
  v13 = (uint64_t)v92;
  v92[13](v52, enum case for DispatchPredicate.onQueue(_:), v2);
  v53 = v51;
  LOBYTE(v51) = _dispatchPreconditionTest(_:)(v52);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v52, v2);
  if ((v51 & 1) == 0)
    goto LABEL_38;
  v54 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], &v95, 0, 0);
  sub_100221F28(v54, (uint64_t)v100, &qword_1007BFF70);
  if (v101)
  {
    sub_100244418((uint64_t)v100, (uint64_t)&v98);
    sub_10000D0F0((uint64_t)v100, &qword_1007BFF70);
    v55 = (char *)*sub_10023A834(&v98, v99);
    v56 = a1;
    sub_100388748(v56, 10, 0, (char *)0xE000000000000000, v55, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

    sub_10022E75C(&v98);
  }
  else
  {
    sub_10000D0F0((uint64_t)v100, &qword_1007BFF70);
  }
  swift_errorRelease(v38);
}

void sub_100383900(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  NSObject *v24;
  NSObject **v25;
  uint64_t v26;
  uint64_t v27;
  NSObject **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for AuthenticationSecurityRequest(0);
  v6 = *(_QWORD *)(v33 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v33);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for Date(0);
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  __chkstk_darwin(v9);
  v37 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (qword_1007B3FC0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_3:
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100221DF8(v17, (uint64_t)qword_1007BD470);
  v19 = a1;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v31 = v7;
  v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v6;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 138412290;
    v29 = v18;
    v38 = v19;
    v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v23 + 4);
    v25 = v28;
    *v28 = v19;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received authentication request: %@", v23, 0xCu);
    v26 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v25, 1, v26);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

    v20 = v19;
  }

  __asm { BR              X12 }
}

uint64_t sub_100384534(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  Class isa;
  _QWORD *v13;
  const char *v14;
  const char *v15;
  NSString v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  NSObject *v28;
  _QWORD *v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  NSObject *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  _BYTE v54[24];
  NSObject *v55;
  _BYTE v56[16];
  uint64_t v57;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD **)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once(&qword_1007B3FC0, sub_100381EE8);
    goto LABEL_13;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationResponse), "init");
  v7 = v10;
  if (v10)
  {
    v11 = v10;
    isa = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "setAwdlInfo:", isa);

    objc_msgSend(v11, "setVersion:", 1);
    v13 = v11;
    UUID.uuidString.getter(v13);
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setSessionID:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
  if ((a1 & 0x100000000) == 0)
    objc_msgSend(v7, "setErrorCode:", a1);
  if (v7)
  {
    v17 = objc_msgSend(v7, "data");
    if (v17)
    {
      v18 = v17;
      v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;

      if (qword_1007B3FC0 != -1)
        swift_once(&qword_1007B3FC0, sub_100381EE8);
      v22 = type metadata accessor for Logger(0);
      sub_100221DF8(v22, (uint64_t)qword_1007BD470);
      v23 = v7;
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v51 = v21;
        v26 = swift_slowAlloc(12, -1);
        v50 = v19;
        v27 = (uint8_t *)v26;
        v48 = (_QWORD *)swift_slowAlloc(8, -1);
        v49 = v27;
        *(_DWORD *)v27 = 138412290;
        v55 = v23;
        v28 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v27 + 4);
        v29 = v48;
        *v48 = v7;

        v21 = v51;
        v30 = v49;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending authentication response: %@", v49, 0xCu);
        v31 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v29, 1, v31);
        swift_slowDealloc(v29, -1, -1);
        v32 = v30;
        v19 = v50;
        swift_slowDealloc(v32, -1, -1);
      }
      else
      {

        v24 = v23;
      }

      v40 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v54, 0, 0);
      sub_100221F28(v40, (uint64_t)&v55, &qword_1007BFF70);
      if (v57)
      {
        sub_100244418((uint64_t)&v55, (uint64_t)v52);
        sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
        sub_10023A834(v52, v53);
        sub_100560874(v19, v21, 1, *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
        sub_10022E75C(v52);
        if ((a1 & 0x100000000) == 0)
        {
LABEL_20:
          sub_100221F28(v40, (uint64_t)&v55, &qword_1007BFF70);
          if (v57)
          {
            sub_100244418((uint64_t)&v55, (uint64_t)v52);
            sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
            v41 = (char *)*sub_10023A834(v52, v53);
            v42 = v2;
            sub_100388748(v42, a1, 0, (char *)0xE000000000000000, v41, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

            sub_100225AB4(v19, v21);
            return sub_10022E75C(v52);
          }

          sub_100225AB4(v19, v21);
          return sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
        }
      }
      else
      {
        sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
        if ((a1 & 0x100000000) == 0)
          goto LABEL_20;
      }
      sub_1003FCE8C(0, 1);

      return sub_100225AB4(v19, v21);
    }
  }
  if (qword_1007B3FC0 != -1)
    goto LABEL_33;
LABEL_13:
  v33 = type metadata accessor for Logger(0);
  sub_100221DF8(v33, (uint64_t)qword_1007BD470);
  v34 = v7;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v37 = 138412290;
    if (v7)
    {
      v55 = v34;
      v39 = v34;
    }
    else
    {
      v55 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v37 + 4);
    *v38 = v7;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Could not convert response to data: %@", v37, 0xCu);
    v44 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v38, 1, v44);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {

    v35 = v34;
  }

  v45 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v54, 0, 0);
  sub_100221F28(v45, (uint64_t)&v55, &qword_1007BFF70);
  if (v57)
  {
    sub_100244418((uint64_t)&v55, (uint64_t)v52);
    sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
    v46 = (char *)*sub_10023A834(v52, v53);
    v47 = v2;
    sub_100388748(v47, 10, 0, (char *)0xE000000000000000, v46, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

    return sub_10022E75C(v52);
  }

  return sub_10000D0F0((uint64_t)&v55, &qword_1007BFF70);
}

uint64_t sub_100384C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[47] = a8;
  v8[48] = v14;
  v8[45] = a6;
  v8[46] = a7;
  v8[43] = a4;
  v8[44] = a5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v8[49] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[50] = v10;
  v8[51] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v8[52] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[53] = v12;
  v8[54] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100384D2C, 0, 0);
}

uint64_t sub_100384D2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;

  v1 = v0[43] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 36, 0, 0);
  sub_100221F28(v1, (uint64_t)(v0 + 20), &qword_1007BFF70);
  if (v0[23])
  {
    v2 = v0[44];
    sub_100244418((uint64_t)(v0 + 20), (uint64_t)(v0 + 25));
    sub_10000D0F0((uint64_t)(v0 + 20), &qword_1007BFF70);
    v3 = (_QWORD *)(*sub_10023A834(v0 + 25, v0[28])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 30, 0, 0);
    v4 = *sub_10023A834(v3, v3[3]);
    v5 = swift_task_alloc(32);
    v0[55] = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[56] = v6;
    *v6 = v0;
    v6[1] = sub_100384F80;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_100340AE8, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000D0F0((uint64_t)(v0 + 20), &qword_1007BFF70);
    if (qword_1007B3FC0 != -1)
      swift_once(&qword_1007B3FC0, sub_100381EE8);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007BD470);
    v0[58] = v9;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting ranging", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = (_QWORD *)swift_task_alloc(dword_1007BC464);
    v0[59] = v13;
    *v13 = v0;
    v13[1] = sub_100385408;
    return sub_100363C34(v0[46], v0[47], v0[48]);
  }
}

uint64_t sub_100384F80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 448);
  *(_QWORD *)(*v1 + 456) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003850FC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 440));
    v4 = sub_100384FEC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100384FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;

  sub_10022E75C(v0 + 25);
  if (qword_1007B3FC0 != -1)
    swift_once(&qword_1007B3FC0, sub_100381EE8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BD470);
  v0[58] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting ranging", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc(dword_1007BC464);
  v0[59] = v6;
  *v6 = v0;
  v6[1] = sub_100385408;
  return sub_100363C34(v0[46], v0[47], v0[48]);
}

uint64_t sub_1003850FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  sub_10022E75C((_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v0 + 336) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  v3 = swift_dynamicCast(v0 + 264, v0 + 336, v2, &type metadata for SFAuthenticationErrorMessage, 6);
  v4 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 408);
  v27 = *(_QWORD *)(v0 + 424);
  v28 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 400);
  v7 = *(void **)(v0 + 344);
  if ((v3 & 1) != 0)
  {
    v8 = *(_DWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 280);
    v11 = swift_allocObject(&unk_100725398, 48, 7);
    *(_QWORD *)(v0 + 56) = v11;
    v12 = (_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v11 + 16) = v7;
    *(_DWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v11 + 32) = v10;
    *(_QWORD *)(v11 + 40) = v9;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10025BBB4;
    *(_QWORD *)(v0 + 40) = &unk_1007253B0;
    *(_QWORD *)(v0 + 48) = sub_10038A410;
    v13 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v7);
    *(_QWORD *)(v0 + 312) = _swiftEmptyArrayStorage;
    v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_100273050();
    v17 = v0 + 312;
    v18 = v15;
    v19 = v6;
    v20 = v14;
  }
  else
  {
    v21 = swift_allocObject(&unk_100725348, 24, 7);
    *(_QWORD *)(v0 + 152) = v21;
    v12 = (_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 112) = _NSConcreteStackBlock;
    *(_QWORD *)(v21 + 16) = v7;
    *(_QWORD *)(v0 + 120) = 1107296256;
    *(_QWORD *)(v0 + 128) = sub_10025BBB4;
    *(_QWORD *)(v0 + 136) = &unk_100725360;
    *(_QWORD *)(v0 + 144) = sub_10038A3DC;
    v13 = _Block_copy((const void *)(v0 + 112));
    static DispatchQoS.unspecified.getter(v7);
    *(_QWORD *)(v0 + 320) = _swiftEmptyArrayStorage;
    v22 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_100273050();
    v17 = v0 + 320;
    v18 = v23;
    v19 = v6;
    v20 = v22;
  }
  dispatch thunk of SetAlgebra.init<A>(_:)(v17, v18, v16, v19, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v13);
  _Block_release(v13);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v28);
  swift_release(*v12);
  v24 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100385408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100385670;
  else
    v3 = sub_10038546C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10038546C(uint64_t a1)
{
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ranging started", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = v1[54];
  v6 = v1[51];
  v17 = v1[53];
  v18 = v1[52];
  v8 = v1[49];
  v7 = v1[50];
  v9 = (void *)v1[43];

  v10 = swift_allocObject(&unk_1007253E8, 24, 7);
  *(_QWORD *)(v10 + 16) = v9;
  v1[12] = sub_10038A44C;
  v1[13] = v10;
  v1[8] = _NSConcreteStackBlock;
  v1[9] = 1107296256;
  v1[10] = sub_10025BBB4;
  v1[11] = &unk_100725400;
  v11 = _Block_copy(v1 + 8);
  static DispatchQoS.unspecified.getter(v9);
  v1[41] = _swiftEmptyArrayStorage;
  v12 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_100008384((uint64_t *)&unk_1007B6410);
  v14 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 41, v13, v14, v8, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v6, v11);
  _Block_release(v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
  swift_release(v1[13]);
  v15 = v1[51];
  swift_task_dealloc(v1[54]);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_100385670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 336) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  v3 = swift_dynamicCast(v0 + 264, v0 + 336, v2, &type metadata for SFAuthenticationErrorMessage, 6);
  v4 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 408);
  v27 = *(_QWORD *)(v0 + 424);
  v28 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 400);
  v7 = *(void **)(v0 + 344);
  if ((v3 & 1) != 0)
  {
    v8 = *(_DWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 280);
    v11 = swift_allocObject(&unk_100725398, 48, 7);
    *(_QWORD *)(v0 + 56) = v11;
    v12 = (_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v11 + 16) = v7;
    *(_DWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v11 + 32) = v10;
    *(_QWORD *)(v11 + 40) = v9;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10025BBB4;
    *(_QWORD *)(v0 + 40) = &unk_1007253B0;
    *(_QWORD *)(v0 + 48) = sub_10038A410;
    v13 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v7);
    *(_QWORD *)(v0 + 312) = _swiftEmptyArrayStorage;
    v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_100273050();
    v17 = v0 + 312;
    v18 = v15;
    v19 = v6;
    v20 = v14;
  }
  else
  {
    v21 = swift_allocObject(&unk_100725348, 24, 7);
    *(_QWORD *)(v0 + 152) = v21;
    v12 = (_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 112) = _NSConcreteStackBlock;
    *(_QWORD *)(v21 + 16) = v7;
    *(_QWORD *)(v0 + 120) = 1107296256;
    *(_QWORD *)(v0 + 128) = sub_10025BBB4;
    *(_QWORD *)(v0 + 136) = &unk_100725360;
    *(_QWORD *)(v0 + 144) = sub_10038A3DC;
    v13 = _Block_copy((const void *)(v0 + 112));
    static DispatchQoS.unspecified.getter(v7);
    *(_QWORD *)(v0 + 320) = _swiftEmptyArrayStorage;
    v22 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_100273050();
    v17 = v0 + 320;
    v18 = v23;
    v19 = v6;
    v20 = v22;
  }
  dispatch thunk of SetAlgebra.init<A>(_:)(v17, v18, v16, v19, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v13);
  _Block_release(v13);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v28);
  swift_release(*v12);
  v24 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100385968(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD v13[5];
  char v14[24];
  _BYTE v15[24];
  uint64_t v16;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v9 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v14, 0, 0);
    sub_100221F28(v9, (uint64_t)v15, &qword_1007BFF70);
    if (v16)
    {
      sub_100244418((uint64_t)v15, (uint64_t)v13);
      sub_10000D0F0((uint64_t)v15, &qword_1007BFF70);
      v10 = (char *)*sub_10023A834(v13, v13[3]);
      v11 = a1;
      sub_100388748(v11, 10, 0, (char *)0xE000000000000000, v10, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

      return sub_10022E75C(v13);
    }
    else
    {
      return sub_10000D0F0((uint64_t)v15, &qword_1007BFF70);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100385B04(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  unsigned int v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t);
  void (*v14)(_QWORD *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  NSObject **v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  const char *v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(_QWORD *, _QWORD, uint64_t);
  id v63;
  id v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(_QWORD *, _QWORD, uint64_t);
  id v69;
  id v70;
  uint64_t v71;
  char *v72;
  char *v73;
  NSObject *v74;
  void *v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  NSString v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  NSObject *v91;
  char *v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  NSObject **v98;
  void (*v99)(_QWORD *, uint64_t);
  _QWORD *v100;
  char *v101;
  unsigned int v102;
  void (*v103)(_QWORD *, _QWORD, uint64_t);
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[24];
  NSObject *v110;
  _QWORD v111[2];
  uint64_t v112;

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v10 = v11;
  v12 = enum case for DispatchPredicate.onQueue(_:);
  v13 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104);
  v13(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  v104 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  v14 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if ((v11 & 1) != 0)
  {
    v101 = v6;
    if (qword_1007B3FC0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_3:
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100221DF8(v15, (uint64_t)qword_1007BD470);
  v17 = a1;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v103 = v13;
  v102 = v12;
  v105 = v16;
  if (v20)
  {
    v21 = swift_slowAlloc(12, -1);
    v99 = v14;
    v22 = (uint8_t *)v21;
    v98 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v22 = 138412290;
    v110 = v17;
    v23 = v17;
    v100 = v10;
    v24 = v7;
    v25 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v22 + 4);
    v26 = v98;
    *v98 = v17;

    v7 = v24;
    v10 = v100;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received authentication response: %@", v22, 0xCu);
    v27 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v26, 1, v27);
    swift_slowDealloc(v26, -1, -1);
    v28 = v22;
    v14 = v99;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {

    v18 = v17;
  }

  v29 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v30 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  v31 = v30 > 8;
  v32 = (1 << v30) & 0x18E;
  if (!v31 && v32 != 0)
  {
    v34 = v2;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v110 = v38;
      *(_DWORD *)v37 = 136315138;
      v39 = sub_1003FDAA0(*(_QWORD *)&v2[v29]);
      v41 = (const char *)v40;
      v106 = sub_100228BD8(v39, v40, (uint64_t *)&v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v37 + 4);

      swift_bridgeObjectRelease(v41);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Authentication type %s does not support handling this message", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      return;
    }

    goto LABEL_13;
  }
  sub_1003FD560();
  if ((-[NSObject hasErrorCode](v17, "hasErrorCode") & 1) != 0)
  {
    v42 = -[NSObject errorCode](v17, "errorCode");
    v43 = sub_100244304();
    v44 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v43, 0, 0);
    v46 = v44;
    *(_DWORD *)v45 = v42;
    v47 = 0xD00000000000001CLL;
    v48 = "Remote device threw an error";
LABEL_20:
    *(_QWORD *)(v45 + 8) = v47;
    *(_QWORD *)(v45 + 16) = (unint64_t)(v48 - 32) | 0x8000000000000000;
    swift_willThrow(v44);
    goto LABEL_22;
  }
  v49 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  if (!v49)
  {
    v55 = sub_100244304();
    v44 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v55, 0, 0);
    v46 = v44;
    *(_DWORD *)v45 = 10;
    v47 = 0xD000000000000013;
    v48 = "Missing aks session";
    goto LABEL_20;
  }
  swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession]);
  v50 = -[NSObject aksToken](v17, "aksToken");
  if (v50)
  {
    v51 = v50;
    v52 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v54 = v53;

    sub_10022E4A8((uint64_t)v52, v54);
    v100 = (_QWORD *)v54;
    sub_100524700((uint64_t)v52, v54);
    v74 = v17;
    v104 = v52;
    v76 = v75;
    v77 = (unint64_t)v100;
    sub_100225AB4((uint64_t)v52, (unint64_t)v100);
    v34 = v76;
    v78 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v76);
    v80 = v79;

    v81 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    v82 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    v83 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    *v81 = v78;
    v81[1] = v80;
    sub_100225AA0(v82, v83);
    v84 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v85 = String._bridgeToObjectiveC()();
    v86 = objc_msgSend(v84, "BOOLForKey:", v85);

    if ((v86 & 1) == 0 && (unint64_t)(*(_QWORD *)&v2[v29] - 1) < 4)
    {
      v88 = type metadata accessor for TaskPriority(0);
      v89 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v101, 1, 1, v88);
      v90 = (_QWORD *)swift_allocObject(&unk_100725258, 56, 7);
      v90[2] = 0;
      v90[3] = 0;
      v90[4] = v74;
      v90[5] = v49;
      v90[6] = v2;
      v91 = v74;
      v92 = v2;
      swift_retain(v49);
      v93 = sub_100252EC0(v89, (uint64_t)&unk_1007BD4E0, (uint64_t)v90);
      sub_100225AB4((uint64_t)v104, v77);
      swift_release(v93);
      swift_release(v49);
LABEL_13:

      return;
    }
    v94 = Logger.logObject.getter(v87);
    v95 = static os_log_type_t.default.getter(v94);
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v96 = 0;
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Skipping ranging", v96, 2u);
      swift_slowDealloc(v96, -1, -1);
    }

    LOBYTE(v110) = 1;
    sub_100386524(0x100000000);

    sub_100225AB4((uint64_t)v104, v77);
    swift_release(v49);
    return;
  }
  v56 = sub_100244304();
  v46 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v56, 0, 0);
  *(_DWORD *)v57 = 10;
  *(_QWORD *)(v57 + 8) = 0xD00000000000001FLL;
  *(_QWORD *)(v57 + 16) = 0x8000000100618500;
  swift_willThrow(v46);
  swift_release(v49);
LABEL_22:
  v106 = v46;
  swift_errorRetain(v46);
  v58 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(&v110, &v106, v58, &type metadata for SFAuthenticationErrorMessage, 6))
  {
    v59 = v110;
    v61 = v111[0];
    v60 = (char *)v111[1];
    v62 = v103;
    v63 = v104;
    *v10 = v104;
    v62(v10, v102, v7);
    v64 = v63;
    LOBYTE(v63) = _dispatchPreconditionTest(_:)(v10);
    v14(v10, v7);
    if ((v63 & 1) != 0)
    {
      v65 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v109, 0, 0);
      sub_100221F28(v65, (uint64_t)&v110, &qword_1007BFF70);
      if (v112)
      {
        sub_100244418((uint64_t)&v110, (uint64_t)&v106);
        sub_10000D0F0((uint64_t)&v110, &qword_1007BFF70);
        v66 = (char *)*sub_10023A834(&v106, v108);
        v67 = v2;
        sub_100388748(v67, v59, v61, v60, v66, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

        sub_10022E75C(&v106);
      }
      else
      {
        sub_10000D0F0((uint64_t)&v110, &qword_1007BFF70);
      }
      swift_errorRelease(v46);
      swift_bridgeObjectRelease(v60);
      return;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
  v68 = v103;
  v69 = v104;
  *v10 = v104;
  v68(v10, v102, v7);
  v70 = v69;
  LOBYTE(v69) = _dispatchPreconditionTest(_:)(v10);
  v14(v10, v7);
  if ((v69 & 1) == 0)
    goto LABEL_42;
  v71 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v109, 0, 0);
  sub_100221F28(v71, (uint64_t)&v110, &qword_1007BFF70);
  if (v112)
  {
    sub_100244418((uint64_t)&v110, (uint64_t)&v106);
    sub_10000D0F0((uint64_t)&v110, &qword_1007BFF70);
    v72 = (char *)*sub_10023A834(&v106, v108);
    v73 = v2;
    sub_100388748(v73, 10, 0, (char *)0xE000000000000000, v72, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

    sub_10022E75C(&v106);
  }
  else
  {
    sub_10000D0F0((uint64_t)&v110, &qword_1007BFF70);
  }
  swift_errorRelease(v46);
}

uint64_t sub_100386524(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  const char *v14;
  const char *v15;
  NSString v16;
  unint64_t v17;
  id v18;
  Class isa;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationToken), "init");
  v12 = v11;
  if (v11)
  {
    v29 = v5;
    objc_msgSend(v11, "setVersion:", 1);
    v13 = v12;
    UUID.uuidString.getter(v13);
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setSessionID:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    if (v17 >> 60 == 15)
    {
      v18 = v13;
      isa = 0;
    }
    else
    {
      v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
      v21 = v13;
      sub_100244404(v20, v17);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100225AA0(v20, v17);
    }
    objc_msgSend(v13, "setAksToken:", isa);

    v5 = v29;
  }
  if ((a1 & 0x100000000) == 0)
    objc_msgSend(v12, "setErrorCode:", a1);
  v22 = swift_allocObject(&unk_1007252D0, 37, 7);
  *(_QWORD *)(v22 + 16) = v12;
  *(_QWORD *)(v22 + 24) = v2;
  *(_DWORD *)(v22 + 32) = a1;
  *(_BYTE *)(v22 + 36) = BYTE4(a1) & 1;
  aBlock[4] = sub_100388694;
  v34 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_1007252E8;
  v23 = _Block_copy(aBlock);
  v24 = v12;
  static DispatchQoS.unspecified.getter(v2);
  v32 = _swiftEmptyArrayStorage;
  v25 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100008384((uint64_t *)&unk_1007B6410);
  v27 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v26, v27, v4, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return swift_release(v34);
}

uint64_t sub_100386828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v6[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v6[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[16] = v10;
  v6[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003868B4, 0, 0);
}

uint64_t sub_1003868B4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Class isa;
  id v7;
  const char *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = objc_msgSend(*(id *)(v0 + 72), "awdlInfo");
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  *(_QWORD *)(v0 + 144) = v3;
  *(_QWORD *)(v0 + 152) = v5;
  isa = Data._bridgeToObjectiveC()().super.isa;
  v7 = sub_1000C7E44(isa);

  if (!v7)
  {
    sub_100225AB4(v3, v5);
LABEL_5:
    v11 = sub_100244304();
    v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v11, 0, 0);
    *(_DWORD *)v13 = 1;
    *(_QWORD *)(v13 + 8) = 0xD00000000000001FLL;
    *(_QWORD *)(v13 + 16) = 0x8000000100618540;
    swift_willThrow(v12);
LABEL_6:
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 104);
    v17 = *(void **)(v0 + 88);
    v18 = swift_allocObject(&unk_100725280, 32, 7);
    *(_QWORD *)(v18 + 16) = v12;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v0 + 48) = sub_10038A614;
    *(_QWORD *)(v0 + 56) = v18;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10025BBB4;
    *(_QWORD *)(v0 + 40) = &unk_100725298;
    v19 = _Block_copy((const void *)(v0 + 16));
    swift_errorRetain(v12);
    static DispatchQoS.unspecified.getter(v17);
    *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
    v20 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_100008384((uint64_t *)&unk_1007B6410);
    v22 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 64, v21, v22, v16, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v15, v19);
    _Block_release(v19);
    swift_errorRelease(v12);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v14, v35);
    swift_release(*(_QWORD *)(v0 + 56));
    v23 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  *(_QWORD *)(v0 + 160) = v8;

  v9 = sub_100524914();
  *(_QWORD *)(v0 + 168) = v9;
  *(_QWORD *)(v0 + 176) = v10;
  v25 = (uint64_t)v9;
  v26 = v10;
  v27 = *(_QWORD *)(v0 + 88);
  sub_100386524(0x100000000);
  v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  *(_QWORD *)(v0 + 184) = v28;
  if (!v28)
  {
    v31 = sub_100244304();
    v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v31, 0, 0);
    *(_DWORD *)v32 = 10;
    *(_QWORD *)(v32 + 8) = 0xD000000000000012;
    *(_QWORD *)(v32 + 16) = 0x8000000100618560;
    swift_willThrow(v12);
    sub_100225AB4(v3, v5);
    swift_bridgeObjectRelease(v8);
    sub_100225AB4(v25, v26);
    goto LABEL_6;
  }
  v29 = dword_1007BC464;
  swift_retain(v28);
  v30 = (_QWORD *)swift_task_alloc(v29);
  *(_QWORD *)(v0 + 192) = v30;
  *v30 = v0;
  v30[1] = sub_100386C7C;
  return sub_100363C34((uint64_t)v8, v25, v26);
}

uint64_t sub_100386C7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(const char **)(v2 + 160));
  if (v0)
    v4 = sub_100386D54;
  else
    v4 = sub_100386CE8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100386CE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100225AB4(v2, v1);
  sub_100225AB4(v4, v3);
  v5 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100386D54()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0[22];
  v2 = v0[21];
  v4 = v0[18];
  v3 = v0[19];
  swift_release(v0[23]);
  sub_100225AB4(v2, v1);
  sub_100225AB4(v4, v3);
  v5 = v0[25];
  v6 = v0[17];
  v7 = v0[14];
  v18 = v0[16];
  v19 = v0[15];
  v8 = v0[12];
  v17 = v0[13];
  v9 = (void *)v0[11];
  v10 = swift_allocObject(&unk_100725280, 32, 7);
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  v0[6] = sub_10038A614;
  v0[7] = v10;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10025BBB4;
  v0[5] = &unk_100725298;
  v11 = _Block_copy(v0 + 2);
  swift_errorRetain(v5);
  static DispatchQoS.unspecified.getter(v9);
  v0[8] = _swiftEmptyArrayStorage;
  v12 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_100008384((uint64_t *)&unk_1007B6410);
  v14 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v13, v14, v8, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v7, v11);
  _Block_release(v11);
  swift_errorRelease(v5);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v6, v19);
  swift_release(v0[7]);
  v15 = v0[14];
  swift_task_dealloc(v0[17]);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_100386F2C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD v23[3];
  uint64_t v24;
  _BYTE v25[24];
  unsigned int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23[0] = a1;
  swift_errorRetain(a1);
  v8 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(&v26, v23, v8, &type metadata for SFAuthenticationErrorMessage, 6) & 1) == 0)
  {
    v17 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *v7 = v17;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    v18 = v17;
    LOBYTE(v17) = _dispatchPreconditionTest(_:)(v7);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    if ((v17 & 1) != 0)
    {
      v19 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v25, 0, 0);
      sub_100221F28(v19, (uint64_t)&v26, &qword_1007BFF70);
      if (v29)
      {
        sub_100244418((uint64_t)&v26, (uint64_t)v23);
        sub_10000D0F0((uint64_t)&v26, &qword_1007BFF70);
        v20 = (char *)*sub_10023A834(v23, v24);
        v21 = a2;
        sub_100388748(v21, 10, 0, (char *)0xE000000000000000, v20, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

        sub_10022E75C(v23);
      }
      else
      {
        sub_10000D0F0((uint64_t)&v26, &qword_1007BFF70);
      }
      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
  v9 = v26;
  v10 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v12 = v27;
  v11 = v28;
  *v7 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v13 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v14 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v25, 0, 0);
  sub_100221F28(v14, (uint64_t)&v26, &qword_1007BFF70);
  if (v29)
  {
    sub_100244418((uint64_t)&v26, (uint64_t)v23);
    sub_10000D0F0((uint64_t)&v26, &qword_1007BFF70);
    v15 = (char *)*sub_10023A834(v23, v24);
    v16 = a2;
    sub_100388748(v16, v9, v12, v11, v15, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

    sub_10022E75C(v23);
  }
  else
  {
    sub_10000D0F0((uint64_t)&v26, &qword_1007BFF70);
  }
  swift_bridgeObjectRelease(v11);
}

uint64_t sub_100387250(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject **v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v26[3];
  uint64_t v27;
  _BYTE v28[24];
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B3FC0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_3:
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007BD470);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v29 = v11;
    v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v14 + 4);
    *v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received confirmation: %@", v14, 0xCu);
    v17 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {

    v12 = v11;
  }

  sub_1003FD560();
  if (-[NSObject success](v11, "success"))
  {
    v18 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v28, 0, 0);
    sub_100221F28(v18, (uint64_t)&v29, &qword_1007BFF70);
    if (v31)
    {
      sub_100244418((uint64_t)&v29, (uint64_t)v26);
      sub_10000D0F0((uint64_t)&v29, &qword_1007BFF70);
      v19 = (char *)*sub_10023A834(v26, v27);
      v20 = v2;
      sub_1003EC29C(v20, v19);
LABEL_14:

      return sub_10022E75C(v26);
    }
  }
  else
  {
    if (-[NSObject hasErrorCode](v11, "hasErrorCode"))
      v21 = (uint64_t)-[NSObject errorCode](v11, "errorCode");
    else
      v21 = 10;
    v22 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v28, 0, 0);
    sub_100221F28(v22, (uint64_t)&v29, &qword_1007BFF70);
    if (v31)
    {
      sub_100244418((uint64_t)&v29, (uint64_t)v26);
      sub_10000D0F0((uint64_t)&v29, &qword_1007BFF70);
      v23 = (char *)*sub_10023A834(v26, v27);
      v20 = v2;
      sub_100388748(v20, v21, 0xD00000000000001CLL, (char *)0x8000000100618610, v23, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);
      goto LABEL_14;
    }
  }
  return sub_10000D0F0((uint64_t)&v29, &qword_1007BFF70);
}

uint64_t sub_10038762C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[4];
  char v25[24];
  uint64_t v26[5];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1007B3FC0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007BD470);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v26[0] = v12;
    v13 = type metadata accessor for UUID(0);
    v14 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    v17 = (const char *)v16;
    v23 = sub_100228BD8(v15, v16, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v11 + 4);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v18 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v25, 0, 0);
  sub_100221F28(v18, (uint64_t)v26, &qword_1007BFF70);
  if (!v26[3])
    return sub_10000D0F0((uint64_t)v26, &qword_1007BFF70);
  sub_100244418((uint64_t)v26, (uint64_t)&v23);
  sub_10000D0F0((uint64_t)v26, &qword_1007BFF70);
  v19 = (char *)*sub_10023A834(&v23, v24[2]);
  v20 = v8;
  sub_100388748(v20, 12, 0, (char *)0xE000000000000000, v19, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

  return sub_10022E75C(&v23);
}

uint64_t sub_10038796C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 *v39;
  uint64_t v40;
  __int128 *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD v56[5];
  char v57[24];
  char v58[24];
  char v59[24];
  __int128 v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 && (v10 = objc_msgSend(a1, "data")) != 0)
  {
    v11 = v10;
    v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v54 = v12;

    if (qword_1007B3FC0 == -1)
      goto LABEL_4;
  }
  else
  {
    v22 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *v9 = v22;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
    v23 = v22;
    v24 = _dispatchPreconditionTest(_:)(v9);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v24 & 1) != 0)
    {
      v25 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v56, 0, 0);
      sub_100221F28(v25, (uint64_t)&v62, &qword_1007BFF70);
      if (!v64)
        return sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
      sub_100244418((uint64_t)&v62, (uint64_t)&v60);
      sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
      v26 = (char *)*sub_10023A834(&v60, v61);
      v27 = a2;
      sub_100388748(v27, 10, 0xD000000000000025, (char *)0x8000000100618580, v26, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

      return sub_10022E75C(&v60);
    }
    __break(1u);
  }
  swift_once(&qword_1007B3FC0, sub_100381EE8);
LABEL_4:
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007BD470);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v53 = v6;
  v52 = v7;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = (_QWORD *)swift_slowAlloc(8, -1);
    v51 = a3;
    *(_DWORD *)v18 = 138412290;
    v62 = v14;
    v19 = v14;
    a3 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v18 + 4);
    v20 = v50;
    *v50 = a1;

    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Sending token: %@", v18, 0xCu);
    v21 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v20, 1, v21);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

  }
  v29 = v55;
  v30 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v59, 0, 0);
  sub_100221F28(v30, (uint64_t)&v60, &qword_1007B9E38);
  v31 = v54;
  if (!v61)
  {
    sub_10000D0F0((uint64_t)&v60, &qword_1007B9E38);
    v40 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v56, 0, 0);
    sub_100221F28(v40, (uint64_t)&v62, &qword_1007BFF70);
    if (v64)
    {
      sub_100244418((uint64_t)&v62, (uint64_t)&v60);
      sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
      sub_10023A834(&v60, v61);
      sub_100560874(v29, v31, 7, *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
      v39 = &v60;
      goto LABEL_16;
    }
    v41 = (__int128 *)&v62;
LABEL_19:
    sub_10000D0F0((uint64_t)v41, &qword_1007BFF70);
    goto LABEL_20;
  }
  sub_10026EE60(&v60, (uint64_t)&v62);
  v32 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v57, 0, 0);
  sub_100221F28(v32, (uint64_t)&v60, &qword_1007BFF70);
  if (!v61)
  {
    sub_10022E75C(&v62);
    v41 = &v60;
    goto LABEL_19;
  }
  sub_100244418((uint64_t)&v60, (uint64_t)v56);
  sub_10000D0F0((uint64_t)&v60, &qword_1007BFF70);
  v33 = sub_10023A834(v56, v56[3]);
  v34 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  v35 = *v33;
  v36 = v64;
  v37 = v65;
  v38 = sub_10023A834(&v62, v64);
  sub_10056A0EC(v29, v31, (uint64_t)v38, 7, v34, v35, v36, v37);
  sub_10022E75C(&v62);
  v39 = (__int128 *)v56;
LABEL_16:
  sub_10022E75C(v39);
LABEL_20:
  a2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 1;
  if ((a3 & 0x100000000) != 0)
  {
LABEL_25:
    sub_1003FCE8C(0, 1);
    return sub_100225AB4(v29, v31);
  }
  v42 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v9 = v42;
  v43 = v52;
  v44 = v53;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v52 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v53);
  v45 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v43 + 8))(v9, v44);
  if ((v42 & 1) != 0)
  {
    v46 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v58, 0, 0);
    sub_100221F28(v46, (uint64_t)&v62, &qword_1007BFF70);
    if (v64)
    {
      sub_100244418((uint64_t)&v62, (uint64_t)&v60);
      sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
      v47 = (char *)*sub_10023A834(&v60, v61);
      v48 = a2;
      sub_100388748(v48, a3, 0, (char *)0xE000000000000000, v47, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0, (uint64_t (*)(uint64_t))sub_10038A1A0);

      sub_10022E75C(&v60);
    }
    else
    {
      sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_10038803C()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate, &qword_1007C4330);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession));
  return sub_100225AA0(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken), *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8));
}

uint64_t sub_1003880D8()
{
  return type metadata accessor for SDAuthenticationKeySession(0);
}

uint64_t type metadata accessor for SDAuthenticationKeySession(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BD4C8;
  if (!qword_1007BD4C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationKeySession);
  return result;
}

void sub_10038811C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_1005D54D8;
    v4[3] = &unk_1005D54F0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 344);
  }
}

uint64_t sub_1003881A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10023A084(a1, v3, &qword_1007C4330);
  return swift_endAccess(v5);
}

void sub_100388208()
{
  sub_100381F78();
}

void sub_100388228(void *a1)
{
  sub_100383900(a1);
}

void sub_100388248(void *a1)
{
  sub_100385B04(a1);
}

void sub_100388268(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_1003882B0(a1, a2, (uint64_t (*)(uint64_t))sub_10026D818, (void (*)(_QWORD, _QWORD))sub_10026EE60);
}

void sub_10038828C(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_1003882B0(a1, a2, (uint64_t (*)(uint64_t))sub_10026D82C, (void (*)(_QWORD, _QWORD))sub_10026EE60);
}

void sub_1003882B0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(_QWORD, _QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  _BYTE v28[40];
  _QWORD v29[5];
  uint64_t *v30;

  v6 = v4;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(v7);
    v11 = 0;
    v12 = 72;
    while (1)
    {
      v13 = a1(v7 + v12 - 40);
      if (v5)
      {
LABEL_6:
        swift_bridgeObjectRelease(v7);
        return;
      }
      if ((v13 & 1) != 0)
        break;
      ++v11;
      v12 += 40;
      if (v8 == v11)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease(v7);
    if (!__OFADD__(v11, 1))
    {
      v14 = *(_QWORD *)(v7 + 16);
      if (v11 + 1 == v14)
        return;
      v15 = v11 + 1;
      v30 = v4;
      while (v15 < v14)
      {
        sub_100244418(v7 + v12, (uint64_t)v29);
        v16 = a1((uint64_t)v29);
        sub_10022E75C(v29);
        if ((v16 & 1) == 0)
        {
          if (v15 != v11)
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_30;
            v17 = v6;
            v18 = a4;
            v19 = *v17;
            v20 = *(_QWORD *)(*v17 + 16);
            if (v11 >= v20)
              goto LABEL_31;
            sub_100244418(v19 + 40 * v11 + 32, (uint64_t)v29);
            if (v15 >= v20)
              goto LABEL_32;
            sub_100244418(v19 + v12, (uint64_t)v28);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
            *v30 = v19;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v19 = a3(v19);
              *v30 = v19;
            }
            a4 = v18;
            if (v11 >= *(_QWORD *)(v19 + 16))
              goto LABEL_33;
            v22 = (_QWORD *)(v19 + 40 * v11 + 32);
            sub_10022E75C(v22);
            v18(v28, v22);
            v6 = v30;
            v23 = *v30;
            if (v15 >= *(_QWORD *)(*v30 + 16))
              goto LABEL_34;
            v24 = v23 + v12;
            sub_10022E75C((_QWORD *)(v23 + v12));
            a4(v29, v24);
          }
          if (__OFADD__(v11++, 1))
            goto LABEL_29;
        }
        v26 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_28;
        v7 = *v6;
        v14 = *(_QWORD *)(*v6 + 16);
        ++v15;
        v12 += 40;
        if (v26 == v14)
          return;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100388500(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_1003882B0(a1, a2, (uint64_t (*)(uint64_t))sub_10026D840, (void (*)(_QWORD, _QWORD))sub_10026EE60);
}

void sub_100388524(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_1003882B0(a1, a2, (uint64_t (*)(uint64_t))sub_10026D854, (void (*)(_QWORD, _QWORD))sub_10026EE60);
}

void sub_100388548(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5)
{
  sub_100388748(a1, a2, a3, a4, a5, type metadata accessor for SDAuthenticationPairingLockSession, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC);
}

uint64_t sub_100388590()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003885CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BD4DC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_100386828(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100388650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100388660(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100388668()
{
  uint64_t v0;

  return swift_deallocObject(v0, 37, 7);
}

uint64_t sub_100388694()
{
  uint64_t v0;

  return sub_10038796C(*(void **)(v0 + 16), *(char **)(v0 + 24), *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32));
}

void sub_1003886B8(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5)
{
  sub_100388748(a1, a2, a3, a4, a5, type metadata accessor for SDAuthenticationLockSession, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC);
}

void sub_100388700(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5)
{
  sub_100388748(a1, a2, a3, a4, a5, type metadata accessor for SDAuthenticationPairingKeySession, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC, (uint64_t (*)(uint64_t))sub_10038A5FC);
}

void sub_100388748(void *a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t), uint64_t (*a8)(uint64_t), uint64_t (*a9)(uint64_t), uint64_t (*a10)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char **v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _UNKNOWN **v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _UNKNOWN **v71;
  char v72;
  void (*v73)(_BYTE *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _UNKNOWN **v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  _UNKNOWN **v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  _UNKNOWN **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  char *v114;
  void (*v115)(_QWORD *);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(uint64_t, uint64_t, uint64_t);
  void (*v120)(_QWORD *);
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  _BYTE *v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  _UNKNOWN **v130;
  uint64_t v131;
  uint64_t v132;
  _UNKNOWN **v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _UNKNOWN **v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t);
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t (*v171)(uint64_t);
  os_log_type_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _DWORD *v179;
  uint64_t (*v180)(uint64_t);
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  __n128 v185;
  void (*v186)(_BYTE *, uint64_t, __n128);
  _BYTE *v187;
  uint64_t v188;
  uint64_t (*v189)(uint64_t);
  uint64_t v190;
  uint64_t (*v191)(uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  NSObject *v195;
  os_log_type_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t (*v204)(uint64_t);
  NSObject *v205;
  os_log_type_t v206;
  uint8_t *v207;
  Class isa;
  id v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t Strong;
  void *v219;
  uint64_t v220;
  _UNKNOWN **v221;
  NSUUID v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _UNKNOWN **v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t (**v231)(uint64_t);
  uint64_t v232;
  _UNKNOWN **v233;
  unint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  _BYTE v239[12];
  int v240;
  char **v241;
  _BYTE *v242;
  _BYTE *v243;
  _BYTE *v244;
  _BYTE *v245;
  _BYTE *v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  uint64_t v250;
  uint64_t (*v251)(uint64_t);
  uint64_t (*v252)(uint64_t);
  uint64_t (*v253)(uint64_t);
  uint64_t (*v254)(uint64_t);
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  _BYTE v259[16];
  uint64_t (*v260)(uint64_t);
  _QWORD v261[2];
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _BYTE v265[16];
  uint64_t v266[2];
  uint64_t v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  _UNKNOWN **v271;

  v251 = a8;
  v253 = a7;
  v255 = a4;
  v252 = (uint64_t (*)(uint64_t))a3;
  v14 = sub_100008384(&qword_1007B7280);
  v15 = __chkstk_darwin(v14);
  v243 = &v239[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v244 = &v239[-v17];
  v18 = sub_100008384((uint64_t *)&unk_1007BD990);
  __chkstk_darwin(v18);
  v242 = &v239[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v248 = type metadata accessor for Date(0);
  v247 = *(_QWORD *)(v248 - 8);
  __chkstk_darwin(v248);
  v246 = &v239[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for UUID(0);
  v257 = *(_QWORD *)(v21 - 8);
  v22 = __chkstk_darwin(v21);
  v245 = &v239[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __chkstk_darwin(v22);
  v249 = &v239[-v25];
  v26 = __chkstk_darwin(v24);
  v28 = &v239[-v27];
  __chkstk_darwin(v26);
  v30 = &v239[-v29];
  v31 = type metadata accessor for DispatchPredicate(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = &v239[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = a6(0);
  v271 = &off_100727F40;
  v256 = a5;
  v36 = *(void **)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v270 = v35;
  v269 = a1;
  *v34 = v36;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DispatchPredicate.onQueue(_:), v31);
  v37 = a1;
  v38 = v36;
  LOBYTE(v36) = _dispatchPreconditionTest(_:)(v34);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v34, v31);
  if ((v36 & 1) != 0)
  {
    a5 = (char *)sub_10056F370(a2, (uint64_t)v252, (uint64_t)v255);
    LODWORD(v32) = a2;
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v39 = type metadata accessor for Logger(0);
  v40 = sub_100221DF8(v39, (uint64_t)qword_1007C5FF8);
  sub_100244418((uint64_t)&v269, (uint64_t)v266);
  v41 = a5;
  v250 = v40;
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter(v42);
  v44 = v43;
  v45 = os_log_type_enabled(v42, v43);
  v255 = v41;
  LODWORD(v254) = v32;
  if (v45)
  {
    v46 = swift_slowAlloc(22, -1);
    v241 = (char **)swift_slowAlloc(8, -1);
    v252 = (uint64_t (*)(uint64_t))swift_slowAlloc(32, -1);
    v260 = v252;
    *(_DWORD *)v46 = 136315394;
    v48 = v267;
    v47 = v268;
    sub_10023A834(v266, v267);
    v49 = *(void (**)(uint64_t, uint64_t))(v47 + 32);
    v240 = v44;
    v49(v48, v47);
    v50 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v51 = dispatch thunk of CustomStringConvertible.description.getter(v21, v50);
    v53 = v52;
    (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v30, v21);
    v264 = sub_100228BD8(v51, v53, (uint64_t *)&v260);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265, v46 + 4);
    swift_bridgeObjectRelease(v53);
    sub_10022E75C(v266);
    *(_WORD *)(v46 + 12) = 2112;
    v264 = (uint64_t)v41;
    v54 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265, v46 + 14);
    v55 = v241;
    *v241 = v41;

    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v240, "Session %s failed with error: %@", (uint8_t *)v46, 0x16u);
    v56 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v55, 1, v56);
    swift_slowDealloc(v55, -1, -1);
    v57 = (uint64_t)v252;
    swift_arrayDestroy(v252, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v46, -1, -1);

  }
  else
  {
    sub_10022E75C(v266);

  }
  v58 = v256;
  v59 = v270;
  v60 = v271;
  sub_10023A834(&v269, v270);
  v252 = (uint64_t (*)(uint64_t))((uint64_t (*)(uint64_t, _UNKNOWN **))v60[5])(v59, v60);
  v61 = &v58[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
  swift_beginAccess(&v58[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions], &v264, 0, 0);
  v63 = *(_QWORD *)v61;
  v64 = *(_QWORD *)(*(_QWORD *)v61 + 16);
  if (v64)
  {
    v65 = (_QWORD *)(v63 + 32);
    swift_bridgeObjectRetain(*(_QWORD *)v61);
    v66 = v64 - 1;
    do
    {
      v67 = v66;
      v68 = v65[3];
      v69 = v65[4];
      sub_10023A834(v65, v68);
      (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v69 + 8) + 8) + 32))(v68);
      v70 = v270;
      v71 = v271;
      sub_10023A834(&v269, v270);
      ((void (*)(uint64_t, _UNKNOWN **))v71[4])(v70, v71);
      v72 = static UUID.== infix(_:_:)(v30, v28);
      v73 = *(void (**)(_BYTE *, uint64_t))(v257 + 8);
      v73(v28, v21);
      v73(v30, v21);
      if ((v72 & 1) != 0)
        break;
      v66 = v67 - 1;
      v65 += 5;
    }
    while (v67);
    swift_bridgeObjectRelease(v63);
  }
  else
  {
    v72 = 0;
  }
  __chkstk_darwin(v62);
  *(_QWORD *)&v239[-16] = &v269;
  swift_beginAccess(v61, v266, 33, 0);
  sub_1003882B0(v253, (uint64_t)&v239[-32], (uint64_t (*)(uint64_t))sub_10026D854, (void (*)(_QWORD, _QWORD))sub_10026EE60);
  v75 = *(_QWORD *)(*(_QWORD *)v61 + 16);
  if (v75 < v74)
  {
    __break(1u);
    goto LABEL_98;
  }
  sub_100475304(v74, v75);
  v76 = swift_endAccess(v266);
  __chkstk_darwin(v76);
  *(_QWORD *)&v239[-16] = &v269;
  v77 = v256;
  v78 = &v256[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
  swift_beginAccess(&v256[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions], v266, 33, 0);
  sub_1003882B0(v251, (uint64_t)&v239[-32], (uint64_t (*)(uint64_t))sub_10026D840, (void (*)(_QWORD, _QWORD))sub_10026EE60);
  v80 = *(_QWORD *)(*(_QWORD *)v78 + 16);
  if (v80 < v79)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  sub_100475318(v79, v80);
  v81 = swift_endAccess(v266);
  __chkstk_darwin(v81);
  *(_QWORD *)&v239[-16] = &v269;
  v82 = &v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions], v266, 33, 0);
  sub_1003882B0(a9, (uint64_t)&v239[-32], (uint64_t (*)(uint64_t))sub_10026D82C, (void (*)(_QWORD, _QWORD))sub_10026EE60);
  v84 = *(_QWORD *)(*(_QWORD *)v82 + 16);
  if (v84 < v83)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  sub_10047532C(v83, v84);
  v85 = swift_endAccess(v266);
  __chkstk_darwin(v85);
  *(_QWORD *)&v239[-16] = &v269;
  v86 = &v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions], v266, 33, 0);
  sub_1003882B0(a10, (uint64_t)&v239[-32], (uint64_t (*)(uint64_t))sub_10026D818, (void (*)(_QWORD, _QWORD))sub_10026EE60);
  v88 = *(_QWORD *)(*(_QWORD *)v86 + 16);
  if (v88 >= v87)
  {
    sub_100475340(v87, v88);
    swift_endAccess(v266);
    v89 = v270;
    v90 = v271;
    sub_10023A834(&v269, v270);
    ((void (*)(uint64_t, _UNKNOWN **))v90[11])(v89, v90);
    v91 = (int)v254;
    v92 = (uint64_t)v252;
    if ((_DWORD)v254 == 33)
    {
      v93 = v270;
      v94 = v271;
      sub_10023A834(&v269, v270);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v94[8])(v266, v93, v94);
      v95 = v267;
      if (v267)
      {
        v96 = v268;
        sub_10023A834(v266, v267);
        v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v95, v96);
        v99 = v98;
        v100 = sub_10022E75C(v266);
        if (v99)
        {
          v101 = sub_1003FDA90(v92);
          UUID.init()(v101);
          sub_10054E404(v101, v97, v99, (uint64_t)v30);
          v102 = swift_bridgeObjectRelease(v99);
          (*(void (**)(_BYTE *, uint64_t, __n128))(v257 + 8))(v30, v21, v102);
          if (v92 == 8)
            goto LABEL_20;
LABEL_33:
          if (v92 == 5)
          {
            if (v91 != 10)
              goto LABEL_76;
            v144 = v270;
            v145 = v271;
            sub_10023A834(&v269, v270);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v145[8])(v266, v144, v145);
            v146 = v267;
            if (v267)
            {
              v147 = v268;
              sub_10023A834(v266, v267);
              v148 = (*(uint64_t (**)(uint64_t, uint64_t))(v147 + 8))(v146, v147);
              v150 = v149;
              sub_10022E75C(v266);
              if (v150)
              {
                swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID], v266, 33, 0);
                v151 = v242;
                sub_10026AAC0(v148, v150, (uint64_t)v242);
                swift_endAccess(v266);
                sub_10000D0F0((uint64_t)v151, (uint64_t *)&unk_1007BD990);
                swift_bridgeObjectRelease(v150);
                goto LABEL_76;
              }
            }
            else
            {
              sub_10000D0F0((uint64_t)v266, &qword_1007B9E38);
            }
            v194 = sub_100244418((uint64_t)&v269, (uint64_t)v266);
            v195 = Logger.logObject.getter(v194);
            v196 = static os_log_type_t.error.getter(v195);
            if (os_log_type_enabled(v195, v196))
            {
              v197 = swift_slowAlloc(12, -1);
              v254 = (uint64_t (*)(uint64_t))swift_slowAlloc(32, -1);
              v260 = v254;
              *(_DWORD *)v197 = 136315138;
              v253 = (uint64_t (*)(uint64_t))(v197 + 4);
              v198 = v267;
              v199 = v268;
              sub_10023A834(v266, v267);
              (*(void (**)(uint64_t, uint64_t))(v199 + 32))(v198, v199);
              v200 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v201 = dispatch thunk of CustomStringConvertible.description.getter(v21, v200);
              v203 = v202;
              (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v30, v21);
              v258 = sub_100228BD8(v201, v203, (uint64_t *)&v260);
              v77 = v256;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, v259, v253);
              swift_bridgeObjectRelease(v203);
              sub_10022E75C(v266);
              _os_log_impl((void *)&_mh_execute_header, v195, v196, "Could not find peer device for %s", (uint8_t *)v197, 0xCu);
              v204 = v254;
              swift_arrayDestroy(v254, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v204, -1, -1);
              swift_slowDealloc(v197, -1, -1);
            }
            else
            {
              sub_10022E75C(v266);
            }

LABEL_76:
            sub_100244418((uint64_t)&v269, (uint64_t)v266);
            v215 = sub_100008384(&qword_1007B53E8);
            v216 = sub_100008384((uint64_t *)&unk_1007BB690);
            if (swift_dynamicCast(&v260, v266, v215, v216, 6))
            {
              sub_10022E75C(&v260);
              Strong = swift_unknownObjectWeakLoadStrong(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v217);
              if (!Strong)
                goto LABEL_83;
              v219 = (void *)Strong;
              v220 = v270;
              v221 = v271;
              sub_10023A834(&v269, v270);
              ((void (*)(uint64_t, _UNKNOWN **))v221[4])(v220, v221);
              v222.super.isa = UUID._bridgeToObjectiveC()().super.isa;
              (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v30, v21);
              objc_msgSend(v219, "manager:didFailAuthenticationFor:error:", v77, v222.super.isa, v255);
            }
            else
            {
              sub_100244418((uint64_t)&v269, (uint64_t)v266);
              v223 = sub_100008384((uint64_t *)&unk_1007BB680);
              if ((swift_dynamicCast(&v260, v266, v215, v223, 6) & 1) == 0
                || (sub_10022E75C(&v260),
                    (v225 = swift_unknownObjectWeakLoadStrong(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v224)) == 0))
              {
LABEL_83:
                sub_100244418((uint64_t)&v269, (uint64_t)v266);
                if ((v72 & 1) != 0)
                {
                  v228 = v267;
                  v229 = v268;
                  sub_10023A834(v266, v267);
                  v230 = (*(uint64_t (**)(uint64_t, uint64_t))(v229 + 40))(v228, v229);
                  if (v230 > 8 || ((1 << v230) & 0x18E) == 0)
                  {
                    sub_10022E75C(v266);
                    sub_100244418((uint64_t)&v269, (uint64_t)&v260);

                    sub_10022E75C(&v260);
                    goto LABEL_92;
                  }
                  v231 = (uint64_t (**)(uint64_t))v266;
                }
                else
                {
                  sub_10022E75C(v266);
                  sub_100244418((uint64_t)&v269, (uint64_t)&v260);
                  v236 = v262;
                  v237 = v263;
                  sub_10023A834(&v260, v262);
                  v238 = (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 40))(v236, v237);
                  if (v238 <= 8 && ((1 << v238) & 0x18E) != 0)
                  {
                    sub_10022E75C(&v260);
                    goto LABEL_91;
                  }
                  v231 = &v260;
                }
                sub_10022E75C(v231);
                v232 = v270;
                v233 = v271;
                sub_10023A834(&v269, v270);
                v234 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v233[5])(v232, v233);
                v235 = sub_1003FD808(v234);
                sub_1004A9FB8(v235);
LABEL_91:

LABEL_92:
                sub_10022E75C(&v269);
                return;
              }
              v219 = (void *)v225;
              v226 = v270;
              v227 = v271;
              sub_10023A834(&v269, v270);
              ((void (*)(uint64_t, _UNKNOWN **))v227[4])(v226, v227);
              v222.super.isa = UUID._bridgeToObjectiveC()().super.isa;
              (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v30, v21);
              objc_msgSend(v219, "manager:didFailToEnableDeviceFor:error:", v77, v222.super.isa, v255);
            }

            swift_unknownObjectRelease(v219);
            goto LABEL_83;
          }
          if (v92 != 4)
            goto LABEL_76;
          if (v91 == 22)
          {
            sub_100554E34();
            v129 = v270;
            v130 = v271;
            sub_10023A834(&v269, v270);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v130[8])(v266, v129, v130);
            v131 = (uint64_t)&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice];
            swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice], &v260, 33, 0);
            sub_10023A084((uint64_t)v266, v131, &qword_1007B9E38);
            swift_endAccess(&v260);
          }
          v132 = v270;
          v133 = v271;
          sub_10023A834(&v269, v270);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v133[8])(v266, v132, v133);
          v134 = v267;
          if (v267)
          {
            v135 = v268;
            sub_10023A834(v266, v267);
            v136 = (*(uint64_t (**)(uint64_t, uint64_t))(v135 + 8))(v134, v135);
            v138 = v137;
            v139 = sub_10022E75C(v266);
            if (v138)
            {
              if (v91 == 9 || v91 == 24)
              {
                v141 = *(_QWORD *)&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator];
                v142 = *(_QWORD *)(v141
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
                if (v142)
                {
                  swift_beginAccess(v142 + 40, v266, 33, 0);
                  swift_retain(v141);
                  swift_retain(v142);
                  swift_bridgeObjectRetain(v138);
                  sub_10045DF5C((uint64_t *)&v260, v136, v138);
                  swift_endAccess(v266);
                  v143 = v261[0];
LABEL_72:
                  swift_release(v141);
                  swift_bridgeObjectRelease(v138);
                  swift_release(v142);
                  v213 = v143;
LABEL_74:
                  v140 = swift_bridgeObjectRelease(v213);
                  goto LABEL_75;
                }
              }
              else
              {
                v141 = *(_QWORD *)&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator];
                v142 = *(_QWORD *)(v141
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
                if (v142)
                {
                  swift_beginAccess(v142 + 40, v266, 33, 0);
                  swift_retain(v141);
                  swift_retain(v142);
                  sub_100471DBC(v136, v138);
                  v143 = v212;
                  swift_endAccess(v266);
                  goto LABEL_72;
                }
              }
              v213 = v138;
              goto LABEL_74;
            }
          }
          else
          {
            v139 = sub_10000D0F0((uint64_t)v266, &qword_1007B9E38);
          }
LABEL_75:
          v214 = (uint64_t)v246;
          static Date.distantPast.getter(v139, v140);
          sub_10054B8BC(v214);
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v214, v248);
          goto LABEL_76;
        }
      }
      else
      {
        v100 = sub_10000D0F0((uint64_t)v266, &qword_1007B9E38);
      }
      v126 = Logger.logObject.getter(v100);
      v127 = static os_log_type_t.error.getter(v126);
      if (!os_log_type_enabled(v126, v127))
      {

        if (v92 != 8)
          goto LABEL_33;
LABEL_20:
        v103 = v270;
        v104 = v271;
        sub_10023A834(&v269, v270);
        ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v104[8])(v266, v103, v104);
        v105 = v267;
        if (v267)
        {
          v106 = v268;
          sub_10023A834(v266, v267);
          v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 8))(v105, v106);
          v109 = v108;
          v110 = sub_10022E75C(v266);
          if (v109)
          {
            v111 = Logger.logObject.getter(v110);
            v112 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v111, v112))
            {
              v113 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v113 = 0;
              _os_log_impl((void *)&_mh_execute_header, v111, v112, "Registration failed, clearing registration date", v113, 2u);
              swift_slowDealloc(v113, -1, -1);
            }

            v114 = &v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID];
            swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID], &v260, 33, 0);
            swift_bridgeObjectRetain(v109);
            v115 = sub_1004590EC(v266, v107, v109);
            v117 = v116;
            v118 = type metadata accessor for RegistrationState(0);
            v119 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48);
            if (!v119(v117, 1, v118))
              *(_BYTE *)(v117 + *(int *)(v118 + 20)) = 0;
            ((void (*)(uint64_t *, _QWORD))v115)(v266, 0);
            swift_endAccess(&v260);
            swift_bridgeObjectRelease(v109);
            swift_beginAccess(v114, &v260, 33, 0);
            swift_bridgeObjectRetain(v109);
            v120 = sub_1004590EC(v266, v107, v109);
            v122 = v121;
            v123 = v119(v121, 1, v118);
            v77 = v256;
            v124 = v249;
            if (!v123)
            {
              sub_10000D0F0(v122, &qword_1007C4330);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56))(v122, 1, 1, v248);
            }
            ((void (*)(uint64_t *, _QWORD))v120)(v266, 0);
            swift_endAccess(&v260);
            swift_bridgeObjectRelease_n(v109, 2);
            v125 = v257;
            goto LABEL_55;
          }
        }
        else
        {
          sub_10000D0F0((uint64_t)v266, &qword_1007B9E38);
        }
        v152 = sub_100244418((uint64_t)&v269, (uint64_t)v266);
        v153 = Logger.logObject.getter(v152);
        v154 = static os_log_type_t.error.getter(v153);
        if (os_log_type_enabled(v153, v154))
        {
          v155 = (uint8_t *)swift_slowAlloc(12, -1);
          v253 = (uint64_t (*)(uint64_t))swift_slowAlloc(32, -1);
          v260 = v253;
          *(_DWORD *)v155 = 136315138;
          v252 = (uint64_t (*)(uint64_t))(v155 + 4);
          v156 = v267;
          v157 = v268;
          sub_10023A834(v266, v267);
          (*(void (**)(uint64_t, uint64_t))(v157 + 32))(v156, v157);
          v158 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v159 = dispatch thunk of CustomStringConvertible.description.getter(v21, v158);
          v161 = v160;
          v162 = v257;
          (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v30, v21);
          v258 = sub_100228BD8(v159, v161, (uint64_t *)&v260);
          v77 = v256;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, v259, v252);
          v125 = v162;
          swift_bridgeObjectRelease(v161);
          sub_10022E75C(v266);
          _os_log_impl((void *)&_mh_execute_header, v153, v154, "Could not find peer device for %s", v155, 0xCu);
          v163 = v253;
          swift_arrayDestroy(v253, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v163, -1, -1);
          swift_slowDealloc(v155, -1, -1);

        }
        else
        {
          sub_10022E75C(v266);

          v125 = v257;
        }
        v124 = v249;
LABEL_55:
        v164 = v245;
        v165 = (uint64_t)v244;
        v166 = (uint64_t)&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v258, 0, 0);
        sub_100221F28(v166, v165, &qword_1007B7280);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v165, 1, v21) == 1)
        {
          sub_10000D0F0(v165, &qword_1007B7280);
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v125 + 32))(v124, v165, v21);
          v168 = swift_unknownObjectWeakLoadStrong(&v77[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v167);
          if (v168)
          {
            v169 = (void *)v168;
            v170 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v125 + 16))(v164, v124, v21);
            v171 = (uint64_t (*)(uint64_t))Logger.logObject.getter(v170);
            v172 = static os_log_type_t.default.getter();
            v173 = v172;
            if (os_log_type_enabled((os_log_t)v171, v172))
            {
              v174 = swift_slowAlloc(22, -1);
              v253 = (uint64_t (*)(uint64_t))swift_slowAlloc(8, -1);
              v252 = (uint64_t (*)(uint64_t))swift_slowAlloc(32, -1);
              v266[0] = (uint64_t)v252;
              *(_DWORD *)v174 = 138412546;
              v251 = v171;
              type metadata accessor for SFAuthenticationError(0);
              LODWORD(v250) = v173;
              v176 = v175;
              v177 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
              v178 = swift_allocError(v176, v177, 0, 0);
              *v179 = (_DWORD)v254;
              v180 = (uint64_t (*)(uint64_t))_swift_stdlib_bridgeErrorToNSError(v178);
              v260 = v180;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, v261, v174 + 4);
              *(_QWORD *)v253 = v180;
              *(_WORD *)(v174 + 12) = 2080;
              v181 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v182 = dispatch thunk of CustomStringConvertible.description.getter(v21, v181);
              v184 = v183;
              v260 = (uint64_t (*)(uint64_t))sub_100228BD8(v182, v183, v266);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, v261, v174 + 14);
              v185 = swift_bridgeObjectRelease(v184);
              v186 = *(void (**)(_BYTE *, uint64_t, __n128))(v257 + 8);
              v187 = v164;
              v188 = v254;
              v186(v187, v21, v185);
              v189 = v251;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v251, (os_log_type_t)v250, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v174, 0x16u);
              v190 = sub_100008384(&qword_1007B4C30);
              v191 = v253;
              swift_arrayDestroy(v253, 1, v190);
              swift_slowDealloc(v191, -1, -1);
              v192 = (uint64_t)v252;
              swift_arrayDestroy(v252, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v192, -1, -1);
              v193 = v174;
              v124 = v249;
              swift_slowDealloc(v193, -1, -1);

            }
            else
            {
              v186 = *(void (**)(_BYTE *, uint64_t, __n128))(v257 + 8);
              ((void (*)(_BYTE *, uint64_t))v186)(v164, v21);

              v188 = v254;
            }
            isa = UUID._bridgeToObjectiveC()().super.isa;
            v209 = sub_10056F370(v188, 0, 0xE000000000000000);
            v210 = v256;
            objc_msgSend(v169, "manager:didFailAuthenticationFor:error:", v256, isa, v209);
            swift_unknownObjectRelease(v169);

            ((void (*)(_BYTE *, uint64_t))v186)(v124, v21);
            v77 = v210;
            v211 = (uint64_t)v243;
            (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v257 + 56))(v243, 1, 1, v21);
            swift_beginAccess(v166, v266, 33, 0);
            sub_10023A084(v211, v166, &qword_1007B7280);
            swift_endAccess(v266);
          }
          else
          {
            v205 = Logger.logObject.getter(0);
            v206 = static os_log_type_t.error.getter(v205);
            if (os_log_type_enabled(v205, v206))
            {
              v207 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v207 = 0;
              _os_log_impl((void *)&_mh_execute_header, v205, v206, "Have session that is waiting but no delegate to report it to. This is bad.", v207, 2u);
              swift_slowDealloc(v207, -1, -1);
            }

            (*(void (**)(_BYTE *, uint64_t))(v257 + 8))(v124, v21);
          }
        }
        goto LABEL_76;
      }
      v128 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v128 = 0;
      _os_log_impl((void *)&_mh_execute_header, v126, v127, "Got notEnabled error but coudln't determine who to disable pairing with", v128, 2u);
      swift_slowDealloc(v128, -1, -1);

    }
    if (v92 != 8)
      goto LABEL_33;
    goto LABEL_20;
  }
LABEL_100:
  __break(1u);
}

uint64_t sub_10038A1A0(_QWORD *a1)
{
  uint64_t v1;

  return sub_100565AC8(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_10038A1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AuthenticationSecurityRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v9 = v0 + *(int *)(v1 + 20) + v4;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease(*(const char **)(v0 + v7));
  sub_100225AB4(*(_QWORD *)(v0 + v8), *(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v5);
}

uint64_t sub_10038A290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038A2D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = *(_QWORD *)((char *)v1 + v7);
  v13 = (uint64_t)v1 + v5;
  v14 = *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_1007BD4EC);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10000D098;
  return sub_100384C98(a1, v8, v9, v10, v13, v11, v12, v14);
}

uint64_t sub_10038A3B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038A3DC()
{
  uint64_t v0;

  return sub_100385968(*(char **)(v0 + 16));
}

uint64_t sub_10038A3E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10038A410()
{
  uint64_t v0;

  return sub_100384534(*(unsigned int *)(v0 + 24));
}

uint64_t sub_10038A44C()
{
  return sub_100384534(0x100000000);
}

uint64_t sub_10038A484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for AuthenticationSecurityRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + *(int *)(v1 + 20) + v4;
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10038A518(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BD4FC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D12C;
  return sub_1003823DC(a1, v5, v6, v7, v8);
}

void sub_10038A5AC()
{
  uint64_t v0;

  sub_100382C2C(*(char **)(v0 + 16));
}

uint64_t sub_10038A5B8()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10038A5E4()
{
  uint64_t v0;

  sub_100386F2C(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10038A5FC(_QWORD *a1)
{
  return sub_10038A1A0(a1) & 1;
}

void sub_10038A654(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_10038A69C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned __int8 v6;

  if (((unint64_t)v6 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x10038A9D4);
  }
  if ((v6 & 7) == 0)
    __asm { BR              X9 }
  v1 = sub_100008384(&qword_1007B7318);
  v2 = sub_10038C8E8();
  v3 = swift_allocError(v1, v2, 0, 0);
  swift_willThrow(v3);
  return v0;
}

void sub_10038A9FC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

void sub_10038ABD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[6];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[7];

  v20[2] = a3;
  v21 = sub_100008384(&qword_1007BD538);
  __chkstk_darwin(v21);
  v5 = type metadata accessor for SHA256(0);
  v20[5] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for SHA256Digest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  v23 = v7;
  __chkstk_darwin(v6);
  v8 = type metadata accessor for String.Encoding(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v10);
  v20[3] = a1;
  v20[4] = a2;
  v13 = String.data(using:allowLossyConversion:)(v12, 0, a1, a2);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v24[5] = v13;
  v24[6] = v15;
  v16 = sub_100008384(&qword_1007B5220);
  Optional.unwrap(_:file:line:)(v24, sub_10038B158, 0, "DaemoniOSLibrary/SDAirDropHashUtilities.swift", 45, 2, 14, v16);
  sub_100225AA0(v13, v15);
  v17 = v24[1];
  v18 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v5, v18);
  v19 = (char *)&loc_10038ADC4 + *((int *)qword_10038B148 + (v17 >> 62));
  v20[1] = v17;
  __asm { BR              X10 }
}

void sub_10038ADDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v8 - 144) = v2;
  *(_WORD *)(v8 - 136) = v3;
  *(_BYTE *)(v8 - 134) = BYTE2(v3);
  *(_BYTE *)(v8 - 133) = BYTE3(v3);
  *(_BYTE *)(v8 - 132) = BYTE4(v3);
  *(_BYTE *)(v8 - 131) = BYTE5(v3);
  dispatch thunk of HashFunction.update(bufferPointer:)(v8 - 144, v8 - 144 + BYTE6(v3), v1, v4);
  sub_100225AB4(v2, v3);
  ((void (*)(uint64_t, uint64_t))dispatch thunk of HashFunction.finalize())(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 184) + 8))(v6, v1);
  v9 = *(_QWORD *)(v8 - 168);
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 160) + 16);
  v10(v7, v5, v9);
  *(_QWORD *)((char *)v7 + *(int *)(*(_QWORD *)(v8 - 176) + 36)) = 3;
  v11 = sub_1005016D0(v7);
  sub_10038C768((uint64_t)v7);
  if (*(_QWORD *)(v11 + 16) != 3)
  {
    __break(1u);
    JUMPOUT(0x10038B0F4);
  }
  *(_QWORD *)(v8 - 176) = v2;
  v12 = sub_10038C7A8(v11);
  swift_release(v11);
  if (v0)
  {
    ((void (*)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))swift_unexpectedError)(v0, "DaemoniOSLibrary/SDAirDropHashUtilities.swift", 45, 1, 25);
    __break(1u);
    sub_100225AB4((uint64_t)v10, v2);
    ((void (*)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))swift_unexpectedError)(v0, "DaemoniOSLibrary/SDAirDropHashUtilities.swift", 45, 1, 28);
    __break(1u);
    JUMPOUT(0x10038B148);
  }
  *(_QWORD *)(v8 - 120) = v9;
  v13 = sub_100220D78(&qword_1007BD540, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest, (uint64_t)&protocol conformance descriptor for SHA256Digest);
  *(_QWORD *)(v8 - 112) = v13;
  v14 = sub_100244348((_QWORD *)(v8 - 144));
  v10(v14, v5, v9);
  sub_10023A834((_QWORD *)(v8 - 144), *(_QWORD *)(v8 - 120));
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)((_QWORD *)(v8 - 104), sub_1004744BC, 0, &type metadata for Data._Representation, v9, v13);
  v16 = *(_QWORD *)(v8 - 104);
  v15 = *(_QWORD *)(v8 - 96);
  sub_10022E75C((_QWORD *)(v8 - 144));
  sub_10038C7F8(v16, v15);
  v21 = v17;
  v22 = v18;
  v23 = v19;
  v24 = v20;
  sub_100225AB4(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 160) + 8))(v5, v9);
  sub_100225AB4(*(_QWORD *)(v8 - 176), *(_QWORD *)(v8 - 216));
  swift_bridgeObjectRetain(*(const char **)(v8 - 192));
  v25 = *(_QWORD *)(v8 - 208);
  *(_QWORD *)v25 = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v25 + 8) = v26;
  *(_QWORD *)(v25 + 16) = v21;
  *(_QWORD *)(v25 + 24) = v22;
  *(_QWORD *)(v25 + 32) = v23;
  *(_QWORD *)(v25 + 40) = v24;
  *(_BYTE *)(v25 + 50) = BYTE2(v12);
  *(_WORD *)(v25 + 48) = v12;
  *(_BYTE *)(v25 + 51) = 0;
}

unint64_t sub_10038B158()
{
  return 0xD00000000000001FLL;
}

void sub_10038B174(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_10038B1B8()
{
  unint64_t v0;
  uint64_t v1;

  if (BYTE6(v0) == 3)
  {
    sub_10022E4A8(v1, v0);
    sub_10042CE60(2, v1, v0);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x10038B364);
}

uint64_t LongHash.init<A>(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;

  v4 = v3;
  v8 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  v11 = *(_QWORD *)(a3 + 8);
  v12 = dispatch thunk of Collection.count.getter(a2, *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8));
  v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  result = v13(v10, a2);
  if (v12 != 32)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v15 = sub_10038B4F4();
  v16 = sub_10038B538();
  result = sub_10027CDF4(a1, 8, (uint64_t)&type metadata for UInt8, &type metadata for UInt64, a2, v15, v16, v11);
  if (v3)
  {
    v13((char *)a1, a2);
    return v4;
  }
  v17 = *(_QWORD *)(result + 16);
  if (!v17)
    goto LABEL_11;
  if (v17 == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v17 < 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v17 != 3)
  {
    v4 = *(_QWORD *)(result + 32);
    v18 = swift_bridgeObjectRelease((const char *)result);
    ((void (*)(uint64_t, uint64_t, __n128))v13)(a1, a2, v18);
    return v4;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_10038B4F4()
{
  unint64_t result;

  result = qword_1007BD508;
  if (!qword_1007BD508)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt8, &type metadata for UInt8);
    atomic_store(result, (unint64_t *)&qword_1007BD508);
  }
  return result;
}

unint64_t sub_10038B538()
{
  unint64_t result;

  result = qword_1007BD510;
  if (!qword_1007BD510)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt64, &type metadata for UInt64);
    atomic_store(result, (unint64_t *)&qword_1007BD510);
  }
  return result;
}

void ShortHash.hash(into:)(int a1, Swift::UInt16 a2)
{
  Hasher._combine(_:)(a2);
}

BOOL static ShortHash.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

Swift::Int ShortHash.hashValue.getter(Swift::UInt16 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

Swift::Int sub_10038B5F4()
{
  Swift::UInt16 *v0;
  Swift::UInt16 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10038B638()
{
  Swift::UInt16 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10038B660()
{
  Swift::UInt16 *v0;
  Swift::UInt16 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_10038B6A0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

void MediumHash.hash(into:)(int a1, unsigned int a2)
{
  unsigned int v2;

  v2 = HIWORD(a2);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(v2);
}

BOOL static MediumHash.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return (a1 & 0xFFFFFF) == (a2 & 0xFFFFFF);
}

Swift::Int MediumHash.hashValue.getter(unsigned int a1)
{
  Swift::UInt16 v1;
  unsigned int v2;
  _QWORD v4[9];

  v1 = a1;
  v2 = HIWORD(a1);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10038B754()
{
  uint64_t v0;
  Swift::UInt16 v1;
  Swift::UInt8 v2;
  _QWORD v4[9];

  v1 = *(_WORD *)v0;
  v2 = *(_BYTE *)(v0 + 2);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10038B7B0()
{
  uint64_t v0;
  Swift::UInt8 v1;

  v1 = *(_BYTE *)(v0 + 2);
  Hasher._combine(_:)(*(_WORD *)v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10038B7EC()
{
  uint64_t v0;
  Swift::UInt16 v1;
  Swift::UInt8 v2;
  _QWORD v4[9];

  v1 = *(_WORD *)v0;
  v2 = *(_BYTE *)(v0 + 2);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_10038B844(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && *((unsigned __int8 *)a1 + 2) == *((unsigned __int8 *)a2 + 2);
}

void LongHash.hash(into:)(int a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5)
{
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
  Hasher._combine(_:)(a4);
  Hasher._combine(_:)(a5);
}

Swift::Int LongHash.hashValue.getter(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
  Hasher._combine(_:)(a4);
  return Hasher._finalize()();
}

_QWORD *sub_10038B93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t i;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BYTE v25[32];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  v27 = a2;
  v28 = a3;
  v29 = a4;
  for (i = 32; i != 64; i += 8)
  {
    v5 = *(_QWORD *)&v25[i];
    v6 = sub_100227EB4(0, 1, 1, _swiftEmptyArrayStorage);
    v8 = v6[2];
    v7 = v6[3];
    v9 = v8 + 1;
    if (v8 >= v7 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v9;
    *((_BYTE *)v6 + v8 + 32) = v5;
    v10 = v6[3];
    v11 = v8 + 2;
    if (v9 >= v10 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v10 > 1), v9 + 1, 1, v6);
    v6[2] = v11;
    *((_BYTE *)v6 + v9 + 32) = BYTE1(v5);
    v12 = v6[3];
    v13 = v9 + 2;
    if (v11 >= v12 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v12 > 1), v11 + 1, 1, v6);
    v6[2] = v13;
    *((_BYTE *)v6 + v11 + 32) = BYTE2(v5);
    v14 = v6[3];
    v15 = v11 + 2;
    if (v13 >= v14 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v14 > 1), v13 + 1, 1, v6);
    v6[2] = v15;
    *((_BYTE *)v6 + v13 + 32) = BYTE3(v5);
    v16 = v6[3];
    v17 = v13 + 2;
    if (v15 >= v16 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v16 > 1), v15 + 1, 1, v6);
    v6[2] = v17;
    *((_BYTE *)v6 + v15 + 32) = BYTE4(v5);
    v18 = v6[3];
    v19 = v15 + 2;
    if (v17 >= v18 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v18 > 1), v17 + 1, 1, v6);
    v6[2] = v19;
    *((_BYTE *)v6 + v17 + 32) = BYTE5(v5);
    v20 = v6[3];
    v21 = v17 + 2;
    if (v19 >= v20 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v20 > 1), v19 + 1, 1, v6);
    v6[2] = v21;
    *((_BYTE *)v6 + v19 + 32) = BYTE6(v5);
    v22 = v6[3];
    v23 = v19 + 2;
    if (v21 >= v22 >> 1)
      v6 = sub_100227EB4((_QWORD *)(v22 > 1), v21 + 1, 1, v6);
    v6[2] = v23;
    *((_BYTE *)v6 + v21 + 32) = HIBYTE(v5);
    sub_1003431E0((uint64_t)v6);
  }
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_10038BBA0()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  Hasher.init(_seed:)(v6);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_10038BC1C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_10038BC70()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  Hasher.init(_seed:)(v6);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_10038BCE8(Swift::UInt64 *a1, Swift::UInt64 *a2)
{
  return _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t static SDHashStoreContact.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
  }
  return result;
}

uint64_t SDHashStoreContact.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain(a3);
  String.hash(into:)(a1, a2, a3);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRetain(a5);
  String.hash(into:)(a1, a4, a5);
  return swift_bridgeObjectRelease(a5);
}

Swift::Int SDHashStoreContact.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  swift_bridgeObjectRetain(a2);
  String.hash(into:)(v9, a1, a2);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRetain(a4);
  String.hash(into:)(v9, a3, a4);
  swift_bridgeObjectRelease(a4);
  return Hasher._finalize()();
}

Swift::Int sub_10038BE9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  Hasher.init(_seed:)(v6);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10038BF20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v6, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10038BF90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  Hasher.init(_seed:)(v6);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10038C010(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = v4 == *a2 && v5 == v8;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v8, 0), result = 0, (v12 & 1) != 0))
  {
    if (v6 == v9 && v7 == v10)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
  }
  return result;
}

BOOL _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5, Swift::UInt64 a6, Swift::UInt64 a7, Swift::UInt64 a8)
{
  Swift::Int v16;
  _QWORD v18[9];

  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
  Hasher._combine(_:)(a4);
  v16 = Hasher._finalize()();
  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(a5);
  Hasher._combine(_:)(a6);
  Hasher._combine(_:)(a7);
  Hasher._combine(_:)(a8);
  return v16 == Hasher._finalize()();
}

unint64_t sub_10038C198()
{
  unint64_t result;

  result = qword_1007BD518;
  if (!qword_1007BD518)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortHash, &type metadata for ShortHash);
    atomic_store(result, (unint64_t *)&qword_1007BD518);
  }
  return result;
}

unint64_t sub_10038C1E0()
{
  unint64_t result;

  result = qword_1007BD520;
  if (!qword_1007BD520)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MediumHash, &type metadata for MediumHash);
    atomic_store(result, (unint64_t *)&qword_1007BD520);
  }
  return result;
}

unint64_t sub_10038C228()
{
  unint64_t result;

  result = qword_1007BD528;
  if (!qword_1007BD528)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LongHash, &type metadata for LongHash);
    atomic_store(result, (unint64_t *)&qword_1007BD528);
  }
  return result;
}

unint64_t sub_10038C270()
{
  unint64_t result;

  result = qword_1007BD530;
  if (!qword_1007BD530)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SDHashStoreContact, &type metadata for SDHashStoreContact);
    atomic_store(result, (unint64_t *)&qword_1007BD530);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortHash()
{
  return &type metadata for ShortHash;
}

uint64_t initializeBufferWithCopyOfBuffer for MediumHash(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediumHash(unsigned __int16 *a1, int a2)
{
  int v2;

  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for MediumHash(uint64_t result, int a2, int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 0x1FFFFFF) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (!a3)
    v3 = 0;
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else if (v3)
  {
    if (v3 == 2)
      *(_WORD *)(result + 3) = 0;
    else
      *(_BYTE *)(result + 3) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumHash()
{
  return &type metadata for MediumHash;
}

ValueMetadata *type metadata accessor for LongHash()
{
  return &type metadata for LongHash;
}

_QWORD *initializeWithCopy for SDHashStoreContact(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for SDHashStoreContact(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for SDHashStoreContact(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDHashStoreContact(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDHashStoreContact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDHashStoreContact()
{
  return &type metadata for SDHashStoreContact;
}

uint64_t _s16DaemoniOSLibrary18SDHashStoreContactVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 68))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 68) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 68) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashStoreEntry()
{
  return &type metadata for SDAirDropHashStoreEntry;
}

uint64_t sub_10038C768(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007BD538);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10038C7A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(result + 16) == 3)
  {
    v2 = result;
    result = sub_100283E34(result, result + 32, 0, 5uLL);
    if (!v1)
      return (unsigned __int16)result | (*(unsigned __int8 *)(v2 + 34) << 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10038C7F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10038C828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if (BYTE6(a2) != 32)
  {
    __break(1u);
    JUMPOUT(0x10038C8D8);
  }
  sub_10038A654(a1, a2);
  if (!v3)
  {
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      if (v5 != 1)
      {
        if (v5 >= 3)
        {
          if (v5 != 3)
          {
            v2 = *(_QWORD *)(v4 + 32);
            swift_bridgeObjectRelease((const char *)v4);
            return v2;
          }
LABEL_12:
          __break(1u);
          JUMPOUT(0x10038C8CCLL);
        }
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return v2;
}

unint64_t sub_10038C8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B7320;
  if (!qword_1007B7320)
  {
    v1 = sub_10021FF9C(&qword_1007B7318);
    result = swift_getWitnessTable(&unk_1005D0428, v1);
    atomic_store(result, (unint64_t *)&qword_1007B7320);
  }
  return result;
}

BOOL sub_10038C938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  double v17;
  void (*v18)(char *, uint64_t);
  _BYTE v20[24];

  v1 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v1);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v20[-v9 - 8];
  *(_QWORD *)&v11 = swift_beginAccess(v0 + 40, v20, 0, 0).n128_u64[0];
  v12 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v12 + 16) < 3uLL)
    return 0;
  swift_bridgeObjectRetain(*(const char **)(v0 + 40), v11);
  sub_1003781A4(v13, v3);
  v14 = swift_bridgeObjectRelease((const char *)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v14) == 1)
  {
    sub_1002D4730((uint64_t)v3);
    return 0;
  }
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  Date.init()(v16);
  v17 = Date.timeIntervalSince(_:)(v10);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v10, v4);
  return v17 <= 30.0;
}

void sub_10038CAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  const char **v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  double v20;
  void (*v21)(_BYTE *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[32];
  _BYTE v40[24];

  v1 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v1);
  v3 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v6);
  v11 = &v39[-v10 - 8];
  __chkstk_darwin(v9);
  v13 = &v39[-v12 - 8];
  v14 = (const char **)(v0 + 40);
  *(_QWORD *)&v15 = swift_beginAccess(v0 + 40, v40, 1, 0).n128_u64[0];
  v16 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v16 + 16) >= 3uLL)
  {
    swift_bridgeObjectRetain((const char *)v16, v15);
    sub_1003781A4(v17, v3);
    v18 = swift_bridgeObjectRelease((const char *)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v18) == 1)
    {
      sub_1002D4730((uint64_t)v3);
    }
    else
    {
      v19 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
      Date.init()(v19);
      v20 = Date.timeIntervalSince(_:)(v13);
      v21 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v21(v11, v4);
      v21(v13, v4);
      if (v20 <= 30.0)
        return;
    }
  }
  swift_bridgeObjectRetain(*v14);
  v23 = sub_10038CE24(v22);
  v24 = *v14;
  *v14 = (const char *)v23;
  swift_bridgeObjectRelease(v24);
  Date.init()(v25);
  swift_beginAccess(v14, v39, 33, 0);
  v26 = (unint64_t)*v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  *v14 = (const char *)v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v26 = sub_10022835C(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
    *v14 = (const char *)v26;
  }
  v29 = *(_QWORD *)(v26 + 16);
  v28 = *(_QWORD *)(v26 + 24);
  if (v29 >= v28 >> 1)
  {
    v26 = sub_10022835C(v28 > 1, v29 + 1, 1, v26);
    *v14 = (const char *)v26;
  }
  *(_QWORD *)(v26 + 16) = v29 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v26+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v29, v8, v4);
  v30 = swift_endAccess(v39);
  v31 = (id)airdrop_log(v30);
  if (v31)
  {
    v32 = v31;
    v33 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1005CD2A0;
    v35 = *v14;
    *(_QWORD *)(v34 + 56) = sub_100008384(&qword_1007BD630);
    *(_QWORD *)(v34 + 64) = sub_10038D100();
    *(_QWORD *)(v34 + 32) = v35;
    swift_bridgeObjectRetain(v35);
    v37 = static os_log_type_t.default.getter(v36);
    os_log(_:dso:log:type:_:)("Updated tracked declines %@", 27, 2, &_mh_execute_header, v32, v37, v34);

    swift_bridgeObjectRelease((const char *)v34);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10038CDE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SDAirDropRateLimiter()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary20SDAirDropRateLimiter);
}

uint64_t sub_10038CE24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  double v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v2 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v2);
  v33 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v31 = (char *)&v26 - v9;
  result = __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  v34 = (char *)_swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v13 = 0;
    v28 = (char *)&v26 - v11;
    v29 = a1;
    v14 = (uint64_t)v33;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v14, a1 + v15 + v16 * v13, v4);
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v27(v14, 0, 1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
        goto LABEL_15;
      v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32);
      v18 = v17(v12, v14, v4);
      v19 = v31;
      Date.init()(v18);
      v20 = Date.timeIntervalSince(_:)(v12);
      v21 = v12;
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v19, v4);
      if (v20 > 10.0)
      {
        result = ((uint64_t (*)(char *, uint64_t))v22)(v21, v4);
      }
      else
      {
        v17(v32, (uint64_t)v21, v4);
        v23 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        {
          sub_1002299D0(0, *((_QWORD *)v23 + 2) + 1, 1);
          v23 = v34;
        }
        v25 = *((_QWORD *)v23 + 2);
        v24 = *((_QWORD *)v23 + 3);
        if (v25 >= v24 >> 1)
        {
          sub_1002299D0(v24 > 1, v25 + 1, 1);
          v23 = v34;
        }
        *((_QWORD *)v23 + 2) = v25 + 1;
        result = v17(&v23[v15 + v25 * v16], (uint64_t)v32, v4);
        v34 = v23;
      }
      a1 = v29;
      ++v13;
      v14 = (uint64_t)v33;
      v12 = v28;
      if (v30 == v13)
      {
        v27((uint64_t)v33, 1, 1, v4);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    v14 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v33, 1, 1, v4);
LABEL_15:
    swift_bridgeObjectRelease((const char *)a1, v26);
    sub_1002D4730(v14);
    return (uint64_t)v34;
  }
  return result;
}

unint64_t sub_10038D100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BD638;
  if (!qword_1007BD638)
  {
    v1 = sub_10021FF9C(&qword_1007BD630);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007BD638);
  }
  return result;
}

void sub_10038D14C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_10038D1A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = BYTE6(v24);
  if (BYTE6(v24))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v24);
    v6 = sub_100229940(0, BYTE6(v24), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v3 - 136) = v24 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = __DataStorage._offset.getter();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v13 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = __DataStorage._offset.getter();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
      }
      else
      {
        if (v7 >= BYTE6(v24))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v24;
        *(_BYTE *)(v3 - 108) = BYTE2(v24);
        *(_BYTE *)(v3 - 107) = BYTE3(v24);
        *(_BYTE *)(v3 - 106) = BYTE4(v24);
        *(_BYTE *)(v3 - 105) = BYTE5(v24);
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      v15 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v16 = swift_allocObject(v15, 72, 7);
      *(_OWORD *)(v16 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v16 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v16 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v16 + 32) = v12;
      v6 = String.init(format:_:)(2016555045, 0xE400000000000000, v16);
      v17 = v6;
      v19 = v18;
      *(_QWORD *)(v3 - 104) = v2;
      v21 = *(_QWORD *)(v2 + 16);
      v20 = *(_QWORD *)(v2 + 24);
      if (v21 >= v20 >> 1)
      {
        v6 = sub_100229940(v20 > 1, v21 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v21 + 1;
      v22 = v2 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      ++v7;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x10038D4B8);
  }
  return v2;
}

_QWORD *sub_10038D4E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_100229894(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7);
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_100229894(0, v7[2] + 1, 1);
        v7 = v16;
      }
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_100229894(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      v7[2] = v12 + 1;
      sub_10022138C(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

_QWORD *sub_10038D654(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  const char **v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  _OWORD v10[2];
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = _swiftEmptyArrayStorage;
    sub_100229894(0, v1, 0);
    v4 = (const char **)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain(*v4, *v4);
      v5 = sub_100008384((uint64_t *)&unk_1007B5260);
      swift_dynamicCast(v10, &v9, v5, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100229894(0, v2[2] + 1, 1);
        v2 = v11;
      }
      v7 = v2[2];
      v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_100229894(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v2[2] = v7 + 1;
      sub_10022138C(v10, &v2[4 * v7 + 4]);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10038D780(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease((const char *)a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_100229894(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_100221EDC(0, (unint64_t *)&qword_1007BD6C0, LSBundleRecord_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100229894(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100229894(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_10022138C(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_100221EDC(0, (unint64_t *)&qword_1007BD6C0, LSBundleRecord_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100229894(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_100229894(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_10022138C(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10038D9E0(uint64_t a1)
{
  return sub_10038E128(a1, (unint64_t *)&qword_1007BD6C0, LSBundleRecord_ptr);
}

_QWORD *sub_10038D9F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_10022E77C(v4, (uint64_t)v10);
      v5 = sub_100008384((uint64_t *)&unk_1007C0E40);
      v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_10038DADC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  _OWORD v17[2];
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease((const char *)a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_100229894(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        type metadata accessor for SecCertificate(0);
        swift_dynamicCast(v17, &v16, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_100229894(0, v3[2] + 1, 1);
          v3 = v18;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100229894(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        v3[2] = v8 + 1;
        sub_10022138C(v17, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      type metadata accessor for SecCertificate(0);
      v11 = v10;
      do
      {
        v16 = *v9;
        v12 = v16;
        swift_dynamicCast(v17, &v16, v11, (char *)&type metadata for Any + 8, 7);
        v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_100229894(0, v3[2] + 1, 1);
          v3 = v18;
        }
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
        {
          sub_100229894(v13 > 1, v14 + 1, 1);
          v3 = v18;
        }
        v3[2] = v14 + 1;
        sub_10022138C(v17, &v3[4 * v14 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10038DD0C(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229978, &qword_1007B53B0, &qword_1007B53E8, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038DD30(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229978, (uint64_t *)&unk_1007B53C0, &qword_1007B53E8, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038DD54(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4, void (*a5)(_BYTE *, _QWORD *))
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE v18[40];
  _BYTE v19[40];
  _QWORD *v20;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v20 = _swiftEmptyArrayStorage;
    a2(0, v5, 0);
    v12 = a1 + 32;
    v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_100244418(v12, (uint64_t)v18);
      v13 = sub_100008384(a3);
      v14 = sub_100008384(a4);
      swift_dynamicCast(v19, v18, v13, v14, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        a2(0, v6[2] + 1, 1);
        v6 = v20;
      }
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        a2(v15 > 1, v16 + 1, 1);
        v6 = v20;
      }
      v6[2] = v16 + 1;
      a5(v19, &v6[5 * v16 + 4]);
      v12 += 40;
      --v5;
    }
    while (v5);
  }
  return v6;
}

_QWORD *sub_10038DE94(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229978, &qword_1007B5378, &qword_1007B53E8, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038DEB8(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229978, &qword_1007B5388, &qword_1007B53E8, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

uint64_t sub_10038DEDC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease((const char *)a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_1002299A4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v18 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1002299A4(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
        v17 = &off_10072BAC8;
        *(_QWORD *)&v15 = v6;
        v3[2] = v8 + 1;
        sub_10026EE60(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v18 = v3;
        v12 = v3[2];
        v11 = v3[3];
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1002299A4(v11 > 1, v12 + 1, 1);
          v3 = v18;
        }
        v16 = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
        v17 = &off_10072BAC8;
        *(_QWORD *)&v15 = v13;
        v3[2] = v12 + 1;
        sub_10026EE60(&v15, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10038E0CC(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229BE0, &qword_1007B5378, (uint64_t *)&unk_1007BB690, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038E0F0(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229BE0, &qword_1007B5388, (uint64_t *)&unk_1007BB690, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038E114(uint64_t a1)
{
  return sub_10038E128(a1, (unint64_t *)&unk_1007BD6B0, CBPeer_ptr);
}

_QWORD *sub_10038E128(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v4)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v8 = a1 + 32;
    do
    {
      sub_10022E77C(v8, (uint64_t)v14);
      v9 = sub_100221EDC(0, a2, a3);
      v10 = swift_dynamicCast(&v15, v14, (char *)&type metadata for Any + 8, v9, 7);
      v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      v8 += 32;
      --v4;
    }
    while (v4);
    return v16;
  }
  return result;
}

_QWORD *sub_10038E218(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229C38, (uint64_t *)&unk_1007B53C0, (uint64_t *)&unk_1007BB680, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

_QWORD *sub_10038E23C(uint64_t a1)
{
  return sub_10038DD54(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100229C38, &qword_1007B53B0, (uint64_t *)&unk_1007BB680, (void (*)(_BYTE *, _QWORD *))sub_10026EE60);
}

sec_identity_t sub_10038E260()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  const __CFArray *isa;
  sec_identity_t v9;
  uint64_t v11;

  v1 = objc_msgSend(v0, "copyMyAppleIDSecIdentity");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v0, "copyMyAppleIDIntermediateCertificate");
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  v5 = sub_100008384(&qword_1007B5390);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1005D1DF0;
  *(_QWORD *)(v6 + 32) = v4;
  v11 = v6;
  specialized Array._endMutation()(v6);
  type metadata accessor for SecCertificate(0);
  v7 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v9 = sec_identity_create_with_certificates((SecIdentityRef)v2, isa);

  return v9;
}

uint64_t sub_10038E348(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  void *v3;
  __CFArray *v4;
  __CFArray *v5;
  uint64_t v6;
  NSString v7;
  id v8;
  NSObject *v9;
  Class isa;
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject **v22;
  NSObject *v23;
  uint64_t v24;

  v4 = sub_10004F238(a3);
  if (!v4)
    __break(1u);
  v5 = v4;
  v23 = 0;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v4, &v23, (char *)&type metadata for Any + 8);

  v6 = (uint64_t)v23;
  if (v23)
  {
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v3, "verifiedIdentityForAppleID:", v7);

    if (v8)
    {
      v9 = objc_msgSend(objc_allocWithZone((Class)NSError), "init");
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v6);
      v23 = v9;
      v6 = sub_10020A608(isa, v8, &v23);

      v11 = v23;
      v12 = v23;

      if (v12)
      {
        v13 = qword_1007B3E40;
        v14 = v12;
        if (v13 != -1)
          swift_once(&qword_1007B3E40, sub_1002E9E0C);
        v15 = type metadata accessor for Logger(0);
        sub_100221DF8(v15, (uint64_t)qword_1007D8190);
        v16 = v14;
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.error.getter(v17);
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc(12, -1);
          v22 = (NSObject **)swift_slowAlloc(8, -1);
          *(_DWORD *)v19 = 138412290;
          v23 = v16;
          v16 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v19 + 4);
          *v22 = v11;

          _os_log_impl((void *)&_mh_execute_header, v17, v18, "AppleID certificate chain sync error %@", v19, 0xCu);
          v20 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v22, 1, v20);
          swift_slowDealloc(v22, -1, -1);
          swift_slowDealloc(v19, -1, -1);
        }
        else
        {

          v17 = v16;
        }

      }
    }
    else
    {
      swift_bridgeObjectRelease(v6);
      return 0;
    }
  }
  return v6;
}

uint64_t sub_10038E610()
{
  return sub_10038F654((uint64_t *)&kSFOperationDiscoverableModeEveryone);
}

uint64_t sub_10038E61C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  __n128 v38;
  unint64_t v39;
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[5];
  char *v51;
  uint64_t v52;
  id v53;
  id v54;
  char v55;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SHA256(0);
  __chkstk_darwin(v5);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SHA256Digest(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v53 = objc_msgSend(v0, "nextAirDropID");
  if (v53)
  {
    if (qword_1007B3FC8 != -1)
      swift_once(&qword_1007B3FC8, sub_10038FE18);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007BD640);
    v11 = v53;
    v12 = v53;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v15 = 138412290;
      v54 = v12;
      v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v15 + 4);
      *v16 = v11;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Returning cached AirDropID %@", v15, 0xCu);
      v18 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v16, 1, v18);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

    }
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

  }
  else
  {
    v51 = v4;
    v52 = v2;
    v50[2] = v9;
    v50[3] = v7;
    v50[1] = v0;
    v19 = objc_msgSend(v0, "bluetoothAddress");
    if (v19)
    {
      v20 = v19;
      v53 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v50[4] = v22;
      __asm { BR              X9 }
    }
    if (qword_1007B3FC8 != -1)
      swift_once(&qword_1007B3FC8, sub_10038FE18);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100221DF8(v24, (uint64_t)qword_1007BD640);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v29 = v1;
    v31 = v51;
    v30 = v52;
    if (v28)
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Bluetooth Address missing - using random UUID", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    v34 = UUID.init()(v33);
    UUID.uuidString.getter(v34);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
    v37 = String.lowercased()();
    v38 = swift_bridgeObjectRelease(v36);
    v39 = String.index(_:offsetBy:)(15, 12, v37._countAndFlagsBits, v37._object, v38);
    v41 = String.index(_:offsetBy:)(15, 24, v37._countAndFlagsBits, v37._object, v40);
    if (v41 >> 14 < v39 >> 14)
    {
      __break(1u);
      JUMPOUT(0x10038F024);
    }
    v42 = String.subscript.getter(v39, v41, v37._countAndFlagsBits, v37._object);
    v44 = v43;
    v46 = v45;
    v48 = v47;
    swift_bridgeObjectRelease(v37._object);
    v23 = static String._fromSubstring(_:)(v42, v44, v46, v48);
    swift_bridgeObjectRelease(v48);
  }
  return v23;
}

uint64_t sub_10038F058()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[7] = v0;
  v2 = sub_100008384(&qword_1007BD680);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v1[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10038F0DC, 0, 0);
}

uint64_t sub_10038F0DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  if ((objc_msgSend(*(id *)(v0 + 56), "deviceWasUnlockedOnce") & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1007B3FC8 != -1)
      swift_once(&qword_1007B3FC8, sub_10038FE18);
    v3 = *(void **)(v0 + 56);
    v4 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 96) = sub_100221DF8(v4, (uint64_t)qword_1007BD640);
    v5 = Logger.logObject.getter(v3);
    v6 = static os_log_type_t.default.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void **)(v0 + 56);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v21 = v10;
      *(_DWORD *)v9 = 136315138;
      *(_QWORD *)(v0 + 40) = v8;
      v11 = sub_100221EDC(0, &qword_1007BD688, off_1007112E0);
      v12 = v8;
      v13 = String.init<A>(describing:)(v0 + 40, v11);
      v15 = v14;
      *(_QWORD *)(v0 + 48) = sub_100228BD8(v13, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4);
      swift_bridgeObjectRelease(v15);

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s: Waiting for first unlock to start", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {

    }
    v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1007B3DF0 != -1)
      swift_once(&qword_1007B3DF0, sub_1002D46D0);
    v17 = NSNotificationCenter.notifications(named:object:)(qword_1007D80C8, 0);
    *(_QWORD *)(v0 + 104) = v17;

    v18 = swift_retain(v17);
    NSNotificationCenter.Notifications.makeAsyncIterator()(v18);
    v19 = sub_100220D78(&qword_1007B9550, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v20 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 112) = v20;
    *v20 = v0;
    v20[1] = sub_10038F3D8;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v19);
  }
}

uint64_t sub_10038F3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002C6534;
  else
    v3 = sub_10038F43C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10038F43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  v2 = type metadata accessor for Notification(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) != 1)
    sub_10000D0F0(*(_QWORD *)(v0 + 64), &qword_1007BD680);
  v3 = Logger.logObject.getter(*(id *)(v0 + 56));
  v4 = static os_log_type_t.default.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(void **)(v0 + 56);
  if (v5)
  {
    v16 = *(_QWORD *)(v0 + 104);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v17 = v8;
    *(_DWORD *)v7 = 136315138;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = sub_100221EDC(0, &qword_1007BD688, off_1007112E0);
    v10 = v6;
    v11 = String.init<A>(describing:)(v0 + 24, v9);
    v13 = v12;
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v7 + 4);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Finished waiting for first unlock", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_release(v16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));

  }
  v14 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10038F648()
{
  return sub_10038F654((uint64_t *)&kSFOperationDiscoverableModeContactsOnly);
}

uint64_t sub_10038F654(uint64_t *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = objc_msgSend(v1, "discoverableMode");
  if (v3)
  {
    v1 = v3;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v7 = *a1;
    if (*a1)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease(v6);
    __break(1u);
    goto LABEL_9;
  }
  v4 = 0;
  v6 = 0;
  v7 = *a1;
  if (!*a1)
    goto LABEL_8;
LABEL_3:
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v1 = v9;
  if (!v6)
  {
LABEL_9:
    v10 = 0;
    goto LABEL_12;
  }
  if (v4 == v8 && v6 == v9)
    v10 = 1;
  else
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v9, 0);
  swift_bridgeObjectRelease(v6);
LABEL_12:
  swift_bridgeObjectRelease(v1);
  return v10 & 1;
}

__SecIdentity *sub_10038F728()
{
  void *v0;
  __SecIdentity *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  const __CFArray *isa;
  NSObject *v8;
  const char *v10;

  v1 = (__SecIdentity *)objc_msgSend(v0, "copyMyAppleIDSecIdentity");
  if (v1)
  {
    v2 = objc_msgSend(v0, "copyMyAppleIDIntermediateCertificate");
    if (v2)
    {
      v3 = v2;
      v4 = sub_100008384(&qword_1007B5390);
      v5 = swift_allocObject(v4, 40, 7);
      *(_OWORD *)(v5 + 16) = xmmword_1005D1DF0;
      *(_QWORD *)(v5 + 32) = v3;
      v10 = (const char *)v5;
      specialized Array._endMutation()(v5);
      type metadata accessor for SecCertificate(0);
      v6 = v3;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      v8 = sec_identity_create_with_certificates(v1, isa);

      if (v8)
      {
        v1 = sec_identity_copy_ref(v8);
        swift_unknownObjectRelease(v8);
        return v1;
      }
    }
    else
    {

    }
    return 0;
  }
  return v1;
}

void sub_10038F828(uint64_t a1@<X0>, const char *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v4;
  id v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  double v33;
  id v34;

  v4 = v3;
  v8 = objc_msgSend(v4, "idSelfIdentity");
  v9 = v8;
  if (!a2 || !v8)
    goto LABEL_9;
  swift_bridgeObjectRetain(a2);
  v10 = objc_msgSend(v9, "idsDeviceID");
  if (!v10)
    goto LABEL_8;
  v12 = v10;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v15 = v14;

  v16 = objc_msgSend(v9, "deviceIRKData");
  if (!v16)
  {
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v15).n128_u64[0];
LABEL_8:
    swift_bridgeObjectRelease(a2, v11);
    goto LABEL_9;
  }
  v17 = v16;
  v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;

  v21 = objc_msgSend(v9, "edPKData");
  if (v21)
  {
    v22 = v21;
    v34 = v9;
    v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

    v26 = objc_msgSend(v34, "featureFlags");
    v27 = 0xF000000000000000;
    goto LABEL_15;
  }
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v15).n128_u64[0];
  swift_bridgeObjectRelease(a2, v33);
  sub_100225AB4(v18, v20);
LABEL_9:
  if (qword_1007B3FC8 != -1)
    swift_once(&qword_1007B3FC8, sub_10038FE18);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100221DF8(v28, (uint64_t)qword_1007BD640);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Missing data for identity update to generate identity share request", v32, 2u);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

  }
  a1 = 0;
  a2 = 0;
  v27 = 0;
  v18 = 0;
  v20 = 0;
  v23 = 0;
  v25 = 0;
  v13 = 0;
  v15 = 0;
  v26 = 0;
LABEL_15:
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = v27;
  a3[4] = v18;
  a3[5] = v20;
  a3[6] = v23;
  a3[7] = v25;
  a3[8] = v13;
  a3[9] = v15;
  a3[10] = v26;
}

uint64_t sub_10038FA88()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSString v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;

  v1 = v0;
  v2 = objc_msgSend(v0, "myAppleIDCommonName");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v1, "verifiedIdentityForAppleID:", v7);

    if (v8)
    {
      v9 = objc_msgSend(v8, "accountIdentifier");

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v13 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0)
        v13 = v4 & 0xFFFFFFFFFFFFLL;
      if (!v13)
        goto LABEL_14;
      v14 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v14 = v10 & 0xFFFFFFFFFFFFLL;
      if (v14)
      {
        if (v10 == v4 && v12 == v6)
        {
          v15 = 1;
          v16 = v6;
          v12 = v6;
        }
        else
        {
          v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v4, v6, 0);
          v16 = v6;
        }
      }
      else
      {
LABEL_14:
        v15 = 0;
        v16 = v12;
        v12 = v6;
      }
      swift_bridgeObjectRelease(v16);
      v6 = v12;
    }
    else
    {
      v15 = 0;
    }
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

id sub_10038FBF4()
{
  void *v0;
  id v1;
  id result;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, "copyMyAppleIDSecIdentity");

  if (v1)
  {
    result = objc_msgSend(v0, "myAppleIDValidationRecord");
    if (!result)
      return result;
    v3 = result;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(result, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v7[0] = 0xD000000000000022;
    v7[1] = 0x8000000100618740;
    AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_10045C1D0((uint64_t)v8), (v6 & 1) != 0))
    {
      sub_10022E77C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v9);
    }
    else
    {
      v9 = 0u;
      v10 = 0u;
    }
    swift_bridgeObjectRelease((const char *)v4);
    sub_10022E6C0((uint64_t)v8);
    if (*((_QWORD *)&v10 + 1))
    {
      if ((swift_dynamicCast(v7, &v9, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
        return (id)v7[0];
    }
    else
    {
      sub_10000D0F0((uint64_t)&v9, (uint64_t *)&unk_1007B6890);
    }
  }
  return 0;
}

BOOL sub_10038FD40(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v6;
  char v7;
  char v11;

  if (!a4)
  {
    if (!a2)
      goto LABEL_15;
    goto LABEL_8;
  }
  if (a4 == 1)
  {
    if (a2 == 1)
    {
LABEL_15:
      v7 = 0;
      return (v7 & 1) == 0;
    }
    goto LABEL_8;
  }
  if (a2 < 2)
  {
LABEL_8:
    v6 = a4 == 0;
    if (a2 != 1)
      v6 = a4 < 2;
    if (a2)
      v7 = v6;
    else
      v7 = 0;
    return (v7 & 1) == 0;
  }
  if (a3 == a1 && a4 == a2)
    goto LABEL_15;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 0);
  v7 = 0;
  if ((v11 & 1) == 0)
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 1);
  return (v7 & 1) == 0;
}

uint64_t sub_10038FE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BD640);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BD640);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10038FEA8(uint64_t a1, void *a2)
{
  Class isa;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
  sub_100391DD4();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(a2, "contactWithPreferredIdentifierForContacts:", isa);

  if (v4)
  {
    v5 = objc_msgSend(v4, "identifier");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

    v7 = objc_msgSend(objc_allocWithZone((Class)CNContactFormatter), "init");
    v8 = objc_msgSend(v7, "stringFromContact:", v4);

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

    }
  }
  else
  {
    if (qword_1007B3FC8 != -1)
      swift_once(&qword_1007B3FC8, sub_10038FE18);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007BD640);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "No matching contacts found", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    return 0;
  }
  return v6;
}

uint64_t sub_100390090(void *a1)
{
  id v2;
  Class isa;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  const char *v21;
  Class v22;
  __n128 v23;
  id v24;
  Class v25;
  __n128 v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v2 = objc_msgSend(objc_allocWithZone((Class)NSDictionary), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v35 = v2;
  v4 = objc_msgSend(a1, "verifyAndParseValidationRecordData:intoDictionary:", isa, &v35);

  v5 = (id)v35;
  if (!v4)
  {

    return 0;
  }
  if (qword_1007B3FC8 != -1)
    swift_once(&qword_1007B3FC8, sub_10038FE18);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007BD640);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sender validation record verified", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  if (!v5)
  {
    v35 = 0u;
    v36 = 0u;
    sub_10000D0F0((uint64_t)&v35, (uint64_t *)&unk_1007B6890);
    v35 = 0u;
    v36 = 0u;
    v15 = (const char *)_swiftEmptyArrayStorage;
LABEL_23:
    sub_10000D0F0((uint64_t)&v35, (uint64_t *)&unk_1007B6890);
    goto LABEL_24;
  }
  *(_QWORD *)&v33 = 0xD000000000000014;
  *((_QWORD *)&v33 + 1) = 0x8000000100618770;
  v11 = v5;
  v12 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v33, &type metadata for String);
  v13 = objc_msgSend(v11, "__swift_objectForKeyedSubscript:", v12);
  swift_unknownObjectRelease(v12);

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)(&v33, v13);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  sub_100221E54((uint64_t)&v33, (uint64_t)&v35);
  if (*((_QWORD *)&v36 + 1))
  {
    v16 = sub_100008384(&qword_1007BD670);
    if (swift_dynamicCast(&v33, &v35, (char *)&type metadata for Any + 8, v16, 6))
    {
      v15 = (const char *)v33;
      goto LABEL_17;
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v35, (uint64_t *)&unk_1007B6890);
  }
  v15 = (const char *)_swiftEmptyArrayStorage;
LABEL_17:
  *(_QWORD *)&v33 = 0xD000000000000014;
  *((_QWORD *)&v33 + 1) = 0x8000000100618790;
  v17 = v11;
  v18 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v33, &type metadata for String);
  v19 = objc_msgSend(v17, "__swift_objectForKeyedSubscript:", v18);
  swift_unknownObjectRelease(v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)(&v33, v19);
    swift_unknownObjectRelease(v19);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  sub_100221E54((uint64_t)&v33, (uint64_t)&v35);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_23;
  v20 = sub_100008384(&qword_1007BD670);
  if (swift_dynamicCast(&v33, &v35, (char *)&type metadata for Any + 8, v20, 6))
  {
    v21 = (const char *)v33;
    goto LABEL_25;
  }
LABEL_24:
  v21 = (const char *)_swiftEmptyArrayStorage;
LABEL_25:
  v22 = Array._bridgeToObjectiveC()().super.isa;
  v23 = swift_bridgeObjectRelease(v15);
  v24 = (id)SFCombinedHashFromArray(v22, v23);

  v25 = Array._bridgeToObjectiveC()().super.isa;
  v26 = swift_bridgeObjectRelease(v21);
  v27 = (id)SFCombinedHashFromArray(v25, v26);

  v28 = objc_msgSend(a1, "contactsForEmailHash:phoneHash:", v24, v27);
  if (v28)
  {
    v29 = sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    v30 = sub_100391DD4();
    v31 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v29, v30);

    v14 = sub_10038FEA8((uint64_t)v31, a1);
    swift_bridgeObjectRelease(v31);
  }
  else
  {

    return 0;
  }
  return v14;
}

void sub_10039052C(void *a1@<X1>, uint64_t *a2@<X8>)
{
  __SecTrust *v4;
  __SecTrust *v5;
  unint64_t v6;
  const char *v7;
  const char *v8;
  const char *v9;
  NSString v10;
  NSString v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  void *v31;
  void *v32;
  double v33;
  _DWORD *v34;
  uint8_t *v35;
  os_log_type_t type;
  uint64_t v37;
  NSObject *v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  const char *v43;

  v4 = sub_1004FB6D8();
  if (!v4)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    goto LABEL_18;
  }
  v5 = v4;
  sub_1003908B8(v4, &v40);
  v7 = v40;
  v8 = v42;
  v9 = v43;
  if (v42)
  {
    swift_bridgeObjectRetain(v42);
    v10 = String._bridgeToObjectiveC()();
    v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
    if (v9)
    {
LABEL_4:
      swift_bridgeObjectRetain(v9, *(double *)&v6);
      v11 = String._bridgeToObjectiveC()();
      v6 = swift_bridgeObjectRelease(v9).n128_u64[0];
      goto LABEL_8;
    }
  }
  else
  {
    v10 = 0;
    if (v43)
      goto LABEL_4;
  }
  v11 = 0;
LABEL_8:
  v17 = objc_msgSend(a1, "emailOrPhoneForEmailHash:phoneHash:", v10, v11, *(double *)&v6);

  if (v17)
  {
    v39 = v7;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v13 = v19;
    v16 = objc_msgSend(a1, "verifiedIdentityForAppleID:", v17);

    if (v16)
    {
      if (qword_1007B3FC8 != -1)
        swift_once(&qword_1007B3FC8, sub_10038FE18);
      v20 = type metadata accessor for Logger(0);
      sub_100221DF8(v20, (uint64_t)qword_1007BD640);
      v38 = v16;
      v21 = Logger.logObject.getter(v38);
      v22 = static os_log_type_t.default.getter();
      v37 = v18;
      if (os_log_type_enabled(v21, v22))
      {
        type = v22;
        v23 = (uint8_t *)swift_slowAlloc(12, -1);
        v24 = (_QWORD *)swift_slowAlloc(8, -1);
        v35 = v23;
        *(_DWORD *)v23 = 138412290;
        v40 = (const char *)v38;
        v34 = v23 + 4;
        v25 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v34);
        *v24 = v16;

        _os_log_impl((void *)&_mh_execute_header, v21, type, "Sender validation record verified %@", v35, 0xCu);
        v26 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v24, 1, v26);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v35, -1, -1);
      }
      else
      {

        v21 = v38;
      }

      v14 = sub_10038FEA8((uint64_t)v39, a1);
      v15 = v30;
      v16 = v31;
      v17 = v32;
      swift_bridgeObjectRelease(v39);

      *(_QWORD *)&v33 = swift_bridgeObjectRelease(v8).n128_u64[0];
      swift_bridgeObjectRelease(v9, v33);
      v12 = v37;
    }
    else
    {
      *(_QWORD *)&v28 = swift_bridgeObjectRelease(v13).n128_u64[0];
      swift_bridgeObjectRelease(v39, v28);

      *(_QWORD *)&v29 = swift_bridgeObjectRelease(v8).n128_u64[0];
      swift_bridgeObjectRelease(v9, v29);
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v17 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v7);

    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v8).n128_u64[0];
    swift_bridgeObjectRelease(v9, v27);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
LABEL_18:
  *a2 = v12;
  a2[1] = (uint64_t)v13;
  a2[2] = v14;
  a2[3] = v15;
  a2[4] = (uint64_t)v16;
  a2[5] = (uint64_t)v17;
}

void sub_1003908B8(__SecTrust *a1@<X2>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  Class isa;
  id v9;
  id v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t countAndFlagsBits;
  const char *object;
  Swift::String v15;
  uint64_t v16;
  const char *v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)NSString), "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)NSString), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v25 = v7;
  v26 = v6;
  sub_10004F3B0(isa, a1, 0, &v26, &v25);

  v9 = v25;
  v10 = v26;

  if (v10 && (uint64_t)objc_msgSend(v10, "length") >= 1)
  {
    v12 = String.init(_:)(v10);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = (const char *)v12._object;
    if (!v9)
      goto LABEL_10;
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
    if (!v9)
      goto LABEL_10;
  }
  if ((uint64_t)objc_msgSend(v9, "length") >= 1)
  {
    v15 = String.init(_:)(v9);
    v16 = v15._countAndFlagsBits;
    v17 = (const char *)v15._object;
    if (object)
      goto LABEL_11;
    goto LABEL_8;
  }
LABEL_10:
  v16 = 0;
  v17 = 0;
  if (object)
  {
LABEL_11:
    swift_bridgeObjectRetain(object);
    v18 = String._bridgeToObjectiveC()();
    v11 = swift_bridgeObjectRelease(object).n128_u64[0];
    if (v17)
      goto LABEL_12;
LABEL_9:
    v19 = 0;
    goto LABEL_13;
  }
LABEL_8:
  v18 = 0;
  if (!v17)
    goto LABEL_9;
LABEL_12:
  swift_bridgeObjectRetain(v17);
  v19 = String._bridgeToObjectiveC()();
  v11 = swift_bridgeObjectRelease(v17).n128_u64[0];
LABEL_13:
  v20 = objc_msgSend(v3, "contactsForEmailHash:phoneHash:", v18, v19, *(double *)&v11);

  if (v20)
  {
    v21 = sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    v22 = sub_100391DD4();
    v23 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v20, v21, v22);

    v10 = v9;
    v9 = v20;
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
         && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100285CFC((uint64_t)_swiftEmptyArrayStorage);
    v23 = v24;
  }
  else
  {
    v23 = &_swiftEmptySetSingleton;
  }

  *a2 = v23;
  a2[1] = countAndFlagsBits;
  a2[2] = object;
  a2[3] = v16;
  a2[4] = v17;
}

uint64_t sub_100390B40(void *a1)
{
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  Class isa;
  unsigned int v7;
  id v8;
  id v9;
  Class v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  int v22;
  id v23;
  uint64_t v24;
  id v25;
  const char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  int v31;
  char v32;
  double v34;
  unint64_t v35;
  _QWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v2 = objc_msgSend(objc_allocWithZone((Class)NSDictionary), "init");
  v3 = sub_10038FBF4();
  if (v4 >> 60 == 15)
  {

LABEL_58:
    v32 = 0;
    return v32 & 1;
  }
  v5 = (uint64_t)v3;
  v35 = v4;
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v39 = v2;
  v7 = objc_msgSend(a1, "verifyAndParseValidationRecordData:intoDictionary:", isa, &v39);

  v8 = (id)v39;
  v9 = objc_msgSend(objc_allocWithZone((Class)NSDictionary), "init");
  v10 = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v39 = v9;
  v11 = objc_msgSend(a1, "verifyAndParseValidationRecordData:intoDictionary:", v10, &v39);

  v12 = (id)v39;
  if (!v7)
  {
    v16 = v5;
LABEL_10:
    sub_100225AA0(v16, v35);
LABEL_57:

    goto LABEL_58;
  }
  if ((v11 & 1) == 0)
  {
    v16 = v5;
    goto LABEL_10;
  }
  if (!v8)
  {
    v39 = 0u;
    v40 = 0u;
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
    v39 = 0u;
    v40 = 0u;
LABEL_27:
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
    v17 = 0;
    v18 = 0;
    goto LABEL_28;
  }
  *(_QWORD *)&v37 = 0x44497344746C61;
  *((_QWORD *)&v37 + 1) = 0xE700000000000000;
  v13 = v8;
  v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  v15 = objc_msgSend(v13, "__swift_objectForKeyedSubscript:", v14);
  swift_unknownObjectRelease(v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v15);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  sub_100221E54((uint64_t)&v37, (uint64_t)&v39);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v17 = (const char *)*((_QWORD *)&v37 + 1);
      v18 = v37;
      goto LABEL_28;
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
  }
  *(_QWORD *)&v37 = 0x44497344636E65;
  *((_QWORD *)&v37 + 1) = 0xE700000000000000;
  v19 = v13;
  v20 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  v21 = objc_msgSend(v19, "__swift_objectForKeyedSubscript:", v20);
  swift_unknownObjectRelease(v20);

  if (v21)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v21);
    swift_unknownObjectRelease(v21);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  sub_100221E54((uint64_t)&v37, (uint64_t)&v39);
  if (!*((_QWORD *)&v40 + 1))
    goto LABEL_27;
  v22 = swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v22)
    v17 = (const char *)*((_QWORD *)&v37 + 1);
  else
    v17 = 0;
  if (v22)
    v18 = v37;
  else
    v18 = 0;
LABEL_28:
  if (!v12)
  {
    v39 = 0u;
    v40 = 0u;
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
    v39 = 0u;
    v40 = 0u;
    goto LABEL_53;
  }
  *(_QWORD *)&v37 = 0x44497344746C61;
  *((_QWORD *)&v37 + 1) = 0xE700000000000000;
  v23 = v12;
  v24 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  v25 = objc_msgSend(v23, "__swift_objectForKeyedSubscript:", v24);
  swift_unknownObjectRelease(v24);

  if (v25)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v25);
    swift_unknownObjectRelease(v25);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  sub_100221E54((uint64_t)&v37, (uint64_t)&v39);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v26 = (const char *)*((_QWORD *)&v37 + 1);
      if (v17)
      {
        v27 = v37;
        goto LABEL_49;
      }
LABEL_56:
      sub_100225AA0(v5, v35);
      swift_bridgeObjectRelease(v26);
      goto LABEL_57;
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
  }
  *(_QWORD *)&v37 = 0x44497344636E65;
  *((_QWORD *)&v37 + 1) = 0xE700000000000000;
  v28 = v23;
  v29 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  v30 = objc_msgSend(v28, "__swift_objectForKeyedSubscript:", v29);
  swift_unknownObjectRelease(v29);

  if (v30)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v30);
    swift_unknownObjectRelease(v30);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  sub_100221E54((uint64_t)&v37, (uint64_t)&v39);
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_53:
    sub_10000D0F0((uint64_t)&v39, (uint64_t *)&unk_1007B6890);
    if (v17)
      goto LABEL_54;
    v26 = 0;
    goto LABEL_56;
  }
  v31 = swift_dynamicCast(v36, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v31)
    v26 = (const char *)v36[1];
  else
    v26 = 0;
  if (v31)
    v27 = v36[0];
  else
    v27 = 0;
  if (!v17)
    goto LABEL_56;
LABEL_49:
  if (!v26)
  {
LABEL_54:
    sub_100225AA0(v5, v35);
    swift_bridgeObjectRelease(v17);
    goto LABEL_57;
  }
  if (v18 == v27 && v17 == v26)
    v32 = 1;
  else
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v17, v27, v26, 0);
  sub_100225AA0(v5, v35);
  *(_QWORD *)&v34 = swift_bridgeObjectRelease(v17).n128_u64[0];
  swift_bridgeObjectRelease(v26, v34);

  return v32 & 1;
}

uint64_t sub_1003910F0()
{
  SecTrustRef v0;
  __SecTrust *v1;
  Class isa;
  id v3;
  uint64_t v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1004FB6D8();
  if (v0)
  {
    v1 = v0;
    isa = Data._bridgeToObjectiveC()().super.isa;
    v3 = sub_10004FF2C(isa, v1, 0);

    if (v3)
    {
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

      if (qword_1007B3FC8 != -1)
        swift_once(&qword_1007B3FC8, sub_10038FE18);
      v7 = type metadata accessor for Logger(0);
      sub_100221DF8(v7, (uint64_t)qword_1007BD640);
      v8 = swift_bridgeObjectRetain(v6);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain(v6);
        v14 = sub_100228BD8(v4, (unint64_t)v6, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v11 + 4);
        swift_bridgeObjectRelease_n(v6, 3);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Confirmed Bonjour Sender: %s", v11, 0xCu);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v6, 2);
      }
      LOBYTE(v3) = sub_100391308(v1);
    }

  }
  else
  {
    LOBYTE(v3) = 0;
  }
  return v3 & 1;
}

uint64_t sub_100391308(__SecTrust *a1)
{
  void *v1;
  __CFArray *v2;
  __CFArray *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  const char *v9;
  Class isa;
  char *v11;
  int v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  char v22;
  double v23;
  unint64_t v24;
  int v26;
  uint64_t v27;
  const char *v28;

  v2 = sub_10004F238(a1);
  if (!v2)
    goto LABEL_36;
  v3 = v2;
  v27 = 0;
  type metadata accessor for SecCertificate(0);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v27, v4);

  v5 = v27;
  if (!v27)
  {
LABEL_32:
    v22 = 0;
    return v22 & 1;
  }
  if (!((unint64_t)v27 >> 62))
  {
    v6 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain((const char *)v27);
    if (v6)
      goto LABEL_5;
LABEL_31:
    swift_bridgeObjectRelease_n(v5, 2);
    goto LABEL_32;
  }
  if (v27 >= 0)
    v24 = v27 & 0xFFFFFFFFFFFFFF8;
  else
    v24 = v27;
  swift_bridgeObjectRetain((const char *)v27);
  if (!_CocoaArrayWrapper.endIndex.getter(v24))
    goto LABEL_31;
LABEL_5:
  if ((v5 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(v5 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_36:
    __break(1u);
  }
  v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
LABEL_8:
  v8 = v7;
  swift_bridgeObjectRelease((const char *)v5);
  v26 = 0;
  v9 = (const char *)sub_10038DADC(v5);
  swift_bridgeObjectRelease((const char *)v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  LODWORD(v9) = SFAppleIDVerifyCertificateChainSync(isa, &v26);

  if (!(_DWORD)v9 || v26)
    goto LABEL_12;
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)NSString), "init");
  v27 = (uint64_t)v11;
  v12 = SFAppleIDCommonNameForCertificate(v8, &v27);
  v13 = (char *)(id)v27;

  if (v12)
    goto LABEL_11;
  if (!v13)
    goto LABEL_12;
  v27 = 0;
  v28 = 0;
  v13 = v13;
  static String._conditionallyBridgeFromObjectiveC(_:result:)(v13, &v27);

  v14 = v28;
  if (!v28)
  {
LABEL_11:

LABEL_12:
    goto LABEL_32;
  }
  v15 = v27;
  v16 = objc_msgSend(v1, "myAppleIDCommonName");
  if (!v16)
  {

LABEL_24:
    swift_bridgeObjectRelease(v14, v23);
    goto LABEL_12;
  }
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;

  v21 = ((unint64_t)v20 >> 56) & 0xF;
  if (((unint64_t)v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {

    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
    goto LABEL_24;
  }
  if (v18 == v15 && v14 == v20)
    v22 = 1;
  else
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v15, v14, 0);
  swift_bridgeObjectRelease(v20);

  swift_bridgeObjectRelease(v14);
  return v22 & 1;
}

void sub_1003915B0(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  const char *v6;
  double v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  unsigned int v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[2];
  const char *v35;
  uint64_t v36;
  const char *v37;

  v4 = v3;
  sub_1003908B8(a3, v34);
  v5 = v34[0];
  v6 = v35;
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v37).n128_u64[0];
  swift_bridgeObjectRelease(v6, v7);
  if ((v5 & 0xC000000000000001) != 0)
  {
    if (v5 < 0)
      v9 = v5;
    else
      v9 = v5 & 0xFFFFFFFFFFFFFF8;
    v10 = __CocoaSet.makeIterator()(v9);
    v11 = sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    v12 = sub_100391DD4();
    v8 = Set.Iterator.init(_cocoa:)(v34, v10, v11, v12);
    v5 = v34[0];
    v31 = v34[1];
    v13 = (uint64_t)v35;
    v14 = v36;
    v15 = (unint64_t)v37;
  }
  else
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(v5 + 32);
    v31 = v5 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(v5 + 56);
  }
  v30 = (unint64_t)(v13 + 64) >> 6;
  while (1)
  {
    v23 = v14;
    if ((v5 & 0x8000000000000000) == 0)
      break;
    v27 = __CocoaSet.Iterator.next()(v8);
    if (!v27)
      goto LABEL_32;
    v28 = v27;
    v32 = v27;
    v29 = sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    swift_unknownObjectRetain(v28);
    swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v29, 7);
    v21 = v33;
    swift_unknownObjectRelease(v28);
    if (!v21)
      goto LABEL_32;
LABEL_13:
    v22 = objc_msgSend(v4, "contactIsBlocked:", v21);

    if (v22)
      goto LABEL_32;
  }
  if (v15)
  {
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v20 = v19 | (v14 << 6);
LABEL_12:
    v21 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    if (!v21)
      goto LABEL_32;
    goto LABEL_13;
  }
  v24 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v24 >= v30)
      goto LABEL_32;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 2;
      if (v23 + 2 >= v30)
        goto LABEL_32;
      v25 = *(_QWORD *)(v31 + 8 * v14);
      if (!v25)
      {
        v14 = v23 + 3;
        if (v23 + 3 >= v30)
          goto LABEL_32;
        v25 = *(_QWORD *)(v31 + 8 * v14);
        if (!v25)
        {
          v14 = v23 + 4;
          if (v23 + 4 >= v30)
            goto LABEL_32;
          v25 = *(_QWORD *)(v31 + 8 * v14);
          if (!v25)
          {
            v26 = v23 + 5;
            while (v30 != v26)
            {
              v25 = *(_QWORD *)(v31 + 8 * v26++);
              if (v25)
              {
                v14 = v26 - 1;
                goto LABEL_29;
              }
            }
LABEL_32:
            sub_10022E5B4(v5);
            return;
          }
        }
      }
    }
LABEL_29:
    v15 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v14 << 6);
    goto LABEL_12;
  }
  __break(1u);
}

unint64_t destroy for SDAirDropAppleIDState(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDAirDropAppleIDStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for SDAirDropAppleIDState(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for SDAirDropAppleIDState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropAppleIDState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SDAirDropAppleIDState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_100391AE4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100391AFC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAppleIDState()
{
  return &type metadata for SDAirDropAppleIDState;
}

uint64_t sub_100391B2C(uint64_t a1, uint64_t a2)
{
  return sub_100391E2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

BOOL sub_100391B40(uint64_t a1, uint64_t a2)
{
  return sub_10038FD40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

BOOL sub_100391B54(uint64_t a1, uint64_t a2)
{
  return sub_100391B68(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

BOOL sub_100391B68(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v6;
  char v7;
  char v11;

  if (!a2)
  {
    if (!a4)
      goto LABEL_15;
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    if (a4 == 1)
    {
LABEL_15:
      v7 = 0;
      return (v7 & 1) == 0;
    }
    goto LABEL_8;
  }
  if (a4 < 2)
  {
LABEL_8:
    v6 = a2 == 0;
    if (a4 != 1)
      v6 = a2 < 2;
    if (a4)
      v7 = v6;
    else
      v7 = 0;
    return (v7 & 1) == 0;
  }
  if (a1 == a3 && a2 == a4)
    goto LABEL_15;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
  v7 = 0;
  if ((v11 & 1) == 0)
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 1);
  return (v7 & 1) == 0;
}

uint64_t sub_100391C40(uint64_t a1, uint64_t a2)
{
  return sub_100391C54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t sub_100391C54(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _BOOL4 v6;
  uint64_t result;
  char v10;

  if (!a4)
  {
    if (!a2)
      return 0;
    goto LABEL_8;
  }
  if (a4 == 1)
  {
    if (a2 == 1)
      return 0;
    goto LABEL_8;
  }
  if (a2 < 2)
  {
LABEL_8:
    v6 = a4 == 0;
    if (a2 != 1)
      v6 = a4 < 2;
    return a2 && v6;
  }
  if (a3 == a1 && a4 == a2)
    return 0;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 0);
  result = 0;
  if ((v10 & 1) == 0)
    return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 1);
  return result;
}

uint64_t sub_100391D2C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return !v4;
  if (v3 == 1)
    return v4 == 1;
  if (v4 < 2)
    return 0;
  v6 = *a1;
  if (v6 != *a2 || v3 != v4)
    return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v3, *a2, v4, 0);
  return 1;
}

unint64_t sub_100391D90()
{
  unint64_t result;

  result = qword_1007BD658;
  if (!qword_1007BD658)
  {
    result = swift_getWitnessTable(&unk_1005D57F8, &type metadata for SDAirDropAppleIDState);
    atomic_store(result, (unint64_t *)&qword_1007BD658);
  }
  return result;
}

unint64_t sub_100391DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BD660;
  if (!qword_1007BD660)
  {
    v1 = sub_100221EDC(255, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1007BD660);
  }
  return result;
}

uint64_t sub_100391E2C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _BOOL4 v6;
  uint64_t result;
  char v10;

  if (!a2)
  {
    if (!a4)
      return 0;
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    if (a4 == 1)
      return 0;
    goto LABEL_8;
  }
  if (a4 < 2)
  {
LABEL_8:
    v6 = a2 == 0;
    if (a4 != 1)
      v6 = a2 < 2;
    return a4 && v6;
  }
  if (a1 == a3 && a2 == a4)
    return 0;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
  result = 0;
  if ((v10 & 1) == 0)
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 1);
  return result;
}

uint64_t *sub_100391F04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  const char *v14;
  uint64_t v15;
  char *v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  const char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  const char *v27;
  double v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100008384((uint64_t *)&unk_1007B7E50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = (const char *)v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (_OWORD *)((char *)a2 + v15);
    v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain(v14);
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)v16 = *v17;
    }
    else
    {
      v19 = *(_QWORD *)v17;
      sub_10022E4A8(v19, v18);
      *(_QWORD *)v16 = v19;
      *((_QWORD *)v16 + 1) = v18;
    }
    v20 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = (const char *)v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[10];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = (const char *)v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_QWORD *)&v28 = swift_bridgeObjectRetain(v23).n128_u64[0];
    swift_bridgeObjectRetain(v27, v28);
  }
  return a1;
}

__n128 sub_100392078(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  double v8;

  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(const char **)(a1 + a2[6] + 8));
  v6 = (uint64_t *)(a1 + a2[7]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_100225AB4(*v6, v7);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[9] + 8)).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[10] + 8), v8);
}

char *sub_100392124(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  const char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  const char *v25;
  double v26;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100008384((uint64_t *)&unk_1007B7E50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = (const char *)*((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)&a2[v13 + 8];
  swift_bridgeObjectRetain(v12);
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  else
  {
    v17 = *(_QWORD *)v15;
    sub_10022E4A8(v17, v16);
    *(_QWORD *)v14 = v17;
    *((_QWORD *)v14 + 1) = v16;
  }
  v18 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = (const char *)*((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = a3[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = (const char *)*((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v26 = swift_bridgeObjectRetain(v21).n128_u64[0];
  swift_bridgeObjectRetain(v25, v26);
  return a1;
}

char *sub_10039226C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  const char *v15;
  const char *v16;
  double v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  const char *v29;
  const char *v30;
  double v31;
  double v32;
  uint64_t v33;
  char *v34;
  char *v35;
  const char *v36;
  const char *v37;
  double v38;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384((uint64_t *)&unk_1007B7E50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = (const char *)*((_QWORD *)v14 + 1);
  v16 = (const char *)*((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v15;
  *(_QWORD *)&v17 = swift_bridgeObjectRetain(v15).n128_u64[0];
  swift_bridgeObjectRelease(v16, v17);
  v18 = a3[7];
  v19 = (uint64_t *)&a1[v18];
  v20 = (uint64_t *)&a2[v18];
  v21 = *(_QWORD *)&a2[v18 + 8];
  if (*(_QWORD *)&a1[v18 + 8] >> 60 != 15)
  {
    if (v21 >> 60 != 15)
    {
      v23 = *v20;
      sub_10022E4A8(v23, v21);
      v24 = *v19;
      v25 = v19[1];
      *v19 = v23;
      v19[1] = v21;
      sub_100225AB4(v24, v25);
      goto LABEL_14;
    }
    sub_10023D5F8((uint64_t)v19);
    goto LABEL_12;
  }
  if (v21 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_14;
  }
  v22 = *v20;
  sub_10022E4A8(v22, v21);
  *v19 = v22;
  v19[1] = v21;
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = (const char *)*((_QWORD *)v28 + 1);
  v30 = (const char *)*((_QWORD *)v27 + 1);
  *((_QWORD *)v27 + 1) = v29;
  *(_QWORD *)&v31 = swift_bridgeObjectRetain(v29).n128_u64[0];
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30, v31).n128_u64[0];
  v33 = a3[10];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v36 = (const char *)*((_QWORD *)v35 + 1);
  v37 = (const char *)*((_QWORD *)v34 + 1);
  *((_QWORD *)v34 + 1) = v36;
  *(_QWORD *)&v38 = swift_bridgeObjectRetain(v36, v32).n128_u64[0];
  swift_bridgeObjectRelease(v37, v38);
  return a1;
}

char *sub_100392484(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100008384((uint64_t *)&unk_1007B7E50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_100392570(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  double v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384((uint64_t *)&unk_1007B7E50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = (const char *)*((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[7];
  v19 = (uint64_t *)&a1[v18];
  v20 = (uint64_t *)&a2[v18];
  v21 = *(_QWORD *)&a1[v18 + 8];
  if (v21 >> 60 != 15)
  {
    v22 = v20[1];
    if (v22 >> 60 != 15)
    {
      v23 = *v19;
      *v19 = *v20;
      v19[1] = v22;
      sub_100225AB4(v23, v21);
      goto LABEL_12;
    }
    sub_10023D5F8((uint64_t)v19);
  }
  *(_OWORD *)v19 = *(_OWORD *)v20;
LABEL_12:
  v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  v29 = (const char *)*((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  *(_QWORD *)&v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
  v31 = a3[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  v36 = (const char *)*((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease(v36, v30);
  return a1;
}

uint64_t sub_100392720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039272C);
}

uint64_t sub_10039272C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100008384((uint64_t *)&unk_1007B7E50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003927B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003927BC);
}

uint64_t sub_1003927BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100008384((uint64_t *)&unk_1007B7E50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t _s13UploadRequestVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BD720;
  if (!qword_1007BD720)
    return swift_getSingletonMetadata(a1, &_s13UploadRequestVMn);
  return result;
}

void sub_100392878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_100392918(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_1005D5898;
    v4[3] = &unk_1005D58B0;
    v4[4] = &unk_1005D58C8;
    v4[5] = &unk_1005D58E0;
    v4[6] = &unk_1005D58E0;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_100392918(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007BD730)
  {
    v2 = type metadata accessor for SFAirDrop.TransferIdentifier(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007BD730);
  }
}

void sub_10039296C(char *a1)
{
  sub_1004A7D98(*a1);
}

void sub_100392978()
{
  char *v0;

  sub_1004A90B4(0, *v0);
}

void sub_100392984()
{
  __asm { BR              X10 }
}

uint64_t sub_1003929C4(uint64_t a1)
{
  String.hash(into:)(a1, 0x7479426C61746F54, 0xEA00000000007365);
  return swift_bridgeObjectRelease(0xEA00000000007365);
}

void sub_100392A90(uint64_t a1)
{
  char *v1;

  sub_1004A90B4(a1, *v1);
}

unint64_t sub_100392A98@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100393C10(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100392AC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100392AF8 + 4 * byte_1005D586F[*v0]))();
}

void sub_100392AF8(_QWORD *a1@<X8>)
{
  *a1 = 0x7479426C61746F54;
  a1[1] = 0xEA00000000007365;
}

void sub_100392B18(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Content-Type");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_100392B3C(_QWORD *a1@<X8>)
{
  *a1 = 1635017028;
  a1[1] = 0xE400000000000000;
}

void sub_100392B50(char *a1@<X8>)
{
  strcpy(a1, "UploadComplete");
  a1[15] = -18;
}

void sub_100392B78(_QWORD *a1@<X8>)
{
  *a1 = 0x73507265646E6553;
  a1[1] = 0xEF6D796E6F647565;
}

void sub_100392BA0(_QWORD *a1@<X8>)
{
  *a1 = 0x75507265646E6553;
  a1[1] = 0xEF6E656B6F546873;
}

uint64_t sub_100392BC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100392BFC + 4 * byte_1005D5876[*v0]))(0x726566736E617254, 0xEA00000000004449);
}

uint64_t sub_100392BFC()
{
  return 0x7479426C61746F54;
}

uint64_t sub_100392C18()
{
  return 0x2D746E65746E6F43;
}

uint64_t sub_100392C38()
{
  return 1635017028;
}

uint64_t sub_100392C48()
{
  return 0x6F4364616F6C7055;
}

uint64_t sub_100392C6C()
{
  return 0x73507265646E6553;
}

uint64_t sub_100392C90()
{
  return 0x75507265646E6553;
}

unint64_t sub_100392CB4@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100393C10(a1);
  *a2 = result;
  return result;
}

void sub_100392CD8(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100392CE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100393890();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100392D0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100393890();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100392D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  int *v16;
  uint64_t *v17;
  void *v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t countAndFlagsBits;
  Swift::String v23;
  void *object;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  unint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;

  v1 = type metadata accessor for ByteCountFormatStyle.Units(0);
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ByteCountFormatStyle.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ByteCountFormatStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v42 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = 0;
  v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(116);
  v12._object = (void *)0x80000001006187B0;
  v12._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v12);
  v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v14 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v0, v13, v14);
  v15._countAndFlagsBits = 0x746E65746E6F4320;
  v15._object = (void *)0xEE0020657079542DLL;
  String.append(_:)(v15);
  v16 = (int *)_s13UploadRequestVMa(0);
  v17 = (uint64_t *)(v0 + v16[6]);
  v19 = *v17;
  v18 = (void *)v17[1];
  swift_bridgeObjectRetain(v18);
  v20._countAndFlagsBits = v19;
  v20._object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v18);
  v21._countAndFlagsBits = 0x426C61746F74202CLL;
  v21._object = (void *)0xEE00203A73657479;
  String.append(_:)(v21);
  v44._countAndFlagsBits = *(_QWORD *)(v0 + v16[5]);
  countAndFlagsBits = v44._countAndFlagsBits;
  v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(object);
  v25._countAndFlagsBits = 23328;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  v43 = countAndFlagsBits;
  v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ByteCountFormatStyle.Style.file(_:), v4);
  static ByteCountFormatStyle.Units.all.getter(v26);
  static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)(v7, v3, 1, 0);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v40);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v27 = sub_100287E70();
  v28 = sub_100220D78(&qword_1007BD778, (uint64_t (*)(uint64_t))&type metadata accessor for ByteCountFormatStyle, (uint64_t)&protocol conformance descriptor for ByteCountFormatStyle);
  v29 = sub_10039384C();
  v30 = v41;
  BinaryInteger.formatted<A>(_:)(&v44, v11, &type metadata for Int, v41, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v30);
  v31 = v44._object;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v31);
  v32._countAndFlagsBits = 0x203A61746164202CLL;
  v32._object = (void *)0xE800000000000000;
  String.append(_:)(v32);
  v33 = *(_QWORD *)(v0 + v16[7] + 8);
  if (v33 >> 60 != 15)
    __asm { BR              X14 }
  v44._countAndFlagsBits = 0;
  LOBYTE(v44._object) = 1;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for Int, &protocol witness table for Int);
  v34._object = (void *)0x80000001006187D0;
  v34._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v34);
  LOBYTE(v44._countAndFlagsBits) = *(_BYTE *)(v0 + v16[8]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for Bool, &protocol witness table for Bool);
  v35._countAndFlagsBits = 0x6F6475657370202CLL;
  v35._object = (void *)0xED0000203A6D796ELL;
  String.append(_:)(v35);
  v44 = *(Swift::String *)(v0 + v16[9]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for String, &protocol witness table for String);
  v36._countAndFlagsBits = 0x6F5468737570202CLL;
  v36._object = (void *)0xED0000203A6E656BLL;
  String.append(_:)(v36);
  v44 = *(Swift::String *)(v0 + v16[10]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for String, &protocol witness table for String);
  return v45;
}

uint64_t sub_1003931C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  __int128 v30;

  v3 = v1;
  v5 = sub_100008384(&qword_1007BD7A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_100393890();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s13UploadRequestV10CodingKeysON, &_s13UploadRequestV10CodingKeysON, v11, v9, v10);
  LOBYTE(v30) = 0;
  v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v13 = sub_100220D78(&qword_1007BD7A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v30, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)_s13UploadRequestVMa(0);
    v15 = *(_QWORD *)(v3 + v14[5]);
    LOBYTE(v30) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v30, v5);
    v16 = (uint64_t *)(v3 + v14[6]);
    v17 = *v16;
    v18 = v16[1];
    LOBYTE(v30) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v17, v18, &v30, v5);
    v30 = *(_OWORD *)(v3 + v14[7]);
    v29 = 3;
    v19 = sub_100285DE4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v30, &v29, v5, &type metadata for Data, v19);
    v20 = *(unsigned __int8 *)(v3 + v14[8]);
    LOBYTE(v30) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v20, &v30, v5);
    v21 = (uint64_t *)(v3 + v14[9]);
    v22 = *v21;
    v23 = v21[1];
    LOBYTE(v30) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v22, v23, &v30, v5);
    v24 = (uint64_t *)(v3 + v14[10]);
    v25 = *v24;
    v26 = v24[1];
    LOBYTE(v30) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, &v30, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10039341C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  char v38;

  v34 = a2;
  v4 = sub_100008384((uint64_t *)&unk_1007B7E50);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_100008384(&qword_1007BD788);
  v7 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)_s13UploadRequestVMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  v36 = a1;
  sub_10023A834(a1, v14);
  v15 = sub_100393890();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s13UploadRequestV10CodingKeysON, &_s13UploadRequestV10CodingKeysON, v15, v14, v13);
  if (v2)
  {
    sub_10022E75C(v36);
  }
  else
  {
    v33 = v7;
    v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    LOBYTE(v37) = 0;
    v17 = sub_100220D78(&qword_1007BD798, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v18 = v35;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6, v16, &v37, v35, v16, v17);
    v19 = (uint64_t)v12;
    sub_100393914((uint64_t)v6, (uint64_t)v12);
    LOBYTE(v37) = 1;
    v20 = v10;
    *(_QWORD *)(v19 + v10[5]) = KeyedDecodingContainer.decode(_:forKey:)(&v37, v18);
    LOBYTE(v37) = 2;
    v21 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v18);
    v22 = (uint64_t *)(v19 + v10[6]);
    *v22 = v21;
    v22[1] = v23;
    v38 = 3;
    v24 = sub_100285DA0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v37, &type metadata for Data, &v38, v18, &type metadata for Data, v24);
    v25 = v33;
    *(_OWORD *)(v19 + v10[7]) = v37;
    LOBYTE(v37) = 4;
    *(_BYTE *)(v19 + v10[8]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    LOBYTE(v37) = 5;
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    v27 = (uint64_t *)(v19 + v10[9]);
    *v27 = v26;
    v27[1] = v28;
    LOBYTE(v37) = 6;
    v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v18);
    v32 = (uint64_t *)(v19 + v20[10]);
    *v32 = v29;
    v32[1] = v31;
    sub_10039395C(v19, v34);
    sub_10022E75C(v36);
    sub_1003939A0(v19);
  }
}

void sub_100393820(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10039341C(a1, a2);
}

uint64_t sub_100393834(_QWORD *a1)
{
  return sub_1003931C8(a1);
}

unint64_t sub_10039384C()
{
  unint64_t result;

  result = qword_1007BD780;
  if (!qword_1007BD780)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int64, &type metadata for Int64);
    atomic_store(result, (unint64_t *)&qword_1007BD780);
  }
  return result;
}

unint64_t sub_100393890()
{
  unint64_t result;

  result = qword_1007BD790;
  if (!qword_1007BD790)
  {
    result = swift_getWitnessTable(&unk_1005D5A6C, &_s13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BD790);
  }
  return result;
}

uint64_t sub_1003938D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384((uint64_t *)&unk_1007B7E50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100393914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B7E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039395C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13UploadRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003939A0(uint64_t a1)
{
  uint64_t v2;

  v2 = _s13UploadRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s13UploadRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13UploadRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100393AB8 + 4 * byte_1005D5882[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100393AEC + 4 * byte_1005D587D[v4]))();
}

uint64_t sub_100393AEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100393AF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100393AFCLL);
  return result;
}

uint64_t sub_100393B08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100393B10);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100393B14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100393B1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13UploadRequestV10CodingKeysOMa()
{
  return &_s13UploadRequestV10CodingKeysON;
}

unint64_t sub_100393B3C()
{
  unint64_t result;

  result = qword_1007BD7B0;
  if (!qword_1007BD7B0)
  {
    result = swift_getWitnessTable(&unk_1005D5A44, &_s13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BD7B0);
  }
  return result;
}

unint64_t sub_100393B84()
{
  unint64_t result;

  result = qword_1007BD7B8;
  if (!qword_1007BD7B8)
  {
    result = swift_getWitnessTable(&unk_1005D597C, &_s13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BD7B8);
  }
  return result;
}

unint64_t sub_100393BCC()
{
  unint64_t result;

  result = qword_1007BD7C0;
  if (!qword_1007BD7C0)
  {
    result = swift_getWitnessTable(&unk_1005D59A4, &_s13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007BD7C0);
  }
  return result;
}

unint64_t sub_100393C10(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071CB20, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

id sub_100393C58()
{
  id *v0;
  id v1;
  unint64_t v2;
  const char *v3;

  v1 = objc_msgSend(*v0, "devices");
  if (v1)
  {
    v2 = sub_100393E40();
    v3 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

    v1 = (id)sub_10038DEDC((uint64_t)v3);
    swift_bridgeObjectRelease(v3);
  }
  return v1;
}

id sub_100393CC4(uint64_t a1, uint64_t a2)
{
  id *v2;

  return objc_msgSend(*v2, "addDelegate:queue:", a1, a2);
}

id sub_100393CDC(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  return sub_100393CFC(a1, a2, a3, a4, a5);
}

id sub_100393CFC(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  void *v5;
  void *v6;
  Class isa;
  NSSet v11;
  unsigned int v12;
  id v13;
  id v15;
  id v16;

  v6 = v5;
  isa = a4;
  if (a2)
  {
    v11.super.isa = Set._bridgeToObjectiveC()().super.isa;
    if (!isa)
      goto LABEL_4;
    goto LABEL_3;
  }
  v11.super.isa = 0;
  if (a4)
LABEL_3:
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_4:
  v16 = 0;
  v12 = objc_msgSend(v6, "sendProtobuf:toDestinations:priority:options:identifier:error:", a1, v11.super.isa, a3, isa, a5, &v16);

  v13 = v16;
  if (v12)
    return v16;
  v15 = v16;
  _convertNSErrorToError(_:)(v13);

  return (id)swift_willThrow();
}

unint64_t sub_100393E40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007C31F0;
  if (!qword_1007C31F0)
  {
    v1 = objc_opt_self(IDSDevice);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007C31F0);
  }
  return result;
}

uint64_t sub_100393E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007BD814);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D098;
  v4[2] = a2;
  return swift_task_switch(sub_100393EF4, a2, 0);
}

uint64_t sub_100393EDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_100393EF4, v0, 0);
}

uint64_t sub_100393EF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)();

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 112);
  *(_QWORD *)(v0 + 24) = v2;
  if (v2)
  {
    v3 = qword_1007B3D98;
    v4 = v2;
    if (v3 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v5 = static AirDropActor.shared;
    v6 = sub_100393FB0;
  }
  else
  {
    *(_QWORD *)(v1 + 112) = 0;
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v5 = static AirDropActor.shared;
    v6 = sub_100394064;
  }
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_100393FB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  sub_100368978();

  return swift_task_switch(sub_100393FF0, v1, 0);
}

uint64_t sub_100393FF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100394064, static AirDropActor.shared, 0);
}

uint64_t sub_100394064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropService()), "init");
  return swift_task_switch(sub_1003940B8, v1, 0);
}

uint64_t sub_1003940B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v2 + 112);
  *(_QWORD *)(v2 + 112) = v1;
  v4 = v1;

  return swift_task_switch(sub_10039410C, static AirDropActor.shared, 0);
}

uint64_t sub_10039410C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1003687A8();
  return swift_task_switch(sub_10039414C, v1, 0);
}

uint64_t sub_10039414C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100394240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100394254, a2, 0);
}

uint64_t sub_100394254()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t (*v3)();

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 112);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = sub_1003942A8;
  }
  else
  {
    v3 = sub_10039430C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003942A8()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100394328, static AirDropActor.shared, 0);
}

uint64_t sub_10039430C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100394328()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_100368978();

  return swift_task_switch(sub_1003945C4, 0, 0);
}

id sub_100394430()
{
  objc_class *v0;
  _QWORD *v1;
  objc_super v3;

  v1 = (_QWORD *)swift_allocObject(v0, 120, 15);
  swift_defaultActor_initialize();
  v1[14] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t sub_1003944CC()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SDAirDropService_objc()
{
  return objc_opt_self(SDAirDropService_objc);
}

uint64_t sub_100394510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007BD7F4);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D12C;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_100394254, v1, 0);
}

uint64_t sub_100394570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007BD804);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D098;
  return sub_100393E7C(a1, v1);
}

uint64_t sub_1003945C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;

  v2 = type metadata accessor for NWEndpoint(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v29 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v27 = (unint64_t)(v10 + 63) >> 6;
  v28 = a1;
  result = swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(v28 + 56) + *(_QWORD *)(v3 + 72) * v16, v2);
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    v21 = NWEndpoint.nw.getter(v20);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v21)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(result);
      v23 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v22 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v23 >= v22 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
      result = specialized Array._endMutation()(v24);
    }
  }
  v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v17 >= v27)
    goto LABEL_26;
  v18 = *(_QWORD *)(v26 + 8 * v17);
  ++v14;
  if (v18)
    goto LABEL_21;
  v14 = v17 + 1;
  if (v17 + 1 >= v27)
    goto LABEL_26;
  v18 = *(_QWORD *)(v26 + 8 * v14);
  if (v18)
    goto LABEL_21;
  v14 = v17 + 2;
  if (v17 + 2 >= v27)
    goto LABEL_26;
  v18 = *(_QWORD *)(v26 + 8 * v14);
  if (v18)
    goto LABEL_21;
  v14 = v17 + 3;
  if (v17 + 3 >= v27)
    goto LABEL_26;
  v18 = *(_QWORD *)(v26 + 8 * v14);
  if (v18)
  {
LABEL_21:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_22;
  }
  v19 = v17 + 4;
  if (v19 >= v27)
  {
LABEL_26:
    swift_release(v28);
    return v29;
  }
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v27)
      goto LABEL_26;
    v18 = *(_QWORD *)(v26 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100394858(uint64_t a1, uint64_t a2, const char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  const char *v8;
  double v9;
  double v10;
  uint64_t v11;
  _OWORD v12[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_10022138C((_OWORD *)a1, v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_10046B5EC(v12, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = (const char *)*v3;
    *v4 = v11;
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease(v8, v9);
  }
  else
  {
    sub_10000D0F0(a1, (uint64_t *)&unk_1007B6890);
    v10 = sub_100269C98(a2, (uint64_t)a3, v12);
    swift_bridgeObjectRelease(a3, v10);
    sub_10000D0F0((uint64_t)v12, (uint64_t *)&unk_1007B6890);
  }
}

uint64_t sub_10039492C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;
  __int128 v11[3];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_10026D7AC((__int128 *)a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_10046B8D0(v11, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v10;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_10000D0F0(a1, &qword_1007BD8F8);
    sub_100269E84(a2, a3, v11);
    swift_bridgeObjectRelease(a3);
    return sub_10000D0F0((uint64_t)v11, &qword_1007BD8F8);
  }
}

uint64_t sub_100394A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100395114(a1, a2, a3, (uint64_t *)&unk_1007B6450, (uint64_t (*)(_QWORD))&type metadata accessor for SFClientIdentity, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046BCEC, (void (*)(uint64_t, uint64_t))sub_10026A344);
}

uint64_t sub_100394A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100394C24(a1, a2, a3, &qword_1007BDAA0, type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046BD00, (void (*)(uint64_t, uint64_t))sub_10026A358);
}

uint64_t sub_100394A48(uint64_t a1, uint64_t a2)
{
  return sub_100394A6C(a1, a2, &qword_1007BA070, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDropReceive.Transfer, (void (*)(char *, uint64_t, uint64_t))sub_10046BD28, (void (*)(uint64_t))sub_10026A380);
}

uint64_t sub_100394A6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(char *, uint64_t, uint64_t), void (*a6)(uint64_t))
{
  _QWORD *v6;
  _QWORD *v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v11 = v6;
  v14 = sub_100008384(a3);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v26 - v19;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(a1, 1, v17) == 1)
  {
    sub_10000D0F0(a1, a3);
    a6(a2);
    v21 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a2, v21);
    return sub_10000D0F0((uint64_t)v16, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v20, a1, v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    v27 = *v11;
    *v11 = 0x8000000000000000;
    a5(v20, a2, isUniquelyReferenced_nonNull_native);
    v24 = *v11;
    *v11 = v27;
    swift_bridgeObjectRelease(v24);
    v25 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a2, v25);
  }
}

uint64_t sub_100394C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100394C24(a1, a2, a3, &qword_1007B7760, type metadata accessor for SDAirDropDiscoveredEndpoint, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046C214, (void (*)(uint64_t, uint64_t))sub_10026A590);
}

uint64_t sub_100394C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD *v12;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v12 = v7;
  v16 = sub_100008384(a4);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v26 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1) == 1)
  {
    sub_10000D0F0(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    return sub_10000D0F0((uint64_t)v18, a4);
  }
  else
  {
    sub_100221DB4(a1, (uint64_t)v21, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
    v27 = *v12;
    *v12 = 0x8000000000000000;
    a6(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    v25 = *v12;
    *v12 = v27;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v25);
  }
}

uint64_t sub_100394D98(uint64_t a1, uint64_t a2)
{
  const char **v2;
  const char **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;

  v3 = v2;
  v6 = sub_100008384((uint64_t *)&unk_1007BDAD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B6738);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10000D0F0(a1, (uint64_t *)&unk_1007BDAD0);
    sub_10026A688(a2, (uint64_t)v8);
    v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007BDAD0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = (const char *)0x8000000000000000;
    sub_10046C3C8((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_100394F28(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_100008384(&qword_1007BD950);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_10000D0F0(a1, &qword_1007BD950);
    sub_10026A7CC(a2, (uint64_t)v8);
    v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_10000D0F0((uint64_t)v8, &qword_1007BD950);
  }
  else
  {
    sub_100221DB4(a1, (uint64_t)v11, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_10046C554((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1003950A8(uint64_t a1, uint64_t a2)
{
  return sub_100394A6C(a1, a2, &qword_1007B8130, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDropSend.Transfer, (void (*)(char *, uint64_t, uint64_t))sub_10046C6C4, (void (*)(uint64_t))sub_10026A940);
}

uint64_t sub_1003950CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100394C24(a1, a2, a3, (uint64_t *)&unk_1007BD990, type metadata accessor for RegistrationState, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046C848, (void (*)(uint64_t, uint64_t))sub_10026AAC0);
}

uint64_t sub_1003950F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100395114(a1, a2, a3, &qword_1007C4330, (uint64_t (*)(_QWORD))&type metadata accessor for Date, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046C9E0, (void (*)(uint64_t, uint64_t))sub_10026AC0C);
}

uint64_t sub_100395114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v25 = a6;
  v11 = v7;
  v15 = sub_100008384(a4);
  __chkstk_darwin(v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a5(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v25 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_10000D0F0(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    return sub_10000D0F0((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    v26 = *v11;
    *v11 = 0x8000000000000000;
    v25(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    v24 = *v11;
    *v11 = v26;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v24);
  }
}

__n128 sub_100395294(uint64_t a1, uint64_t a2, const char *a3)
{
  const char **v3;
  const char **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 result;
  char isUniquelyReferenced_nonNull_native;
  const char *v17;
  double v18;
  uint64_t v19;
  const char *v20;

  v4 = v3;
  v8 = sub_100008384(&qword_1007BDA70);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B6640);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10000D0F0(a1, &qword_1007BDA70);
    sub_10026AF0C(a2, (uint64_t)a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    sub_10000D0F0((uint64_t)v10, &qword_1007BDA70);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v20 = *v4;
    *v4 = (const char *)0x8000000000000000;
    sub_10046CFD0((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    v17 = *v4;
    *v4 = v20;
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
    return swift_bridgeObjectRelease(v17, v18);
  }
  return result;
}

uint64_t sub_10039540C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100395114(a1, a2, a3, &qword_1007BDA78, (uint64_t (*)(_QWORD))&type metadata accessor for NWBrowser.Result, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10046D13C, (void (*)(uint64_t, uint64_t))sub_10026B13C);
}

__n128 sub_100395430(uint64_t a1, uint64_t a2, const char *a3)
{
  const char **v3;
  const char **v4;
  char isUniquelyReferenced_nonNull_native;
  const char *v9;
  double v10;
  const char *v12;
  unint64_t v13;
  char v14;
  char v15;
  double v16;
  char v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  double v21;
  const char *v22;
  const char *v23;

  v4 = v3;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v22 = *v3;
    *v3 = (const char *)0x8000000000000000;
    sub_10046D150(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    v9 = *v3;
    *v4 = v22;
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(a3).n128_u64[0];
    return swift_bridgeObjectRelease(v9, v10);
  }
  else
  {
    v12 = *v3;
    swift_bridgeObjectRetain(*v4);
    v13 = sub_10045C200(a2, (uint64_t)a3);
    v15 = v14;
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if ((v15 & 1) != 0)
    {
      v17 = swift_isUniquelyReferenced_nonNull_native(*v4);
      v18 = *v4;
      v23 = *v4;
      *v4 = (const char *)0x8000000000000000;
      if ((v17 & 1) == 0)
      {
        sub_100470D58();
        v18 = v23;
      }
      swift_bridgeObjectRelease(*(const char **)(*((_QWORD *)v18 + 6) + 16 * v13 + 8));
      v19 = *(_QWORD *)(*((_QWORD *)v18 + 7) + 8 * v13);
      sub_10026D160(v13, (uint64_t)v18);
      v20 = *v4;
      *v4 = v18;
      swift_release(v19);
      *(_QWORD *)&v21 = swift_bridgeObjectRelease(a3).n128_u64[0];
      return swift_bridgeObjectRelease(v20, v21);
    }
    else
    {
      return swift_bridgeObjectRelease(a3, v16);
    }
  }
}

uint64_t sub_100395578(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_10026EE60((__int128 *)a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v13 = *v2;
    *v2 = 0x8000000000000000;
    v5 = sub_10026EEE8((uint64_t)v14, v14[3]);
    __chkstk_darwin(v5);
    v7 = (_QWORD *)((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    sub_1003A9EFC(*v7, a2, isUniquelyReferenced_nonNull_native, &v13);
    sub_10022E75C(v14);
    v9 = *v2;
    *v2 = v13;
    swift_bridgeObjectRelease(v9);
    v10 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a2, v10);
  }
  else
  {
    sub_10000D0F0(a1, &qword_1007BD988);
    sub_10026B258(a2, (uint64_t)v14);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
    return sub_10000D0F0((uint64_t)v14, &qword_1007BD988);
  }
}

double sub_1003956C0(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  unint64_t v10;
  double result;
  char v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  if (a2)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_10046D5B8(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    v9 = *v3;
    *v3 = v18;
  }
  else
  {
    v10 = sub_10045C40C(a3);
    if ((v12 & 1) == 0)
      return result;
    v13 = v10;
    v14 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    v19 = *v4;
    *v4 = 0x8000000000000000;
    if (!v14)
    {
      sub_100471558();
      v15 = v19;
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v13 + 8);
    sub_10026D5F4(v13, v15);
    v17 = *v4;
    *v4 = v15;
    swift_bridgeObjectRelease(v16);
    v9 = v17;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1003957B4(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v27 = a4;
  v28 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v7 = *(_QWORD *)(v28 - 8);
  v8 = __chkstk_darwin(v28);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v27 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v29 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v30 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)a1, v27);
  v17 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_100244384(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * i, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4((uint64_t)v12, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002B6518(a2, (uint64_t)a3);
    if ((v23 & 1) != 0)
    {
      swift_release(a1);
      v24 = (uint64_t)v10;
      v25 = v27;
      sub_100221DB4(v24, v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v26 = 0;
LABEL_26:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v25, v26, 1, v28);
      swift_bridgeObjectRelease(a3);
      return;
    }
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v16)
      goto LABEL_4;
LABEL_5:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v20 >= v30)
      goto LABEL_25;
    v21 = *(_QWORD *)(v29 + 8 * v20);
    ++v17;
    if (v21)
      goto LABEL_20;
    v17 = v20 + 1;
    if (v20 + 1 >= v30)
      goto LABEL_25;
    v21 = *(_QWORD *)(v29 + 8 * v17);
    if (v21)
      goto LABEL_20;
    v17 = v20 + 2;
    if (v20 + 2 >= v30)
      goto LABEL_25;
    v21 = *(_QWORD *)(v29 + 8 * v17);
    if (v21)
      goto LABEL_20;
    v17 = v20 + 3;
    if (v20 + 3 >= v30)
      goto LABEL_25;
    v21 = *(_QWORD *)(v29 + 8 * v17);
    if (v21)
      goto LABEL_20;
    v22 = v20 + 4;
    if (v22 >= v30)
    {
LABEL_25:
      swift_release(a1);
      v26 = 1;
      v25 = v27;
      goto LABEL_26;
    }
    v21 = *(_QWORD *)(v29 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        v17 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_28;
        if (v17 >= v30)
          goto LABEL_25;
        v21 = *(_QWORD *)(v29 + 8 * v17);
        ++v22;
        if (v21)
          goto LABEL_20;
      }
    }
    v17 = v22;
LABEL_20:
    v16 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_100395A44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[29] = a1;
  v2[30] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[31] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[32] = v4;
  v2[33] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v2[34] = static AirDropActor.shared;
  return swift_task_switch(sub_100395AD8, v5, 0);
}

uint64_t sub_100395AD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  uint64_t (*v30)(uint64_t, uint64_t);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 240)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v1, v0 + 184, 32, 0);
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_10045C2DC(*(_QWORD *)(v0 + 232)), (v4 & 1) != 0))
  {
    sub_100244418(*(_QWORD *)(v2 + 56) + 40 * v3, v0 + 144);
  }
  else
  {
    *(_QWORD *)(v0 + 176) = 0;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
  }
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 232);
  swift_endAccess(v0 + 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  v9 = *(_QWORD *)(v0 + 264);
  if (*(_QWORD *)(v0 + 168))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(v9, *(_QWORD *)(v0 + 248));
    sub_10026EE60((__int128 *)(v0 + 144), v0 + 104);
LABEL_15:
    sub_10026EE60((__int128 *)(v0 + 104), v0 + 64);
    v25 = *(_QWORD *)(v0 + 88);
    v26 = *(_QWORD *)(v0 + 96);
    sub_10023A834((_QWORD *)(v0 + 64), v25);
    v27 = *(int **)(v26 + 40);
    v30 = (uint64_t (*)(uint64_t, uint64_t))((char *)v27 + *v27);
    v28 = (_QWORD *)swift_task_alloc(v27[1]);
    *(_QWORD *)(v0 + 280) = v28;
    *v28 = v0;
    v28[1] = sub_100395DA8;
    return v30(v25, v26);
  }
  v10 = *(_QWORD *)(v0 + 240);
  v11 = UUID.uuidString.getter(v9);
  v13 = v12;
  v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v0 + 208, 32, 0);
  v15 = *v14;
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_10045C200(v11, (uint64_t)v13), (v17 & 1) != 0))
  {
    sub_100340E40(*(_QWORD *)(v15 + 56) + 48 * v16, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  swift_bridgeObjectRelease(v13);
  swift_endAccess(v0 + 208);
  v18 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 248);
  if (v18)
  {
    v22 = *(_QWORD *)(v0 + 48);
    v23 = sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 128) = v18;
    *(_QWORD *)(v0 + 136) = v22;
    v24 = sub_100244348((_QWORD *)(v0 + 104));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v24, v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_10022E75C((_QWORD *)(v0 + 16));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v20 + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    sub_10000D0F0(v0 + 16, &qword_1007BD8F8);
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_QWORD *)(v0 + 136) = 0;
  }
  sub_10000D0F0(v0 + 144, &qword_1007B8150);
  if (*(_QWORD *)(v0 + 128))
    goto LABEL_15;
  sub_10000D0F0(v0 + 104, &qword_1007B8150);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void *))(v0 + 8))(&_swiftEmptySetSingleton);
}

uint64_t sub_100395DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(_QWORD *)(*(_QWORD *)v1 + 288) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100395E04, v3, 0);
}

uint64_t sub_100395E04()
{
  uint64_t v0;
  uint64_t v1;

  sub_10022E75C((_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100395E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  const char *v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD v53[2];
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v54 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v55 = (char *)v53 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)v53 - v12;
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100221DF8(v14, (uint64_t)qword_1007BD820);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v58 = (uint8_t *)a1;
  v17 = v16(v13, a1, v6);
  v53[1] = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v56 = a2;
    v22 = v21;
    v64[0] = v21;
    v57 = v3;
    *(_DWORD *)v20 = 136315138;
    v23 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v23);
    v26 = (const char *)v25;
    *(_QWORD *)&v60 = sub_100228BD8(v24, v25, v64);
    v3 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 8, v20 + 4);
    v27 = swift_bridgeObjectRelease(v26);
    v28 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    v28(v13, v6, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Adding transferring endpointID: %s", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v29 = v22;
    a2 = v56;
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    ((void (*)(char *, uint64_t))v28)(v13, v6);
  }

  v30 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID, v63, 32, 0);
  v31 = *v30;
  if (*(_QWORD *)(*v30 + 16) && (v32 = sub_10045C2DC((uint64_t)v58), (v33 & 1) != 0))
  {
    v57 = v3;
    sub_100244418(*(_QWORD *)(v31 + 56) + 40 * v32, (uint64_t)&v60);
    sub_10026EE60(&v60, (uint64_t)v64);
    swift_endAccess(v63);
    v34 = sub_100244418((uint64_t)v64, (uint64_t)&v60);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v63[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v58 = v37 + 4;
      v56 = a2;
      v39 = v61;
      v40 = v62;
      sub_10023A834(&v60, v61);
      v41 = *(void (**)(uint64_t, uint64_t))(v40 + 32);
      v42 = v40;
      v43 = (uint64_t)v55;
      v41(v39, v42);
      v44 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v6, v44);
      v47 = v46;
      ((void (*)(uint64_t, uint64_t))v28)(v43, v6);
      v59 = sub_100228BD8(v45, v47, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v58);
      v48 = (const char *)v47;
      a2 = v56;
      swift_bridgeObjectRelease(v48);
      sub_10022E75C(&v60);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Adding connectable to transferringConnectables: %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {
      sub_10022E75C(&v60);

      v43 = (uint64_t)v55;
    }
    v50 = v65;
    v51 = v66;
    sub_10023A834(v64, v65);
    v52 = v54;
    (*(void (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51);
    swift_beginAccess(v57 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, &v60, 33, 0);
    sub_10045DC08(v43, v52);
    swift_endAccess(&v60);
    ((void (*)(uint64_t, uint64_t))v28)(v43, v6);
    sub_100244418((uint64_t)v64, a2);
    return sub_10022E75C(v64);
  }
  else
  {
    result = swift_endAccess(v63);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100396344(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2[40] = a1;
  v2[41] = v1;
  v3 = sub_100008384(&qword_1007B7280);
  v2[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[43] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[44] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[45] = swift_task_alloc(v6);
  v2[46] = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[47] = static AirDropActor.shared;
  return swift_task_switch(sub_10039640C, v7, 0);
}

uint64_t sub_10039640C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  void (*v20)(uint64_t, uint64_t);
  uint8_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;

  v1 = v0 + 280;
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 320);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BD820);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 368);
  v13 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 352);
  if (v10)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v55 = swift_slowAlloc(32, -1);
    v60 = v55;
    *(_DWORD *)v14 = 136315138;
    v15 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v13, v15);
    v18 = v17;
    *(_QWORD *)(v0 + 312) = sub_100228BD8(v16, v17, &v60);
    v19 = (uint64_t *)(v0 + 320);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 312, v0 + 320, v14 + 4);
    swift_bridgeObjectRelease(v18);
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Removing transferring endpointID: %s", v14, 0xCu);
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    v21 = v14;
    v1 = v0 + 280;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);

    v19 = (uint64_t *)(v0 + 320);
  }
  v22 = (uint64_t *)(*(_QWORD *)(v0 + 328)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v22, v1, 32, 0);
  v23 = *v22;
  if (*(_QWORD *)(v23 + 16) && (v24 = sub_10045C2DC(*v19), (v25 & 1) != 0))
  {
    v58 = v20;
    sub_100244418(*(_QWORD *)(v23 + 56) + 40 * v24, v0 + 104);
    sub_10026EE60((__int128 *)(v0 + 104), v0 + 64);
    swift_endAccess(v1);
    v57 = (_QWORD *)(v0 + 64);
    v26 = sub_100244418(v0 + 64, v0 + 144);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = *(_QWORD *)(v0 + 360);
      v54 = *(_QWORD *)(v0 + 344);
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = swift_slowAlloc(32, -1);
      v60 = v56;
      *(_DWORD *)v30 = 136315138;
      v32 = *(_QWORD *)(v0 + 168);
      v31 = *(_QWORD *)(v0 + 176);
      sub_10023A834((_QWORD *)(v0 + 144), v32);
      (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v32, v31);
      v33 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v34 = dispatch thunk of CustomStringConvertible.description.getter(v54, v33);
      v36 = v35;
      v58(v29, v54);
      *(_QWORD *)(v0 + 304) = sub_100228BD8(v34, v36, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 304, v0 + 312, v30 + 4);
      swift_bridgeObjectRelease(v36);
      sub_10022E75C((_QWORD *)(v0 + 144));
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Removing connectable from transferringConnectables: %s", v30, 0xCu);
      swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      sub_10022E75C((_QWORD *)(v0 + 144));
    }

    v41 = *(_QWORD *)(v0 + 360);
    v43 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 344);
    v44 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 88);
    v46 = *(_QWORD *)(v0 + 96);
    sub_10023A834(v57, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 32))(v45, v46);
    swift_beginAccess(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v0 + 184, 33, 0);
    sub_100471B70(v41, v43);
    swift_endAccess(v0 + 184);
    v58(v41, v42);
    sub_10000D0F0(v43, &qword_1007B7280);
    v47 = *(_QWORD *)(v0 + 88);
    v48 = *(_QWORD *)(v0 + 96);
    sub_10023A834(v57, v47);
    (*(void (**)(uint64_t, uint64_t))(v48 + 32))(v47, v48);
    swift_beginAccess(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID, v0 + 208, 33, 0);
    v49 = sub_10026A934(v41);
    v58(v41, v42);
    swift_endAccess(v0 + 208);
    swift_unknownObjectRelease(v49);
    v50 = *(_QWORD *)(v0 + 88);
    v51 = *(_QWORD *)(v0 + 96);
    sub_10023A834(v57, v50);
    v52 = *(int **)(v51 + 40);
    v59 = (uint64_t (*)(uint64_t, uint64_t))((char *)v52 + *v52);
    v53 = (_QWORD *)swift_task_alloc(v52[1]);
    *(_QWORD *)(v0 + 384) = v53;
    *v53 = v0;
    v53[1] = sub_1003969E4;
    return v59(v50, v51);
  }
  else
  {
    swift_endAccess(v1);
    v38 = *(_QWORD *)(v0 + 360);
    v37 = *(_QWORD *)(v0 + 368);
    v39 = *(_QWORD *)(v0 + 336);
    sub_100397D48();
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003969E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 392) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100396A40, v3, 0);
}

uint64_t sub_100396A40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v1 = (_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease(v2);
  if (!v3)
  {
    v4 = (_OWORD *)(v0 + 16);
    v5 = v0 + 256;
    v34 = v0;
    v6 = (uint64_t *)(*(_QWORD *)(v0 + 328) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess(v6, v0 + 232, 0, 0);
    v7 = *v6;
    v8 = swift_task_alloc(32);
    v33 = (_QWORD *)(v0 + 64);
    *(_QWORD *)(v8 + 16) = v1;
    swift_bridgeObjectRetain(v7);
    v9 = sub_1003A9314((uint64_t)sub_1003AB250, v8, v7);
    swift_bridgeObjectRelease(v7);
    swift_task_dealloc(v8);
    v35 = v9 + 64;
    v10 = -1;
    v11 = -1 << *(_BYTE *)(v9 + 32);
    if (-v11 < 64)
      v10 = ~(-1 << -(char)v11);
    v12 = v10 & *(_QWORD *)(v9 + 64);
    v36 = (unint64_t)(63 - v11) >> 6;
    result = swift_retain(v9);
    v14 = 0;
    while (1)
    {
      if (v12)
      {
        v15 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v16 = v15 | (v14 << 6);
      }
      else
      {
        v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        if (v17 >= v36)
          goto LABEL_31;
        v18 = *(_QWORD *)(v35 + 8 * v17);
        ++v14;
        if (!v18)
        {
          v14 = v17 + 1;
          if (v17 + 1 >= v36)
            goto LABEL_31;
          v18 = *(_QWORD *)(v35 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 2;
            if (v17 + 2 >= v36)
              goto LABEL_31;
            v18 = *(_QWORD *)(v35 + 8 * v14);
            if (!v18)
            {
              v14 = v17 + 3;
              if (v17 + 3 >= v36)
                goto LABEL_31;
              v18 = *(_QWORD *)(v35 + 8 * v14);
              if (!v18)
              {
                v14 = v17 + 4;
                if (v17 + 4 >= v36)
                  goto LABEL_31;
                v18 = *(_QWORD *)(v35 + 8 * v14);
                if (!v18)
                {
                  v19 = v17 + 5;
                  if (v19 >= v36)
                  {
LABEL_31:
                    swift_release(v9);
                    v0 = v34;
                    if (*(_QWORD *)(v9 + 16))
                      sub_10039AE7C();
                    swift_release(v9);
                    v1 = v33;
                    break;
                  }
                  v18 = *(_QWORD *)(v35 + 8 * v19);
                  if (!v18)
                  {
                    while (1)
                    {
                      v14 = v19 + 1;
                      if (__OFADD__(v19, 1))
                        goto LABEL_36;
                      if (v14 >= v36)
                        goto LABEL_31;
                      v18 = *(_QWORD *)(v35 + 8 * v14);
                      ++v19;
                      if (v18)
                        goto LABEL_26;
                    }
                  }
                  v14 = v19;
                }
              }
            }
          }
        }
LABEL_26:
        v12 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v16);
      v22 = *v20;
      v21 = v20[1];
      swift_beginAccess(v6, v5, 33, 0);
      v23 = *v6;
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v23);
      v24 = sub_10045C200(v22, v21);
      v26 = v25;
      swift_bridgeObjectRelease(v23);
      if ((v26 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
        v28 = *v6;
        v37 = *v6;
        *v6 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10046E5D0();
          v28 = v37;
        }
        swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v28 + 48) + 16 * v24 + 8));
        sub_10026D7AC((__int128 *)(*(_QWORD *)(v28 + 56) + 48 * v24), v4);
        sub_10026B7DC(v24, v28);
        v29 = *v6;
        *v6 = v28;
        swift_bridgeObjectRelease(v29);
      }
      else
      {
        v4[1] = 0u;
        v4[2] = 0u;
        *v4 = 0u;
      }
      swift_bridgeObjectRelease(v21);
      sub_10000D0F0((uint64_t)v4, &qword_1007BD8F8);
      result = swift_endAccess(v5);
    }
  }
  sub_10022E75C(v1);
  v31 = *(_QWORD *)(v0 + 360);
  v30 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 336);
  sub_100397D48();
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100396DB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFPlatform(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100396E98, static AirDropActor.shared, 0);
}

uint64_t sub_100396E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_QWORD *)(v1 + 88);
  v2 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 80);
  static SFPlatform.macOS.getter(a1);
  v5 = static SFPlatform.isPlatform(_:)(v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + 64);
    v7 = *(_QWORD *)(v1 + 72);
    v9 = *(_QWORD *)(v1 + 56);
    SFAirDropReceive.Transfer.state.getter(v6);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
    if (v10 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
    {
      v11 = *(_QWORD *)(v1 + 72);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 64) + 96))(v11, *(_QWORD *)(v1 + 56));
      v12 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
      *(_QWORD *)&v13 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v11 + v12[12])).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v11 + v12[16]), v13);
      v14 = v11 + v12[20];
      v15 = sub_100008384(&qword_1007B5280);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      v16 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
LABEL_9:
      v29 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v16 - 8) + 8))(*(_QWORD *)(v1 + 72));
      SFAirDropReceive.Transfer.askRequest.getter(v29);
      v30 = (_QWORD *)swift_task_alloc(dword_1007BD96C);
      *(_QWORD *)(v1 + 104) = v30;
      *v30 = v1;
      v30[1] = sub_100397120;
      return sub_100397194(*(_QWORD *)(v1 + 48));
    }
    if (v10 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
    {
      v17 = *(_QWORD *)(v1 + 72);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 64) + 96))(v17, *(_QWORD *)(v1 + 56));
      v18 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
      v19 = v17 + v18[12];
      *(_QWORD *)&v20 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v17 + v18[16] + 8)).n128_u64[0];
      *(_QWORD *)&v21 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v17 + v18[20]), v20).n128_u64[0];
      *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v17 + v18[24]), v21).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v17 + v18[28]), v22);
      v23 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v19, v23);
LABEL_8:
      v16 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      goto LABEL_9;
    }
    v24 = *(_QWORD *)(v1 + 64);
    v25 = *(_QWORD *)(v1 + 72);
    v26 = *(_QWORD *)(v1 + 56);
    if (v10 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
    {
      (*(void (**)(_QWORD, uint64_t))(v24 + 96))(*(_QWORD *)(v1 + 72), v26);
      v27 = v25 + *(int *)(sub_100008384(&qword_1007B9BB0) + 48);
      v28 = type metadata accessor for SFAirDropReceive.Failure(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      goto LABEL_8;
    }
    (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v1 + 72), v26);
  }
  v32 = *(_QWORD *)(v1 + 72);
  v33 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 96));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100397120()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD **)v0;
  v6 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  (*(void (**)(_QWORD, _QWORD))(v1[5] + 8))(v1[6], v1[4]);
  v2 = v1[12];
  v3 = v1[9];
  v4 = v1[6];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return ((uint64_t (*)(void))v6[1])();
}

uint64_t sub_100397194(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[8] = a1;
  v2[9] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007BD908) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[13] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v6);
  v2[15] = swift_task_alloc(v6);
  v7 = type metadata accessor for SFPlatform(0);
  v2[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100397290, static AirDropActor.shared, 0);
}

uint64_t sub_100397290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = *(_QWORD *)(v1 + 136);
  v2 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 128);
  static SFPlatform.macOS.getter(a1);
  v5 = static SFPlatform.isPlatform(_:)(v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0)
  {
    v7 = *(_QWORD *)(v1 + 72);
    SFAirDropReceive.AskRequest.id.getter(v6);
    v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables);
    swift_beginAccess(v8, v1 + 16, 32, 0);
    v9 = *v8;
    if (*(_QWORD *)(*v8 + 16) && (v10 = sub_10045C244(*(_QWORD *)(v1 + 120)), (v11 & 1) != 0))
    {
      v12 = v10;
      v13 = *(_QWORD *)(v1 + 112);
      v45 = *(_QWORD *)(v1 + 120);
      v14 = *(_QWORD *)(v1 + 88);
      v43 = *(_QWORD *)(v1 + 104);
      v44 = *(_QWORD *)(v1 + 96);
      v15 = *(_QWORD *)(v1 + 80);
      v16 = *(_QWORD *)(v9 + 56);
      v17 = type metadata accessor for NWEndpoint(0);
      v18 = *(_QWORD *)(v17 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v14, v16 + *(_QWORD *)(v18 + 72) * v12, v17);
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v19(v14, 0, 1, v17);
      sub_10000D0F0(v14, (uint64_t *)&unk_1007BD908);
      swift_endAccess(v1 + 16);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
      SFAirDropReceive.AskRequest.id.getter(v20);
      v19(v15, 1, 1, v17);
      swift_beginAccess(v8, v1 + 40, 33, 0);
      sub_100394A6C(v15, v13, (uint64_t *)&unk_1007BD908, (uint64_t (*)(_QWORD))&type metadata accessor for NWEndpoint, (void (*)(char *, uint64_t, uint64_t))sub_10046BD14, (void (*)(uint64_t))sub_10026A36C);
      swift_endAccess(v1 + 40);
      v21 = sub_10039DE28();
      v22 = (const char *)v21;
      if ((unint64_t)v21 >> 62)
      {
        if (v21 >= 0)
          v21 &= 0xFFFFFFFFFFFFFF8uLL;
        v23 = _CocoaArrayWrapper.endIndex.getter(v21);
      }
      else
      {
        v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v24 = *(_QWORD *)(v1 + 72);
      swift_bridgeObjectRelease(v22);
      sub_100449C98(v23);
      v25 = *(void (**)(void))(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
      if (v25)
      {
        v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
        swift_retain(v26);
        v27 = (const char *)sub_10039DE28();
        v25();
        sub_1002845F4((uint64_t)v25, v26);
        swift_bridgeObjectRelease(v27);
      }
    }
    else
    {
      v28 = *(_QWORD *)(v1 + 120);
      v29 = *(_QWORD *)(v1 + 96);
      v30 = *(_QWORD *)(v1 + 104);
      v31 = *(_QWORD *)(v1 + 88);
      v32 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
      sub_10000D0F0(v31, (uint64_t *)&unk_1007BD908);
      swift_endAccess(v1 + 16);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      if (qword_1007B3FD0 != -1)
        swift_once(&qword_1007B3FD0, sub_100398F4C);
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100221DF8(v33, (uint64_t)qword_1007BD820);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "No receive displayable present, skipping remove", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

    }
  }
  v38 = *(_QWORD *)(v1 + 112);
  v39 = *(_QWORD *)(v1 + 120);
  v41 = *(_QWORD *)(v1 + 80);
  v40 = *(_QWORD *)(v1 + 88);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100397630(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[21] = a1;
  v2[22] = v1;
  v3 = sub_100008384((uint64_t *)&unk_1007BD908);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007B7280);
  v2[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v2[26] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[27] = v7;
  v2[28] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFPlatform(0);
  v2[29] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[30] = v9;
  v2[31] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v2[32] = static AirDropActor.shared;
  return swift_task_switch(sub_100397754, v10, 0);
}

uint64_t sub_100397754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v1 + 240);
  v2 = *(_QWORD *)(v1 + 248);
  v4 = *(_QWORD *)(v1 + 232);
  static SFPlatform.macOS.getter(a1);
  v5 = static SFPlatform.isPlatform(_:)(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0
    && (v6 = *(_QWORD *)(v1 + 176) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs,
        swift_beginAccess(v6, v1 + 96, 0, 0),
        *(_QWORD *)(*(_QWORD *)v6 + 16)))
  {
    v8 = SFAirDropReceive.AskRequest.senderID.getter(v7);
    v10 = v9;
    *(_QWORD *)(v1 + 264) = v9;
    v11 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
    v13 = v12;
    *(_QWORD *)(v1 + 272) = v12;
    v14 = (_QWORD *)swift_task_alloc(dword_1007BD91C);
    *(_QWORD *)(v1 + 280) = v14;
    *v14 = v1;
    v14[1] = sub_100397898;
    return sub_1003A4DB8(*(_QWORD *)(v1 + 200), v8, v10, v11, v13);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 224);
    v18 = *(_QWORD *)(v1 + 192);
    v17 = *(_QWORD *)(v1 + 200);
    v19 = *(_QWORD *)(v1 + 184);
    swift_task_dealloc(*(_QWORD *)(v1 + 248));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100397898()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  uint64_t v3;
  double v4;

  v1 = *(const char **)(*(_QWORD *)v0 + 272);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 256);
  v2 = *(const char **)(*(_QWORD *)v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 280));
  *(_QWORD *)&v4 = swift_bridgeObjectRelease(v2).n128_u64[0];
  swift_bridgeObjectRelease(v1, v4);
  return swift_task_switch(sub_100397908, v3, 0);
}

uint64_t sub_100397908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(v3, &qword_1007B7280);
LABEL_12:
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100221DF8(v22, (uint64_t)qword_1007BD820);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "No matching AirDropable endpoint found, adding to receiving displayables", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    v28 = *(_QWORD *)(v0 + 184);
    v27 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 176);

    SFAirDropReceive.AskRequest.id.getter();
    sub_1004FC098(v28);
    v30 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 0, 1, v30);
    swift_beginAccess(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables, v0 + 120, 33, 0);
    sub_100394A6C(v28, v27, (uint64_t *)&unk_1007BD908, (uint64_t (*)(_QWORD))&type metadata accessor for NWEndpoint, (void (*)(char *, uint64_t, uint64_t))sub_10046BD14, (void (*)(uint64_t))sub_10026A36C);
    swift_endAccess(v0 + 120);
    v31 = sub_10039DE28();
    v32 = (const char *)v31;
    if ((unint64_t)v31 >> 62)
    {
      if (v31 >= 0)
        v31 &= 0xFFFFFFFFFFFFFF8uLL;
      v33 = _CocoaArrayWrapper.endIndex.getter(v31);
    }
    else
    {
      v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v34 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease(v32);
    sub_100449C98(v33);
    v35 = *(void (**)(void))(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
    if (v35)
    {
      v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
      swift_retain(v36);
      v37 = (const char *)sub_10039DE28();
      v35();
      sub_1002845F4((uint64_t)v35, v36);
      swift_bridgeObjectRelease(v37);
    }
    goto LABEL_20;
  }
  v4 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 224), v3, v1);
  v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID, v0 + 144, 32, 0);
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_10045C2DC(*(_QWORD *)(v0 + 224)), (v8 & 1) == 0))
  {
    v20 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 208);
    swift_endAccess(v0 + 144);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    goto LABEL_12;
  }
  sub_100244418(*(_QWORD *)(v6 + 56) + 40 * v7, v0 + 56);
  sub_10026EE60((__int128 *)(v0 + 56), v0 + 16);
  swift_endAccess(v0 + 144);
  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v9);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10) & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    sub_10022E75C((_QWORD *)(v0 + 16));
    goto LABEL_12;
  }
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007BD820);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Connectable endpoint present, skipping receiving displayable addition", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }
  v17 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  sub_10022E75C((_QWORD *)(v0 + 16));
LABEL_20:
  v38 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100397D48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100398FDC() & 1) != 0)
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007BD820);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "No AirDrop browse clients present, stopping all browsing", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = sub_10039A8C0();
    UUID.init()(v11);
    v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID], v25, 33, 0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v12, v5, v2);
    swift_endAccess(v25);
    v13 = v1;
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v25[0] = v23;
      *(_DWORD *)v16 = 136315138;
      v22 = v16 + 4;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
      v17 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v18 = dispatch thunk of CustomStringConvertible.description.getter(v2, v17);
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v24 = sub_100228BD8(v18, v20, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v22);
      swift_bridgeObjectRelease(v20);

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Rolled service sessionID with new ID %s", v16, 0xCu);
      v21 = v23;
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {

    }
  }
}

uint64_t sub_10039803C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = type metadata accessor for UUID(0);
  v5[12] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[13] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[14] = swift_task_alloc(v8);
  v5[15] = swift_task_alloc(v8);
  v9 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SDNearFieldTap(0);
  v5[18] = v10;
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5[20] = v11;
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v12 = static AirDropActor.shared;
  v5[22] = static AirDropActor.shared;
  return swift_task_switch(sub_100398154, v12, 0);
}

uint64_t sub_100398154()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[19];
  v3 = (uint64_t *)v0[17];
  v2 = (int *)v0[18];
  v4 = (int *)v0[16];
  v24 = v0[15];
  v25 = v0[20];
  v6 = v0[12];
  v5 = v0[13];
  v21 = v6;
  v22 = v0[21];
  v7 = v0[9];
  v23 = v0[8];
  sub_100244384(v0[10], v1, type metadata accessor for SDNearFieldTap);
  v8 = (uint64_t *)(v1 + v2[13]);
  v9 = *v8;
  v10 = v8[1];
  *v3 = *v8;
  v3[1] = v10;
  v11 = v1 + v2[14];
  v12 = (char *)v3 + v4[5];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v0[23] = v13;
  v13(v12, v11, v6);
  v14 = (uint64_t *)(v1 + v2[6]);
  v15 = *v14;
  v16 = v14[1];
  v17 = (uint64_t *)((char *)v3 + v4[7]);
  *v17 = v15;
  v17[1] = v16;
  *((_BYTE *)v3 + v4[8]) = *(_BYTE *)(v1 + v2[12]);
  LOBYTE(v2) = *(_BYTE *)(v1 + v2[19]);
  swift_unknownObjectRetain(v7);
  sub_10022E4A8(v9, v10);
  swift_bridgeObjectRetain(v16);
  sub_1002443C8(v1, type metadata accessor for SDNearFieldTap);
  *((_BYTE *)v3 + v4[9]) = (_BYTE)v2;
  *(uint64_t *)((char *)v3 + v4[6]) = v7;
  sub_100221DB4((uint64_t)v3, v22, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_storeEnumTagMultiPayload(v22, v25, 2);
  v13((char *)v24, v23, v21);
  v18 = type metadata accessor for SDAirDropDiscoveredNearFieldDevice(0);
  v0[24] = v18;
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v0[25] = sub_1004F5474(v24);
  v19 = (_QWORD *)swift_task_alloc(dword_1007C45EC);
  v0[26] = v19;
  *v19 = v0;
  v19[1] = sub_1003982FC;
  return sub_1004F5248(v0[21]);
}

uint64_t sub_1003982FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  return swift_task_switch(sub_100398354, v1, 0);
}

uint64_t sub_100398354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  os_log_type_t type;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;

  v3 = *(_QWORD *)(v1 + 192);
  v2 = *(_QWORD *)(v1 + 200);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = UUID.uuidString.getter(a1);
  v7 = v6;
  v45 = v3;
  v46 = sub_100220D78((unint64_t *)&unk_1007BD978, type metadata accessor for SDAirDropDiscoveredNearFieldDevice, (uint64_t)&unk_1005DB3E0);
  v47 = &off_10072D458;
  v43 = v2;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v1 + 16, 33, 0);
  swift_retain(v2);
  sub_10039492C((uint64_t)&v43, v5, v7);
  swift_endAccess(v1 + 16);
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v8 = *(_QWORD *)(v1 + 200);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 184);
  v10 = *(_QWORD *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 64);
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007BD820);
  v9(v10, v12, v11);
  v14 = swift_retain_n(v8, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v1 + 200);
  v19 = *(_QWORD *)(v1 + 168);
  v21 = *(_QWORD *)(v1 + 104);
  v20 = *(_QWORD *)(v1 + 112);
  v22 = *(_QWORD *)(v1 + 96);
  if (v17)
  {
    v42 = *(_QWORD *)(v1 + 168);
    type = v16;
    v23 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(64, -1);
    v48 = v40;
    *(_DWORD *)v23 = 136315394;
    v24 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v25 = dispatch thunk of CustomStringConvertible.description.getter(v22, v24);
    v27 = v26;
    *(_QWORD *)(v1 + 40) = sub_100228BD8(v25, v26, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v23 + 4);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    *(_WORD *)(v23 + 12) = 2080;
    v43 = 0;
    v44 = 0xE000000000000000;
    swift_retain(v18);
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(v44);
    v43 = 0xD000000000000010;
    v44 = 0x80000001006189A0;
    v28 = *(_QWORD *)(v18 + 16);
    v29 = *(void **)(v18 + 24);
    swift_bridgeObjectRetain(v29);
    v30._countAndFlagsBits = v28;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v29);
    v31._countAndFlagsBits = 41;
    v31._object = (void *)0xE100000000000000;
    String.append(_:)(v31);
    swift_release(v18);
    v32 = v44;
    *(_QWORD *)(v1 + 48) = sub_100228BD8(v43, v44, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56, v23 + 14);
    swift_bridgeObjectRelease(v32);
    swift_release_n(v18, 2);
    _os_log_impl((void *)&_mh_execute_header, v15, type, "Created near field endpoint for transaction %s: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    swift_release(v18);
    v33 = v42;
  }
  else
  {

    swift_release_n(v18, 2);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    swift_release(v18);
    v33 = v19;
  }
  sub_1002443C8(v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v34 = *(_QWORD *)(v1 + 168);
  v35 = *(_QWORD *)(v1 + 152);
  v36 = *(_QWORD *)(v1 + 136);
  v38 = *(_QWORD *)(v1 + 112);
  v37 = *(_QWORD *)(v1 + 120);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 184))(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 96));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_10039873C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[16];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)v43 - v9;
  v11 = UUID.uuidString.getter(v8);
  v13 = v12;
  v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, &v47, 32, 0);
  v15 = *v14;
  if (*(_QWORD *)(*v14 + 16) && (v16 = sub_10045C200(v11, v13), (v17 & 1) != 0))
  {
    sub_100340E40(*(_QWORD *)(v15 + 56) + 48 * v16, (uint64_t)&v44);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
    v44 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  swift_endAccess(&v47);
  v18 = *((_QWORD *)&v45 + 1);
  sub_10000D0F0((uint64_t)&v44, &qword_1007BD8F8);
  if (v18)
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007BD820);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, a1, v3);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v43[0] = v4;
      *(_DWORD *)v23 = 136315138;
      v43[1] = a1;
      *(_QWORD *)&v44 = v24;
      v25 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v26 = dispatch thunk of CustomStringConvertible.description.getter(v3, v25);
      v28 = v27;
      v47 = sub_100228BD8(v26, v27, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v23 + 4);
      swift_bridgeObjectRelease(v28);
      (*(void (**)(char *, uint64_t))(v43[0] + 8))(v10, v3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Removing endpoint for near field transaction: %s", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }

    v40 = UUID.uuidString.getter(v39);
    v42 = v41;
    v45 = 0u;
    v46 = 0u;
    v44 = 0u;
    swift_beginAccess(v14, &v47, 33, 0);
    sub_10039492C((uint64_t)&v44, v40, v42);
    swift_endAccess(&v47);
  }
  else
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v29 = type metadata accessor for Logger(0);
    sub_100221DF8(v29, (uint64_t)qword_1007BD820);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v44 = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v3, v35);
      v38 = v37;
      v47 = sub_100228BD8(v36, v37, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v33 + 4);
      swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Not tracking endpoint for transaction ID %s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }

  }
}

uint64_t sub_100398BE0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  v2[2] = a1;
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[3] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[4] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[5] = swift_task_alloc(v6);
  v2[6] = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2[7] = static AirDropActor.shared;
  v7 = (_QWORD *)swift_task_alloc(dword_1007BDAB4);
  v2[8] = v7;
  *v7 = v2;
  v7[1] = sub_100398CA8;
  return sub_100395A44(a2);
}

uint64_t sub_100398CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100398D04, v3, 0);
}

void sub_100398D04()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  id *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v1 = 0;
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = v2 + 56;
  v4 = *(_QWORD *)(v2 + 56);
  v6 = -1;
  v7 = -1 << *(_BYTE *)(v2 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & v4;
  v27 = (unint64_t)(63 - v7) >> 6;
  if ((v6 & v4) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v1 << 6); ; i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    v15 = *(_QWORD *)(v0 + 40);
    v14 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 24);
    sub_100244384(*(_QWORD *)(v2 + 48) + *(_QWORD *)(v3 + 72) * i, v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4(v14, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
    v18 = *(id **)(v0 + 40);
    if (EnumCaseMultiPayload == 3)
    {
      v19 = *v18;
      v20 = objc_msgSend(*v18, "iconImageData");
      if (v20)
      {
        v21 = v20;
        v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v24 = v23;

      }
      else
      {
        v22 = 0;
        v24 = 0xF000000000000000;
      }
      v25 = *(_QWORD *)(v0 + 72);
      SFAirDrop.EndpointMetadata.init(imageData:)(v22, v24);

      swift_release(v25);
      goto LABEL_27;
    }
    sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    if (v11 >= v27)
      goto LABEL_24;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v1;
    if (v12)
      goto LABEL_18;
    v1 = v11 + 1;
    if (v11 + 1 >= v27)
      goto LABEL_24;
    v12 = *(_QWORD *)(v5 + 8 * v1);
    if (v12)
      goto LABEL_18;
    v1 = v11 + 2;
    if (v11 + 2 >= v27)
      goto LABEL_24;
    v12 = *(_QWORD *)(v5 + 8 * v1);
    if (v12)
      goto LABEL_18;
    v13 = v11 + 3;
    if (v13 >= v27)
    {
LABEL_24:
      swift_release(*(_QWORD *)(v0 + 72));
      SFAirDrop.EndpointMetadata.init(imageData:)(0, 0xF000000000000000);
LABEL_27:
      v26 = *(_QWORD *)(v0 + 40);
      swift_task_dealloc(*(_QWORD *)(v0 + 48));
      swift_task_dealloc(v26);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v12 = *(_QWORD *)(v5 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v1 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_29;
        if (v1 >= v27)
          goto LABEL_24;
        v12 = *(_QWORD *)(v5 + 8 * v1);
        ++v13;
        if (v12)
          goto LABEL_18;
      }
    }
    v1 = v13;
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_100398F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BD820);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BD820);
  if (qword_1007B3E58 != -1)
    swift_once(&qword_1007B3E58, sub_1002E9E60);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100398FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs, v13, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007BD820);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "Keeping browsers alive, browse client still present";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1, -1);
LABEL_12:

    return 0;
  }
  v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, &v12, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007BD820);
    v4 = Logger.logObject.getter(v10);
    v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "Keeping browsers alive, transfer ongoing";
    goto LABEL_11;
  }
  return 1;
}

__n128 sub_100399238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(const char *);
  uint64_t v5;
  const char *v6;

  v4 = *(void (**)(const char *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100008384(&qword_1007BB660);
  v6 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void sub_100399304(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100008384(&qword_1007BB660);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

id sub_10039935C(void *a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  objc_super v25;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v5);
  *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser] = 0;
  v11 = &v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = v5;
  UUID.init()(v12);
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations] = &_swiftEmptyDictionarySingleton;
  v13 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14, 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent] = a2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController] = a3;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger] = a4;
  v15 = a1;
  v16 = a2;
  v17 = a3;
  swift_retain(a4);

  v25.receiver = v12;
  v25.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v25, "init");
  v19 = (void *)objc_opt_self(NSNotificationCenter);
  v20 = v18;
  v21 = objc_msgSend(v19, "defaultCenter");
  v22 = qword_1007B3D20;
  v23 = v20;
  if (v22 != -1)
    swift_once(&qword_1007B3D20, sub_100253230);
  objc_msgSend(v21, "addObserver:selector:name:object:", v23, "nearFieldDidTap", qword_1007D7F70, 0);

  swift_release(a4);
  return v23;
}

id sub_1003995BC(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  id v16;
  objc_super v18;

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = qword_1007B3D98;
  v8 = v1;
  v9 = a1;
  if (v7 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v11 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v12 = (_QWORD *)swift_allocObject(&unk_100725AB0, 48, 7);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v8;
  v12[5] = v9;
  swift_retain(v10);
  v13 = sub_100253034((uint64_t)v5, (uint64_t)&unk_1007BD9F0, (uint64_t)v12);
  v14 = (objc_class *)type metadata accessor for SDAirDropAgentClientToken();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_agentClient] = v9;
  *(_QWORD *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task] = v13;
  v18.receiver = v15;
  v18.super_class = v14;
  v16 = v9;
  return objc_msgSendSuper2(&v18, "init");
}

uint64_t sub_10039973C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003997A8, static AirDropActor.shared, 0);
}

uint64_t sub_1003997A8()
{
  uint64_t v0;
  _BYTE *v1;
  __n128 v2;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = sub_1003997E4((char *)*(_QWORD *)(v0 + 32));
  *v1 = 1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

__n128 sub_1003997E4(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  char *v31;
  __n128 v32;
  void (*v33)(char *, char *, uint64_t, __n128);
  uint64_t v34;
  const char *v35;
  const char *v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  __n128 result;
  char v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  int v59;
  os_log_t v60;
  char *v61;
  char *v62;
  void *v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[3];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v58 - v12;
  v14 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus];
  if (objc_msgSend(v14, "currentConsoleUser"))
  {
    v62 = v6;
    v63 = v14;
    v64 = *(NSObject **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger];
    sub_1004491F4(a1);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v15 = type metadata accessor for Logger(0);
    sub_100221DF8(v15, (uint64_t)qword_1007BD820);
    v16 = a1;
    v17 = v2;
    v18 = v16;
    v19 = v17;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc(22, -1);
      v60 = v20;
      v24 = v23;
      v25 = swift_slowAlloc(64, -1);
      v68[0] = v25;
      *(_DWORD *)v24 = 136315394;
      v59 = v22;
      v26 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v61 = v11;
      v27 = v26;
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v7, v26);
      v30 = (const char *)v29;
      v66 = sub_100228BD8(v28, v29, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v24 + 4);
      swift_bridgeObjectRelease(v30);

      *(_WORD *)(v24 + 12) = 2080;
      v58 = v24 + 14;
      v31 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      v32 = swift_beginAccess(&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID], &v66, 0, 0);
      v33 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
      v33(v13, v31, v7, v32);
      v34 = dispatch thunk of CustomStringConvertible.description.getter(v7, v27);
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v65 = sub_100228BD8(v34, (unint64_t)v36, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v58);
      swift_bridgeObjectRelease(v36);

      v37 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v59, "Adding AirDrop browse client %s for session %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      v11 = v61;
    }
    else
    {

      v33 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
    }
    ((void (*)(char *, char *, uint64_t))v33)(v11, &v18[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id], v7);
    swift_beginAccess(&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs], v68, 33, 0);
    sub_10045DC08((uint64_t)v13, v11);
    swift_endAccess(v68);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v43 = v18[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly];
    sub_10039A4B8();
    sub_10038E61C();
    swift_bridgeObjectRelease(v44);
    if ((v43 & 1) == 0)
    {
      sub_10039A69C();
      if (!*(_QWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser])
      {
        v45 = type metadata accessor for TaskPriority(0);
        v46 = (uint64_t)v62;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v62, 1, 1, v45);
        v47 = swift_allocObject(&unk_100725A38, 24, 7);
        swift_unknownObjectWeakInit(v47 + 16, v19);
        type metadata accessor for MainActor(0);
        v48 = swift_retain(v47);
        v49 = static MainActor.shared.getter(v48);
        v50 = (_QWORD *)swift_allocObject(&unk_100725AD8, 40, 7);
        v50[2] = v49;
        v50[3] = &protocol witness table for MainActor;
        v50[4] = v47;
        swift_release(v47);
        v51 = sub_100252EC0(v46, (uint64_t)&unk_1007BDA00, (uint64_t)v50);
        swift_release(v51);
      }
    }
    v52 = sub_10039DE28();
    v53 = (const char *)v52;
    if ((unint64_t)v52 >> 62)
    {
      if (v52 >= 0)
        v52 &= 0xFFFFFFFFFFFFFF8uLL;
      v54 = _CocoaArrayWrapper.endIndex.getter(v52);
    }
    else
    {
      v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v53);
    sub_100449C98(v54);
    v55 = *(void (**)(void))&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
    if (v55)
    {
      v56 = *(_QWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8];
      swift_retain(v56);
      v57 = (const char *)sub_10039DE28();
      v55();
      sub_1002845F4((uint64_t)v55, v56);
      return swift_bridgeObjectRelease(v57);
    }
  }
  else
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100221DF8(v38, (uint64_t)qword_1007BD820);
    v64 = Logger.logObject.getter(v39);
    v40 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v40, "Browse is intended for different user, ignoring", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

  }
  return result;
}

uint64_t sub_100399E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return swift_task_switch(sub_100399EBC, v6, 0);
}

uint64_t sub_100399EBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_100399F40;
  return Task.result.getter(v0 + 48, v1, &type metadata for Bool, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100399F40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_100399F94, v1, 0);
}

uint64_t sub_100399F94()
{
  uint64_t v0;

  sub_100399FD4(*(char **)(*(_QWORD *)(v0 + 16)
                         + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_agentClient));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100399FD4(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];

  v3 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus], "currentConsoleUser"))
  {
    sub_1004493B4(a1);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007BD820);
    v11 = a1;
    v12 = v1;
    v13 = v11;
    v14 = v12;
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc(22, -1);
      v32 = v17;
      v19 = v18;
      v33 = swift_slowAlloc(64, -1);
      v37[0] = v33;
      *(_DWORD *)v19 = 136315394;
      v31 = v15;
      v20 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v21 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
      v23 = (const char *)v22;
      v35 = sub_100228BD8(v21, v22, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v19 + 4);
      swift_bridgeObjectRelease(v23);

      *(_WORD *)(v19 + 12) = 2080;
      v24 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      v25 = swift_beginAccess(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID], &v35, 0, 0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v24, v6, v25);
      v26 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v34 = sub_100228BD8(v26, (unint64_t)v28, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v19 + 14);
      swift_bridgeObjectRelease(v28);

      v15 = v31;
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v32, "Removing AirDrop browse client %s for session %s", (uint8_t *)v19, 0x16u);
      v29 = v33;
      swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {

    }
    v30 = (uint64_t)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id];
    swift_beginAccess(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs], v37, 33, 0);
    sub_100471B70(v30, (uint64_t)v5);
    swift_endAccess(v37);
    sub_10000D0F0((uint64_t)v5, &qword_1007B7280);
    sub_100397D48();
  }
}

void sub_10039A4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser))
  {
    v2 = v0;
    if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus), "isAirDropAllowed"))
    {
      if (qword_1007B3FD0 != -1)
        swift_once(&qword_1007B3FD0, sub_100398F4C);
      v3 = type metadata accessor for Logger(0);
      v4 = sub_100221DF8(v3, (uint64_t)qword_1007BD820);
      v5 = Logger.logObject.getter(v4);
      v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting application service browser", v7, 2u);
        swift_slowDealloc(v7, -1, -1);
      }

      v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger);
      v9 = swift_allocObject(&unk_100725A38, 24, 7);
      swift_unknownObjectWeakInit(v9 + 16, v2);
      v10 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceBrowser());
      v11 = swift_retain(v8);
      v12 = sub_1003B4A24(v11, (uint64_t)sub_1003AB120, v9);
      swift_release(v9);
      swift_release(v8);
      v13 = *(void **)(v2 + v1);
      *(_QWORD *)(v2 + v1) = v12;

      v14 = *(_QWORD *)(v2 + v1);
      if (v14)
      {
        v15 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate;
        *(_QWORD *)(v15 + 8) = &off_1007259E8;
        swift_unknownObjectWeakAssign(v15, v2);
        v16 = *(void **)(v2 + v1);
        if (v16)
        {
          v17 = v16;
          sub_1003B3A98();

        }
      }
    }
  }
}

void sub_10039A69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser))
  {
    v2 = v0;
    v3 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus);
    if (objc_msgSend(v3, "isAirDropAllowed"))
    {
      if (qword_1007B3FD0 != -1)
        swift_once(&qword_1007B3FD0, sub_100398F4C);
      v4 = type metadata accessor for Logger(0);
      v5 = sub_100221DF8(v4, (uint64_t)qword_1007BD820);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting bonjour browser", v8, 2u);
        swift_slowDealloc(v8, -1, -1);
      }

      v9 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent);
      v10 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController);
      v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger);
      v12 = swift_allocObject(&unk_100725A38, 24, 7);
      swift_unknownObjectWeakInit(v12 + 16, v2);
      objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourBrowser());
      v13 = v3;
      v14 = v9;
      v15 = v10;
      swift_retain(v11);
      v16 = sub_1003D5B50(v13, v14, v15, v11, (uint64_t)sub_1003AB080, v12);
      v17 = *(void **)(v2 + v1);
      *(_QWORD *)(v2 + v1) = v16;

      v18 = *(_QWORD *)(v2 + v1);
      if (v18)
      {
        v19 = v18 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate;
        *(_QWORD *)(v19 + 8) = &off_1007259E8;
        swift_unknownObjectWeakAssign(v19, v2);
        v20 = *(void **)(v2 + v1);
        if (v20)
        {
          v21 = v20;
          sub_1003D524C();

        }
      }
    }
  }
}

uint64_t sub_10039A8C0()
{
  int64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  int64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  char v59[24];
  _QWORD v60[3];
  char v61[24];
  char v62[24];
  char v63[32];

  v1 = v0;
  v2 = sub_100008384(&qword_1007B6640);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v55 - v7;
  v9 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v9);
  v11 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3FD0 != -1)
LABEL_37:
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100221DF8(v12, (uint64_t)qword_1007BD820);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Stopping SDAirDropEndpointService", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  if ((sub_100398FDC() & 1) != 0)
  {
    v17 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
    v18 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
    if (v18)
    {
      v19 = v18;
      sub_1003B3EA8();

      v18 = *(void **)(v1 + v17);
    }
    *(_QWORD *)(v1 + v17) = 0;

  }
  if ((sub_100398FDC() & 1) != 0)
  {
    v20 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
    v21 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
    if (v21)
    {
      v22 = v21;
      sub_1003D55D4();

      v21 = *(void **)(v1 + v20);
    }
    *(_QWORD *)(v1 + v20) = 0;

  }
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
  v24 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v1);
  type metadata accessor for MainActor(0);
  v25 = swift_retain(v24);
  v26 = static MainActor.shared.getter(v25);
  v27 = (_QWORD *)swift_allocObject(&unk_100725A60, 40, 7);
  v27[2] = v26;
  v27[3] = &protocol witness table for MainActor;
  v27[4] = v24;
  swift_release(v24);
  v28 = sub_100252EC0(v11, (uint64_t)&unk_1007B7740, (uint64_t)v27);
  swift_release(v28);
  v29 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints, v63, 1, 0);
  v30 = *v29;
  *v29 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v30);
  v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v62, 1, 0);
  v32 = *v31;
  *v31 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v32);
  sub_10039AE7C();
  v56 = v1;
  v33 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations, v61, 1, 0);
  v55 = v33;
  v34 = *v33;
  v35 = *(_QWORD *)(*v33 + 64);
  v57 = *v33 + 64;
  v36 = 1 << *(_BYTE *)(v34 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v11 = v37 & v35;
  v58 = (unint64_t)(v36 + 63) >> 6;
  v38 = enum case for SFAirDropSend.Failure.resolveFailure(_:);
  swift_bridgeObjectRetain(v34);
  v1 = 0;
  while (1)
  {
    if (v11)
    {
      v39 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v40 = v39 | (v1 << 6);
      goto LABEL_16;
    }
    v45 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v45 >= v58)
      goto LABEL_34;
    v46 = *(_QWORD *)(v57 + 8 * v45);
    ++v1;
    if (!v46)
    {
      v1 = v45 + 1;
      if (v45 + 1 >= v58)
        goto LABEL_34;
      v46 = *(_QWORD *)(v57 + 8 * v1);
      if (!v46)
      {
        v1 = v45 + 2;
        if (v45 + 2 >= v58)
          goto LABEL_34;
        v46 = *(_QWORD *)(v57 + 8 * v1);
        if (!v46)
        {
          v1 = v45 + 3;
          if (v45 + 3 >= v58)
            goto LABEL_34;
          v46 = *(_QWORD *)(v57 + 8 * v1);
          if (!v46)
            break;
        }
      }
    }
LABEL_33:
    v11 = (v46 - 1) & v46;
    v40 = __clz(__rbit64(v46)) + (v1 << 6);
LABEL_16:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(v34 + 56) + *(_QWORD *)(v3 + 72) * v40, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    v41 = type metadata accessor for SFAirDropSend.Failure(0);
    v42 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v43 = swift_allocError(v41, v42, 0, 0);
    *v44 = 1;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v44, v38, v41);
    v60[0] = v43;
    CheckedContinuation.resume(throwing:)(v60, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  v47 = v45 + 4;
  if (v47 < v58)
  {
    v46 = *(_QWORD *)(v57 + 8 * v47);
    if (!v46)
    {
      while (1)
      {
        v1 = v47 + 1;
        if (__OFADD__(v47, 1))
          goto LABEL_36;
        if (v1 >= v58)
          goto LABEL_34;
        v46 = *(_QWORD *)(v57 + 8 * v1);
        ++v47;
        if (v46)
          goto LABEL_33;
      }
    }
    v1 = v47;
    goto LABEL_33;
  }
LABEL_34:
  swift_release(v34);
  v48 = v56;
  v49 = (uint64_t *)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
  swift_beginAccess(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v60, 1, 0);
  v50 = *v49;
  *v49 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v50);
  v51 = *v55;
  *v55 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v51);
  v52 = (uint64_t *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables);
  swift_beginAccess(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables, v59, 1, 0);
  v53 = *v52;
  *v52 = (uint64_t)&_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease(v53);
}

uint64_t sub_10039AE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  __int128 v69;
  void *v70;
  void *v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[5];
  __int128 v76;
  __int128 v77;
  char v78[24];
  __int128 v79[3];
  char v80[24];
  char v81[32];

  v1 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v1);
  v65 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v64 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v57 - v7;
  __chkstk_darwin(v6);
  v62 = (char *)&v57 - v9;
  v10 = (_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs, v81, 1, 0);
  v11 = *v10;
  v61 = v10;
  *v10 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v11);
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v80, 0, 0);
  v13 = *v12;
  v15 = (_QWORD *)(*v12 + 64);
  v14 = *v15;
  v57 = v0;
  v58 = v15;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v14;
  isUniquelyReferenced_nonNull_native = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID;
  v66 = v13;
  swift_bridgeObjectRetain(v13);
  v60 = isUniquelyReferenced_nonNull_native;
  swift_beginAccess(isUniquelyReferenced_nonNull_native, v78, 0, 0);
  v20 = 0;
  v59 = (unint64_t)(v16 + 63) >> 6;
  v21 = &_swiftEmptyDictionarySingleton;
  v22 = (uint64_t)v62;
  while (1)
  {
    v70 = v21;
    if (v18)
    {
      v67 = (v18 - 1) & v18;
      v68 = v20;
      v23 = __clz(__rbit64(v18)) | (v20 << 6);
      goto LABEL_5;
    }
    v45 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v45 >= v59)
      goto LABEL_23;
    v46 = v58[v45];
    v47 = v20 + 1;
    if (!v46)
    {
      v47 = v20 + 2;
      if (v20 + 2 >= v59)
        goto LABEL_23;
      v46 = v58[v47];
      if (!v46)
      {
        v47 = v20 + 3;
        if (v20 + 3 >= v59)
          goto LABEL_23;
        v46 = v58[v47];
        if (!v46)
        {
          v47 = v20 + 4;
          if (v20 + 4 >= v59)
            goto LABEL_23;
          v46 = v58[v47];
          if (!v46)
            break;
        }
      }
    }
LABEL_22:
    v67 = (v46 - 1) & v46;
    v68 = v47;
    v23 = __clz(__rbit64(v46)) + (v47 << 6);
LABEL_5:
    sub_100340E40(*(_QWORD *)(v66 + 56) + 48 * v23, (uint64_t)v79);
    sub_10026D7AC(v79, &v76);
    v25 = *((_QWORD *)&v77 + 1);
    v24 = v77;
    sub_10023A834(&v76, v77);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    v30 = v64;
    v31 = *(void (**)(char *, uint64_t))(v64 + 8);
    v31(v8, v3);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    v33 = (uint64_t)v65;
    v32(v65, v60, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v3);
    sub_1004FB77C(v33, v27, v29, v22);
    swift_bridgeObjectRelease(v29);
    sub_10000D0F0(v33, &qword_1007B7280);
    v34 = v63;
    v32(v63, v22, v3);
    swift_beginAccess(v61, v75, 33, 0);
    sub_10045DC08((uint64_t)v8, v34);
    swift_endAccess(v75);
    v31(v8, v3);
    v32(v8, v22, v3);
    v69 = v77;
    v35 = v77;
    v36 = sub_10023A834(&v76, v77);
    *(_OWORD *)&v75[3] = v69;
    v37 = sub_100244348(v75);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v37, v36, v35);
    sub_10026EE60((__int128 *)v75, (uint64_t)v72);
    v38 = v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v70);
    v71 = v38;
    v39 = v73;
    v40 = v74;
    v41 = sub_10026EEE8((uint64_t)v72, v73);
    __chkstk_darwin(v41);
    v43 = (char *)&v57 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v44 + 16))(v43);
    sub_1003A9B70((uint64_t)v43, (uint64_t)v8, isUniquelyReferenced_nonNull_native, &v71, v39, v40);
    sub_10022E75C(v72);
    v21 = v71;
    swift_bridgeObjectRelease(0x8000000000000000);
    v31(v8, v3);
    v31((char *)v22, v3);
    sub_10022E75C(&v76);
    v18 = v67;
    v20 = v68;
  }
  v48 = v20 + 5;
  if (v20 + 5 < v59)
  {
    v46 = v58[v48];
    if (!v46)
    {
      while (1)
      {
        v47 = v48 + 1;
        if (__OFADD__(v48, 1))
          goto LABEL_29;
        if (v47 >= v59)
          goto LABEL_23;
        v46 = v58[v47];
        ++v48;
        if (v46)
          goto LABEL_22;
      }
    }
    v47 = v20 + 5;
    goto LABEL_22;
  }
LABEL_23:
  swift_release(v66);
  v22 = v57;
  v49 = (uint64_t *)(v57 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v57 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID, v79, 1, 0);
  v50 = *v49;
  *v49 = (uint64_t)v21;
  swift_bridgeObjectRelease(v50);
  isUniquelyReferenced_nonNull_native = sub_10039DE28();
  if (!((unint64_t)isUniquelyReferenced_nonNull_native >> 62))
  {
    v51 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_25;
  }
LABEL_30:
  if (isUniquelyReferenced_nonNull_native < 0)
    v56 = isUniquelyReferenced_nonNull_native;
  else
    v56 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
  v51 = _CocoaArrayWrapper.endIndex.getter(v56);
LABEL_25:
  swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
  result = sub_100449C98(v51);
  v53 = *(void (**)(void))(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
  if (v53)
  {
    v54 = *(_QWORD *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
    swift_retain(v54);
    v55 = sub_10039DE28();
    v53();
    sub_1002845F4((uint64_t)v53, v54);
    return swift_bridgeObjectRelease(v55);
  }
  return result;
}

uint64_t sub_10039B45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_10039B478, 0, 0);
}

uint64_t sub_10039B478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1007BDA2C);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10039B518;
    return sub_10039B570(*(_QWORD *)(v0 + 56), 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10039B518()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));

  return swift_task_switch(sub_10028A0E4, 0, 0);
}

uint64_t sub_10039B570(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 + 368) = a2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v2;
  v4 = sub_100008384(&qword_1007B7760);
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(_QWORD *)(v3 + 176) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 184) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 216) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 224) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 232) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 240) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 248) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 256) = swift_task_alloc(v7);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 264) = static AirDropActor.shared;
  return swift_task_switch(sub_10039B690, v8, 0);
}

uint64_t sub_10039B690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  const char *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  int v20;
  char *v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  const char **v25;
  double v26;
  uint64_t v27;
  Swift::Int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116[2];

  v1 = v0 + 16;
  v2 = v0 + 144;
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 272) = sub_100221DF8(v4, (uint64_t)qword_1007BD820);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(const char **)(v0 + 152);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v116[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(v9);
    v13 = Array.description.getter(v12, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v9);
    v16 = v13;
    v2 = v0 + 144;
    *(_QWORD *)(v0 + 144) = sub_100228BD8(v16, (unint64_t)v15, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v10 + 4);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v9, 2);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Endpoints discovered %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    v17 = v11;
    v1 = v0 + 16;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 152), 2);
  }

  v18 = *(const char **)(v0 + 152);
  v19 = *(void **)(v0 + 160);
  v20 = *(unsigned __int8 *)(v0 + 368);
  swift_bridgeObjectRetain(v18);
  v21 = v19;
  v22 = (const char *)sub_1003AAA60((uint64_t)v18, (uint64_t)v21);

  swift_bridgeObjectRelease(v18);
  v23 = (const char *)sub_10022D214((uint64_t)v22);
  *(_QWORD *)(v0 + 280) = v23;
  swift_bridgeObjectRelease(v22);
  v24 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints;
  *(_QWORD *)(v0 + 288) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints;
  v25 = (const char **)&v21[v24];
  *(_QWORD *)&v26 = swift_beginAccess(&v21[v24], v1, 0, 0).n128_u64[0];
  swift_bridgeObjectRetain(*v25, v26);
  v28 = sub_1003A9680(v27, v20);
  *(_QWORD *)(v0 + 296) = v28;
  *(_QWORD *)(v0 + 128) = v23;
  v29 = *(_BYTE *)(v28 + 32);
  *(_BYTE *)(v0 + 369) = v29;
  v30 = -1;
  v31 = -1 << v29;
  if (-(-1 << v29) < 64)
    v30 = ~(-1 << -(char)v31);
  v32 = v30 & *(_QWORD *)(v28 + 56);
  swift_bridgeObjectRetain(v23);
  if (v32)
  {
    v33 = 0;
    v34 = __clz(__rbit64(v32));
    v35 = (v32 - 1) & v32;
    goto LABEL_10;
  }
  v61 = 63 - v31;
  if ((unint64_t)(63 - v31) > 0x7F)
  {
    v62 = *(_QWORD *)(v28 + 64);
    if (v62)
    {
      v33 = 1;
LABEL_18:
      v35 = (v62 - 1) & v62;
      v34 = __clz(__rbit64(v62)) + (v33 << 6);
LABEL_10:
      *(_QWORD *)(v0 + 304) = v33;
      *(_QWORD *)(v0 + 312) = v35;
      v36 = *(_QWORD *)(v0 + 280);
      v38 = *(_QWORD *)(v0 + 248);
      v37 = *(_QWORD *)(v0 + 256);
      sub_100244384(*(_QWORD *)(v28 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 184) + 72) * v34, v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100221DB4(v37, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v39 = sub_1004555E0(v38, v36);
      v40 = *(_QWORD *)(v0 + 248);
      if ((v39 & 1) != 0)
      {
        v41 = sub_100244384(v40, *(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.default.getter(v42);
        v44 = os_log_type_enabled(v42, v43);
        v45 = *(_QWORD *)(v0 + 240);
        if (v44)
        {
          v46 = (uint8_t *)swift_slowAlloc(12, -1);
          v47 = swift_slowAlloc(32, -1);
          v116[0] = v47;
          *(_DWORD *)v46 = 136315138;
          sub_1002B26F0();
          v49 = (const char *)v48;
          *(_QWORD *)(v0 + 120) = sub_100228BD8(v50, v48, v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v46 + 4);
          swift_bridgeObjectRelease(v49);
          sub_1002443C8(v45, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Endpoint updated %s", v46, 0xCu);
          swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v46, -1, -1);
        }
        else
        {
          sub_1002443C8(*(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        v63 = *(_QWORD *)(v0 + 224);
        v64 = *(_QWORD *)(v0 + 232);
        v65 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288);
        sub_100244384(*(_QWORD *)(v0 + 248), v63, type metadata accessor for SDAirDropDiscoveredEndpoint);
        swift_beginAccess(v65, v0 + 88, 33, 0);
        sub_10045DA0C(v64, v63);
        swift_endAccess(v0 + 88);
        sub_1002443C8(v64, type metadata accessor for SDAirDropDiscoveredEndpoint);
        v66 = (_QWORD *)swift_task_alloc(dword_1007BDA3C);
        *(_QWORD *)(v0 + 320) = v66;
        *v66 = v0;
        v66[1] = sub_10039C1B8;
        return sub_10039E648(*(_QWORD *)(v0 + 248), *(_BYTE *)(v0 + 368));
      }
      else
      {
        v51 = sub_100244384(v40, *(_QWORD *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        v52 = Logger.logObject.getter(v51);
        v53 = static os_log_type_t.default.getter(v52);
        v54 = os_log_type_enabled(v52, v53);
        v55 = *(_QWORD *)(v0 + 216);
        if (v54)
        {
          v56 = (uint8_t *)swift_slowAlloc(12, -1);
          v57 = swift_slowAlloc(32, -1);
          v116[0] = v57;
          *(_DWORD *)v56 = 136315138;
          sub_1002B26F0();
          v59 = (const char *)v58;
          *(_QWORD *)(v0 + 112) = sub_100228BD8(v60, v58, v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v56 + 4);
          swift_bridgeObjectRelease(v59);
          sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Endpoint disappeared %s", v56, 0xCu);
          swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v57, -1, -1);
          swift_slowDealloc(v56, -1, -1);
        }
        else
        {
          sub_1002443C8(*(_QWORD *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        v68 = *(_QWORD *)(v0 + 248);
        v69 = *(_QWORD *)(v0 + 168);
        swift_beginAccess(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288), v0 + 64, 33, 0);
        sub_100472B6C(v68, v69);
        swift_endAccess(v0 + 64);
        sub_10000D0F0(v69, &qword_1007B7760);
        v70 = (_QWORD *)swift_task_alloc(dword_1007BDA34);
        *(_QWORD *)(v0 + 328) = v70;
        *v70 = v0;
        v70[1] = sub_10039CB18;
        return sub_10039F5C8(*(_QWORD *)(v0 + 248));
      }
    }
    if (v61 >= 0xC0)
    {
      v62 = *(_QWORD *)(v28 + 72);
      if (v62)
      {
        v33 = 2;
        goto LABEL_18;
      }
      if (v61 >= 0x100)
      {
        v62 = *(_QWORD *)(v28 + 80);
        if (v62)
        {
          v33 = 3;
          goto LABEL_18;
        }
        if (v61 >= 0x140)
        {
          v62 = *(_QWORD *)(v28 + 88);
          if (v62)
          {
            v33 = 4;
            goto LABEL_18;
          }
          v71 = 0;
          v72 = v61 >> 6;
          if (v72 <= 5)
            v72 = 5;
          v73 = v72 - 5;
          while (v73 != v71)
          {
            v62 = *(_QWORD *)(v28 + 96 + 8 * v71++);
            if (v62)
            {
              v33 = v71 + 4;
              goto LABEL_18;
            }
          }
        }
      }
    }
  }
  v74 = *(const char **)(v0 + 280);
  swift_release(v28);
  swift_bridgeObjectRelease(v74);
  v75 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 336) = v75;
  v76 = *(_BYTE *)(v75 + 32);
  *(_BYTE *)(v0 + 370) = v76;
  v77 = -1;
  v78 = -1 << v76;
  if (-v78 < 64)
    v77 = ~(-1 << -(char)v78);
  v79 = v77 & *(_QWORD *)(v75 + 56);
  if (!v79)
  {
    v101 = 63 - v78;
    if (v101 > 0x7F)
    {
      v102 = *(_QWORD *)(v75 + 64);
      if (v102)
      {
        v80 = 1;
LABEL_49:
        v82 = (v102 - 1) & v102;
        v81 = __clz(__rbit64(v102)) + (v80 << 6);
        goto LABEL_42;
      }
      if (v101 >= 0xC0)
      {
        v102 = *(_QWORD *)(v75 + 72);
        if (v102)
        {
          v80 = 2;
          goto LABEL_49;
        }
        if (v101 >= 0x100)
        {
          v102 = *(_QWORD *)(v75 + 80);
          if (v102)
          {
            v80 = 3;
            goto LABEL_49;
          }
          if (v101 >= 0x140)
          {
            v102 = *(_QWORD *)(v75 + 88);
            if (v102)
            {
              v80 = 4;
              goto LABEL_49;
            }
            v103 = 0;
            v104 = v101 >> 6;
            if (v104 <= 5)
              v104 = 5;
            v105 = v104 - 5;
            while (v105 != v103)
            {
              v102 = *(_QWORD *)(v75 + 96 + 8 * v103++);
              if (v102)
              {
                v80 = v103 + 4;
                goto LABEL_49;
              }
            }
          }
        }
      }
    }
    v107 = *(_QWORD *)(v0 + 248);
    v106 = *(_QWORD *)(v0 + 256);
    v109 = *(_QWORD *)(v0 + 232);
    v108 = *(_QWORD *)(v0 + 240);
    v111 = *(_QWORD *)(v0 + 216);
    v110 = *(_QWORD *)(v0 + 224);
    v113 = *(_QWORD *)(v0 + 200);
    v112 = *(_QWORD *)(v0 + 208);
    v114 = *(_QWORD *)(v0 + 192);
    v115 = *(_QWORD *)(v0 + 168);
    swift_release(v75);
    sub_10039AE7C();
    swift_task_dealloc(v106);
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v80 = 0;
  v81 = __clz(__rbit64(v79));
  v82 = (v79 - 1) & v79;
LABEL_42:
  *(_QWORD *)(v0 + 344) = v80;
  *(_QWORD *)(v0 + 352) = v82;
  v84 = *(_QWORD *)(v0 + 200);
  v83 = *(_QWORD *)(v0 + 208);
  v85 = *(_QWORD *)(v0 + 192);
  sub_100244384(*(_QWORD *)(v75 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 184) + 72) * v81, v83, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100221DB4(v83, v84, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v86 = sub_100244384(v84, v85, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v87 = Logger.logObject.getter(v86);
  v88 = static os_log_type_t.default.getter(v87);
  v89 = os_log_type_enabled(v87, v88);
  v90 = *(_QWORD *)(v0 + 192);
  if (v89)
  {
    v91 = (uint8_t *)swift_slowAlloc(12, -1);
    v92 = swift_slowAlloc(32, -1);
    *(_DWORD *)v91 = 136315138;
    v116[0] = v92;
    sub_1002B26F0();
    v93 = v2;
    v95 = (const char *)v94;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v96, v94, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v93, v91 + 4);
    swift_bridgeObjectRelease(v95);
    sub_1002443C8(v90, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Endpoint discovered %s", v91, 0xCu);
    swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v91, -1, -1);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  v97 = *(_QWORD *)(v0 + 224);
  v98 = *(_QWORD *)(v0 + 232);
  v99 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288);
  sub_100244384(*(_QWORD *)(v0 + 200), v97, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess(v99, v0 + 40, 33, 0);
  sub_10045DA0C(v98, v97);
  swift_endAccess(v0 + 40);
  sub_1002443C8(v98, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v100 = (_QWORD *)swift_task_alloc(dword_1007BDA44);
  *(_QWORD *)(v0 + 360) = v100;
  *v100 = v0;
  v100[1] = sub_10039CB70;
  return sub_1003A08E0(*(_QWORD *)(v0 + 200), *(_BYTE *)(v0 + 368));
}

uint64_t sub_10039C1B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 320));
  return swift_task_switch(sub_10039C210, v1, 0);
}

uint64_t sub_10039C210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int64_t v45;
  const char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  unint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 168);
  sub_100472B6C(v1, v2);
  sub_10000D0F0(v2, &qword_1007B7760);
  v3 = sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  if (v5)
  {
    v6 = (v5 - 1) & v5;
    v7 = __clz(__rbit64(v5)) | (v4 << 6);
    result = *(_QWORD *)(v0 + 296);
    goto LABEL_3;
  }
  v34 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  v35 = (unint64_t)((1 << *(_BYTE *)(v0 + 369)) + 63) >> 6;
  result = *(_QWORD *)(v0 + 296);
  if (v34 >= v35)
    goto LABEL_26;
  v36 = result + 56;
  v37 = *(_QWORD *)(result + 56 + 8 * v34);
  ++v4;
  if (v37)
  {
LABEL_11:
    v6 = (v37 - 1) & v37;
    v7 = __clz(__rbit64(v37)) + (v4 << 6);
LABEL_3:
    *(_QWORD *)(v0 + 304) = v4;
    *(_QWORD *)(v0 + 312) = v6;
    v9 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 256);
    sub_100244384(*(_QWORD *)(result + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 184) + 72) * v7, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4(v10, v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v12 = sub_1004555E0(v11, v9);
    v13 = *(_QWORD *)(v0 + 248);
    if ((v12 & 1) != 0)
    {
      v14 = sub_100244384(v13, *(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      v17 = os_log_type_enabled(v15, v16);
      v18 = *(_QWORD *)(v0 + 240);
      if (v17)
      {
        v19 = (uint8_t *)swift_slowAlloc(12, -1);
        v20 = swift_slowAlloc(32, -1);
        v85 = v20;
        *(_DWORD *)v19 = 136315138;
        sub_1002B26F0();
        v22 = (const char *)v21;
        *(_QWORD *)(v0 + 120) = sub_100228BD8(v23, v21, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v19 + 4);
        swift_bridgeObjectRelease(v22);
        sub_1002443C8(v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Endpoint updated %s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      v38 = *(_QWORD *)(v0 + 224);
      v39 = *(_QWORD *)(v0 + 232);
      v40 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288);
      sub_100244384(*(_QWORD *)(v0 + 248), v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess(v40, v0 + 88, 33, 0);
      sub_10045DA0C(v39, v38);
      swift_endAccess(v0 + 88);
      sub_1002443C8(v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v41 = (_QWORD *)swift_task_alloc(dword_1007BDA3C);
      *(_QWORD *)(v0 + 320) = v41;
      *v41 = v0;
      v41[1] = sub_10039C1B8;
      return sub_10039E648(*(_QWORD *)(v0 + 248), *(_BYTE *)(v0 + 368));
    }
    else
    {
      v24 = sub_100244384(v13, *(_QWORD *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter(v25);
      v27 = os_log_type_enabled(v25, v26);
      v28 = *(_QWORD *)(v0 + 216);
      if (v27)
      {
        v29 = (uint8_t *)swift_slowAlloc(12, -1);
        v30 = swift_slowAlloc(32, -1);
        v85 = v30;
        *(_DWORD *)v29 = 136315138;
        sub_1002B26F0();
        v32 = (const char *)v31;
        *(_QWORD *)(v0 + 112) = sub_100228BD8(v33, v31, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v29 + 4);
        swift_bridgeObjectRelease(v32);
        sub_1002443C8(v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Endpoint disappeared %s", v29, 0xCu);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v29, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      v42 = *(_QWORD *)(v0 + 248);
      v43 = *(_QWORD *)(v0 + 168);
      swift_beginAccess(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288), v0 + 64, 33, 0);
      sub_100472B6C(v42, v43);
      swift_endAccess(v0 + 64);
      sub_10000D0F0(v43, &qword_1007B7760);
      v44 = (_QWORD *)swift_task_alloc(dword_1007BDA34);
      *(_QWORD *)(v0 + 328) = v44;
      *v44 = v0;
      v44[1] = sub_10039CB18;
      return sub_10039F5C8(*(_QWORD *)(v0 + 248));
    }
  }
  v4 = v34 + 1;
  if (v34 + 1 >= v35)
    goto LABEL_26;
  v37 = *(_QWORD *)(v36 + 8 * v4);
  if (v37)
    goto LABEL_11;
  v4 = v34 + 2;
  if (v34 + 2 >= v35)
    goto LABEL_26;
  v37 = *(_QWORD *)(v36 + 8 * v4);
  if (v37)
    goto LABEL_11;
  v45 = v34 + 3;
  if (v45 >= v35)
  {
LABEL_26:
    v46 = *(const char **)(v0 + 280);
    swift_release(result);
    swift_bridgeObjectRelease(v46);
    v3 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 336) = v3;
    v47 = *(_BYTE *)(v3 + 32);
    *(_BYTE *)(v0 + 370) = v47;
    v48 = -1;
    v49 = -1 << v47;
    if (-v49 < 64)
      v48 = ~(-1 << -(char)v49);
    v50 = v48 & *(_QWORD *)(v3 + 56);
    if (v50)
    {
      v51 = 0;
      v52 = __clz(__rbit64(v50));
      v53 = (v50 - 1) & v50;
LABEL_30:
      *(_QWORD *)(v0 + 344) = v51;
      *(_QWORD *)(v0 + 352) = v53;
      v55 = *(_QWORD *)(v0 + 200);
      v54 = *(_QWORD *)(v0 + 208);
      v56 = *(_QWORD *)(v0 + 192);
      sub_100244384(*(_QWORD *)(v3 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 184) + 72) * v52, v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100221DB4(v54, v55, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v57 = sub_100244384(v55, v56, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter(v58);
      v60 = os_log_type_enabled(v58, v59);
      v61 = *(_QWORD *)(v0 + 192);
      if (v60)
      {
        v62 = (uint8_t *)swift_slowAlloc(12, -1);
        v63 = swift_slowAlloc(32, -1);
        v85 = v63;
        *(_DWORD *)v62 = 136315138;
        sub_1002B26F0();
        v65 = (const char *)v64;
        *(_QWORD *)(v0 + 136) = sub_100228BD8(v66, v64, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v62 + 4);
        swift_bridgeObjectRelease(v65);
        sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Endpoint discovered %s", v62, 0xCu);
        swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v63, -1, -1);
        swift_slowDealloc(v62, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      v67 = *(_QWORD *)(v0 + 224);
      v68 = *(_QWORD *)(v0 + 232);
      v69 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288);
      sub_100244384(*(_QWORD *)(v0 + 200), v67, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess(v69, v0 + 40, 33, 0);
      sub_10045DA0C(v68, v67);
      swift_endAccess(v0 + 40);
      sub_1002443C8(v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v70 = (_QWORD *)swift_task_alloc(dword_1007BDA44);
      *(_QWORD *)(v0 + 360) = v70;
      *v70 = v0;
      v70[1] = sub_10039CB70;
      return sub_1003A08E0(*(_QWORD *)(v0 + 200), *(_BYTE *)(v0 + 368));
    }
    v4 = 63 - v49;
    if (v4 <= 0x7F)
      goto LABEL_54;
    v71 = *(_QWORD *)(v3 + 64);
    if (v71)
    {
      v51 = 1;
LABEL_37:
      v53 = (v71 - 1) & v71;
      v52 = __clz(__rbit64(v71)) + (v51 << 6);
      goto LABEL_30;
    }
    if (v4 < 0xC0)
      goto LABEL_54;
    v71 = *(_QWORD *)(v3 + 72);
    if (v71)
    {
      v51 = 2;
      goto LABEL_37;
    }
    if (v4 < 0x100)
      goto LABEL_54;
    v71 = *(_QWORD *)(v3 + 80);
    if (v71)
    {
      v51 = 3;
      goto LABEL_37;
    }
    if (v4 < 0x140)
    {
LABEL_54:
      v76 = *(_QWORD *)(v0 + 248);
      v75 = *(_QWORD *)(v0 + 256);
      v78 = *(_QWORD *)(v0 + 232);
      v77 = *(_QWORD *)(v0 + 240);
      v80 = *(_QWORD *)(v0 + 216);
      v79 = *(_QWORD *)(v0 + 224);
      v82 = *(_QWORD *)(v0 + 200);
      v81 = *(_QWORD *)(v0 + 208);
      v83 = *(_QWORD *)(v0 + 192);
      v84 = *(_QWORD *)(v0 + 168);
      swift_release(v3);
      sub_10039AE7C();
      swift_task_dealloc(v75);
      swift_task_dealloc(v76);
      swift_task_dealloc(v77);
      swift_task_dealloc(v78);
      swift_task_dealloc(v79);
      swift_task_dealloc(v80);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v71 = *(_QWORD *)(v3 + 88);
    if (v71)
    {
      v51 = 4;
      goto LABEL_37;
    }
LABEL_48:
    v72 = 0;
    v73 = v4 >> 6;
    if (v73 <= 5)
      v73 = 5;
    v74 = v73 - 5;
    while (v74 != v72)
    {
      v71 = *(_QWORD *)(v3 + 96 + 8 * v72++);
      if (v71)
      {
        v51 = v72 + 4;
        goto LABEL_37;
      }
    }
    goto LABEL_54;
  }
  v37 = *(_QWORD *)(v36 + 8 * v45);
  if (v37)
  {
    v4 = v45;
    goto LABEL_11;
  }
  while (1)
  {
    v4 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if ((uint64_t)v4 >= v35)
      goto LABEL_26;
    v37 = *(_QWORD *)(v36 + 8 * v4);
    ++v45;
    if (v37)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10039CB18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_1003AB3FC, v1, 0);
}

uint64_t sub_10039CB70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_10039CBC8, v1, 0);
}

uint64_t sub_10039CBC8()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  result = sub_1002443C8(*(_QWORD *)(v0 + 200), type metadata accessor for SDAirDropDiscoveredEndpoint);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  if (!v3)
  {
    v23 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
    }
    else
    {
      v24 = (unint64_t)((1 << *(_BYTE *)(v0 + 370)) + 63) >> 6;
      result = *(_QWORD *)(v0 + 336);
      if (v23 >= v24)
        goto LABEL_21;
      v25 = result + 56;
      v26 = *(_QWORD *)(result + 56 + 8 * v23);
      ++v2;
      if (v26)
      {
LABEL_10:
        v4 = (v26 - 1) & v26;
        v5 = __clz(__rbit64(v26)) + (v2 << 6);
        goto LABEL_3;
      }
      v2 = v23 + 1;
      if (v23 + 1 >= v24)
        goto LABEL_21;
      v26 = *(_QWORD *)(v25 + 8 * v2);
      if (v26)
        goto LABEL_10;
      v2 = v23 + 2;
      if (v23 + 2 >= v24)
        goto LABEL_21;
      v26 = *(_QWORD *)(v25 + 8 * v2);
      if (v26)
        goto LABEL_10;
      v27 = v23 + 3;
      if (v27 >= v24)
      {
LABEL_21:
        v29 = *(_QWORD *)(v0 + 248);
        v28 = *(_QWORD *)(v0 + 256);
        v31 = *(_QWORD *)(v0 + 232);
        v30 = *(_QWORD *)(v0 + 240);
        v33 = *(_QWORD *)(v0 + 216);
        v32 = *(_QWORD *)(v0 + 224);
        v35 = *(_QWORD *)(v0 + 200);
        v34 = *(_QWORD *)(v0 + 208);
        v36 = *(_QWORD *)(v0 + 192);
        v37 = *(_QWORD *)(v0 + 168);
        swift_release(result);
        sub_10039AE7C();
        swift_task_dealloc(v28);
        swift_task_dealloc(v29);
        swift_task_dealloc(v30);
        swift_task_dealloc(v31);
        swift_task_dealloc(v32);
        swift_task_dealloc(v33);
        swift_task_dealloc(v34);
        swift_task_dealloc(v35);
        swift_task_dealloc(v36);
        swift_task_dealloc(v37);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v26 = *(_QWORD *)(v25 + 8 * v27);
      if (v26)
      {
        v2 = v27;
        goto LABEL_10;
      }
      while (1)
      {
        v2 = v27 + 1;
        if (__OFADD__(v27, 1))
          break;
        if (v2 >= v24)
          goto LABEL_21;
        v26 = *(_QWORD *)(v25 + 8 * v2);
        ++v27;
        if (v26)
          goto LABEL_10;
      }
    }
    __break(1u);
    return result;
  }
  v4 = (v3 - 1) & v3;
  v5 = __clz(__rbit64(v3)) | (v2 << 6);
  result = *(_QWORD *)(v0 + 336);
LABEL_3:
  *(_QWORD *)(v0 + 344) = v2;
  *(_QWORD *)(v0 + 352) = v4;
  v7 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);
  sub_100244384(*(_QWORD *)(result + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 184) + 72) * v5, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100221DB4(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v9 = sub_100244384(v7, v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 192);
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v38 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_1002B26F0();
    v17 = (const char *)v16;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v18, v16, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v14 + 4);
    swift_bridgeObjectRelease(v17);
    sub_1002443C8(v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Endpoint discovered %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  v19 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 232);
  v21 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 288);
  sub_100244384(*(_QWORD *)(v0 + 200), v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess(v21, v0 + 40, 33, 0);
  sub_10045DA0C(v20, v19);
  swift_endAccess(v0 + 40);
  sub_1002443C8(v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v22 = (_QWORD *)swift_task_alloc(dword_1007BDA44);
  *(_QWORD *)(v0 + 360) = v22;
  *v22 = v0;
  v22[1] = sub_10039CB70;
  return sub_1003A08E0(*(_QWORD *)(v0 + 200), *(_BYTE *)(v0 + 368));
}

uint64_t sub_10039CF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_10039CFAC, 0, 0);
}

uint64_t sub_10039CFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1007BDA2C);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10039D04C;
    return sub_10039B570(*(_QWORD *)(v0 + 56), 1);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10039D04C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));

  return swift_task_switch(sub_10028B668, 0, 0);
}

uint64_t sub_10039D0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[8] = a4;
  v5 = sub_100008384(&qword_1007B68A0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[10] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10039D134, v7, v8);
}

uint64_t sub_10039D134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  char *v16;
  _UNKNOWN **v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  swift_release(*(_QWORD *)(v0 + 80));
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BD820);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting classroom browser", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);

  v8 = v6 + 16;
  swift_beginAccess(v8, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8, v9);
  v11 = swift_allocObject(&unk_100725A38, 24, 7);
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v8, v12);
  swift_unknownObjectWeakInit(v11 + 16, v13);

  v14 = objc_allocWithZone((Class)type metadata accessor for SDAirDropClassroomBrowser());
  swift_retain(v11);
  v15 = (char *)sub_10028AC24((uint64_t)sub_1003AA6E8, v11);
  v16 = &v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_delegate];
  v17 = &off_1007259E8;
  if (!Strong)
    v17 = 0;
  *((_QWORD *)v16 + 1) = v17;
  swift_unknownObjectWeakAssign(v16, Strong);

  swift_release_n(v11, 2);
  v18 = v15;
  sub_10028978C();

  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
  v20 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(v8, v0 + 40, 0, 0);
  v22 = (void *)swift_unknownObjectWeakLoadStrong(v8, v21);
  swift_unknownObjectWeakInit(v20 + 16, v22);

  v23 = qword_1007B3D98;
  v24 = v18;
  swift_retain(v20);
  if (v23 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = static AirDropActor.shared;
  v27 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v28 = (_QWORD *)swift_allocObject(&unk_100725B00, 56, 7);
  v28[2] = v26;
  v28[3] = v27;
  v28[4] = v20;
  v28[5] = v24;
  v28[6] = &off_10071FA10;
  swift_retain(v26);
  swift_release(v20);
  v29 = sub_100252EE0(v25, (uint64_t)&unk_1007BDA10, (uint64_t)v28);
  swift_release(v29);

  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039D444(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v19[24];

  v8 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(a2, v19, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2, v13);
  swift_unknownObjectWeakInit(v12 + 16, Strong);

  v15 = (_QWORD *)swift_allocObject(a3, 48, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v12;
  v15[5] = a1;
  swift_bridgeObjectRetain(a1);
  v16 = sub_100252EE0((uint64_t)v10, a4, (uint64_t)v15);
  return swift_release(v16);
}

uint64_t sub_10039D570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_10039D58C, 0, 0);
}

uint64_t sub_10039D58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1007BDA2C);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10039D04C;
    return sub_10039B570(*(_QWORD *)(v0 + 56), 2);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10039D62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10039D698, static AirDropActor.shared, 0);
}

uint64_t sub_10039D698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  v4 = (void *)Strong;
  if (Strong)
  {
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    v6 = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser) = v6;
    swift_unknownObjectRetain(v6);
    swift_unknownObjectRelease(v5);

  }
  **(_BYTE **)(v0 + 40) = v4 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039D724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[8] = a4;
  v5 = sub_100008384(&qword_1007B68A0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[10] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[11] = v7;
  v4[12] = v8;
  return swift_task_switch(sub_10039D7B4, v7, v8);
}

uint64_t sub_10039D7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 112) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser;
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    return swift_task_switch(sub_10039D9B0, static AirDropActor.shared, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 80));
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 64) + 16;
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    v8 = swift_allocObject(&unk_100725A38, 24, 7);
    swift_beginAccess(v6, v0 + 40, 0, 0);
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v6, v9);
    swift_unknownObjectWeakInit(v8 + 16, v10);

    v11 = qword_1007B3D98;
    swift_retain(v8);
    if (v11 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = static AirDropActor.shared;
    v14 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v15 = (_QWORD *)swift_allocObject(&unk_100725A88, 40, 7);
    v15[2] = v13;
    v15[3] = v14;
    v15[4] = v8;
    swift_retain(v13);
    swift_release(v8);
    v16 = sub_100252EE0(v12, (uint64_t)&unk_1007BD9E0, (uint64_t)v15);
    swift_release(v16);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10039D9B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0[13] + v0[14]);
  v0[15] = v1;
  if (v1)
  {
    v2 = v0[11];
    v3 = v0[12];
    swift_unknownObjectRetain(v1);
    v4 = sub_10039DA0C;
    v5 = v2;
    v6 = v3;
  }
  else
  {
    v5 = v0[11];
    v6 = v0[12];
    v4 = sub_10039DBC8;
  }
  return swift_task_switch(v4, v5, v6);
}

uint64_t sub_10039DA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 80);

  swift_release(v2);
  v3 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_browser;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_browser);
  v5 = *(_QWORD *)(v0 + 120);
  if (v4)
  {
    objc_msgSend(v4, "invalidate");
    v6 = *(void **)(v1 + v3);
    *(_QWORD *)(v1 + v3) = 0;
    swift_unknownObjectRelease(v5);

  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 120));
  }
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 64) + 16;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(v8, v0 + 40, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8, v11);
  swift_unknownObjectWeakInit(v10 + 16, Strong);

  v13 = qword_1007B3D98;
  swift_retain(v10);
  if (v13 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = static AirDropActor.shared;
  v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v17 = (_QWORD *)swift_allocObject(&unk_100725A88, 40, 7);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v10;
  swift_retain(v15);
  swift_release(v10);
  v18 = sub_100252EE0(v14, (uint64_t)&unk_1007BD9E0, (uint64_t)v17);
  swift_release(v18);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039DBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 80);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 64) + 16;
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v5 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(v3, v0 + 40, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v6);
  swift_unknownObjectWeakInit(v5 + 16, Strong);

  v8 = qword_1007B3D98;
  swift_retain(v5);
  if (v8 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = static AirDropActor.shared;
  v11 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v12 = (_QWORD *)swift_allocObject(&unk_100725A88, 40, 7);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v5;
  swift_retain(v10);
  swift_release(v5);
  v13 = sub_100252EE0(v9, (uint64_t)&unk_1007BD9E0, (uint64_t)v12);
  swift_release(v13);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039DD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10039DDA8, static AirDropActor.shared, 0);
}

uint64_t sub_10039DDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  v4 = (void *)Strong;
  if (Strong)
  {
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    *v5 = 0;
    v5[1] = 0;
    swift_unknownObjectRelease(v6);

  }
  **(_BYTE **)(v0 + 40) = v4 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039DE28()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint8_t *v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93[3];
  _QWORD v94[4];
  char v95[32];

  v87 = type metadata accessor for UUID(0);
  v89 = *(uint8_t **)(v87 - 8);
  __chkstk_darwin(v87);
  v2 = (char *)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for NWEndpoint(0);
  v88 = *(uint8_t **)(v90 - 8);
  v3 = __chkstk_darwin(v90);
  v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v82 - v6);
  v8 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered];
  swift_beginAccess(&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered], v95, 0, 0);
  v9 = *(_QWORD *)v8;
  v10 = v0;
  v11 = swift_bridgeObjectRetain(v9);
  v12 = sub_1003AA0E0(v11, (uint64_t)v10);

  v94[0] = v12;
  swift_bridgeObjectRetain(v12);
  sub_1003A7DE4(v94);
  v86 = v8;
  swift_bridgeObjectRelease(v12);
  v13 = v94[0];
  v93[0] = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(v94[0] + 16);
  if (v14)
  {
    v84 = 0;
    v85 = v10;
    v15 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    v16 = v10;
    swift_retain(v13);
    swift_beginAccess(v15, v94, 0, 0);
    v83 = v13;
    v17 = (uint64_t *)(v13 + 72);
    do
    {
      v19 = *(v17 - 2);
      v20 = *v17;
      sub_10023A834(v17 - 5, v19);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      v21 = v89;
      v22 = v87;
      (*((void (**)(char *, char *, uint64_t))v89 + 2))(v2, v15, v87);
      sub_1004FBDB0((uint64_t)v2, v7);
      (*((void (**)(char *, uint64_t))v21 + 1))(v2, v22);
      v23 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v88 + 1);
      v24 = v90;
      v25 = v23(v5, v90);
      v26 = NWEndpoint.nw.getter(v25);
      v27 = v23((char *)v7, v24);
      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        v29 = *(_QWORD *)((v93[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v28 = *(_QWORD *)((v93[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v29 >= v28 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v18);
      }
      v17 += 6;
      --v14;
    }
    while (v14);
    v13 = v83;
    swift_release(v83);
    v30 = (_QWORD *)v93[0];
    v10 = v85;
  }
  else
  {
    v31 = v10;
    v30 = _swiftEmptyArrayStorage;
  }
  swift_release(v13);

  v32 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables];
  swift_beginAccess(&v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables], v93, 0, 0);
  v33 = *(_QWORD *)v32;
  v34 = swift_bridgeObjectRetain(*(_QWORD *)v32);
  v35 = sub_1003945C8(v34);
  swift_bridgeObjectRelease(v33);
  v92 = v30;
  swift_bridgeObjectRetain(v35);
  sub_100342F88(v35);
  v36 = (uint64_t)v92;
  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0)
      v81 = v35;
    else
      v81 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v37 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease(v35);
  }
  else
  {
    v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v35);
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  if (v37)
  {
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v39 = type metadata accessor for Logger(0);
    sub_100221DF8(v39, (uint64_t)qword_1007BD820);
    v40 = v10;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v89 = (uint8_t *)v36;
      v45 = v44;
      v92 = (_QWORD *)v44;
      *(_DWORD *)v43 = 136315138;
      v88 = v43 + 4;
      v46 = *(_QWORD *)v32;
      v47 = v10;
      v48 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v49 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v50 = swift_bridgeObjectRetain(v46);
      v51 = v48;
      v10 = v47;
      v52 = Dictionary.Values.description.getter(v50, v51, v90, v49);
      v54 = v53;
      swift_bridgeObjectRelease(v46);
      v55 = v52;
      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
      v91 = sub_100228BD8(v55, v54, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v88);

      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Additional receive display endpoints %s", v43, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      v56 = v45;
      v36 = (uint64_t)v89;
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

    }
  }
  if (p_opt_class_meths[506] != (__objc2_meth_list *)-1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v57 = type metadata accessor for Logger(0);
  v58 = sub_100221DF8(v57, (uint64_t)qword_1007BD820);
  v59 = v10;
  v90 = v58;
  v60 = Logger.logObject.getter(v59);
  v61 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc(12, -1);
    v63 = swift_slowAlloc(32, -1);
    v92 = (_QWORD *)v63;
    *(_DWORD *)v62 = 136315138;
    v89 = v62 + 4;
    v64 = v36;
    v65 = *(_QWORD *)v86;
    swift_bridgeObjectRetain(*(_QWORD *)v86);
    v66 = sub_100008384(&qword_1007B52D0);
    v67 = Dictionary.description.getter(v65, &type metadata for String, v66, &protocol witness table for String);
    v69 = v68;
    v70 = v65;
    v36 = v64;
    swift_bridgeObjectRelease(v70);
    v91 = sub_100228BD8(v67, v69, (uint64_t *)&v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v89);

    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "All unfiltered endpoints: %s", v62, 0xCu);
    swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v62, -1, -1);

  }
  else
  {

  }
  v71 = swift_bridgeObjectRetain_n(v36, 2);
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = (uint8_t *)swift_slowAlloc(12, -1);
    v75 = swift_slowAlloc(32, -1);
    v92 = (_QWORD *)v75;
    *(_DWORD *)v74 = 136315138;
    swift_bridgeObjectRetain(v36);
    v76 = sub_100008384(&qword_1007BB660);
    v77 = Array.description.getter(v36, v76);
    v79 = v78;
    swift_bridgeObjectRelease(v36);
    v91 = sub_100228BD8(v77, v79, (uint64_t *)&v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v74 + 4);
    swift_bridgeObjectRelease_n(v36, 2);
    swift_bridgeObjectRelease(v79);
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Returning validated endpoints: %s", v74, 0xCu);
    swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v75, -1, -1);
    swift_slowDealloc(v74, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v36, 2);
  }
  return v36;
}

uint64_t sub_10039E648(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 752) = v2;
  *(_BYTE *)(v3 + 848) = a2;
  *(_QWORD *)(v3 + 744) = a1;
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(_QWORD *)(v3 + 760) = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 768) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 776) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 784) = swift_task_alloc(v5);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 792) = static AirDropActor.shared;
  return swift_task_switch(sub_10039E6FC, v6, 0);
}

id sub_10039E6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t *v18;
  uint64_t v19;
  const char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  id result;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  void **v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  _QWORD *v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  const char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  int *v92;
  uint64_t v93;
  int *v94;
  int *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;

  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v1 = v0 + 472;
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 744);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BD820);
  v5 = sub_100244384(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 784);
  v93 = v0 + 472;
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v96 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_1002B26F0();
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 736) = sub_100228BD8(v14, v12, (uint64_t *)&v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v10 + 4);
    v15 = v13;
    v1 = v0 + 472;
    swift_bridgeObjectRelease(v15);
    sub_1002443C8(v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updating discovered endpoint: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_1002443C8(v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_QWORD *)(v1 + 32) = 0;
  sub_1002B35A4();
  v18 = &qword_1007BD000;
  if (v17)
  {
    v19 = v16;
    v20 = v17;
    v21 = (uint64_t *)(*(_QWORD *)(v0 + 752) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess(v21, v0 + 664, 32, 0);
    v22 = *v21;
    if (!*(_QWORD *)(v22 + 16) || (v23 = sub_10045C200(v19, (uint64_t)v20), (v24 & 1) == 0))
    {
      swift_endAccess(v0 + 664);
      swift_bridgeObjectRelease(v20);
      goto LABEL_14;
    }
    v25 = *(_QWORD *)(v0 + 752);
    sub_100340E40(*(_QWORD *)(v22 + 56) + 48 * v23, v0 + 64);
    sub_10026D7AC((__int128 *)(v0 + 64), (_OWORD *)(v0 + 160));
    swift_endAccess(v0 + 664);
    v26 = objc_msgSend(*(id *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus), "meCard");
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend(v26, "identifier");
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      if (v19 == v29 && v20 == v31)
      {
        swift_bridgeObjectRelease(v31);

        swift_bridgeObjectRelease(v20);
        v1 = v0 + 472;
LABEL_47:
        sub_10022E75C((_QWORD *)(v0 + 160));
        v18 = &qword_1007BD000;
        goto LABEL_14;
      }
      v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v29, v31, 0);
      swift_bridgeObjectRelease(v31);

      swift_bridgeObjectRelease(v20);
      v1 = v0 + 472;
      if ((v91 & 1) != 0)
        goto LABEL_47;
    }
    else
    {
      swift_bridgeObjectRelease(v20);
    }
    v59 = *(_QWORD *)(v0 + 184);
    v60 = *(_QWORD *)(v0 + 192);
    sub_10023A834((_QWORD *)(v0 + 160), v59);
    v92 = *(int **)(v60 + 48);
    v95 = (int *)((char *)v92 + *v92);
    v62 = (_QWORD *)swift_task_alloc(v92[1]);
    *(_QWORD *)(v0 + 800) = v62;
    v63 = sub_10039F038;
    goto LABEL_49;
  }
LABEL_14:
  sub_1002B33BC();
  if (v33)
  {
    v34 = v32;
    v35 = v33;
    v36 = (uint64_t *)(*(_QWORD *)(v0 + 752) + v18[271]);
    swift_beginAccess(v36, v0 + 592, 32, 0);
    v37 = *v36;
    if (*(_QWORD *)(v37 + 16))
    {
      v38 = sub_10045C200(v34, (uint64_t)v35);
      if ((v39 & 1) != 0)
      {
        sub_100340E40(*(_QWORD *)(v37 + 56) + 48 * v38, v0 + 208);
        sub_10026D7AC((__int128 *)(v0 + 208), (_OWORD *)(v0 + 256));
        swift_endAccess(v0 + 592);
        swift_bridgeObjectRelease(v35);
        v40 = *(_QWORD *)(v0 + 280);
        v41 = *(_QWORD *)(v0 + 288);
        sub_10023A834((_QWORD *)(v0 + 256), v40);
        v42 = *(int **)(v41 + 48);
        v94 = (int *)((char *)v42 + *v42);
        v43 = (_QWORD *)swift_task_alloc(v42[1]);
        *(_QWORD *)(v0 + 816) = v43;
        *v43 = v0;
        v43[1] = sub_10039F264;
        return (id)((uint64_t (*)(_QWORD, uint64_t, uint64_t))v94)(*(_QWORD *)(v0 + 744), v40, v41);
      }
    }
    swift_endAccess(v0 + 592);
    swift_bridgeObjectRelease(v35);
  }
  v45 = *(_QWORD *)(v0 + 776);
  v46 = *(_QWORD *)(v0 + 760);
  sub_100244384(*(_QWORD *)(v0 + 744), v45, type metadata accessor for SDAirDropDiscoveredEndpoint);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v45, v46);
  v48 = *(void ***)(v0 + 776);
  if (EnumCaseMultiPayload != 3)
  {
    sub_1002443C8((uint64_t)v48, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_29;
  }
  v49 = *v48;
  *(_QWORD *)(v0 + 832) = *v48;
  result = objc_msgSend(v49, "identifier");
  if (result)
  {
    v50 = result;
    v51 = *(_QWORD *)(v0 + 752);
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v54 = v53;

    v55 = (uint64_t *)(v51 + v18[271]);
    swift_beginAccess(v55, v0 + 712, 32, 0);
    v56 = *v55;
    if (*(_QWORD *)(v56 + 16) && (v57 = sub_10045C200(v52, (uint64_t)v54), (v58 & 1) != 0))
    {
      sub_100340E40(*(_QWORD *)(v56 + 56) + 48 * v57, v0 + 16);
    }
    else
    {
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
    }
    swift_bridgeObjectRelease(v54);
    if (*(_QWORD *)(v0 + 40))
    {
      sub_10026D7AC((__int128 *)(v0 + 16), (_OWORD *)(v0 + 304));
      swift_endAccess(v0 + 712);
      v59 = *(_QWORD *)(v0 + 328);
      v60 = *(_QWORD *)(v0 + 336);
      sub_10023A834((_QWORD *)(v0 + 304), v59);
      v61 = *(int **)(v60 + 48);
      v95 = (int *)((char *)v61 + *v61);
      v62 = (_QWORD *)swift_task_alloc(v61[1]);
      *(_QWORD *)(v0 + 840) = v62;
      v63 = sub_10039F488;
LABEL_49:
      *v62 = v0;
      v62[1] = v63;
      return (id)((uint64_t (*)(_QWORD, uint64_t, uint64_t))v95)(*(_QWORD *)(v0 + 744), v59, v60);
    }
    sub_10000D0F0(v0 + 16, &qword_1007BD8F8);
    swift_endAccess(v0 + 712);

LABEL_29:
    v64 = *(_QWORD *)(v0 + 752);
    sub_1002B0AF0();
    v66 = v65;
    v68 = v67;
    v69 = (uint64_t *)(v64 + v18[271]);
    swift_beginAccess(v69, v0 + 688, 32, 0);
    v70 = *v69;
    if (*(_QWORD *)(*v69 + 16) && (v71 = sub_10045C200(v66, (uint64_t)v68), (v72 & 1) != 0))
    {
      sub_100340E40(*(_QWORD *)(v70 + 56) + 48 * v71, v0 + 112);
    }
    else
    {
      *(_OWORD *)(v0 + 128) = 0u;
      *(_OWORD *)(v0 + 144) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
    }
    swift_bridgeObjectRelease(v68);
    swift_endAccess(v0 + 688);
    v73 = *(_QWORD *)(v0 + 136);
    sub_10000D0F0(v0 + 112, &qword_1007BD8F8);
    if (v73)
    {
      sub_1002B0AF0();
      v75 = v74;
      v77 = v76;
      sub_1002B2FE0();
      v79 = v78;
      swift_bridgeObjectRelease(v78);
      if (!v79)
      {
        v86 = Logger.logObject.getter(v80);
        v87 = static os_log_type_t.default.getter(v86);
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v88 = 0;
          _os_log_impl((void *)&_mh_execute_header, v86, v87, "Discovered endpoint no longer has a device name, removing", v88, 2u);
          swift_slowDealloc(v88, -1, -1);
        }

        v97 = 0u;
        v98 = 0u;
        v96 = 0u;
        swift_beginAccess(v69, v0 + 640, 33, 0);
        sub_10039492C((uint64_t)&v96, v75, v77);
        swift_endAccess(v0 + 640);
        v85 = v0 + 472;
        goto LABEL_45;
      }
      v81 = *(_QWORD *)(v0 + 768);
      sub_100244384(*(_QWORD *)(v0 + 744), v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v82 = type metadata accessor for SDAirDropDiscoveredDevice(0);
      swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
      v83 = sub_1003B5900(v81);
      *((_QWORD *)&v97 + 1) = v82;
      v84 = sub_100220D78(&qword_1007BDA50, type metadata accessor for SDAirDropDiscoveredDevice, (uint64_t)&unk_1005D5DE8);
      *(_QWORD *)&v98 = v84;
      *((_QWORD *)&v98 + 1) = &off_100725FA8;
      *(_QWORD *)&v96 = v83;
      swift_beginAccess(v69, v0 + 616, 33, 0);
      swift_retain(v83);
      sub_10039492C((uint64_t)&v96, v75, v77);
      swift_endAccess(v0 + 616);
      *(_QWORD *)(v0 + 376) = v82;
      *(_QWORD *)(v0 + 384) = v84;
      *(_QWORD *)(v0 + 352) = v83;
      v1 = v0 + 472;
      sub_10000D0F0(v93, &qword_1007B8150);
      sub_10022E718(v0 + 352, v93, &qword_1007B8150);
    }
    if (*(_BYTE *)(v0 + 848) == 1)
    {
      sub_100221F28(v1, v0 + 552, &qword_1007B8150);
      if (!*(_QWORD *)(v0 + 576))
      {
        sub_10000D0F0(v1, &qword_1007B8150);
        v85 = v0 + 552;
        goto LABEL_45;
      }
      sub_10026EE60((__int128 *)(v0 + 552), v0 + 512);
      sub_1003A1F8C((_QWORD *)(v0 + 512));
      sub_10022E75C((_QWORD *)(v0 + 512));
    }
    v85 = v1;
LABEL_45:
    sub_10000D0F0(v85, &qword_1007B8150);
    v89 = *(_QWORD *)(v0 + 776);
    v90 = *(_QWORD *)(v0 + 768);
    swift_task_dealloc(*(_QWORD *)(v0 + 784));
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_10039F038()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 800));
  v3 = (_QWORD *)swift_task_alloc(dword_1007BDA64);
  *(_QWORD *)(v1 + 808) = v3;
  *v3 = v2;
  v3[1] = sub_10039F0B0;
  return sub_1003A1DC4(v1 + 160, *(_QWORD *)(v1 + 744));
}

uint64_t sub_10039F0B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 792);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 808));
  return swift_task_switch(sub_10039F108, v1, 0);
}

uint64_t sub_10039F108()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = sub_10023A834((_QWORD *)(v0 + 160), v1);
  *(_OWORD *)(v0 + 456) = v8;
  v3 = sub_100244348((_QWORD *)(v0 + 432));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000D0F0(v0 + 472, &qword_1007B8150);
  sub_10022E718(v0 + 432, v0 + 472, &qword_1007B8150);
  sub_10022E75C((_QWORD *)(v0 + 160));
  if (*(_BYTE *)(v0 + 848) == 1)
  {
    sub_100221F28(v0 + 472, v0 + 552, &qword_1007B8150);
    if (!*(_QWORD *)(v0 + 576))
    {
      sub_10000D0F0(v0 + 472, &qword_1007B8150);
      v4 = v0 + 552;
      goto LABEL_6;
    }
    sub_10026EE60((__int128 *)(v0 + 552), v0 + 512);
    sub_1003A1F8C((_QWORD *)(v0 + 512));
    sub_10022E75C((_QWORD *)(v0 + 512));
  }
  v4 = v0 + 472;
LABEL_6:
  sub_10000D0F0(v4, &qword_1007B8150);
  v5 = *(_QWORD *)(v0 + 776);
  v6 = *(_QWORD *)(v0 + 768);
  swift_task_dealloc(*(_QWORD *)(v0 + 784));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039F264()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 816));
  v3 = (_QWORD *)swift_task_alloc(dword_1007BDA64);
  *(_QWORD *)(v1 + 824) = v3;
  *v3 = v2;
  v3[1] = sub_10039F2DC;
  return sub_1003A1DC4(v1 + 256, *(_QWORD *)(v1 + 744));
}

uint64_t sub_10039F2DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 792);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 824));
  return swift_task_switch(sub_10039F334, v1, 0);
}

uint64_t sub_10039F334()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 280);
  v2 = sub_10023A834((_QWORD *)(v0 + 256), v1);
  *(_OWORD *)(v0 + 416) = v8;
  v3 = sub_100244348((_QWORD *)(v0 + 392));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000D0F0(v0 + 472, &qword_1007B8150);
  sub_10022E718(v0 + 392, v0 + 472, &qword_1007B8150);
  sub_10022E75C((_QWORD *)(v0 + 256));
  if (*(_BYTE *)(v0 + 848) == 1)
  {
    sub_100221F28(v0 + 472, v0 + 552, &qword_1007B8150);
    if (!*(_QWORD *)(v0 + 576))
    {
      sub_10000D0F0(v0 + 472, &qword_1007B8150);
      v4 = v0 + 552;
      goto LABEL_6;
    }
    sub_10026EE60((__int128 *)(v0 + 552), v0 + 512);
    sub_1003A1F8C((_QWORD *)(v0 + 512));
    sub_10022E75C((_QWORD *)(v0 + 512));
  }
  v4 = v0 + 472;
LABEL_6:
  sub_10000D0F0(v4, &qword_1007B8150);
  v5 = *(_QWORD *)(v0 + 776);
  v6 = *(_QWORD *)(v0 + 768);
  swift_task_dealloc(*(_QWORD *)(v0 + 784));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039F488()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 792);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 840));
  return swift_task_switch(sub_10039F4E0, v1, 0);
}

uint64_t sub_10039F4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10022E75C((_QWORD *)(v0 + 304));
  if (*(_BYTE *)(v0 + 848) == 1)
  {
    sub_100221F28(v0 + 472, v0 + 552, &qword_1007B8150);
    if (!*(_QWORD *)(v0 + 576))
    {
      sub_10000D0F0(v0 + 472, &qword_1007B8150);
      v1 = v0 + 552;
      goto LABEL_6;
    }
    sub_10026EE60((__int128 *)(v0 + 552), v0 + 512);
    sub_1003A1F8C((_QWORD *)(v0 + 512));
    sub_10022E75C((_QWORD *)(v0 + 512));
  }
  v1 = v0 + 472;
LABEL_6:
  sub_10000D0F0(v1, &qword_1007B8150);
  v2 = *(_QWORD *)(v0 + 776);
  v3 = *(_QWORD *)(v0 + 768);
  swift_task_dealloc(*(_QWORD *)(v0 + 784));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039F5C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2[88] = v1;
  v2[87] = a1;
  v3 = type metadata accessor for UUID(0);
  v2[89] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[90] = v4;
  v2[91] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[92] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[93] = swift_task_alloc(v6);
  v2[94] = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[95] = static AirDropActor.shared;
  return swift_task_switch(sub_10039F694, v7, 0);
}

id sub_10039F694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  char v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  _QWORD *v49;
  uint64_t (*v50)();
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  void **v54;
  void *v55;
  id result;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  const char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  int *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  const char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char **v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, __n128);
  __n128 v87;
  char v88;
  __n128 v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  _OWORD v101[3];

  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 768) = sub_100221DF8(v3, (uint64_t)qword_1007BD820);
  v4 = sub_100244384(v2, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 752);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v101[0] = v10;
    *(_DWORD *)v9 = 136315138;
    sub_1002B26F0();
    v12 = (const char *)v11;
    *(_QWORD *)(v0 + 688) = sub_100228BD8(v13, v11, (uint64_t *)v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v0 + 696, v9 + 4);
    swift_bridgeObjectRelease(v12);
    sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Removing discovered endpoint: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  sub_1002B35A4();
  *(_QWORD *)(v0 + 776) = v14;
  *(_QWORD *)(v0 + 784) = v15;
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v18 = (_OWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 704);
    v20 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 792) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v21 = (uint64_t *)(v19 + v20);
    *(_QWORD *)&v22 = swift_beginAccess(v19 + v20, v0 + 592, 32, 0).n128_u64[0];
    v23 = *v21;
    if (*(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRetain(v17, v22);
      v24 = sub_10045C200(v16, (uint64_t)v17);
      if ((v25 & 1) != 0)
      {
        sub_100340E40(*(_QWORD *)(v23 + 56) + 48 * v24, v0 + 64);
      }
      else
      {
        *(_OWORD *)(v0 + 80) = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
        *v18 = 0u;
      }
      swift_bridgeObjectRelease(v17);
      if (*(_QWORD *)(v0 + 88))
      {
        v26 = *(_QWORD *)(v0 + 704);
        sub_10026D7AC((__int128 *)(v0 + 64), (_OWORD *)(v0 + 160));
        swift_endAccess(v0 + 592);
        v27 = objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus), "meCard");
        if (v27)
        {
          v28 = v27;
          v29 = objc_msgSend(v27, "identifier");
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          v32 = v31;

          if (v16 == v30 && v17 == v32)
          {
            swift_bridgeObjectRelease(v32);

LABEL_19:
            swift_bridgeObjectRelease(v17);
            sub_10022E75C((_QWORD *)(v0 + 160));
            goto LABEL_20;
          }
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v30, v32, 0);
          swift_bridgeObjectRelease(v32);

          if ((v33 & 1) != 0)
            goto LABEL_19;
        }
        v46 = *(_QWORD *)(v0 + 184);
        v47 = *(_QWORD *)(v0 + 192);
        sub_10023A834((_QWORD *)(v0 + 160), v46);
        v68 = *(int **)(v47 + 56);
        v100 = (int *)((char *)v68 + *v68);
        v49 = (_QWORD *)swift_task_alloc(v68[1]);
        *(_QWORD *)(v0 + 800) = v49;
        v50 = sub_10039FF4C;
        goto LABEL_39;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
      *v18 = 0u;
    }
    sub_10000D0F0(v0 + 64, &qword_1007BD8F8);
    swift_endAccess(v0 + 592);
    swift_bridgeObjectRelease(v17);
  }
LABEL_20:
  sub_1002B33BC();
  *(_QWORD *)(v0 + 824) = v34;
  *(_QWORD *)(v0 + 832) = v35;
  if (v35)
  {
    v36 = v34;
    v37 = v35;
    v38 = (_OWORD *)(v0 + 208);
    v39 = *(_QWORD *)(v0 + 704);
    v40 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 840) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v41 = (uint64_t *)(v39 + v40);
    *(_QWORD *)&v42 = swift_beginAccess(v39 + v40, v0 + 472, 32, 0).n128_u64[0];
    v43 = *v41;
    if (*(_QWORD *)(v43 + 16))
    {
      swift_bridgeObjectRetain(v37, v42);
      v44 = sub_10045C200(v36, (uint64_t)v37);
      if ((v45 & 1) != 0)
      {
        sub_100340E40(*(_QWORD *)(v43 + 56) + 48 * v44, v0 + 208);
      }
      else
      {
        *(_OWORD *)(v0 + 224) = 0u;
        *(_OWORD *)(v0 + 240) = 0u;
        *v38 = 0u;
      }
      swift_bridgeObjectRelease(v37);
      if (*(_QWORD *)(v0 + 232))
      {
        sub_10026D7AC((__int128 *)(v0 + 208), (_OWORD *)(v0 + 304));
        swift_endAccess(v0 + 472);
        v46 = *(_QWORD *)(v0 + 328);
        v47 = *(_QWORD *)(v0 + 336);
        sub_10023A834((_QWORD *)(v0 + 304), v46);
        v48 = *(int **)(v47 + 56);
        v100 = (int *)((char *)v48 + *v48);
        v49 = (_QWORD *)swift_task_alloc(v48[1]);
        *(_QWORD *)(v0 + 848) = v49;
        v50 = sub_1003A026C;
LABEL_39:
        *v49 = v0;
        v49[1] = v50;
        return (id)((uint64_t (*)(_QWORD, uint64_t, uint64_t))v100)(*(_QWORD *)(v0 + 696), v46, v47);
      }
    }
    else
    {
      *(_OWORD *)(v0 + 224) = 0u;
      *(_OWORD *)(v0 + 240) = 0u;
      *v38 = 0u;
    }
    sub_10000D0F0(v0 + 208, &qword_1007BD8F8);
    swift_endAccess(v0 + 472);
    swift_bridgeObjectRelease(v37);
  }
  v51 = *(_QWORD *)(v0 + 744);
  v52 = *(_QWORD *)(v0 + 736);
  sub_100244384(*(_QWORD *)(v0 + 696), v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v51, v52);
  v54 = *(void ***)(v0 + 744);
  if (EnumCaseMultiPayload == 3)
  {
    v55 = *v54;
    *(_QWORD *)(v0 + 872) = *v54;
    result = objc_msgSend(v55, "identifier");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v57 = result;
    v58 = *(_QWORD *)(v0 + 704);
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v61 = v60;

    v62 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 880) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v63 = (uint64_t *)(v58 + v62);
    swift_beginAccess(v58 + v62, v0 + 448, 32, 0);
    v64 = *v63;
    if (*(_QWORD *)(v64 + 16) && (v65 = sub_10045C200(v59, (uint64_t)v61), (v66 & 1) != 0))
    {
      sub_100340E40(*(_QWORD *)(v64 + 56) + 48 * v65, v0 + 352);
    }
    else
    {
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
    }
    swift_bridgeObjectRelease(v61);
    if (*(_QWORD *)(v0 + 376))
    {
      sub_10026D7AC((__int128 *)(v0 + 352), (_OWORD *)(v0 + 256));
      swift_endAccess(v0 + 448);
      v46 = *(_QWORD *)(v0 + 280);
      v47 = *(_QWORD *)(v0 + 288);
      sub_10023A834((_QWORD *)(v0 + 256), v46);
      v67 = *(int **)(v47 + 56);
      v100 = (int *)((char *)v67 + *v67);
      v49 = (_QWORD *)swift_task_alloc(v67[1]);
      *(_QWORD *)(v0 + 888) = v49;
      v50 = sub_1003A058C;
      goto LABEL_39;
    }
    sub_10000D0F0(v0 + 352, &qword_1007BD8F8);
    swift_endAccess(v0 + 448);

  }
  else
  {
    sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v69 = *(_QWORD *)(v0 + 704);
  sub_1002B0AF0();
  v71 = v70;
  v73 = v72;
  v74 = (uint64_t *)(v69 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v69 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v0 + 616, 32, 0);
  v75 = *v74;
  if (*(_QWORD *)(*v74 + 16) && (v76 = sub_10045C200(v71, (uint64_t)v73), (v77 & 1) != 0))
  {
    sub_100340E40(*(_QWORD *)(v75 + 56) + 48 * v76, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease(v73);
  if (*(_QWORD *)(v0 + 136))
  {
    v78 = *(_QWORD *)(v0 + 728);
    v79 = *(_QWORD *)(v0 + 720);
    v80 = *(_QWORD *)(v0 + 712);
    v81 = *(_QWORD *)(v0 + 704);
    sub_10026D7AC((__int128 *)(v0 + 112), (_OWORD *)(v0 + 16));
    swift_endAccess(v0 + 616);
    v82 = (const char **)(v81 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess(v81 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v0 + 568, 0, 0);
    v83 = *v82;
    v84 = *(_QWORD *)(v0 + 40);
    v85 = *(_QWORD *)(v0 + 48);
    sub_10023A834((_QWORD *)(v0 + 16), v84);
    v86 = *(void (**)(uint64_t, uint64_t, __n128))(v85 + 32);
    v87 = swift_bridgeObjectRetain(v83);
    v86(v84, v85, v87);
    v88 = sub_1004551A4(v78, (uint64_t)v83);
    v89 = swift_bridgeObjectRelease(v83);
    v90 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v79 + 8))(v78, v80, v89);
    if ((v88 & 1) != 0)
    {
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.default.getter(v91);
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v93 = 0;
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Skipping remove from allDiscovered endpoints because it's in a transfer", v93, 2u);
        swift_slowDealloc(v93, -1, -1);
      }

    }
    else
    {
      sub_1002B0AF0();
      v95 = v94;
      v97 = v96;
      memset(v101, 0, sizeof(v101));
      swift_beginAccess(v74, v0 + 496, 33, 0);
      sub_10039492C((uint64_t)v101, v95, v97);
      swift_endAccess(v0 + 496);
    }
    sub_10022E75C((_QWORD *)(v0 + 16));
  }
  else
  {
    sub_10000D0F0(v0 + 112, &qword_1007BD8F8);
    swift_endAccess(v0 + 616);
  }
  v98 = *(_QWORD *)(v0 + 744);
  v99 = *(_QWORD *)(v0 + 728);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  return (id)(*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039FF4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 760);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 800));
  return swift_task_switch(sub_10039FFA4, v1, 0);
}

uint64_t sub_10039FFA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[23];
  v2 = v0[24];
  sub_10023A834(v0 + 20, v1);
  v3 = *(int **)(v2 + 40);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[101] = v4;
  *v4 = v0;
  v4[1] = sub_1003A001C;
  return v6(v1, v2);
}

uint64_t sub_1003A001C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 816) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A007C, v3, 0);
}

uint64_t sub_1003A007C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char **v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[3];

  v1 = *(_QWORD *)(v0 + 816);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)&v3 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 784), v3);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 728);
    v5 = *(_QWORD *)(v0 + 720);
    v6 = *(_QWORD *)(v0 + 712);
    v7 = (const char **)(*(_QWORD *)(v0 + 704)
                       + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess(v7, v0 + 640, 0, 0);
    v8 = *v7;
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    sub_10023A834((_QWORD *)(v0 + 160), v9);
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 32);
    v12 = swift_bridgeObjectRetain(v8);
    v11(v9, v10, v12);
    LOBYTE(v7) = sub_1004551A4(v4, (uint64_t)v8);
    v13 = swift_bridgeObjectRelease(v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v13);
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease(*(const char **)(v0 + 784));
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Skipping remove from allDiscovered endpoints because it's in a transfer", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

    }
    else
    {
      v18 = *(_QWORD *)(v0 + 784);
      v19 = *(_QWORD *)(v0 + 776);
      v20 = *(_QWORD *)(v0 + 704) + *(_QWORD *)(v0 + 792);
      memset(v24, 0, sizeof(v24));
      swift_beginAccess(v20, v0 + 664, 33, 0);
      sub_10039492C((uint64_t)v24, v19, v18);
      swift_endAccess(v0 + 664);
    }
  }
  sub_10022E75C((_QWORD *)(v0 + 160));
  v21 = *(_QWORD *)(v0 + 744);
  v22 = *(_QWORD *)(v0 + 728);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A026C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 760);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 848));
  return swift_task_switch(sub_1003A02C4, v1, 0);
}

uint64_t sub_1003A02C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[41];
  v2 = v0[42];
  sub_10023A834(v0 + 38, v1);
  v3 = *(int **)(v2 + 40);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[107] = v4;
  *v4 = v0;
  v4[1] = sub_1003A033C;
  return v6(v1, v2);
}

uint64_t sub_1003A033C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A039C, v3, 0);
}

uint64_t sub_1003A039C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char **v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[3];

  v1 = *(_QWORD *)(v0 + 864);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)&v3 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 832), v3);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 728);
    v5 = *(_QWORD *)(v0 + 720);
    v6 = *(_QWORD *)(v0 + 712);
    v7 = (const char **)(*(_QWORD *)(v0 + 704)
                       + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess(v7, v0 + 520, 0, 0);
    v8 = *v7;
    v9 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 336);
    sub_10023A834((_QWORD *)(v0 + 304), v9);
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 32);
    v12 = swift_bridgeObjectRetain(v8);
    v11(v9, v10, v12);
    LOBYTE(v7) = sub_1004551A4(v4, (uint64_t)v8);
    v13 = swift_bridgeObjectRelease(v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v13);
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease(*(const char **)(v0 + 832));
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Skipping remove from allDiscovered endpoints because it's in a transfer", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

    }
    else
    {
      v18 = *(_QWORD *)(v0 + 832);
      v19 = *(_QWORD *)(v0 + 824);
      v20 = *(_QWORD *)(v0 + 704) + *(_QWORD *)(v0 + 840);
      memset(v24, 0, sizeof(v24));
      swift_beginAccess(v20, v0 + 544, 33, 0);
      sub_10039492C((uint64_t)v24, v19, v18);
      swift_endAccess(v0 + 544);
    }
  }
  sub_10022E75C((_QWORD *)(v0 + 304));
  v21 = *(_QWORD *)(v0 + 744);
  v22 = *(_QWORD *)(v0 + 728);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A058C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 760);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 888));
  return swift_task_switch(sub_1003A05E4, v1, 0);
}

uint64_t sub_1003A05E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[35];
  v2 = v0[36];
  sub_10023A834(v0 + 32, v1);
  v3 = *(int **)(v2 + 40);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[112] = v4;
  *v4 = v0;
  v4[1] = sub_1003A065C;
  return v6(v1, v2);
}

uint64_t sub_1003A065C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 896);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 904) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A06BC, v3, 0);
}

id sub_1003A06BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char **v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;
  id result;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[3];

  v1 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease((const char *)v1);
  if (v2)
  {

LABEL_9:
    sub_10022E75C((_QWORD *)(v0 + 256));
    v26 = *(_QWORD *)(v0 + 744);
    v27 = *(_QWORD *)(v0 + 728);
    swift_task_dealloc(*(_QWORD *)(v0 + 752));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 720);
  v5 = *(_QWORD *)(v0 + 712);
  v6 = (const char **)(*(_QWORD *)(v0 + 704)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
  swift_beginAccess(v6, v0 + 400, 0, 0);
  v7 = *v6;
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);
  sub_10023A834((_QWORD *)(v0 + 256), v8);
  v10 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 32);
  v11 = swift_bridgeObjectRetain(v7);
  v10(v8, v9, v11);
  LOBYTE(v6) = sub_1004551A4(v3, (uint64_t)v7);
  v12 = swift_bridgeObjectRelease(v7);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v12);
  if ((v6 & 1) != 0)
  {
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void **)(v0 + 872);
    if (v16)
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Skipping remove from allDiscovered endpoints because it's in a transfer", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    goto LABEL_9;
  }
  result = objc_msgSend(*(id *)(v0 + 872), "identifier");
  if (result)
  {
    v20 = result;
    v21 = *(void **)(v0 + 872);
    v22 = *(_QWORD *)(v0 + 704) + *(_QWORD *)(v0 + 880);
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v25 = v24;

    memset(v28, 0, sizeof(v28));
    swift_beginAccess(v22, v0 + 424, 33, 0);
    sub_10039492C((uint64_t)v28, v23, v25);
    swift_endAccess(v0 + 424);

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A08E0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 1064) = v2;
  *(_BYTE *)(v3 + 1224) = a2;
  *(_QWORD *)(v3 + 1056) = a1;
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(_QWORD *)(v3 + 1072) = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 1080) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 1088) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 1096) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 1104) = swift_task_alloc(v5);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 1112) = static AirDropActor.shared;
  return swift_task_switch(sub_1003A09A0, v6, 0);
}

id sub_1003A09A0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  char v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  const char *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  int EnumCaseMultiPayload;
  void **v61;
  void *v62;
  id result;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  const char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  uint64_t v82;
  uint8_t *v83;
  uint64_t v84;
  unint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  _QWORD *v94;
  uint64_t (*v95)();
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  void *v115;
  uint64_t v116;
  const char *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  int *v122;
  uint64_t v123[6];

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent), "idSelfIdentity");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "idsDeviceID");

    if (v3)
    {
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

      sub_1002B33BC();
      if (v8)
      {
        v9 = v8;
        if (v4 == v7 && v8 == v6)
        {
          *(_QWORD *)&v74 = swift_bridgeObjectRelease(v8).n128_u64[0];
          swift_bridgeObjectRelease(v6, v74);
LABEL_37:
          if (qword_1007B3FD0 != -1)
            swift_once(&qword_1007B3FD0, sub_100398F4C);
          v75 = *(_QWORD *)(v0 + 1104);
          v76 = *(_QWORD *)(v0 + 1056);
          v77 = type metadata accessor for Logger(0);
          sub_100221DF8(v77, (uint64_t)qword_1007BD820);
          v78 = sub_100244384(v76, v75, type metadata accessor for SDAirDropDiscoveredEndpoint);
          v79 = Logger.logObject.getter(v78);
          v80 = static os_log_type_t.default.getter(v79);
          v81 = os_log_type_enabled(v79, v80);
          v82 = *(_QWORD *)(v0 + 1104);
          if (v81)
          {
            v83 = (uint8_t *)swift_slowAlloc(12, -1);
            v84 = swift_slowAlloc(32, -1);
            v123[0] = v84;
            *(_DWORD *)v83 = 136315138;
            sub_1002B26F0();
            v86 = (const char *)v85;
            *(_QWORD *)(v0 + 1048) = sub_100228BD8(v87, v85, v123);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1048, v0 + 1056, v83 + 4);
            swift_bridgeObjectRelease(v86);
            sub_1002443C8(v82, type metadata accessor for SDAirDropDiscoveredEndpoint);
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "Discovered endpoint is current device, ignoring %s", v83, 0xCu);
            swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v84, -1, -1);
            swift_slowDealloc(v83, -1, -1);
          }
          else
          {
            sub_1002443C8(*(_QWORD *)(v0 + 1104), type metadata accessor for SDAirDropDiscoveredEndpoint);
          }

          goto LABEL_56;
        }
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
        *(_QWORD *)&v12 = swift_bridgeObjectRelease(v9).n128_u64[0];
        swift_bridgeObjectRelease(v6, v12);
        if ((v11 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        swift_bridgeObjectRelease(v6);
      }
    }
  }
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v13 = v0 + 672;
  v14 = *(_QWORD *)(v0 + 1096);
  v15 = *(_QWORD *)(v0 + 1056);
  v16 = type metadata accessor for Logger(0);
  sub_100221DF8(v16, (uint64_t)qword_1007BD820);
  v17 = sub_100244384(v15, v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v0 + 1096);
  if (v20)
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v123[0] = v23;
    *(_DWORD *)v22 = 136315138;
    sub_1002B26F0();
    v25 = (const char *)v24;
    *(_QWORD *)(v0 + 1040) = sub_100228BD8(v26, v24, v123);
    v13 = v0 + 672;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1040, v0 + 1048, v22 + 4);
    swift_bridgeObjectRelease(v25);
    sub_1002443C8(v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Adding discovered endpoint: %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v0 + 1096), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_QWORD *)(v13 + 32) = 0;
  sub_1002B35A4();
  *(_QWORD *)(v0 + 1120) = v27;
  *(_QWORD *)(v0 + 1128) = v28;
  if (v28)
  {
    v29 = v27;
    v30 = v28;
    v31 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus), "meCard");
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, "identifier");
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v36 = v35;

      if (v29 == v34 && v30 == v36)
      {
        swift_bridgeObjectRelease(v36);

LABEL_22:
        swift_bridgeObjectRelease(v30);
        goto LABEL_23;
      }
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v34, v36, 0);
      swift_bridgeObjectRelease(v36);

      if ((v37 & 1) != 0)
        goto LABEL_22;
    }
    v50 = (_OWORD *)(v0 + 160);
    v51 = *(_QWORD *)(v0 + 1064);
    v52 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 1136) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v53 = (uint64_t *)(v51 + v52);
    *(_QWORD *)&v54 = swift_beginAccess(v51 + v52, v0 + 896, 32, 0).n128_u64[0];
    v55 = *v53;
    if (*(_QWORD *)(v55 + 16))
    {
      swift_bridgeObjectRetain(v30, v54);
      v56 = sub_10045C200(v29, (uint64_t)v30);
      if ((v57 & 1) != 0)
      {
        sub_100340E40(*(_QWORD *)(v55 + 56) + 48 * v56, v0 + 160);
      }
      else
      {
        *(_OWORD *)(v0 + 176) = 0u;
        *(_OWORD *)(v0 + 192) = 0u;
        *v50 = 0u;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *v50 = 0u;
      swift_bridgeObjectRetain(v30);
    }
    sub_10022E718(v0 + 160, v0 + 112, &qword_1007BD8F8);
    if (*(_QWORD *)(v0 + 136))
    {
      sub_10026D7AC((__int128 *)(v0 + 112), (_OWORD *)(v0 + 208));
    }
    else
    {
      v112 = type metadata accessor for SDAirDropDiscoveredPerson(0);
      swift_allocObject(v112, *(unsigned int *)(v112 + 48), *(unsigned __int16 *)(v112 + 52));
      swift_bridgeObjectRetain(v30);
      v113 = sub_100346464(v29, v30);
      *(_QWORD *)(v0 + 232) = v112;
      *(_QWORD *)(v0 + 240) = sub_100220D78(&qword_1007BDA68, type metadata accessor for SDAirDropDiscoveredPerson, (uint64_t)&unk_1005D38D8);
      *(_QWORD *)(v0 + 248) = &off_100723368;
      *(_QWORD *)(v0 + 208) = v113;
      sub_10000D0F0(v0 + 112, &qword_1007BD8F8);
    }
    swift_bridgeObjectRelease(v30);
    swift_endAccess(v0 + 896);
    v91 = *(_QWORD *)(v0 + 232);
    v92 = *(_QWORD *)(v0 + 240);
    sub_10023A834((_QWORD *)(v0 + 208), v91);
    v114 = *(int **)(v92 + 48);
    v122 = (int *)((char *)v114 + *v114);
    v94 = (_QWORD *)swift_task_alloc(v114[1]);
    *(_QWORD *)(v0 + 1144) = v94;
    v95 = sub_1003A15E8;
    goto LABEL_68;
  }
LABEL_23:
  sub_1002B33BC();
  *(_QWORD *)(v0 + 1160) = v38;
  *(_QWORD *)(v0 + 1168) = v39;
  if (v39)
  {
    v40 = v38;
    v41 = v39;
    v42 = (_OWORD *)(v0 + 16);
    v43 = *(_QWORD *)(v0 + 1064);
    v44 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 1176) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v45 = (uint64_t *)(v43 + v44);
    *(_QWORD *)&v46 = swift_beginAccess(v43 + v44, v0 + 1016, 32, 0).n128_u64[0];
    v47 = *v45;
    if (*(_QWORD *)(v47 + 16))
    {
      swift_bridgeObjectRetain(v41, v46);
      v48 = sub_10045C200(v40, (uint64_t)v41);
      if ((v49 & 1) != 0)
      {
        sub_100340E40(*(_QWORD *)(v47 + 56) + 48 * v48, v0 + 16);
      }
      else
      {
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 48) = 0u;
        *v42 = 0u;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *v42 = 0u;
      swift_bridgeObjectRetain(v41);
    }
    sub_10022E718(v0 + 16, v0 + 496, &qword_1007BD8F8);
    if (*(_QWORD *)(v0 + 520))
    {
      sub_10026D7AC((__int128 *)(v0 + 496), (_OWORD *)(v0 + 544));
    }
    else
    {
      v88 = *(_QWORD *)(v0 + 1088);
      sub_100244384(*(_QWORD *)(v0 + 1056), v88, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v89 = type metadata accessor for SDAirDropDiscoveredDevice(0);
      swift_allocObject(v89, *(unsigned int *)(v89 + 48), *(unsigned __int16 *)(v89 + 52));
      v90 = sub_1003B5900(v88);
      *(_QWORD *)(v0 + 568) = v89;
      *(_QWORD *)(v0 + 576) = sub_100220D78(&qword_1007BDA50, type metadata accessor for SDAirDropDiscoveredDevice, (uint64_t)&unk_1005D5DE8);
      *(_QWORD *)(v0 + 584) = &off_100725FA8;
      *(_QWORD *)(v0 + 544) = v90;
      sub_10000D0F0(v0 + 496, &qword_1007BD8F8);
    }
    swift_bridgeObjectRelease(v41);
    swift_endAccess(v0 + 1016);
    v91 = *(_QWORD *)(v0 + 568);
    v92 = *(_QWORD *)(v0 + 576);
    sub_10023A834((_QWORD *)(v0 + 544), v91);
    v93 = *(int **)(v92 + 48);
    v122 = (int *)((char *)v93 + *v93);
    v94 = (_QWORD *)swift_task_alloc(v93[1]);
    *(_QWORD *)(v0 + 1184) = v94;
    v95 = sub_1003A18B0;
    goto LABEL_68;
  }
  v58 = *(_QWORD *)(v0 + 1080);
  v59 = *(_QWORD *)(v0 + 1072);
  sub_100244384(*(_QWORD *)(v0 + 1056), v58, type metadata accessor for SDAirDropDiscoveredEndpoint);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v58, v59);
  v61 = *(void ***)(v0 + 1080);
  if (EnumCaseMultiPayload != 3)
  {
    sub_1002443C8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002B2FE0();
    if (v96)
    {
      v97 = *(_QWORD *)(v0 + 1088);
      v98 = *(_QWORD *)(v0 + 1064);
      v99 = *(_QWORD *)(v0 + 1056);
      swift_bridgeObjectRelease(v96);
      sub_1002B0AF0();
      v101 = v100;
      v103 = v102;
      sub_100244384(v99, v97, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v104 = type metadata accessor for SDAirDropDiscoveredDevice(0);
      v105 = v13;
      swift_allocObject(v104, *(unsigned int *)(v104 + 48), *(unsigned __int16 *)(v104 + 52));
      v106 = sub_1003B5900(v97);
      v123[3] = v104;
      v107 = sub_100220D78(&qword_1007BDA50, type metadata accessor for SDAirDropDiscoveredDevice, (uint64_t)&unk_1005D5DE8);
      v123[4] = v107;
      v123[5] = (uint64_t)&off_100725FA8;
      v123[0] = v106;
      swift_beginAccess(v98 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v0 + 920, 33, 0);
      swift_retain(v106);
      sub_10039492C((uint64_t)v123, v101, v103);
      swift_endAccess(v0 + 920);
      *(_QWORD *)(v0 + 816) = v104;
      *(_QWORD *)(v0 + 824) = v107;
      v13 = v105;
      *(_QWORD *)(v0 + 792) = v106;
      sub_10000D0F0(v105, &qword_1007B8150);
      sub_10022E718(v0 + 792, v105, &qword_1007B8150);
    }
    if (*(_BYTE *)(v0 + 1224) == 1)
    {
      sub_100221F28(v13, v0 + 752, &qword_1007B8150);
      if (!*(_QWORD *)(v0 + 776))
      {
        sub_10000D0F0(v13, &qword_1007B8150);
        v108 = v0 + 752;
        goto LABEL_52;
      }
      sub_10026EE60((__int128 *)(v0 + 752), v0 + 712);
      sub_1003A1F8C((_QWORD *)(v0 + 712));
      sub_10022E75C((_QWORD *)(v0 + 712));
    }
    v108 = v13;
LABEL_52:
    sub_10000D0F0(v108, &qword_1007B8150);
LABEL_56:
    v109 = *(_QWORD *)(v0 + 1096);
    v110 = *(_QWORD *)(v0 + 1088);
    v111 = *(_QWORD *)(v0 + 1080);
    swift_task_dealloc(*(_QWORD *)(v0 + 1104));
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v62 = *v61;
  *(_QWORD *)(v0 + 1200) = *v61;
  result = objc_msgSend(v62, "identifier");
  if (result)
  {
    v64 = result;
    v65 = *(_QWORD *)(v0 + 1064);
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v68 = v67;

    v69 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(_QWORD *)(v0 + 1208) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    v70 = (uint64_t *)(v65 + v69);
    swift_beginAccess(v70, v0 + 944, 32, 0);
    v71 = *v70;
    if (*(_QWORD *)(v71 + 16) && (v72 = sub_10045C200(v66, (uint64_t)v68), (v73 & 1) != 0))
    {
      sub_100340E40(*(_QWORD *)(v71 + 56) + 48 * v72, v0 + 352);
    }
    else
    {
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
    }
    sub_10022E718(v0 + 352, v0 + 400, &qword_1007BD8F8);
    if (*(_QWORD *)(v0 + 424))
    {
      sub_10026D7AC((__int128 *)(v0 + 400), (_OWORD *)(v0 + 256));
LABEL_67:
      swift_bridgeObjectRelease(v68);
      swift_endAccess(v0 + 944);
      v91 = *(_QWORD *)(v0 + 280);
      v92 = *(_QWORD *)(v0 + 288);
      sub_10023A834((_QWORD *)(v0 + 256), v91);
      v121 = *(int **)(v92 + 48);
      v122 = (int *)((char *)v121 + *v121);
      v94 = (_QWORD *)swift_task_alloc(v121[1]);
      *(_QWORD *)(v0 + 1216) = v94;
      v95 = sub_1003A1B74;
LABEL_68:
      *v94 = v0;
      v94[1] = v95;
      return (id)((uint64_t (*)(_QWORD, uint64_t, uint64_t))v122)(*(_QWORD *)(v0 + 1056), v91, v92);
    }
    result = objc_msgSend(v62, "identifier");
    if (result)
    {
      v115 = result;
      v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v118 = v117;

      v119 = type metadata accessor for SDAirDropDiscoveredClassroom(0);
      swift_allocObject(v119, *(unsigned int *)(v119 + 48), *(unsigned __int16 *)(v119 + 52));
      v120 = sub_1004452C4(v116, v118);
      *(_QWORD *)(v0 + 280) = v119;
      *(_QWORD *)(v0 + 288) = sub_100220D78(&qword_1007BDA58, type metadata accessor for SDAirDropDiscoveredClassroom, (uint64_t)&unk_1005D84C8);
      *(_QWORD *)(v0 + 296) = &off_100728F88;
      *(_QWORD *)(v0 + 256) = v120;
      sub_10000D0F0(v0 + 400, &qword_1007BD8F8);
      goto LABEL_67;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A15E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1144));
  return swift_task_switch(sub_1003A1640, v1, 0);
}

uint64_t sub_1003A1640()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[141];
  v2 = v0[140];
  v3 = v0[133] + v0[142];
  sub_100340E40((uint64_t)(v0 + 26), (uint64_t)(v0 + 8));
  swift_beginAccess(v3, v0 + 124, 33, 0);
  sub_10039492C((uint64_t)(v0 + 8), v2, v1);
  swift_endAccess(v0 + 124);
  v4 = (uint64_t **)swift_task_alloc(dword_1007BDA64);
  v0[144] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_1003A16FC;
  return sub_1003A1DC4((uint64_t)(v0 + 26), v0[132]);
}

uint64_t sub_1003A16FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1152));
  return swift_task_switch(sub_1003A1754, v1, 0);
}

uint64_t sub_1003A1754()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 232);
  v2 = sub_10023A834((_QWORD *)(v0 + 208), v1);
  *(_OWORD *)(v0 + 656) = v9;
  v3 = sub_100244348((_QWORD *)(v0 + 632));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000D0F0(v0 + 672, &qword_1007B8150);
  sub_10022E718(v0 + 632, v0 + 672, &qword_1007B8150);
  sub_10022E75C((_QWORD *)(v0 + 208));
  if (*(_BYTE *)(v0 + 1224) == 1)
  {
    sub_100221F28(v0 + 672, v0 + 752, &qword_1007B8150);
    if (!*(_QWORD *)(v0 + 776))
    {
      sub_10000D0F0(v0 + 672, &qword_1007B8150);
      v4 = v0 + 752;
      goto LABEL_6;
    }
    sub_10026EE60((__int128 *)(v0 + 752), v0 + 712);
    sub_1003A1F8C((_QWORD *)(v0 + 712));
    sub_10022E75C((_QWORD *)(v0 + 712));
  }
  v4 = v0 + 672;
LABEL_6:
  sub_10000D0F0(v4, &qword_1007B8150);
  v5 = *(_QWORD *)(v0 + 1096);
  v6 = *(_QWORD *)(v0 + 1088);
  v7 = *(_QWORD *)(v0 + 1080);
  swift_task_dealloc(*(_QWORD *)(v0 + 1104));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A18B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1184));
  return swift_task_switch(sub_1003A1908, v1, 0);
}

uint64_t sub_1003A1908()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[146];
  v2 = v0[145];
  v3 = v0[133] + v0[147];
  sub_100340E40((uint64_t)(v0 + 68), (uint64_t)(v0 + 38));
  swift_beginAccess(v3, v0 + 109, 33, 0);
  sub_10039492C((uint64_t)(v0 + 38), v2, v1);
  swift_endAccess(v0 + 109);
  v4 = (uint64_t **)swift_task_alloc(dword_1007BDA64);
  v0[149] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_1003A19C4;
  return sub_1003A1DC4((uint64_t)(v0 + 68), v0[132]);
}

uint64_t sub_1003A19C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1192));
  return swift_task_switch(sub_1003A1A1C, v1, 0);
}

uint64_t sub_1003A1A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = sub_10023A834((_QWORD *)(v0 + 544), v1);
  *(_QWORD *)(v0 + 856) = v1;
  *(_QWORD *)(v0 + 864) = v2;
  v4 = sub_100244348((_QWORD *)(v0 + 832));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v4, v3, v1);
  sub_10000D0F0(v0 + 672, &qword_1007B8150);
  sub_10022E718(v0 + 832, v0 + 672, &qword_1007B8150);
  sub_10022E75C((_QWORD *)(v0 + 544));
  if (*(_BYTE *)(v0 + 1224) == 1)
  {
    sub_100221F28(v0 + 672, v0 + 752, &qword_1007B8150);
    if (!*(_QWORD *)(v0 + 776))
    {
      sub_10000D0F0(v0 + 672, &qword_1007B8150);
      v5 = v0 + 752;
      goto LABEL_6;
    }
    sub_10026EE60((__int128 *)(v0 + 752), v0 + 712);
    sub_1003A1F8C((_QWORD *)(v0 + 712));
    sub_10022E75C((_QWORD *)(v0 + 712));
  }
  v5 = v0 + 672;
LABEL_6:
  sub_10000D0F0(v5, &qword_1007B8150);
  v6 = *(_QWORD *)(v0 + 1096);
  v7 = *(_QWORD *)(v0 + 1088);
  v8 = *(_QWORD *)(v0 + 1080);
  swift_task_dealloc(*(_QWORD *)(v0 + 1104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A1B74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1216));
  return swift_task_switch(sub_1003A1BCC, v1, 0);
}

id sub_1003A1BCC()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  result = objc_msgSend(*(id *)(v0 + 1200), "identifier");
  if (result)
  {
    v2 = result;
    v15 = *(void **)(v0 + 1200);
    v3 = *(_QWORD *)(v0 + 1064) + *(_QWORD *)(v0 + 1208);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    sub_100340E40(v0 + 256, v0 + 448);
    swift_beginAccess(v3, v0 + 968, 33, 0);
    sub_10039492C(v0 + 448, v4, v6);
    swift_endAccess(v0 + 968);
    v7 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 288);
    v9 = sub_10023A834((_QWORD *)(v0 + 256), v7);
    *(_QWORD *)(v0 + 616) = v7;
    *(_QWORD *)(v0 + 624) = v8;
    v10 = sub_100244348((_QWORD *)(v0 + 592));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v9, v7);

    sub_10000D0F0(v0 + 672, &qword_1007B8150);
    sub_10022E718(v0 + 592, v0 + 672, &qword_1007B8150);
    sub_10022E75C((_QWORD *)(v0 + 256));
    if (*(_BYTE *)(v0 + 1224) == 1)
    {
      sub_100221F28(v0 + 672, v0 + 752, &qword_1007B8150);
      if (!*(_QWORD *)(v0 + 776))
      {
        sub_10000D0F0(v0 + 672, &qword_1007B8150);
        v11 = v0 + 752;
        goto LABEL_6;
      }
      sub_10026EE60((__int128 *)(v0 + 752), v0 + 712);
      sub_1003A1F8C((_QWORD *)(v0 + 712));
      sub_10022E75C((_QWORD *)(v0 + 712));
    }
    v11 = v0 + 672;
LABEL_6:
    sub_10000D0F0(v11, &qword_1007B8150);
    v12 = *(_QWORD *)(v0 + 1096);
    v13 = *(_QWORD *)(v0 + 1088);
    v14 = *(_QWORD *)(v0 + 1080);
    swift_task_dealloc(*(_QWORD *)(v0 + 1104));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A1DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003A1E58, static AirDropActor.shared, 0);
}

uint64_t sub_1003A1E58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 40);
  v3 = v2[3];
  v4 = v2[4];
  sub_10023A834(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID, v0 + 16, 32, 0);
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_10045C2DC(*(_QWORD *)(v0 + 80)), (v8 & 1) != 0))
  {
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
    swift_endAccess(v0 + 16);
    v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain(v13);
    v14(v9, v11);
    sub_1003A2390(v12);
    if ((v15 & 1) != 0)
      sub_100319484(*(_QWORD *)(v0 + 48));
    swift_unknownObjectRelease(v13);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 64);
    swift_endAccess(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A1F8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  char *v42;
  uint64_t v43;
  uint8_t *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[5];

  v3 = sub_100008384(&qword_1007BDA70);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v43 - v7;
  v9 = sub_100008384(&qword_1007B6640);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_10023A834(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v17 = v16;
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations, v51, 32, 0);
  v19 = *v18;
  if (*(_QWORD *)(*v18 + 16) && (v20 = sub_10045C200(v15, (uint64_t)v17), (v21 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v10 + 72) * v20, v9);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 0, 1, v9);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 1, 1, v9);
  }
  v23 = swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v23) == 1)
  {
    sub_10000D0F0((uint64_t)v8, &qword_1007BDA70);
    return swift_endAccess(v51);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_endAccess(v51);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v47 = v12;
    v25 = type metadata accessor for Logger(0);
    sub_100221DF8(v25, (uint64_t)qword_1007BD820);
    v26 = sub_100244418((uint64_t)a1, (uint64_t)v51);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v45 = v22;
      v31 = v30;
      v50 = v30;
      v46 = v6;
      *(_DWORD *)v29 = 136315138;
      v44 = v29 + 4;
      sub_100244418((uint64_t)v51, (uint64_t)&v48);
      v32 = sub_100008384((uint64_t *)&unk_1007BD940);
      v33 = String.init<A>(describing:)(&v48, v32);
      v35 = (const char *)v34;
      v48 = sub_100228BD8(v33, v34, &v50);
      v6 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v44);
      swift_bridgeObjectRelease(v35);
      sub_10022E75C(v51);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Bonjour discovery completed for waiting connectable: %s", v29, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      v36 = v31;
      v22 = v45;
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      sub_10022E75C(v51);
    }

    v37 = a1[3];
    v38 = a1[4];
    sub_10023A834(a1, v37);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    v41 = v40;
    v22(v6, 1, 1, v9);
    swift_beginAccess(v18, v51, 33, 0);
    sub_100395294((uint64_t)v6, v39, v41);
    swift_endAccess(v51);
    sub_100244418((uint64_t)a1, (uint64_t)v51);
    v42 = v47;
    CheckedContinuation.resume(returning:)(v51, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v42, v9);
  }
}

void sub_1003A2390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _BYTE v10[80];

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v7 = &v10[-v6];
  sub_100244384(a1, (uint64_t)&v10[-v6], v8);
  v9 = (char *)sub_1003A24B4 + 4 * byte_1005D5B50[swift_getEnumCaseMultiPayload(v7, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1003A24B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;

  sub_100221DB4(v4, v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v6 = sub_1002B1648();
  sub_1002443C8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v6 & 1) != 0)
    return 1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate, v7);
  if (!Strong)
    return 0;
  v9 = Strong;
  sub_1002B35A4();
  if (!v11)
    goto LABEL_10;
  v12 = v10;
  v13 = v11;
  v14 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, v5 - 152, 0, 0);
  sub_100244418(v14, v5 - 128);
  v15 = *(_QWORD *)(v5 - 104);
  v16 = *(_QWORD *)(v5 - 96);
  sub_10023A834((_QWORD *)(v5 - 128), v15);
  LOBYTE(v12) = (*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t))(v16 + 104))(v12, v13, v15, v16);
  swift_bridgeObjectRelease(v13);
  sub_10022E75C((_QWORD *)(v5 - 128));
  if ((v12 & 1) == 0)
  {
LABEL_10:
    swift_unknownObjectRelease(v9);
    return 0;
  }
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v17 = type metadata accessor for Logger(0);
  sub_100221DF8(v17, (uint64_t)qword_1007BD820);
  v18 = sub_100244384(v2, v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v5 - 128) = v22;
    *(_DWORD *)v21 = 136315138;
    sub_1002B26F0();
    v24 = (const char *)v23;
    *(_QWORD *)(v5 - 88) = sub_100228BD8(v25, v23, (uint64_t *)(v5 - 128));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 88, v5 - 80, v21 + 4);
    swift_bridgeObjectRelease(v24);
    sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "endpoint.isConnectable is false. Treating endpoint as connectable due to delegate: %s", v21, 0xCu);
    v26 = 1;
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    swift_unknownObjectRelease(v9);

  }
  else
  {
    sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);

    swift_unknownObjectRelease(v9);
    return 1;
  }
  return v26;
}

uint64_t sub_1003A27A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[34] = a1;
  v2[35] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7760) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[36] = swift_task_alloc(v3);
  v2[37] = swift_task_alloc(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[38] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[39] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[40] = swift_task_alloc(v6);
  v2[41] = swift_task_alloc(v6);
  v2[42] = swift_task_alloc(v6);
  v2[43] = swift_task_alloc(v6);
  v2[44] = swift_task_alloc(v6);
  v7 = type metadata accessor for UUID(0);
  v2[45] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[46] = v8;
  v2[47] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v2[48] = static AirDropActor.shared;
  return swift_task_switch(sub_1003A28C4, v9, 0);
}

uint64_t sub_1003A28C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 280)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess(v1, v0 + 224, 32, 0);
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_10045C2DC(*(_QWORD *)(v0 + 272)), (v4 & 1) != 0))
  {
    sub_100244418(*(_QWORD *)(v2 + 56) + 40 * v3, v0 + 104);
  }
  else
  {
    *(_QWORD *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  v6 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 376);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 272);
  swift_endAccess(v0 + 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  v9 = *(_QWORD *)(v0 + 376);
  if (*(_QWORD *)(v0 + 128))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(v9, *(_QWORD *)(v0 + 360));
    sub_10026EE60((__int128 *)(v0 + 104), v0 + 64);
LABEL_15:
    sub_10026EE60((__int128 *)(v0 + 64), v0 + 144);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    sub_10023A834((_QWORD *)(v0 + 144), v25);
    v27 = *(int **)(v26 + 40);
    v37 = (uint64_t (*)(uint64_t, uint64_t))((char *)v27 + *v27);
    v28 = (_QWORD *)swift_task_alloc(v27[1]);
    *(_QWORD *)(v0 + 392) = v28;
    *v28 = v0;
    v28[1] = sub_1003A2BE0;
    return v37(v25, v26);
  }
  v10 = *(_QWORD *)(v0 + 280);
  v11 = UUID.uuidString.getter(v9);
  v13 = v12;
  v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v0 + 248, 32, 0);
  v15 = *v14;
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_10045C200(v11, (uint64_t)v13), (v17 & 1) != 0))
  {
    sub_100340E40(*(_QWORD *)(v15 + 56) + 48 * v16, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  swift_bridgeObjectRelease(v13);
  swift_endAccess(v0 + 248);
  v18 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 368);
  v19 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 360);
  if (v18)
  {
    v22 = *(_QWORD *)(v0 + 48);
    v23 = sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 88) = v18;
    *(_QWORD *)(v0 + 96) = v22;
    v24 = sub_100244348((_QWORD *)(v0 + 64));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v24, v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_10022E75C((_QWORD *)(v0 + 16));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v20 + 8))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360));
    sub_10000D0F0(v0 + 16, &qword_1007BD8F8);
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_QWORD *)(v0 + 96) = 0;
  }
  sub_10000D0F0(v0 + 104, &qword_1007B8150);
  if (*(_QWORD *)(v0 + 88))
    goto LABEL_15;
  sub_10000D0F0(v0 + 64, &qword_1007B8150);
  v30 = *(_QWORD *)(v0 + 344);
  v31 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v34 = *(_QWORD *)(v0 + 320);
  v36 = *(_QWORD *)(v0 + 288);
  v35 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
}

uint64_t sub_1003A2BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A2C3C, v3, 0);
}

void sub_1003A2C3C()
{
  uint64_t v0;
  const char *v1;
  id v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  double v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;

  v52 = (_QWORD *)(v0 + 144);
  v1 = *(const char **)(v0 + 400);
  v2 = *(id *)(v0 + 280);
  swift_bridgeObjectRetain(v1);
  sub_1003AA818(v3);
  v5 = v4;
  v6 = 0;

  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v1).n128_u64[0];
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 400), v7);
    v44 = (_QWORD *)swift_task_alloc(dword_1007BDAEC);
    *(_QWORD *)(v0 + 408) = v44;
    *v44 = v0;
    v44[1] = sub_1003A30E4;
    sub_1003A3A3C(v0 + 184, (uint64_t)v52);
    return;
  }
  v8 = 0;
  v9 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 312);
  v54 = v9;
  v55 = v9 + 56;
  v11 = -1;
  v12 = -1 << *(_BYTE *)(v9 + 32);
  if (-v12 < 64)
    v11 = ~(-1 << -(char)v12);
  v13 = v11 & *(_QWORD *)(v9 + 56);
  v56 = (unint64_t)(63 - v12) >> 6;
  v57 = *(_QWORD *)(v0 + 312);
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v8 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v8 >= v56)
      goto LABEL_32;
    v21 = *(_QWORD *)(v55 + 8 * v8);
    if (!v21)
      break;
LABEL_20:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v8 << 6);
LABEL_21:
    v23 = *(_QWORD *)(v0 + 344);
    v24 = *(_QWORD *)(v0 + 352);
    sub_100244384(*(_QWORD *)(v9 + 48) + *(_QWORD *)(v10 + 72) * v19, v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4(v24, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003A2390(v23);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(v0 + 344);
      v28 = *(_QWORD *)(v0 + 296);
      v27 = *(_QWORD *)(v0 + 304);
      v29 = swift_task_alloc(32);
      *(_QWORD *)(v29 + 16) = v26;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton, v52);
      sub_10034610C((uint64_t (*)(char *))sub_1003AB26C, (uint64_t)&_swiftEmptySetSingleton, v28);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v29);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v28, 1, v27);
      v31 = *(_QWORD *)(v0 + 344);
      if (v30 == 1)
      {
        v15 = *(_QWORD *)(v0 + 320);
        v14 = *(_QWORD *)(v0 + 328);
        sub_10000D0F0(*(_QWORD *)(v0 + 296), &qword_1007B7760);
        sub_100244384(v31, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
        v16 = v15;
        v10 = v57;
        sub_10045DA0C(v14, v16);
        v17 = (uint64_t *)(v0 + 328);
        v9 = v54;
      }
      else
      {
        sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 336), type metadata accessor for SDAirDropDiscoveredEndpoint);
        sub_1002B6D3C();
        v33 = v32;
        sub_1002B6D3C();
        v34 = *(_QWORD *)(v0 + 344);
        if (v35 >= v33)
        {
          v43 = *(_QWORD *)(v0 + 320);
          v42 = *(_QWORD *)(v0 + 328);
          sub_100244384(*(_QWORD *)(v0 + 344), v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_10045DA0C(v42, v43);
          v41 = v42;
        }
        else
        {
          v37 = *(_QWORD *)(v0 + 328);
          v36 = *(_QWORD *)(v0 + 336);
          v53 = v6;
          v38 = *(_QWORD *)(v0 + 320);
          v39 = *(_QWORD *)(v0 + 288);
          sub_100244384(v36, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_10045DA0C(v37, v38);
          sub_1002443C8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100472B6C(v36, v39);
          sub_10000D0F0(v39, &qword_1007B7760);
          sub_100244384(v34, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
          v40 = v38;
          v6 = v53;
          sub_10045DA0C(v37, v40);
          v41 = v37;
        }
        sub_1002443C8(v41, type metadata accessor for SDAirDropDiscoveredEndpoint);
        v17 = (uint64_t *)(v0 + 336);
        v9 = v54;
        v10 = v57;
      }
      sub_1002443C8(*v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    sub_1002443C8(*(_QWORD *)(v0 + 344), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v22 = v8 + 1;
  if (v8 + 1 >= v56)
    goto LABEL_32;
  v21 = *(_QWORD *)(v55 + 8 * v22);
  if (v21)
    goto LABEL_19;
  v22 = v8 + 2;
  if (v8 + 2 >= v56)
    goto LABEL_32;
  v21 = *(_QWORD *)(v55 + 8 * v22);
  if (v21)
    goto LABEL_19;
  v22 = v8 + 3;
  if (v8 + 3 >= v56)
  {
LABEL_32:
    swift_release(v9);
    sub_10022E75C(v52);
    v46 = *(_QWORD *)(v0 + 344);
    v45 = *(_QWORD *)(v0 + 352);
    v48 = *(_QWORD *)(v0 + 328);
    v47 = *(_QWORD *)(v0 + 336);
    v49 = *(_QWORD *)(v0 + 320);
    v51 = *(_QWORD *)(v0 + 288);
    v50 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    (*(void (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
    return;
  }
  v21 = *(_QWORD *)(v55 + 8 * v22);
  if (v21)
  {
LABEL_19:
    v8 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v8 >= v56)
      goto LABEL_32;
    v21 = *(_QWORD *)(v55 + 8 * v8);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1003A30E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(*v1 + 416) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003A3634;
  else
    v4 = sub_1003A3148;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 384), 0);
}

uint64_t sub_1003A3148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[26];
  v2 = v0[27];
  sub_10023A834(v0 + 23, v1);
  v3 = *(int **)(v2 + 40);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[53] = v4;
  *v4 = v0;
  v4[1] = sub_1003A31C0;
  return v6(v1, v2);
}

uint64_t sub_1003A31C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A3220, v3, 0);
}

uint64_t sub_1003A3220()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;

  result = sub_10022E75C((_QWORD *)(v0 + 184));
  v2 = 0;
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 312);
  v47 = v3 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(v3 + 56);
  v48 = (unint64_t)(63 - v6) >> 6;
  v45 = *(_QWORD *)(v0 + 312);
  v46 = *(_QWORD *)(v0 + 432);
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v2 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v2 >= v48)
      goto LABEL_30;
    v16 = *(_QWORD *)(v47 + 8 * v2);
    if (!v16)
      break;
LABEL_19:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v2 << 6);
LABEL_20:
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 352);
    sub_100244384(*(_QWORD *)(v3 + 48) + *(_QWORD *)(v4 + 72) * v14, v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4(v19, v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003A2390(v18);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(v0 + 344);
      v23 = *(_QWORD *)(v0 + 296);
      v22 = *(_QWORD *)(v0 + 304);
      v24 = swift_task_alloc(32);
      *(_QWORD *)(v24 + 16) = v21;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton);
      sub_10034610C((uint64_t (*)(char *))sub_1003AB26C, (uint64_t)&_swiftEmptySetSingleton, v23);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v24);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v23, 1, v22);
      v26 = *(_QWORD *)(v0 + 344);
      if (v25 == 1)
      {
        v9 = *(_QWORD *)(v0 + 320);
        v8 = *(_QWORD *)(v0 + 328);
        sub_10000D0F0(*(_QWORD *)(v0 + 296), &qword_1007B7760);
        sub_100244384(v26, v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
        v10 = v8;
        v11 = v9;
        v4 = v45;
        v3 = v46;
        sub_10045DA0C(v10, v11);
        v12 = (uint64_t *)(v0 + 328);
      }
      else
      {
        sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 336), type metadata accessor for SDAirDropDiscoveredEndpoint);
        sub_1002B6D3C();
        v28 = v27;
        sub_1002B6D3C();
        v29 = *(_QWORD *)(v0 + 344);
        if (v30 >= v28)
        {
          v37 = *(_QWORD *)(v0 + 320);
          v36 = *(_QWORD *)(v0 + 328);
          sub_100244384(*(_QWORD *)(v0 + 344), v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_10045DA0C(v36, v37);
          v35 = v36;
        }
        else
        {
          v32 = *(_QWORD *)(v0 + 328);
          v31 = *(_QWORD *)(v0 + 336);
          v33 = *(_QWORD *)(v0 + 320);
          v34 = *(_QWORD *)(v0 + 288);
          sub_100244384(v31, v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_10045DA0C(v32, v33);
          sub_1002443C8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100472B6C(v31, v34);
          sub_10000D0F0(v34, &qword_1007B7760);
          sub_100244384(v29, v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_10045DA0C(v32, v33);
          v35 = v32;
        }
        sub_1002443C8(v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
        v12 = (uint64_t *)(v0 + 336);
        v4 = v45;
        v3 = v46;
      }
      sub_1002443C8(*v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    result = sub_1002443C8(*(_QWORD *)(v0 + 344), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v17 = v2 + 1;
  if (v2 + 1 >= v48)
    goto LABEL_30;
  v16 = *(_QWORD *)(v47 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v2 + 2;
  if (v2 + 2 >= v48)
    goto LABEL_30;
  v16 = *(_QWORD *)(v47 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v2 + 3;
  if (v2 + 3 >= v48)
  {
LABEL_30:
    swift_release(v3);
    sub_10022E75C((_QWORD *)(v0 + 144));
    v39 = *(_QWORD *)(v0 + 344);
    v38 = *(_QWORD *)(v0 + 352);
    v41 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 320);
    v44 = *(_QWORD *)(v0 + 288);
    v43 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
  }
  v16 = *(_QWORD *)(v47 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v2 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v2 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v2 >= v48)
      goto LABEL_30;
    v16 = *(_QWORD *)(v47 + 8 * v2);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1003A3634()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*i)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;

  result = swift_errorRelease(*(_QWORD *)(v0 + 416));
  v2 = 0;
  v44 = *(_QWORD *)(v0 + 312);
  v3 = -1;
  v4 = -1 << *((_BYTE *)&_swiftEmptySetSingleton + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *((_QWORD *)&_swiftEmptySetSingleton + 7);
  v43 = (unint64_t)(63 - v4) >> 6;
  for (i = type metadata accessor for SDAirDropDiscoveredEndpoint; ; result = sub_1002443C8(*(_QWORD *)(v0 + 344), i))
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v2 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v2 >= v43)
      goto LABEL_30;
    v13 = *((_QWORD *)&_swiftEmptySetSingleton + v2 + 7);
    if (!v13)
      break;
LABEL_19:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_20:
    v15 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 352);
    sub_100244384(*((_QWORD *)&_swiftEmptySetSingleton + 6) + *(_QWORD *)(v44 + 72) * v11, v16, i);
    sub_100221DB4(v16, v15, i);
    sub_1003A2390(v15);
    if ((v17 & 1) != 0)
    {
      v18 = i;
      v19 = *(_QWORD *)(v0 + 344);
      v21 = *(_QWORD *)(v0 + 296);
      v20 = *(_QWORD *)(v0 + 304);
      v22 = swift_task_alloc(32);
      *(_QWORD *)(v22 + 16) = v19;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton);
      sub_10034610C((uint64_t (*)(char *))sub_1003AB26C, (uint64_t)&_swiftEmptySetSingleton, v21);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v22);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v21, 1, v20);
      v24 = *(_QWORD *)(v0 + 344);
      if (v23 == 1)
      {
        v8 = *(_QWORD *)(v0 + 320);
        v7 = *(_QWORD *)(v0 + 328);
        sub_10000D0F0(*(_QWORD *)(v0 + 296), &qword_1007B7760);
        i = v18;
        sub_100244384(v24, v8, v18);
        sub_10045DA0C(v7, v8);
        v9 = (uint64_t *)(v0 + 328);
      }
      else
      {
        i = v18;
        sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 336), v18);
        sub_1002B6D3C();
        v26 = v25;
        sub_1002B6D3C();
        v27 = *(_QWORD *)(v0 + 344);
        if (v28 >= v26)
        {
          v35 = *(_QWORD *)(v0 + 320);
          v34 = *(_QWORD *)(v0 + 328);
          sub_100244384(*(_QWORD *)(v0 + 344), v35, v18);
          sub_10045DA0C(v34, v35);
          v33 = v34;
        }
        else
        {
          v30 = *(_QWORD *)(v0 + 328);
          v29 = *(_QWORD *)(v0 + 336);
          v31 = *(_QWORD *)(v0 + 320);
          v32 = *(_QWORD *)(v0 + 288);
          sub_100244384(v29, v31, v18);
          sub_10045DA0C(v30, v31);
          sub_1002443C8(v30, v18);
          sub_100472B6C(v29, v32);
          sub_10000D0F0(v32, &qword_1007B7760);
          sub_100244384(v27, v31, v18);
          sub_10045DA0C(v30, v31);
          v33 = v30;
          i = v18;
        }
        sub_1002443C8(v33, v18);
        v9 = (uint64_t *)(v0 + 336);
      }
      sub_1002443C8(*v9, i);
    }
  }
  v14 = v2 + 1;
  if (v2 + 1 >= v43)
    goto LABEL_30;
  v13 = *((_QWORD *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13)
    goto LABEL_18;
  v14 = v2 + 2;
  if (v2 + 2 >= v43)
    goto LABEL_30;
  v13 = *((_QWORD *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13)
    goto LABEL_18;
  v14 = v2 + 3;
  if (v2 + 3 >= v43)
  {
LABEL_30:
    swift_release(&_swiftEmptySetSingleton);
    sub_10022E75C((_QWORD *)(v0 + 144));
    v37 = *(_QWORD *)(v0 + 344);
    v36 = *(_QWORD *)(v0 + 352);
    v39 = *(_QWORD *)(v0 + 328);
    v38 = *(_QWORD *)(v0 + 336);
    v40 = *(_QWORD *)(v0 + 320);
    v42 = *(_QWORD *)(v0 + 288);
    v41 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
  }
  v13 = *((_QWORD *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13)
  {
LABEL_18:
    v2 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v43)
      goto LABEL_30;
    v13 = *((_QWORD *)&_swiftEmptySetSingleton + v2 + 7);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1003A3A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = swift_getObjectType(v2);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v3[6] = static AirDropActor.shared;
  return swift_task_switch(sub_1003A3AB8, v4, 0);
}

uint64_t sub_1003A3AB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[3];
  v4 = static AirDropActor.shared;
  v5 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v6 = swift_allocObject(&unk_100725A38, 24, 7);
  v0[7] = v6;
  swift_unknownObjectWeakInit(v6 + 16, v1);
  v7 = (_QWORD *)swift_task_alloc(48);
  v0[8] = v7;
  v7[2] = v3;
  v7[3] = v6;
  v7[4] = v2;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[9] = v8;
  v9 = sub_100008384((uint64_t *)&unk_1007BD940);
  *v8 = v0;
  v8[1] = sub_1003A3BC8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0[2], v4, v5, 0xD000000000000024, 0x80000001006189F0, sub_1003AB288, v7, v9);
}

uint64_t sub_1003A3BC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1003A3C48, *(_QWORD *)(v3 + 48), 0);
  v5 = *(_QWORD *)(v3 + 64);
  swift_release(*(_QWORD *)(v3 + 56));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1003A3C48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003A3C84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - v7;
  sub_100244384(a1, (uint64_t)&v11 - v7, v9);
  v10 = (char *)&loc_1003A3DB4 + dword_1003A4034[swift_getEnumCaseMultiPayload(v8, v5)];
  __asm { BR              X10 }
}

void sub_1003A3DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t device_id;
  char *v9;

  v5 = sub_100221DB4(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v6 = NWEndpoint.nw.getter(v5);
  if (v6)
  {
    v7 = v6;
    device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v7);
    if (device_id)
      String.init(cString:)(device_id);
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v2, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v9 = (char *)&loc_1003A3EAC + dword_1003A4044[swift_getEnumCaseMultiPayload(v4, v0)];
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1003A4030);
}

uint64_t sub_1003A4054(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  __int128 v52[2];

  v47 = a1;
  v7 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v7);
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007BDA70);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 + 16;
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007BD820);
  v14 = sub_100244418((uint64_t)a2, (uint64_t)v52);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v46 = a4;
    v19 = v18;
    v51[0] = v18;
    *(_DWORD *)v17 = 136315138;
    sub_100244418((uint64_t)v52, (uint64_t)&v49);
    v20 = sub_100008384((uint64_t *)&unk_1007BD940);
    v21 = String.init<A>(describing:)(&v49, v20);
    v23 = (const char *)v22;
    v49 = sub_100228BD8(v21, v22, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v17 + 4);
    swift_bridgeObjectRelease(v23);
    sub_10022E75C(v52);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Connectable (%s) requires Bonjour discovery", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v24 = v19;
    a4 = v46;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    sub_10022E75C(v52);
  }

  swift_beginAccess(v12, &v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12, v25);
  if (Strong)
  {
    v27 = (char *)Strong;
    v28 = a2[3];
    v29 = a2[4];
    sub_10023A834(a2, v28);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    v32 = v31;
    v33 = sub_100008384(&qword_1007B6640);
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v11, v47, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v33);
    swift_beginAccess(&v27[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations], v52, 33, 0);
    sub_100395294((uint64_t)v11, v30, v32);
    swift_endAccess(v52);

  }
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v48, 1, 1, v35);
  v37 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(v12, v51, 0, 0);
  v39 = (void *)swift_unknownObjectWeakLoadStrong(v12, v38);
  swift_unknownObjectWeakInit(v37 + 16, v39);

  sub_100244418((uint64_t)a2, (uint64_t)v52);
  v40 = qword_1007B3D98;
  swift_retain(v37);
  if (v40 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v41 = static AirDropActor.shared;
  v42 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v43 = (_QWORD *)swift_allocObject(&unk_100725BF0, 88, 7);
  v43[2] = v41;
  v43[3] = v42;
  v43[4] = v37;
  sub_10026EE60(v52, (uint64_t)(v43 + 5));
  v43[10] = a4;
  swift_retain(v41);
  swift_release(v37);
  v44 = sub_100252AF4(v36, (uint64_t)&unk_1007BDAF8, (uint64_t)v43);
  return swift_release(v44);
}

uint64_t sub_1003A4498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[13] = a4;
  v5[14] = a5;
  v6 = sub_100008384(&qword_1007B68A0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContinuousClock(0);
  v5[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[17] = v8;
  v5[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v5[19] = static AirDropActor.shared;
  return swift_task_switch(sub_1003A4550, v9, 0);
}

uint64_t sub_1003A4550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10039A69C();

  }
  ContinuousClock.init()(Strong);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v5 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 160) = v5;
  *v5 = v0;
  v5[1] = sub_1003A4604;
  return v7(0x70801D946C940000, 2, 0, 0, 1);
}

uint64_t sub_1003A4604()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  v5 = *(_QWORD *)(*v1 + 136);
  v4 = *(_QWORD *)(*v1 + 144);
  v6 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1003A47F0;
  else
    v7 = sub_1003A4690;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 152), 0);
}

uint64_t sub_1003A4690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104) + 16;
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = swift_allocObject(&unk_100725A38, 24, 7);
  swift_beginAccess(v4, v0 + 80, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4, v7);
  swift_unknownObjectWeakInit(v6 + 16, Strong);

  sub_100244418(v3, v0 + 16);
  v9 = static AirDropActor.shared;
  v10 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v11 = (_QWORD *)swift_allocObject(&unk_100725C18, 80, 7);
  v11[2] = v9;
  v11[3] = v10;
  sub_10026EE60((__int128 *)(v0 + 16), (uint64_t)(v11 + 4));
  v11[9] = v6;
  swift_retain(v9);
  v12 = sub_100252EC0(v2, (uint64_t)&unk_1007BDB08, (uint64_t)v11);
  swift_release(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A47F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A4830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[26] = a4;
  v5[27] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BDA70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[28] = swift_task_alloc(v6);
  v5[29] = swift_task_alloc(v6);
  v7 = sub_100008384(&qword_1007B6640);
  v5[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[31] = v8;
  v5[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003A48F8, static AirDropActor.shared, 0);
}

uint64_t sub_1003A48F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;

  v1 = v0 + 168;
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v3 = v0 + 208;
  v2 = *(_QWORD *)(v0 + 208);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BD820);
  v5 = sub_100244418(v2, v0 + 16);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v60 = v9;
    *(_DWORD *)v8 = 136315138;
    sub_100244418(v0 + 16, v0 + 56);
    v10 = sub_100008384((uint64_t *)&unk_1007BD940);
    v11 = String.init<A>(describing:)(v0 + 56, v10);
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 200) = sub_100228BD8(v11, v12, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v8 + 4);
    swift_bridgeObjectRelease(v13);
    sub_10022E75C((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Bonjour discovery timed out for (%s)", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    v14 = v8;
    v1 = v0 + 168;
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_10022E75C((_QWORD *)(v0 + 16));
  }

  v15 = *(_QWORD *)(v0 + 216) + 16;
  swift_beginAccess(v15, v1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15, v16);
  if (!Strong)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 56))(*(_QWORD *)(v0 + 232), 1, 1, *(_QWORD *)(v0 + 240));
LABEL_14:
    sub_10000D0F0(*(_QWORD *)(v0 + 232), &qword_1007BDA70);
    goto LABEL_18;
  }
  v18 = (char *)Strong;
  v19 = *(_QWORD **)v3;
  v20 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  v21 = v19[4];
  sub_10023A834(v19, v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  v24 = v23;
  v25 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations];
  v26 = swift_beginAccess(&v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations], v0 + 96, 32, 0);
  v27 = *(_QWORD *)v25;
  if (*(_QWORD *)(v27 + 16))
  {
    v28 = sub_10045C200(v22, (uint64_t)v24);
    v30 = *(_QWORD *)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 248);
    v32 = *(_QWORD *)(v0 + 232);
    if ((v33 & 1) != 0)
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v31 + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v27 + 56) + *(_QWORD *)(v31 + 72) * v28, *(_QWORD *)(v0 + 240));
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
      v34(v32, 0, 1, v30, v35);
    }
    else
    {
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
      v34(*(_QWORD *)(v0 + 232), 1, 1, v30, v29);
    }
  }
  else
  {
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 248) + 56);
    v34(*(_QWORD *)(v0 + 232), 1, 1, *(_QWORD *)(v0 + 240), v26);
  }
  v36 = *(_QWORD *)(v0 + 240);
  v37 = *(_QWORD *)(v0 + 248);
  v38 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRelease(v24);
  swift_endAccess(v0 + 96);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
    goto LABEL_14;
  v39 = *(_QWORD *)(v0 + 216) + 16;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
  swift_beginAccess(v39, v0 + 120, 0, 0);
  v41 = swift_unknownObjectWeakLoadStrong(v39, v40);
  if (v41)
  {
    v42 = (char *)v41;
    v43 = *(_QWORD *)(v0 + 240);
    v44 = *(_QWORD *)(v0 + 224);
    v46 = v19[3];
    v45 = v19[4];
    sub_10023A834(*(_QWORD **)(v0 + 208), v46);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(v46, v45);
    v49 = v48;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v44, 1, 1, v43);
    swift_beginAccess(&v42[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations], v0 + 144, 33, 0);
    sub_100395294(v44, v47, v49);
    swift_endAccess(v0 + 144);

  }
  v51 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 240);
  v53 = type metadata accessor for SFAirDropSend.Failure(0);
  v54 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  v55 = swift_allocError(v53, v54, 0, 0);
  *v56 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v56, enum case for SFAirDropSend.Failure.resolveFailure(_:), v53);
  *(_QWORD *)(v0 + 192) = v55;
  CheckedContinuation.resume(throwing:)(v0 + 192, v52);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
LABEL_18:
  v57 = *(_QWORD *)(v0 + 224);
  v58 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v58);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A4DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7280) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[14] = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v6[15] = v10;
  v11 = type metadata accessor for UUID(0);
  v6[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[17] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[18] = swift_task_alloc(v13);
  v6[19] = swift_task_alloc(v13);
  v6[20] = swift_task_alloc(v13);
  v6[21] = swift_task_alloc(v13);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6[22] = static AirDropActor.shared;
  v14 = (_QWORD *)swift_task_alloc(dword_1007BD934);
  v6[23] = v14;
  *v14 = v6;
  v14[1] = sub_1003A4EF0;
  return sub_1003A5A28(v10, a2, a3);
}

uint64_t sub_1003A4EF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  return swift_task_switch(sub_1003A4F44, v1, 0);
}

uint64_t sub_1003A4F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v9)(_QWORD, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  const char *v29;
  __n128 v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 192) = v4;
  if (v4(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 96);
    sub_10000D0F0(v3, &qword_1007B7280);
    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 96);
      v7 = (_QWORD *)swift_task_alloc(dword_1007BD934);
      *(_QWORD *)(v0 + 200) = v7;
      *v7 = v0;
      v7[1] = sub_1003A54B8;
      return sub_1003A5A28(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), v6);
    }
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v32 = *(const char **)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    v34 = type metadata accessor for Logger(0);
    sub_100221DF8(v34, (uint64_t)qword_1007BD820);
    swift_bridgeObjectRetain_n(v32, 2);
    v35 = swift_bridgeObjectRetain_n(v33, 2);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v52 = *(_QWORD *)(v0 + 96);
      v38 = *(const char **)(v0 + 80);
      v54 = *(_QWORD *)(v0 + 88);
      v39 = *(_QWORD *)(v0 + 72);
      v40 = swift_slowAlloc(22, -1);
      v41 = swift_slowAlloc(64, -1);
      v55 = v41;
      *(_DWORD *)v40 = 136315394;
      swift_bridgeObjectRetain(v38);
      *(_QWORD *)(v0 + 16) = sub_100228BD8(v39, (unint64_t)v38, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v40 + 4);
      swift_bridgeObjectRelease_n(v38, 3);
      *(_WORD *)(v40 + 12) = 2080;
      if (v52)
        v42 = v54;
      else
        v42 = 7104878;
      if (v52)
        v43 = v32;
      else
        v43 = (const char *)0xE300000000000000;
      swift_bridgeObjectRetain(v32);
      *(_QWORD *)(v0 + 24) = sub_100228BD8(v42, (unint64_t)v43, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v40 + 14);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease_n(v32, 2);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 80), 2);
      swift_bridgeObjectRelease_n(v32, 2);
    }

    v31 = 1;
  }
  else
  {
    v9 = *(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32);
    v9(*(_QWORD *)(v0 + 168), v3, v1);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 80);
    v15 = type metadata accessor for Logger(0);
    sub_100221DF8(v15, (uint64_t)qword_1007BD820);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
    v16 = swift_bridgeObjectRetain_n(v14, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(const char **)(v0 + 80);
    if (v19)
    {
      v53 = v9;
      v24 = *(_QWORD *)(v0 + 72);
      v50 = *(_QWORD *)(v0 + 136);
      v25 = swift_slowAlloc(22, -1);
      v51 = swift_slowAlloc(64, -1);
      v55 = v51;
      *(_DWORD *)v25 = 136315394;
      swift_bridgeObjectRetain(v23);
      *(_QWORD *)(v0 + 48) = sub_100228BD8(v24, (unint64_t)v23, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v25 + 4);
      swift_bridgeObjectRelease_n(v23, 3);
      *(_WORD *)(v25 + 12) = 2080;
      v26 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v27 = dispatch thunk of CustomStringConvertible.description.getter(v22, v26);
      v29 = (const char *)v28;
      *(_QWORD *)(v0 + 56) = sub_100228BD8(v27, v28, &v55);
      v9 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v25 + 14);
      v30 = swift_bridgeObjectRelease(v29);
      (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v20, v22, v30);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Matched senderID %s to %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 80), 2);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }

    v9(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
    v31 = 0;
  }
  v44 = *(_QWORD *)(v0 + 160);
  v45 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 152);
  v49 = *(_QWORD *)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 64), v31, 1, *(_QWORD *)(v0 + 128));
  swift_task_dealloc(v45);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A54B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_1003A5510, v1, 0);
}

uint64_t sub_1003A5510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void (*v15)(_QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  const char *v35;
  const char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, uint64_t, uint64_t);
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192))(v2, 1, v1) == 1)
  {
    sub_10000D0F0(v2, &qword_1007B7280);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v3 = *(const char **)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = type metadata accessor for Logger(0);
    sub_100221DF8(v5, (uint64_t)qword_1007BD820);
    swift_bridgeObjectRetain_n(v3, 2);
    v6 = swift_bridgeObjectRetain_n(v4, 2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v46 = *(_QWORD *)(v0 + 96);
      v9 = *(const char **)(v0 + 80);
      v48 = *(_QWORD *)(v0 + 88);
      v10 = *(_QWORD *)(v0 + 72);
      v11 = swift_slowAlloc(22, -1);
      v12 = swift_slowAlloc(64, -1);
      v51 = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain(v9);
      *(_QWORD *)(v0 + 16) = sub_100228BD8(v10, (unint64_t)v9, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v11 + 4);
      swift_bridgeObjectRelease_n(v9, 3);
      *(_WORD *)(v11 + 12) = 2080;
      if (v46)
        v13 = v48;
      else
        v13 = 7104878;
      if (v46)
        v14 = v3;
      else
        v14 = (const char *)0xE300000000000000;
      swift_bridgeObjectRetain(v3, v0 + 16);
      *(_QWORD *)(v0 + 24) = sub_100228BD8(v13, (unint64_t)v14, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v11 + 14);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v3, 2);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 80), 2);
      swift_bridgeObjectRelease_n(v3, 2);
    }

    v38 = 1;
  }
  else
  {
    v15 = *(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32);
    v15(*(_QWORD *)(v0 + 152), v2, v1);
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = type metadata accessor for Logger(0);
    sub_100221DF8(v21, (uint64_t)qword_1007BD820);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v16, v19);
    v22 = swift_bridgeObjectRetain_n(v20, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 128);
    v29 = *(const char **)(v0 + 80);
    if (v25)
    {
      v47 = *(_QWORD *)(v0 + 136);
      v30 = *(_QWORD *)(v0 + 72);
      v31 = swift_slowAlloc(22, -1);
      v49 = swift_slowAlloc(64, -1);
      *(_DWORD *)v31 = 136315394;
      v50 = v15;
      v51 = v49;
      swift_bridgeObjectRetain(v29);
      *(_QWORD *)(v0 + 32) = sub_100228BD8(v30, (unint64_t)v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v31 + 4);
      swift_bridgeObjectRelease_n(v29, 3);
      *(_WORD *)(v31 + 12) = 2080;
      v32 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v33 = dispatch thunk of CustomStringConvertible.description.getter(v28, v32);
      v35 = (const char *)v34;
      *(_QWORD *)(v0 + 40) = sub_100228BD8(v33, v34, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v31 + 14);
      v36 = v35;
      v15 = v50;
      v37 = swift_bridgeObjectRelease(v36);
      (*(void (**)(uint64_t, uint64_t, __n128))(v47 + 8))(v27, v28, v37);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Matched contactID %s to %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 80), 2);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    }

    v15(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
    v38 = 0;
  }
  v39 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 168);
  v42 = *(_QWORD *)(v0 + 144);
  v41 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 112);
  v43 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 64), v38, 1, *(_QWORD *)(v0 + 128));
  swift_task_dealloc(v40);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A5A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[33] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[34] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[35] = swift_task_alloc(v7);
  v4[36] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7760) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[37] = swift_task_alloc(v8);
  v4[38] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7280) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[39] = swift_task_alloc(v9);
  v4[40] = swift_task_alloc(v9);
  v10 = type metadata accessor for UUID(0);
  v4[41] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[42] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[43] = swift_task_alloc(v12);
  v4[44] = swift_task_alloc(v12);
  v4[45] = swift_task_alloc(v12);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  v4[46] = static AirDropActor.shared;
  return swift_task_switch(sub_1003A5B7C, v13, 0);
}

uint64_t sub_1003A5B7C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  const char **v9;
  double v10;
  const char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  double v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  _QWORD *v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  const char *v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  char *v84;
  uint8_t *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  const char *v91;
  void *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  char *v96;
  const char **v97;
  uint8_t *v98;
  double v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  const char *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  uint64_t v126;

  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 320);
  UUID.init(uuidString:)(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 376) = v5;
  if (v5(v4, 1, v2) == 1)
  {
    v121 = v0 + 224;
    sub_10000D0F0(*(_QWORD *)(v0 + 320), &qword_1007B7280);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 336) + 32);
    v8(v6, *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
    v9 = (const char **)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
    *(_QWORD *)&v10 = swift_beginAccess(v9, v0 + 144, 0, 0).n128_u64[0];
    v11 = *v9;
    swift_bridgeObjectRetain(*v9, v10);
    LOBYTE(v6) = sub_1004551A4(v6, (uint64_t)v11);
    v12 = swift_bridgeObjectRelease(v11);
    if ((v6 & 1) != 0)
    {
      if (qword_1007B3FD0 != -1)
        swift_once(&qword_1007B3FD0, sub_100398F4C);
      v13 = *(_QWORD *)(v0 + 352);
      v14 = *(_QWORD *)(v0 + 360);
      v15 = *(_QWORD *)(v0 + 328);
      v16 = *(_QWORD *)(v0 + 336);
      v17 = type metadata accessor for Logger(0);
      sub_100221DF8(v17, (uint64_t)qword_1007BD820);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      v21 = os_log_type_enabled(v19, v20);
      v22 = *(_QWORD *)(v0 + 352);
      v23 = *(_QWORD *)(v0 + 328);
      v24 = *(_QWORD *)(v0 + 336);
      if (v21)
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v126 = v26;
        *(_DWORD *)v25 = 136315138;
        v27 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v28 = dispatch thunk of CustomStringConvertible.description.getter(v23, v27);
        v30 = (const char *)v29;
        *(_QWORD *)(v0 + 224) = sub_100228BD8(v28, v29, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v25 + 4);
        v31 = swift_bridgeObjectRelease(v30);
        (*(void (**)(uint64_t, uint64_t, __n128))(v24 + 8))(v22, v23, v31);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Direct match to displayable found %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v24 + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
      }

      v107 = *(_QWORD *)(v0 + 328);
      v108 = *(_QWORD *)(v0 + 336);
      v109 = *(_QWORD *)(v0 + 232);
      v8(v109, *(_QWORD *)(v0 + 360), v107);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v109, 0, 1, v107);
      goto LABEL_49;
    }
    v121 = v0 + 224;
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 328), v12);
  }
  v120 = (_QWORD *)(v0 + 16);
  v124 = v0 + 200;
  v118 = (__int128 *)(v0 + 56);
  v32 = *(_QWORD *)(v0 + 256);
  v33 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  *(_QWORD *)(v0 + 384) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  v34 = (uint64_t *)(v32 + v33);
  *(_QWORD *)&v35 = swift_beginAccess(v32 + v33, v0 + 96, 0, 0).n128_u64[0];
  v36 = *v34;
  *(_QWORD *)(v0 + 392) = *v34;
  v37 = *(_BYTE *)(v36 + 32);
  *(_BYTE *)(v0 + 464) = v37;
  v38 = 1 << v37;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  else
    v39 = -1;
  v40 = v39 & *(_QWORD *)(v36 + 56);
  *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID;
  *(_QWORD *)(v0 + 408) = 0;
  swift_bridgeObjectRetain((const char *)v36, v35);
  v41 = 0;
  while (1)
  {
    if (v40)
    {
      v45 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v46 = v45 | (v41 << 6);
      v47 = *(_QWORD *)(v0 + 392);
      goto LABEL_30;
    }
    v48 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v49 = (unint64_t)((1 << *(_BYTE *)(v0 + 464)) + 63) >> 6;
    v47 = *(_QWORD *)(v0 + 392);
    if (v48 >= v49)
      goto LABEL_35;
    v50 = v47 + 56;
    v51 = *(_QWORD *)(v47 + 56 + 8 * v48);
    ++v41;
    if (!v51)
    {
      v41 = v48 + 1;
      if (v48 + 1 >= v49)
        goto LABEL_35;
      v51 = *(_QWORD *)(v50 + 8 * v41);
      if (!v51)
      {
        v41 = v48 + 2;
        if (v48 + 2 >= v49)
          goto LABEL_35;
        v51 = *(_QWORD *)(v50 + 8 * v41);
        if (!v51)
          break;
      }
    }
LABEL_29:
    v40 = (v51 - 1) & v51;
    v46 = __clz(__rbit64(v51)) + (v41 << 6);
LABEL_30:
    *(_QWORD *)(v0 + 416) = v41;
    *(_QWORD *)(v0 + 424) = v40;
    v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
    v54 = *(_QWORD *)(v0 + 328);
    v55 = *(_QWORD *)(v0 + 336);
    v56 = *(_QWORD *)(v0 + 312);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v55 + 16))(v56, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v55 + 72) * v46, v54);
    v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
    *(_QWORD *)(v0 + 432) = v1;
    v1(v56, 0, 1, v54);
    if (v53(v56, 1, v54) == 1)
    {
      v70 = *(_QWORD *)(v0 + 392);
      goto LABEL_36;
    }
    v57 = *(_QWORD *)(v0 + 344);
    v58 = *(_QWORD *)(v0 + 328);
    v59 = *(_QWORD *)(v0 + 312);
    v60 = (uint64_t *)(*(_QWORD *)(v0 + 256) + *(_QWORD *)(v0 + 400));
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 32);
    *(_QWORD *)(v0 + 440) = v61;
    v61(v57, v59, v58);
    swift_beginAccess(v60, v0 + 168, 32, 0);
    v62 = *v60;
    if (*(_QWORD *)(v62 + 16))
    {
      v63 = sub_10045C2DC(*(_QWORD *)(v0 + 344));
      if ((v64 & 1) != 0)
      {
        sub_100244418(*(_QWORD *)(v62 + 56) + 40 * v63, (uint64_t)v118);
        sub_10026EE60(v118, (uint64_t)v120);
        swift_endAccess(v0 + 168);
        v65 = *(_QWORD *)(v0 + 40);
        v66 = *(_QWORD *)(v0 + 48);
        sub_10023A834(v120, v65);
        v67 = *(int **)(v66 + 40);
        v125 = (uint64_t (*)(uint64_t, uint64_t))((char *)v67 + *v67);
        v68 = (_QWORD *)swift_task_alloc(v67[1]);
        *(_QWORD *)(v0 + 448) = v68;
        *v68 = v0;
        v68[1] = sub_1003A6640;
        return v125(v65, v66);
      }
    }
    v43 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 344);
    v44 = *(_QWORD *)(v0 + 328);
    swift_endAccess(v0 + 168);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  }
  v52 = v48 + 3;
  if (v52 < v49)
  {
    v51 = *(_QWORD *)(v50 + 8 * v52);
    if (!v51)
    {
      while (1)
      {
        v41 = v52 + 1;
        if (__OFADD__(v52, 1))
          goto LABEL_51;
        if (v41 >= v49)
          goto LABEL_35;
        v51 = *(_QWORD *)(v50 + 8 * v41);
        ++v52;
        if (v51)
          goto LABEL_29;
      }
    }
    v41 = v52;
    goto LABEL_29;
  }
LABEL_35:
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 56);
  v1(*(_QWORD *)(v0 + 312), 1, 1, *(_QWORD *)(v0 + 328));
  v70 = v47;
LABEL_36:
  swift_release(v70);
  if (qword_1007B3FD0 == -1)
    goto LABEL_37;
LABEL_52:
  swift_once(&qword_1007B3FD0, sub_100398F4C);
LABEL_37:
  v71 = *(_QWORD *)(v0 + 248);
  v72 = type metadata accessor for Logger(0);
  sub_100221DF8(v72, (uint64_t)qword_1007BD820);
  v73 = swift_bridgeObjectRetain_n(v71, 2);
  v74 = Logger.logObject.getter(v73);
  v75 = static os_log_type_t.error.getter(v74);
  v76 = os_log_type_enabled(v74, v75);
  v77 = *(const char **)(v0 + 248);
  if (v76)
  {
    v78 = *(_QWORD *)(v0 + 240);
    v79 = (uint8_t *)swift_slowAlloc(12, -1);
    v80 = swift_slowAlloc(32, -1);
    v126 = v80;
    *(_DWORD *)v79 = 136315138;
    swift_bridgeObjectRetain(v77);
    *(_QWORD *)(v0 + 216) = sub_100228BD8(v78, (unint64_t)v77, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v121, v79 + 4);
    swift_bridgeObjectRelease_n(v77, 3);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "No matching connectables for %s", v79, 0xCu);
    swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v79, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v77, 2);
  }

  v81 = Logger.logObject.getter(*(id *)(v0 + 256));
  v82 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v81, v82))
  {
    v83 = *(_QWORD *)(v0 + 384);
    v119 = *(_QWORD *)(v0 + 328);
    v84 = *(char **)(v0 + 256);
    v85 = (uint8_t *)swift_slowAlloc(12, -1);
    v122 = swift_slowAlloc(32, -1);
    v126 = v122;
    *(_DWORD *)v85 = 136315138;
    v86 = *(const char **)&v84[v83];
    v87 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v88 = swift_bridgeObjectRetain(v86);
    v89 = Set.description.getter(v88, v119, v87);
    v91 = v90;
    swift_bridgeObjectRelease(v86);
    *(_QWORD *)(v0 + 200) = sub_100228BD8(v89, (unint64_t)v91, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v124, v0 + 208, v85 + 4);
    swift_bridgeObjectRelease(v91);

    _os_log_impl((void *)&_mh_execute_header, v81, v82, "Current displayableIDs %s", v85, 0xCu);
    swift_arrayDestroy(v122, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v122, -1, -1);
    swift_slowDealloc(v85, -1, -1);
  }
  else
  {
    v92 = *(void **)(v0 + 256);

  }
  v93 = Logger.logObject.getter(*(id *)(v0 + 256));
  v94 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = *(_QWORD *)(v0 + 328);
    v96 = *(char **)(v0 + 256);
    v97 = (const char **)&v96[*(_QWORD *)(v0 + 400)];
    v98 = (uint8_t *)swift_slowAlloc(12, -1);
    v123 = swift_slowAlloc(32, -1);
    v126 = v123;
    *(_DWORD *)v98 = 136315138;
    *(_QWORD *)&v99 = swift_beginAccess(v97, v0 + 120, 0, 0).n128_u64[0];
    v100 = *v97;
    swift_bridgeObjectRetain(v100, v99);
    v101 = sub_100008384((uint64_t *)&unk_1007BD940);
    v102 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v103 = Dictionary.Keys.description.getter(v100, v95, v101, v102);
    v105 = v104;
    swift_bridgeObjectRelease(v100);
    *(_QWORD *)(v0 + 192) = sub_100228BD8(v103, (unint64_t)v105, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v124, v98 + 4);
    swift_bridgeObjectRelease(v105);

    _os_log_impl((void *)&_mh_execute_header, v93, v94, "Current connectable mapping %s", v98, 0xCu);
    swift_arrayDestroy(v123, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v123, -1, -1);
    swift_slowDealloc(v98, -1, -1);
  }
  else
  {
    v106 = *(void **)(v0 + 256);

  }
  v1(*(_QWORD *)(v0 + 232), 1, 1, *(_QWORD *)(v0 + 328));
LABEL_49:
  v110 = *(_QWORD *)(v0 + 352);
  v111 = *(_QWORD *)(v0 + 344);
  v113 = *(_QWORD *)(v0 + 312);
  v112 = *(_QWORD *)(v0 + 320);
  v115 = *(_QWORD *)(v0 + 296);
  v114 = *(_QWORD *)(v0 + 304);
  v117 = *(_QWORD *)(v0 + 280);
  v116 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A6640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 448);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  *(_QWORD *)(*(_QWORD *)v1 + 456) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A66A0, v3, 0);
}

uint64_t sub_1003A66A0()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  const char *v71;
  uint8_t *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint8_t *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  const char *v85;
  void *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  char *v90;
  const char **v91;
  uint8_t *v92;
  double v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  const char *v98;
  const char *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  _QWORD *v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[2];

  v112 = v0 + 216;
  v114 = (uint64_t *)(v0 + 208);
  v1 = *(const char **)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 240);
  v7 = *(const char **)(v0 + 248);
  swift_bridgeObjectRetain(v7);
  sub_1003957B4((uint64_t)v1, v8, v7, v3);
  swift_bridgeObjectRelease(v1);
  sub_100221F28(v3, v4, &qword_1007B7760);
  v115 = (_QWORD *)(v0 + 16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 288), type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_1007B3FD0 != -1)
LABEL_46:
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v44 = *(_QWORD *)(v0 + 280);
    v45 = *(_QWORD *)(v0 + 288);
    v46 = type metadata accessor for Logger(0);
    sub_100221DF8(v46, (uint64_t)qword_1007BD820);
    v47 = sub_100244384(v45, v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter();
    v50 = os_log_type_enabled(v48, v49);
    v51 = *(_QWORD *)(v0 + 392);
    v52 = *(_QWORD *)(v0 + 304);
    v53 = *(_QWORD *)(v0 + 280);
    v54 = *(_QWORD *)(v0 + 288);
    if (v50)
    {
      v55 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = swift_slowAlloc(32, -1);
      v119[0] = v56;
      *(_DWORD *)v55 = 136315138;
      sub_1002B0AF0();
      v110 = v51;
      v58 = (const char *)v57;
      *v114 = sub_100228BD8(v59, v57, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, v112, v55 + 4);
      swift_bridgeObjectRelease(v58);
      sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Matching endpoint found %s", v55, 0xCu);
      swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      sub_1002443C8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_10000D0F0(v52, &qword_1007B7760);
      v60 = v110;
    }
    else
    {

      sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1002443C8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_10000D0F0(v52, &qword_1007B7760);
      v60 = v51;
    }
    swift_release(v60);
    v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 432);
    v62 = *(_QWORD *)(v0 + 328);
    v63 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 440))(v63, *(_QWORD *)(v0 + 344), v62);
    v61(v63, 0, 1, v62);
    sub_10022E75C(v115);
    goto LABEL_43;
  }
  v109 = (__int128 *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 344);
  v111 = v0 + 200;
  v11 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 296);
  sub_10000D0F0(*(_QWORD *)(v0 + 304), &qword_1007B7760);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  sub_10000D0F0(v12, &qword_1007B7760);
  sub_10022E75C((_QWORD *)(v0 + 16));
  v13 = *(_QWORD *)(v0 + 416);
  v14 = *(_QWORD *)(v0 + 424);
  *(_QWORD *)(v0 + 408) = v2;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v13 << 6);
      v20 = *(_QWORD *)(v0 + 392);
      goto LABEL_20;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v22 = (unint64_t)((1 << *(_BYTE *)(v0 + 464)) + 63) >> 6;
    v20 = *(_QWORD *)(v0 + 392);
    if (v21 >= v22)
      goto LABEL_30;
    v23 = v20 + 56;
    v24 = *(_QWORD *)(v20 + 56 + 8 * v21);
    ++v13;
    if (!v24)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v22)
        goto LABEL_30;
      v24 = *(_QWORD *)(v23 + 8 * v13);
      if (!v24)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v22)
          goto LABEL_30;
        v24 = *(_QWORD *)(v23 + 8 * v13);
        if (!v24)
          break;
      }
    }
LABEL_19:
    v14 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_20:
    *(_QWORD *)(v0 + 416) = v13;
    *(_QWORD *)(v0 + 424) = v14;
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 336);
    v29 = *(_QWORD *)(v0 + 312);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16))(v29, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v28 + 72) * v19, v27);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    *(_QWORD *)(v0 + 432) = v30;
    v30(v29, 0, 1, v27);
    if (v26(v29, 1, v27) == 1)
    {
      v64 = *(_QWORD *)(v0 + 392);
      goto LABEL_31;
    }
    v31 = *(_QWORD *)(v0 + 344);
    v32 = *(_QWORD *)(v0 + 328);
    v33 = *(_QWORD *)(v0 + 312);
    v34 = (uint64_t *)(*(_QWORD *)(v0 + 256) + *(_QWORD *)(v0 + 400));
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 32);
    *(_QWORD *)(v0 + 440) = v35;
    v35(v31, v33, v32);
    swift_beginAccess(v34, v0 + 168, 32, 0);
    v36 = *v34;
    if (*(_QWORD *)(v36 + 16))
    {
      v37 = sub_10045C2DC(*(_QWORD *)(v0 + 344));
      if ((v38 & 1) != 0)
      {
        sub_100244418(*(_QWORD *)(v36 + 56) + 40 * v37, (uint64_t)v109);
        sub_10026EE60(v109, (uint64_t)v115);
        swift_endAccess(v0 + 168);
        v39 = *(_QWORD *)(v0 + 40);
        v40 = *(_QWORD *)(v0 + 48);
        sub_10023A834(v115, v39);
        v41 = *(int **)(v40 + 40);
        v116 = (uint64_t (*)(uint64_t, uint64_t))((char *)v41 + *v41);
        v42 = (_QWORD *)swift_task_alloc(v41[1]);
        *(_QWORD *)(v0 + 448) = v42;
        *v42 = v0;
        v42[1] = sub_1003A6640;
        return v116(v39, v40);
      }
    }
    v16 = *(_QWORD *)(v0 + 336);
    v15 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 328);
    swift_endAccess(v0 + 168);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v25 = v21 + 3;
  if (v25 < v22)
  {
    v24 = *(_QWORD *)(v23 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        v13 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_45;
        if (v13 >= v22)
          goto LABEL_30;
        v24 = *(_QWORD *)(v23 + 8 * v13);
        ++v25;
        if (v24)
          goto LABEL_19;
      }
    }
    v13 = v25;
    goto LABEL_19;
  }
LABEL_30:
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 56);
  v30(*(_QWORD *)(v0 + 312), 1, 1, *(_QWORD *)(v0 + 328));
  v64 = v20;
LABEL_31:
  swift_release(v64);
  if (qword_1007B3FD0 != -1)
    swift_once(&qword_1007B3FD0, sub_100398F4C);
  v65 = *(_QWORD *)(v0 + 248);
  v66 = type metadata accessor for Logger(0);
  sub_100221DF8(v66, (uint64_t)qword_1007BD820);
  v67 = swift_bridgeObjectRetain_n(v65, 2);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter(v68);
  v70 = os_log_type_enabled(v68, v69);
  v71 = *(const char **)(v0 + 248);
  if (v70)
  {
    v117 = *(_QWORD *)(v0 + 240);
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v73 = swift_slowAlloc(32, -1);
    v119[0] = v73;
    *(_DWORD *)v72 = 136315138;
    swift_bridgeObjectRetain(v71);
    *(_QWORD *)(v0 + 216) = sub_100228BD8(v117, (unint64_t)v71, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v112, v0 + 224, v72 + 4);
    swift_bridgeObjectRelease_n(v71, 3);
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "No matching connectables for %s", v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v72, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 248), 2);
  }

  v74 = Logger.logObject.getter(*(id *)(v0 + 256));
  v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = *(_QWORD *)(v0 + 384);
    v77 = *(_QWORD *)(v0 + 328);
    v78 = *(char **)(v0 + 256);
    v79 = (uint8_t *)swift_slowAlloc(12, -1);
    v113 = swift_slowAlloc(32, -1);
    v119[0] = v113;
    *(_DWORD *)v79 = 136315138;
    v80 = *(const char **)&v78[v76];
    v81 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v82 = swift_bridgeObjectRetain(v80);
    v83 = Set.description.getter(v82, v77, v81);
    v85 = v84;
    swift_bridgeObjectRelease(v80);
    *(_QWORD *)(v0 + 200) = sub_100228BD8(v83, (unint64_t)v85, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v111, v114, v79 + 4);
    swift_bridgeObjectRelease(v85);

    _os_log_impl((void *)&_mh_execute_header, v74, v75, "Current displayableIDs %s", v79, 0xCu);
    swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1, -1);
    swift_slowDealloc(v79, -1, -1);
  }
  else
  {
    v86 = *(void **)(v0 + 256);

  }
  v87 = Logger.logObject.getter(*(id *)(v0 + 256));
  v88 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = *(_QWORD *)(v0 + 328);
    v90 = *(char **)(v0 + 256);
    v91 = (const char **)&v90[*(_QWORD *)(v0 + 400)];
    v92 = (uint8_t *)swift_slowAlloc(12, -1);
    v118 = swift_slowAlloc(32, -1);
    v119[0] = v118;
    *(_DWORD *)v92 = 136315138;
    *(_QWORD *)&v93 = swift_beginAccess(v91, v0 + 120, 0, 0).n128_u64[0];
    v94 = *v91;
    swift_bridgeObjectRetain(v94, v93);
    v95 = sub_100008384((uint64_t *)&unk_1007BD940);
    v96 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v97 = Dictionary.Keys.description.getter(v94, v89, v95, v96);
    v99 = v98;
    swift_bridgeObjectRelease(v94);
    *(_QWORD *)(v0 + 192) = sub_100228BD8(v97, (unint64_t)v99, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v111, v92 + 4);
    swift_bridgeObjectRelease(v99);

    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Current connectable mapping %s", v92, 0xCu);
    swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v118, -1, -1);
    swift_slowDealloc(v92, -1, -1);
  }
  else
  {
    v100 = *(void **)(v0 + 256);

  }
  v30(*(_QWORD *)(v0 + 232), 1, 1, *(_QWORD *)(v0 + 328));
LABEL_43:
  v101 = *(_QWORD *)(v0 + 352);
  v102 = *(_QWORD *)(v0 + 344);
  v104 = *(_QWORD *)(v0 + 312);
  v103 = *(_QWORD *)(v0 + 320);
  v106 = *(_QWORD *)(v0 + 296);
  v105 = *(_QWORD *)(v0 + 304);
  v108 = *(_QWORD *)(v0 + 280);
  v107 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A7128(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v21 - v10;
  v12 = *a1;
  v13 = a1[1];
  v23[0] = v12;
  v23[1] = v13;
  sub_100340E40(a2, (uint64_t)v24);
  v15 = v25;
  v14 = v26;
  sub_10023A834(v24, v25);
  v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
  swift_bridgeObjectRetain(v13);
  v16(v15, v14);
  v17 = a3[3];
  v18 = a3[4];
  sub_10023A834(a3, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  LOBYTE(v17) = static UUID.== infix(_:_:)(v11, v9);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v9, v6);
  v19(v11, v6);
  sub_10000D0F0((uint64_t)v23, (uint64_t *)&unk_1007BDAC0);
  return v17 & 1;
}

__n128 sub_1003A728C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  __n128 result;
  void (*v6)(void);
  uint64_t v7;
  const char *v8;

  v1 = v0;
  v2 = sub_10039DE28();
  v3 = (const char *)v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  sub_100449C98(v4);
  v6 = *(void (**)(void))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
  if (v6)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
    swift_retain(v7);
    v8 = (const char *)sub_10039DE28();
    v6();
    sub_1002845F4((uint64_t)v6, v7);
    return swift_bridgeObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1003A7518()
{
  return type metadata accessor for SDAirDropEndpointService(0);
}

uint64_t type metadata accessor for SDAirDropEndpointService(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BD8E8;
  if (!qword_1007BD8E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropEndpointService);
  return result;
}

uint64_t sub_1003A755C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = &unk_1005D5BF8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[17] = &unk_1005D5BF8;
    v4[18] = &unk_1005D5C10;
    return swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_1003A7624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v33[7];
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v34 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v34);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v7 = __chkstk_darwin(v6);
  v33[4] = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)v33 - v9;
  v41 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v39 = *(_QWORD *)(v41 - 8);
  v11 = __chkstk_darwin(v41);
  v33[1] = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v40 = (char *)v33 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v33 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)v33 - v19;
  __chkstk_darwin(v18);
  v38 = (uint64_t)v33 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v35 = (_QWORD *)(a1 + 56);
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v37 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate;
  v36 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v33[5] = a1;
  v33[6] = v5;
  v33[3] = v10;
  v33[2] = v20;
  if (v25)
  {
    v26 = __clz(__rbit64(v25));
    goto LABEL_18;
  }
  if (v36 > 1)
  {
    v27 = v35[1];
    v28 = 1;
    if (v27)
      goto LABEL_17;
    v28 = 2;
    if (v36 <= 2)
      goto LABEL_19;
    v27 = v35[2];
    if (v27)
      goto LABEL_17;
    v28 = 3;
    if (v36 <= 3)
      goto LABEL_19;
    v27 = v35[3];
    if (v27)
    {
LABEL_17:
      v26 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_18:
      v30 = v38;
      sub_100244384(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v39 + 72) * v26, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100221DB4(v30, (uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100244384((uint64_t)v20, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v31 = (char *)&loc_1003A796C + dword_1003A7DC4[swift_getEnumCaseMultiPayload(v17, v41)];
      __asm { BR              X9 }
    }
    v29 = 4;
    if (v36 > 4)
    {
      v27 = v35[4];
      if (v27)
      {
        v28 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v28 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          JUMPOUT(0x1003A7DACLL);
        }
        if (v28 >= v36)
          break;
        v27 = v35[v28];
        ++v29;
        if (v27)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_release(a1);
  return 0;
}

Swift::Int sub_1003A7DE4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_1003A9B0C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1003A7E4C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1003A7E4C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  Swift::Int result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  char *v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  Swift::Int v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  Swift::Int v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  __int128 v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  Swift::Int v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  _QWORD *v125;
  Swift::Int v126;
  uint64_t v127;
  char *v128;
  Swift::Int v129;
  Swift::Int v130;
  char *v131;
  char *v132;
  Swift::Int v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[3];
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v144 = type metadata accessor for UUID(0);
  v137 = *(_QWORD *)(v144 - 8);
  v2 = __chkstk_darwin(v144);
  v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v125 - v5;
  v7 = a1[1];
  result = _minimumMergeRunLength(_:)(v7);
  if (result >= v7)
  {
    if (v7 < 0)
      goto LABEL_137;
    if (v7)
      return sub_1003A8838(0, v7, 1, a1);
    return result;
  }
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_145;
  v126 = result;
  if (v7 < 2)
  {
    v134 = (char *)&_swiftEmptyArrayStorage[4];
    v125 = _swiftEmptyArrayStorage;
    if (v7 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
      v14 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      v117 = v136;
      if (v15 >= 2)
      {
        v118 = *a1;
        do
        {
          v119 = v15 - 2;
          if (v15 < 2)
            goto LABEL_132;
          if (!v118)
            goto LABEL_144;
          v106 = v14;
          v120 = v14 + 32;
          v121 = *(_QWORD *)&v14[16 * v119 + 32];
          v122 = *(_QWORD *)&v14[16 * v15 + 24];
          sub_1003A8A38((char *)(v118 + 48 * v121), (char *)(v118 + 48 * *(_QWORD *)&v120[16 * v15 - 16]), v118 + 48 * v122, v134);
          if (v117)
            goto LABEL_100;
          if (v122 < v121)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
            v106 = sub_1003A9300((uint64_t)v106);
          if (v119 >= *((_QWORD *)v106 + 2))
            goto LABEL_134;
          v123 = &v106[16 * v119 + 32];
          *(_QWORD *)v123 = v121;
          *((_QWORD *)v123 + 1) = v122;
          v124 = *((_QWORD *)v106 + 2);
          if (v15 > v124)
            goto LABEL_135;
          v14 = v106;
          memmove(&v106[16 * v15 + 16], &v106[16 * v15 + 32], 16 * (v124 - v15));
          *((_QWORD *)v106 + 2) = v124 - 1;
          v15 = v124 - 1;
        }
        while (v124 > 2);
      }
      swift_bridgeObjectRelease(v14);
      v116 = v125;
      v125[2] = 0;
      return swift_bridgeObjectRelease(v116);
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_100008384(&qword_1007B52D0);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)(v12 + 16) = v10;
    v125 = (_QWORD *)v12;
    v134 = (char *)(v12 + 32);
  }
  v13 = 0;
  v14 = (char *)_swiftEmptyArrayStorage;
  v135 = a1;
  v131 = v6;
  v132 = v4;
  while (1)
  {
    v16 = v13++;
    v130 = v16;
    if (v13 >= v7)
      break;
    v17 = *a1;
    sub_100340E40(*a1 + 48 * v13, (uint64_t)&v141);
    v18 = v17;
    sub_100340E40(v17 + 48 * v16, (uint64_t)v138);
    v133 = v7;
    v20 = v142;
    v19 = v143;
    sub_10023A834(&v141, v142);
    (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v20, v19);
    v21 = v139;
    v22 = v140;
    sub_10023A834(v138, v139);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 32);
    v24 = v22;
    v7 = v133;
    v23(v21, v24);
    LODWORD(v129) = static UUID.< infix(_:_:)(v6, v4);
    v25 = *(char **)(v137 + 8);
    v26 = v144;
    ((void (*)(char *, uint64_t))v25)(v4, v144);
    v128 = v25;
    ((void (*)(char *, uint64_t))v25)(v6, v26);
    sub_10022E75C(v138);
    sub_10022E75C(&v141);
    v127 = v18;
    if (v16 + 2 >= v7)
    {
      v13 = v16 + 2;
    }
    else
    {
      v27 = v18 + 48 * v16 + 48;
      v13 = v16 + 2;
      while (1)
      {
        v28 = v27 + 48;
        sub_100340E40(v27 + 48, (uint64_t)&v141);
        sub_100340E40(v27, (uint64_t)v138);
        v30 = v142;
        v29 = v143;
        sub_10023A834(&v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
        v31 = v139;
        v32 = v140;
        sub_10023A834(v138, v139);
        (*(void (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
        LODWORD(v31) = static UUID.< infix(_:_:)(v6, v4);
        v33 = v144;
        v34 = v128;
        ((void (*)(char *, uint64_t))v128)(v4, v144);
        ((void (*)(char *, uint64_t))v34)(v6, v33);
        sub_10022E75C(v138);
        sub_10022E75C(&v141);
        if (((v129 ^ v31) & 1) != 0)
          break;
        ++v13;
        v27 = v28;
        v7 = v133;
        if (v133 == v13)
        {
          v13 = v133;
          goto LABEL_23;
        }
      }
      v7 = v133;
    }
LABEL_23:
    a1 = v135;
    if ((v129 & 1) == 0)
      break;
    if (v13 < v16)
      goto LABEL_138;
    if (v16 >= v13)
      break;
    v35 = v16;
    v36 = v13;
    v37 = v14;
    v38 = 48 * v36 - 48;
    v39 = 48 * v35;
    v40 = v36;
    v41 = v35;
    do
    {
      if (v41 != --v36)
      {
        if (!v127)
          goto LABEL_143;
        v42 = (_OWORD *)(v127 + v39);
        v43 = (_OWORD *)(v127 + v38);
        sub_10026D7AC((__int128 *)(v127 + v39), &v141);
        v45 = v43[1];
        v44 = v43[2];
        *v42 = *v43;
        v42[1] = v45;
        v42[2] = v44;
        sub_10026D7AC(&v141, v43);
      }
      ++v41;
      v38 -= 48;
      v39 += 48;
    }
    while (v41 < v36);
    v14 = v37;
    a1 = v135;
    v13 = v40;
    v4 = v132;
    v7 = v133;
    v16 = v130;
    if (v13 < v133)
      goto LABEL_33;
LABEL_52:
    if (v13 < v16)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_1003A8EEC(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v61 = *((_QWORD *)v14 + 2);
    v60 = *((_QWORD *)v14 + 3);
    v15 = v61 + 1;
    if (v61 >= v60 >> 1)
      v14 = sub_1003A8EEC((char *)(v60 > 1), v61 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v15;
    v62 = v14 + 32;
    v63 = &v14[16 * v61 + 32];
    *(_QWORD *)v63 = v16;
    *((_QWORD *)v63 + 1) = v13;
    if (v61)
    {
      a1 = v135;
      while (1)
      {
        v64 = v15 - 1;
        if (v15 >= 4)
        {
          v69 = &v62[16 * v15];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_120;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_121;
          v76 = v15 - 2;
          v77 = &v62[16 * v15 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_123;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_126;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_130;
            v92 = v67 < v102;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v93 = *((_QWORD *)v14 + 4);
            v94 = *((_QWORD *)v14 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_84;
          }
          v66 = *((_QWORD *)v14 + 4);
          v65 = *((_QWORD *)v14 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_122;
        v76 = v15 - 2;
        v82 = &v62[16 * v15 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_125;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_128;
        if (__OFADD__(v86, v91))
          goto LABEL_129;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_90:
          if (v92)
            v64 = v76;
          goto LABEL_92;
        }
LABEL_84:
        if ((v87 & 1) != 0)
          goto LABEL_124;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_127;
        if (v98 < v86)
          goto LABEL_14;
LABEL_92:
        v103 = v64 - 1;
        if (v64 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v104 = *a1;
        if (!*a1)
          goto LABEL_142;
        v105 = v13;
        v106 = v14;
        v107 = &v62[16 * v103];
        v108 = *(_QWORD *)v107;
        v109 = v62;
        v110 = v64;
        v111 = &v62[16 * v64];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v136;
        sub_1003A8A38((char *)(v104 + 48 * *(_QWORD *)v107), (char *)(v104 + 48 * *(_QWORD *)v111), v104 + 48 * v112, v134);
        v136 = v113;
        if (v113)
        {
LABEL_100:
          v115 = v125;
          swift_bridgeObjectRelease(v106);
          v115[2] = 0;
          v116 = v115;
          return swift_bridgeObjectRelease(v116);
        }
        if (v112 < v108)
          goto LABEL_117;
        if (v110 > *((_QWORD *)v106 + 2))
          goto LABEL_118;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v109[16 * v103 + 8] = v112;
        v114 = *((_QWORD *)v106 + 2);
        if (v110 >= v114)
          goto LABEL_119;
        v14 = v106;
        v15 = v114 - 1;
        memmove(v111, v111 + 16, 16 * (v114 - 1 - v110));
        v62 = v109;
        *((_QWORD *)v106 + 2) = v114 - 1;
        v92 = v114 > 2;
        a1 = v135;
        v13 = v105;
        v6 = v131;
        v4 = v132;
        if (!v92)
          goto LABEL_14;
      }
    }
    v15 = 1;
    a1 = v135;
LABEL_14:
    v7 = a1[1];
    if (v13 >= v7)
      goto LABEL_103;
  }
  if (v13 >= v7)
    goto LABEL_52;
LABEL_33:
  if (__OFSUB__(v13, v16))
    goto LABEL_136;
  if (v13 - v16 >= v126)
    goto LABEL_52;
  if (__OFADD__(v16, v126))
    goto LABEL_139;
  if (v16 + v126 >= v7)
    v46 = v7;
  else
    v46 = v16 + v126;
  if (v46 >= v16)
  {
    if (v13 != v46)
    {
      v128 = v14;
      v47 = 48 * v13 - 48;
      v129 = v46;
      do
      {
        v133 = v47;
        while (1)
        {
          v48 = v13;
          v49 = *a1 + v47;
          sub_100340E40(v49 + 48, (uint64_t)&v141);
          sub_100340E40(v49, (uint64_t)v138);
          v50 = a1;
          v51 = v142;
          v52 = v143;
          sub_10023A834(&v141, v142);
          (*(void (**)(uint64_t, uint64_t))(v52 + 32))(v51, v52);
          v53 = v139;
          v54 = v140;
          sub_10023A834(v138, v139);
          (*(void (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
          LOBYTE(v53) = static UUID.< infix(_:_:)(v6, v4);
          v55 = *(void (**)(char *, uint64_t))(v137 + 8);
          v56 = v144;
          v55(v4, v144);
          v55(v6, v56);
          sub_10022E75C(v138);
          sub_10022E75C(&v141);
          if ((v53 & 1) == 0)
            break;
          v57 = *v50;
          if (!*v50)
            goto LABEL_141;
          a1 = v50;
          v58 = (_OWORD *)(v57 + v47);
          sub_10026D7AC((__int128 *)(v57 + v47 + 48), &v141);
          v59 = v58[1];
          v58[3] = *v58;
          v58[4] = v59;
          v58[5] = v58[2];
          sub_10026D7AC(&v141, v58);
          v47 -= 48;
          ++v16;
          v13 = v48;
          if (v48 == v16)
            goto LABEL_43;
        }
        a1 = v50;
        v13 = v48;
LABEL_43:
        ++v13;
        v47 = v133 + 48;
        v16 = v130;
      }
      while (v13 != v129);
      v13 = v129;
      v14 = v128;
    }
    goto LABEL_52;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003A8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v27 = a1;
  v7 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v13 = (char *)&v25 - v12;
  v36 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = 48 * v36 - 48;
LABEL_5:
    v15 = v27;
    v28 = v14;
    while (1)
    {
      v16 = *a4 + v14;
      sub_100340E40(v16 + 48, (uint64_t)&v33);
      sub_100340E40(v16, (uint64_t)v30);
      v17 = v34;
      v18 = v35;
      sub_10023A834(&v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      v19 = v31;
      v20 = v32;
      sub_10023A834(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
      LOBYTE(v19) = static UUID.< infix(_:_:)(v13, v10);
      v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v10, v7);
      v21(v13, v7);
      sub_10022E75C(v30);
      result = sub_10022E75C(&v33);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v14 = v28 + 48;
        if (++v36 == v26)
          return result;
        goto LABEL_5;
      }
      v22 = *a4;
      if (!*a4)
        break;
      v23 = (_OWORD *)(v22 + v14);
      sub_10026D7AC((__int128 *)(v22 + v14 + 48), &v33);
      v24 = v23[1];
      v23[3] = *v23;
      v23[4] = v24;
      v23[5] = v23[2];
      result = (uint64_t)sub_10026D7AC(&v33, v23);
      v14 -= 48;
      if (v36 == ++v15)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A8A38(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;

  v8 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  v9 = __chkstk_darwin(v8);
  v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 48;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v70 = a1;
  v69 = a4;
  if (v14 >= v16)
  {
    if (v15 < -47)
      goto LABEL_45;
    if (a4 != a2 || &a2[48 * v16] <= a4)
      memmove(a4, a2, 48 * v16);
    v34 = &a4[48 * v16];
    v68 = v34;
    v70 = a2;
    if (v15 < 48 || a1 >= a2)
      goto LABEL_44;
    v35 = (char *)(a3 - 48);
    v57 = a4;
    v58 = a1;
    while (1)
    {
      v36 = v35 + 48;
      sub_100340E40((uint64_t)(v34 - 48), (uint64_t)v65);
      v37 = a2 - 48;
      sub_100340E40((uint64_t)(a2 - 48), (uint64_t)v62);
      v38 = v66;
      v39 = v67;
      sub_10023A834(v65, v66);
      (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
      v40 = v63;
      v41 = v64;
      sub_10023A834(v62, v63);
      v42 = v12;
      v43 = v59;
      (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v40, v41);
      LOBYTE(v40) = static UUID.< infix(_:_:)(v42, v43);
      v44 = v61;
      v45 = *(void (**)(char *, uint64_t))(v60 + 8);
      v46 = v43;
      v12 = v42;
      v45(v46, v61);
      v45(v42, v44);
      sub_10022E75C(v62);
      sub_10022E75C(v65);
      if ((v40 & 1) != 0)
      {
        if (v36 != a2 || v35 >= a2)
        {
          v47 = *(_OWORD *)v37;
          v48 = *((_OWORD *)a2 - 1);
          *((_OWORD *)v35 + 1) = *((_OWORD *)a2 - 2);
          *((_OWORD *)v35 + 2) = v48;
          *(_OWORD *)v35 = v47;
        }
        v70 -= 48;
        v34 = v68;
      }
      else
      {
        v49 = (unint64_t)v68;
        v34 = v68 - 48;
        v68 -= 48;
        if ((unint64_t)v36 >= v49 && (unint64_t)v35 < v49)
        {
          v50 = (unint64_t)v58;
          if (v36 != (char *)v49)
          {
            v51 = *(_OWORD *)v34;
            v52 = *(_OWORD *)(v49 - 16);
            *((_OWORD *)v35 + 1) = *(_OWORD *)(v49 - 32);
            *((_OWORD *)v35 + 2) = v52;
            *(_OWORD *)v35 = v51;
          }
          v37 = a2;
          goto LABEL_40;
        }
        v53 = *(_OWORD *)v34;
        v54 = *(_OWORD *)(v49 - 16);
        *((_OWORD *)v35 + 1) = *(_OWORD *)(v49 - 32);
        *((_OWORD *)v35 + 2) = v54;
        *(_OWORD *)v35 = v53;
        v37 = a2;
      }
      v50 = (unint64_t)v58;
LABEL_40:
      if (v34 > v57)
      {
        v35 -= 48;
        a2 = v37;
        if ((unint64_t)v37 > v50)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v13 >= -47)
  {
    if (a4 != a1 || &a1[48 * v14] <= a4)
      memmove(a4, a1, 48 * v14);
    v17 = (unint64_t)&a4[48 * v14];
    v68 = (char *)v17;
    if (v13 >= 48 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_100340E40((uint64_t)a2, (uint64_t)v65);
        sub_100340E40((uint64_t)a4, (uint64_t)v62);
        v18 = v66;
        v19 = v67;
        sub_10023A834(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
        v20 = v63;
        v21 = v64;
        sub_10023A834(v62, v63);
        v22 = v59;
        (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
        v23 = static UUID.< infix(_:_:)(v12, v22);
        v24 = *(void (**)(char *, uint64_t))(v60 + 8);
        v25 = v22;
        v26 = v61;
        v24(v25, v61);
        v24(v12, v26);
        sub_10022E75C(v62);
        sub_10022E75C(v65);
        v27 = v70;
        if ((v23 & 1) != 0)
        {
          v28 = (unint64_t)(a2 + 48);
          if (v70 >= a2 && (unint64_t)v70 < v28 && v70 == a2)
          {
            v27 = a2;
          }
          else
          {
            v29 = *(_OWORD *)a2;
            v30 = *((_OWORD *)a2 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)v27 + 2) = v30;
            *(_OWORD *)v27 = v29;
          }
        }
        else
        {
          v31 = v69 + 48;
          if (v70 != v69 || v70 >= v31)
          {
            v32 = *(_OWORD *)v69;
            v33 = *((_OWORD *)v69 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)v69 + 1);
            *((_OWORD *)v27 + 2) = v33;
            *(_OWORD *)v27 = v32;
          }
          v69 = v31;
          v28 = (unint64_t)a2;
        }
        v70 = v27 + 48;
        a4 = v69;
        if ((unint64_t)v69 >= v17)
          break;
        a2 = (char *)v28;
      }
      while (v28 < a3);
    }
LABEL_44:
    sub_1003A8FE4((void **)&v70, (const void **)&v69, &v68);
    return 1;
  }
LABEL_45:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1003A8EEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008384(&qword_1007BD928);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1003A8FE4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1003A90A0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_1003A9148(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_100008384(&qword_1007B54B0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  v10 = v8 / v7;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v10 * v7)
    return swift_arrayInitWithTakeFrontToBack(v3, v4, v10, result);
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront(v3);
  return result;
}

char *sub_1003A9258(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1003A9300(uint64_t a1)
{
  return sub_1003A8EEC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1003A9314(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t *, _QWORD *);
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;

  v6 = (uint64_t (*)(uint64_t *, _QWORD *))isStackAllocationSafe;
  v7 = *(_BYTE *)(a3 + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    v12 = sub_1003A9484((uint64_t)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v10, a3, v6);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    a2 = sub_1003A9484((uint64_t)v13, v10, a3, v6);
    swift_slowDealloc(v13, -1, -1);
  }
  return a2;
}

uint64_t sub_1003A9484(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, _QWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  unint64_t *v22;
  uint64_t v23;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v22 = (unint64_t *)result;
  v23 = 0;
  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v27 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v13 = v12 | (v7 << 6);
LABEL_17:
    v17 = *(_QWORD *)(a3 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
    v19 = v18[1];
    v25 = *v18;
    v26 = v19;
    sub_100340E40(v17 + 48 * v13, (uint64_t)v24);
    swift_bridgeObjectRetain(v19);
    v20 = a4(&v25, v24);
    sub_10022E75C(v24);
    result = swift_bridgeObjectRelease(v26);
    if (v4)
      return result;
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)v22 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = __OFADD__(v23++, 1);
      if (v14)
        goto LABEL_30;
    }
  }
  v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v27)
    return sub_1004EFA44(v22, a2, v23, a3);
  v15 = *(_QWORD *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  v16 = v7 + 1;
  if (v7 + 1 >= v27)
    return sub_1004EFA44(v22, a2, v23, a3);
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 2;
  if (v7 + 2 >= v27)
    return sub_1004EFA44(v22, a2, v23, a3);
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 3;
  if (v7 + 3 >= v27)
    return sub_1004EFA44(v22, a2, v23, a3);
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v27)
      return sub_1004EFA44(v22, a2, v23, a3);
    v15 = *(_QWORD *)(v8 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

Swift::Int sub_1003A9680(uint64_t isStackAllocationSafe, int a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  Swift::Int v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v4 = isStackAllocationSafe;
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = v5 & 0x3F;
  v7 = (1 << v5) + 63;
  v8 = v7 >> 6;
  v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1003A97F0((unint64_t *)((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v4, a2);
    v11 = swift_release(v4);
    if (v2)
      swift_willThrow(v11);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v9, -1);
    bzero(v12, v9);
    v10 = sub_1003A97F0((unint64_t *)v12, v8, v4, a2);
    swift_release(v4);
    swift_slowDealloc(v12, -1, -1);
  }
  return v10;
}

Swift::Int sub_1003A97F0(unint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  int v26;
  uint64_t v27;

  v21 = a2;
  v26 = a4;
  v22 = a1;
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v27 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(a3 + 56);
  v23 = 0;
  v24 = (_QWORD *)(a3 + 56);
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v25 = (unint64_t)(v12 + 63) >> 6;
  if ((v13 & v11) != 0)
  {
    v14 = __clz(__rbit64(v13 & v11));
    goto LABEL_18;
  }
  if (v25 > 1)
  {
    v15 = v24[1];
    v16 = 1;
    if (v15)
      goto LABEL_17;
    v16 = 2;
    if (v25 <= 2)
      goto LABEL_19;
    v15 = v24[2];
    if (v15)
      goto LABEL_17;
    v16 = 3;
    if (v25 <= 3)
      goto LABEL_19;
    v15 = v24[3];
    if (v15)
    {
LABEL_17:
      v14 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_18:
      sub_100244384(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v27 + 72) * v14, (uint64_t)&v20 - v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100244384((uint64_t)v10, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v18 = (char *)&loc_1003A99F4 + dword_1003A9AFC[swift_getEnumCaseMultiPayload(v8, v5)];
      __asm { BR              X9 }
    }
    v17 = 4;
    if (v25 > 4)
    {
      v15 = v24[4];
      if (v15)
      {
        v16 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v16 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
          JUMPOUT(0x1003A9AFCLL);
        }
        if (v16 >= v25)
          break;
        v15 = v24[v16];
        ++v17;
        if (v15)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_retain(a3);
  return sub_1005692F4(v22, v21, v23, a3);
}

uint64_t sub_1003A9B0C(_QWORD *a1)
{
  return sub_100229F5C(0, a1[2], 0, a1);
}

uint64_t sub_1003A9B20(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1003A9B34(_QWORD *a1)
{
  return sub_10022A830(0, a1[2], 0, a1);
}

uint64_t sub_1003A9B48(uint64_t a1)
{
  return sub_10022A25C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1003A9B5C(uint64_t a1)
{
  return sub_10022B558(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1003A9B70(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a5;
  v37 = a6;
  v34 = a6;
  v16 = sub_100244348(&v35);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v16, a1, a5);
  v17 = (_QWORD *)*a4;
  v19 = sub_10045C2DC(a2);
  v20 = v17[2];
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  v23 = v18;
  v24 = v17[3];
  if (v24 >= v22 && (a3 & 1) != 0)
  {
LABEL_7:
    v25 = (_QWORD *)*a4;
    if ((v23 & 1) != 0)
    {
LABEL_8:
      v26 = (_QWORD *)(v25[7] + 40 * v19);
      sub_10022E75C(v26);
      return sub_10026EE60(&v35, (uint64_t)v26);
    }
    goto LABEL_11;
  }
  if (v24 >= v22 && (a3 & 1) == 0)
  {
    sub_10046F848();
    goto LABEL_7;
  }
  sub_100467F1C(v22, a3 & 1);
  v28 = sub_10045C2DC(a2);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v12);
    __break(1u);
    return result;
  }
  v19 = v28;
  v25 = (_QWORD *)*a4;
  if ((v23 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v30 = sub_10026EEE8((uint64_t)&v35, v36);
  __chkstk_darwin(v30);
  v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1003A9D70(v19, (uint64_t)v15, (uint64_t)v32, v25, a5, v34);
  return sub_10022E75C(&v35);
}

uint64_t sub_1003A9D70(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a5;
  v20 = a6;
  v11 = sub_100244348(&v18);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v11, a3, a5);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a4[6];
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  result = sub_10026EE60(&v18, a4[7] + 40 * a1);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_1003A9E40(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = type metadata accessor for SDAuthenticationSessionExecutor(0);
  v16 = &off_100727B68;
  *(_QWORD *)&v14 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_10026EE60(&v14, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1003A9EFC(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SDAuthenticationSessionExecutor(0);
  v32 = &off_100727B68;
  *(_QWORD *)&v30 = a1;
  v12 = (_QWORD *)*a4;
  v14 = sub_10045C2DC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = (_QWORD *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 40 * v14);
      sub_10022E75C(v21);
      return sub_10026EE60(&v30, (uint64_t)v21);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004712FC();
    goto LABEL_7;
  }
  sub_10046AA40(v17, a3 & 1);
  v23 = sub_10045C2DC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = (_QWORD *)*a4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v25 = sub_10026EEE8((uint64_t)&v30, v31);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  sub_1003A9E40(v14, (uint64_t)v11, *v27, v20);
  return sub_10022E75C(&v30);
}

uint64_t sub_1003AA0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t i;
  _OWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  __int128 v40[3];
  __int128 v41[3];
  _QWORD *v42;

  v34 = a2;
  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v42 = _swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v36 = (unint64_t)(v10 + 63) >> 6;
  if ((v11 & v9) != 0)
    goto LABEL_36;
LABEL_6:
  v13 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v13 < v36)
    {
      v14 = *(_QWORD *)(v35 + 8 * v13);
      ++v8;
      if (v14)
        goto LABEL_21;
      v8 = v13 + 1;
      if (v13 + 1 >= v36)
        goto LABEL_37;
      v14 = *(_QWORD *)(v35 + 8 * v8);
      if (v14)
        goto LABEL_21;
      v8 = v13 + 2;
      if (v13 + 2 >= v36)
        goto LABEL_37;
      v14 = *(_QWORD *)(v35 + 8 * v8);
      if (v14)
        goto LABEL_21;
      v8 = v13 + 3;
      if (v13 + 3 >= v36)
        goto LABEL_37;
      v14 = *(_QWORD *)(v35 + 8 * v8);
      if (v14)
      {
LABEL_21:
        v12 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v8 << 6); ; i = v32 | (v8 << 6))
        {
          sub_100340E40(*(_QWORD *)(a1 + 56) + 48 * i, (uint64_t)v40);
          v17 = sub_10026D7AC(v40, v41);
          static SFPlatform.watchOS.getter(v17);
          v18 = static SFPlatform.isPlatform(_:)(v7);
          (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
          if ((v18 & 1) != 0)
            goto LABEL_31;
          sub_100340E40((uint64_t)v41, (uint64_t)v40);
          v19 = sub_100008384(&qword_1007B52D0);
          v20 = type metadata accessor for SDAirDropDiscoveredDevice(0);
          if (swift_dynamicCast(&v39, v40, v19, v20, 6))
            break;
          sub_100340E40((uint64_t)v41, (uint64_t)v40);
          v24 = type metadata accessor for SDAirDropDiscoveredPerson(0);
          if (swift_dynamicCast(&v39, v40, v19, v24, 6))
          {
            v21 = v39;
            v22 = (uint64_t *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
            v23 = &v38;
LABEL_27:
            swift_beginAccess(v22, v23, 0, 0);
            v25 = *v22;
            v26 = swift_bridgeObjectRetain(v25);
            v27 = sub_1003A7624(v26, v34);
            swift_release(v21);
            swift_bridgeObjectRelease(v25);
            if ((v27 & 1) == 0)
              goto LABEL_5;
            goto LABEL_31;
          }
          sub_100340E40((uint64_t)v41, (uint64_t)v40);
          v28 = type metadata accessor for SDAirDropDiscoveredClassroom(0);
          if (!swift_dynamicCast(&v39, v40, v19, v28, 6))
          {
LABEL_5:
            result = sub_10022E75C(v41);
            if (!v12)
              goto LABEL_6;
            goto LABEL_36;
          }
          swift_release(v39);
LABEL_31:
          sub_10026D7AC(v41, v40);
          v29 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          {
            sub_1002298DC(0, v29[2] + 1, 1);
            v29 = v42;
          }
          v31 = v29[2];
          v30 = v29[3];
          if (v31 >= v30 >> 1)
          {
            sub_1002298DC(v30 > 1, v31 + 1, 1);
            v29 = v42;
          }
          v29[2] = v31 + 1;
          result = (uint64_t)sub_10026D7AC(v40, &v29[6 * v31 + 4]);
          if (!v12)
            goto LABEL_6;
LABEL_36:
          v32 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
        v21 = v39;
        v22 = (uint64_t *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
        v23 = &v37;
        goto LABEL_27;
      }
      v15 = v13 + 4;
      if (v15 < v36)
      {
        v14 = *(_QWORD *)(v35 + 8 * v15);
        if (v14)
        {
          v8 = v15;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_39;
          if (v8 >= v36)
            break;
          v14 = *(_QWORD *)(v35 + 8 * v8);
          ++v15;
          if (v14)
            goto LABEL_21;
        }
      }
    }
LABEL_37:
    swift_release(a1);
    return (uint64_t)v42;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1003AA4B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007BD9A4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_100399E50(a1, v4, v5, v7, v6);
}

uint64_t sub_1003AA530()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003AA55C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BD9DC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_10039DD40(a1, v4, v5, v6);
}

uint64_t sub_1003AA5CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003AA600(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007BD9EC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_10039973C(a1, v4, v5, v7, v6);
}

uint64_t sub_1003AA67C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BD9FC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_10039D0A4(a1, v4, v5, v6);
}

uint64_t sub_1003AA6E8(const char *a1)
{
  uint64_t v1;

  return sub_10039D444(a1, v1, (uint64_t)&unk_100725B28, (uint64_t)&unk_1007BDA20);
}

uint64_t sub_1003AA710()
{
  return sub_1003AB158((void (*)(_QWORD))&_swift_unknownObjectRelease, 56);
}

uint64_t sub_1003AA720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BDA0C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_10039D62C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003AA7A0()
{
  return sub_1003AB158((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1003AA7B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BDA1C);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_10039D58C, 0, 0);
}

void sub_1003AA818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(a1 + 56);
  v22 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v23 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)a1);
  v13 = 0;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v13 << 6);
LABEL_5:
    sub_100244384(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v15, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4((uint64_t)v8, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003A2390((uint64_t)v6);
    v17 = v16;
    sub_1002443C8((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v17 & 1) != 0)
      goto LABEL_23;
  }
  v18 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v18 >= v23)
    goto LABEL_23;
  v19 = *(_QWORD *)(v22 + 8 * v18);
  ++v13;
  if (v19)
    goto LABEL_22;
  v13 = v18 + 1;
  if (v18 + 1 >= v23)
    goto LABEL_23;
  v19 = *(_QWORD *)(v22 + 8 * v13);
  if (v19)
    goto LABEL_22;
  v13 = v18 + 2;
  if (v18 + 2 >= v23)
    goto LABEL_23;
  v19 = *(_QWORD *)(v22 + 8 * v13);
  if (v19)
    goto LABEL_22;
  v13 = v18 + 3;
  if (v18 + 3 >= v23)
    goto LABEL_23;
  v19 = *(_QWORD *)(v22 + 8 * v13);
  if (v19)
  {
LABEL_22:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v13 << 6);
    goto LABEL_5;
  }
  v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

_QWORD *sub_1003AAA60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *result;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v31[4];
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;

  v37 = a2;
  v34 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v34);
  v33 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v32);
  v31[3] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v7 = __chkstk_darwin(v6);
  v38 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v31 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)v31 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)v31 - v15;
  v40 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v17 = __chkstk_darwin(v40);
  v42 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v43 = (char *)v31 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)v31 - v22;
  __chkstk_darwin(v21);
  v26 = (char *)v31 - v25;
  result = _swiftEmptyArrayStorage;
  v44 = _swiftEmptyArrayStorage;
  if (*(_QWORD *)(a1 + 16))
  {
    v31[2] = v14;
    v31[0] = v2;
    v35 = v16;
    v36 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus;
    v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v41 = *(_QWORD *)(v24 + 72);
    v39 = v28;
    v31[1] = v11;
    v29 = v40;
    sub_100244384(a1 + v28, (uint64_t)v31 - v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100244384((uint64_t)v26, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v30 = (char *)&loc_1003AACE4 + *((int *)qword_1003AB060 + swift_getEnumCaseMultiPayload(v23, v29));
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1003AB080(const char *a1)
{
  uint64_t v1;

  return sub_10039D444(a1, v1, (uint64_t)&unk_100725B50, (uint64_t)&unk_1007BDA88);
}

uint64_t sub_1003AB0A8()
{
  return sub_1003AB158((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1003AB0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BDA84);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_10039CFAC, 0, 0);
}

uint64_t sub_1003AB120(const char *a1)
{
  uint64_t v1;

  return sub_10039D444(a1, v1, (uint64_t)&unk_100725B78, (uint64_t)&unk_1007BDA98);
}

uint64_t sub_1003AB148()
{
  return sub_1003AB158((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1003AB158(void (*a1)(_QWORD), uint64_t a2)
{
  _QWORD *v2;

  swift_unknownObjectRelease(v2[2]);
  swift_release(v2[4]);
  a1(v2[5]);
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1003AB1A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BDA94);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_10039B478, 0, 0);
}

uint64_t sub_1003AB20C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003AB230(uint64_t a1)
{
  uint64_t v1;

  sub_100399304(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003AB238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003AB248(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003AB250(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A7128(a1, a2, *(_QWORD **)(v2 + 16)) & 1;
}

uint64_t sub_1003AB26C(uint64_t a1)
{
  char v1;

  sub_1003A3C84(a1);
  return v1 & 1;
}

uint64_t sub_1003AB288(uint64_t a1)
{
  uint64_t v1;

  return sub_1003A4054(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003AB294()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  sub_10022E75C(v0 + 5);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003AB2C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BDAF4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1003A4498(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1003AB34C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  sub_10022E75C(v0 + 4);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003AB380(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[9];
  v8 = (_QWORD *)swift_task_alloc(dword_1007BDB04);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_1003A4830(a1, v4, v5, v6, v7);
}

uint64_t sub_1003AB400(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003AB490, static AirDropActor.shared, 0);
}

uint64_t sub_1003AB490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  char v21;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v5, v4, v8);
  v11 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 32);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
    if (!v14)
    {
      v18 = SFAirDropReceive.AskRequest.senderBundleID.getter(v16);
      v20 = v19;
      if (v18 == 0xD000000000000015 && v19 == (const char *)0x8000000100618A80)
      {
        swift_bridgeObjectRelease((const char *)0x8000000100618A80);
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, 0xD000000000000015, 0x8000000100618A80, 0);
        swift_bridgeObjectRelease(v20);
        v17 = 0;
        if ((v21 & 1) == 0)
          goto LABEL_10;
      }
      v17 = sub_1002888EC(*(NSObject **)(v1 + 16));
      goto LABEL_10;
    }
    v17 = 0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
    v17 = 0;
  }
LABEL_10:
  swift_task_dealloc(*(_QWORD *)(v1 + 48));
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v17 & 1);
}

uint64_t sub_1003AB5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v7 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(*(_QWORD *)(v3 + 16) + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  v13 = v10;
  sub_100323EA0(a1, v10, 1, a3);

  return sub_100223280((uint64_t)v9);
}

uint64_t sub_1003AB6C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for SDAirDropContentHandlerVoiceMails()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropContentHandlerVoiceMails);
}

uint64_t sub_1003AB708@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerVoiceMails();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for SDAirDropContentHandlerVoiceMemos();
  result = swift_allocObject(v4, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(v3 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1003AB758(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BDB3C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003AB400(a1);
}

uint64_t sub_1003AB7AC(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = 0;
  v2 = swift_allocObject(&unk_100725CC8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRetain(a1);
  v3 = sub_100008384((uint64_t *)&unk_1007B6820);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000012, 0x8000000100613900, &v5, &unk_1007B7618, v2, 0xD000000000000068, 0x8000000100613920, 66, &type metadata for Double, v3);
}

uint64_t sub_1003AB86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003AB5CC(a1, a2, a3);
}

void sub_1003AB88C(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x49414D4543494F56;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE90000000000004CLL;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xE90000000000004CLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x49414D4543494F56;
  v10._object = (void *)0xE90000000000004CLL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE90000000000004CLL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003ABAE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ABB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BDBE8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BDBE8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_1003ABB94(Swift::String a1, char a2)
{
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v4;
  Swift::String v5;
  Swift::String v6;
  unint64_t v8;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  if (a2)
  {
    if (a2 == 1)
    {
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease(0xE000000000000000);
      v4 = 0xD000000000000012;
    }
    else
    {
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(0xE000000000000000);
      v4 = 0xD000000000000015;
    }
  }
  else
  {
    v4 = 0x656C62617369642ELL;
  }
  v8 = v4;
  v5._countAndFlagsBits = countAndFlagsBits;
  v5._object = object;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 93;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t type metadata accessor for SDAirDropUserSafetyPlatformContentHandlerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary48SDAirDropUserSafetyPlatformContentHandlerFactory);
}

uint64_t sub_1003ABCA0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  double v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = objc_msgSend(objc_allocWithZone((Class)SCSensitivityAnalyzer), "init");
  v4 = (double)*(uint64_t *)(a1 + 16);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10[1] = 0x8000000100618E10;
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v10[0] = 0;
  v8 = swift_allocObject(&unk_100725E30, 48, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v1;
  *(_QWORD *)(v8 + 32) = v3;
  *(double *)(v8 + 40) = v4;
  swift_bridgeObjectRetain(a1);
  swift_retain(v1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000013, 0x8000000100618E10, v10, &unk_1007BDE00, v8, 0xD000000000000068, 0x8000000100618CD0, 146, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003ABE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  *(double *)(v7 + 88) = a7;
  *(_QWORD *)(v7 + 72) = a5;
  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 56) = a3;
  *(_QWORD *)(v7 + 64) = a4;
  *(_QWORD *)(v7 + 40) = a1;
  *(_QWORD *)(v7 + 48) = a2;
  v8 = sub_100008384((uint64_t *)&unk_1007C5E10);
  *(_QWORD *)(v7 + 96) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 112) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B6BE8);
  *(_QWORD *)(v7 + 120) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 128) = v11;
  *(_QWORD *)(v7 + 136) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 144) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 152) = swift_task_alloc(v12);
  v13 = type metadata accessor for URL(0);
  *(_QWORD *)(v7 + 160) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 168) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 176) = swift_task_alloc(v15);
  *(_QWORD *)(v7 + 184) = swift_task_alloc(v15);
  *(_QWORD *)(v7 + 192) = swift_task_alloc(v15);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v16 = static AirDropActor.shared;
  *(_QWORD *)(v7 + 200) = static AirDropActor.shared;
  return swift_task_switch(sub_1003ABF58, v16, 0);
}

uint64_t sub_1003ABF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v55;

  v1 = *(_QWORD *)(v0 + 64);
  v55 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = swift_bridgeObjectRetain((const char *)v1);
  if (v2)
  {
    v53 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v6 = v4 + v53;
    v7 = *(_QWORD *)(v3 + 72);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
    v8 = _swiftEmptyArrayStorage;
    v52 = v7;
    while (1)
    {
      v10 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 160);
      v54(v10, v6, v9, v5);
      v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
      v11(v10, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v10, 1, v9) == 1)
        break;
      v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 32);
      v13 = v12(*(char **)(v0 + 192), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
      if ((URL.isFileURL.getter(v13) & 1) != 0)
      {
        v12(*(char **)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        {
          sub_100229810(0, v8[2] + 1, 1);
          v8 = v55;
        }
        v15 = v8[2];
        v14 = v8[3];
        if (v15 >= v14 >> 1)
        {
          sub_100229810(v14 > 1, v15 + 1, 1);
          v8 = v55;
        }
        v16 = *(_QWORD *)(v0 + 184);
        v17 = *(_QWORD *)(v0 + 160);
        v8[2] = v15 + 1;
        v18 = (char *)v8 + v53 + v15 * v52;
        v7 = v52;
        v12(v18, v16, v17);
        v55 = v8;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
      }
      v6 += v7;
      if (!--v2)
        goto LABEL_13;
    }
  }
  else
  {
    v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
    v8 = _swiftEmptyArrayStorage;
LABEL_13:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v11)(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 160), v5);
  }
  *(_QWORD *)(v0 + 208) = v11;
  *(_QWORD *)(v0 + 216) = v8;
  v19 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease(*(const char **)(v0 + 64));
  sub_10000D0F0(v19, (uint64_t *)&unk_1007B5200);
  v20 = v8[2];
  *(_QWORD *)(v0 + 224) = v20;
  if (!v20)
  {
    v28 = *(_QWORD *)(v0 + 216);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 160));
    v27 = v28;
LABEL_19:
    swift_release(v27);
    v29 = sub_10031AF00();
    v30 = (void *)static NSUserDefaults.airdrop.getter(v29);
    v31 = SFAirDropUserDefaults.sensitiveContentOverride.getter();

    if (v31 == 2)
    {
      LOBYTE(v11) = 0;
LABEL_25:
      v38 = *(_QWORD *)(v0 + 184);
      v37 = *(_QWORD *)(v0 + 192);
      v39 = *(_QWORD *)(v0 + 176);
      v41 = *(_QWORD *)(v0 + 144);
      v40 = *(_QWORD *)(v0 + 152);
      v42 = *(_QWORD *)(v0 + 136);
      v43 = *(_QWORD *)(v0 + 112);
      **(_BYTE **)(v0 + 40) = (_BYTE)v11;
      swift_task_dealloc(v37);
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    LODWORD(v11) = v31 & 1;
    if (qword_1007B3FD8 == -1)
    {
LABEL_22:
      v32 = type metadata accessor for Logger(0);
      v33 = sub_100221DF8(v32, (uint64_t)qword_1007BDBE8);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc(14, -1);
        *(_DWORD *)v36 = 67109376;
        *(_DWORD *)(v0 + 28) = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 28, v0 + 32, v36 + 4);
        *(_WORD *)(v36 + 8) = 1024;
        *(_DWORD *)(v0 + 280) = (_DWORD)v11;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 280, v0 + 284, v36 + 10);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "isContentSensitive returning sensitiveContentOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v36, 0xEu);
        swift_slowDealloc(v36, -1, -1);
      }

      goto LABEL_25;
    }
LABEL_28:
    swift_once(&qword_1007B3FD8, sub_1003ABB04);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_DWORD *)(v21 + 80);
  *(_DWORD *)(v0 + 284) = v22;
  *(_QWORD *)(v0 + 232) = 0;
  v23 = *(_QWORD *)(v0 + 216);
  if (!*(_QWORD *)(v23 + 16))
  {
    __break(1u);
    goto LABEL_28;
  }
  v24 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 208);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v26, v23 + ((v22 + 32) & ~(unint64_t)v22), v25);
  v24(v26, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v26, 1, v25) == 1)
  {
    v27 = *(_QWORD *)(v0 + 216);
    goto LABEL_19;
  }
  v45 = *(_QWORD *)(v0 + 176);
  v46 = *(_QWORD *)(v0 + 136);
  v47 = *(_QWORD *)(v0 + 120);
  v48 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 32))(v45, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 160));
  sub_1003ACBAC(v45, v48, v46);
  SFProgressTask.makeAsyncIterator()(v47);
  v49 = static AirDropActor.shared;
  v50 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  *(_QWORD *)(v0 + 240) = v50;
  v51 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 248) = v51;
  *v51 = v0;
  v51[1] = sub_1003AC450;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v49, v50, *(_QWORD *)(v0 + 96), v0 + 32);
}

uint64_t sub_1003AC450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 248));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 200);
    swift_release(*(_QWORD *)(v2 + 216));
    v4 = sub_1003ACA30;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 200);
    v4 = sub_1003AC4C0;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003AC4C0()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  uint64_t v4;
  void (*v5)(double *);
  uint64_t v6;
  _QWORD *v7;
  double v8;

  v1 = *(double *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96), v1);
    v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 264) = v2;
    *v2 = v0;
    v2[1] = sub_1003AC640;
    return SFProgressTask.finalValue.getter(v0 + 25, *(_QWORD *)(v0 + 120));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 240);
    v5 = *(void (**)(double *))(v0 + 48);
    v8 = v1 / *(double *)(v0 + 88);
    v5(&v8);
    v6 = static AirDropActor.shared;
    v7 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 256) = v7;
    *v7 = v0;
    v7[1] = sub_1003AC5D0;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v6, v4, *(_QWORD *)(v0 + 96), v0 + 32);
  }
}

uint64_t sub_1003AC5D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 256));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 200);
    swift_release(*(_QWORD *)(v2 + 216));
    v4 = sub_1003ACA30;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 200);
    v4 = sub_1003AC4C0;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003AC640()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 200);
    swift_release(*(_QWORD *)(v2 + 216));
    v5 = sub_1003ACAF8;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 200);
    v5 = sub_1003AC6B4;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_1003AC6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(unsigned __int8 *)(v0 + 25);
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(v0 + 232) + 1;
    if (v7 == *(_QWORD *)(v0 + 224))
    {
      v8 = *(_QWORD *)(v0 + 216);
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 160));
      v6 = v8;
      goto LABEL_5;
    }
    *(_QWORD *)(v0 + 232) = v7;
    v25 = *(_QWORD *)(v0 + 216);
    if (v7 >= *(_QWORD *)(v25 + 16))
    {
      __break(1u);
      return result;
    }
    v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 208);
    v27 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16))(v29, v25+ ((*(unsigned __int8 *)(v0 + 284) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 284))+ *(_QWORD *)(v28 + 72) * v7, v27);
    v26(v29, 0, 1, v27);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) != 1)
    {
      v30 = *(_QWORD *)(v0 + 176);
      v31 = *(_QWORD *)(v0 + 136);
      v32 = *(_QWORD *)(v0 + 120);
      v33 = *(_QWORD *)(v0 + 80);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 32))(v30, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 160));
      sub_1003ACBAC(v30, v33, v31);
      SFProgressTask.makeAsyncIterator()(v32);
      v34 = static AirDropActor.shared;
      v35 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
      *(_QWORD *)(v0 + 240) = v35;
      v36 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
      *(_QWORD *)(v0 + 248) = v36;
      *v36 = v0;
      v36[1] = sub_1003AC450;
      return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v34, v35, *(_QWORD *)(v0 + 96), v0 + 32);
    }
  }
  v6 = *(_QWORD *)(v0 + 216);
LABEL_5:
  swift_release(v6);
  v9 = sub_10031AF00();
  v10 = (void *)static NSUserDefaults.airdrop.getter(v9);
  v11 = SFAirDropUserDefaults.sensitiveContentOverride.getter();

  if (v11 == 2)
  {
    LOBYTE(v12) = v5;
  }
  else
  {
    v12 = v11 & 1;
    if (qword_1007B3FD8 != -1)
      swift_once(&qword_1007B3FD8, sub_1003ABB04);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007BDBE8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(14, -1);
      *(_DWORD *)v17 = 67109376;
      *(_DWORD *)(v0 + 28) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 28, v0 + 32, v17 + 4);
      *(_WORD *)(v17 + 8) = 1024;
      *(_DWORD *)(v0 + 280) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 280, v0 + 284, v17 + 10);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "isContentSensitive returning sensitiveContentOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v17, 0xEu);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  v19 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 112);
  **(_BYTE **)(v0 + 40) = v12;
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003ACA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003ACAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003ACBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD v24[2];
  _QWORD v25[2];

  v4 = v3;
  v24[0] = a2;
  v24[1] = a3;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  v10 = swift_bridgeObjectRelease(v25[1]);
  strcpy((char *)v25, "analyze(url: ");
  HIWORD(v25[1]) = -4864;
  v11._countAndFlagsBits = URL.lastPathComponent.getter(v10);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = v25[0];
  v15 = v25[1];
  v25[0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_100725DD8, v19 + 8, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20 + v17, v9, v6);
  *(_QWORD *)(v20 + v18) = v4;
  v21 = (void *)v24[0];
  *(_QWORD *)(v20 + v19) = v24[0];
  swift_retain(v4);
  v22 = v21;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(v14, v15, v25, &unk_1007BDDD8, v20, 0xD000000000000068, 0x8000000100618CD0, 174, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003ACD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v6[19] = a5;
  v6[20] = a6;
  v6[17] = a3;
  v6[18] = a4;
  v6[15] = a1;
  v6[16] = a2;
  v7 = type metadata accessor for URL.DirectoryHint(0);
  v6[21] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[22] = v8;
  v6[23] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384((uint64_t *)&unk_1007C5E10);
  v6[24] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[25] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[26] = swift_task_alloc(v11);
  v6[27] = swift_task_alloc(v11);
  v6[28] = swift_task_alloc(v11);
  v12 = sub_100008384(&qword_1007B6BE8);
  v6[29] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[30] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[31] = swift_task_alloc(v14);
  v6[32] = swift_task_alloc(v14);
  v6[33] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[34] = swift_task_alloc(v15);
  v6[35] = swift_task_alloc(v15);
  v6[36] = swift_task_alloc(v15);
  v6[37] = swift_task_alloc(v15);
  v6[38] = swift_task_alloc(v15);
  v6[39] = swift_task_alloc(v15);
  v6[40] = swift_task_alloc(v15);
  v6[41] = swift_task_alloc(v15);
  v16 = sub_100008384(&qword_1007B5538);
  v6[42] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[43] = swift_task_alloc(v17);
  v6[44] = swift_task_alloc(v17);
  v6[45] = swift_task_alloc(v17);
  v18 = type metadata accessor for UTType(0);
  v6[46] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[47] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[48] = swift_task_alloc(v20);
  v6[49] = swift_task_alloc(v20);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v21 = static AirDropActor.shared;
  v6[50] = static AirDropActor.shared;
  return swift_task_switch(sub_1003ACF90, v21, 0);
}

uint64_t sub_1003ACF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  __n128 v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  NSString v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  int v43;
  double v44;
  double v45;
  id v46;
  NSURL *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  const char *object;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v71;
  NSURL *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  Swift::String v78;
  const char *v79;
  uint64_t v80;
  NSString v82;
  int v83;
  double v84;
  _QWORD *v85;
  NSString v86;
  int v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  id v96;
  void *v97;
  uint64_t v98;
  const char *v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  id v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  NSString v119;
  NSString v120;
  int v121;
  _QWORD *v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  const char *v130;
  const char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v158;

  v2 = URL.pathExtension.getter(a1);
  v4 = (void *)v3;
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease((const char *)v3);
    if (qword_1007B3FD8 != -1)
      swift_once(&qword_1007B3FD8, sub_1003ABB04);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100221DF8(v11, (uint64_t)qword_1007BDBE8);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unsupported file extension for sensitive analysis", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    v16 = *(_BYTE **)(v1 + 120);

    goto LABEL_10;
  }
  v6 = v2;
  v7 = *(_QWORD *)(v1 + 384);
  v8 = *(_QWORD *)(v1 + 336);
  swift_bridgeObjectRetain((const char *)v3);
  static UTType.data.getter(v9);
  UTType.init(filenameExtension:conformingTo:)(v6, v4, v7);
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease((const char *)0xE000000000000000);
  v10._countAndFlagsBits = v6;
  v10._object = v4;
  String.append(_:)(v10);
  Optional.tryUnwrap(_:file:line:)(0xD000000000000021, 0x8000000100618DA0, 0xD000000000000068, 0x8000000100618CD0, 180, v8);
  v26 = *(_QWORD *)(v1 + 384);
  v28 = *(_QWORD *)(v1 + 368);
  v27 = *(_QWORD *)(v1 + 376);
  v29 = *(_QWORD *)(v1 + 352);
  v30 = *(_QWORD *)(v1 + 344);
  sub_10000D0F0(*(_QWORD *)(v1 + 360), &qword_1007B5538);
  *(_QWORD *)&v31 = swift_bridgeObjectRelease((const char *)0x8000000100618DA0).n128_u64[0];
  v32 = swift_bridgeObjectRetain((const char *)v4, v31);
  static UTType.package.getter(v32);
  v33 = UTType.init(filenameExtension:conformingTo:)(v6, v4, v26);
  UTType.identifier.getter(v33);
  v35 = v34;
  sub_100221F28(v29, v30, &qword_1007B5538);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v30, 1, v28);
  if ((_DWORD)v36 == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v1 + 344), &qword_1007B5538);
    v37 = 0;
    v38 = 0;
  }
  else
  {
    v39 = *(_QWORD *)(v1 + 368);
    v40 = *(_QWORD *)(v1 + 376);
    v41 = *(_QWORD *)(v1 + 344);
    UTType.identifier.getter(v36);
    v38 = v42;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
    swift_bridgeObjectRetain(v38);
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
  }
  v43 = SFIsPhotosAssetBundle(v37);

  if (v43)
  {
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v45 = swift_bridgeObjectRelease((const char *)v4, v44).n128_u64[0];
    swift_bridgeObjectRelease(v38, v45);
    v46 = objc_allocWithZone((Class)PFAssetBundle);
    URL._bridgeToObjectiveC()(v47);
    v49 = v48;
    v50 = objc_msgSend(v46, "initWithAssetBundleAtURL:", v48);

    *(_QWORD *)(v1 + 96) = v50;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v51 = type metadata accessor for URL(0);
    v52 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v53._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v51, v52);
    object = (const char *)v53._object;
    String.append(_:)(v53);
    swift_bridgeObjectRelease(object);
    v55 = sub_100008384(&qword_1007BDDF0);
    Optional.tryUnwrap(_:file:line:)(0xD000000000000011, 0x8000000100618DF0, 0xD000000000000068, 0x8000000100618CD0, 185, v55);
    swift_bridgeObjectRelease((const char *)0x8000000100618DF0);

    v56 = *(void **)(v1 + 88);
    *(_QWORD *)(v1 + 408) = v56;
    v57 = objc_msgSend(v56, "photoURL");
    v58 = *(_QWORD *)(v1 + 320);
    if (v57)
    {
      v59 = v57;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v57);

      v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
      v61 = v58;
      v62 = 0;
    }
    else
    {
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
      v61 = *(_QWORD *)(v1 + 320);
      v62 = 1;
    }
    v157 = v60;
    v60(v61, v62, 1, v51);
    sub_1003417A8(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
    v107 = objc_msgSend(v56, "videoURL");
    if (v107)
    {
      v108 = v107;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v107);

      v109 = 0;
    }
    else
    {
      v109 = 1;
    }
    v110 = *(_QWORD *)(v1 + 328);
    v112 = *(_QWORD *)(v1 + 304);
    v111 = *(_QWORD *)(v1 + 312);
    v113 = *(_QWORD *)(v1 + 264);
    v152 = *(_QWORD *)(v1 + 232);
    v114 = *(void **)(v1 + 160);
    v115 = *(_QWORD *)(v1 + 144);
    v157(v112, v109, 1, v51);
    sub_1003417A8(v112, v111);
    sub_1003AF6B8(v115, v110, v111, v114, v113);
    SFProgressTask.makeAsyncIterator()(v152);
    v116 = static AirDropActor.shared;
    v117 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v118 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v1 + 416) = v118;
    *v118 = v1;
    v118[1] = sub_1003ADE74;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 32, v116, v117, *(_QWORD *)(v1 + 192), v1 + 112);
  }
  if (v38)
  {
    v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v63 = 0;
  }
  v64 = SFIsLivePhotos(v63);

  if (!v64)
  {
    v82 = String._bridgeToObjectiveC()();
    v83 = SFIsImage(v82);

    if (v83)
    {
      *(_QWORD *)&v84 = swift_bridgeObjectRelease(v35).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v4, v84);
      v85 = (_QWORD *)swift_task_alloc(dword_1007BDDCC);
      *(_QWORD *)(v1 + 472) = v85;
      *v85 = v1;
      v85[1] = sub_1003AE59C;
      return sub_1003B1728(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 160));
    }
    v86 = String._bridgeToObjectiveC()();
    v87 = SFIsVideo(v86);

    if (v87)
    {
      v88 = *(_QWORD *)(v1 + 232);
      v89 = *(void **)(v1 + 160);
      v90 = *(_QWORD *)(v1 + 144);
      *(_QWORD *)&v91 = swift_bridgeObjectRelease(v35).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v4, v91);
      sub_1003B04B4(v90, v89);
      SFProgressTask.makeAsyncIterator()(v88);
      v92 = static AirDropActor.shared;
      v93 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
      v94 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
      *(_QWORD *)(v1 + 480) = v94;
      *v94 = v1;
      v94[1] = sub_1003AE768;
      return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 16, v92, v93, *(_QWORD *)(v1 + 192), v1 + 104);
    }
    v119 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    v120 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease((const char *)v4);
    v121 = SFIsContact(v119, v120);

    if (v121)
    {
      v122 = (_QWORD *)swift_task_alloc(dword_1007BDDE4);
      *(_QWORD *)(v1 + 504) = v122;
      *v122 = v1;
      v122[1] = sub_1003AEAC4;
      return sub_1003B1C18(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 160));
    }
    if (qword_1007B3FD8 != -1)
      swift_once(&qword_1007B3FD8, sub_1003ABB04);
    v136 = type metadata accessor for Logger(0);
    v137 = sub_100221DF8(v136, (uint64_t)qword_1007BDBE8);
    v138 = Logger.logObject.getter(v137);
    v139 = static os_log_type_t.error.getter(v138);
    if (os_log_type_enabled(v138, v139))
    {
      v140 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v140 = 0;
      _os_log_impl((void *)&_mh_execute_header, v138, v139, "Unsupported file extension for sensitive analysis", v140, 2u);
      swift_slowDealloc(v140, -1, -1);
    }
    v141 = *(_QWORD *)(v1 + 392);
    v142 = *(_QWORD *)(v1 + 368);
    v143 = *(_QWORD *)(v1 + 376);
    v144 = *(_QWORD *)(v1 + 352);
    v16 = *(_BYTE **)(v1 + 120);

    sub_10000D0F0(v144, &qword_1007B5538);
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v141, v142);
LABEL_10:
    *v16 = 0;
    v17 = *(_QWORD *)(v1 + 384);
    v18 = *(_QWORD *)(v1 + 352);
    v19 = *(_QWORD *)(v1 + 360);
    v20 = *(_QWORD *)(v1 + 344);
    v22 = *(_QWORD *)(v1 + 320);
    v21 = *(_QWORD *)(v1 + 328);
    v24 = *(_QWORD *)(v1 + 304);
    v23 = *(_QWORD *)(v1 + 312);
    v25 = *(_QWORD *)(v1 + 296);
    v145 = *(_QWORD *)(v1 + 288);
    v146 = *(_QWORD *)(v1 + 280);
    v147 = *(_QWORD *)(v1 + 272);
    v148 = *(_QWORD *)(v1 + 264);
    v149 = *(_QWORD *)(v1 + 256);
    v150 = *(_QWORD *)(v1 + 248);
    v151 = *(_QWORD *)(v1 + 224);
    v153 = *(_QWORD *)(v1 + 216);
    v154 = *(_QWORD *)(v1 + 208);
    v155 = *(_QWORD *)(v1 + 184);
    swift_task_dealloc(*(_QWORD *)(v1 + 392));
    swift_task_dealloc(v17);
    swift_task_dealloc(v19);
    swift_task_dealloc(v18);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v153);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v65 = *(_QWORD *)(v1 + 296);
  v66 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)&v67 = swift_bridgeObjectRelease(v35).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v4, v67);
  v68 = type metadata accessor for URL(0);
  v69 = *(_QWORD *)(v68 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v65, v66, v68);
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56);
  v70(v65, 0, 1, v68);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v65, 1, v68);
  v73 = 0;
  if (v71 != 1)
  {
    v74 = *(_QWORD *)(v1 + 296);
    URL._bridgeToObjectiveC()(v72);
    v73 = v75;
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v74, v68);
  }
  v76 = objc_msgSend(objc_allocWithZone((Class)PFVideoComplement), "initWithBundleAtURL:", v73);

  *(_QWORD *)(v1 + 64) = v76;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease((const char *)0xE000000000000000);
  v77 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v78._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v68, v77);
  v79 = (const char *)v78._object;
  String.append(_:)(v78);
  swift_bridgeObjectRelease(v79);
  v80 = sub_100008384(&qword_1007BDDE8);
  Optional.tryUnwrap(_:file:line:)(0xD000000000000014, 0x8000000100618DD0, 0xD000000000000068, 0x8000000100618CD0, 194, v80);
  swift_bridgeObjectRelease((const char *)0x8000000100618DD0);

  v95 = *(void **)(v1 + 72);
  *(_QWORD *)(v1 + 440) = v95;
  v96 = objc_msgSend(v95, "imagePath");
  if (v96
    && (v97 = v96, v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96),
                   v100 = v99,
                   v97,
                   v100))
  {
    v102 = *(_QWORD *)(v1 + 280);
    v101 = *(_QWORD *)(v1 + 288);
    v156 = v98;
    v103 = *(_QWORD *)(v1 + 176);
    v104 = *(_QWORD *)(v1 + 184);
    v105 = *(_QWORD *)(v1 + 168);
    v70(v102, 1, 1, v68);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v103 + 104))(v104, enum case for URL.DirectoryHint.inferFromPath(_:), v105);
    swift_bridgeObjectRetain(v100);
    URL.init(filePath:directoryHint:relativeTo:)(v156, v100, v104, v102);
    v70(v101, 0, 1, v68);
    *(_QWORD *)&v106 = swift_bridgeObjectRelease(v100).n128_u64[0];
  }
  else
  {
    v70(*(_QWORD *)(v1 + 288), 1, 1, v68);
  }
  v123 = objc_msgSend(v95, "videoPath", v106);
  if (v123)
  {
    v124 = v123;
    v126 = *(_QWORD *)(v1 + 272);
    v125 = *(_QWORD *)(v1 + 280);
    v128 = *(_QWORD *)(v1 + 176);
    v127 = *(_QWORD *)(v1 + 184);
    v129 = *(_QWORD *)(v1 + 168);
    v158 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
    v131 = v130;

    v70(v125, 1, 1, v68);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v128 + 104))(v127, enum case for URL.DirectoryHint.inferFromPath(_:), v129);
    swift_bridgeObjectRetain(v131);
    URL.init(filePath:directoryHint:relativeTo:)(v158, v131, v127, v125);
    v70(v126, 0, 1, v68);
    swift_bridgeObjectRelease(v131);
  }
  else
  {
    v70(*(_QWORD *)(v1 + 272), 1, 1, v68);
  }
  v132 = *(_QWORD *)(v1 + 232);
  sub_1003AF6B8(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 272), *(void **)(v1 + 160), *(_QWORD *)(v1 + 256));
  SFProgressTask.makeAsyncIterator()(v132);
  v133 = static AirDropActor.shared;
  v134 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v135 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 448) = v135;
  *v135 = v1;
  v135[1] = sub_1003AE208;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 48, v133, v134, *(_QWORD *)(v1 + 192), v1 + 80);
}

uint64_t sub_1003ADE74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 416));
  if (v0)
    v3 = sub_1003AEC90;
  else
    v3 = sub_1003ADED8;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003ADED8()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192), *(double *)(v0 + 32));
    v1 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 424) = v1;
    *v1 = v0;
    v1[1] = sub_1003ADFF8;
    return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 232));
  }
  else
  {
    v3 = *(void (**)(uint64_t *))(v0 + 128);
    v7 = *(_QWORD *)(v0 + 32);
    v3(&v7);
    v4 = static AirDropActor.shared;
    v5 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v6 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 416) = v6;
    *v6 = v0;
    v6[1] = sub_1003ADE74;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 32, v4, v5, *(_QWORD *)(v0 + 192), v0 + 112);
  }
}

uint64_t sub_1003ADFF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 424);
  *(_QWORD *)(*v1 + 432) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003AEE68;
  else
    v4 = sub_1003AE05C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003AE05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000D0F0(v6, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v5, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 352);
  v12 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AE208()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 448));
  if (v0)
    v3 = sub_1003AF01C;
  else
    v3 = sub_1003AE26C;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003AE26C()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), *(double *)(v0 + 48));
    v1 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 456) = v1;
    *v1 = v0;
    v1[1] = sub_1003AE38C;
    return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 232));
  }
  else
  {
    v3 = *(void (**)(uint64_t *))(v0 + 128);
    v7 = *(_QWORD *)(v0 + 48);
    v3(&v7);
    v4 = static AirDropActor.shared;
    v5 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v6 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 448) = v6;
    *v6 = v0;
    v6[1] = sub_1003AE208;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 48, v4, v5, *(_QWORD *)(v0 + 192), v0 + 80);
  }
}

uint64_t sub_1003AE38C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 456);
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003AF1F4;
  else
    v4 = sub_1003AE3F0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003AE3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000D0F0(v6, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v5, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 352);
  v12 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AE59C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_BYTE *)(*(_QWORD *)v1 + 25) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003AE5FC, v3, 0);
}

uint64_t sub_1003AE5FC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_BYTE *)(v0 + 25);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_BYTE **)(v0 + 120);
  sub_10000D0F0(*(_QWORD *)(v0 + 352), &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *v5 = v1;
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 328);
  v13 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 272);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AE768()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 480));
  if (v0)
    v3 = sub_1003AF3A8;
  else
    v3 = sub_1003AE7CC;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003AE7CC()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192), *(double *)(v0 + 16));
    v1 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 488) = v1;
    *v1 = v0;
    v1[1] = sub_1003AE8EC;
    return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 232));
  }
  else
  {
    v3 = *(void (**)(uint64_t *))(v0 + 128);
    v7 = *(_QWORD *)(v0 + 16);
    v3(&v7);
    v4 = static AirDropActor.shared;
    v5 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v6 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 480) = v6;
    *v6 = v0;
    v6[1] = sub_1003AE768;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v4, v5, *(_QWORD *)(v0 + 192), v0 + 104);
  }
}

uint64_t sub_1003AE8EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 488);
  *(_QWORD *)(*v1 + 496) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003AF53C;
  else
    v4 = sub_1003AE950;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 400), 0);
}

uint64_t sub_1003AE950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 272);
  v18 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 256);
  v20 = *(_QWORD *)(v0 + 248);
  v21 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AEAC4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_BYTE *)(*(_QWORD *)v1 + 26) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003AEB24, v3, 0);
}

uint64_t sub_1003AEB24()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_BYTE *)(v0 + 26);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_BYTE **)(v0 + 120);
  sub_10000D0F0(*(_QWORD *)(v0 + 352), &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *v5 = v1;
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 328);
  v13 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 272);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AEC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28 = *(_QWORD *)(v0 + 376);
  v30 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10000D0F0(v3, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v2, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v1, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
  v10 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AEE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000D0F0(v6, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v5, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AF01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28 = *(_QWORD *)(v0 + 376);
  v30 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10000D0F0(v3, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v2, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v1, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
  v10 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AF1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000D0F0(v6, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v5, (uint64_t *)&unk_1007B5200);
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AF3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 360);
  v11 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 328);
  v15 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 272);
  v21 = *(_QWORD *)(v0 + 264);
  v22 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 248);
  v24 = *(_QWORD *)(v0 + 224);
  v25 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AF53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  sub_10000D0F0(v4, &qword_1007B5538);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 272);
  v18 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 256);
  v20 = *(_QWORD *)(v0 + 248);
  v21 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AF6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  const char *v39;
  __n128 v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  Swift::String v43;
  const char *object;
  Swift::String v45;
  const char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  char *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;

  v76 = a4;
  v77 = a5;
  v71 = a1;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v73 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v72 = (char *)&v71 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v71 - v14;
  v16 = __chkstk_darwin(v13);
  v75 = (char *)&v71 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v71 - v18;
  v20 = sub_100008384(&qword_1007BDD98);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_100221F28(a2, (uint64_t)v23, (uint64_t *)&unk_1007B5200);
  v25 = v8;
  sub_100221F28(a3, v24, (uint64_t *)&unk_1007B5200);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a3) = v26(v23, 1, v7);
  v27 = v26((char *)v24, 1, v7);
  v28 = v27;
  if ((_DWORD)a3 == 1)
  {
    if (v27 == 1)
    {
      if (qword_1007B3FD8 != -1)
        swift_once(&qword_1007B3FD8, sub_1003ABB04);
      v29 = type metadata accessor for Logger(0);
      sub_100221DF8(v29, (uint64_t)qword_1007BDBE8);
      v30 = v73;
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v73, v71, v7);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v78 = (char *)v35;
        *(_DWORD *)v34 = 136315138;
        v36 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v37 = dispatch thunk of CustomStringConvertible.description.getter(v7, v36);
        v39 = (const char *)v38;
        v80 = sub_100228BD8(v37, v38, (uint64_t *)&v78);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v34 + 4);
        v40 = swift_bridgeObjectRelease(v39);
        (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v30, v7, v40);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Live Photo URL is missing both image and video - treating a non-sensitive {baseURL: %s}", v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v7);
      }

      v78 = 0;
      return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000010, 0x8000000100618D40, &v78, &unk_1007BDDA0, 0, 0xD000000000000068, 0x8000000100618CD0, 245, &type metadata for Double, &type metadata for Bool);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v19, v24, v7);
      sub_1003B04B4((uint64_t)v19, v76);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v19, v7);
    }
  }
  else
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v41(v19, v23, v7);
    if (v28 == 1)
    {
      v78 = 0;
      v79 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease(v79);
      v78 = (char *)0xD000000000000012;
      v79 = (const char *)0x8000000100618D80;
      v43._countAndFlagsBits = URL.lastPathComponent.getter(v42);
      object = (const char *)v43._object;
      String.append(_:)(v43);
      swift_bridgeObjectRelease(object);
      v45._countAndFlagsBits = 41;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      v46 = v79;
      v73 = v78;
      v78 = 0;
      v47 = v75;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v75, v19, v7);
      v48 = *(unsigned __int8 *)(v25 + 80);
      v49 = v19;
      v50 = v25;
      v51 = (v48 + 24) & ~v48;
      v52 = (v9 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
      v53 = swift_allocObject(&unk_100725D98, v52 + 8, v48 | 7);
      v54 = v74;
      *(_QWORD *)(v53 + 16) = v74;
      v41((char *)(v53 + v51), v47, v7);
      v55 = v76;
      *(_QWORD *)(v53 + v52) = v76;
      swift_retain(v54);
      v56 = v55;
      SFProgressTask.init(_:initialProgress:operation:file:line:)(v73, v46, &v78, &unk_1007BDDC0, v53, 0xD000000000000068, 0x8000000100618CD0, 223, &type metadata for Double, &type metadata for Bool);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v49, v7);
    }
    else
    {
      v58 = v75;
      v41(v75, (char *)v24, v7);
      v78 = 0;
      v59 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v59(v15, v19, v7);
      v60 = v72;
      v59(v72, v58, v7);
      v61 = *(unsigned __int8 *)(v25 + 80);
      v62 = (v61 + 24) & ~v61;
      v63 = (v9 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
      v73 = v19;
      v64 = v25;
      v65 = (v61 + v63 + 8) & ~v61;
      v66 = swift_allocObject(&unk_100725D70, v65 + v9, v61 | 7);
      v67 = v74;
      *(_QWORD *)(v66 + 16) = v74;
      v41((char *)(v66 + v62), v15, v7);
      v68 = v76;
      *(_QWORD *)(v66 + v63) = v76;
      v41((char *)(v66 + v65), v60, v7);
      swift_retain(v67);
      v69 = v68;
      SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000017, 0x8000000100618D60, &v78, &unk_1007BDDB0, v66, 0xD000000000000068, 0x8000000100618CD0, 230, &type metadata for Double, &type metadata for Bool);
      v70 = *(void (**)(char *, uint64_t))(v64 + 8);
      v70(v75, v7);
      return ((uint64_t (*)(char *, uint64_t))v70)(v73, v7);
    }
  }
}

uint64_t sub_1003AFD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;

  v6[2] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6[3] = static AirDropActor.shared;
  v9 = (_QWORD *)swift_task_alloc(dword_1007BDDCC);
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_1003AFDE0;
  return sub_1003B1728(a5, a6);
}

uint64_t sub_1003AFDE0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_BYTE *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003AFE3C, v3, 0);
}

uint64_t sub_1003AFE3C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AFE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a3;
  v7[8] = a4;
  v7[5] = a1;
  v7[6] = a2;
  v10 = sub_100008384((uint64_t *)&unk_1007C5E10);
  v7[11] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[12] = v11;
  v7[13] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B6BE8);
  v7[14] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[15] = v13;
  v7[16] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7[17] = static AirDropActor.shared;
  v14 = (_QWORD *)swift_task_alloc(dword_1007BDDCC);
  v7[18] = v14;
  *v14 = v7;
  v14[1] = sub_1003AFF44;
  return sub_1003B1728(a5, a6);
}

uint64_t sub_1003AFF44(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_BYTE *)(*(_QWORD *)v1 + 25) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003AFFA0, v3, 0);
}

uint64_t sub_1003AFFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t *);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  if (*(_BYTE *)(v0 + 25) == 1)
  {
    **(_BYTE **)(v0 + 40) = 1;
    v1 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 112);
    v5 = *(void **)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v6 = *(void (**)(uint64_t *))(v0 + 48);
    v10 = 0x3FE0000000000000;
    v6(&v10);
    sub_1003B04B4(v4, v5);
    SFProgressTask.makeAsyncIterator()(v3);
    v7 = static AirDropActor.shared;
    v8 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    *(_QWORD *)(v0 + 152) = v8;
    v9 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = sub_1003B00F0;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v7, v8, *(_QWORD *)(v0 + 88), v0 + 32);
  }
}

uint64_t sub_1003B00F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
    v3 = sub_1003B037C;
  else
    v3 = sub_1003B0154;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_1003B0154()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  uint64_t v4;
  void (*v5)(double *);
  uint64_t v6;
  _QWORD *v7;
  double v8;

  v1 = *(double *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88), v1);
    v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 176) = v2;
    *v2 = v0;
    v2[1] = sub_1003B02C8;
    return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 112));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 152);
    v5 = *(void (**)(double *))(v0 + 48);
    v8 = v1 * 0.5 + 0.5;
    v5(&v8);
    v6 = static AirDropActor.shared;
    v7 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 168) = v7;
    *v7 = v0;
    v7[1] = sub_1003B0264;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v6, v4, *(_QWORD *)(v0 + 88), v0 + 32);
  }
}

uint64_t sub_1003B0264()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 168));
  if (v0)
    v3 = sub_1003B037C;
  else
    v3 = sub_1003B0154;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_1003B02C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003B03E8;
  else
    v4 = sub_1003B032C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_1003B032C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B037C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B03E8()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B0438(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B04A0, static AirDropActor.shared, 0);
}

uint64_t sub_1003B04A0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B04B4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v18[2];

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  HIWORD(v18[1]) = -4864;
  _StringGuts.grow(_:)(16);
  v7 = swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v18, "analyzeVideo(");
  v8._countAndFlagsBits = URL.lastPathComponent.getter(v7);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11 = v18[0];
  v12 = v18[1];
  v18[0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_100725D48, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v16 = a2;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(v11, v12, v18, &unk_1007BDD90, v15, 0xD000000000000068, 0x8000000100618CD0, 261, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003B0650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[5] = static AirDropActor.shared;
  return swift_task_switch(sub_1003B06C0, v6, 0);
}

uint64_t sub_1003B06C0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[6] = SCSensitivityAnalyzer.videoAnalysis(forFileAt:)(v0[4]);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to SCSensitivityAnalyzer.VideoAnalysisHandler.hasSensitiveContent()
                                  + 1));
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_1003B0718;
  return SCSensitivityAnalyzer.VideoAnalysisHandler.hasSensitiveContent()();
}

uint64_t sub_1003B0718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  *(_QWORD *)(*(_QWORD *)v2 + 64) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[5];
    v7 = sub_1003B07F0;
  }
  else
  {
    v8 = v4[5];
    swift_release(v4[6]);
    v4[9] = a1;
    v7 = sub_1003B0798;
    v6 = v8;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003B0798()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 *v2;
  unsigned __int8 v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(unsigned __int8 **)(v0 + 16);
  v3 = objc_msgSend(v1, "isSensitive");

  *v2 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B07F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropUserSafetyContentHandler()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropUserSafetyContentHandler);
}

unint64_t sub_1003B0844()
{
  id v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(SCSensitivityAnalyzer), "analysisFeatureEnablement");
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (v0 == (id)1)
    v1 = 1702195828;
  else
    v1 = 0x65736C6166;
  if (v0 == (id)1)
    v2 = (void *)0xE400000000000000;
  else
    v2 = (void *)0xE500000000000000;
  if (v0 == (id)2)
    v3 = 1702195828;
  else
    v3 = 0x65736C6166;
  if (v0 == (id)2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  v6._object = (void *)0x8000000100618C80;
  v6._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v6);
  v7._countAndFlagsBits = v1;
  v7._object = v2;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v2);
  return 0xD000000000000015;
}

void sub_1003B0960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(char *, unint64_t, uint64_t);
  uint64_t i;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  int v19;
  NSString v20;
  int v21;
  NSString v22;
  uint64_t v23;
  id v24;
  NSString v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, unint64_t, uint64_t);

  v0 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = SFAirDropReceive.AskRequest.files.getter(v2);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
LABEL_20:
    swift_bridgeObjectRelease(v5);
    v7 = 0;
LABEL_21:
    v25 = String._bridgeToObjectiveC()();
    v27 = (id)SFLocalizedStringForKey(v25, v26);

    if (!v27)
      goto LABEL_34;
    goto LABEL_22;
  }
  v39 = v5;
  v40 = 0;
  v7 = 0;
  v8 = v5 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v9 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v1 + 16);
  v41 = *(_QWORD *)(v1 + 72);
  v42 = v9;
  for (i = v9(v4, v8, v0); ; i = v42(v4, v8, v0))
  {
    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(i);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    v15 = SFIsPhotosAssetBundle(v14);

    if (v15)
    {
      v16 = swift_bridgeObjectRelease(v13);
      SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter(v16);
      if (!v17)
      {
        (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
        goto LABEL_4;
      }
      v13 = v17;
    }
    v18 = String._bridgeToObjectiveC()();
    v19 = SFIsImage(v18);

    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      swift_bridgeObjectRelease(v13);
      v11 = __OFADD__(v7++, 1);
      if (v11)
        goto LABEL_32;
    }
    else
    {
      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      v21 = SFIsVideo(v20);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      if (v21)
      {
        v11 = __OFADD__(v40++, 1);
        if (v11)
          goto LABEL_33;
      }
    }
LABEL_4:
    v8 += v41;
    if (!--v6)
      break;
  }
  swift_bridgeObjectRelease(v39);
  if (v7)
  {
    if (v7 == 1)
    {
      if (!v40)
      {
        v22 = String._bridgeToObjectiveC()();
        v24 = (id)SFLocalizedStringForKey(v22, v23);

        if (!v24)
        {
          __break(1u);
          goto LABEL_20;
        }
        goto LABEL_29;
      }
LABEL_28:
      v35 = String._bridgeToObjectiveC()();
      v24 = (id)SFLocalizedStringForKey(v35, v36);

      if (!v24)
        goto LABEL_35;
      goto LABEL_29;
    }
LABEL_27:
    if (!v40)
      goto LABEL_21;
    goto LABEL_28;
  }
  v7 = v40;
  if (!v40)
    goto LABEL_21;
  if (v40 == 1)
  {
    v33 = String._bridgeToObjectiveC()();
    v24 = (id)SFLocalizedStringForKey(v33, v34);

    if (v24)
    {
LABEL_29:
      static String._unconditionallyBridgeFromObjectiveC(_:)(v24);

      return;
    }
    __break(1u);
    goto LABEL_27;
  }
  v37 = String._bridgeToObjectiveC()();
  v27 = (id)SFLocalizedStringForKey(v37, v38);

  if (v27)
  {
LABEL_22:
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v32 + 56) = &type metadata for Int;
    *(_QWORD *)(v32 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v32 + 32) = v7;
    static String.localizedStringWithFormat(_:_:)(v28, v30, v32);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v32);
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1003B0D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 128) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 136) = static AirDropActor.shared;
  return swift_task_switch(sub_1003B0DA0, v2, 0);
}

uint64_t sub_1003B0DA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = v0[16];
  v3 = objc_msgSend(objc_allocWithZone((Class)SCSensitivityAnalyzer), "init");
  v0[18] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1003B0E60;
  v5 = swift_continuation_init(v0 + 2, 1, v4);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1002CC354;
  v6[3] = &unk_100725D20;
  v6[4] = v5;
  objc_msgSend(v3, "analyzeCGImage:completionHandler:", v2, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_1003B0E60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 152) = v2;
  if (v2)
    v3 = sub_1003B1050;
  else
    v3 = sub_1003B0EC0;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 136), 0);
}

uint64_t sub_1003B0EC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 120);
  v2 = objc_msgSend(v1, "isSensitive");

  v3 = sub_10031AF00();
  v4 = (void *)static NSUserDefaults.airdrop.getter(v3);
  v5 = SFAirDropUserDefaults.sensitivePreviewOverride.getter();

  if (v5 != 2)
  {
    if (qword_1007B3FD8 != -1)
      swift_once(&qword_1007B3FD8, sub_1003ABB04);
    v6 = (void *)(v5 & 1);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007BDBE8);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(14, -1);
      *(_DWORD *)v11 = 67109376;
      *(_DWORD *)(v0 + 80) = (_DWORD)v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 84, v11 + 4);
      *(_WORD *)(v11 + 8) = 1024;
      *(_DWORD *)(v0 + 80) = (_DWORD)v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 84, v11 + 10);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "isPreviewSensitive returning sensitivePreviewOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v11, 0xEu);
      swift_slowDealloc(v11, -1, -1);
    }

    v2 = v6;
  }

  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_1003B1050(uint64_t a1)
{
  uint64_t v1;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  unint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v24;

  v24 = v1 + 80;
  swift_willThrow(a1);
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  if (qword_1007B3FD8 != -1)
    swift_once(&qword_1007B3FD8, sub_1003ABB04);
  v3 = *(_QWORD *)(v1 + 152);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BDBE8);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v1 + 152);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v9);
    v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v1 + 80) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v1 + 88, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "UserSafety analyze failed: %@", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    v14 = v10;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v1 + 152));
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  v15 = sub_10031AF00();
  v16 = (void *)static NSUserDefaults.airdrop.getter(v15);
  v17 = SFAirDropUserDefaults.sensitivePreviewOverride.getter();

  if (v17 == 2)
  {
    v18 = 0;
  }
  else
  {
    if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
      swift_once(&qword_1007B3FD8, sub_1003ABB04);
    v18 = v17 & 1;
    v19 = sub_100221DF8(v4, (uint64_t)qword_1007BDBE8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(14, -1);
      *(_DWORD *)v22 = 67109376;
      *(_DWORD *)(v1 + 80) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v1 + 84, v22 + 4);
      *(_WORD *)(v22 + 8) = 1024;
      *(_DWORD *)(v1 + 80) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v1 + 84, v22 + 10);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "isPreviewSensitive returning sensitivePreviewOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v22, 0xEu);
      swift_slowDealloc(v22, -1, -1);
    }

  }
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v18);
}

uint64_t sub_1003B1368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003B13DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = v3 + ((v8 + 24) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_1007BDD8C);
  *(_QWORD *)(v4 + 16) = v11;
  *v11 = v4;
  v11[1] = sub_10000D098;
  return sub_1003B0650(a1, a2, a3, v9, v10);
}

uint64_t sub_1003B1474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v3 + v7 + 8) & ~v3;
  v9 = v8 + v5;
  swift_release(*(_QWORD *)(v0 + 16));
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);

  v10(v0 + v8, v1);
  return swift_deallocObject(v0, v9, v6);
}

uint64_t sub_1003B151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = (*(_QWORD *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(v3 + 16);
  v13 = v3 + v10;
  v14 = *(_QWORD *)(v3 + v11);
  v15 = v3 + ((v9 + v11 + 8) & ~v9);
  v16 = (_QWORD *)swift_task_alloc(dword_1007BDDAC);
  *(_QWORD *)(v4 + 16) = v16;
  *v16 = v4;
  v16[1] = sub_10000D098;
  return sub_1003AFE54(a1, a2, a3, v12, v13, v14, v15);
}

uint64_t sub_1003B15E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003B1678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v3 + 16);
  v11 = v3 + v9;
  v12 = *(_QWORD *)(v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_1007BDDBC);
  *(_QWORD *)(v4 + 16) = v13;
  *v13 = v4;
  v13[1] = sub_10000D098;
  return sub_1003AFD50(a1, a2, a3, v10, v11, v12);
}

uint64_t sub_1003B1728(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[16] = a1;
  v2[17] = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v3 = static AirDropActor.shared;
  v2[18] = static AirDropActor.shared;
  return swift_task_switch(sub_1003B1794, v3, 0);
}

uint64_t sub_1003B1794@<X0>(NSURL *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v1 + 2;
  v3 = (void *)v1[17];
  URL._bridgeToObjectiveC()(a1);
  v5 = v4;
  v1[19] = v4;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_1003B1840;
  v7 = swift_continuation_init(v1 + 2, 1, v6);
  v1[10] = _NSConcreteStackBlock;
  v8 = v1 + 10;
  v8[1] = 0x40000000;
  v8[2] = sub_1002CC354;
  v8[3] = &unk_100725DB0;
  v8[4] = v7;
  objc_msgSend(v3, "analyzeImageFile:completionHandler:", v5, v8);
  return swift_continuation_await(v2);
}

uint64_t sub_1003B1840()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 160) = v2;
  if (v2)
    v3 = sub_1003B18F8;
  else
    v3 = sub_1003B18A0;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 144), 0);
}

uint64_t sub_1003B18A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 120);
  v3 = objc_msgSend(v2, "isSensitive");

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t sub_1003B18F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v1 + 152);
  swift_willThrow(a1);

  if (qword_1007B3FD8 != -1)
    swift_once(&qword_1007B3FD8, sub_1003ABB04);
  v3 = *(_QWORD *)(v1 + 160);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BDBE8);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v1 + 160);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v9);
    v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v1 + 80) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "UserSafety analyze failed: %@", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v1 + 160));
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1003B1AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1003B1B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v3 + v9;
  v12 = *(_QWORD *)(v3 + v10);
  v13 = *(_QWORD *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1007BDDD4);
  *(_QWORD *)(v4 + 16) = v14;
  *v14 = v4;
  v14[1] = sub_10000D098;
  return sub_1003ACD6C(a1, a2, a3, v11, v12, v13);
}

uint64_t sub_1003B1C18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[24] = a1;
  v2[25] = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v3 = static AirDropActor.shared;
  v2[26] = static AirDropActor.shared;
  return swift_task_switch(sub_1003B1C84, v3, 0);
}

uint64_t sub_1003B1C84()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Class isa;
  __n128 v4;

  v0[27] = Data.init(contentsOf:options:)(v0[24], 0);
  v0[28] = v1;
  v2 = (void *)objc_opt_self(CNContactVCardSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v0[29] = isa;
  v0[15] = v0 + 23;
  v0[10] = v0;
  v0[11] = sub_1003B1F1C;
  v0[22] = swift_continuation_init(v0 + 10, 1, v4);
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_1002EF980;
  v0[21] = &unk_100725DF0;
  objc_msgSend(v2, "contactsWithData:completionHandler:", isa, v0 + 18);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_1003B1F1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    v3 = sub_1003B2FAC;
  else
    v3 = sub_1003B1F7C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 208), 0);
}

uint64_t sub_1003B1F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char **v6;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  NSObject *v36;
  os_log_type_t v37;
  const char *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = v0 + 184;
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 248) = v1;

  if ((unint64_t)v1 >> 62)
    goto LABEL_39;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 256) = v4;
  if (v4)
  {
    do
    {
      v63 = v2;
      v5 = 0;
      v6 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
      p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
      while (1)
      {
        v8 = *(_QWORD *)(v0 + 248);
        v9 = (v8 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v8)
           : *(id *)(v8 + 8 * v5 + 32);
        v1 = (uint64_t)v9;
        *(_QWORD *)(v0 + 264) = v9;
        *(_QWORD *)(v0 + 272) = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        if (!objc_msgSend(v9, v6[65]))
        {
          if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
            swift_once(&qword_1007B3FD8, sub_1003ABB04);
          v30 = type metadata accessor for Logger(0);
          sub_100221DF8(v30, (uint64_t)qword_1007BDBE8);
          v31 = (id)v1;
          v32 = Logger.logObject.getter(v31);
          v33 = static os_log_type_t.default.getter(v32);
          v2 = v33;
          if (os_log_type_enabled(v32, v33))
          {
            v34 = swift_slowAlloc(12, -1);
            v35 = (_QWORD *)swift_slowAlloc(8, -1);
            *(_DWORD *)v34 = 138739971;
            *(_QWORD *)(v34 + 4) = v31;
            *v35 = v31;
            v36 = v32;
            v37 = v2;
            v38 = "Contact has no imageDataAvailable. Skipping {contact: %{sensitive}@}";
LABEL_27:
            _os_log_impl((void *)&_mh_execute_header, v36, v37, v38, (uint8_t *)v34, 0xCu);
            v41 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v35, 1, v41);
            swift_slowDealloc(v35, -1, -1);
            swift_slowDealloc(v34, -1, -1);

            goto LABEL_5;
          }
          goto LABEL_4;
        }
        v10 = objc_msgSend((id)v1, "imageData");
        if (!v10)
        {
          if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
            swift_once(&qword_1007B3FD8, sub_1003ABB04);
          v39 = type metadata accessor for Logger(0);
          sub_100221DF8(v39, (uint64_t)qword_1007BDBE8);
          v31 = (id)v1;
          v32 = Logger.logObject.getter(v31);
          v40 = static os_log_type_t.default.getter(v32);
          v2 = v40;
          if (os_log_type_enabled(v32, v40))
          {
            v34 = swift_slowAlloc(12, -1);
            v35 = (_QWORD *)swift_slowAlloc(8, -1);
            *(_DWORD *)v34 = 138739971;
            *(_QWORD *)(v34 + 4) = v31;
            *v35 = v31;
            v36 = v32;
            v37 = v2;
            v38 = "Contact has no imageData. Skipping {contact: %{sensitive}@}";
            goto LABEL_27;
          }
LABEL_4:

          goto LABEL_5;
        }
        v11 = v10;
        v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v14 = v13;

        *(_QWORD *)(v0 + 280) = v12;
        *(_QWORD *)(v0 + 288) = v14;
        v15 = objc_allocWithZone((Class)UIImage);
        sub_10022E4A8(v12, v14);
        isa = Data._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(v15, "initWithData:", isa);
        *(_QWORD *)(v0 + 296) = v17;
        sub_100225AB4(v12, v14);

        if (v17)
        {
          v18 = objc_msgSend(v17, "CGImage");
          *(_QWORD *)(v0 + 304) = v18;
          if (v18)
          {
            v56 = v18;
            v57 = v0 + 16;
            v58 = *(void **)(v0 + 200);
            *(_QWORD *)(v0 + 56) = v63;
            *(_QWORD *)(v0 + 16) = v0;
            *(_QWORD *)(v0 + 24) = sub_1003B275C;
            v59 = swift_continuation_init(v0 + 16, 1, v19);
            *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
            v60 = (_QWORD *)(v0 + 144);
            v60[1] = 0x40000000;
            v60[2] = sub_1002CC354;
            v60[3] = &unk_100725E08;
            v60[4] = v59;
            objc_msgSend(v58, "analyzeCGImage:completionHandler:", v56, v60);
            return swift_continuation_await(v57);
          }
          if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
            swift_once(&qword_1007B3FD8, sub_1003ABB04);
          v20 = type metadata accessor for Logger(0);
          sub_100221DF8(v20, (uint64_t)qword_1007BDBE8);
          v21 = (id)v1;
          v22 = v17;
          v23 = v21;
          v24 = v22;
          v25 = Logger.logObject.getter(v24);
          v26 = static os_log_type_t.error.getter(v25);
          v2 = v26;
          if (os_log_type_enabled(v25, v26))
          {
            v27 = swift_slowAlloc(22, -1);
            v28 = (_QWORD *)swift_slowAlloc(16, -1);
            *(_DWORD *)v27 = 138740227;
            *(_QWORD *)(v27 + 4) = v23;
            *v28 = v23;

            *(_WORD *)(v27 + 12) = 2112;
            *(_QWORD *)(v27 + 14) = v24;
            v28[1] = v17;

            _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v2, "Failed to get cgImage from contact.imageData {contact: %{sensitive}@, uiImage: %@}", (uint8_t *)v27, 0x16u);
            v29 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v28, 2, v29);
            swift_slowDealloc(v28, -1, -1);
            swift_slowDealloc(v27, -1, -1);

            sub_100225AB4(v12, v14);
          }
          else
          {
            sub_100225AB4(v12, v14);

          }
          v6 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
        }
        else
        {
          if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
            swift_once(&qword_1007B3FD8, sub_1003ABB04);
          v42 = type metadata accessor for Logger(0);
          sub_100221DF8(v42, (uint64_t)qword_1007BDBE8);
          sub_10022E4A8(v12, v14);
          sub_10022E4A8(v12, v14);
          v43 = (id)v1;
          v44 = Logger.logObject.getter(v43);
          v45 = static os_log_type_t.error.getter(v44);
          v2 = v45;
          if (os_log_type_enabled(v44, v45))
          {
            v46 = swift_slowAlloc(22, -1);
            v47 = (_QWORD *)swift_slowAlloc(8, -1);
            v64 = swift_slowAlloc(32, -1);
            v65 = v64;
            *(_DWORD *)v46 = 138740227;
            *(_QWORD *)(v46 + 4) = v43;
            *v47 = v43;
            *(_WORD *)(v46 + 12) = 2080;
            sub_10022E4A8(v12, v14);
            v48 = Data.description.getter(v12, v14);
            v50 = v49;
            sub_100225AB4(v12, v14);
            *(_QWORD *)(v46 + 14) = sub_100228BD8(v48, (unint64_t)v50, &v65);
            swift_bridgeObjectRelease(v50);
            sub_100225AB4(v12, v14);
            sub_100225AB4(v12, v14);
            _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v2, "Failed to create UIImage from contact.imageData {contact: %{sensitive}@, imageData: %s}", (uint8_t *)v46, 0x16u);
            v51 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v47, 1, v51);
            swift_slowDealloc(v47, -1, -1);
            swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v64, -1, -1);
            v52 = v46;
            v6 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
            swift_slowDealloc(v52, -1, -1);

            sub_100225AB4(v12, v14);
          }
          else
          {
            sub_100225AB4(v12, v14);

            sub_100225AB4(v12, v14);
            sub_100225AB4(v12, v14);

          }
        }
        p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
LABEL_5:
        v5 = *(_QWORD *)(v0 + 272);
        if (v5 == *(_QWORD *)(v0 + 256))
        {
          v1 = *(_QWORD *)(v0 + 248);
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_39:
      if (v1 < 0)
        v61 = v1;
      else
        v61 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v1);
      v62 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease((const char *)v1);
      *(_QWORD *)(v0 + 256) = v62;
    }
    while (v62);
  }
LABEL_36:
  v54 = *(_QWORD *)(v0 + 216);
  v53 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRelease((const char *)v1);
  sub_100225AB4(v54, v53);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1003B275C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 312) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 208);
    swift_bridgeObjectRelease(*(const char **)(v1 + 248));
    v4 = sub_1003B3190;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 208);
    v4 = sub_1003B27CC;
  }
  return swift_task_switch(v4, v5, 0);
}

id sub_1003B27CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id result;
  char **v12;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  Class isa;
  id v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  NSObject *v43;
  os_log_type_t v44;
  const char *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;

  v1 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 296);
  v2 = *(void **)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(void **)(v0 + 264);
  v7 = objc_msgSend(v1, "isSensitive");
  sub_100225AB4(v5, v4);

  v65 = v7;
  if ((v7 & 1) != 0 || (v8 = *(_QWORD *)(v0 + 272), v8 == *(_QWORD *)(v0 + 256)))
  {
LABEL_3:
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease(*(const char **)(v0 + 248));
    sub_100225AB4(v9, v10);
    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(v65);
  }
  v12 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  while (1)
  {
    v14 = *(_QWORD *)(v0 + 248);
    result = (v14 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v14)
           : *(id *)(v14 + 8 * v8 + 32);
    v15 = result;
    *(_QWORD *)(v0 + 264) = result;
    *(_QWORD *)(v0 + 272) = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (!objc_msgSend(result, v12[65]))
    {
      if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
        swift_once(&qword_1007B3FD8, sub_1003ABB04);
      v37 = type metadata accessor for Logger(0);
      sub_100221DF8(v37, (uint64_t)qword_1007BDBE8);
      v38 = v15;
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc(12, -1);
        v42 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v41 = 138739971;
        *(_QWORD *)(v41 + 4) = v38;
        *v42 = v38;
        v43 = v39;
        v44 = v40;
        v45 = "Contact has no imageDataAvailable. Skipping {contact: %{sensitive}@}";
LABEL_27:
        _os_log_impl((void *)&_mh_execute_header, v43, v44, v45, (uint8_t *)v41, 0xCu);
        v48 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v42, 1, v48);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v41, -1, -1);

        goto LABEL_6;
      }
      goto LABEL_5;
    }
    v16 = objc_msgSend(v15, "imageData");
    if (!v16)
    {
      if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
        swift_once(&qword_1007B3FD8, sub_1003ABB04);
      v46 = type metadata accessor for Logger(0);
      sub_100221DF8(v46, (uint64_t)qword_1007BDBE8);
      v38 = v15;
      v39 = Logger.logObject.getter(v38);
      v47 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v39, v47))
      {
        v41 = swift_slowAlloc(12, -1);
        v42 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v41 = 138739971;
        *(_QWORD *)(v41 + 4) = v38;
        *v42 = v38;
        v43 = v39;
        v44 = v47;
        v45 = "Contact has no imageData. Skipping {contact: %{sensitive}@}";
        goto LABEL_27;
      }
LABEL_5:

      goto LABEL_6;
    }
    v17 = v16;
    v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

    *(_QWORD *)(v0 + 280) = v18;
    *(_QWORD *)(v0 + 288) = v20;
    v21 = objc_allocWithZone((Class)UIImage);
    sub_10022E4A8(v18, v20);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v21, "initWithData:", isa);
    *(_QWORD *)(v0 + 296) = v23;
    sub_100225AB4(v18, v20);

    if (v23)
    {
      v24 = objc_msgSend(v23, "CGImage");
      *(_QWORD *)(v0 + 304) = v24;
      if (v24)
      {
        v59 = v24;
        v60 = v0 + 16;
        v61 = *(void **)(v0 + 200);
        *(_QWORD *)(v0 + 56) = v0 + 184;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_1003B275C;
        v62 = swift_continuation_init(v0 + 16, 1, v25);
        *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
        v63 = (_QWORD *)(v0 + 144);
        v63[1] = 0x40000000;
        v63[2] = sub_1002CC354;
        v63[3] = &unk_100725E08;
        v63[4] = v62;
        objc_msgSend(v61, "analyzeCGImage:completionHandler:", v59, v63);
        return (id)swift_continuation_await(v60);
      }
      if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
        swift_once(&qword_1007B3FD8, sub_1003ABB04);
      v26 = type metadata accessor for Logger(0);
      sub_100221DF8(v26, (uint64_t)qword_1007BDBE8);
      v27 = v15;
      v28 = v23;
      v29 = v27;
      v30 = v28;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc(22, -1);
        v34 = (_QWORD *)swift_slowAlloc(16, -1);
        *(_DWORD *)v33 = 138740227;
        *(_QWORD *)(v33 + 4) = v29;
        *v34 = v29;

        *(_WORD *)(v33 + 12) = 2112;
        *(_QWORD *)(v33 + 14) = v30;
        v34[1] = v23;

        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to get cgImage from contact.imageData {contact: %{sensitive}@, uiImage: %@}", (uint8_t *)v33, 0x16u);
        v35 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v34, 2, v35);
        swift_slowDealloc(v34, -1, -1);
        v36 = v33;
        v12 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
        swift_slowDealloc(v36, -1, -1);

        sub_100225AB4(v18, v20);
      }
      else
      {
        sub_100225AB4(v18, v20);

      }
    }
    else
    {
      if (p_opt_class_meths[507] != (__objc2_meth_list *)-1)
        swift_once(&qword_1007B3FD8, sub_1003ABB04);
      v49 = type metadata accessor for Logger(0);
      sub_100221DF8(v49, (uint64_t)qword_1007BDBE8);
      sub_10022E4A8(v18, v20);
      sub_10022E4A8(v18, v20);
      v50 = v15;
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.error.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc(22, -1);
        v54 = (_QWORD *)swift_slowAlloc(8, -1);
        v64 = swift_slowAlloc(32, -1);
        v66 = v64;
        *(_DWORD *)v53 = 138740227;
        *(_QWORD *)(v53 + 4) = v50;
        *v54 = v50;
        *(_WORD *)(v53 + 12) = 2080;
        sub_10022E4A8(v18, v20);
        v55 = Data.description.getter(v18, v20);
        v57 = v56;
        sub_100225AB4(v18, v20);
        *(_QWORD *)(v53 + 14) = sub_100228BD8(v55, (unint64_t)v57, &v66);
        swift_bridgeObjectRelease(v57);
        sub_100225AB4(v18, v20);
        sub_100225AB4(v18, v20);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to create UIImage from contact.imageData {contact: %{sensitive}@, imageData: %s}", (uint8_t *)v53, 0x16u);
        v58 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v54, 1, v58);
        swift_slowDealloc(v54, -1, -1);
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v64, -1, -1);
        swift_slowDealloc(v53, -1, -1);

        sub_100225AB4(v18, v20);
      }
      else
      {
        sub_100225AB4(v18, v20);

        sub_100225AB4(v18, v20);
        sub_100225AB4(v18, v20);

      }
      v12 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
    }
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
LABEL_6:
    v8 = *(_QWORD *)(v0 + 272);
    if (v8 == *(_QWORD *)(v0 + 256))
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B2FAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = *(_QWORD *)(v1 + 224);
  swift_willThrow(a1);
  sub_100225AB4(v3, v4);

  v5 = *(_QWORD *)(v1 + 240);
  if (qword_1007B3FD8 != -1)
    swift_once(&qword_1007B3FD8, sub_1003ABB04);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BDBE8);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v5);
    v12 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v1 + 144) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "UserSafety analyze failed: %@", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1003B3190(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(void **)(v1 + 304);
  v3 = *(_QWORD *)(v1 + 288);
  v4 = *(void **)(v1 + 296);
  v5 = *(_QWORD *)(v1 + 280);
  v6 = *(void **)(v1 + 264);
  v8 = *(_QWORD *)(v1 + 216);
  v7 = *(_QWORD *)(v1 + 224);
  swift_willThrow(a1);
  sub_100225AB4(v8, v7);
  sub_100225AB4(v5, v3);

  v9 = *(_QWORD *)(v1 + 312);
  if (qword_1007B3FD8 != -1)
    swift_once(&qword_1007B3FD8, sub_1003ABB04);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007BDBE8);
  swift_errorRetain(v9);
  v11 = swift_errorRetain(v9);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    swift_errorRetain(v9);
    v16 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v1 + 144) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v14 + 4);
    *v15 = v16;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "UserSafety analyze failed: %@", v14, 0xCu);
    v17 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1003B3394()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B33C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _QWORD *v12;

  v8 = *((_QWORD *)v3 + 2);
  v9 = *((_QWORD *)v3 + 3);
  v10 = *((_QWORD *)v3 + 4);
  v11 = v3[5];
  v12 = (_QWORD *)swift_task_alloc(dword_1007BDDFC);
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_10000D12C;
  return sub_1003ABE10(a1, a2, a3, v8, v9, v10, v11);
}

void sub_1003B345C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t i;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  _QWORD *v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  __n128 v53;
  void (*v54)(_BYTE *, uint64_t, __n128);
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t);
  _BYTE v57[16];
  _BYTE *v58;
  _BYTE *v59;
  _QWORD *v60;
  char *v61;
  __n128 v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v2 = type metadata accessor for NWEndpoint(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v63 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v7 = &v57[-v6];
  v8 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v8);
  v10 = &v57[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v72 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v59 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v58 = &v57[-v14];
  v15 = type metadata accessor for NWBrowser.Result(0);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  v16 = __chkstk_darwin(v15);
  v74 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v69 = &v57[-v18];
  v19 = *(_QWORD *)(a1 + 56);
  v67 = a1 + 56;
  v20 = 1 << *(_BYTE *)(a1 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v68 = (unint64_t)(v20 + 63) >> 6;
  v71 = a1;
  v23 = swift_bridgeObjectRetain((const char *)a1);
  v24 = 0;
  v60 = _swiftEmptyArrayStorage;
  v23.n128_u64[0] = 136315138;
  v62 = v23;
  v61 = (char *)&type metadata for Any + 8;
  v65 = v10;
  v66 = v2;
  v70 = v3;
  v64 = v11;
  if (v22)
    goto LABEL_8;
LABEL_14:
  v34 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
    if (v34 < v68)
    {
      v35 = *(_QWORD *)(v67 + 8 * v34);
      v36 = v24 + 1;
      if (v35)
        goto LABEL_29;
      v36 = v24 + 2;
      if (v24 + 2 >= v68)
        goto LABEL_37;
      v35 = *(_QWORD *)(v67 + 8 * v36);
      if (v35)
        goto LABEL_29;
      v36 = v24 + 3;
      if (v24 + 3 >= v68)
        goto LABEL_37;
      v35 = *(_QWORD *)(v67 + 8 * v36);
      if (v35)
        goto LABEL_29;
      v36 = v24 + 4;
      if (v24 + 4 >= v68)
        goto LABEL_37;
      v35 = *(_QWORD *)(v67 + 8 * v36);
      if (v35)
      {
LABEL_29:
        v22 = (v35 - 1) & v35;
        v73 = v36;
        for (i = __clz(__rbit64(v35)) + (v36 << 6); ; i = v27 | (v24 << 6))
        {
          v39 = v75;
          v38 = v76;
          v40 = v69;
          (*(void (**)(_BYTE *, unint64_t, uint64_t))(v75 + 16))(v69, *(_QWORD *)(v71 + 48) + *(_QWORD *)(v75 + 72) * i, v76);
          v41 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v74, v40, v38);
          NWBrowser.Result.endpoint.getter(v41);
          if (sub_1004FC650())
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v10, v7, v2);
            swift_storeEnumTagMultiPayload(v10, v11, 0);
            v25 = 0;
          }
          else
          {
            if (qword_1007B3FE0 != -1)
              swift_once(&qword_1007B3FE0, sub_1003B4118);
            v42 = type metadata accessor for Logger(0);
            sub_100221DF8(v42, (uint64_t)qword_1007BDE08);
            v43 = v63;
            v44 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v63, v7, v2);
            v45 = v7;
            v46 = Logger.logObject.getter(v44);
            v47 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v46, v47))
            {
              v48 = swift_slowAlloc(12, -1);
              v49 = swift_slowAlloc(32, -1);
              v77 = v49;
              *(_DWORD *)v48 = v62.n128_u32[0];
              v50 = NWEndpoint.debugDescription.getter();
              v52 = (const char *)v51;
              *(_QWORD *)(v48 + 4) = sub_100228BD8(v50, v51, &v77);
              v53 = swift_bridgeObjectRelease(v52);
              v54 = *(void (**)(_BYTE *, uint64_t, __n128))(v70 + 8);
              v54(v43, v66, v53);
              _os_log_impl((void *)&_mh_execute_header, v46, v47, "Dropping Endpoint %s - missing essential metadata for rendering", (uint8_t *)v48, 0xCu);
              v25 = 1;
              swift_arrayDestroy(v49, 1, v61);
              swift_slowDealloc(v49, -1, -1);
              v55 = v48;
              v2 = v66;
              swift_slowDealloc(v55, -1, -1);

              ((void (*)(_BYTE *, uint64_t))v54)(v45, v2);
              v3 = v70;
            }
            else
            {

              v56 = *(void (**)(_BYTE *, uint64_t))(v70 + 8);
              v56(v43, v2);
              v56(v45, v2);
              v3 = v70;
              v25 = 1;
            }
            v7 = v45;
            v11 = v64;
            v10 = v65;
          }
          v26 = v72;
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v10, v25, 1, v11);
          (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v74, v76);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
          {
            sub_10028B518((uint64_t)v10);
            v24 = v73;
            if (!v22)
              goto LABEL_14;
          }
          else
          {
            v29 = v58;
            sub_10022E5BC((uint64_t)v10, (uint64_t)v58);
            sub_10022E5BC((uint64_t)v29, (uint64_t)v59);
            if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
              v60 = (_QWORD *)sub_1002280E8(0, v60[2] + 1, 1, (unint64_t)v60);
            v31 = v60[2];
            v30 = v60[3];
            if (v31 >= v30 >> 1)
              v60 = (_QWORD *)sub_1002280E8(v30 > 1, v31 + 1, 1, (unint64_t)v60);
            v32 = v59;
            v33 = v60;
            v60[2] = v31 + 1;
            sub_10022E5BC((uint64_t)v32, (uint64_t)v33+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(_QWORD *)(v72 + 72) * v31);
            v2 = v66;
            v24 = v73;
            if (!v22)
              goto LABEL_14;
          }
LABEL_8:
          v27 = __clz(__rbit64(v22));
          v22 &= v22 - 1;
          v73 = v24;
        }
      }
      v37 = v24 + 5;
      if (v24 + 5 < v68)
      {
        v35 = *(_QWORD *)(v67 + 8 * v37);
        if (v35)
        {
          v36 = v24 + 5;
          goto LABEL_29;
        }
        while (1)
        {
          v36 = v37 + 1;
          if (__OFADD__(v37, 1))
            goto LABEL_39;
          if (v36 >= v68)
            break;
          v35 = *(_QWORD *)(v67 + 8 * v36);
          ++v37;
          if (v35)
            goto LABEL_29;
        }
      }
    }
LABEL_37:
    swift_release(v71);
    return;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_1003B3A98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for NWBrowser.Descriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v44 - v7);
  v9 = type metadata accessor for NWBrowser.Descriptor.Options.Scope(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NWBrowser.Descriptor.Options(0);
  result = __chkstk_darwin(v13);
  v17 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser])
  {
    v46 = v16;
    v47 = result;
    v50 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18 = sub_100008384(&qword_1007BDE78);
    v48 = v2;
    v49 = v3;
    v19 = swift_allocObject(v18, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 5 * *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
    v45 = v6;
    v20 = v19;
    *(_OWORD *)(v19 + 16) = xmmword_1005D0690;
    v21 = static NWBrowser.Descriptor.Options.Scope.nfc.getter();
    v22 = static NWBrowser.Descriptor.Options.Scope.personal.getter(v21);
    v23 = static NWBrowser.Descriptor.Options.Scope.contacts.getter(v22);
    v24 = static NWBrowser.Descriptor.Options.Scope.family.getter(v23);
    static NWBrowser.Descriptor.Options.Scope.adhoc_paired.getter(v24);
    v51 = v20;
    v25 = sub_100220D78(&qword_1007BDE80, (uint64_t (*)(uint64_t))&type metadata accessor for NWBrowser.Descriptor.Options.Scope, (uint64_t)&protocol conformance descriptor for NWBrowser.Descriptor.Options.Scope);
    v26 = sub_100008384(&qword_1007BDE88);
    v27 = sub_10037B658(&qword_1007BDE90, &qword_1007BDE88);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v26, v27, v9, v25);
    v28 = v50;
    NWBrowser.Descriptor.Options.init(scope:)(v12);
    v29 = (char *)v8 + *(int *)(sub_100008384(&qword_1007C3460) + 48);
    *v8 = 0xD00000000000001ALL;
    v8[1] = 0x8000000100616DF0;
    v31 = v46;
    v30 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v29, v28, v47);
    v33 = v48;
    v32 = v49;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v49 + 104))(v8, enum case for NWBrowser.Descriptor.applicationServiceWithOptions(_:), v48);
    v34 = v45;
    (*(void (**)(char *, _QWORD *, uint64_t))(v32 + 16))(v45, v8, v33);
    type metadata accessor for NWParameters(0);
    v35 = static NWParameters.airDropNetworkBrowserParameters(domain:type:)(0xD000000000000018, 0x8000000100618ED0, 0xD000000000000012, 0x8000000100618EF0);
    v36 = type metadata accessor for NWBrowser(0);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    v37 = NWBrowser.init(for:using:)(v34, v35);
    v38 = *(_QWORD *)&v1[v17];
    *(_QWORD *)&v1[v17] = v37;
    swift_retain(v37);
    swift_release(v38);
    v39 = swift_allocObject(&unk_100725E60, 24, 7);
    *(_QWORD *)(v39 + 16) = v1;
    v40 = v1;
    NWBrowser.browseResultsChangedHandler.setter(sub_1003B49A0, v39);
    v41 = swift_allocObject(&unk_100725E88, 24, 7);
    swift_unknownObjectWeakInit(v41 + 16, v40);
    v42 = swift_allocObject(&unk_100725EB0, 24, 7);
    swift_weakInit(v42 + 16, v37);
    v43 = swift_allocObject(&unk_100725ED8, 32, 7);
    *(_QWORD *)(v43 + 16) = v41;
    *(_QWORD *)(v43 + 24) = v42;
    swift_retain(v41);
    swift_retain(v42);
    NWBrowser.stateUpdateHandler.setter(sub_1003B4A1C, v43);
    swift_release(v41);
    swift_release(v42);
    NWBrowser.start(queue:)(*(_QWORD *)&v40[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browserQueue]);
    swift_release(v37);
    (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v8, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v50, v30);
  }
  return result;
}

void sub_1003B3EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser);
  if (!v3)
    return;
  swift_retain(v3);
  NWBrowser.cancel()();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  v5 = *(_QWORD *)(v4 + 24);
  if (!v5)
    goto LABEL_14;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
    if (v6)
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v5 < 0)
    v6 = *(_QWORD *)(v4 + 24);
  else
    v6 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v6))
  {
LABEL_13:
    swift_bridgeObjectRelease(v5);
LABEL_14:
    v8 = 0xE000000000000000;
    goto LABEL_15;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    swift_bridgeObjectRelease(v5);
    v8 = *(_QWORD *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8);
    swift_bridgeObjectRetain(v8);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    v7 = (char *)*(id *)(v5 + 32);
    swift_bridgeObjectRelease(v5);
    v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
    swift_bridgeObjectRetain(v8);

  }
LABEL_15:
  v5 = (uint64_t)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v6 = *(_QWORD *)(v4 + 24);
  if (!v6)
  {
LABEL_26:
    sub_100045388((uint64_t)CFSTR("ApplicationServiceBrowse"), (uint64_t)CFSTR("Stop"), v5, v6);

    swift_release(v3);
    v12 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = 0;
    swift_release(v12);
    return;
  }
  if (!((unint64_t)v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
    if (v9)
      goto LABEL_18;
LABEL_25:
    swift_bridgeObjectRelease(v6);
    v6 = 0;
    goto LABEL_26;
  }
  if (v6 < 0)
    v11 = *(_QWORD *)(v4 + 24);
  else
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v11))
    goto LABEL_25;
LABEL_18:
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_29:
    v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    swift_bridgeObjectRelease(v6);
    v6 = *(unsigned int *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease(v14);
    goto LABEL_26;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = (char *)*(id *)(v6 + 32);
    swift_bridgeObjectRelease(v6);
    v6 = *(unsigned int *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1003B4118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BDE08);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BDE08);
  if (qword_1007B3E68 != -1)
    swift_once(&qword_1007B3E68, sub_1002E9EA8);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8208);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003B41A8(const char *a1, const char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = swift_allocObject(&unk_100725E88, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a3);
  v11 = (_QWORD *)swift_allocObject(&unk_100725F50, 56, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  v11[5] = a1;
  v11[6] = a2;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v12 = sub_100252EE0((uint64_t)v8, (uint64_t)&unk_1007BDEC0, (uint64_t)v11);
  return swift_release(v12);
}

uint64_t sub_1003B42AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1003B42C8, 0, 0);
}

uint64_t sub_1003B42C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    return swift_task_switch(sub_1003B4378, static AirDropActor.shared, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003B4378()
{
  uint64_t v0;
  char *v1;
  const char *v2;
  const char *v3;

  v1 = *(char **)(v0 + 64);
  sub_1003B345C(*(_QWORD *)(v0 + 56));
  v3 = v2;
  (*(void (**)(void))&v1[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler])();
  swift_bridgeObjectRelease(v3);

  return swift_task_switch(sub_10028A0E4, 0, 0);
}

uint64_t sub_1003B43EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = a3 + 16;
    swift_beginAccess(v9, &v11, 0, 0);
    Strong = swift_weakLoadStrong(v9);
    sub_1003B4C98(a1);

    return swift_release(Strong);
  }
  return result;
}

uint64_t sub_1003B447C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B44E4, static AirDropActor.shared, 0);
}

void sub_1003B44E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  char *v5;
  double v6;
  const char *v7;
  double v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  v2 = *(_QWORD *)(v1 + 24);
  if (!v2)
    goto LABEL_12;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v4 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v1 + 24)).n128_u64[0];
    if (v3)
      goto LABEL_4;
    goto LABEL_11;
  }
  if (v2 < 0)
    v3 = *(_QWORD *)(v1 + 24);
  else
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)(v1 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
LABEL_11:
    swift_bridgeObjectRelease((const char *)v2, v4);
LABEL_12:
    v7 = (const char *)0xE000000000000000;
    goto LABEL_13;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease((const char *)v2).n128_u64[0];
    v7 = *(const char **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8);
    swift_bridgeObjectRetain(v7, v14);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    v5 = (char *)*(id *)(v2 + 32);
    *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)v2).n128_u64[0];
    v7 = *(const char **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
    swift_bridgeObjectRetain(v7, v6);

  }
LABEL_13:
  v2 = (uint64_t)String._bridgeToObjectiveC()();
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
  v3 = *(_QWORD *)(v1 + 24);
  if (!v3)
  {
LABEL_24:
    sub_100045388((uint64_t)CFSTR("ApplicationServiceBrowse"), (uint64_t)CFSTR("Start"), v2, v3);

    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (!((unint64_t)v3 >> 62))
  {
    v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v10 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v1 + 24), v8).n128_u64[0];
    if (v9)
      goto LABEL_16;
LABEL_23:
    swift_bridgeObjectRelease((const char *)v3, v10);
    v3 = 0;
    goto LABEL_24;
  }
  if (v3 < 0)
    v12 = *(_QWORD *)(v1 + 24);
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)(v1 + 24), v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v12))
    goto LABEL_23;
LABEL_16:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_27:
    v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    swift_bridgeObjectRelease((const char *)v3);
    v3 = *(unsigned int *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease(v15);
    goto LABEL_24;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(v3 + 32);
    swift_bridgeObjectRelease((const char *)v3);
    v3 = *(unsigned int *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1003B4710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a1;
  v4[6] = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1003B477C, v5, 0);
}

uint64_t sub_1003B477C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate, v4);
    *(_QWORD *)(v0 + 64) = v6;

    if (v6)
      return swift_task_switch(sub_1003B4824, static AirDropActor.shared, 0);
  }
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B4824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  sub_100398FDC();
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
  if (v3)
  {
    v4 = v3;
    sub_1003B3EA8();

    v3 = *(void **)(v1 + v2);
  }
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v1 + v2) = 0;

  swift_unknownObjectRelease(v5);
  return swift_task_switch(sub_1003B48A4, v6, 0);
}

uint64_t sub_1003B48A4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceBrowser()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser);
}

uint64_t sub_1003B497C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B49A0(const char *a1, const char *a2)
{
  uint64_t v2;

  return sub_1003B41A8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003B49A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B49CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B49F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B4A1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1003B43EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_1003B4A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *ObjectType;
  objc_super v33;
  _QWORD *v34;

  v4 = v3;
  v30 = a2;
  v31 = a3;
  v29 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browserQueue;
  v26 = sub_1002741DC();
  v14 = v4;
  static DispatchQoS.default.getter();
  v34 = _swiftEmptyArrayStorage;
  v15 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v17 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v16, v17, v8, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v28);
  v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x8000000100618F10, v13, v10, v7, 0);
  *(_QWORD *)&v4[v27] = v18;
  v19 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate];
  *((_QWORD *)v19 + 1) = 0;
  swift_unknownObjectWeakInit(v19, 0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser] = 0;
  v20 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_parameters;
  type metadata accessor for NWParameters(0);
  *(_QWORD *)&v14[v20] = static NWParameters.applicationService.getter();
  v21 = v29;
  v22 = v30;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger] = v29;
  v23 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler];
  v24 = v31;
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v24;
  swift_retain(v21);
  swift_retain(v24);

  v33.receiver = v14;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, "init");
}

void sub_1003B4C98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  char *v70;
  uint8_t *v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint8_t *v89;
  uint8_t *v90;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;

  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NWError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v88 - v11;
  v13 = __chkstk_darwin(v10);
  v91 = (char *)&v88 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v88 - v15;
  v17 = type metadata accessor for NWBrowser.State(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    v91 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_1007B3FE0 != -1)
      swift_once(&qword_1007B3FE0, sub_1003B4118);
    v22 = type metadata accessor for Logger(0);
    sub_100221DF8(v22, (uint64_t)qword_1007BDE08);
    v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v24 = v23(v9, v12, v5);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(8, -1);
      v90 = (uint8_t *)v12;
      v29 = (_QWORD *)v28;
      *(_DWORD *)v27 = 138412290;
      v89 = v27 + 4;
      v30 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v31 = swift_allocError(v5, v30, 0, 0);
      v23(v32, v9, v5);
      v33 = _swift_stdlib_bridgeErrorToNSError(v31);
      v93 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v89);
      *v29 = v33;
      v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "AirDrop application service browser failed with error %@", v27, 0xCu);
      v35 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v29, 1, v35);
      v36 = v29;
      v12 = (char *)v90;
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
    }

    v52 = type metadata accessor for TaskPriority(0);
    v53 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v91, 1, 1, v52);
    v54 = swift_allocObject(&unk_100725E88, 24, 7);
    swift_unknownObjectWeakInit(v54 + 16, v92);
    v55 = qword_1007B3D98;
    swift_retain(v54);
    if (v55 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v56 = static AirDropActor.shared;
    v57 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v58 = (_QWORD *)swift_allocObject(&unk_100725F00, 40, 7);
    v58[2] = v56;
    v58[3] = v57;
    v58[4] = v54;
    swift_retain(v56);
    swift_release(v54);
    v59 = sub_100252EE0(v53, (uint64_t)&unk_1007BDEA0, (uint64_t)v58);
    swift_release(v59);
    v34(v12, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v37 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_1007B3FE0 != -1)
      swift_once(&qword_1007B3FE0, sub_1003B4118);
    v38 = type metadata accessor for Logger(0);
    sub_100221DF8(v38, (uint64_t)qword_1007BDE08);
    v39 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v40 = v91;
    v41 = v39(v91, v37, v5);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v92 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v44 = 138412290;
      v90 = v44 + 4;
      v45 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v46 = swift_allocError(v5, v45, 0, 0);
      v39(v47, v40, v5);
      v48 = _swift_stdlib_bridgeErrorToNSError(v46);
      v93 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v90);
      v49 = v92;
      *v92 = v48;
      v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "AirDrop application service browser waiting with error %@", v44, 0xCu);
      v51 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v49, 1, v51);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
    }
    v50(v37, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_1007B3FE0 != -1)
      swift_once(&qword_1007B3FE0, sub_1003B4118);
    v60 = type metadata accessor for Logger(0);
    v61 = sub_100221DF8(v60, (uint64_t)qword_1007BDE08);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v62, v63))
      goto LABEL_36;
    v64 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v64 = 0;
    v65 = "AirDrop application service browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v62, v63, v65, v64, 2u);
    swift_slowDealloc(v64, -1, -1);
LABEL_36:

    return;
  }
  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_1007B3FE0 != -1)
      swift_once(&qword_1007B3FE0, sub_1003B4118);
    v66 = type metadata accessor for Logger(0);
    v67 = sub_100221DF8(v66, (uint64_t)qword_1007BDE08);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = v4;
      v71 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "AirDrop application service browser ready", v71, 2u);
      v72 = v71;
      v4 = v70;
      swift_slowDealloc(v72, -1, -1);
    }

    v73 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v4, 1, 1, v73);
    v74 = qword_1007B3D98;
    v75 = v92;
    v76 = (uint64_t)v4;
    if (v74 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v77 = static AirDropActor.shared;
    v78 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v79 = (_QWORD *)swift_allocObject(&unk_100725F28, 40, 7);
    v79[2] = v77;
    v79[3] = v78;
    v79[4] = v75;
    swift_retain(v77);
    v80 = sub_100252EC0(v76, (uint64_t)&unk_1007BDEB0, (uint64_t)v79);
    swift_release(v80);
  }
  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_1007B3FE0 != -1)
        swift_once(&qword_1007B3FE0, sub_1003B4118);
      v81 = type metadata accessor for Logger(0);
      v82 = sub_100221DF8(v81, (uint64_t)qword_1007BDE08);
      v62 = Logger.logObject.getter(v82);
      v63 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v62, v63))
        goto LABEL_36;
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      v65 = "AirDrop application service browser cancelled";
      goto LABEL_35;
    }
    if (qword_1007B3FE0 != -1)
      swift_once(&qword_1007B3FE0, sub_1003B4118);
    v83 = type metadata accessor for Logger(0);
    v84 = sub_100221DF8(v83, (uint64_t)qword_1007BDE08);
    v85 = Logger.logObject.getter(v84);
    v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "AirDrop application service browser in unknown state", v87, 2u);
      swift_slowDealloc(v87, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_1003B569C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003B56C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BDE9C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1003B4710(a1, v4, v5, v6);
}

uint64_t sub_1003B5734()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003B5760(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BDEAC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_1003B447C(a1, v4, v5, v6);
}

uint64_t sub_1003B57CC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003B5808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BDEBC);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_1003B42C8, 0, 0);
}

uint64_t sub_1003B5870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BDEC8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BDEC8);
  if (qword_1007B3E58 != -1)
    swift_once(&qword_1007B3E58, sub_1002E9E60);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003B5900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v43 = type metadata accessor for NWEndpoint(0);
  v4 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  __chkstk_darwin(v10);
  v45 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v12 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B33BC();
  v16 = v15;
  v18 = v17;
  v44 = a1;
  sub_10022E534(a1, (uint64_t)v14);
  if (!v18)
  {
    sub_1002B0AF0();
    v16 = v19;
    v18 = v20;
  }
  sub_1002443C8((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)(v2 + 16) = v16;
  *(_QWORD *)(v2 + 24) = v18;
  v22 = v46;
  v21 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v9, 1, 1, v47);
  v23 = v45;
  sub_1004FB77C((uint64_t)v9, v16, v18, v45);
  sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID, v23, v21);
  *v6 = nw_endpoint_create_application_service("com.apple.AirDrop", v23);
  v24 = v43;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for NWEndpoint.opaque(_:), v43);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v4 + 32))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint, v6, v24);
  v25 = sub_100008384(&qword_1007B5498);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = swift_allocObject(v25, v27 + *(_QWORD *)(v12 + 72), v26 | 7);
  *(_OWORD *)(v28 + 16) = xmmword_1005CD2A0;
  v29 = v28 + v27;
  v30 = v44;
  sub_10022E534(v44, v29);
  v31 = sub_1002862E4(v28);
  swift_setDeallocating(v28);
  swift_arrayDestroy(v29, 1, v42);
  swift_deallocClassInstance(v28, 32, 7);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints) = v31;
  sub_1003B5D6C();
  if (qword_1007B3FE8 != -1)
    swift_once(&qword_1007B3FE8, sub_1003B5870);
  v32 = type metadata accessor for Logger(0);
  sub_100221DF8(v32, (uint64_t)qword_1007BDEC8);
  v33 = swift_retain_n(v2, 2);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v49 = v37;
    *(_DWORD *)v36 = 136315138;
    v39 = *(_QWORD *)(v2 + 16);
    v38 = *(const char **)(v2 + 24);
    swift_bridgeObjectRetain(v38);
    v48 = sub_100228BD8(v39, (unint64_t)v38, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v36 + 4);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Creating Device %s", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {
    swift_release_n(v2, 2);
  }

  sub_1002443C8(v30, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  return v2;
}

uint64_t sub_1003B5D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD, _QWORD);
  const char *v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t (*v69)(uint64_t);
  char *v70;
  unint64_t v71;
  unint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  const char *v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  const char *v91;
  uint64_t v92;
  const char *v93;
  const char *v94;
  const char *v95;
  Swift::String v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  const char *v103;
  const char *v104;
  Swift::String v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  Swift::String v109;
  Swift::String v110;
  Swift::String v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  const char *v116;
  const char *v117;
  double v118;
  uint64_t v119;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  double v124;
  double v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int64_t v139;
  uint64_t v140;
  __int128 v141;
  int v142;
  char *v143;
  uint64_t v144;
  int v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  int v150;
  int v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  int v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  int v167;
  int v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  const char *v175;
  const char *v176;
  char *v177;
  char *v178;
  const char *v179;
  const char *v180;
  _QWORD *v181;
  int64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  const char *v196;
  uint64_t v197;
  uint64_t v198;
  const char *v199;
  char v200[4];

  v1 = v0;
  v135 = type metadata accessor for SFAirDrop.TXTRecord(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v133 = (char *)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v131 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v132 = (char *)&v131 - v7;
  v164 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v164);
  v9 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for SFString(0);
  v144 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v143 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v11 = __chkstk_darwin(v185);
  v13 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v131 - v14;
  v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v17 = __chkstk_darwin(v16);
  v171 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v172 = (char *)&v131 - v20;
  v21 = __chkstk_darwin(v19);
  v146 = (char *)&v131 - v22;
  v23 = __chkstk_darwin(v21);
  v154 = (char *)&v131 - v24;
  v25 = __chkstk_darwin(v23);
  v148 = (char *)&v131 - v26;
  v27 = __chkstk_darwin(v25);
  v153 = (char *)&v131 - v28;
  __chkstk_darwin(v27);
  v170 = (char *)&v131 - v29;
  v194 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v188 = *(_QWORD *)(v194 - 8);
  v30 = __chkstk_darwin(v194);
  v192 = (char *)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v131 - v33;
  v35 = __chkstk_darwin(v32);
  v157 = (char *)&v131 - v36;
  v37 = __chkstk_darwin(v35);
  v174 = (char *)&v131 - v38;
  v39 = __chkstk_darwin(v37);
  v158 = (char *)&v131 - v40;
  v41 = __chkstk_darwin(v39);
  v173 = (char *)&v131 - v42;
  v43 = __chkstk_darwin(v41);
  v193 = (uint64_t)&v131 - v44;
  v45 = __chkstk_darwin(v43);
  v47 = (uint64_t (*)(uint64_t))((char *)&v131 - v46);
  __chkstk_darwin(v45);
  v187 = (uint64_t)&v131 - v48;
  v49 = sub_100008384(&qword_1007BDFD0);
  v50 = __chkstk_darwin(v49);
  v137 = (uint64_t)&v131 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin(v50);
  v163 = (char *)&v131 - v53;
  v54 = __chkstk_darwin(v52);
  v152 = (char *)&v131 - v55;
  v56 = __chkstk_darwin(v54);
  v165 = (char *)&v131 - v57;
  __chkstk_darwin(v56);
  v59 = (char *)&v131 - v58;
  v138 = sub_1003B7B1C();
  v139 = v60;
  v140 = NWEndpoint.nw.getter(v138);
  if (!v140)
  {
    __break(1u);
    JUMPOUT(0x1003B7AA0);
  }
  v183 = v4;
  v184 = v3;
  v61 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v4 + 56);
  v186 = v59;
  v160 = v61;
  v61(v59, 1, 1, v3);
  v136 = v0;
  v62 = (const char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  *(_QWORD *)&v63 = swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints, v200, 0, 0).n128_u64[0];
  v64 = *(_QWORD *)v62;
  v65 = *(_QWORD *)(*(_QWORD *)v62 + 56);
  v181 = (_QWORD *)(*(_QWORD *)v62 + 56);
  v66 = 1 << *(_BYTE *)(v64 + 32);
  v67 = -1;
  if (v66 < 64)
    v67 = ~(-1 << v66);
  v68 = v67 & v65;
  v178 = v13;
  v149 = v13 + 8;
  v162 = v9 + 8;
  v161 = v15 + 8;
  v182 = (unint64_t)(v66 + 63) >> 6;
  v142 = enum case for SFString.maybeContact(_:);
  v150 = enum case for SFAirDrop.DeviceRelationship.contact(_:);
  v151 = enum case for SFAirDrop.DeviceRelationship.stranger(_:);
  v156 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  v189 = v64;
  swift_bridgeObjectRetain((const char *)v64, v63);
  v145 = 0;
  v166 = 0;
  v176 = 0;
  v168 = 0;
  v167 = 0;
  v169 = 0;
  v179 = 0;
  v155 = 0;
  v175 = 0;
  v159 = 0;
  v180 = 0;
  v69 = type metadata accessor for SDAirDropDiscoveredEndpoint;
  v141 = xmmword_1005CD2A0;
  v190 = v9;
  v191 = v15;
  v70 = v170;
  v177 = v34;
  if (v68)
  {
    v71 = __clz(__rbit64(v68));
    goto LABEL_19;
  }
  if (v182 > 1)
  {
    v72 = v181[1];
    v73 = 1;
    if (v72)
      goto LABEL_18;
    v73 = 2;
    if (v182 <= 2)
      goto LABEL_20;
    v72 = v181[2];
    if (v72)
      goto LABEL_18;
    v73 = 3;
    if (v182 <= 3)
      goto LABEL_20;
    v72 = v181[3];
    if (v72)
    {
LABEL_18:
      v71 = __clz(__rbit64(v72)) + (v73 << 6);
LABEL_19:
      v75 = v187;
      sub_10022E534(*(_QWORD *)(v189 + 48) + *(_QWORD *)(v188 + 72) * v71, v187);
      sub_100221DB4(v75, (uint64_t)v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v76 = v193;
      sub_10022E534((uint64_t)v47, v193);
      v77 = (char *)&loc_1003B6570 + dword_1003B7AAC[swift_getEnumCaseMultiPayload(v76, v194)];
      __asm { BR              X9 }
    }
    v74 = 4;
    if (v182 > 4)
    {
      v72 = v181[4];
      if (v72)
      {
        v73 = 4;
        goto LABEL_18;
      }
      while (1)
      {
        v73 = v74 + 1;
        if (__OFADD__(v74, 1))
          break;
        if (v73 >= v182)
          goto LABEL_20;
        v72 = v181[v73];
        ++v74;
        if (v72)
          goto LABEL_18;
      }
      __break(1u);
      goto LABEL_51;
    }
  }
LABEL_20:
  swift_release(v189);
  v70 = (char *)v140;
  v78 = v180;
  if (v180)
  {
    v79 = String.utf8CString.getter(v159, v180);
    swift_bridgeObjectRelease(v78);
    nw_endpoint_set_device_name(v70, v79 + 32);
    swift_release(v79);
  }
  v73 = v139;
  v69 = (uint64_t (*)(uint64_t))v138;
  v80 = v179;
  v81 = v175;
  if (v175)
  {
    v82 = String.utf8CString.getter(v155, v175);
    swift_bridgeObjectRelease(v81);
    nw_endpoint_set_device_model(v70, v82 + 32);
    swift_release(v82);
  }
  if (v80)
  {
    v83 = v169;
    v84 = String.utf8CString.getter(v169, v80);
    nw_endpoint_set_device_id(v70, v84 + 32);
    swift_release(v84);
    swift_bridgeObjectRelease(v176);
    v85 = sub_1004312F0(8, v83, (unint64_t)v80);
    v87 = v86;
    v89 = v88;
    v91 = v90;
    swift_bridgeObjectRelease(v80);
    v92 = static String._fromSubstring(_:)(v85, v87, v89, v91);
    v94 = v93;
    swift_bridgeObjectRelease(v91);
LABEL_28:
    v195 = v92;
    v196 = v94;
    v105._countAndFlagsBits = 58;
    v105._object = (void *)0xE100000000000000;
    String.append(_:)(v105);
    v106 = v196;
    v198 = v195;
    goto LABEL_29;
  }
  v95 = v176;
  if (v176)
  {
    v96 = String.lowercased()();
    swift_bridgeObjectRelease(v95);
    v97 = sub_1004312F0(8, v96._countAndFlagsBits, (unint64_t)v96._object);
    v99 = v98;
    v101 = v100;
    v103 = v102;
    swift_bridgeObjectRelease((const char *)v96._object);
    v92 = static String._fromSubstring(_:)(v97, v99, v101, v103);
    v94 = v104;
    swift_bridgeObjectRelease(v103);
    goto LABEL_28;
  }
  v198 = 980183406;
  v106 = (const char *)0xE400000000000000;
LABEL_29:
  v199 = v106;
  v1 = (uint64_t)v186;
  v108 = v183;
  v107 = v184;
  if ((v167 & 1) != 0)
  {
    v109._countAndFlagsBits = 97;
    v109._object = (void *)0xE100000000000000;
    String.append(_:)(v109);
  }
  if ((v168 & 1) != 0)
  {
    v110._countAndFlagsBits = 98;
    v110._object = (void *)0xE100000000000000;
    String.append(_:)(v110);
  }
  if ((v145 & 1) != 0)
  {
    v111._countAndFlagsBits = 99;
    v111._object = (void *)0xE100000000000000;
    String.append(_:)(v111);
  }
  v112 = v137;
  sub_1003B8A98(v1, v137);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v112, 1, v107) == 1)
  {
    sub_10000D0F0(v112, &qword_1007BDFD0);
  }
  else
  {
    v113 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v132, v112, v107);
    v114 = v131;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v131, v113, v107);
    v115 = v133;
    SFAirDrop.TXTRecord.init(deviceRelationship:)(v114);
    SFAirDrop.TXTRecord.addToEndpoint(_:)(v70);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v115, v135);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v113, v107);
  }
  v47 = (uint64_t (*)(uint64_t))sub_1003B7B1C();
  v62 = v116;
  if (v69 == v47)
  {
    v117 = (const char *)v73;
    if ((const char *)v73 == v116)
      goto LABEL_42;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v69, v73, v47, v116, 0) & 1) != 0)
  {
    v117 = v62;
LABEL_42:
    swift_bridgeObjectRelease(v117);
    swift_unknownObjectRelease(v70);
    *(_QWORD *)&v118 = swift_bridgeObjectRelease((const char *)v73).n128_u64[0];
    swift_bridgeObjectRelease(v199, v118);
    goto LABEL_43;
  }
  if (qword_1007B3FE8 != -1)
LABEL_51:
    swift_once(&qword_1007B3FE8, sub_1003B5870);
  v121 = type metadata accessor for Logger(0);
  sub_100221DF8(v121, (uint64_t)qword_1007BDEC8);
  v123 = v198;
  v122 = v199;
  *(_QWORD *)&v124 = swift_bridgeObjectRetain(v199).n128_u64[0];
  *(_QWORD *)&v125 = swift_bridgeObjectRetain((const char *)v73, v124).n128_u64[0];
  swift_bridgeObjectRetain(v62, v125);
  v127 = Logger.logObject.getter(v126);
  v128 = static os_log_type_t.default.getter(v127);
  if (os_log_type_enabled(v127, v128))
  {
    v129 = swift_slowAlloc(32, -1);
    v194 = swift_slowAlloc(96, -1);
    v195 = v194;
    *(_DWORD *)v129 = 136315651;
    swift_bridgeObjectRetain(v122);
    v197 = sub_100228BD8(v123, (unint64_t)v122, &v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198, v129 + 4);
    swift_bridgeObjectRelease_n(v122, 3);
    *(_WORD *)(v129 + 12) = 2081;
    swift_bridgeObjectRetain((const char *)v73);
    v197 = sub_100228BD8((uint64_t)v69, v73, &v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198, v129 + 14);
    swift_bridgeObjectRelease_n(v73, 3);
    *(_WORD *)(v129 + 22) = 2081;
    swift_bridgeObjectRetain(v62);
    v197 = sub_100228BD8((uint64_t)v47, (unint64_t)v62, &v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198, v129 + 24);
    swift_bridgeObjectRelease_n(v62, 3);
    _os_log_impl((void *)&_mh_execute_header, v127, v128, "DiscoveredDevice Updated %s [%{private}s] -> [%{private}s]", (uint8_t *)v129, 0x20u);
    v130 = v194;
    swift_arrayDestroy(v194, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v130, -1, -1);
    swift_slowDealloc(v129, -1, -1);

    swift_unknownObjectRelease(v140);
    v119 = (uint64_t)v186;
    return sub_10000D0F0(v119, &qword_1007BDFD0);
  }
  swift_bridgeObjectRelease_n(v122, 2);
  swift_bridgeObjectRelease_n(v73, 2);
  swift_bridgeObjectRelease_n(v62, 2);

  swift_unknownObjectRelease(v70);
LABEL_43:
  v119 = v1;
  return sub_10000D0F0(v119, &qword_1007BDFD0);
}

uint64_t sub_1003B7B1C()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t device_name;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t device_model;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v1._countAndFlagsBits = 0x28656369766544;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x22206D4E20;
  v5._object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  result = NWEndpoint.nw.getter(v6);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v8 = result;
  device_name = nw_endpoint_get_device_name();
  swift_unknownObjectRelease(v8);
  if (device_name)
  {
    v10 = String.init(cString:)(device_name);
    device_name = v11;
  }
  else
  {
    v10 = 0;
  }
  v20 = v10;
  v21 = device_name;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(device_name);
  v12._countAndFlagsBits = 0x20644D202C22;
  v12._object = (void *)0xE600000000000000;
  String.append(_:)(v12);
  result = NWEndpoint.nw.getter(v13);
  if (!result)
    goto LABEL_11;
  v14 = result;
  device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease(v14);
  if (device_model)
  {
    v16 = String.init(cString:)(device_model);
    v18 = v17;
  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v20 = v16;
  v21 = v18;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v18);
  v19._countAndFlagsBits = 41;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  return v22;
}

uint64_t sub_1003B7CC0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint;
  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1003B7D50()
{
  return type metadata accessor for SDAirDropDiscoveredDevice(0);
}

uint64_t type metadata accessor for SDAirDropDiscoveredDevice(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BDF10;
  if (!qword_1007BDF10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredDevice);
  return result;
}

uint64_t sub_1003B7D94(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_1005D5DD0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for NWEndpoint(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1003B7E34()
{
  return sub_1003B7B1C();
}

uint64_t sub_1003B7E54@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint, (uint64_t (*)(_QWORD))&type metadata accessor for NWEndpoint, a1);
}

uint64_t sub_1003B7E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char *v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  char v33[24];

  v30 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v30);
  v29[1] = (char *)v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v29[0] = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v29 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v29 - v12;
  v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints, v33, 0, 0);
  v15 = *v14;
  v16 = *v14 + 56;
  v17 = 1 << *(_BYTE *)(*v14 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(*v14 + 56);
  v32 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain_n(v15, 2);
  v20 = 0;
  v21 = 0;
  v31 = v16;
  while (1)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_25;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v24 >= v32)
      goto LABEL_27;
    v25 = *(_QWORD *)(v16 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_27;
      v25 = *(_QWORD *)(v16 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v32)
          goto LABEL_27;
        v25 = *(_QWORD *)(v16 + 8 * v20);
        if (!v25)
        {
          v20 = v24 + 3;
          if (v24 + 3 >= v32)
            goto LABEL_27;
          v25 = *(_QWORD *)(v16 + 8 * v20);
          if (!v25)
          {
            v20 = v24 + 4;
            if (v24 + 4 >= v32)
              goto LABEL_27;
            v25 = *(_QWORD *)(v16 + 8 * v20);
            if (!v25)
              break;
          }
        }
      }
    }
LABEL_24:
    v19 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_25:
    sub_10022E534(*(_QWORD *)(v15 + 48) + *(_QWORD *)(v5 + 72) * v23, (uint64_t)v13);
    sub_100221DB4((uint64_t)v13, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v21 & 1) == 0)
    {
      sub_10022E534((uint64_t)v11, (uint64_t)v8);
      v27 = (char *)&loc_1003B8148 + dword_1003B824C[swift_getEnumCaseMultiPayload(v8, v4)];
      __asm { BR              X9 }
    }
    v21 = 1;
    sub_1002443C8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v26 = v24 + 5;
  if (v26 < v32)
  {
    v25 = *(_QWORD *)(v16 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        v20 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v20 >= v32)
          goto LABEL_27;
        v25 = *(_QWORD *)(v16 + 8 * v20);
        ++v26;
        if (v25)
          goto LABEL_24;
      }
LABEL_29:
      __break(1u);
      JUMPOUT(0x1003B824CLL);
    }
    v20 = v26;
    goto LABEL_24;
  }
LABEL_27:
  swift_release(v15);
  swift_bridgeObjectRelease((const char *)v15);
  return v21 & 1;
}

uint64_t sub_1003B825C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[12] = a1;
  v2[13] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7760) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v3);
  v2[15] = swift_task_alloc(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[17] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v6);
  v2[19] = swift_task_alloc(v6);
  v2[20] = swift_task_alloc(v6);
  v2[21] = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B8348, static AirDropActor.shared, 0);
}

uint64_t sub_1003B8348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char **v5;
  const char *v6;
  uint64_t v7;
  const char **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  const char **v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = (const char **)(*(_QWORD *)(v0 + 104)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess(v5, v0 + 16, 0, 0);
  v6 = *v5;
  v7 = swift_task_alloc(32);
  *(_QWORD *)(v7 + 16) = v1;
  swift_bridgeObjectRetain(v6);
  sub_10034610C((uint64_t (*)(char *))sub_1003B8B28, (uint64_t)v6, v4);
  swift_bridgeObjectRelease(v6);
  swift_task_dealloc(v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 120), &qword_1007B7760);
    v8 = v5;
  }
  else
  {
    v9 = v0 + 64;
    sub_100221DB4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 168), type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_1007B3FE8 != -1)
      swift_once(&qword_1007B3FE8, sub_1003B5870);
    v11 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 168);
    v12 = type metadata accessor for Logger(0);
    sub_100221DF8(v12, (uint64_t)qword_1007BDEC8);
    v13 = sub_10022E534(v10, v11);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 160);
    if (v16)
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v34 = v19;
      *(_DWORD *)v18 = 136315138;
      sub_1002B0AF0();
      v20 = v5;
      v22 = (const char *)v21;
      *(_QWORD *)(v0 + 88) = sub_100228BD8(v23, v21, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v18 + 4);
      v24 = v22;
      v5 = v20;
      v9 = v0 + 64;
      swift_bridgeObjectRelease(v24);
      sub_1002443C8(v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Removing duplicate/stale endpoint %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      sub_1002443C8(*(_QWORD *)(v0 + 160), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 112);
    swift_beginAccess(v5, v9, 33, 0);
    v8 = v5;
    sub_100472B6C(v25, v26);
    swift_endAccess(v9);
    sub_10000D0F0(v26, &qword_1007B7760);
    sub_1002443C8(v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v28 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 144);
  v29 = *(_QWORD *)(v0 + 152);
  v31 = *(_QWORD *)(v0 + 112);
  v32 = *(_QWORD *)(v0 + 120);
  sub_10022E534(*(_QWORD *)(v0 + 96), v30);
  swift_beginAccess(v8, v0 + 40, 33, 0);
  sub_10045DA0C(v29, v30);
  swift_endAccess(v0 + 40);
  sub_1002443C8(v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003B5D6C();
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1003B86B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unsigned int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v13 - v8;
  sub_10022E534(a1, (uint64_t)&v13 - v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v4);
  v11 = EnumCaseMultiPayload;
  sub_1002443C8((uint64_t)v9, (uint64_t (*)(_QWORD))off_100725FB8[EnumCaseMultiPayload]);
  sub_10022E534(a2, (uint64_t)v7);
  LODWORD(a2) = swift_getEnumCaseMultiPayload(v7, v4);
  sub_1002443C8((uint64_t)v7, (uint64_t (*)(_QWORD))off_100725FD8[(int)a2]);
  return v11 == a2;
}

uint64_t sub_1003B87B0()
{
  return sub_1003B7E68() & 1;
}

uint64_t sub_1003B87D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, a1);
}

uint64_t sub_1003B87E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B8850, static AirDropActor.shared, 0);
}

uint64_t sub_1003B8850()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)(**(_QWORD **)(v0 + 40)
                + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_1003B88B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BDFDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  return sub_1003B825C(a1);
}

uint64_t sub_1003B8900(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v3 = sub_100008384(&qword_1007B7760);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v2[6] = v4;
  v2[7] = v5;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B8990, static AirDropActor.shared, 0);
}

uint64_t sub_1003B8990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  swift_beginAccess(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints, v0 + 16, 33, 0);
  sub_100472B6C(v2, v1);
  swift_endAccess(v0 + 16);
  sub_10000D0F0(v1, &qword_1007B7760);
  sub_1003B5D6C();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1003B8A2C(uint64_t a1)
{
  unint64_t result;

  result = sub_1003B8A50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003B8A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BDFC8;
  if (!qword_1007BDFC8)
  {
    v1 = type metadata accessor for SDAirDropDiscoveredDevice(255);
    result = swift_getWitnessTable(&unk_1005D5E3C, v1);
    atomic_store(result, (unint64_t *)&qword_1007BDFC8);
  }
  return result;
}

uint64_t sub_1003B8A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BDFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B8AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BDFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1003B8B28(uint64_t a1)
{
  uint64_t v1;

  return sub_1003B86B8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003B8B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BDFE0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BDFE0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003B8BD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_100008384(&qword_1007BA800);
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[10] = v7;
  v2[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B8CB0, static AirDropActor.shared, 0);
}

uint64_t sub_1003B8CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v3, v2, v5, v8);
  v11 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v12 = *(_QWORD *)(v1 + 72);
  if (v7)
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 72));
LABEL_12:
    v34 = 0;
    goto LABEL_13;
  }
  v13 = SFAirDropReceive.AskRequest.files.getter(v9);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = swift_bridgeObjectRelease((const char *)v13);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
  if (v14 != 1)
    goto LABEL_12;
  v17 = SFAirDropReceive.AskRequest.files.getter(v16);
  if (*(_QWORD *)(v17 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v1 + 56) + 16))(*(_QWORD *)(v1 + 40), v17+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 + 56) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 + 56) + 80)), *(_QWORD *)(v1 + 48));
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  v19 = *(_QWORD *)(v1 + 48);
  v20 = *(_QWORD *)(v1 + 56);
  v21 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v18, 1, v19);
  v22 = swift_bridgeObjectRelease((const char *)v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v20 + 48))(v21, 1, v19, v22) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v1 + 40), &qword_1007BA800);
  }
  else
  {
    v24 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 64);
    v25 = *(_QWORD *)(v1 + 48);
    v26 = *(_QWORD *)(v1 + 32);
    v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v24 + 32))(v23, *(_QWORD *)(v1 + 40), v25);
    v28 = SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v27);
    v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    v31 = *(const char **)(v26 + 24);
    *(_QWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 24) = v30;
    swift_bridgeObjectRelease(v31);
  }
  v32 = objc_allocWithZone((Class)LSApplicationRecord);
  v33 = sub_100528FF4(0xD000000000000012, 0x8000000100611230, 1);
  if (!v33)
    goto LABEL_12;

  v34 = 1;
LABEL_13:
  v35 = *(_QWORD *)(v1 + 64);
  v36 = *(_QWORD *)(v1 + 40);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v34);
}

uint64_t sub_1003B9030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[14] = a1;
  v6 = type metadata accessor for URL(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v8);
  v5[20] = swift_task_alloc(v8);
  v5[21] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[22] = swift_task_alloc(v9);
  v5[23] = swift_task_alloc(v9);
  v5[24] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003B914C, static AirDropActor.shared, 0);
}

id sub_1003B914C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  __n128 v53;
  void (*v54)(uint64_t, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSURL *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t inited;
  uint64_t v64;
  const char *v65;
  id v66;
  const char *v67;
  Class isa;
  id result;
  NSURL *v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  const char *v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  void (*type)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, __n128);
  uint64_t v118;

  v1 = 0xD000000000000014;
  v2 = v0 + 80;
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = sub_100008384((uint64_t *)&unk_1007B86C0);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1005CD2A0;
  v11 = *(_QWORD *)(v7 + 16);
  v10 = *(const char **)(v7 + 24);
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_100299AB0();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  v12 = String.init(format:_:)(0xD00000000000004BLL, 0x80000001006190D0, v9);
  v14 = v13;
  URL.init(string:)(v12, v13);
  swift_bridgeObjectRelease(v14);
  sub_100330F1C(v4, v3);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v15(v3, 1, v6) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_1007B5200);
    if (qword_1007B3FF0 != -1)
      swift_once(&qword_1007B3FF0, sub_1003B8B44);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007BDFE0);
    v18 = swift_bridgeObjectRetain_n(v16, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (!os_log_type_enabled(v19, v20))
    {
      v56 = *(_QWORD *)(v0 + 192);
      v57 = *(_QWORD *)(v0 + 128);

      swift_bridgeObjectRelease_n(v57, 2);
LABEL_22:
      v103 = v56;
      goto LABEL_23;
    }
    v21 = *(_QWORD *)(v0 + 128);
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v118 = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 144);
    if (v24)
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v27 + 16))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128)+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), *(_QWORD *)(v0 + 136));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v25, 0, 1, v26);
      v28 = v15(v25, 1, v26);
      if ((_DWORD)v28 != 1)
      {
        v29 = *(_QWORD *)(v0 + 176);
        v30 = *(_QWORD *)(v0 + 136);
        v31 = *(_QWORD *)(v0 + 144);
        v1 = URL.description.getter(v28);
        v33 = v32;
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
LABEL_21:
        v56 = *(_QWORD *)(v0 + 192);
        v104 = *(_QWORD *)(v0 + 128);
        *(_QWORD *)(v0 + 72) = sub_100228BD8(v1, (unint64_t)v33, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v22 + 4);
        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease_n(v104, 2);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to build app store search URL with item: %s", v22, 0xCu);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);

        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v27 + 56))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 136));
    }
    sub_10000D0F0(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1007B5200);
    v33 = (const char *)0x8000000100619120;
    goto LABEL_21;
  }
  v114 = v0 + 104;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 136));
  if (qword_1007B3FF0 != -1)
    swift_once(&qword_1007B3FF0, sub_1003B8B44);
  v35 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 136);
  v36 = *(_QWORD *)(v0 + 144);
  v38 = type metadata accessor for Logger(0);
  sub_100221DF8(v38, (uint64_t)qword_1007BDFE0);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
  v40 = v39(v35, v34, v37);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter(v41);
  v43 = os_log_type_enabled(v41, v42);
  v44 = *(_QWORD *)(v0 + 160);
  v46 = *(_QWORD *)(v0 + 136);
  v45 = *(_QWORD *)(v0 + 144);
  type = (void (*)(uint64_t, uint64_t, uint64_t))v39;
  if (v43)
  {
    v47 = (uint8_t *)swift_slowAlloc(12, -1);
    v48 = swift_slowAlloc(32, -1);
    v118 = v48;
    *(_DWORD *)v47 = 136315138;
    v49 = sub_1003B9EDC();
    v50 = dispatch thunk of CustomStringConvertible.description.getter(v46, v49);
    v52 = (const char *)v51;
    *(_QWORD *)(v0 + 104) = sub_100228BD8(v50, v51, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, v0 + 112, v47 + 4);
    v53 = swift_bridgeObjectRelease(v52);
    v54 = *(void (**)(uint64_t, uint64_t, __n128))(v45 + 8);
    v54(v44, v46, v53);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Launching app store with URL: %s", v47, 0xCu);
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    v55 = v48;
    v2 = v0 + 80;
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }
  else
  {
    v54 = *(void (**)(uint64_t, uint64_t, __n128))(v45 + 8);
    ((void (*)(uint64_t, uint64_t))v54)(v44, v46);
  }

  v58 = (void *)objc_opt_self(SDAirDropHandler);
  URL._bridgeToObjectiveC()(v59);
  v61 = v60;
  objc_msgSend(v58, "logReceiverBundleID:forURL:", 0, v60);

  v62 = sub_100008384(&qword_1007BA810);
  inited = swift_initStackObject(v62, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(inited + 40) = v64;
  *(_BYTE *)(inited + 48) = 1;
  v65 = (const char *)sub_10021F520(inited);
  v66 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
  v67 = (const char *)sub_100323418((uint64_t)v65);
  swift_bridgeObjectRelease(v65);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v66, "setFrontBoardOptions:", isa, swift_bridgeObjectRelease(v67).n128_f64[0]);

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v71 = result;
    URL._bridgeToObjectiveC()(v70);
    v73 = v72;
    *(_QWORD *)(v0 + 80) = 0;
    v74 = objc_msgSend(v71, "openURL:configuration:error:", v72, v66, v2);

    v75 = *(void **)(v0 + 80);
    if (v74)
    {
      v76 = *(_QWORD *)(v0 + 192);
      v77 = *(_QWORD *)(v0 + 168);
      v78 = *(_QWORD *)(v0 + 136);
      v79 = v75;

      ((void (*)(uint64_t, uint64_t))v54)(v77, v78);
      sub_10000D0F0(v76, (uint64_t *)&unk_1007B5200);
      v80 = 1;
LABEL_24:
      v106 = *(_QWORD *)(v0 + 184);
      v105 = *(_QWORD *)(v0 + 192);
      v108 = *(_QWORD *)(v0 + 168);
      v107 = *(_QWORD *)(v0 + 176);
      v110 = *(_QWORD *)(v0 + 152);
      v109 = *(_QWORD *)(v0 + 160);
      **(_BYTE **)(v0 + 112) = v80;
      swift_task_dealloc(v105);
      swift_task_dealloc(v106);
      swift_task_dealloc(v107);
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    v117 = v54;
    v81 = *(_QWORD *)(v0 + 168);
    v82 = *(_QWORD *)(v0 + 152);
    v83 = *(_QWORD *)(v0 + 136);
    v84 = v75;
    v85 = _convertNSErrorToError(_:)(v75);

    swift_willThrow(v86);
    type(v82, v81, v83);
    swift_errorRetain(v85);
    v87 = swift_errorRetain(v85);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.error.getter(v88);
    v90 = os_log_type_enabled(v88, v89);
    v91 = *(_QWORD *)(v0 + 192);
    v92 = *(_QWORD *)(v0 + 168);
    v93 = *(_QWORD *)(v0 + 152);
    v94 = *(_QWORD *)(v0 + 136);
    if (v90)
    {
      v116 = *(_QWORD *)(v0 + 168);
      v95 = swift_slowAlloc(22, -1);
      v111 = (uint64_t *)swift_slowAlloc(8, -1);
      v113 = swift_slowAlloc(32, -1);
      v118 = v113;
      *(_DWORD *)v95 = 136315394;
      v115 = v91;
      v96 = sub_1003B9EDC();
      v97 = dispatch thunk of CustomStringConvertible.description.getter(v94, v96);
      v99 = (const char *)v98;
      *(_QWORD *)(v0 + 88) = sub_100228BD8(v97, v98, &v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v95 + 4);
      v100 = swift_bridgeObjectRelease(v99);
      v117(v93, v94, v100);
      *(_WORD *)(v95 + 12) = 2112;
      swift_errorRetain(v85);
      v101 = _swift_stdlib_bridgeErrorToNSError(v85);
      *(_QWORD *)(v0 + 96) = v101;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v114, v95 + 14);
      *v111 = v101;
      swift_errorRelease(v85);
      swift_errorRelease(v85);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Failed to launch app store with URL %s: %@", (uint8_t *)v95, 0x16u);
      v102 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v111, 1, v102);
      swift_slowDealloc(v111, -1, -1);
      swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v95, -1, -1);

      swift_errorRelease(v85);
      ((void (*)(uint64_t, uint64_t))v117)(v116, v94);
      v103 = v115;
    }
    else
    {

      swift_errorRelease(v85);
      swift_errorRelease(v85);
      ((void (*)(uint64_t, uint64_t))v117)(v93, v94);
      swift_errorRelease(v85);
      ((void (*)(uint64_t, uint64_t))v117)(v92, v94);
      v103 = v91;
    }
LABEL_23:
    sub_10000D0F0(v103, (uint64_t *)&unk_1007B5200);
    v80 = 0;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B9B08()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedFileType()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedFileType);
}

uint64_t sub_1003B9B4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0xE000000000000000;
  *a1 = result;
  return result;
}

uint64_t sub_1003B9B84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BE024);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003B8BD4(a1);
}

uint64_t sub_1003B9BD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *v1;
  v6 = 0;
  v4 = swift_allocObject(&unk_1007260C8, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x707041206E65704FLL, 0xEE0065726F745320, &v6, &unk_1007BE108, v4, 0xD000000000000071, 0x8000000100619050, 60, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003B9CA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1007BE110 + dword_1007BE110);
  v3 = (_QWORD *)swift_task_alloc(unk_1007BE114);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1003B9D1C;
  return v5(a1);
}

uint64_t sub_1003B9D1C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc(v4);
  if (v1)
    v6 = 0;
  else
    v6 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

void sub_1003B9D78(uint64_t a1, char a2)
{
  NSString v2;
  uint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    v2 = String._bridgeToObjectiveC()();
    v4 = (id)SFLocalizedStringForKey(v2, v3);

    if (v4)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return;
    }
    __break(1u);
  }
  v5 = String._bridgeToObjectiveC()();
  v4 = (id)SFLocalizedStringForKey(v5, v6);

  if (v4)
    goto LABEL_5;
  __break(1u);
}

uint64_t sub_1003B9E34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B9E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BE104);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D12C;
  return sub_1003B9030(a1, a2, a3, v9, v8);
}

unint64_t sub_1003B9EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B5518;
  if (!qword_1007B5518)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1007B5518);
  }
  return result;
}

uint64_t sub_1003B9F24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[3] = a1;
  v2 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100008384(&qword_1007B6BE8);
  v1[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[6] = v4;
  v1[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v1[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[9] = v6;
  v1[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BE118);
  v1[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[12] = v8;
  v1[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v1[14] = static AirDropActor.shared;
  return swift_task_switch(sub_1003BA034, v9, 0);
}

uint64_t sub_1003BA034()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[13];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[8];
  v5 = v0[3];
  v0[15] = type metadata accessor for SDAirDropContentHandlerUtilities();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for SFAirDropReceive.ItemDestination.default(_:), v4);
  sub_100324988(v5, v2, 1, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[16] = v6;
  *v6 = v0;
  v6[1] = sub_1003BA10C;
  return SFProgressTask.finalValue.getter(v0 + 2, v0[11]);
}

uint64_t sub_1003BA10C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  v5 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 104);
  v6 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1003BA350;
  else
    v7 = sub_1003BA198;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 112), 0);
}

uint64_t sub_1003BA198()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = v0[4];
  v3 = (const char *)v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[9] + 56))(v2, 1, 1, v0[8]);
  sub_100323EA0((uint64_t)v3, 0, 0, v1);
  swift_bridgeObjectRelease(v3);
  sub_10000D0F0(v2, (uint64_t *)&unk_1007C5DE0);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_1003BA25C;
  return SFProgressTask.finalValue.getter(v0 + 20, v0[5]);
}

uint64_t sub_1003BA25C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  v5 = *(_QWORD *)(*v1 + 48);
  v4 = *(_QWORD *)(*v1 + 56);
  v6 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1003BA3B4;
  else
    v7 = sub_1003BA2E8;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 112), 0);
}

uint64_t sub_1003BA2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1003BA350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1003BA3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1003BA418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t aBlock[5];
  uint64_t v41;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v7 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - v8;
  v10 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 16, aBlock, 33, 0);
  sub_100471B70(a1, (uint64_t)v12);
  swift_endAccess(aBlock);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3);
  sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
  if (v13 != 1)
  {
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v14 = type metadata accessor for Logger(0);
    sub_100221DF8(v14, (uint64_t)qword_1007BE120);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v16 = v15(v9, a1, v3);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(12, -1);
      v37 = a1;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc(32, -1);
      v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      v22 = v21;
      aBlock[0] = v21;
      v36 = v15;
      *(_DWORD *)v20 = 136315138;
      v35 = v20 + 4;
      v23 = sub_1003BB2C0();
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v3, v23);
      v26 = v25;
      v39 = sub_100228BD8(v24, v25, aBlock);
      v15 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, aBlock, v35);
      swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "SDAirDropAWDLSingleBandManager: requesting stop Single band mode for Nearby Sharing Interaction ID:%s", v20, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      v27 = v22;
      v7 = v38;
      swift_slowDealloc(v27, -1, -1);
      v28 = v20;
      a1 = v37;
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }

    v29 = objc_msgSend((id)objc_opt_self(WiFiP2PSPITransactionRequestor), "shared");
    v15(v7, a1, v3);
    v30 = *(unsigned __int8 *)(v4 + 80);
    v31 = (v30 + 16) & ~v30;
    v32 = swift_allocObject(&unk_100726110, v31 + v5, v30 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v32 + v31, v7, v3);
    aBlock[4] = (uint64_t)sub_1003BB26C;
    v41 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100366D0C;
    aBlock[3] = (uint64_t)&unk_100726128;
    v33 = _Block_copy(aBlock);
    swift_release(v41);
    objc_msgSend(v29, "endTransaction:completionHandler:", 18, v33);
    _Block_release(v33);

  }
}

uint64_t sub_1003BA7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE120);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE120);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003BA840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1007261D8, v18 + 16, v16 | 7);
  *(_QWORD *)(v19 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v11, v8);
  v20 = (_QWORD *)(v19 + v18);
  *v20 = a3;
  v20[1] = a4;
  v21 = swift_allocObject(&unk_100726200, 32, 7);
  *(_QWORD *)(v21 + 16) = &unk_1007BE1E0;
  *(_QWORD *)(v21 + 24) = v19;
  swift_retain(a4);
  v22 = static Task<>.noThrow(priority:operation:)(v14, &unk_1007B65D0, v21, (char *)&type metadata for () + 8);
  swift_release(v22);
  swift_release(v21);
  return sub_10000D0F0((uint64_t)v14, &qword_1007B68A0);
}

uint64_t sub_1003BA9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  v5 = type metadata accessor for UUID(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v7);
  v4[11] = swift_task_alloc(v7);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003BAA90, static AirDropActor.shared, 0);
}

uint64_t sub_1003BAA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  __n128 v37;
  void (*v38)(void);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  if (*(_QWORD *)(v0 + 32))
  {
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v1 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = type metadata accessor for Logger(0);
    sub_100221DF8(v5, (uint64_t)qword_1007BE120);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    if (v9)
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v44 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_1003BB2C0();
      v16 = dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
      v18 = (const char *)v17;
      *(_QWORD *)(v0 + 16) = sub_100228BD8(v16, v17, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v13 + 4);
      v19 = swift_bridgeObjectRelease(v18);
      (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v19);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropAWDLSingleBandManager: failed requesting enforce Single band mode for Nearby Sharing Interaction ID:%s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
    }

    v38 = *(void (**)(void))(v0 + 48);
    v39 = sub_1003BBD18();
    v40 = swift_allocError(&type metadata for SDAirDropAWDLSingleBandManagerError, v39, 0, 0);
    v38();
    swift_errorRelease(v40);
  }
  else
  {
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v21 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 64);
    v23 = *(_QWORD *)(v0 + 40);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007BE120);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v30 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 80);
    v31 = *(_QWORD *)(v0 + 64);
    if (v28)
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v44 = v43;
      *(_DWORD *)v32 = 136315138;
      v33 = sub_1003BB2C0();
      v34 = dispatch thunk of CustomStringConvertible.description.getter(v31, v33);
      v36 = (const char *)v35;
      *(_QWORD *)(v0 + 24) = sub_100228BD8(v34, v35, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v32 + 4);
      v37 = swift_bridgeObjectRelease(v36);
      (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v29, v31, v37);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "SDAirDropAWDLSingleBandManager: requested enforce Single band mode for Nearby Sharing Interaction ID:%s", v32, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v30 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    }

    (*(void (**)(_QWORD))(v0 + 48))(0);
  }
  v41 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003BAE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v31 - v9;
  if (a1)
  {
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v11 = type metadata accessor for Logger(0);
    sub_100221DF8(v11, (uint64_t)qword_1007BE120);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v32 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_1003BB2C0();
      v18 = dispatch thunk of CustomStringConvertible.description.getter(v4, v17);
      v20 = v19;
      v31 = sub_100228BD8(v18, v19, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v15 + 4);
      swift_bridgeObjectRelease(v20);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "SDAirDropAWDLSingleBandManager: failed requesting stop Single band mode for Nearby Sharing Interaction ID:%s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }

  }
  else
  {
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v21 = type metadata accessor for Logger(0);
    sub_100221DF8(v21, (uint64_t)qword_1007BE120);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v32 = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = sub_1003BB2C0();
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v4, v27);
      v30 = v29;
      v31 = sub_100228BD8(v28, v29, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v25 + 4);
      swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "SDAirDropAWDLSingleBandManager: requested stop Single band mode for Nearby Sharing Interaction ID:%s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }

  }
}

uint64_t type metadata accessor for SDAirDropAWDLSingleBandManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary30SDAirDropAWDLSingleBandManager);
}

uint64_t sub_1003BB20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003BB26C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_1003BAE58(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1003BB2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003BB2B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1003BB2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B63F0;
  if (!qword_1007B63F0)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1007B63F0);
  }
  return result;
}

void sub_1003BB308(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  char *v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t (**v82)(uint64_t);
  uint64_t (*v83)(uint64_t);
  void *v84;
  uint64_t v85;
  uint8_t *v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(void);
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t aBlock[5];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v92 = type metadata accessor for UUID(0);
  v94 = *(_QWORD *)(v92 - 8);
  v12 = *(_QWORD *)(v94 + 64);
  v13 = __chkstk_darwin(v92);
  v89 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v86 - v15;
  v17 = __chkstk_darwin(v14);
  v90 = (uint64_t)&v86 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v86 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v86 - v22;
  v24 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_100726160, 40, 7);
  *((_QWORD *)v24 + 2) = a4;
  *((_QWORD *)v24 + 3) = a5;
  v91 = a5;
  v25 = a6;
  v93 = v24;
  *((_QWORD *)v24 + 4) = a6;
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for SDNearFieldTap(0) + 64)) != 1)
  {
    v43 = qword_1007B3FF8;
    v44 = a4;
    swift_retain(a6);
    if (v43 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v45 = type metadata accessor for Logger(0);
    sub_100221DF8(v45, (uint64_t)qword_1007BE120);
    v46 = v94;
    v47 = v92;
    v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 16))(v23, a2, v92);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      aBlock[0] = v52;
      v90 = v25;
      *(_DWORD *)v51 = 136315138;
      v53 = sub_1003BB2C0();
      v54 = dispatch thunk of CustomStringConvertible.description.getter(v47, v53);
      v56 = v55;
      v98 = sub_100228BD8(v54, v55, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v51 + 4);
      swift_bridgeObjectRelease(v56);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "SDAirDropAWDLSingleBandManager: Single band not required for Nearby Sharing Interaction ID:%s", v51, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v51, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
    }

    goto LABEL_19;
  }
  v26 = a3 + 16;
  swift_beginAccess(a3 + 16, &v98, 0, 0);
  v27 = *(_QWORD *)(a3 + 16);
  v28 = a4;
  swift_retain(a6);
  swift_bridgeObjectRetain(v27);
  v29 = sub_1004551A4(a2, v27);
  swift_bridgeObjectRelease(v27);
  v30 = a2;
  if ((v29 & 1) != 0)
  {
    v31 = v92;
    if (qword_1007B3FF8 != -1)
      swift_once(&qword_1007B3FF8, sub_1003BA7B0);
    v32 = type metadata accessor for Logger(0);
    sub_100221DF8(v32, (uint64_t)qword_1007BE120);
    v33 = v94;
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 16))(v21, v30, v31);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      aBlock[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v90 = v25;
      v39 = sub_1003BB2C0();
      v40 = dispatch thunk of CustomStringConvertible.description.getter(v31, v39);
      v42 = v41;
      v95 = sub_100228BD8(v40, v41, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, aBlock, v37 + 4);
      swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "SDAirDropAWDLSingleBandManager: Nearby Sharing Interaction ID:%s already handled. ignoring it", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
    }

LABEL_19:
    v91();
    swift_release(v93);
    return;
  }
  v57 = v94;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  v59 = v92;
  v58(v16, a2, v92);
  swift_beginAccess(v26, aBlock, 33, 0);
  v60 = v90;
  sub_10045DC08(v90, v16);
  swift_endAccess(aBlock);
  v91 = *(void (**)(void))(v57 + 8);
  ((void (*)(uint64_t, uint64_t))v91)(v60, v59);
  if (qword_1007B3FF8 != -1)
    swift_once(&qword_1007B3FF8, sub_1003BA7B0);
  v61 = type metadata accessor for Logger(0);
  sub_100221DF8(v61, (uint64_t)qword_1007BE120);
  v62 = v89;
  v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v89, v30, v59);
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc(12, -1);
    v87 = v58;
    v67 = v62;
    v68 = (uint8_t *)v66;
    v69 = swift_slowAlloc(32, -1);
    v88 = v30;
    v70 = v69;
    aBlock[0] = v69;
    *(_DWORD *)v68 = 136315138;
    v86 = v68 + 4;
    v71 = sub_1003BB2C0();
    v72 = dispatch thunk of CustomStringConvertible.description.getter(v59, v71);
    v74 = v73;
    v95 = sub_100228BD8(v72, v73, aBlock);
    v57 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, aBlock, v86);
    swift_bridgeObjectRelease(v74);
    v75 = v67;
    v58 = v87;
    ((void (*)(char *, uint64_t))v91)(v75, v59);
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "SDAirDropAWDLSingleBandManager: requesting enforce Single band mode for Nearby Sharing Interaction ID:%s", v68, 0xCu);
    swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
    v76 = v70;
    v30 = v88;
    swift_slowDealloc(v76, -1, -1);
    swift_slowDealloc(v68, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v91)(v62, v59);
  }

  v77 = objc_msgSend((id)objc_opt_self(WiFiP2PSPITransactionRequestor), "shared");
  v58((char *)v60, v30, v59);
  v78 = *(unsigned __int8 *)(v57 + 80);
  v79 = (v78 + 16) & ~v78;
  v80 = (v12 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  v81 = swift_allocObject(&unk_100726188, v80 + 16, v78 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v81 + v79, v60, v59);
  v82 = (uint64_t (**)(uint64_t))(v81 + v80);
  v83 = v93;
  *v82 = sub_1003BBB10;
  v82[1] = v83;
  aBlock[4] = (uint64_t)sub_1003BBB94;
  v97 = v81;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100366D0C;
  aBlock[3] = (uint64_t)&unk_1007261A0;
  v84 = _Block_copy(aBlock);
  v85 = v97;
  swift_retain(v83);
  swift_release(v85);
  objc_msgSend(v77, "beginTransaction:completionHandler:", 18, v84);
  _Block_release(v84);
  swift_release(v83);

}

uint64_t sub_1003BBAE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003BBB10(uint64_t a1)
{
  uint64_t v1;

  return sub_10025DFE0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1003BBB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1003BBB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1003BA840(a1, v1 + v4, *v5, v5[1]);
}

uint64_t sub_1003BBBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1003BBC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v0 + v3;
  v6 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = *v6;
  v8 = v6[1];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BE1DC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000D12C;
  return sub_1003BA9EC(v4, v5, v7, v8);
}

uint64_t sub_1003BBCF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1003BBD18()
{
  unint64_t result;

  result = qword_1007BE1F0;
  if (!qword_1007BE1F0)
  {
    result = swift_getWitnessTable(&unk_1005D5FBC, &type metadata for SDAirDropAWDLSingleBandManagerError);
    atomic_store(result, (unint64_t *)&qword_1007BE1F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDAirDropAWDLSingleBandManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003BBD9C + 4 * byte_1005D5EF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003BBDBC + 4 * byte_1005D5EF5[v4]))();
}

_BYTE *sub_1003BBD9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003BBDBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003BBDC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003BBDCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003BBDD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003BBDDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAWDLSingleBandManagerError()
{
  return &type metadata for SDAirDropAWDLSingleBandManagerError;
}

unint64_t sub_1003BBDFC()
{
  unint64_t result;

  result = qword_1007BE1F8;
  if (!qword_1007BE1F8)
  {
    result = swift_getWitnessTable(&unk_1005D5F94, &type metadata for SDAirDropAWDLSingleBandManagerError);
    atomic_store(result, (unint64_t *)&qword_1007BE1F8);
  }
  return result;
}

uint64_t sub_1003BBE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE200);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE200);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1003BBED8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0) + 40);
  v2 = *(void **)(v0 + v1);
  if (v2)
  {
    v3 = *(id *)(v0 + v1);
LABEL_5:
    v5 = v2;
    return v3;
  }
  result = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationRequest), "init");
  if (result)
  {
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003BBF44()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100008384(&qword_1007B5B28);
  v1 = swift_allocObject(v0, 432, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1005D0670;
  if (qword_1007B4008 != -1)
    swift_once(&qword_1007B4008, LongHash.storage.getter);
  *(_QWORD *)(v1 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(_QWORD *)(v1 + 64) = &off_1007BAF40;
  *(_QWORD *)(v1 + 96) = &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
  *(_QWORD *)(v1 + 104) = &off_1007BAF20;
  *(_QWORD *)(v1 + 136) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(_QWORD *)(v1 + 144) = &off_1007BAEE0;
  *(_QWORD *)(v1 + 176) = &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
  *(_QWORD *)(v1 + 184) = &off_1007BAEC0;
  *(_QWORD *)(v1 + 216) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(_QWORD *)(v1 + 224) = &off_1007BAE00;
  *(_QWORD *)(v1 + 256) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(_QWORD *)(v1 + 264) = &off_1007BAEA0;
  *(_QWORD *)(v1 + 296) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
  *(_QWORD *)(v1 + 304) = &off_1007BADE0;
  *(_QWORD *)(v1 + 336) = &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
  *(_QWORD *)(v1 + 344) = &off_1007BADC0;
  *(_QWORD *)(v1 + 376) = &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
  *(_QWORD *)(v1 + 384) = &off_1007BADA0;
  *(_QWORD *)(v1 + 416) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(_QWORD *)(v1 + 424) = &off_1007BAE20;
  return v1;
}

char *sub_1003BC078(char *a1, uint64_t a2, int *a3)
{
  int v4;
  const char *v5;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  const char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  const char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  int *v90;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2 + 8;
    v9 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 2) = v9;
    v10 = v9;
    v11 = **(void (***)(char *, uint64_t, uint64_t, __n128))(v9 - 8);
    v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = (char *)(a2 + v13);
    v16 = type metadata accessor for Date(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v90 = a3;
    if (v18(v15, 1, v16))
    {
      v19 = sub_100008384(&qword_1007C4330);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
    v21 = v20[5];
    v22 = &v14[v21];
    v23 = &v15[v21];
    if (v18(&v15[v21], 1, v16))
    {
      v24 = sub_100008384(&qword_1007C4330);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    v25 = v20[6];
    v26 = &v14[v25];
    v27 = &v15[v25];
    if (v18(&v15[v25], 1, v16))
    {
      v28 = sub_100008384(&qword_1007C4330);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    }
    v29 = v20[7];
    v30 = &v14[v29];
    v31 = &v15[v29];
    if (v18(&v15[v29], 1, v16))
    {
      v32 = sub_100008384(&qword_1007C4330);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
    }
    v33 = v20[8];
    v34 = &v14[v33];
    v35 = &v15[v33];
    if (v18(&v15[v33], 1, v16))
    {
      v36 = sub_100008384(&qword_1007C4330);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
    }
    v37 = v20[9];
    v38 = &v14[v37];
    v39 = &v15[v37];
    if (v18(&v15[v37], 1, v16))
    {
      v40 = sub_100008384(&qword_1007C4330);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v39, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v38, 0, 1, v16);
    }
    v41 = v20[10];
    v42 = &v14[v41];
    v43 = &v15[v41];
    if (v18(&v15[v41], 1, v16))
    {
      v44 = sub_100008384(&qword_1007C4330);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v42, v43, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v42, 0, 1, v16);
    }
    v45 = v20[11];
    v46 = &v14[v45];
    v47 = &v15[v45];
    if (v18(&v15[v45], 1, v16))
    {
      v48 = sub_100008384(&qword_1007C4330);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v46, v47, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
    }
    v49 = v20[12];
    v50 = &v14[v49];
    v51 = &v15[v49];
    if (v18(&v15[v49], 1, v16))
    {
      v52 = sub_100008384(&qword_1007C4330);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v51, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v50, 0, 1, v16);
    }
    v14[v20[13]] = v15[v20[13]];
    v53 = v20[14];
    v54 = &v14[v53];
    v55 = &v15[v53];
    if (v18(&v15[v53], 1, v16))
    {
      v56 = sub_100008384(&qword_1007C4330);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v55, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v54, 0, 1, v16);
    }
    v57 = v20[15];
    v58 = &v14[v57];
    v59 = &v15[v57];
    if (v18(&v15[v57], 1, v16))
    {
      v60 = sub_100008384(&qword_1007C4330);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v58, v59, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v58, 0, 1, v16);
    }
    v61 = v20[16];
    v62 = &v14[v61];
    v63 = &v15[v61];
    if (v18(&v15[v61], 1, v16))
    {
      v64 = sub_100008384(&qword_1007C4330);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v62, v63, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v62, 0, 1, v16);
    }
    v65 = v20[17];
    v66 = &v14[v65];
    v67 = &v15[v65];
    if (v18(&v15[v65], 1, v16))
    {
      v68 = sub_100008384(&qword_1007C4330);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v66, v67, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v66, 0, 1, v16);
    }
    v69 = v20[18];
    v70 = &v14[v69];
    v71 = &v15[v69];
    *(_DWORD *)v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v14[v20[19]] = v15[v20[19]];
    v72 = v20[20];
    v73 = &v14[v72];
    v74 = &v15[v72];
    v75 = (const char *)*((_QWORD *)v74 + 1);
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    v76 = v20[21];
    v77 = &v14[v76];
    v78 = &v15[v76];
    v79 = (const char *)*((_QWORD *)v78 + 1);
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *((_QWORD *)v77 + 1) = v79;
    v80 = v90[8];
    *(_DWORD *)&a1[v90[7]] = *(_DWORD *)(a2 + v90[7]);
    v81 = (uint64_t *)&a1[v80];
    v82 = *(_QWORD *)(a2 + v80);
    v83 = *(_QWORD *)(a2 + v80 + 8);
    *(_QWORD *)&v84 = swift_bridgeObjectRetain(v75).n128_u64[0];
    swift_bridgeObjectRetain(v79, v84);
    sub_10022E4A8(v82, v83);
    *v81 = v82;
    v81[1] = v83;
    v85 = v90[9];
    v86 = v90[10];
    v87 = *(void **)(a2 + v85);
    *(_QWORD *)&a1[v85] = v87;
    a1[v86] = *(_BYTE *)(a2 + v86);
    v88 = v87;
  }
  return a1;
}

void sub_1003BC7A4(const char **a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  int *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double v22;

  v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10022E75C(v4);
  v5 = (char *)a1 + a2[6];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v10 = &v5[v9[5]];
  if (!v8(v10, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v11 = &v5[v9[6]];
  if (!v8(v11, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v12 = &v5[v9[7]];
  if (!v8(v12, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v13 = &v5[v9[8]];
  if (!v8(v13, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v14 = &v5[v9[9]];
  if (!v8(v14, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v15 = &v5[v9[10]];
  if (!v8(v15, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  v16 = &v5[v9[11]];
  if (!v8(v16, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  v17 = &v5[v9[12]];
  if (!v8(v17, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  v18 = &v5[v9[14]];
  if (!v8(v18, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  v19 = &v5[v9[15]];
  if (!v8(v19, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  v20 = &v5[v9[16]];
  if (!v8(v20, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  v21 = &v5[v9[17]];
  if (!v8(v21, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v5[v9[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v5[v9[21] + 8], v22);
  sub_100225AB4(*(uint64_t *)((char *)a1 + a2[8]), *(unint64_t *)((char *)a1 + a2[8] + 8));

}

uint64_t sub_1003BCA84(uint64_t a1, uint64_t a2, int *a3)
{
  const char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  const char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  const char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  int *v89;

  v6 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = a2 + 8;
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  v89 = a3;
  v12 = a3[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v20 = v19[5];
  v21 = &v13[v20];
  v22 = &v14[v20];
  if (v17(&v14[v20], 1, v15))
  {
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  }
  v24 = v19[6];
  v25 = &v13[v24];
  v26 = &v14[v24];
  if (v17(&v14[v24], 1, v15))
  {
    v27 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  v28 = v19[7];
  v29 = &v13[v28];
  v30 = &v14[v28];
  if (v17(&v14[v28], 1, v15))
  {
    v31 = sub_100008384(&qword_1007C4330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
  }
  v32 = v19[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  if (v17(&v14[v32], 1, v15))
  {
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  v36 = v19[9];
  v37 = &v13[v36];
  v38 = &v14[v36];
  if (v17(&v14[v36], 1, v15))
  {
    v39 = sub_100008384(&qword_1007C4330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
  }
  v40 = v19[10];
  v41 = &v13[v40];
  v42 = &v14[v40];
  if (v17(&v14[v40], 1, v15))
  {
    v43 = sub_100008384(&qword_1007C4330);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v15);
  }
  v44 = v19[11];
  v45 = &v13[v44];
  v46 = &v14[v44];
  if (v17(&v14[v44], 1, v15))
  {
    v47 = sub_100008384(&qword_1007C4330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
  }
  v48 = v19[12];
  v49 = &v13[v48];
  v50 = &v14[v48];
  if (v17(&v14[v48], 1, v15))
  {
    v51 = sub_100008384(&qword_1007C4330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v49, 0, 1, v15);
  }
  v13[v19[13]] = v14[v19[13]];
  v52 = v19[14];
  v53 = &v13[v52];
  v54 = &v14[v52];
  if (v17(&v14[v52], 1, v15))
  {
    v55 = sub_100008384(&qword_1007C4330);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
  }
  v56 = v19[15];
  v57 = &v13[v56];
  v58 = &v14[v56];
  if (v17(&v14[v56], 1, v15))
  {
    v59 = sub_100008384(&qword_1007C4330);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
  }
  v60 = v19[16];
  v61 = &v13[v60];
  v62 = &v14[v60];
  if (v17(&v14[v60], 1, v15))
  {
    v63 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v61, 0, 1, v15);
  }
  v64 = v19[17];
  v65 = &v13[v64];
  v66 = &v14[v64];
  if (v17(&v14[v64], 1, v15))
  {
    v67 = sub_100008384(&qword_1007C4330);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v65, 0, 1, v15);
  }
  v68 = v19[18];
  v69 = &v13[v68];
  v70 = &v14[v68];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  v71 = v19[20];
  v72 = &v13[v71];
  v73 = &v14[v71];
  v74 = (const char *)*((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *((_QWORD *)v72 + 1) = v74;
  v75 = v19[21];
  v76 = &v13[v75];
  v77 = &v14[v75];
  v78 = (const char *)*((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  v79 = v89[8];
  *(_DWORD *)(a1 + v89[7]) = *(_DWORD *)(a2 + v89[7]);
  v80 = (uint64_t *)(a1 + v79);
  v81 = *(_QWORD *)(a2 + v79);
  v82 = *(_QWORD *)(a2 + v79 + 8);
  *(_QWORD *)&v83 = swift_bridgeObjectRetain(v74).n128_u64[0];
  swift_bridgeObjectRetain(v78, v83);
  sub_10022E4A8(v81, v82);
  *v80 = v81;
  v80[1] = v82;
  v84 = v89[9];
  v85 = v89[10];
  v86 = *(void **)(a2 + v84);
  *(_QWORD *)(a1 + v84) = v86;
  *(_BYTE *)(a1 + v85) = *(_BYTE *)(a2 + v85);
  v87 = v86;
  return a1;
}

uint64_t sub_1003BD18C(uint64_t a1, const char **a2, uint64_t a3)
{
  const char *v6;
  _QWORD *v7;
  const char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  const char *v99;
  const char *v100;
  double v101;
  double v102;
  uint64_t v103;
  char *v104;
  char *v105;
  const char *v106;
  const char *v107;
  double v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  id v119;
  uint64_t v121;
  int *v122;
  const char **v123;
  uint64_t v124;

  v7 = a2 + 1;
  v6 = *a2;
  v8 = *(const char **)a1;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)&v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10023D490((_QWORD *)(a1 + 8), v7);
  v121 = a3;
  v123 = a2;
  v10 = *(int *)(a3 + 24);
  v11 = (char *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v20 = v19[5];
  v21 = &v11[v20];
  v22 = &v12[v20];
  v23 = v15(&v11[v20], 1, v13);
  v24 = v15(v22, 1, v13);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
LABEL_12:
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v21, v22, v13);
LABEL_13:
  v26 = v19[6];
  v27 = &v11[v26];
  v28 = &v12[v26];
  v29 = v15(&v11[v26], 1, v13);
  v30 = v15(v28, 1, v13);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
LABEL_18:
    v31 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v27, v28, v13);
LABEL_19:
  v32 = v19[7];
  v33 = &v11[v32];
  v34 = &v12[v32];
  v35 = v15(&v11[v32], 1, v13);
  v36 = v15(v34, 1, v13);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v34, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v33, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
LABEL_24:
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v33, v34, v13);
LABEL_25:
  v38 = v19[8];
  v39 = &v11[v38];
  v40 = &v12[v38];
  v41 = v15(&v11[v38], 1, v13);
  v42 = v15(v40, 1, v13);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v39, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
LABEL_30:
    v43 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v39, v40, v13);
LABEL_31:
  v44 = v19[9];
  v45 = &v11[v44];
  v46 = &v12[v44];
  v47 = v15(&v11[v44], 1, v13);
  v48 = v15(v46, 1, v13);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v45, v46, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v45, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v13);
LABEL_36:
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v45, v46, v13);
LABEL_37:
  v50 = v19[10];
  v51 = &v11[v50];
  v52 = &v12[v50];
  v53 = v15(&v11[v50], 1, v13);
  v54 = v15(v52, 1, v13);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v51, 0, 1, v13);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
LABEL_42:
    v55 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v51, v52, v13);
LABEL_43:
  v56 = v19[11];
  v57 = &v11[v56];
  v58 = &v12[v56];
  v59 = v15(&v11[v56], 1, v13);
  v60 = v15(v58, 1, v13);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v58, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v57, 0, 1, v13);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v57, v13);
LABEL_48:
    v61 = sub_100008384(&qword_1007C4330);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v57, v58, v13);
LABEL_49:
  v62 = v19[12];
  v63 = &v11[v62];
  v64 = &v12[v62];
  v65 = v15(&v11[v62], 1, v13);
  v66 = v15(v64, 1, v13);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v63, 0, 1, v13);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v63, v13);
LABEL_54:
    v67 = sub_100008384(&qword_1007C4330);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v63, v64, v13);
LABEL_55:
  v11[v19[13]] = v12[v19[13]];
  v68 = v19[14];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = v15(&v11[v68], 1, v13);
  v72 = v15(v70, 1, v13);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v69, v70, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v69, 0, 1, v13);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v69, v13);
LABEL_60:
    v73 = sub_100008384(&qword_1007C4330);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v69, v70, v13);
LABEL_61:
  v74 = v19[15];
  v75 = &v11[v74];
  v76 = &v12[v74];
  v77 = v15(&v11[v74], 1, v13);
  v78 = v15(v76, 1, v13);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v75, v76, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v75, 0, 1, v13);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v75, v13);
LABEL_66:
    v79 = sub_100008384(&qword_1007C4330);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v75, v76, v13);
LABEL_67:
  v80 = v19[16];
  v81 = &v11[v80];
  v82 = &v12[v80];
  v83 = v15(&v11[v80], 1, v13);
  v84 = v15(v82, 1, v13);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v81, v82, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v81, 0, 1, v13);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v84)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v81, v13);
LABEL_72:
    v85 = sub_100008384(&qword_1007C4330);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v81, v82, v13);
LABEL_73:
  v86 = v19[17];
  v87 = &v11[v86];
  v88 = &v12[v86];
  v89 = v15(&v11[v86], 1, v13);
  v90 = v15(v88, 1, v13);
  if (!v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v87, v88, v13);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v87, v13);
    goto LABEL_78;
  }
  if (v90)
  {
LABEL_78:
    v91 = sub_100008384(&qword_1007C4330);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v87, v88, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v87, 0, 1, v13);
LABEL_79:
  v92 = v19[18];
  v93 = &v11[v92];
  v94 = &v12[v92];
  v95 = *(_DWORD *)v94;
  v93[4] = v94[4];
  *(_DWORD *)v93 = v95;
  v11[v19[19]] = v12[v19[19]];
  v96 = v19[20];
  v97 = &v11[v96];
  v98 = &v12[v96];
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v99 = (const char *)*((_QWORD *)v98 + 1);
  v100 = (const char *)*((_QWORD *)v97 + 1);
  *((_QWORD *)v97 + 1) = v99;
  *(_QWORD *)&v101 = swift_bridgeObjectRetain(v99, v121, v123).n128_u64[0];
  *(_QWORD *)&v102 = swift_bridgeObjectRelease(v100, v101).n128_u64[0];
  v103 = v19[21];
  v104 = &v11[v103];
  v105 = &v12[v103];
  *(_QWORD *)v104 = *(_QWORD *)v105;
  v106 = (const char *)*((_QWORD *)v105 + 1);
  v107 = (const char *)*((_QWORD *)v104 + 1);
  *((_QWORD *)v104 + 1) = v106;
  *(_QWORD *)&v108 = swift_bridgeObjectRetain(v106, v102).n128_u64[0];
  swift_bridgeObjectRelease(v107, v108);
  *(_DWORD *)(a1 + v122[7]) = *(_DWORD *)(v124 + v122[7]);
  v109 = v122[8];
  v110 = (uint64_t *)(a1 + v109);
  v111 = (uint64_t *)(v124 + v109);
  v112 = *v111;
  v113 = v111[1];
  sub_10022E4A8(*v111, v113);
  v114 = *v110;
  v115 = v110[1];
  *v110 = v112;
  v110[1] = v113;
  sub_100225AB4(v114, v115);
  v116 = v122[9];
  v117 = *(void **)(a1 + v116);
  v118 = *(void **)(v124 + v116);
  *(_QWORD *)(a1 + v116) = v118;
  v119 = v118;

  *(_BYTE *)(a1 + v122[10]) = *(_BYTE *)(v124 + v122[10]);
  return a1;
}

uint64_t sub_1003BDC38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a3[6];
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    v11 = sub_100008384(&qword_1007C4330);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v13 = v12[5];
  v14 = &v6[v13];
  v15 = &v7[v13];
  if (v10(&v7[v13], 1, v8))
  {
    v16 = sub_100008384(&qword_1007C4330);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  }
  v17 = v12[6];
  v18 = &v6[v17];
  v19 = &v7[v17];
  if (v10(&v7[v17], 1, v8))
  {
    v20 = sub_100008384(&qword_1007C4330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
  }
  v21 = v12[7];
  v22 = &v6[v21];
  v23 = &v7[v21];
  if (v10(&v7[v21], 1, v8))
  {
    v24 = sub_100008384(&qword_1007C4330);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v8);
  }
  v25 = v12[8];
  v26 = &v6[v25];
  v27 = &v7[v25];
  if (v10(&v7[v25], 1, v8))
  {
    v28 = sub_100008384(&qword_1007C4330);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v8);
  }
  v29 = v12[9];
  v30 = &v6[v29];
  v31 = &v7[v29];
  if (v10(&v7[v29], 1, v8))
  {
    v32 = sub_100008384(&qword_1007C4330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v30, 0, 1, v8);
  }
  v33 = v12[10];
  v34 = &v6[v33];
  v35 = &v7[v33];
  if (v10(&v7[v33], 1, v8))
  {
    v36 = sub_100008384(&qword_1007C4330);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, v8);
  }
  v37 = v12[11];
  v38 = &v6[v37];
  v39 = &v7[v37];
  if (v10(&v7[v37], 1, v8))
  {
    v40 = sub_100008384(&qword_1007C4330);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
  }
  v41 = v12[12];
  v42 = &v6[v41];
  v43 = &v7[v41];
  if (v10(&v7[v41], 1, v8))
  {
    v44 = sub_100008384(&qword_1007C4330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v42, 0, 1, v8);
  }
  v6[v12[13]] = v7[v12[13]];
  v45 = v12[14];
  v46 = &v6[v45];
  v47 = &v7[v45];
  if (v10(&v7[v45], 1, v8))
  {
    v48 = sub_100008384(&qword_1007C4330);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v46, 0, 1, v8);
  }
  v49 = v12[15];
  v50 = &v6[v49];
  v51 = &v7[v49];
  if (v10(&v7[v49], 1, v8))
  {
    v52 = sub_100008384(&qword_1007C4330);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v50, 0, 1, v8);
  }
  v53 = v12[16];
  v54 = &v6[v53];
  v55 = &v7[v53];
  if (v10(&v7[v53], 1, v8))
  {
    v56 = sub_100008384(&qword_1007C4330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v54, 0, 1, v8);
  }
  v57 = v12[17];
  v58 = &v6[v57];
  v59 = &v7[v57];
  if (v10(&v7[v57], 1, v8))
  {
    v60 = sub_100008384(&qword_1007C4330);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v58, 0, 1, v8);
  }
  v61 = v12[18];
  v62 = &v6[v61];
  v63 = &v7[v61];
  *(_DWORD *)v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  v64 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
  v65 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v65) = *(_BYTE *)(a2 + v65);
  return a1;
}

uint64_t sub_1003BE2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  double v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;

  v6 = *(const char **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10022E75C((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v111 = a3;
  v113 = a2;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100008384(&qword_1007C4330);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v17 = v16[5];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = v12(&v8[v17], 1, v10);
  v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    v22 = sub_100008384(&qword_1007C4330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  v23 = v16[6];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v26 = v12(&v8[v23], 1, v10);
  v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    v28 = sub_100008384(&qword_1007C4330);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  v29 = v16[7];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v32 = v12(&v8[v29], 1, v10);
  v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    v34 = sub_100008384(&qword_1007C4330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  v35 = v16[8];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v38 = v12(&v8[v35], 1, v10);
  v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    v40 = sub_100008384(&qword_1007C4330);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  v41 = v16[9];
  v42 = &v8[v41];
  v43 = &v9[v41];
  v44 = v12(&v8[v41], 1, v10);
  v45 = v12(v43, 1, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    v46 = sub_100008384(&qword_1007C4330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  v47 = v16[10];
  v48 = &v8[v47];
  v49 = &v9[v47];
  v50 = v12(&v8[v47], 1, v10);
  v51 = v12(v49, 1, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    v52 = sub_100008384(&qword_1007C4330);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  v53 = v16[11];
  v54 = &v8[v53];
  v55 = &v9[v53];
  v56 = v12(&v8[v53], 1, v10);
  v57 = v12(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    v58 = sub_100008384(&qword_1007C4330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  v59 = v16[12];
  v60 = &v8[v59];
  v61 = &v9[v59];
  v62 = v12(&v8[v59], 1, v10);
  v63 = v12(v61, 1, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    v64 = sub_100008384(&qword_1007C4330);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  v65 = v16[14];
  v66 = &v8[v65];
  v67 = &v9[v65];
  v68 = v12(&v8[v65], 1, v10);
  v69 = v12(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v66, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    v70 = sub_100008384(&qword_1007C4330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  v71 = v16[15];
  v72 = &v8[v71];
  v73 = &v9[v71];
  v74 = v12(&v8[v71], 1, v10);
  v75 = v12(v73, 1, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v72, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    v76 = sub_100008384(&qword_1007C4330);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  v77 = v16[16];
  v78 = &v8[v77];
  v79 = &v9[v77];
  v80 = v12(&v8[v77], 1, v10);
  v81 = v12(v79, 1, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v78, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    v82 = sub_100008384(&qword_1007C4330);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  v83 = v16[17];
  v84 = &v8[v83];
  v85 = &v9[v83];
  v86 = v12(&v8[v83], 1, v10);
  v87 = v12(v85, 1, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }
  if (v87)
  {
LABEL_78:
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v84, 0, 1, v10);
LABEL_79:
  v89 = v16[18];
  v90 = &v8[v89];
  v91 = &v9[v89];
  *(_DWORD *)v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  v92 = v16[20];
  v93 = &v8[v92];
  v94 = &v9[v92];
  v96 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  v97 = (const char *)*((_QWORD *)v93 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v95;
  *(_QWORD *)&v98 = swift_bridgeObjectRelease(v97, v111, v113).n128_u64[0];
  v99 = v16[21];
  v100 = &v8[v99];
  v101 = &v9[v99];
  v103 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  v104 = (const char *)*((_QWORD *)v100 + 1);
  *(_QWORD *)v100 = v103;
  *((_QWORD *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  v105 = v112[8];
  *(_DWORD *)(a1 + v112[7]) = *(_DWORD *)(v114 + v112[7]);
  v106 = *(_QWORD *)(a1 + v105);
  v107 = *(_QWORD *)(a1 + v105 + 8);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(v114 + v105);
  sub_100225AB4(v106, v107);
  v108 = v112[9];
  v109 = *(void **)(a1 + v108);
  *(_QWORD *)(a1 + v108) = *(_QWORD *)(v114 + v108);

  *(_BYTE *)(a1 + v112[10]) = *(_BYTE *)(v114 + v112[10]);
  return a1;
}

