uint64_t sub_1003BED68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BED74);
}

uint64_t sub_1003BED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BED84);
}

uint64_t _s14MacUnlockPhoneV21HandleResponseContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE270, (uint64_t)&_s14MacUnlockPhoneV21HandleResponseContextVMn);
}

uint64_t sub_1003BED9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  result = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[4] = &unk_1005D6070;
    v4[5] = &unk_1005D6088;
    v4[6] = &unk_1005D60A0;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

const char *sub_1003BEE48(uint64_t a1, uint64_t a2, int *a3)
{
  int v4;
  const char *v5;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  const char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  const char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  const char *v80;
  uint64_t v81;
  char *v82;
  const void *v83;
  double v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void *v89;
  uint64_t v90;
  const char *v92;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    v20 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2 + 8;
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8);
    v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    v13 = a3[6];
    v14 = (char *)(a1 + v13);
    v15 = (char *)(a2 + v13);
    v16 = type metadata accessor for Date(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v92 = (const char *)a1;
    if (v18(v15, 1, v16))
    {
      v19 = sub_100008384(&qword_1007C4330);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v21 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
    v22 = v21[5];
    v23 = &v14[v22];
    v24 = &v15[v22];
    if (v18(&v15[v22], 1, v16))
    {
      v25 = sub_100008384(&qword_1007C4330);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
    }
    v26 = v21[6];
    v27 = &v14[v26];
    v28 = &v15[v26];
    if (v18(&v15[v26], 1, v16))
    {
      v29 = sub_100008384(&qword_1007C4330);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v27, v28, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v16);
    }
    v30 = v21[7];
    v31 = &v14[v30];
    v32 = &v15[v30];
    if (v18(&v15[v30], 1, v16))
    {
      v33 = sub_100008384(&qword_1007C4330);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v31, v32, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v16);
    }
    v34 = v21[8];
    v35 = &v14[v34];
    v36 = &v15[v34];
    if (v18(&v15[v34], 1, v16))
    {
      v37 = sub_100008384(&qword_1007C4330);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v35, v36, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v35, 0, 1, v16);
    }
    v38 = v21[9];
    v39 = &v14[v38];
    v40 = &v15[v38];
    if (v18(&v15[v38], 1, v16))
    {
      v41 = sub_100008384(&qword_1007C4330);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v39, v40, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v39, 0, 1, v16);
    }
    v42 = v21[10];
    v43 = &v14[v42];
    v44 = &v15[v42];
    if (v18(&v15[v42], 1, v16))
    {
      v45 = sub_100008384(&qword_1007C4330);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v43, v44, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v43, 0, 1, v16);
    }
    v46 = v21[11];
    v47 = &v14[v46];
    v48 = &v15[v46];
    if (v18(&v15[v46], 1, v16))
    {
      v49 = sub_100008384(&qword_1007C4330);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v47, 0, 1, v16);
    }
    v50 = v21[12];
    v51 = &v14[v50];
    v52 = &v15[v50];
    if (v18(&v15[v50], 1, v16))
    {
      v53 = sub_100008384(&qword_1007C4330);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v51, v52, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v51, 0, 1, v16);
    }
    v14[v21[13]] = v15[v21[13]];
    v54 = v21[14];
    v55 = &v14[v54];
    v56 = &v15[v54];
    if (v18(&v15[v54], 1, v16))
    {
      v57 = sub_100008384(&qword_1007C4330);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v55, v56, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v55, 0, 1, v16);
    }
    v58 = v21[15];
    v59 = &v14[v58];
    v60 = &v15[v58];
    if (v18(&v15[v58], 1, v16))
    {
      v61 = sub_100008384(&qword_1007C4330);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v59, v60, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v59, 0, 1, v16);
    }
    v62 = v21[16];
    v63 = &v14[v62];
    v64 = &v15[v62];
    if (v18(&v15[v62], 1, v16))
    {
      v65 = sub_100008384(&qword_1007C4330);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v63, v64, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v63, 0, 1, v16);
    }
    v66 = v21[17];
    v67 = &v14[v66];
    v68 = &v15[v66];
    if (v18(&v15[v66], 1, v16))
    {
      v69 = sub_100008384(&qword_1007C4330);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v67, v68, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v67, 0, 1, v16);
    }
    v70 = v21[18];
    v71 = &v14[v70];
    v72 = &v15[v70];
    *(_DWORD *)v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    v14[v21[19]] = v15[v21[19]];
    v73 = v21[20];
    v74 = &v14[v73];
    v75 = &v15[v73];
    v76 = (const char *)*((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = v21[21];
    v78 = &v14[v77];
    v79 = &v15[v77];
    v80 = (const char *)*((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    v81 = a3[7];
    v20 = v92;
    v82 = (char *)&v92[v81];
    v83 = (const void *)(a2 + v81);
    *(_QWORD *)&v84 = swift_bridgeObjectRetain(v76).n128_u64[0];
    v85 = swift_bridgeObjectRetain(v80, v84);
    if (((unsigned int (*)(const void *, uint64_t, uint64_t, __n128))v18)(v83, 1, v16, v85))
    {
      v86 = sub_100008384(&qword_1007C4330);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v82, v83, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v82, 0, 1, v16);
    }
    v87 = a3[8];
    v88 = (char *)&v92[v87];
    v89 = (void *)(a2 + v87);
    if (v18((char *)v89, 1, v16))
    {
      v90 = sub_100008384(&qword_1007C4330);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v17 + 16))(v88, v89, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v88, 0, 1, v16);
    }
  }
  return v20;
}

uint64_t sub_1003BF614(const char **a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  int *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double v22;
  __n128 v23;
  char *v24;
  char *v25;
  uint64_t result;

  v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10022E75C(v4);
  v5 = (char *)a1 + a2[6];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v10 = &v5[v9[5]];
  if (!v8(v10, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v11 = &v5[v9[6]];
  if (!v8(v11, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v12 = &v5[v9[7]];
  if (!v8(v12, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v13 = &v5[v9[8]];
  if (!v8(v13, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v14 = &v5[v9[9]];
  if (!v8(v14, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v15 = &v5[v9[10]];
  if (!v8(v15, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  v16 = &v5[v9[11]];
  if (!v8(v16, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  v17 = &v5[v9[12]];
  if (!v8(v17, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  v18 = &v5[v9[14]];
  if (!v8(v18, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  v19 = &v5[v9[15]];
  if (!v8(v19, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  v20 = &v5[v9[16]];
  if (!v8(v20, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  v21 = &v5[v9[17]];
  if (!v8(v21, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v5[v9[20] + 8]).n128_u64[0];
  v23 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v5[v9[21] + 8], v22);
  v24 = (char *)a1 + a2[7];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v8)(v24, 1, v6, v23))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
  v25 = (char *)a1 + a2[8];
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v8)(v25, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  return result;
}

uint64_t sub_1003BF948(uint64_t a1, uint64_t a2, int *a3)
{
  const char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  const char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  const char *v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  double v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v90;

  v6 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = a2 + 8;
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  v12 = a3[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v90 = a1;
  if (v17(v14, 1, v15))
  {
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v20 = v19[5];
  v21 = &v13[v20];
  v22 = &v14[v20];
  if (v17(&v14[v20], 1, v15))
  {
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  }
  v24 = v19[6];
  v25 = &v13[v24];
  v26 = &v14[v24];
  if (v17(&v14[v24], 1, v15))
  {
    v27 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  v28 = v19[7];
  v29 = &v13[v28];
  v30 = &v14[v28];
  if (v17(&v14[v28], 1, v15))
  {
    v31 = sub_100008384(&qword_1007C4330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
  }
  v32 = v19[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  if (v17(&v14[v32], 1, v15))
  {
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  v36 = v19[9];
  v37 = &v13[v36];
  v38 = &v14[v36];
  if (v17(&v14[v36], 1, v15))
  {
    v39 = sub_100008384(&qword_1007C4330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
  }
  v40 = v19[10];
  v41 = &v13[v40];
  v42 = &v14[v40];
  if (v17(&v14[v40], 1, v15))
  {
    v43 = sub_100008384(&qword_1007C4330);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v15);
  }
  v44 = v19[11];
  v45 = &v13[v44];
  v46 = &v14[v44];
  if (v17(&v14[v44], 1, v15))
  {
    v47 = sub_100008384(&qword_1007C4330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
  }
  v48 = v19[12];
  v49 = &v13[v48];
  v50 = &v14[v48];
  if (v17(&v14[v48], 1, v15))
  {
    v51 = sub_100008384(&qword_1007C4330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v49, 0, 1, v15);
  }
  v13[v19[13]] = v14[v19[13]];
  v52 = v19[14];
  v53 = &v13[v52];
  v54 = &v14[v52];
  if (v17(&v14[v52], 1, v15))
  {
    v55 = sub_100008384(&qword_1007C4330);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
  }
  v56 = v19[15];
  v57 = &v13[v56];
  v58 = &v14[v56];
  if (v17(&v14[v56], 1, v15))
  {
    v59 = sub_100008384(&qword_1007C4330);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
  }
  v60 = v19[16];
  v61 = &v13[v60];
  v62 = &v14[v60];
  if (v17(&v14[v60], 1, v15))
  {
    v63 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v61, 0, 1, v15);
  }
  v64 = v19[17];
  v65 = &v13[v64];
  v66 = &v14[v64];
  if (v17(&v14[v64], 1, v15))
  {
    v67 = sub_100008384(&qword_1007C4330);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v65, 0, 1, v15);
  }
  v68 = v19[18];
  v69 = &v13[v68];
  v70 = &v14[v68];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  v71 = v19[20];
  v72 = &v13[v71];
  v73 = &v14[v71];
  v74 = (const char *)*((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *((_QWORD *)v72 + 1) = v74;
  v75 = v19[21];
  v76 = &v13[v75];
  v77 = &v14[v75];
  v78 = (const char *)*((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  v79 = a3[7];
  v80 = (void *)(v90 + v79);
  v81 = (const void *)(a2 + v79);
  *(_QWORD *)&v82 = swift_bridgeObjectRetain(v74).n128_u64[0];
  v83 = swift_bridgeObjectRetain(v78, v82);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t, __n128))v17)(v81, 1, v15, v83))
  {
    v84 = sub_100008384(&qword_1007C4330);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v80, v81, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v80, 0, 1, v15);
  }
  v85 = a3[8];
  v86 = (void *)(v90 + v85);
  v87 = (void *)(a2 + v85);
  if (v17((char *)v87, 1, v15))
  {
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v86, v87, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v86, 0, 1, v15);
  }
  return v90;
}

uint64_t sub_1003C00F0(uint64_t a1, const char **a2, int *a3)
{
  const char *v6;
  _QWORD *v7;
  const char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  const char *v98;
  const char *v99;
  double v100;
  double v101;
  uint64_t v102;
  char *v103;
  char *v104;
  const char *v105;
  const char *v106;
  double v107;
  __n128 v108;
  uint64_t v109;
  void *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v7 = a2 + 1;
  v6 = *a2;
  v8 = *(const char **)a1;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)&v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10023D490((_QWORD *)(a1 + 8), v7);
  v10 = a3[6];
  v11 = (char *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date(0);
  v124 = *(_QWORD *)(v13 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  v15 = v14(v11, 1, v13);
  v16 = v14(v12, 1, v13);
  v122 = a1;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v11, v13);
LABEL_6:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v11, v12, v13);
LABEL_7:
  v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v19 = v18[5];
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = v14(&v11[v19], 1, v13);
  v23 = v14(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v20, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v20, v13);
LABEL_12:
    v24 = sub_100008384(&qword_1007C4330);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v20, v21, v13);
LABEL_13:
  v25 = v18[6];
  v26 = &v11[v25];
  v27 = &v12[v25];
  v28 = v14(&v11[v25], 1, v13);
  v29 = v14(v27, 1, v13);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v26, v27, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v26, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v26, v13);
LABEL_18:
    v30 = sub_100008384(&qword_1007C4330);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v26, v27, v13);
LABEL_19:
  v31 = v18[7];
  v32 = &v11[v31];
  v33 = &v12[v31];
  v34 = v14(&v11[v31], 1, v13);
  v35 = v14(v33, 1, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v32, v33, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v32, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v32, v13);
LABEL_24:
    v36 = sub_100008384(&qword_1007C4330);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v32, v33, v13);
LABEL_25:
  v37 = v18[8];
  v38 = &v11[v37];
  v39 = &v12[v37];
  v40 = v14(&v11[v37], 1, v13);
  v41 = v14(v39, 1, v13);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v38, v39, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v38, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v38, v13);
LABEL_30:
    v42 = sub_100008384(&qword_1007C4330);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v38, v39, v13);
LABEL_31:
  v43 = v18[9];
  v44 = &v11[v43];
  v45 = &v12[v43];
  v46 = v14(&v11[v43], 1, v13);
  v47 = v14(v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v44, v45, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v44, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v44, v13);
LABEL_36:
    v48 = sub_100008384(&qword_1007C4330);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v44, v45, v13);
LABEL_37:
  v49 = v18[10];
  v50 = &v11[v49];
  v51 = &v12[v49];
  v52 = v14(&v11[v49], 1, v13);
  v53 = v14(v51, 1, v13);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v50, v51, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v50, 0, 1, v13);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v50, v13);
LABEL_42:
    v54 = sub_100008384(&qword_1007C4330);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v50, v51, v13);
LABEL_43:
  v55 = v18[11];
  v56 = &v11[v55];
  v57 = &v12[v55];
  v58 = v14(&v11[v55], 1, v13);
  v59 = v14(v57, 1, v13);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v56, v57, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v56, 0, 1, v13);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v56, v13);
LABEL_48:
    v60 = sub_100008384(&qword_1007C4330);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v56, v57, v13);
LABEL_49:
  v61 = v18[12];
  v62 = &v11[v61];
  v63 = &v12[v61];
  v64 = v14(&v11[v61], 1, v13);
  v65 = v14(v63, 1, v13);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v62, v63, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v62, 0, 1, v13);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v62, v13);
LABEL_54:
    v66 = sub_100008384(&qword_1007C4330);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v62, v63, v13);
LABEL_55:
  v11[v18[13]] = v12[v18[13]];
  v67 = v18[14];
  v68 = &v11[v67];
  v69 = &v12[v67];
  v70 = v14(&v11[v67], 1, v13);
  v71 = v14(v69, 1, v13);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v68, v69, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v68, 0, 1, v13);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v68, v13);
LABEL_60:
    v72 = sub_100008384(&qword_1007C4330);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v68, v69, v13);
LABEL_61:
  v73 = v18[15];
  v74 = &v11[v73];
  v75 = &v12[v73];
  v76 = v14(&v11[v73], 1, v13);
  v77 = v14(v75, 1, v13);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v74, v75, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v74, 0, 1, v13);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v74, v13);
LABEL_66:
    v78 = sub_100008384(&qword_1007C4330);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v74, v75, v13);
LABEL_67:
  v79 = v18[16];
  v80 = &v11[v79];
  v81 = &v12[v79];
  v82 = v14(&v11[v79], 1, v13);
  v83 = v14(v81, 1, v13);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v80, v81, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v80, 0, 1, v13);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v80, v13);
LABEL_72:
    v84 = sub_100008384(&qword_1007C4330);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v80, v81, v13);
LABEL_73:
  v85 = v18[17];
  v86 = &v11[v85];
  v87 = &v12[v85];
  v88 = v14(&v11[v85], 1, v13);
  v89 = v14(v87, 1, v13);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v86, v87, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v86, 0, 1, v13);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v86, v13);
LABEL_78:
    v90 = sub_100008384(&qword_1007C4330);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v86, v87, v13);
LABEL_79:
  v91 = v18[18];
  v92 = &v11[v91];
  v93 = &v12[v91];
  v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)v92 = v94;
  v11[v18[19]] = v12[v18[19]];
  v95 = v18[20];
  v96 = &v11[v95];
  v97 = &v12[v95];
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = (const char *)*((_QWORD *)v97 + 1);
  v99 = (const char *)*((_QWORD *)v96 + 1);
  *((_QWORD *)v96 + 1) = v98;
  *(_QWORD *)&v100 = swift_bridgeObjectRetain(v98, v122).n128_u64[0];
  *(_QWORD *)&v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  v102 = v18[21];
  v103 = &v11[v102];
  v104 = &v12[v102];
  *(_QWORD *)v103 = *(_QWORD *)v104;
  v105 = (const char *)*((_QWORD *)v104 + 1);
  v106 = (const char *)*((_QWORD *)v103 + 1);
  *((_QWORD *)v103 + 1) = v105;
  *(_QWORD *)&v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  v108 = swift_bridgeObjectRelease(v106, v107);
  v109 = a3[7];
  v110 = (void *)(v123 + v109);
  v111 = (char *)a2 + v109;
  v112 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(v123 + v109, 1, v13, v108);
  v113 = v14(v111, 1, v13);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v110, v111, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v110, 0, 1, v13);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v113)
  {
    (*(void (**)(void *, uint64_t))(v124 + 8))(v110, v13);
LABEL_84:
    v114 = sub_100008384(&qword_1007C4330);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v124 + 24))(v110, v111, v13);
LABEL_85:
  v115 = a3[8];
  v116 = (void *)(v123 + v115);
  v117 = (char *)a2 + v115;
  v118 = v14((char *)(v123 + v115), 1, v13);
  v119 = v14(v117, 1, v13);
  if (!v118)
  {
    if (!v119)
    {
      (*(void (**)(void *, char *, uint64_t))(v124 + 24))(v116, v117, v13);
      return v123;
    }
    (*(void (**)(void *, uint64_t))(v124 + 8))(v116, v13);
    goto LABEL_90;
  }
  if (v119)
  {
LABEL_90:
    v120 = sub_100008384(&qword_1007C4330);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    return v123;
  }
  (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v116, v117, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v116, 0, 1, v13);
  return v123;
}

uint64_t sub_1003C0D64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v74;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v74 = a1;
  if (v11(v8, 1, v9))
  {
    v12 = sub_100008384(&qword_1007C4330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v14 = v13[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  v18 = v13[6];
  v19 = &v7[v18];
  v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v22 = v13[7];
  v23 = &v7[v22];
  v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  v26 = v13[8];
  v27 = &v7[v26];
  v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  v30 = v13[9];
  v31 = &v7[v30];
  v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  v34 = v13[10];
  v35 = &v7[v34];
  v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  v38 = v13[11];
  v39 = &v7[v38];
  v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  v42 = v13[12];
  v43 = &v7[v42];
  v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  v46 = v13[14];
  v47 = &v7[v46];
  v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  v50 = v13[15];
  v51 = &v7[v50];
  v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  v54 = v13[16];
  v55 = &v7[v54];
  v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  v58 = v13[17];
  v59 = &v7[v58];
  v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    v61 = sub_100008384(&qword_1007C4330);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  v62 = v13[18];
  v63 = &v7[v62];
  v64 = &v8[v62];
  *(_DWORD *)v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  v65 = a3[7];
  v66 = (void *)(v74 + v65);
  v67 = (const void *)(a2 + v65);
  if (v11((char *)(a2 + v65), 1, v9))
  {
    v68 = sub_100008384(&qword_1007C4330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
  }
  v69 = a3[8];
  v70 = (void *)(v74 + v69);
  v71 = (void *)(a2 + v69);
  if (v11((char *)v71, 1, v9))
  {
    v72 = sub_100008384(&qword_1007C4330);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v70, v71, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v70, 0, 1, v9);
  }
  return v74;
}

uint64_t sub_1003C14D8(uint64_t a1, uint64_t a2, int *a3)
{
  const char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  double v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  __n128 v104;
  uint64_t v105;
  void *v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v6 = *(const char **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10022E75C((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[6];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v120 = *(_QWORD *)(v10 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
  v12 = v11(v8, 1, v10);
  v13 = v11(v9, 1, v10);
  v118 = a1;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v8, v10);
LABEL_6:
    v14 = sub_100008384(&qword_1007C4330);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v8, v9, v10);
LABEL_7:
  v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v16 = v15[5];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = v11(&v8[v16], 1, v10);
  v20 = v11(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v17, v18, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v17, v10);
LABEL_12:
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v17, v18, v10);
LABEL_13:
  v22 = v15[6];
  v23 = &v8[v22];
  v24 = &v9[v22];
  v25 = v11(&v8[v22], 1, v10);
  v26 = v11(v24, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v23, v24, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v23, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v23, v10);
LABEL_18:
    v27 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v23, v24, v10);
LABEL_19:
  v28 = v15[7];
  v29 = &v8[v28];
  v30 = &v9[v28];
  v31 = v11(&v8[v28], 1, v10);
  v32 = v11(v30, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v29, v30, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v29, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v29, v10);
LABEL_24:
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v29, v30, v10);
LABEL_25:
  v34 = v15[8];
  v35 = &v8[v34];
  v36 = &v9[v34];
  v37 = v11(&v8[v34], 1, v10);
  v38 = v11(v36, 1, v10);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v35, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v35, v10);
LABEL_30:
    v39 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v35, v36, v10);
LABEL_31:
  v40 = v15[9];
  v41 = &v8[v40];
  v42 = &v9[v40];
  v43 = v11(&v8[v40], 1, v10);
  v44 = v11(v42, 1, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v41, v42, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v41, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v41, v10);
LABEL_36:
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v41, v42, v10);
LABEL_37:
  v46 = v15[10];
  v47 = &v8[v46];
  v48 = &v9[v46];
  v49 = v11(&v8[v46], 1, v10);
  v50 = v11(v48, 1, v10);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v47, v48, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v47, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v47, v10);
LABEL_42:
    v51 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v47, v48, v10);
LABEL_43:
  v52 = v15[11];
  v53 = &v8[v52];
  v54 = &v9[v52];
  v55 = v11(&v8[v52], 1, v10);
  v56 = v11(v54, 1, v10);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v53, v54, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v53, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v53, v10);
LABEL_48:
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v53, v54, v10);
LABEL_49:
  v58 = v15[12];
  v59 = &v8[v58];
  v60 = &v9[v58];
  v61 = v11(&v8[v58], 1, v10);
  v62 = v11(v60, 1, v10);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v59, v60, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v59, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v10);
LABEL_54:
    v63 = sub_100008384(&qword_1007C4330);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v59, v60, v10);
LABEL_55:
  v8[v15[13]] = v9[v15[13]];
  v64 = v15[14];
  v65 = &v8[v64];
  v66 = &v9[v64];
  v67 = v11(&v8[v64], 1, v10);
  v68 = v11(v66, 1, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v65, v66, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v65, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v10);
LABEL_60:
    v69 = sub_100008384(&qword_1007C4330);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v65, v66, v10);
LABEL_61:
  v70 = v15[15];
  v71 = &v8[v70];
  v72 = &v9[v70];
  v73 = v11(&v8[v70], 1, v10);
  v74 = v11(v72, 1, v10);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v71, v72, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v71, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v71, v10);
LABEL_66:
    v75 = sub_100008384(&qword_1007C4330);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v71, v72, v10);
LABEL_67:
  v76 = v15[16];
  v77 = &v8[v76];
  v78 = &v9[v76];
  v79 = v11(&v8[v76], 1, v10);
  v80 = v11(v78, 1, v10);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v77, v78, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v77, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v77, v10);
LABEL_72:
    v81 = sub_100008384(&qword_1007C4330);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v77, v78, v10);
LABEL_73:
  v82 = v15[17];
  v83 = &v8[v82];
  v84 = &v9[v82];
  v85 = v11(&v8[v82], 1, v10);
  v86 = v11(v84, 1, v10);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v83, v84, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v83, 0, 1, v10);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v83, v10);
LABEL_78:
    v87 = sub_100008384(&qword_1007C4330);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v83, v84, v10);
LABEL_79:
  v88 = v15[18];
  v89 = &v8[v88];
  v90 = &v9[v88];
  *(_DWORD *)v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v8[v15[19]] = v9[v15[19]];
  v91 = v15[20];
  v92 = &v8[v91];
  v93 = &v9[v91];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  v96 = (const char *)*((_QWORD *)v92 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v94;
  *(_QWORD *)&v97 = swift_bridgeObjectRelease(v96, v118).n128_u64[0];
  v98 = v15[21];
  v99 = &v8[v98];
  v100 = &v9[v98];
  v102 = *(_QWORD *)v100;
  v101 = *((_QWORD *)v100 + 1);
  v103 = (const char *)*((_QWORD *)v99 + 1);
  *(_QWORD *)v99 = v102;
  *((_QWORD *)v99 + 1) = v101;
  v104 = swift_bridgeObjectRelease(v103, v97);
  v105 = a3[7];
  v106 = (void *)(v119 + v105);
  v107 = (char *)(a2 + v105);
  v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v119 + v105, 1, v10, v104);
  v109 = v11(v107, 1, v10);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(void *, char *, uint64_t))(v120 + 32))(v106, v107, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v106, 0, 1, v10);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v109)
  {
    (*(void (**)(void *, uint64_t))(v120 + 8))(v106, v10);
LABEL_84:
    v110 = sub_100008384(&qword_1007C4330);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v120 + 40))(v106, v107, v10);
LABEL_85:
  v111 = a3[8];
  v112 = (void *)(v119 + v111);
  v113 = (char *)(a2 + v111);
  v114 = v11((char *)(v119 + v111), 1, v10);
  v115 = v11(v113, 1, v10);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(void *, char *, uint64_t))(v120 + 40))(v112, v113, v10);
      return v119;
    }
    (*(void (**)(void *, uint64_t))(v120 + 8))(v112, v10);
    goto LABEL_90;
  }
  if (v115)
  {
LABEL_90:
    v116 = sub_100008384(&qword_1007C4330);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    return v119;
  }
  (*(void (**)(void *, char *, uint64_t))(v120 + 32))(v112, v113, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v112, 0, 1, v10);
  return v119;
}

uint64_t sub_1003C2130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C213C);
}

uint64_t sub_1003C213C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1003C21E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C21EC);
}

char *sub_1003C21EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s14MacUnlockPhoneV18InitialLockContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE318, (uint64_t)&_s14MacUnlockPhoneV18InitialLockContextVMn);
}

void sub_1003C22A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = "(";
  v2 = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_10023EB48(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003C233C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C2348);
}

uint64_t sub_1003C2348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003C23C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C23D4);
}

uint64_t sub_1003C23D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s14MacUnlockPhoneV4FlowVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE3B8, (uint64_t)&_s14MacUnlockPhoneV4FlowVMn);
}

uint64_t sub_1003C2464(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for SDAuthenticationCommonOperationInput(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

const char *sub_1003C24E4(const char **a1, const char **a2, int *a3)
{
  int v3;
  const char *v4;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  const char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  const char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  const char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t, __n128);
  double v83;
  __n128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v104;
  uint64_t v105;
  const char **v106;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v16 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_bridgeObjectRetain(v4);
    v106 = a2;
    if (v13(v10, 1, v11, v14))
    {
      v15 = sub_100008384(&qword_1007C4330);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v17 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
    v18 = v17[5];
    v19 = &v9[v18];
    v20 = &v10[v18];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v18], 1, v11))
    {
      v21 = sub_100008384(&qword_1007C4330);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v20, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
    }
    v22 = v17[6];
    v23 = &v9[v22];
    v24 = &v10[v22];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v22], 1, v11))
    {
      v25 = sub_100008384(&qword_1007C4330);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v23, v24, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
    }
    v26 = v17[7];
    v27 = &v9[v26];
    v28 = &v10[v26];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v26], 1, v11))
    {
      v29 = sub_100008384(&qword_1007C4330);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v27, v28, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
    v30 = v17[8];
    v31 = &v9[v30];
    v32 = &v10[v30];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v30], 1, v11))
    {
      v33 = sub_100008384(&qword_1007C4330);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v32, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
    }
    v34 = v17[9];
    v35 = &v9[v34];
    v36 = &v10[v34];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v34], 1, v11))
    {
      v37 = sub_100008384(&qword_1007C4330);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v35, v36, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v35, 0, 1, v11);
    }
    v38 = v17[10];
    v39 = &v9[v38];
    v40 = &v10[v38];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v38], 1, v11))
    {
      v41 = sub_100008384(&qword_1007C4330);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v39, v40, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
    }
    v42 = v17[11];
    v43 = &v9[v42];
    v44 = &v10[v42];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v42], 1, v11))
    {
      v45 = sub_100008384(&qword_1007C4330);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v43, v44, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v43, 0, 1, v11);
    }
    v46 = v17[12];
    v47 = &v9[v46];
    v48 = &v10[v46];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v46], 1, v11))
    {
      v49 = sub_100008384(&qword_1007C4330);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v47, v48, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v47, 0, 1, v11);
    }
    v9[v17[13]] = v10[v17[13]];
    v50 = v17[14];
    v51 = &v9[v50];
    v52 = &v10[v50];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v50], 1, v11))
    {
      v53 = sub_100008384(&qword_1007C4330);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v51, v52, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v51, 0, 1, v11);
    }
    v54 = v17[15];
    v55 = &v9[v54];
    v56 = &v10[v54];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v54], 1, v11))
    {
      v57 = sub_100008384(&qword_1007C4330);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v55, v56, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v55, 0, 1, v11);
    }
    v58 = v17[16];
    v59 = &v9[v58];
    v60 = &v10[v58];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v58], 1, v11))
    {
      v61 = sub_100008384(&qword_1007C4330);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v59, v60, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v59, 0, 1, v11);
    }
    v62 = v17[17];
    v63 = &v9[v62];
    v64 = &v10[v62];
    v104 = v12;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v62], 1, v11))
    {
      v65 = sub_100008384(&qword_1007C4330);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v63, v64, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v63, 0, 1, v11);
    }
    v66 = v17[18];
    v67 = &v9[v66];
    v68 = &v10[v66];
    *(_DWORD *)v67 = *(_DWORD *)v68;
    v67[4] = v68[4];
    v9[v17[19]] = v10[v17[19]];
    v69 = v17[20];
    v70 = &v9[v69];
    v71 = &v10[v69];
    v72 = (const char *)*((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v73 = v17[21];
    v74 = &v9[v73];
    v75 = &v10[v73];
    v76 = (const char *)*((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = a3[6];
    v78 = (char *)a1 + v77;
    v16 = (const char *)a1;
    v79 = (char *)v106 + v77;
    v80 = *(_OWORD *)((char *)v106 + v77 + 24);
    *(_OWORD *)(v78 + 24) = v80;
    v81 = v80;
    v82 = **(void (***)(char *, char *, uint64_t, __n128))(v80 - 8);
    *(_QWORD *)&v83 = swift_bridgeObjectRetain(v72, v104).n128_u64[0];
    v84 = swift_bridgeObjectRetain(v76, v83);
    v82(v78, v79, v81, v84);
    v85 = a3[7];
    v86 = (char *)a1 + v85;
    v87 = (char *)v106 + v85;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)v106 + v85, 1, v11))
    {
      v88 = sub_100008384(&qword_1007C4330);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      v89 = v105;
    }
    else
    {
      v89 = v105;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v86, v87, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v86, 0, 1, v11);
    }
    v90 = a3[8];
    v91 = (char *)a1 + v90;
    v92 = (char *)v106 + v90;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)v106 + v90, 1, v11))
    {
      v93 = sub_100008384(&qword_1007C4330);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v92, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v91, 0, 1, v11);
    }
    v94 = a3[9];
    v95 = (char *)a1 + v94;
    v96 = (char *)v106 + v94;
    v97 = *((_QWORD *)v96 + 1);
    if (v97 >> 60 == 15)
    {
      *(_OWORD *)v95 = *(_OWORD *)v96;
    }
    else
    {
      v98 = *(_QWORD *)v96;
      sub_10022E4A8(*(_QWORD *)v96, *((_QWORD *)v96 + 1));
      *(_QWORD *)v95 = v98;
      *((_QWORD *)v95 + 1) = v97;
    }
    v99 = a3[10];
    v100 = a3[11];
    v101 = *(char **)((char *)v106 + v99);
    *(const char **)((char *)a1 + v99) = v101;
    *((_BYTE *)a1 + v100) = *((_BYTE *)v106 + v100);
    v102 = v101;
  }
  return v16;
}

void sub_1003C2D2C(const char **a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  int *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  double v21;
  char *v22;
  char *v23;
  uint64_t *v24;
  unint64_t v25;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v9 = &v4[v8[5]];
  if (!v7(v9, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v10 = &v4[v8[6]];
  if (!v7(v10, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  v11 = &v4[v8[7]];
  if (!v7(v11, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  v12 = &v4[v8[8]];
  if (!v7(v12, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  v13 = &v4[v8[9]];
  if (!v7(v13, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  v14 = &v4[v8[10]];
  if (!v7(v14, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  v15 = &v4[v8[11]];
  if (!v7(v15, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v16 = &v4[v8[12]];
  if (!v7(v16, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  v17 = &v4[v8[14]];
  if (!v7(v17, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  v18 = &v4[v8[15]];
  if (!v7(v18, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  v19 = &v4[v8[16]];
  if (!v7(v19, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  v20 = &v4[v8[17]];
  if (!v7(v20, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  *(_QWORD *)&v21 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
  sub_10022E75C((const char **)((char *)a1 + a2[6]));
  v22 = (char *)a1 + a2[7];
  if (!v7(v22, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v5);
  v23 = (char *)a1 + a2[8];
  if (!v7(v23, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v5);
  v24 = (uint64_t *)((char *)a1 + a2[9]);
  v25 = v24[1];
  if (v25 >> 60 != 15)
    sub_100225AB4(*v24, v25);

}

const char **sub_1003C3074(const char **a1, const char **a2, int *a3)
{
  const char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  const char **v59;
  uint64_t v60;
  char *v61;
  char *v62;
  const char **v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  const char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  const char *v75;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t, __n128);
  double v83;
  __n128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v105;

  v5 = *a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1, v9, v12))
  {
    v13 = sub_100008384(&qword_1007C4330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v15 = v14[5];
  v16 = &v7[v15];
  v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1, v9))
  {
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  }
  v19 = v14[6];
  v20 = &v7[v19];
  v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1, v9))
  {
    v22 = sub_100008384(&qword_1007C4330);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  v23 = v14[7];
  v24 = &v7[v23];
  v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1, v9))
  {
    v26 = sub_100008384(&qword_1007C4330);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
  }
  v27 = v14[8];
  v28 = &v7[v27];
  v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1, v9))
  {
    v30 = sub_100008384(&qword_1007C4330);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
  }
  v31 = v14[9];
  v32 = &v7[v31];
  v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1, v9))
  {
    v34 = sub_100008384(&qword_1007C4330);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v32, 0, 1, v9);
  }
  v35 = v14[10];
  v36 = &v7[v35];
  v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1, v9))
  {
    v38 = sub_100008384(&qword_1007C4330);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
  }
  v39 = v14[11];
  v40 = &v7[v39];
  v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1, v9))
  {
    v42 = sub_100008384(&qword_1007C4330);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
  }
  v43 = v14[12];
  v44 = &v7[v43];
  v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1, v9))
  {
    v46 = sub_100008384(&qword_1007C4330);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v44, 0, 1, v9);
  }
  v7[v14[13]] = v8[v14[13]];
  v47 = v14[14];
  v48 = &v7[v47];
  v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1, v9))
  {
    v50 = sub_100008384(&qword_1007C4330);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v48, 0, 1, v9);
  }
  v51 = v14[15];
  v52 = &v7[v51];
  v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1, v9))
  {
    v54 = sub_100008384(&qword_1007C4330);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
  }
  v55 = v14[16];
  v56 = &v7[v55];
  v57 = &v8[v55];
  v105 = v10;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1, v9))
  {
    v58 = sub_100008384(&qword_1007C4330);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v56, 0, 1, v9);
  }
  v59 = a1;
  v60 = v14[17];
  v61 = &v7[v60];
  v62 = &v8[v60];
  v63 = a2;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v60], 1, v9))
  {
    v64 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v61, v62, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v61, 0, 1, v9);
  }
  v65 = v14[18];
  v66 = &v7[v65];
  v67 = &v8[v65];
  *(_DWORD *)v66 = *(_DWORD *)v67;
  v66[4] = v67[4];
  v7[v14[19]] = v8[v14[19]];
  v68 = v14[20];
  v69 = &v7[v68];
  v70 = &v8[v68];
  v71 = (const char *)*((_QWORD *)v70 + 1);
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *((_QWORD *)v69 + 1) = v71;
  v72 = v14[21];
  v73 = &v7[v72];
  v74 = &v8[v72];
  v75 = (const char *)*((_QWORD *)v74 + 1);
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *((_QWORD *)v73 + 1) = v75;
  v76 = a3;
  v77 = a3[6];
  v78 = (char *)v59 + v77;
  v79 = (char *)v63 + v77;
  v80 = *(_OWORD *)((char *)v63 + v77 + 24);
  *(_OWORD *)((char *)v59 + v77 + 24) = v80;
  v81 = v80;
  v82 = **(void (***)(char *, char *, uint64_t, __n128))(v80 - 8);
  *(_QWORD *)&v83 = swift_bridgeObjectRetain(v71, a3).n128_u64[0];
  v84 = swift_bridgeObjectRetain(v75, v83);
  v82(v78, v79, v81, v84);
  v85 = v76[7];
  v86 = (char *)v59 + v85;
  v87 = (char *)v63 + v85;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)((char *)v63 + v85, 1, v9))
  {
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    v89 = v105;
  }
  else
  {
    v89 = v105;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v86, v87, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v86, 0, 1, v9);
  }
  v90 = v76[8];
  v91 = (char *)v59 + v90;
  v92 = (char *)v63 + v90;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)((char *)v63 + v90, 1, v9))
  {
    v93 = sub_100008384(&qword_1007C4330);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v92, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v91, 0, 1, v9);
  }
  v94 = v76[9];
  v95 = (char *)v59 + v94;
  v96 = (char *)v63 + v94;
  v97 = *((_QWORD *)v96 + 1);
  if (v97 >> 60 == 15)
  {
    *(_OWORD *)v95 = *(_OWORD *)v96;
  }
  else
  {
    v98 = *(_QWORD *)v96;
    sub_10022E4A8(*(_QWORD *)v96, *((_QWORD *)v96 + 1));
    *(_QWORD *)v95 = v98;
    *((_QWORD *)v95 + 1) = v97;
  }
  v99 = v76[10];
  v100 = v76[11];
  v101 = *(char **)((char *)v63 + v99);
  *(const char **)((char *)v59 + v99) = v101;
  *((_BYTE *)v59 + v100) = *((_BYTE *)v63 + v100);
  v102 = v101;
  return v59;
}

const char **sub_1003C3894(const char **a1, const char **a2, uint64_t a3)
{
  const char *v6;
  const char *v7;
  double v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  const char *v98;
  const char *v99;
  double v100;
  double v101;
  uint64_t v102;
  char *v103;
  char *v104;
  const char *v105;
  const char *v106;
  double v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  void *v129;
  char *v130;
  char *v131;
  uint64_t v133;
  int *v134;
  const char **v135;
  uint64_t v136;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v133 = a3;
  v135 = a2;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v19 = v18[5];
  v20 = &v10[v19];
  v21 = &v11[v19];
  v22 = v14(&v10[v19], 1, v12);
  v23 = v14(v21, 1, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    v24 = sub_100008384(&qword_1007C4330);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  v25 = v18[6];
  v26 = &v10[v25];
  v27 = &v11[v25];
  v28 = v14(&v10[v25], 1, v12);
  v29 = v14(v27, 1, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    v30 = sub_100008384(&qword_1007C4330);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  v31 = v18[7];
  v32 = &v10[v31];
  v33 = &v11[v31];
  v34 = v14(&v10[v31], 1, v12);
  v35 = v14(v33, 1, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v32, 0, 1, v12);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    v36 = sub_100008384(&qword_1007C4330);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  v37 = v18[8];
  v38 = &v10[v37];
  v39 = &v11[v37];
  v40 = v14(&v10[v37], 1, v12);
  v41 = v14(v39, 1, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    v42 = sub_100008384(&qword_1007C4330);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  v43 = v18[9];
  v44 = &v10[v43];
  v45 = &v11[v43];
  v46 = v14(&v10[v43], 1, v12);
  v47 = v14(v45, 1, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v44, 0, 1, v12);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    v48 = sub_100008384(&qword_1007C4330);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  v49 = v18[10];
  v50 = &v10[v49];
  v51 = &v11[v49];
  v52 = v14(&v10[v49], 1, v12);
  v53 = v14(v51, 1, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v50, 0, 1, v12);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    v54 = sub_100008384(&qword_1007C4330);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  v55 = v18[11];
  v56 = &v10[v55];
  v57 = &v11[v55];
  v58 = v14(&v10[v55], 1, v12);
  v59 = v14(v57, 1, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v56, 0, 1, v12);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    v60 = sub_100008384(&qword_1007C4330);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  v61 = v18[12];
  v62 = &v10[v61];
  v63 = &v11[v61];
  v64 = v14(&v10[v61], 1, v12);
  v65 = v14(v63, 1, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v62, 0, 1, v12);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    v66 = sub_100008384(&qword_1007C4330);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  v67 = v18[14];
  v68 = &v10[v67];
  v69 = &v11[v67];
  v70 = v14(&v10[v67], 1, v12);
  v71 = v14(v69, 1, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v68, 0, 1, v12);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    v72 = sub_100008384(&qword_1007C4330);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  v73 = v18[15];
  v74 = &v10[v73];
  v75 = &v11[v73];
  v76 = v14(&v10[v73], 1, v12);
  v77 = v14(v75, 1, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v74, 0, 1, v12);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    v78 = sub_100008384(&qword_1007C4330);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  v79 = v18[16];
  v80 = &v10[v79];
  v81 = &v11[v79];
  v82 = v14(&v10[v79], 1, v12);
  v83 = v14(v81, 1, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v80, 0, 1, v12);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    v84 = sub_100008384(&qword_1007C4330);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  v85 = v18[17];
  v86 = &v10[v85];
  v87 = &v11[v85];
  v88 = v14(&v10[v85], 1, v12);
  v89 = v14(v87, 1, v12);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v86, 0, 1, v12);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
LABEL_78:
    v90 = sub_100008384(&qword_1007C4330);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
LABEL_79:
  v91 = v18[18];
  v92 = &v10[v91];
  v93 = &v11[v91];
  v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  v95 = v18[20];
  v96 = &v10[v95];
  v97 = &v11[v95];
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = (const char *)*((_QWORD *)v97 + 1);
  v99 = (const char *)*((_QWORD *)v96 + 1);
  *((_QWORD *)v96 + 1) = v98;
  *(_QWORD *)&v100 = swift_bridgeObjectRetain(v98, v133, v135).n128_u64[0];
  *(_QWORD *)&v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  v102 = v18[21];
  v103 = &v10[v102];
  v104 = &v11[v102];
  *(_QWORD *)v103 = *(_QWORD *)v104;
  v105 = (const char *)*((_QWORD *)v104 + 1);
  v106 = (const char *)*((_QWORD *)v103 + 1);
  *((_QWORD *)v103 + 1) = v105;
  *(_QWORD *)&v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  sub_10023D490((const char **)((char *)a1 + v134[6]), (_QWORD *)(v136 + v134[6]));
  v108 = v134[7];
  v109 = (char *)a1 + v108;
  v110 = (char *)(v136 + v108);
  v111 = v14((char *)a1 + v108, 1, v12);
  v112 = v14(v110, 1, v12);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v109, v110, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v109, 0, 1, v12);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v109, v12);
LABEL_84:
    v113 = sub_100008384(&qword_1007C4330);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v109, v110, v12);
LABEL_85:
  v114 = v134[8];
  v115 = (char *)a1 + v114;
  v116 = (char *)(v136 + v114);
  v117 = v14((char *)a1 + v114, 1, v12);
  v118 = v14(v116, 1, v12);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v115, v116, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v115, 0, 1, v12);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v118)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v115, v12);
LABEL_90:
    v119 = sub_100008384(&qword_1007C4330);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v115, v116, v12);
LABEL_91:
  v120 = v134[9];
  v121 = (uint64_t *)((char *)a1 + v120);
  v122 = (uint64_t *)(v136 + v120);
  v123 = *(_QWORD *)(v136 + v120 + 8);
  if (*(unint64_t *)((char *)a1 + v120 + 8) >> 60 != 15)
  {
    if (v123 >> 60 != 15)
    {
      v125 = *v122;
      sub_10022E4A8(*v122, v123);
      v126 = *v121;
      v127 = v121[1];
      *v121 = v125;
      v121[1] = v123;
      sub_100225AB4(v126, v127);
      goto LABEL_98;
    }
    sub_10023D5F8((uint64_t)v121);
    goto LABEL_96;
  }
  if (v123 >> 60 == 15)
  {
LABEL_96:
    *(_OWORD *)v121 = *(_OWORD *)v122;
    goto LABEL_98;
  }
  v124 = *v122;
  sub_10022E4A8(*v122, v123);
  *v121 = v124;
  v121[1] = v123;
LABEL_98:
  v128 = v134[10];
  v129 = *(void **)((char *)a1 + v128);
  v130 = *(char **)(v136 + v128);
  *(const char **)((char *)a1 + v128) = v130;
  v131 = v130;

  *((_BYTE *)a1 + v134[11]) = *(_BYTE *)(v136 + v134[11]);
  return a1;
}

_QWORD *sub_1003C44F0(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int *v79;

  *a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v79 = a3;
  if (v11(v8, 1, v9))
  {
    v12 = sub_100008384(&qword_1007C4330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v14 = v13[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  v18 = v13[6];
  v19 = &v7[v18];
  v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v22 = v13[7];
  v23 = &v7[v22];
  v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  v26 = v13[8];
  v27 = &v7[v26];
  v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  v30 = v13[9];
  v31 = &v7[v30];
  v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  v34 = v13[10];
  v35 = &v7[v34];
  v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  v38 = v13[11];
  v39 = &v7[v38];
  v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  v42 = v13[12];
  v43 = &v7[v42];
  v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  v46 = v13[14];
  v47 = &v7[v46];
  v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  v50 = v13[15];
  v51 = &v7[v50];
  v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  v54 = v13[16];
  v55 = &v7[v54];
  v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  v58 = v13[17];
  v59 = &v7[v58];
  v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    v61 = sub_100008384(&qword_1007C4330);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  v62 = v13[18];
  v63 = &v7[v62];
  v64 = &v8[v62];
  *(_DWORD *)v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  v65 = v79[6];
  v66 = v79[7];
  v67 = (char *)a1 + v65;
  v68 = &a2[v65];
  v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
  v70 = (char *)a1 + v66;
  v71 = &a2[v66];
  if (v11(&a2[v66], 1, v9))
  {
    v72 = sub_100008384(&qword_1007C4330);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v70, v71, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v70, 0, 1, v9);
  }
  v73 = v79[8];
  v74 = (char *)a1 + v73;
  v75 = &a2[v73];
  if (v11(&a2[v73], 1, v9))
  {
    v76 = sub_100008384(&qword_1007C4330);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v74, v75, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v74, 0, 1, v9);
  }
  v77 = v79[10];
  *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)&a2[v79[9]];
  *(_QWORD *)((char *)a1 + v77) = *(_QWORD *)&a2[v77];
  *((_BYTE *)a1 + v79[11]) = a2[v79[11]];
  return a1;
}

const char **sub_1003C4C84(const char **a1, const char **a2, uint64_t a3)
{
  const char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  double v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v130;
  int *v131;
  const char **v132;
  uint64_t v133;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  v130 = a3;
  v132 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100008384(&qword_1007C4330);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v17 = v16[5];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = v12(&v8[v17], 1, v10);
  v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    v22 = sub_100008384(&qword_1007C4330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  v23 = v16[6];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v26 = v12(&v8[v23], 1, v10);
  v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    v28 = sub_100008384(&qword_1007C4330);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  v29 = v16[7];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v32 = v12(&v8[v29], 1, v10);
  v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    v34 = sub_100008384(&qword_1007C4330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  v35 = v16[8];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v38 = v12(&v8[v35], 1, v10);
  v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    v40 = sub_100008384(&qword_1007C4330);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  v41 = v16[9];
  v42 = &v8[v41];
  v43 = &v9[v41];
  v44 = v12(&v8[v41], 1, v10);
  v45 = v12(v43, 1, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    v46 = sub_100008384(&qword_1007C4330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  v47 = v16[10];
  v48 = &v8[v47];
  v49 = &v9[v47];
  v50 = v12(&v8[v47], 1, v10);
  v51 = v12(v49, 1, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    v52 = sub_100008384(&qword_1007C4330);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  v53 = v16[11];
  v54 = &v8[v53];
  v55 = &v9[v53];
  v56 = v12(&v8[v53], 1, v10);
  v57 = v12(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    v58 = sub_100008384(&qword_1007C4330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  v59 = v16[12];
  v60 = &v8[v59];
  v61 = &v9[v59];
  v62 = v12(&v8[v59], 1, v10);
  v63 = v12(v61, 1, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    v64 = sub_100008384(&qword_1007C4330);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  v65 = v16[14];
  v66 = &v8[v65];
  v67 = &v9[v65];
  v68 = v12(&v8[v65], 1, v10);
  v69 = v12(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v66, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    v70 = sub_100008384(&qword_1007C4330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  v71 = v16[15];
  v72 = &v8[v71];
  v73 = &v9[v71];
  v74 = v12(&v8[v71], 1, v10);
  v75 = v12(v73, 1, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v72, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    v76 = sub_100008384(&qword_1007C4330);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  v77 = v16[16];
  v78 = &v8[v77];
  v79 = &v9[v77];
  v80 = v12(&v8[v77], 1, v10);
  v81 = v12(v79, 1, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v78, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    v82 = sub_100008384(&qword_1007C4330);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  v83 = v16[17];
  v84 = &v8[v83];
  v85 = &v9[v83];
  v86 = v12(&v8[v83], 1, v10);
  v87 = v12(v85, 1, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v84, 0, 1, v10);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  v89 = v16[18];
  v90 = &v8[v89];
  v91 = &v9[v89];
  *(_DWORD *)v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  v92 = v16[20];
  v93 = &v8[v92];
  v94 = &v9[v92];
  v96 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  v97 = (const char *)*((_QWORD *)v93 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v95;
  *(_QWORD *)&v98 = swift_bridgeObjectRelease(v97, v130, v132).n128_u64[0];
  v99 = v16[21];
  v100 = &v8[v99];
  v101 = &v9[v99];
  v103 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  v104 = (const char *)*((_QWORD *)v100 + 1);
  *(_QWORD *)v100 = v103;
  *((_QWORD *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  v105 = v131[6];
  v106 = (char *)a1 + v105;
  v107 = v133 + v105;
  sub_10022E75C((const char **)((char *)a1 + v105));
  v108 = *(_OWORD *)(v107 + 16);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  *((_OWORD *)v106 + 1) = v108;
  *((_QWORD *)v106 + 4) = *(_QWORD *)(v107 + 32);
  v109 = v131[7];
  v110 = (char *)a1 + v109;
  v111 = (char *)(v133 + v109);
  v112 = v12((char *)a1 + v109, 1, v10);
  v113 = v12(v111, 1, v10);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v110, v111, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v110, 0, 1, v10);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v110, v10);
LABEL_84:
    v114 = sub_100008384(&qword_1007C4330);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v110, v111, v10);
LABEL_85:
  v115 = v131[8];
  v116 = (char *)a1 + v115;
  v117 = (char *)(v133 + v115);
  v118 = v12((char *)a1 + v115, 1, v10);
  v119 = v12(v117, 1, v10);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v116, v117, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v116, 0, 1, v10);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v119)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v116, v10);
LABEL_90:
    v120 = sub_100008384(&qword_1007C4330);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v116, v117, v10);
LABEL_91:
  v121 = v131[9];
  v122 = (uint64_t *)((char *)a1 + v121);
  v123 = (uint64_t *)(v133 + v121);
  v124 = *(unint64_t *)((char *)a1 + v121 + 8);
  if (v124 >> 60 != 15)
  {
    v125 = v123[1];
    if (v125 >> 60 != 15)
    {
      v126 = *v122;
      *v122 = *v123;
      v122[1] = v125;
      sub_100225AB4(v126, v124);
      goto LABEL_96;
    }
    sub_10023D5F8((uint64_t)v122);
  }
  *(_OWORD *)v122 = *(_OWORD *)v123;
LABEL_96:
  v127 = v131[10];
  v128 = *(void **)((char *)a1 + v127);
  *(const char **)((char *)a1 + v127) = *(const char **)(v133 + v127);

  *((_BYTE *)a1 + v131[11]) = *(_BYTE *)(v133 + v131[11]);
  return a1;
}

uint64_t sub_1003C5898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C58A4);
}

uint64_t sub_1003C58A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1003C5948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C5954);
}

char *sub_1003C5954(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s14MacUnlockPhoneV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE450, (uint64_t)&_s14MacUnlockPhoneV17InitialKeyContextVMn);
}

void sub_1003C5A08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    sub_10023EB48(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = &unk_1005D60F8;
      v10 = &unk_1005D6088;
      v11 = &unk_1005D60A0;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003C5AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10027ACA0(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1003C5AD8(uint64_t a1, uint64_t a2)
{
  return sub_1002429A0(a1, a2, (uint64_t (*)(void))sub_1003BBED8);
}

id sub_1003C5AF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = *(int *)(_s14MacUnlockPhoneV20HandleRequestContextVMa(0) + 44);
  v2 = *(void **)(v0 + v1);
  if (v2)
  {
    v3 = *(id *)(v0 + v1);
LABEL_5:
    v5 = v2;
    return v3;
  }
  result = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationResponse), "init");
  if (result)
  {
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1003C5B60(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  id v20;
  double v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  id v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - v9;
  v11 = sub_100008384(&qword_1007B5B28);
  v12 = swift_allocObject(v11, 432, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1005D0670;
  if (qword_1007B4008 != -1)
    swift_once(&qword_1007B4008, LongHash.storage.getter);
  *(_QWORD *)(v12 + 56) = &type metadata for SDAuthentication.Operation.RecordSessionStart;
  *(_QWORD *)(v12 + 64) = &off_1007BB160;
  *(_QWORD *)(v12 + 96) = &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
  *(_QWORD *)(v12 + 104) = &off_1007BB140;
  *(_QWORD *)(v12 + 136) = &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
  *(_QWORD *)(v12 + 144) = &off_1007BB120;
  *(_QWORD *)(v12 + 176) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
  *(_QWORD *)(v12 + 184) = &off_1007BB100;
  *(_QWORD *)(v12 + 216) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
  *(_QWORD *)(v12 + 224) = &off_1007BB0E0;
  *(_QWORD *)(v12 + 256) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(_QWORD *)(v12 + 264) = &off_1007BAE00;
  *(_QWORD *)(v12 + 296) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(_QWORD *)(v12 + 304) = &off_1007BAEA0;
  *(_QWORD *)(v12 + 336) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
  *(_QWORD *)(v12 + 344) = &off_1007BB0C0;
  *(_QWORD *)(v12 + 376) = &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
  *(_QWORD *)(v12 + 384) = &off_1007BB0A0;
  *(_QWORD *)(v12 + 416) = &type metadata for SDAuthentication.Operation.SendResponseMessage;
  *(_QWORD *)(v12 + 424) = &off_1007BB240;
  *a3 = (const char *)v12;
  v13 = (int *)_s14MacUnlockPhoneV20HandleRequestContextVMa(0);
  v14 = (uint64_t)a3 + v13[8];
  v47 = v6;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v15(v14, 1, 1, v5);
  v16 = (uint64_t)a3 + v13[9];
  v15(v16, 1, 1, v5);
  v17 = v13[11];
  *(const char **)((char *)a3 + v17) = 0;
  *((_BYTE *)a3 + v13[12]) = 1;
  if (objc_msgSend(a1, "hasAksToken"))
  {
    v18 = v48;
    sub_100244418(v48 + 8, (uint64_t)(a3 + 1));
    v19 = (int *)_s14MacUnlockPhoneV18InitialLockContextVMa(0);
    sub_100244384(v18 + v19[6], (uint64_t)a3 + v13[6], type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1002D46E8(v18 + v19[7], v14);
    sub_1002D46E8(v18 + v19[8], v16);
    v20 = objc_msgSend(a1, "hasUnlockDate");
    if ((_DWORD)v20 && (v20 = objc_msgSend(a1, "unlockDate"), v21 != 0.0))
      Date.init(timeIntervalSince1970:)(objc_msgSend(a1, "unlockDate"));
    else
      Date.init()(v20);
    v22 = v47;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)a3 + v13[10], v10, v5);
    v23 = objc_msgSend(a1, "aksToken");
    if (v23)
    {
      v24 = v23;
      v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

      v28 = (uint64_t *)((char *)a3 + v13[7]);
      *v28 = v25;
      v28[1] = v27;
      if (qword_1007B4000 != -1)
        swift_once(&qword_1007B4000, sub_1003BBE48);
      v29 = type metadata accessor for Logger(0);
      sub_100221DF8(v29, (uint64_t)qword_1007BE200);
      v30 = a1;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(12, -1);
        v47 = swift_slowAlloc(32, -1);
        v51 = v47;
        *(_DWORD *)v33 = 136315138;
        v45 = v33 + 4;
        v34 = objc_msgSend(v30, "unlockDate");
        v35 = v46;
        Date.init(timeIntervalSince1970:)(v34);
        v36 = sub_1003C731C();
        v37 = dispatch thunk of CustomStringConvertible.description.getter(v5, v36);
        v38 = v22;
        v40 = v39;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v5);
        v49 = sub_100228BD8(v37, (unint64_t)v40, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v45);

        swift_bridgeObjectRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "got remote unlock date: %s", v33, 0xCu);
        v41 = v47;
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

      }
      sub_1002443C8(v48, _s14MacUnlockPhoneV18InitialLockContextVMa);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v42 = sub_100244304();
    v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0, 0);
    *(_DWORD *)v44 = 1;
    *(_QWORD *)(v44 + 8) = 0xD000000000000011;
    *(_QWORD *)(v44 + 16) = 0x80000001006191B0;
    swift_willThrow(v43);

    sub_1002443C8(v48, _s14MacUnlockPhoneV18InitialLockContextVMa);
    swift_bridgeObjectRelease(*a3);
    sub_10000D0F0(v14, &qword_1007C4330);
    sub_10000D0F0(v16, &qword_1007C4330);

  }
}

uint64_t sub_1003C60EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1003C612C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10027ACA0(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1003C6140(uint64_t a1, uint64_t a2)
{
  return sub_1002429A0(a1, a2, (uint64_t (*)(void))sub_1003C5AF4);
}

id sub_1003C615C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 36);
  v2 = *(void **)(v0 + v1);
  if (v2)
  {
    v3 = *(id *)(v0 + v1);
LABEL_5:
    v5 = v2;
    return v3;
  }
  result = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationToken), "init");
  if (result)
  {
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1003C61C8(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_100008384(&qword_1007B5B28);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1005CF250;
  if (qword_1007B4008 != -1)
    swift_once(&qword_1007B4008, LongHash.storage.getter);
  *(_QWORD *)(v7 + 56) = &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
  *(_QWORD *)(v7 + 64) = &off_1007BB220;
  *(_QWORD *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendTokenMessage;
  *(_QWORD *)(v7 + 104) = &off_1007BB200;
  *a3 = (const char *)v7;
  v8 = (int *)_s14MacUnlockPhoneV21HandleResponseContextVMa(0);
  *(_DWORD *)((char *)a3 + v8[7]) = 34;
  v9 = v8[9];
  *(const char **)((char *)a3 + v9) = 0;
  *((_BYTE *)a3 + v8[10]) = 7;
  if (objc_msgSend(a1, "hasAksToken"))
  {
    v10 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
    sub_100244418(a2 + *(int *)(v10 + 24), (uint64_t)(a3 + 1));
    sub_100244384(a2 + *(int *)(v10 + 20), (uint64_t)a3 + v8[6], type metadata accessor for SDAuthenticationSessionMetrics);
    v11 = objc_msgSend(a1, "aksToken");
    if (v11)
    {
      v12 = v11;
      v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      sub_1002443C8(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
      v16 = (uint64_t *)((char *)a3 + v8[8]);
      *v16 = v13;
      v16[1] = v15;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v17 = sub_100244304();
    v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0, 0);
    *(_DWORD *)v19 = 1;
    *(_QWORD *)(v19 + 8) = 0xD000000000000019;
    *(_QWORD *)(v19 + 16) = 0x8000000100612930;
    swift_willThrow(v18);

    sub_1002443C8(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    swift_bridgeObjectRelease(*a3);

  }
}

uint64_t sub_1003C63CC(uint64_t a1, uint64_t a2)
{
  return sub_1002429A0(a1, a2, (uint64_t (*)(void))sub_1003C615C);
}

id sub_1003C63E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = *(int *)(_s14MacUnlockPhoneV18HandleTokenContextVMa(0) + 32);
  v2 = *(void **)(v0 + v1);
  if (v2)
  {
    v3 = *(id *)(v0 + v1);
LABEL_5:
    v5 = v2;
    return v3;
  }
  result = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationConfirmation), "init");
  if (result)
  {
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1003C6454(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_100008384(&qword_1007B5B28);
  v7 = swift_allocObject(v6, 152, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1005CF140;
  if (qword_1007B4008 != -1)
    swift_once(&qword_1007B4008, LongHash.storage.getter);
  *(_QWORD *)(v7 + 56) = &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
  *(_QWORD *)(v7 + 64) = &off_1007BB1E0;
  *(_QWORD *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(_QWORD *)(v7 + 104) = &off_1007BB1C0;
  *(_QWORD *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(_QWORD *)(v7 + 144) = &off_1007BB1A0;
  *a3 = (const char *)v7;
  v8 = (int *)_s14MacUnlockPhoneV18HandleTokenContextVMa(0);
  v9 = v8[8];
  *(const char **)((char *)a3 + v9) = 0;
  *((_BYTE *)a3 + v8[9]) = 2;
  if (objc_msgSend(a1, "hasAksToken"))
  {
    sub_100244418(a2 + 8, (uint64_t)(a3 + 1));
    v10 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0);
    sub_100244384(a2 + *(int *)(v10 + 24), (uint64_t)a3 + v8[6], type metadata accessor for SDAuthenticationSessionMetrics);
    v11 = objc_msgSend(a1, "aksToken");
    if (v11)
    {
      v12 = v11;
      v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      sub_1002443C8(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
      v16 = (uint64_t *)((char *)a3 + v8[7]);
      *v16 = v13;
      v16[1] = v15;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v17 = sub_100244304();
    v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0, 0);
    *(_DWORD *)v19 = 1;
    *(_QWORD *)(v19 + 8) = 0xD000000000000019;
    *(_QWORD *)(v19 + 16) = 0x8000000100612930;
    swift_willThrow(v18);

    sub_1002443C8(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    swift_bridgeObjectRelease(*a3);

  }
}

uint64_t sub_1003C6658(uint64_t a1, uint64_t a2)
{
  return sub_1002429A0(a1, a2, (uint64_t (*)(void))sub_1003C63E8);
}

void sub_1003C6674(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_100008384(&qword_1007B5B28);
  v7 = swift_allocObject(v6, 152, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1005CF140;
  if (qword_1007B4008 != -1)
    swift_once(&qword_1007B4008, LongHash.storage.getter);
  *(_QWORD *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(_QWORD *)(v7 + 64) = &off_1007BB180;
  *(_QWORD *)(v7 + 96) = &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
  *(_QWORD *)(v7 + 104) = &off_1007BB080;
  *(_QWORD *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(_QWORD *)(v7 + 144) = &off_1007BB1A0;
  *a3 = (const char *)v7;
  if ((objc_msgSend(a1, "hasSuccess") & 1) != 0)
  {
    sub_100244418(a2 + 8, (uint64_t)(a3 + 1));
    v8 = a2 + *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 24);
    v9 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0);
    sub_100244384(v8, (uint64_t)a3 + *(int *)(v9 + 24), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = objc_msgSend(a1, "success");

    sub_1002443C8(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + 28)) = v8;
  }
  else
  {
    v10 = sub_100244304();
    v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0, 0);
    *(_DWORD *)v12 = 1;
    *(_QWORD *)(v12 + 8) = 0xD000000000000016;
    *(_QWORD *)(v12 + 16) = 0x8000000100612950;
    swift_willThrow(v11);

    sub_1002443C8(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    swift_bridgeObjectRelease(*a3);
  }
}

void sub_1003C683C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char **v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  int v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  id v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  const char **v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  const char **v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  const char **v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  unint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  const char **v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char **v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  const char **v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[48];
  void *v125;

  v123 = a2;
  v118 = a3;
  v102 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v102);
  v106 = (const char **)((char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100008384(&qword_1007BE4A0);
  __chkstk_darwin(v5);
  v111 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = _s14MacUnlockPhoneV18HandleTokenContextVMa(0);
  __chkstk_darwin(v103);
  v110 = (const char **)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100008384(&qword_1007BE4A8);
  __chkstk_darwin(v8);
  v117 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = _s14MacUnlockPhoneV21HandleResponseContextVMa(0);
  v109 = *(_QWORD *)(v112 - 8);
  v10 = __chkstk_darwin(v112);
  v104 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v105 = (uint64_t)&v102 - v13;
  __chkstk_darwin(v12);
  v116 = (const char **)((char *)&v102 - v14);
  v15 = sub_100008384(&qword_1007BE4B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
  v120 = *(_QWORD *)(v18 - 8);
  v121 = v18;
  v19 = __chkstk_darwin(v18);
  v114 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v115 = (uint64_t)&v102 - v21;
  v119 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0);
  v113 = *(_QWORD *)(v119 - 8);
  v22 = __chkstk_darwin(v119);
  v107 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v108 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  v27 = (const char **)((char *)&v102 - v26);
  v28 = sub_100008384(&qword_1007BE4B8);
  __chkstk_darwin(v28);
  v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = _s14MacUnlockPhoneV18InitialLockContextVMa(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v37 = (char *)&v102 - v36;
  v38 = a1;
  sub_100244418(a1, (uint64_t)v124);
  v39 = sub_100008384(&qword_1007B5D40);
  v40 = sub_100221EDC(0, &qword_1007B5D50, off_1007112C0);
  if (swift_dynamicCast(&v125, v124, v39, v40, 6))
  {
    v41 = v125;
    sub_100244418(v123, (uint64_t)v124);
    v42 = sub_100008384(&qword_1007B5D70);
    v43 = swift_dynamicCast(v30, v124, v42, v31, 6);
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v43)
    {
      v44(v30, 0, 1, v31);
      sub_100221DB4((uint64_t)v30, (uint64_t)v37, _s14MacUnlockPhoneV18InitialLockContextVMa);
      sub_100244384((uint64_t)v37, (uint64_t)v35, _s14MacUnlockPhoneV18InitialLockContextVMa);
      v45 = v41;
      v46 = v122;
      sub_1003C5B60(v45, (uint64_t)v35, v27);
      if (v46)
      {
        v47 = _s14MacUnlockPhoneV18InitialLockContextVMa;
        v48 = (uint64_t)v37;
LABEL_21:
        sub_1002443C8(v48, v47);

        return;
      }
      v87 = v118;
      v118[3] = v119;
      v87[4] = &off_100726848;
      v88 = sub_100244348(v87);
      sub_100221DB4((uint64_t)v27, (uint64_t)v88, _s14MacUnlockPhoneV20HandleRequestContextVMa);

      v89 = _s14MacUnlockPhoneV18InitialLockContextVMa;
      v90 = (uint64_t)v37;
      goto LABEL_30;
    }
    v44(v30, 1, 1, v31);
    sub_10000D0F0((uint64_t)v30, &qword_1007BE4B8);
    v60 = sub_100244304();
    v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v60, 0, 0);
    *(_DWORD *)v62 = 10;
    v63 = 0xD000000000000047;
    v64 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_10:
    *(_QWORD *)(v62 + 8) = v63;
    *(_QWORD *)(v62 + 16) = (unint64_t)(v64 - 32) | 0x8000000000000000;
    swift_willThrow(v61);

    return;
  }
  v49 = v123;
  sub_100244418(v38, (uint64_t)v124);
  v50 = sub_100221EDC(0, &qword_1007B5D58, off_1007112C8);
  if (swift_dynamicCast(&v125, v124, v39, v50, 6))
  {
    v51 = v125;
    sub_100244418(v49, (uint64_t)v124);
    v52 = sub_100008384(&qword_1007B5D70);
    v53 = v121;
    v54 = swift_dynamicCast(v17, v124, v52, v121, 6);
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
    if (!v54)
    {
      v55(v17, 1, 1, v53);
      sub_10000D0F0((uint64_t)v17, &qword_1007BE4B0);
      v75 = sub_100244304();
      v76 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v75, 0, 0);
      *(_DWORD *)v77 = 10;
      *(_QWORD *)(v77 + 8) = 0xD000000000000046;
      *(_QWORD *)(v77 + 16) = 0x8000000100612820;
      swift_willThrow(v76);

      return;
    }
    v55(v17, 0, 1, v53);
    v56 = v115;
    sub_100221DB4((uint64_t)v17, v115, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    v57 = v114;
    sub_100244384(v56, v114, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    v45 = v51;
    v58 = v116;
    v59 = v122;
    sub_1003C61C8(v45, v57, v116);
    if (v59)
    {
      v47 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
      v48 = v56;
      goto LABEL_21;
    }
    v95 = v118;
    v118[3] = v112;
    v95[4] = &off_1007264A0;
    v96 = sub_100244348(v95);
    sub_100221DB4((uint64_t)v58, (uint64_t)v96, _s14MacUnlockPhoneV21HandleResponseContextVMa);

    v89 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
    v90 = v56;
    goto LABEL_30;
  }
  sub_100244418(v38, (uint64_t)v124);
  v65 = sub_100221EDC(0, &qword_1007B5D60, off_1007112D0);
  if (swift_dynamicCast(&v125, v124, v39, v65, 6))
  {
    v41 = v125;
    sub_100244418(v49, (uint64_t)v124);
    v66 = sub_100008384(&qword_1007B5D70);
    v67 = (uint64_t)v117;
    v68 = v119;
    v69 = swift_dynamicCast(v117, v124, v66, v119, 6);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    if (!v69)
    {
      v70(v67, 1, 1, v68);
      sub_10000D0F0(v67, &qword_1007BE4A8);
      v91 = sub_100244304();
      v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v91, 0, 0);
      *(_DWORD *)v62 = 10;
      v63 = 0xD000000000000049;
      v64 = "Invalid previous context as HandleRequestContext, message may be replayed";
      goto LABEL_10;
    }
    v70(v67, 0, 1, v68);
    v71 = v108;
    sub_100221DB4(v67, v108, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    v72 = v107;
    sub_100244384(v71, v107, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    v45 = v41;
    v73 = v110;
    v74 = v122;
    sub_1003C6454(v45, v72, v110);
    if (v74)
    {
      v47 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
LABEL_20:
      v48 = v71;
      goto LABEL_21;
    }
    v98 = v118;
    v118[3] = v103;
    v98[4] = &off_100726858;
    v99 = sub_100244348(v98);
    sub_100221DB4((uint64_t)v73, (uint64_t)v99, _s14MacUnlockPhoneV18HandleTokenContextVMa);

    v89 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
  }
  else
  {
    sub_100244418(v38, (uint64_t)v124);
    v78 = sub_100221EDC(0, &qword_1007B5D68, off_1007112A8);
    if (!swift_dynamicCast(&v125, v124, v39, v78, 6))
    {
      v92 = sub_100244304();
      v93 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v92, 0, 0);
      *(_DWORD *)v94 = 10;
      *(_QWORD *)(v94 + 8) = 0xD00000000000001FLL;
      *(_QWORD *)(v94 + 16) = 0x8000000100612670;
      swift_willThrow(v93);
      return;
    }
    v41 = v125;
    sub_100244418(v49, (uint64_t)v124);
    v79 = sub_100008384(&qword_1007B5D70);
    v81 = (uint64_t)v111;
    v80 = v112;
    v82 = swift_dynamicCast(v111, v124, v79, v112, 6);
    v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
    if (!v82)
    {
      v83(v81, 1, 1, v80);
      sub_10000D0F0(v81, &qword_1007BE4A0);
      v97 = sub_100244304();
      v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v97, 0, 0);
      *(_DWORD *)v62 = 10;
      v63 = 0xD00000000000004ALL;
      v64 = "Invalid previous context as HandleResponseContext, message may be replayed";
      goto LABEL_10;
    }
    v83(v81, 0, 1, v80);
    v71 = v105;
    sub_100221DB4(v81, v105, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    v84 = v104;
    sub_100244384(v71, v104, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    v45 = v41;
    v85 = v106;
    v86 = v122;
    sub_1003C6674(v45, v84, v106);
    if (v86)
    {
      v47 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
      goto LABEL_20;
    }
    v100 = v118;
    v118[3] = v102;
    v100[4] = &off_100726868;
    v101 = sub_100244348(v100);
    sub_100221DB4((uint64_t)v85, (uint64_t)v101, _s14MacUnlockPhoneV25HandleConfirmationContextVMa);

    v89 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
  }
  v90 = v71;
LABEL_30:
  sub_1002443C8(v90, v89);
}

void sub_1003C72CC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1003C683C(a1, a2, a3);
}

uint64_t _s14MacUnlockPhoneV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE668, (uint64_t)&_s14MacUnlockPhoneV25HandleConfirmationContextVMn);
}

uint64_t _s14MacUnlockPhoneV18HandleTokenContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE5C8, (uint64_t)&_s14MacUnlockPhoneV18HandleTokenContextVMn);
}

uint64_t _s14MacUnlockPhoneV20HandleRequestContextVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE518, (uint64_t)&_s14MacUnlockPhoneV20HandleRequestContextVMn);
}

unint64_t sub_1003C731C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BCF90;
  if (!qword_1007BCF90)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, &qword_1007BCF90);
  }
  return result;
}

char *sub_1003C7364(char *a1, uint64_t a2, int *a3)
{
  int v4;
  const char *v5;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  const char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  const char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  double v85;
  uint64_t v86;
  char *v87;
  const void *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  const void *v92;
  uint64_t v93;
  void (*v94)(char *, const void *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  int *v100;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2 + 8;
    v9 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 2) = v9;
    v10 = v9;
    v11 = **(void (***)(char *, uint64_t, uint64_t, __n128))(v9 - 8);
    v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = (char *)(a2 + v13);
    v16 = type metadata accessor for Date(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v100 = a3;
    if (v18(v15, 1, v16))
    {
      v19 = sub_100008384(&qword_1007C4330);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
    v21 = v20[5];
    v22 = &v14[v21];
    v23 = &v15[v21];
    if (v18(&v15[v21], 1, v16))
    {
      v24 = sub_100008384(&qword_1007C4330);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    v25 = v20[6];
    v26 = &v14[v25];
    v27 = &v15[v25];
    if (v18(&v15[v25], 1, v16))
    {
      v28 = sub_100008384(&qword_1007C4330);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    }
    v29 = v20[7];
    v30 = &v14[v29];
    v31 = &v15[v29];
    if (v18(&v15[v29], 1, v16))
    {
      v32 = sub_100008384(&qword_1007C4330);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
    }
    v33 = v20[8];
    v34 = &v14[v33];
    v35 = &v15[v33];
    if (v18(&v15[v33], 1, v16))
    {
      v36 = sub_100008384(&qword_1007C4330);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
    }
    v37 = v20[9];
    v38 = &v14[v37];
    v39 = &v15[v37];
    if (v18(&v15[v37], 1, v16))
    {
      v40 = sub_100008384(&qword_1007C4330);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v39, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v38, 0, 1, v16);
    }
    v41 = v20[10];
    v42 = &v14[v41];
    v43 = &v15[v41];
    if (v18(&v15[v41], 1, v16))
    {
      v44 = sub_100008384(&qword_1007C4330);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v42, v43, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v42, 0, 1, v16);
    }
    v45 = v20[11];
    v46 = &v14[v45];
    v47 = &v15[v45];
    if (v18(&v15[v45], 1, v16))
    {
      v48 = sub_100008384(&qword_1007C4330);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v46, v47, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
    }
    v49 = v20[12];
    v50 = &v14[v49];
    v51 = &v15[v49];
    if (v18(&v15[v49], 1, v16))
    {
      v52 = sub_100008384(&qword_1007C4330);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v51, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v50, 0, 1, v16);
    }
    v14[v20[13]] = v15[v20[13]];
    v53 = v20[14];
    v54 = &v14[v53];
    v55 = &v15[v53];
    if (v18(&v15[v53], 1, v16))
    {
      v56 = sub_100008384(&qword_1007C4330);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v55, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v54, 0, 1, v16);
    }
    v57 = v20[15];
    v58 = &v14[v57];
    v59 = &v15[v57];
    if (v18(&v15[v57], 1, v16))
    {
      v60 = sub_100008384(&qword_1007C4330);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v58, v59, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v58, 0, 1, v16);
    }
    v61 = v20[16];
    v62 = &v14[v61];
    v63 = &v15[v61];
    if (v18(&v15[v61], 1, v16))
    {
      v64 = sub_100008384(&qword_1007C4330);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v62, v63, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v62, 0, 1, v16);
    }
    v65 = v20[17];
    v66 = &v14[v65];
    v67 = &v15[v65];
    if (v18(&v15[v65], 1, v16))
    {
      v68 = sub_100008384(&qword_1007C4330);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v66, v67, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v66, 0, 1, v16);
    }
    v69 = v20[18];
    v70 = &v14[v69];
    v71 = &v15[v69];
    *(_DWORD *)v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v14[v20[19]] = v15[v20[19]];
    v72 = v20[20];
    v73 = &v14[v72];
    v74 = &v15[v72];
    v75 = (const char *)*((_QWORD *)v74 + 1);
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    v76 = v20[21];
    v77 = &v14[v76];
    v78 = &v15[v76];
    v79 = (const char *)*((_QWORD *)v78 + 1);
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *((_QWORD *)v77 + 1) = v79;
    v80 = v100[7];
    v81 = (uint64_t *)&a1[v80];
    v82 = (uint64_t *)(a2 + v80);
    v83 = *v82;
    v84 = v82[1];
    *(_QWORD *)&v85 = swift_bridgeObjectRetain(v75).n128_u64[0];
    swift_bridgeObjectRetain(v79, v85);
    sub_10022E4A8(v83, v84);
    *v81 = v83;
    v81[1] = v84;
    v86 = v100[8];
    v87 = &a1[v86];
    v88 = (const void *)(a2 + v86);
    if (v18((char *)(a2 + v86), 1, v16))
    {
      v89 = sub_100008384(&qword_1007C4330);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v87, v88, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v87, 0, 1, v16);
    }
    v90 = v100[9];
    v91 = &a1[v90];
    v92 = (const void *)(a2 + v90);
    if (v18((char *)(a2 + v90), 1, v16))
    {
      v93 = sub_100008384(&qword_1007C4330);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(&a1[v100[10]], a2 + v100[10], v16);
    }
    else
    {
      v94 = *(void (**)(char *, const void *, uint64_t))(v17 + 16);
      v94(v91, v92, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v91, 0, 1, v16);
      v94(&a1[v100[10]], (const void *)(a2 + v100[10]), v16);
    }
    v95 = v100[11];
    v96 = v100[12];
    v97 = *(void **)(a2 + v95);
    *(_QWORD *)&a1[v95] = v97;
    a1[v96] = *(_BYTE *)(a2 + v96);
    v98 = v97;
  }
  return a1;
}

void sub_1003C7B80(const char **a1, int *a2)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  int *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double v22;
  char *v23;
  char *v24;
  unsigned int v25;
  void (*v26)(char *, uint64_t);

  v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10022E75C(v4);
  v5 = (char *)a1 + a2[6];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v10 = &v5[v9[5]];
  if (!v8(v10, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v11 = &v5[v9[6]];
  if (!v8(v11, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v12 = &v5[v9[7]];
  if (!v8(v12, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v13 = &v5[v9[8]];
  if (!v8(v13, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v14 = &v5[v9[9]];
  if (!v8(v14, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v15 = &v5[v9[10]];
  if (!v8(v15, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  v16 = &v5[v9[11]];
  if (!v8(v16, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  v17 = &v5[v9[12]];
  if (!v8(v17, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  v18 = &v5[v9[14]];
  if (!v8(v18, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  v19 = &v5[v9[15]];
  if (!v8(v19, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  v20 = &v5[v9[16]];
  if (!v8(v20, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  v21 = &v5[v9[17]];
  if (!v8(v21, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v5[v9[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v5[v9[21] + 8], v22);
  sub_100225AB4(*(uint64_t *)((char *)a1 + a2[7]), *(unint64_t *)((char *)a1 + a2[7] + 8));
  v23 = (char *)a1 + a2[8];
  if (!v8(v23, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
  v24 = (char *)a1 + a2[9];
  v25 = v8(v24, 1, v6);
  v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  if (!v25)
    v26(v24, v6);
  v26((char *)a1 + a2[10], v6);

}

uint64_t sub_1003C7EC8(uint64_t a1, uint64_t a2, int *a3)
{
  const char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  const char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  const char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  double v84;
  uint64_t v85;
  void *v86;
  const void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const void *v91;
  uint64_t v92;
  void (*v93)(void *, const void *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  int *v99;

  v6 = *(const char **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = a2 + 8;
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  v12 = a3[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v99 = a3;
  if (v17(v14, 1, v15))
  {
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v20 = v19[5];
  v21 = &v13[v20];
  v22 = &v14[v20];
  if (v17(&v14[v20], 1, v15))
  {
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  }
  v24 = v19[6];
  v25 = &v13[v24];
  v26 = &v14[v24];
  if (v17(&v14[v24], 1, v15))
  {
    v27 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  v28 = v19[7];
  v29 = &v13[v28];
  v30 = &v14[v28];
  if (v17(&v14[v28], 1, v15))
  {
    v31 = sub_100008384(&qword_1007C4330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
  }
  v32 = v19[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  if (v17(&v14[v32], 1, v15))
  {
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  v36 = v19[9];
  v37 = &v13[v36];
  v38 = &v14[v36];
  if (v17(&v14[v36], 1, v15))
  {
    v39 = sub_100008384(&qword_1007C4330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
  }
  v40 = v19[10];
  v41 = &v13[v40];
  v42 = &v14[v40];
  if (v17(&v14[v40], 1, v15))
  {
    v43 = sub_100008384(&qword_1007C4330);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v15);
  }
  v44 = v19[11];
  v45 = &v13[v44];
  v46 = &v14[v44];
  if (v17(&v14[v44], 1, v15))
  {
    v47 = sub_100008384(&qword_1007C4330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
  }
  v48 = v19[12];
  v49 = &v13[v48];
  v50 = &v14[v48];
  if (v17(&v14[v48], 1, v15))
  {
    v51 = sub_100008384(&qword_1007C4330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v49, 0, 1, v15);
  }
  v13[v19[13]] = v14[v19[13]];
  v52 = v19[14];
  v53 = &v13[v52];
  v54 = &v14[v52];
  if (v17(&v14[v52], 1, v15))
  {
    v55 = sub_100008384(&qword_1007C4330);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
  }
  v56 = v19[15];
  v57 = &v13[v56];
  v58 = &v14[v56];
  if (v17(&v14[v56], 1, v15))
  {
    v59 = sub_100008384(&qword_1007C4330);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
  }
  v60 = v19[16];
  v61 = &v13[v60];
  v62 = &v14[v60];
  if (v17(&v14[v60], 1, v15))
  {
    v63 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v61, 0, 1, v15);
  }
  v64 = v19[17];
  v65 = &v13[v64];
  v66 = &v14[v64];
  if (v17(&v14[v64], 1, v15))
  {
    v67 = sub_100008384(&qword_1007C4330);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v65, 0, 1, v15);
  }
  v68 = v19[18];
  v69 = &v13[v68];
  v70 = &v14[v68];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  v71 = v19[20];
  v72 = &v13[v71];
  v73 = &v14[v71];
  v74 = (const char *)*((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *((_QWORD *)v72 + 1) = v74;
  v75 = v19[21];
  v76 = &v13[v75];
  v77 = &v14[v75];
  v78 = (const char *)*((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  v79 = v99[7];
  v80 = (uint64_t *)(a1 + v79);
  v81 = (uint64_t *)(a2 + v79);
  v82 = *v81;
  v83 = v81[1];
  *(_QWORD *)&v84 = swift_bridgeObjectRetain(v74).n128_u64[0];
  swift_bridgeObjectRetain(v78, v84);
  sub_10022E4A8(v82, v83);
  *v80 = v82;
  v80[1] = v83;
  v85 = v99[8];
  v86 = (void *)(a1 + v85);
  v87 = (const void *)(a2 + v85);
  if (v17((char *)(a2 + v85), 1, v15))
  {
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v86, v87, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v86, 0, 1, v15);
  }
  v89 = v99[9];
  v90 = (void *)(a1 + v89);
  v91 = (const void *)(a2 + v89);
  if (v17((char *)(a2 + v89), 1, v15))
  {
    v92 = sub_100008384(&qword_1007C4330);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a1 + v99[10], a2 + v99[10], v15);
  }
  else
  {
    v93 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
    v93(v90, v91, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v90, 0, 1, v15);
    v93((void *)(a1 + v99[10]), (const void *)(a2 + v99[10]), v15);
  }
  v94 = v99[11];
  v95 = v99[12];
  v96 = *(void **)(a2 + v94);
  *(_QWORD *)(a1 + v94) = v96;
  *(_BYTE *)(a1 + v95) = *(_BYTE *)(a2 + v95);
  v97 = v96;
  return a1;
}

uint64_t sub_1003C86C0(uint64_t a1, const char **a2, uint64_t a3)
{
  const char *v6;
  _QWORD *v7;
  const char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  const char *v99;
  const char *v100;
  double v101;
  double v102;
  uint64_t v103;
  char *v104;
  char *v105;
  const char *v106;
  const char *v107;
  double v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  char *v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v132;
  int *v133;
  const char **v134;
  uint64_t v135;

  v7 = a2 + 1;
  v6 = *a2;
  v8 = *(const char **)a1;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)&v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10023D490((_QWORD *)(a1 + 8), v7);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v132 = a3;
  v134 = a2;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v20 = v19[5];
  v21 = &v11[v20];
  v22 = &v12[v20];
  v23 = v15(&v11[v20], 1, v13);
  v24 = v15(v22, 1, v13);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
LABEL_12:
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v21, v22, v13);
LABEL_13:
  v26 = v19[6];
  v27 = &v11[v26];
  v28 = &v12[v26];
  v29 = v15(&v11[v26], 1, v13);
  v30 = v15(v28, 1, v13);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
LABEL_18:
    v31 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v27, v28, v13);
LABEL_19:
  v32 = v19[7];
  v33 = &v11[v32];
  v34 = &v12[v32];
  v35 = v15(&v11[v32], 1, v13);
  v36 = v15(v34, 1, v13);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v34, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v33, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
LABEL_24:
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v33, v34, v13);
LABEL_25:
  v38 = v19[8];
  v39 = &v11[v38];
  v40 = &v12[v38];
  v41 = v15(&v11[v38], 1, v13);
  v42 = v15(v40, 1, v13);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v39, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
LABEL_30:
    v43 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v39, v40, v13);
LABEL_31:
  v44 = v19[9];
  v45 = &v11[v44];
  v46 = &v12[v44];
  v47 = v15(&v11[v44], 1, v13);
  v48 = v15(v46, 1, v13);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v45, v46, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v45, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v13);
LABEL_36:
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v45, v46, v13);
LABEL_37:
  v50 = v19[10];
  v51 = &v11[v50];
  v52 = &v12[v50];
  v53 = v15(&v11[v50], 1, v13);
  v54 = v15(v52, 1, v13);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v51, 0, 1, v13);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
LABEL_42:
    v55 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v51, v52, v13);
LABEL_43:
  v56 = v19[11];
  v57 = &v11[v56];
  v58 = &v12[v56];
  v59 = v15(&v11[v56], 1, v13);
  v60 = v15(v58, 1, v13);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v58, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v57, 0, 1, v13);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v57, v13);
LABEL_48:
    v61 = sub_100008384(&qword_1007C4330);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v57, v58, v13);
LABEL_49:
  v62 = v19[12];
  v63 = &v11[v62];
  v64 = &v12[v62];
  v65 = v15(&v11[v62], 1, v13);
  v66 = v15(v64, 1, v13);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v63, 0, 1, v13);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v63, v13);
LABEL_54:
    v67 = sub_100008384(&qword_1007C4330);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v63, v64, v13);
LABEL_55:
  v11[v19[13]] = v12[v19[13]];
  v68 = v19[14];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = v15(&v11[v68], 1, v13);
  v72 = v15(v70, 1, v13);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v69, v70, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v69, 0, 1, v13);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v69, v13);
LABEL_60:
    v73 = sub_100008384(&qword_1007C4330);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v69, v70, v13);
LABEL_61:
  v74 = v19[15];
  v75 = &v11[v74];
  v76 = &v12[v74];
  v77 = v15(&v11[v74], 1, v13);
  v78 = v15(v76, 1, v13);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v75, v76, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v75, 0, 1, v13);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v75, v13);
LABEL_66:
    v79 = sub_100008384(&qword_1007C4330);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v75, v76, v13);
LABEL_67:
  v80 = v19[16];
  v81 = &v11[v80];
  v82 = &v12[v80];
  v83 = v15(&v11[v80], 1, v13);
  v84 = v15(v82, 1, v13);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v81, v82, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v81, 0, 1, v13);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v84)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v81, v13);
LABEL_72:
    v85 = sub_100008384(&qword_1007C4330);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v81, v82, v13);
LABEL_73:
  v86 = v19[17];
  v87 = &v11[v86];
  v88 = &v12[v86];
  v89 = v15(&v11[v86], 1, v13);
  v90 = v15(v88, 1, v13);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v87, v88, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v87, 0, 1, v13);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v87, v13);
LABEL_78:
    v91 = sub_100008384(&qword_1007C4330);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v87, v88, v13);
LABEL_79:
  v92 = v19[18];
  v93 = &v11[v92];
  v94 = &v12[v92];
  v95 = *(_DWORD *)v94;
  v93[4] = v94[4];
  *(_DWORD *)v93 = v95;
  v11[v19[19]] = v12[v19[19]];
  v96 = v19[20];
  v97 = &v11[v96];
  v98 = &v12[v96];
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v99 = (const char *)*((_QWORD *)v98 + 1);
  v100 = (const char *)*((_QWORD *)v97 + 1);
  *((_QWORD *)v97 + 1) = v99;
  *(_QWORD *)&v101 = swift_bridgeObjectRetain(v99, v132, v134).n128_u64[0];
  *(_QWORD *)&v102 = swift_bridgeObjectRelease(v100, v101).n128_u64[0];
  v103 = v19[21];
  v104 = &v11[v103];
  v105 = &v12[v103];
  *(_QWORD *)v104 = *(_QWORD *)v105;
  v106 = (const char *)*((_QWORD *)v105 + 1);
  v107 = (const char *)*((_QWORD *)v104 + 1);
  *((_QWORD *)v104 + 1) = v106;
  *(_QWORD *)&v108 = swift_bridgeObjectRetain(v106, v102).n128_u64[0];
  swift_bridgeObjectRelease(v107, v108);
  v109 = v133[7];
  v110 = (uint64_t *)(a1 + v109);
  v111 = (uint64_t *)(v135 + v109);
  v112 = *v111;
  v113 = v111[1];
  sub_10022E4A8(*v111, v113);
  v114 = *v110;
  v115 = v110[1];
  *v110 = v112;
  v110[1] = v113;
  sub_100225AB4(v114, v115);
  v116 = v133[8];
  v117 = (void *)(a1 + v116);
  v118 = (char *)(v135 + v116);
  LODWORD(v110) = v15((char *)(a1 + v116), 1, v13);
  v119 = v15(v118, 1, v13);
  if ((_DWORD)v110)
  {
    if (!v119)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v117, v118, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v117, 0, 1, v13);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v119)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v117, v13);
LABEL_84:
    v120 = sub_100008384(&qword_1007C4330);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v117, v118, v13);
LABEL_85:
  v121 = v133[9];
  v122 = (void *)(a1 + v121);
  v123 = (char *)(v135 + v121);
  v124 = v15((char *)(a1 + v121), 1, v13);
  v125 = v15(v123, 1, v13);
  if (!v124)
  {
    if (!v125)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v122, v123, v13);
      goto LABEL_91;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v122, v13);
    goto LABEL_90;
  }
  if (v125)
  {
LABEL_90:
    v126 = sub_100008384(&qword_1007C4330);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v122, v123, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v122, 0, 1, v13);
LABEL_91:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1 + v133[10], v135 + v133[10], v13);
  v127 = v133[11];
  v128 = *(void **)(a1 + v127);
  v129 = *(void **)(v135 + v127);
  *(_QWORD *)(a1 + v127) = v129;
  v130 = v129;

  *(_BYTE *)(a1 + v133[12]) = *(_BYTE *)(v135 + v133[12]);
  return a1;
}

uint64_t sub_1003C92E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  void (*v73)(void *, const void *, uint64_t);
  uint64_t v74;
  int *v76;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v76 = a3;
  if (v11(v8, 1, v9))
  {
    v12 = sub_100008384(&qword_1007C4330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v14 = v13[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  v18 = v13[6];
  v19 = &v7[v18];
  v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v22 = v13[7];
  v23 = &v7[v22];
  v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  v26 = v13[8];
  v27 = &v7[v26];
  v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  v30 = v13[9];
  v31 = &v7[v30];
  v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  v34 = v13[10];
  v35 = &v7[v34];
  v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  v38 = v13[11];
  v39 = &v7[v38];
  v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  v42 = v13[12];
  v43 = &v7[v42];
  v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  v46 = v13[14];
  v47 = &v7[v46];
  v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  v50 = v13[15];
  v51 = &v7[v50];
  v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  v54 = v13[16];
  v55 = &v7[v54];
  v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  v58 = v13[17];
  v59 = &v7[v58];
  v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    v61 = sub_100008384(&qword_1007C4330);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  v62 = v13[18];
  v63 = &v7[v62];
  v64 = &v8[v62];
  *(_DWORD *)v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  v65 = v76[8];
  *(_OWORD *)(a1 + v76[7]) = *(_OWORD *)(a2 + v76[7]);
  v66 = (void *)(a1 + v65);
  v67 = (const void *)(a2 + v65);
  if (v11((char *)(a2 + v65), 1, v9))
  {
    v68 = sub_100008384(&qword_1007C4330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
  }
  v69 = v76[9];
  v70 = (void *)(a1 + v69);
  v71 = (const void *)(a2 + v69);
  if (v11((char *)(a2 + v69), 1, v9))
  {
    v72 = sub_100008384(&qword_1007C4330);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + v76[10], a2 + v76[10], v9);
  }
  else
  {
    v73 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v73(v70, v71, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v70, 0, 1, v9);
    v73((void *)(a1 + v76[10]), (const void *)(a2 + v76[10]), v9);
  }
  v74 = v76[12];
  *(_QWORD *)(a1 + v76[11]) = *(_QWORD *)(a2 + v76[11]);
  *(_BYTE *)(a1 + v74) = *(_BYTE *)(a2 + v74);
  return a1;
}

uint64_t sub_1003C9A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  double v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  char *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  char *v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;

  v6 = *(const char **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10022E75C((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 24);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  v123 = a3;
  v125 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100008384(&qword_1007C4330);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v17 = v16[5];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = v12(&v8[v17], 1, v10);
  v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    v22 = sub_100008384(&qword_1007C4330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  v23 = v16[6];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v26 = v12(&v8[v23], 1, v10);
  v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    v28 = sub_100008384(&qword_1007C4330);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  v29 = v16[7];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v32 = v12(&v8[v29], 1, v10);
  v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    v34 = sub_100008384(&qword_1007C4330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  v35 = v16[8];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v38 = v12(&v8[v35], 1, v10);
  v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    v40 = sub_100008384(&qword_1007C4330);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  v41 = v16[9];
  v42 = &v8[v41];
  v43 = &v9[v41];
  v44 = v12(&v8[v41], 1, v10);
  v45 = v12(v43, 1, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    v46 = sub_100008384(&qword_1007C4330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  v47 = v16[10];
  v48 = &v8[v47];
  v49 = &v9[v47];
  v50 = v12(&v8[v47], 1, v10);
  v51 = v12(v49, 1, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    v52 = sub_100008384(&qword_1007C4330);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  v53 = v16[11];
  v54 = &v8[v53];
  v55 = &v9[v53];
  v56 = v12(&v8[v53], 1, v10);
  v57 = v12(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    v58 = sub_100008384(&qword_1007C4330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  v59 = v16[12];
  v60 = &v8[v59];
  v61 = &v9[v59];
  v62 = v12(&v8[v59], 1, v10);
  v63 = v12(v61, 1, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    v64 = sub_100008384(&qword_1007C4330);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  v65 = v16[14];
  v66 = &v8[v65];
  v67 = &v9[v65];
  v68 = v12(&v8[v65], 1, v10);
  v69 = v12(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v66, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    v70 = sub_100008384(&qword_1007C4330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  v71 = v16[15];
  v72 = &v8[v71];
  v73 = &v9[v71];
  v74 = v12(&v8[v71], 1, v10);
  v75 = v12(v73, 1, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v72, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    v76 = sub_100008384(&qword_1007C4330);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  v77 = v16[16];
  v78 = &v8[v77];
  v79 = &v9[v77];
  v80 = v12(&v8[v77], 1, v10);
  v81 = v12(v79, 1, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v78, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    v82 = sub_100008384(&qword_1007C4330);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  v83 = v16[17];
  v84 = &v8[v83];
  v85 = &v9[v83];
  v86 = v12(&v8[v83], 1, v10);
  v87 = v12(v85, 1, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v84, 0, 1, v10);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    v88 = sub_100008384(&qword_1007C4330);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  v89 = v16[18];
  v90 = &v8[v89];
  v91 = &v9[v89];
  *(_DWORD *)v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  v92 = v16[20];
  v93 = &v8[v92];
  v94 = &v9[v92];
  v96 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  v97 = (const char *)*((_QWORD *)v93 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v95;
  *(_QWORD *)&v98 = swift_bridgeObjectRelease(v97, v123, v125).n128_u64[0];
  v99 = v16[21];
  v100 = &v8[v99];
  v101 = &v9[v99];
  v103 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  v104 = (const char *)*((_QWORD *)v100 + 1);
  *(_QWORD *)v100 = v103;
  *((_QWORD *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  v105 = v124[7];
  v106 = *(_QWORD *)(a1 + v105);
  v107 = *(_QWORD *)(a1 + v105 + 8);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(v126 + v105);
  sub_100225AB4(v106, v107);
  v108 = v124[8];
  v109 = (void *)(a1 + v108);
  v110 = (char *)(v126 + v108);
  v111 = v12((char *)(a1 + v108), 1, v10);
  v112 = v12(v110, 1, v10);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v109, v110, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v109, 0, 1, v10);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v112)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v109, v10);
LABEL_84:
    v113 = sub_100008384(&qword_1007C4330);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v109, v110, v10);
LABEL_85:
  v114 = v124[9];
  v115 = (void *)(a1 + v114);
  v116 = (char *)(v126 + v114);
  v117 = v12((char *)(a1 + v114), 1, v10);
  v118 = v12(v116, 1, v10);
  if (!v117)
  {
    if (!v118)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v115, v116, v10);
      goto LABEL_91;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v115, v10);
    goto LABEL_90;
  }
  if (v118)
  {
LABEL_90:
    v119 = sub_100008384(&qword_1007C4330);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v115, v116, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v115, 0, 1, v10);
LABEL_91:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(a1 + v124[10], v126 + v124[10], v10);
  v120 = v124[11];
  v121 = *(void **)(a1 + v120);
  *(_QWORD *)(a1 + v120) = *(_QWORD *)(v126 + v120);

  *(_BYTE *)(a1 + v124[12]) = *(_BYTE *)(v126 + v124[12]);
  return a1;
}

uint64_t sub_1003CA678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CA684);
}

uint64_t sub_1003CA684(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = type metadata accessor for Date(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[10];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1003CA74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CA758);
}

char *sub_1003CA758(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SDAuthenticationSessionMetrics(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_100008384(&qword_1007C4330);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for Date(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[10];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1003CA81C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;

  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[1] = "(";
  v2 = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    v8[3] = &unk_1005D6070;
    sub_10023EB48(319);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      v6 = type metadata accessor for Date(319);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = &unk_1005D6088;
        v13 = &unk_1005D60A0;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1003CA8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CA8FC);
}

uint64_t sub_1003CA900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CA90C);
}

uint64_t sub_1003CA910(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  result = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1005D6070;
    v4[4] = &unk_1005D6088;
    v4[5] = &unk_1005D60A0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *_s14MacUnlockPhoneVMa()
{
  return &_s14MacUnlockPhoneVN;
}

uint64_t sub_1003CA9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CA9C8);
}

uint64_t sub_1003CA9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CA9D8);
}

uint64_t sub_1003CA9DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  result = type metadata accessor for SDAuthenticationSessionMetrics(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1005D6300;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003CAA6C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = a2;
  v3 = type metadata accessor for SFInterventionWorkflow.SprinboardSettings(0);
  v2[12] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[13] = v4;
  v2[14] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003CAACC, 0, 0);
}

uint64_t sub_1003CAACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  double v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v5 = v4(v1, enum case for SFInterventionWorkflow.SprinboardSettings.interventionShouldContinue(_:), v3);
  v6 = SFInterventionWorkflow.SprinboardSettings.rawValue.getter(v5);
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v1, v3);
  v8 = v4(v1, enum case for SFInterventionWorkflow.SprinboardSettings.interventionReply(_:), v3);
  v9 = SFInterventionWorkflow.SprinboardSettings.rawValue.getter(v8);
  v7(v1, v3);
  v10 = sub_10021E744((uint64_t)_swiftEmptyArrayStorage);
  v11 = static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter();
  v13 = v12;
  v14 = SFInterventionWorkflow.rawValue.getter();
  *(_QWORD *)(v0 + 40) = &type metadata for String;
  *(_QWORD *)(v0 + 16) = v14;
  *(_QWORD *)(v0 + 24) = v15;
  sub_10022138C((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
  sub_10046B5EC((_OWORD *)(v0 + 48), v11, v13, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)0x8000000000000000).n128_u64[0];
  swift_bridgeObjectRelease(v13, v17);
  v18 = objc_msgSend(objc_allocWithZone((Class)sub_100008384(&qword_1007BE700)), "init");
  *(_QWORD *)(v0 + 128) = v18;
  v19 = swift_task_alloc(96);
  *(_QWORD *)(v0 + 136) = v19;
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v6;
  *(_OWORD *)(v19 + 32) = xmmword_1005CEE80;
  *(_QWORD *)(v19 + 48) = 0x8000000100612040;
  *(_QWORD *)(v19 + 56) = 0xD00000000000001DLL;
  *(_QWORD *)(v19 + 64) = 0x8000000100619220;
  *(_QWORD *)(v19 + 72) = v10;
  *(_QWORD *)(v19 + 80) = v9;
  *(_QWORD *)(v19 + 88) = 0;
  v20 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 144) = v20;
  v21 = sub_100008384(&qword_1007BAAD8);
  *v20 = v0;
  v20[1] = sub_1003CACE0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 160, 0, 0, 0xD00000000000006ALL, 0x8000000100612060, sub_1003CB614, v19, v21);
}

uint64_t sub_1003CACE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  void *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003CADEC;
  }
  else
  {
    v6 = *(void **)(v2 + 128);
    v5 = *(_QWORD *)(v2 + 136);
    swift_bridgeObjectRelease(*(const char **)(v2 + 120));

    swift_task_dealloc(v5);
    *(_BYTE *)(v2 + 161) = *(_BYTE *)(v2 + 160);
    v4 = sub_1003CAD6C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003CAD6C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;

  v1 = *(_BYTE *)(v0 + 161);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = type metadata accessor for SFInterventionResponse(0);
  v5 = (unsigned int *)&enum case for SFInterventionResponse.reject(_:);
  if ((v1 & 1) != 0)
    v5 = (unsigned int *)&enum case for SFInterventionResponse.accept(_:);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v3, *v5, v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CADEC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));

  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CAE40(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

uint64_t sub_1003CAE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE6A8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE6A8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003CAEE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = a7;
  *(_QWORD *)(v7 + 32) = a5;
  *(_BYTE *)(v7 + 128) = a4;
  v8 = type metadata accessor for SFInterventionResponse(0);
  *(_QWORD *)(v7 + 56) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 64) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 72) = swift_task_alloc(v10);
  *(_QWORD *)(v7 + 80) = swift_task_alloc(v10);
  v11 = type metadata accessor for SFInterventionWorkflow(0);
  *(_QWORD *)(v7 + 88) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 96) = v12;
  *(_QWORD *)(v7 + 104) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003CAF84, 0, 0);
}

uint64_t sub_1003CAF84()
{
  uint64_t v0;
  unsigned int *v1;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 128))
    v1 = (unsigned int *)&enum case for SFInterventionWorkflow.send(_:);
  else
    v1 = (unsigned int *)&enum case for SFInterventionWorkflow.receive(_:);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 104))(*(_QWORD *)(v0 + 104), *v1, *(_QWORD *)(v0 + 88));
  v2 = (_QWORD *)swift_task_alloc(dword_1007BE6FC);
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_1003CB004;
  return sub_1003CAA6C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
}

uint64_t sub_1003CB004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003CB170;
  else
    v3 = sub_1003CB068;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003CB068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 80), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 != enum case for SFInterventionResponse.accept(_:) && v4 != enum case for SFInterventionResponse.reject(_:))
    return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 56));
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 64);
  (*(void (**)(BOOL))(v0 + 40))(v4 == enum case for SFInterventionResponse.accept(_:));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CB170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  if (qword_1007B4010 != -1)
    swift_once(&qword_1007B4010, sub_1003CAE54);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BE6A8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100008384(&qword_1007B5A60);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 24) = sub_100228BD8(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4);
    swift_bridgeObjectRelease(v13, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Intervention UI failed {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_errorRelease(v7);
  }

  v14 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD))(v0 + 40))(0);
  swift_errorRelease(v14);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropUserSafetyInterventionAlert()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary36SDAirDropUserSafetyInterventionAlert);
}

uint64_t sub_1003CB518()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CB53C(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1003CB550()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003CB584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BE6EC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D12C;
  return sub_1003CAEE4(a1, v4, v5, v6, v7, v8, v9);
}

double sub_1003CB614(uint64_t a1)
{
  _QWORD *v1;
  double result;

  *(_QWORD *)&result = sub_100525DAC(a1, (_QWORD *)v1[2], (void *)v1[3], (void *)v1[4], v1[5], (const char *)v1[6], (_QWORD *)v1[7], (const char *)v1[8], v1[9], v1[10], v1[11]).n128_u64[0];
  return result;
}

uint64_t sub_1003CB650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE708);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE708);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double sub_1003CB6E0()
{
  id v0;
  NSString v1;
  id v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double v26;
  _BYTE v27[24];
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];

  v0 = objc_msgSend((id)objc_opt_self(IDSServerBag), "sharedInstance");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (!v2)
  {
    if (qword_1007B4018 != -1)
      swift_once(&qword_1007B4018, sub_1003CB650);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100221DF8(v10, (uint64_t)qword_1007BE708);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v30[0] = v15;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)&v29[0] = sub_100228BD8(0xD000000000000028, 0x8000000100619260, (uint64_t *)v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v29, (char *)v29 + 8, v14 + 4);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    return 2592000.0;
  }
  _bridgeAnyObjectToAny(_:)(v29, v2);
  swift_unknownObjectRelease(v2);
  sub_10022138C(v29, v30);
  sub_10022E77C((uint64_t)v30, (uint64_t)v29);
  if (!swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
  {
    if (qword_1007B4018 != -1)
      swift_once(&qword_1007B4018, sub_1003CB650);
    v16 = type metadata accessor for Logger(0);
    sub_100221DF8(v16, (uint64_t)qword_1007BE708);
    v17 = sub_10022E77C((uint64_t)v30, (uint64_t)v29);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(64, -1);
      v28 = v21;
      *(_DWORD *)v20 = 136315394;
      sub_10022E77C((uint64_t)v29, (uint64_t)&v26);
      v22 = String.init<A>(describing:)(&v26, (char *)&type metadata for Any + 8);
      v24 = v23;
      v26 = COERCE_DOUBLE(sub_100228BD8(v22, v23, &v28));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v20 + 4);
      swift_bridgeObjectRelease(v24);
      sub_10022E75C(v29);
      *(_WORD *)(v20 + 12) = 2080;
      v26 = COERCE_DOUBLE(sub_100228BD8(0xD000000000000028, 0x8000000100619260, &v28));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v20 + 14);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      sub_10022E75C(v29);
    }
    goto LABEL_20;
  }
  v3 = v26;
  if (v26 > 2592000.0)
  {
    if (qword_1007B4018 != -1)
      swift_once(&qword_1007B4018, sub_1003CB650);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007BE708);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(32, -1);
      v9 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v29[0] = v9;
      *(_DWORD *)v8 = 134218498;
      v26 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 4);
      *(_WORD *)(v8 + 12) = 2080;
      v26 = COERCE_DOUBLE(sub_100228BD8(0xD000000000000028, 0x8000000100619260, (uint64_t *)v29));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 14);
      *(_WORD *)(v8 + 22) = 2048;
      v26 = 2592000.0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 24);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Pseudonym properties provider retrieved an invalid IDS Server Bag value %f for key %s greater than %f", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }

LABEL_20:
    sub_10022E75C(v30);
    return 2592000.0;
  }
  sub_10022E75C(v30);
  return v3;
}

uint64_t sub_1003CBC5C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _OWORD v23[2];
  _OWORD v24[2];

  v0 = objc_msgSend((id)objc_opt_self(IDSServerBag), "sharedInstance");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (!v2)
  {
    if (qword_1007B4018 != -1)
      swift_once(&qword_1007B4018, sub_1003CB650);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007BE708);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v24[0] = v9;
      *(_DWORD *)v8 = 136315138;
      *(_QWORD *)&v23[0] = sub_100228BD8(0xD000000000000019, 0x8000000100619240, (uint64_t *)v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v23, (char *)v23 + 8, v8 + 4);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s", v8, 0xCu);
      v3 = 1;
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      return v3;
    }

    return 1;
  }
  _bridgeAnyObjectToAny(_:)(v23, v2);
  swift_unknownObjectRelease(v2);
  sub_10022138C(v23, v24);
  sub_10022E77C((uint64_t)v24, (uint64_t)v23);
  if (!swift_dynamicCast(&v20, v23, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
    if (qword_1007B4018 != -1)
      swift_once(&qword_1007B4018, sub_1003CB650);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007BE708);
    v11 = sub_10022E77C((uint64_t)v24, (uint64_t)v23);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(22, -1);
      v15 = swift_slowAlloc(64, -1);
      v22 = v15;
      *(_DWORD *)v14 = 136315394;
      sub_10022E77C((uint64_t)v23, (uint64_t)&v20);
      v16 = String.init<A>(describing:)(&v20, (char *)&type metadata for Any + 8);
      v18 = (const char *)v17;
      v20 = sub_100228BD8(v16, v17, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v14 + 4);
      swift_bridgeObjectRelease(v18);
      sub_10022E75C(v23);
      *(_WORD *)(v14 + 12) = 2080;
      v20 = sub_100228BD8(0xD000000000000019, 0x8000000100619240, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v14 + 14);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      sub_10022E75C(v23);
    }
    sub_10022E75C(v24);
    return 1;
  }
  v3 = v20;
  sub_10022E75C(v24);
  return v3;
}

ValueMetadata *type metadata accessor for SDPseudonymPropertiesProvider()
{
  return &type metadata for SDPseudonymPropertiesProvider;
}

uint64_t sub_1003CC064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE720);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE720);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003CC0F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BE838) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  v2[6] = swift_task_alloc(v3);
  v2[7] = swift_task_alloc(v3);
  v4 = type metadata accessor for URL(0);
  v2[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[9] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v6);
  v2[11] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v7);
  v2[13] = swift_task_alloc(v7);
  v8 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003CC23C, static AirDropActor.shared, 0);
}

uint64_t sub_1003CC23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  int64_t v74;

  v3 = *(_QWORD *)(v1 + 120);
  v2 = *(_QWORD *)(v1 + 128);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + 72);
    result = SFAirDropReceive.AskRequest.urlItems.getter(v7);
    v10 = 0;
    v71 = result + 56;
    v11 = -1;
    v12 = -1 << *(_BYTE *)(result + 32);
    if (-v12 < 64)
      v11 = ~(-1 << -(char)v12);
    v13 = v11 & *(_QWORD *)(result + 56);
    v72 = (unint64_t)(63 - v12) >> 6;
    v73 = result;
    while (1)
    {
      if (v13)
      {
        v15 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v16 = v15 | (v10 << 6);
      }
      else
      {
        v17 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        if (v17 >= v72)
          goto LABEL_41;
        v18 = *(_QWORD *)(v71 + 8 * v17);
        ++v10;
        if (!v18)
        {
          v10 = v17 + 1;
          if (v17 + 1 >= v72)
            goto LABEL_41;
          v18 = *(_QWORD *)(v71 + 8 * v10);
          if (!v18)
          {
            v10 = v17 + 2;
            if (v17 + 2 >= v72)
              goto LABEL_41;
            v18 = *(_QWORD *)(v71 + 8 * v10);
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v72)
              {
LABEL_41:
                (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 104), 1, 1, *(_QWORD *)(v1 + 64));
LABEL_42:
                v53 = swift_release(v73);
                v54 = *(_QWORD *)(v1 + 96);
                v55 = *(_QWORD *)(v1 + 64);
                v56 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v53);
                sub_100298F1C((uint64_t)v56, v54);
                v57 = swift_bridgeObjectRelease(v56);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v54, 1, v55, v57) == 1)
                {
                  sub_10000D0F0(*(_QWORD *)(v1 + 96), (uint64_t *)&unk_1007B5200);
                }
                else
                {
                  v58 = *(_QWORD *)(v1 + 80);
                  v59 = *(_QWORD *)(v1 + 64);
                  v60 = *(_QWORD *)(v1 + 24);
                  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v58, *(_QWORD *)(v1 + 96), v59);
                  v61 = sub_1003CD2C0(v58);
                  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v58, v59);
                  v62 = *(void **)(v60 + 16);
                  *(_QWORD *)(v60 + 16) = v61;

                }
                v49 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) != 0;
                goto LABEL_46;
              }
              v18 = *(_QWORD *)(v71 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v10 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_48;
                  if (v10 >= v72)
                    goto LABEL_41;
                  v18 = *(_QWORD *)(v71 + 8 * v10);
                  ++v19;
                  if (v18)
                    goto LABEL_21;
                }
              }
              v10 = v19;
            }
          }
        }
LABEL_21:
        v13 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v10 << 6);
      }
      v20 = *(_QWORD *)(v1 + 104);
      v21 = *(_QWORD *)(v1 + 64);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v20, *(_QWORD *)(v73 + 48) + *(_QWORD *)(v8 + 72) * v16, v21);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v20, 1, v21) == 1)
        goto LABEL_42;
      v74 = v10;
      v22 = *(_QWORD *)(v1 + 88);
      v23 = *(_QWORD *)(v1 + 56);
      v24 = *(_QWORD *)(v1 + 48);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v8 + 32))(v22, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 64));
      URLComponents.init(url:resolvingAgainstBaseURL:)(v22, 0);
      sub_1003CD958(v23, v24);
      v25 = type metadata accessor for URLComponents(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v24, 1, v25);
      v29 = *(_QWORD *)(v1 + 48);
      if (v28 == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v1 + 48), &qword_1007BE838);
LABEL_29:
        sub_1003CD958(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 40));
        goto LABEL_30;
      }
      v30 = URLComponents.scheme.getter();
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
      if (!v32)
        goto LABEL_29;
      v33 = *(_QWORD *)(v1 + 56);
      v34 = *(_QWORD *)(v1 + 40);
      if (v30 == 0xD000000000000013 && v32 == (const char *)0x80000001006193B0)
        break;
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, 0xD000000000000013, 0x80000001006193B0, 0);
      swift_bridgeObjectRelease(v32);
      sub_1003CD958(v33, v34);
      if ((v45 & 1) != 0)
      {
LABEL_36:
        v46 = *(_QWORD *)(v1 + 88);
        v48 = *(_QWORD *)(v1 + 56);
        v47 = *(_QWORD *)(v1 + 64);
        sub_10000D0F0(*(_QWORD *)(v1 + 40), &qword_1007BE838);
        sub_10000D0F0(v48, &qword_1007BE838);
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v46, v47);
        v10 = v74;
      }
      else
      {
LABEL_30:
        v35 = *(_QWORD *)(v1 + 32);
        sub_1003CD958(*(_QWORD *)(v1 + 40), v35);
        v36 = v27(v35, 1, v25);
        v37 = *(_QWORD *)(v1 + 32);
        if (v36 == 1)
        {
          sub_10000D0F0(*(_QWORD *)(v1 + 32), &qword_1007BE838);
LABEL_39:
          v50 = *(_QWORD *)(v1 + 88);
          v52 = *(_QWORD *)(v1 + 56);
          v51 = *(_QWORD *)(v1 + 64);
          sub_10000D0F0(*(_QWORD *)(v1 + 40), &qword_1007BE838);
          sub_10000D0F0(v52, &qword_1007BE838);
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v50, v51);
          swift_bridgeObjectRelease((const char *)0x8000000100619350);
LABEL_40:
          swift_release(v73);
          v49 = 0;
          goto LABEL_46;
        }
        v38 = URLComponents.scheme.getter();
        v40 = v39;
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v37, v25);
        if (!v40)
          goto LABEL_39;
        v41 = *(_QWORD *)(v1 + 88);
        v43 = *(_QWORD *)(v1 + 56);
        v42 = *(_QWORD *)(v1 + 64);
        v44 = *(_QWORD *)(v1 + 40);
        if (v38 == 0xD000000000000010 && v40 == (const char *)0x8000000100619350)
        {
          swift_bridgeObjectRetain(v40);
          sub_10000D0F0(v44, &qword_1007BE838);
          sub_10000D0F0(v43, &qword_1007BE838);
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v41, v42);
          result = swift_bridgeObjectRelease_n(v40, 2);
          v10 = v74;
        }
        else
        {
          v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, 0xD000000000000010, 0x8000000100619350, 0);
          swift_bridgeObjectRetain(v40);
          sub_10000D0F0(v44, &qword_1007BE838);
          sub_10000D0F0(v43, &qword_1007BE838);
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v41, v42);
          result = swift_bridgeObjectRelease_n(v40, 2);
          v10 = v74;
          if ((v14 & 1) == 0)
            goto LABEL_40;
        }
      }
    }
    swift_bridgeObjectRelease(v32);
    sub_1003CD958(v33, v34);
    goto LABEL_36;
  }
  v49 = 0;
LABEL_46:
  v64 = *(_QWORD *)(v1 + 96);
  v63 = *(_QWORD *)(v1 + 104);
  v66 = *(_QWORD *)(v1 + 80);
  v65 = *(_QWORD *)(v1 + 88);
  v68 = *(_QWORD *)(v1 + 48);
  v67 = *(_QWORD *)(v1 + 56);
  v70 = *(_QWORD *)(v1 + 32);
  v69 = *(_QWORD *)(v1 + 40);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v49);
}

void sub_1003CC89C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  Swift::String v23;
  Swift::String v24;
  double v25;
  Swift::String v26;
  Swift::String v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  Swift::String v37;
  Swift::String v38;
  double v39;
  Swift::String v40;
  Swift::String v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t inited;
  uint64_t v68;
  double v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  NSString v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  double v83;
  __int128 v84;
  __int128 v85;
  _BYTE v86[56];
  _BYTE v87[56];
  _BYTE v88[56];
  uint64_t v89;
  unint64_t v90;
  _BYTE v91[56];

  v3 = v2;
  LOBYTE(v4) = a2;
  v5 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)&v7 = swift_bridgeObjectRelease((const char *)v5).n128_u64[0];
  v8 = *(void **)(v2 + 16);
  if (!v8)
    goto LABEL_17;
  v9 = objc_msgSend(v8, "displayName", v7);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = *(void **)(v3 + 16);
  if (v13)
  {
    v14 = objc_msgSend(v13, "passkeyCredential");
    if (v14)
    {
      v15 = v14;
      v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      sub_100225AB4(v16, v18);
      if (!v12)
        goto LABEL_24;
      if (v6 != 1)
      {
LABEL_23:
        swift_bridgeObjectRelease(v12);
LABEL_24:
        v66 = sub_100008384(&qword_1007B7600);
        inited = swift_initStackObject(v66, v88);
        v85 = xmmword_1005CD2A0;
        *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
        *(_QWORD *)(inited + 32) = 0x59454B53534150;
        v68 = inited + 32;
        *(_QWORD *)(inited + 40) = 0xE700000000000000;
        *(_QWORD *)(inited + 48) = v6;
        v89 = 0x545F4E5245444F4DLL;
        v90 = 0xEF524546534E4152;
        *(_QWORD *)&v69 = swift_bridgeObjectRetain((const char *)0xE700000000000000).n128_u64[0];
        swift_bridgeObjectRetain((const char *)inited, v69);
        v70._countAndFlagsBits = 95;
        v70._object = (void *)0xE100000000000000;
        String.append(_:)(v70);
        v71._countAndFlagsBits = 0x59454B53534150;
        v71._object = (void *)0xE700000000000000;
        String.append(_:)(v71);
        swift_bridgeObjectRelease((const char *)0xE700000000000000);
        if (v6 > 1)
        {
          v72._countAndFlagsBits = 0x4C4152554C505FLL;
          v72._object = (void *)0xE700000000000000;
          String.append(_:)(v72);
        }
        swift_bridgeObjectRelease((const char *)inited);
        if ((v4 & 1) != 0)
        {
          v73._countAndFlagsBits = 0x4C4154495041435FLL;
          v73._object = (void *)0xEC00000044455A49;
          String.append(_:)(v73);
        }
        v74._countAndFlagsBits = 0x545845545FLL;
        v74._object = (void *)0xE500000000000000;
        String.append(_:)(v74);
        v75 = (const char *)v90;
        swift_setDeallocating(inited);
        v76 = *(_QWORD *)(inited + 16);
        v77 = sub_100008384(&qword_1007B7608);
        swift_arrayDestroy(v68, v76, v77);
        v78 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v75);
        v12 = (char *)(id)SFLocalizedStringForKey(v78, v79);

        if (!v12)
        {
          __break(1u);
          goto LABEL_32;
        }
LABEL_29:
        v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v49 = v81;

        v82 = sub_100008384((uint64_t *)&unk_1007B86C0);
        v51 = swift_allocObject(v82, 72, 7);
        *(_OWORD *)(v51 + 16) = v85;
        *(_QWORD *)(v51 + 56) = &type metadata for Int;
        *(_QWORD *)(v51 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v51 + 32) = v6;
        v52 = v80;
        goto LABEL_30;
      }
      v19 = sub_100008384(&qword_1007B7600);
      v20 = swift_initStackObject(v19, v86);
      *(_QWORD *)(v20 + 32) = 0xD000000000000012;
      v21 = v20 + 32;
      v84 = xmmword_1005CD2A0;
      *(_OWORD *)(v20 + 16) = xmmword_1005CD2A0;
      v6 = 0x8000000100619390;
      *(_QWORD *)(v20 + 40) = 0x8000000100619390;
      *(_QWORD *)(v20 + 48) = 1;
      v89 = 0x545F4E5245444F4DLL;
      v90 = 0xEF524546534E4152;
      *(_QWORD *)&v22 = swift_bridgeObjectRetain((const char *)0x8000000100619390).n128_u64[0];
      swift_bridgeObjectRetain((const char *)v20, v22);
      v23._countAndFlagsBits = 95;
      v23._object = (void *)0xE100000000000000;
      String.append(_:)(v23);
      v24._countAndFlagsBits = 0xD000000000000012;
      v24._object = (void *)0x8000000100619390;
      String.append(_:)(v24);
      *(_QWORD *)&v25 = swift_bridgeObjectRelease((const char *)v20).n128_u64[0];
      swift_bridgeObjectRelease((const char *)0x8000000100619390, v25);
      if ((v4 & 1) != 0)
      {
        v26._countAndFlagsBits = 0x4C4154495041435FLL;
        v26._object = (void *)0xEC00000044455A49;
        String.append(_:)(v26);
      }
      v27._countAndFlagsBits = 0x545845545FLL;
      v27._object = (void *)0xE500000000000000;
      String.append(_:)(v27);
      v28 = (const char *)v90;
      swift_setDeallocating(v20);
      v29 = *(_QWORD *)(v20 + 16);
      v30 = sub_100008384(&qword_1007B7608);
      swift_arrayDestroy(v21, v29, v30);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v4 = (char *)(id)SFLocalizedStringForKey(v31, v32);

      if (v4)
        goto LABEL_15;
      __break(1u);
    }
  }
  if (!v12)
  {
LABEL_17:
    v53 = sub_100008384(&qword_1007B7600);
    v54 = swift_initStackObject(v53, v91);
    v85 = xmmword_1005CD2A0;
    *(_OWORD *)(v54 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v54 + 32) = 0x49544E4544455243;
    v55 = v54 + 32;
    *(_QWORD *)(v54 + 40) = 0xEA00000000004C41;
    *(_QWORD *)(v54 + 48) = v6;
    v89 = 0x545F4E5245444F4DLL;
    v90 = 0xEF524546534E4152;
    *(_QWORD *)&v56 = swift_bridgeObjectRetain((const char *)0xEA00000000004C41).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v54, v56);
    v57._countAndFlagsBits = 95;
    v57._object = (void *)0xE100000000000000;
    String.append(_:)(v57);
    v58._countAndFlagsBits = 0x49544E4544455243;
    v58._object = (void *)0xEA00000000004C41;
    String.append(_:)(v58);
    swift_bridgeObjectRelease((const char *)0xEA00000000004C41);
    if (v6 > 1)
    {
      v59._countAndFlagsBits = 0x4C4152554C505FLL;
      v59._object = (void *)0xE700000000000000;
      String.append(_:)(v59);
    }
    swift_bridgeObjectRelease((const char *)v54);
    if ((v4 & 1) != 0)
    {
      v60._countAndFlagsBits = 0x4C4154495041435FLL;
      v60._object = (void *)0xEC00000044455A49;
      String.append(_:)(v60);
    }
    v61._countAndFlagsBits = 0x545845545FLL;
    v61._object = (void *)0xE500000000000000;
    String.append(_:)(v61);
    v4 = (char *)v90;
    swift_setDeallocating(v54);
    v62 = *(_QWORD *)(v54 + 16);
    v63 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v55, v62, v63);
    v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    v12 = (char *)(id)SFLocalizedStringForKey(v64, v65);

    if (v12)
      goto LABEL_29;
    __break(1u);
    goto LABEL_23;
  }
  if (v6 != 1)
  {
    swift_bridgeObjectRelease(v12);
    goto LABEL_17;
  }
  v33 = sub_100008384(&qword_1007B7600);
  v34 = swift_initStackObject(v33, v87);
  *(_QWORD *)(v34 + 32) = 0xD000000000000015;
  v35 = v34 + 32;
  v84 = xmmword_1005CD2A0;
  *(_OWORD *)(v34 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v34 + 40) = 0x8000000100619370;
  *(_QWORD *)(v34 + 48) = 1;
  v89 = 0x545F4E5245444F4DLL;
  v90 = 0xEF524546534E4152;
  *(_QWORD *)&v36 = swift_bridgeObjectRetain((const char *)0x8000000100619370).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v34, v36);
  v37._countAndFlagsBits = 95;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0xD000000000000015;
  v38._object = (void *)0x8000000100619370;
  String.append(_:)(v38);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease((const char *)v34).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0x8000000100619370, v39);
  if ((v4 & 1) != 0)
  {
    v40._countAndFlagsBits = 0x4C4154495041435FLL;
    v40._object = (void *)0xEC00000044455A49;
    String.append(_:)(v40);
  }
  v41._countAndFlagsBits = 0x545845545FLL;
  v41._object = (void *)0xE500000000000000;
  String.append(_:)(v41);
  v42 = (const char *)v90;
  swift_setDeallocating(v34);
  v43 = *(_QWORD *)(v34 + 16);
  v44 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v35, v43, v44);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v4 = (char *)(id)SFLocalizedStringForKey(v45, v46);

  if (v4)
  {
LABEL_15:
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v49 = v48;

    v50 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v51 = swift_allocObject(v50, 72, 7);
    *(_OWORD *)(v51 + 16) = v84;
    *(_QWORD *)(v51 + 56) = &type metadata for String;
    *(_QWORD *)(v51 + 64) = sub_100299AB0();
    *(_QWORD *)(v51 + 32) = v10;
    *(_QWORD *)(v51 + 40) = v12;
    v52 = v47;
LABEL_30:
    static String.localizedStringWithFormat(_:_:)(v52, v49, v51);
    *(_QWORD *)&v83 = swift_bridgeObjectRelease(v49).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v51, v83);
    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1003CCFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for URL(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003CD084, static AirDropActor.shared, 0);
}

uint64_t sub_1003CD084()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSURL *v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 16);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "passwordManagerURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);

    if (qword_1007B4020 != -1)
      swift_once(&qword_1007B4020, sub_1003CC064);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007BE720);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Opening password manager url", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 32);

    v12 = (void *)objc_opt_self(SDAirDropHandlerCredentialLinks);
    URL._bridgeToObjectiveC()(v13);
    v15 = v14;
    objc_msgSend(v12, "openPasswordManagerURL:", v14);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v16 = 1;
  }
  else
  {
    if (qword_1007B4020 != -1)
      swift_once(&qword_1007B4020, sub_1003CC064);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007BE720);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "### No credential?", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v16 = 0;
  }
  v22 = *(_QWORD *)(v0 + 48);
  **(_BYTE **)(v0 + 16) = v16;
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1003CD2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  NSURL *v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  NSObject *v29;
  id v30;
  NSURL *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  os_log_type_t v36;
  uint8_t *v37;
  const char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v46;

  v2 = v1;
  v4 = sub_100008384(&qword_1007BE838);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 16);
  v8 = v7;
  if (!v7)
  {
    if (qword_1007B4020 != -1)
      swift_once(&qword_1007B4020, sub_1003CC064);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007BE720);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Grabbing credential from AirDrop handler...", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0);
    v14 = type metadata accessor for URLComponents(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_10000D0F0((uint64_t)v6, &qword_1007BE838);
    }
    else
    {
      v16 = URLComponents.scheme.getter();
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
      if (v18)
      {
        if (v16 == 0xD000000000000010 && v18 == (const char *)0x8000000100619350)
        {
          swift_bridgeObjectRelease(v18);
        }
        else
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, 0xD000000000000010, 0x8000000100619350, 0);
          swift_bridgeObjectRelease(v18);
          if ((v20 & 1) == 0)
            goto LABEL_15;
        }
        URL._bridgeToObjectiveC()(v19);
        v22 = v21;
        v8 = (id)SFSharablePasswordForUnencryptedAirDropURL();

        if (!v8)
          goto LABEL_20;
        goto LABEL_14;
      }
    }
LABEL_15:
    v26 = objc_msgSend((id)objc_opt_self(SDAppleIDAgent), "sharedAgent");
    if (!v26
      || (v27 = v26,
          v24 = objc_msgSend(v26, "myAccount"),
          v27,
          !v24))
    {
      v24 = Logger.logObject.getter(v26);
      v36 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        v38 = "### Failed to grab myAccount?";
        goto LABEL_24;
      }
LABEL_30:
      v8 = 0;
      goto LABEL_31;
    }
    v28 = -[NSObject identity](v24, "identity");
    if (v28)
    {
      v29 = objc_retainAutorelease(v28);
      v30 = -[NSObject copyPrivateKey](v29, "copyPrivateKey");
      if (v30)
      {
        v32 = v30;
        URL._bridgeToObjectiveC()(v31);
        v34 = v33;
        v35 = v32;
        v8 = (id)SFSharablePasswordForEncryptedAirDropURL(v34, v35);

        if (!v8)
        {
LABEL_20:
          v24 = Logger.logObject.getter(v23);
          v36 = static os_log_type_t.error.getter(v24);
          if (os_log_type_enabled(v24, v36))
          {
            v37 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v37 = 0;
            v38 = "Failed to grab credential from AirDrop handler!";
LABEL_24:
            _os_log_impl((void *)&_mh_execute_header, v24, v36, v38, v37, 2u);
            swift_slowDealloc(v37, -1, -1);
            goto LABEL_30;
          }
          goto LABEL_30;
        }
LABEL_14:
        v24 = *(NSObject **)(v2 + 16);
        *(_QWORD *)(v2 + 16) = v8;
        v25 = v8;
LABEL_31:

        goto LABEL_32;
      }
      v39 = Logger.logObject.getter(0);
      v42 = static os_log_type_t.error.getter(v39);
      if (!os_log_type_enabled(v39, v42))
      {

        v8 = 0;
        v24 = v29;
        goto LABEL_31;
      }
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v42, "### Failed to grab myPrivateKey?", v43, 2u);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {
      v39 = Logger.logObject.getter(0);
      v40 = static os_log_type_t.error.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "### Failed to grab myIdentity?", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }
    }

    goto LABEL_30;
  }
LABEL_32:
  v44 = v7;
  return v8;
}

uint64_t type metadata accessor for SDAirDropContentHandlerCredentialLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary38SDAirDropContentHandlerCredentialLinks);
}

uint64_t sub_1003CD7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerCredentialLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003CD7E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BE764);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003CC0F4(a1);
}

void sub_1003CD830(uint64_t a1, char a2)
{
  sub_1003CC89C(a1, a2);
}

uint64_t sub_1003CD850()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = 0;
  swift_retain(v1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6572432077656956, 0xEF6C6169746E6564, &v3, &unk_1007BE830, v1, 0xD00000000000006DLL, 0x80000001006192E0, 84, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_1003CD8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(dword_1007BE82C);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000D12C;
  return sub_1003CCFF4(a1, a2, a3, v3);
}

uint64_t sub_1003CD958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BE838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for SDTempPairingSubService(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003CD9E0 + 4 * byte_1005D6570[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003CDA00 + 4 * byte_1005D6575[v4]))();
}

_BYTE *sub_1003CD9E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003CDA00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003CDA08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003CDA10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003CDA18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003CDA20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingSubService()
{
  return &type metadata for SDTempPairingSubService;
}

_QWORD *sub_1003CDA3C@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1003CDA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003CDB40();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1003CDAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003CDB40();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1003CDAFC()
{
  unint64_t result;

  result = qword_1007BE840;
  if (!qword_1007BE840)
  {
    result = swift_getWitnessTable(&unk_1005D6660, &type metadata for SDTempPairingSubService);
    atomic_store(result, (unint64_t *)&qword_1007BE840);
  }
  return result;
}

unint64_t sub_1003CDB40()
{
  unint64_t result;

  result = qword_1007BE848;
  if (!qword_1007BE848)
  {
    result = swift_getWitnessTable(&unk_1005D65E8, &type metadata for SDTempPairingSubService);
    atomic_store(result, (unint64_t *)&qword_1007BE848);
  }
  return result;
}

uint64_t sub_1003CDB84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  _BYTE v23[168];

  v1 = v0;
  v2 = sub_100008384(&qword_1007BE850);
  inited = swift_initStackObject(v2, v23);
  *(_OWORD *)(inited + 16) = xmmword_1005D0680;
  *(_QWORD *)(inited + 32) = 115;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = 28260;
  *(_QWORD *)(inited + 72) = 0xE200000000000000;
  v5 = (const char *)v0[1];
  *(_QWORD *)(inited + 80) = *v0;
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = 27504;
  *(_QWORD *)(inited + 104) = 0xE200000000000000;
  v6 = v0[2];
  v7 = v1[3];
  swift_bridgeObjectRetain(v5);
  sub_10038D14C(v6, v7);
  v9 = v8;
  v10 = sub_100008384((uint64_t *)&unk_1007BD6A0);
  v11 = sub_1002E7428();
  v12 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v14;
  *(_QWORD *)(inited + 128) = 29793;
  *(_QWORD *)(inited + 136) = 0xE200000000000000;
  sub_10038D14C(v1[4], v1[5]);
  v16 = v15;
  v17 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v10, v11);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(inited + 144) = v17;
  *(_QWORD *)(inited + 152) = v19;
  v20 = sub_10021F7F4(inited);
  return NWTXTRecord.init(_:)(v20, v21);
}

uint64_t sub_1003CDCF8(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  const char *v10;
  unint64_t v11;
  unsigned __int16 v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = (uint64_t)a2;
  swift_bridgeObjectRetain(a2);
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_1002B7890(v4, v5);
  v11 = (unint64_t)v10;
  swift_bridgeObjectRelease((const char *)v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = (unsigned __int16)sub_1003CDDD8(v8, v9, a3);
  swift_bridgeObjectRelease((const char *)v7);
  return v12 & 0x1FF;
}

unsigned __int8 *sub_1003CDDD8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1003CE080(uint64_t a1, const char *a2)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  char **v19;
  unint64_t v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  char *v24;
  Swift::String v25;
  double v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  char *v36;
  Swift::String v37;
  double v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  const char *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 v59;
  unsigned __int8 *v60;
  int v61;
  char v62;
  unsigned __int8 *v63;
  int v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;

  v2 = a2;
  v3 = a1;
  if ((String.count.getter(a1, a2) & 1) != 0)
  {
    swift_bridgeObjectRelease(v2);
    return;
  }
  v4 = String.count.getter(v3, v2);
  v71 = v3;
  if (v4)
  {
    v5 = v4;
    v74 = _swiftEmptyArrayStorage;
    sub_100229A9C(0, v4 & ~(v4 >> 63), 0);
    if (v5 < 0)
    {
LABEL_103:
      __break(1u);
      return;
    }
    v6 = v74;
    v7 = 15;
    do
    {
      v8 = String.subscript.getter(v7, v3, v2);
      v10 = v9;
      v74 = v6;
      v12 = v6[2];
      v11 = v6[3];
      if (v12 >= v11 >> 1)
      {
        sub_100229A9C(v11 > 1, v12 + 1, 1);
        v3 = v71;
        v6 = v74;
      }
      v6[2] = v12 + 1;
      v13 = &v6[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      v7 = String.index(after:)(v7, v3, v2);
      --v5;
    }
    while (v5);
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  v14 = v6[2];
  if (v14)
    v15 = ((v14 - 1) >> 1) + 1;
  else
    v15 = 0;
  v76 = _swiftEmptyArrayStorage;
  sub_100229940(0, v15, 0);
  v16 = _swiftEmptyArrayStorage;
  if (!v14)
  {
LABEL_29:
    swift_bridgeObjectRelease((const char *)v6, v70);
    v43 = v16[2];
    if (!v43)
      goto LABEL_90;
LABEL_30:
    v44 = v2;
    v45 = v16 + 4;
    v46 = v16;
    swift_retain(v16);
    v47 = 0;
    v48 = _swiftEmptyArrayStorage;
    while (1)
    {
      v49 = &v45[2 * v47];
      v50 = *v49;
      v51 = v49[1];
      v52 = HIBYTE(v51) & 0xF;
      v53 = v50 & 0xFFFFFFFFFFFFLL;
      if ((v51 & 0x2000000000000000) != 0)
        v54 = HIBYTE(v51) & 0xF;
      else
        v54 = v50 & 0xFFFFFFFFFFFFLL;
      if (v54)
      {
        if ((v51 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain((const char *)v51);
          LOWORD(v50) = sub_1003CDCF8(v50, (const char *)v51, 16);
          swift_bridgeObjectRelease((const char *)v51);
          if ((v50 & 0x100) == 0)
            goto LABEL_80;
        }
        else if ((v51 & 0x2000000000000000) != 0)
        {
          v74 = (_QWORD *)v50;
          v75 = v51 & 0xFFFFFFFFFFFFFFLL;
          if (v50 == 43)
          {
            if (!v52)
              goto LABEL_101;
            if (!--v52)
              goto LABEL_32;
            LOBYTE(v50) = 0;
            v60 = (unsigned __int8 *)&v74 + 1;
            while (1)
            {
              v61 = *v60;
              v62 = v61 - 48;
              if ((v61 - 48) >= 0xA)
              {
                if ((v61 - 65) < 6)
                {
                  v62 = v61 - 55;
                }
                else
                {
                  if ((v61 - 97) > 5)
                    goto LABEL_78;
                  v62 = v61 - 87;
                }
              }
              if (v50 > 0xFu)
                goto LABEL_78;
              LOBYTE(v50) = v62 + 16 * v50;
              ++v60;
              if (!--v52)
                goto LABEL_79;
            }
          }
          if (v50 == 45)
          {
            if (!v52)
              goto LABEL_100;
            if (!--v52)
              goto LABEL_32;
            LOBYTE(v50) = 0;
            v57 = (unsigned __int8 *)&v74 + 1;
            while (1)
            {
              v58 = *v57;
              v59 = v58 - 48;
              if ((v58 - 48) >= 0xA)
              {
                if ((v58 - 65) < 6)
                {
                  v59 = v58 - 55;
                }
                else
                {
                  if ((v58 - 97) > 5)
                    break;
                  v59 = v58 - 87;
                }
              }
              if (v50 > 0xFu)
                break;
              LODWORD(v50) = 16 * (v50 & 0xF) - v59;
              if ((v50 & 0xFFFFFF00) != 0)
                break;
              ++v57;
              if (!--v52)
                goto LABEL_79;
            }
LABEL_78:
            LOBYTE(v50) = 0;
            LODWORD(v52) = 1;
LABEL_79:
            if ((_DWORD)v52)
              goto LABEL_32;
LABEL_80:
            if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
              v48 = sub_100227EB4(0, v48[2] + 1, 1, v48);
            v67 = v48[2];
            v66 = v48[3];
            if (v67 >= v66 >> 1)
              v48 = sub_100227EB4((_QWORD *)(v66 > 1), v67 + 1, 1, v48);
            v48[2] = v67 + 1;
            *((_BYTE *)v48 + v67 + 32) = v50;
            goto LABEL_32;
          }
          if (v52)
          {
            LOBYTE(v50) = 0;
            v63 = (unsigned __int8 *)&v74;
            while (1)
            {
              v64 = *v63;
              v65 = v64 - 48;
              if ((v64 - 48) >= 0xA)
              {
                if ((v64 - 65) < 6)
                {
                  v65 = v64 - 55;
                }
                else
                {
                  if ((v64 - 97) > 5)
                    goto LABEL_78;
                  v65 = v64 - 87;
                }
              }
              if (v50 > 0xFu)
                goto LABEL_78;
              LOBYTE(v50) = v65 + 16 * v50;
              ++v63;
              if (!--v52)
                goto LABEL_79;
            }
          }
        }
        else
        {
          if ((v50 & 0x1000000000000000) != 0)
            v55 = (unsigned __int8 *)((v51 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v55 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v50, v51);
          v56 = sub_1003CDDD8(v55, v53, 16);
          LOBYTE(v50) = v56;
          if (((v56 >> 8) & 1) == 0)
            goto LABEL_80;
        }
      }
LABEL_32:
      if (++v47 == v43)
      {
        swift_release_n(v46, 2);
        v2 = v44;
        goto LABEL_91;
      }
    }
  }
  v70 = v2;
  v17 = 0;
  v72 = v14;
  v18 = v14 + 1;
  v19 = (char **)(v6 + 7);
  v73 = v18 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    v20 = v17;
    if (v73 == v17)
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
    v21 = v6[2];
    if (v20 >= v21)
      goto LABEL_96;
    if (v20 + 1 >= v21)
      goto LABEL_97;
    v22 = *(v19 - 2);
    v23 = (uint64_t)*(v19 - 1);
    v24 = *v19;
    v74 = *(v19 - 3);
    v75 = (uint64_t)v22;
    swift_bridgeObjectRetain_n(v22, 2);
    swift_bridgeObjectRetain(v24);
    v25._countAndFlagsBits = v23;
    v25._object = v24;
    String.append(_:)(v25);
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v22).n128_u64[0];
    swift_bridgeObjectRelease(v24, v26);
    v27 = v74;
    v76 = v16;
    v28 = v16[2];
    v29 = v16[3];
    if (v28 >= v29 >> 1)
    {
      sub_100229940(v29 > 1, v28 + 1, 1);
      v16 = v76;
    }
    v16[2] = v28 + 1;
    v30 = &v16[2 * v28];
    v30[4] = v27;
    v30[5] = v22;
    v19 += 4;
    v17 = v20 + 2;
    --v15;
  }
  while (v15);
  v31 = v20 + 2;
  if (v20 + 2 < v72)
  {
    v2 = v70;
    while (1)
    {
      v32 = v6[2];
      if (v31 >= v32)
        goto LABEL_98;
      v33 = v31 + 1;
      if (v31 + 1 >= v32)
        goto LABEL_99;
      v34 = *(v19 - 2);
      v35 = (uint64_t)*(v19 - 1);
      v36 = *v19;
      v74 = *(v19 - 3);
      v75 = (uint64_t)v34;
      swift_bridgeObjectRetain_n(v34, 2);
      swift_bridgeObjectRetain(v36);
      v37._countAndFlagsBits = v35;
      v37._object = v36;
      String.append(_:)(v37);
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v34).n128_u64[0];
      swift_bridgeObjectRelease(v36, v38);
      v39 = v74;
      v76 = v16;
      v40 = v16[2];
      v41 = v16[3];
      if (v40 >= v41 >> 1)
      {
        sub_100229940(v41 > 1, v40 + 1, 1);
        v16 = v76;
      }
      v16[2] = v40 + 1;
      v42 = &v16[2 * v40];
      v42[4] = v39;
      v42[5] = v34;
      v19 += 4;
      v31 = v33 + 1;
      if ((uint64_t)(v33 + 1) >= (uint64_t)v72)
        goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease((const char *)v6);
  v2 = v70;
  v43 = v16[2];
  if (v43)
    goto LABEL_30;
LABEL_90:
  swift_release(v16);
  v48 = _swiftEmptyArrayStorage;
LABEL_91:
  v68 = String.count.getter(v71, v2);
  swift_bridgeObjectRelease(v2);
  v69 = v48[2];
  if (!v69)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v68 / v69 == 2)
  {
    sub_100474E80((const char *)v48);
    swift_bridgeObjectRelease((const char *)v48);
  }
  else
  {
    swift_bridgeObjectRelease((const char *)v48, v70);
  }
}

void sub_1003CE6FC(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  uint64_t v46;
  char v47;
  _QWORD v48[3];

  v4 = NWTXTRecord.subscript.getter(115, 0xE100000000000000);
  v6 = v5;
  if (!v5)
  {
    v14 = type metadata accessor for NWTXTRecord(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
LABEL_50:
    v25 = 0;
LABEL_51:
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
LABEL_52:
    *a2 = v6;
    a2[1] = (unint64_t)v25;
    a2[2] = v26;
    a2[3] = v27;
    a2[4] = v28;
    a2[5] = v29;
    return;
  }
  v7 = HIBYTE(v5) & 0xF;
  v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v6) & 0xF;
  else
    v9 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease((const char *)v6);
    goto LABEL_48;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    v11 = sub_1002B7290(v4, v6, 10);
    v13 = v47;
    goto LABEL_46;
  }
  if ((v6 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v4, v6);
    v11 = (uint64_t)sub_1002B7268(v10, v8, 10);
    v13 = v12 & 1;
LABEL_46:
    swift_bridgeObjectRelease((const char *)v6);
    if ((v13 & 1) == 0 && !v11)
    {
      v30 = NWTXTRecord.subscript.getter(28260, 0xE200000000000000);
      v25 = v31;
      if (!v31)
      {
        v37 = type metadata accessor for NWTXTRecord(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(a1, v37);
        v6 = 0;
        goto LABEL_51;
      }
      v6 = v30;
      v32 = NWTXTRecord.subscript.getter(27504, 0xE200000000000000);
      if (v33 && (sub_1003CE080(v32, v33), v35 >> 60 != 15))
      {
        v26 = v34;
        v27 = v35;
        v38 = NWTXTRecord.subscript.getter(29793, 0xE200000000000000);
        if (v39)
        {
          sub_1003CE080(v38, v39);
          v28 = v40;
          v29 = v41;
          v42 = type metadata accessor for NWTXTRecord(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(a1, v42);
          if (v29 >> 60 != 15)
            goto LABEL_52;
        }
        else
        {
          v43 = type metadata accessor for NWTXTRecord(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(a1, v43);
        }
        sub_100225AA0(v26, v27);
      }
      else
      {
        v36 = type metadata accessor for NWTXTRecord(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(a1, v36);
      }
      swift_bridgeObjectRelease(v25);
      goto LABEL_49;
    }
LABEL_48:
    v24 = type metadata accessor for NWTXTRecord(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
LABEL_49:
    v6 = 0;
    goto LABEL_50;
  }
  v48[0] = v4;
  v48[1] = v6 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v7)
      goto LABEL_74;
    if (v7 == 1 || (BYTE1(v4) - 48) > 9u)
      goto LABEL_33;
    v11 = (BYTE1(v4) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_33;
      v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
      v15 = v7 - 3;
      if (v15)
      {
        v16 = (unsigned __int8 *)v48 + 3;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_33;
          v18 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_33;
          v11 = v18 + v17;
          if (__OFADD__(v18, v17))
            goto LABEL_33;
          v13 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_46;
        }
      }
    }
LABEL_45:
    v13 = 0;
    goto LABEL_46;
  }
  if (v4 != 45)
  {
    if (!v7 || (v4 - 48) > 9u)
      goto LABEL_33;
    v11 = (v4 - 48);
    if (v7 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_33;
      v11 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
      v19 = v7 - 2;
      if (v19)
      {
        v20 = (unsigned __int8 *)v48 + 2;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_33;
          v22 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_33;
          v11 = v22 + v21;
          if (__OFADD__(v22, v21))
            goto LABEL_33;
          v13 = 0;
          ++v20;
          if (!--v19)
            goto LABEL_46;
        }
      }
    }
    goto LABEL_45;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(v4) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        v13 = 0;
        v11 = -(uint64_t)(BYTE1(v4) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v4) - 48) <= 9u)
      {
        v11 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
        v23 = v7 - 3;
        if (!v23)
          goto LABEL_45;
        v44 = (unsigned __int8 *)v48 + 3;
        while (1)
        {
          v45 = *v44 - 48;
          if (v45 > 9)
            break;
          v46 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            break;
          v11 = v46 - v45;
          if (__OFSUB__(v46, v45))
            break;
          v13 = 0;
          ++v44;
          if (!--v23)
            goto LABEL_46;
        }
      }
    }
LABEL_33:
    v11 = 0;
    v13 = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_74:
  __break(1u);
}

uint64_t destroy for SDTempPairingTXTRecord(uint64_t a1)
{
  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  sub_100225AB4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return sub_100225AB4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

_QWORD *initializeWithCopy for SDTempPairingTXTRecord(_QWORD *a1, _QWORD *a2)
{
  const char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = (const char *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  swift_bridgeObjectRetain(v4);
  sub_10022E4A8(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  v8 = a2[4];
  v7 = a2[5];
  sub_10022E4A8(v8, v7);
  a1[4] = v8;
  a1[5] = v7;
  return a1;
}

_QWORD *assignWithCopy for SDTempPairingTXTRecord(_QWORD *a1, _QWORD *a2)
{
  const char *v4;
  const char *v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  v4 = (const char *)a2[1];
  v5 = (const char *)a1[1];
  a1[1] = v4;
  *(_QWORD *)&v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  v7 = a2[2];
  v8 = a2[3];
  sub_10022E4A8(v7, v8);
  v9 = a1[2];
  v10 = a1[3];
  a1[2] = v7;
  a1[3] = v8;
  sub_100225AB4(v9, v10);
  v12 = a2[4];
  v11 = a2[5];
  sub_10022E4A8(v12, v11);
  v13 = a1[4];
  v14 = a1[5];
  a1[4] = v12;
  a1[5] = v11;
  sub_100225AB4(v13, v14);
  return a1;
}

_QWORD *assignWithTake for SDTempPairingTXTRecord(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = (const char *)a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_100225AB4(v6, v7);
  v8 = a1[4];
  v9 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100225AB4(v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for SDTempPairingTXTRecord()
{
  return &type metadata for SDTempPairingTXTRecord;
}

uint64_t storeEnumTagSinglePayload for SharingFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1003CED08 + 4 * byte_1005D66B5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1003CED3C + 4 * asc_1005D66B0[v4]))();
}

uint64_t sub_1003CED3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CED44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003CED4CLL);
  return result;
}

uint64_t sub_1003CED58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003CED60);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1003CED64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CED6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingFeatureFlags()
{
  return &type metadata for SharingFeatureFlags;
}

unint64_t sub_1003CED8C()
{
  unint64_t result;

  result = qword_1007BE858;
  if (!qword_1007BE858)
  {
    result = swift_getWitnessTable(&unk_1005D6744, &type metadata for SharingFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1007BE858);
  }
  return result;
}

uint64_t sub_1003CEDD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1003CEDFC + 4 * byte_1005D66BA[a1]))("AirTag_PRX", 10);
}

const char *sub_1003CEDFC()
{
  return "HomePodUseAMS";
}

const char *sub_1003CEE30()
{
  return "headphones_prox_upsell_supported";
}

const char *sub_1003CEE44()
{
  return "marketing_upsell_use_sharing_config";
}

const char *sub_1003CEE58()
{
  return "ProductKitAssets";
}

const char *sub_1003CEE78()
{
  return "auto_unlock_ipad_as_realitydevice";
}

const char *sub_1003CEE8C()
{
  return "Sharing";
}

uint64_t sub_1003CEEA0()
{
  unsigned __int8 *v0;

  return sub_1003CEDD0(*v0);
}

uint64_t sub_1003CEEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BE860);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BE860);
  if (qword_1007B3E38 != -1)
    swift_once(&qword_1007B3E38, sub_1002E9DE4);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003CEF4C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1003D4454();
  v5 = sub_100222570();
  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_1003CEF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1);
}

uint64_t sub_1003CEFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  if (qword_1007B4028 != -1)
    swift_once(&qword_1007B4028, sub_1003CEEBC);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BE860);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
    v15 = v7;
    v8 = type metadata accessor for NWConnection(0);
    swift_retain(v14);
    v9 = String.init<A>(describing:)(&v14, v8);
    v11 = (const char *)v10;
    v14 = sub_100228BD8(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting connection: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v12 = swift_allocObject(&unk_100726CB8, 24, 7);
  swift_weakInit(v12 + 16, v1);
  swift_retain(v12);
  NWConnection.stateUpdateHandler.setter(sub_1003D2EE4, v12);
  swift_release(v12);
  return NWConnection.start(queue:)(*(_QWORD *)(v1 + 16));
}

uint64_t sub_1003CF1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  v5 = type metadata accessor for UUID(0);
  v4[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[23] = v6;
  v4[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[25] = static AirDropActor.shared;
  return swift_task_switch(sub_1003CF26C, v7, 0);
}

uint64_t sub_1003CF26C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  _QWORD *v33;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(void **)(*(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  v2 = objc_msgSend(v1, "identifier");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v8 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 176);
    v10 = UUID.init()(0);
    v4 = UUID.uuidString.getter(v10);
    v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  *(_QWORD *)(v0 + 208) = v6;
  v12 = objc_msgSend(v1, "deviceIRKData");
  if (!v12)
  {
    swift_bridgeObjectRelease(v6);
    v35 = type metadata accessor for SFError(0);
    v36 = sub_10037C2A0();
    swift_allocError(v35, v36, 0, 0);
    strcpy(v37, "deviceIRKData");
    *((_WORD *)v37 + 7) = -4864;
    *((_QWORD *)v37 + 2) = 0xD00000000000005ELL;
    *((_QWORD *)v37 + 3) = 0x80000001006195B0;
    *((_QWORD *)v37 + 4) = 79;
    v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, enum case for SFError.missingValue(_:), v35);
    swift_willThrow(v38);
LABEL_13:
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = v12;
  v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v16 = v15;

  *(_QWORD *)(v0 + 216) = v14;
  *(_QWORD *)(v0 + 224) = v16;
  v17 = objc_msgSend(v1, "edPKData");
  if (!v17)
  {
    swift_bridgeObjectRelease(v6);
    v39 = type metadata accessor for SFError(0);
    v40 = sub_10037C2A0();
    swift_allocError(v39, v40, 0, 0);
    *v41 = 0x617461444B506465;
    v41[1] = 0xE800000000000000;
    v41[2] = 0xD00000000000005ELL;
    v41[3] = 0x80000001006195B0;
    v41[4] = 83;
    v42 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, enum case for SFError.missingValue(_:), v39);
    swift_willThrow(v42);
    sub_100225AB4(v14, v16);
    goto LABEL_13;
  }
  v18 = v17;
  v19 = *(const char **)(v0 + 160);
  v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v22 = v21;

  *(_QWORD *)(v0 + 232) = v20;
  *(_QWORD *)(v0 + 240) = v22;
  swift_bridgeObjectRetain(v19);
  sub_10022E4A8(v20, v22);
  sub_10022E4A8(v14, v16);
  if (qword_1007B4028 != -1)
    swift_once(&qword_1007B4028, sub_1003CEEBC);
  v43 = v4;
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100221DF8(v23, (uint64_t)qword_1007BE860);
  *(_QWORD *)(v0 + 248) = v24;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Sending pairing request", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }
  v28 = *(const char **)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 152);

  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
  *(_QWORD *)(v0 + 112) = &type metadata for SDTempPairingMessage.Request;
  *(_QWORD *)(v0 + 120) = sub_1003D2F84();
  v31 = (_QWORD *)swift_allocObject(&unk_100726D08, 88, 7);
  *(_QWORD *)(v0 + 88) = v31;
  v31[2] = 1;
  v31[3] = v30;
  v31[4] = v28;
  v31[5] = v43;
  v31[6] = v6;
  v31[7] = v20;
  v31[8] = v22;
  v31[9] = v14;
  v31[10] = v16;
  *(_QWORD *)&v32 = swift_bridgeObjectRetain(v28).n128_u64[0];
  swift_bridgeObjectRetain(v6, v32);
  sub_10022E4A8(v20, v22);
  sub_10022E4A8(v14, v16);
  v33 = (_QWORD *)swift_task_alloc(dword_1007C5684);
  *(_QWORD *)(v0 + 264) = v33;
  *v33 = v0;
  v33[1] = sub_1003CF684;
  return sub_10052E248(v0 + 88);
}

uint64_t sub_1003CF684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 200);
    v5 = sub_1003D0174;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 200);
    sub_10022E75C((_QWORD *)(v2 + 88));
    v5 = sub_1003CF6F8;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003CF6F8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sent pairing request, waiting for response", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc(dword_1007C48AC);
  *(_QWORD *)(v1 + 280) = v5;
  *v5 = v1;
  v5[1] = sub_1003CF7B8;
  return sub_1004FD6A4();
}

uint64_t sub_1003CF7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;

  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 280);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v4[40] = v1;
    return swift_task_switch(sub_1003CFF48, v4[25], 0);
  }
  else
  {
    v8 = (_QWORD *)swift_task_alloc(dword_1007C4894);
    v4[36] = v8;
    *v8 = v6;
    v8[1] = sub_1003CF85C;
    return sub_1004FD918(a1, 0x20000);
  }
}

uint64_t sub_1003CF85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 288);
  v4[37] = a1;
  v4[38] = a2;
  v4[39] = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v4[40] = v2;
    v6 = v4[25];
    v7 = sub_1003CFF48;
  }
  else
  {
    v7 = sub_1003CF8D4;
    v6 = 0;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003CF8D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = v0[39];
  sub_10052DE18(v0[37], v0[38]);
  v2 = v0[37];
  v3 = v0[38];
  if (v1)
  {
    sub_100225AB4(v2, v3);
    v0[40] = v1;
    v4 = v0[25];
    v5 = sub_1003CFF48;
  }
  else
  {
    v6 = v0[25];
    sub_100225AB4(v2, v3);
    v5 = sub_1003CF948;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003CF948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  const char *v10;
  uint64_t v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  void *v18;
  void (*v19)(void *);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  double v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  Swift::String v35;
  const char *object;
  __n128 v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  const char *v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  unint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  const char *v63;
  const char *v64;
  double v65;
  const char *v67;
  const char *v68;
  uint64_t v69;
  unint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(const char **)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v80 = *(_QWORD *)(v1 + 80);
  v82 = *(_QWORD *)(v1 + 72);
  v8 = Logger.logObject.getter(a1);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v5;
    v11 = v6;
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received pairing response", v12, 2u);
    v13 = v12;
    v6 = v11;
    v5 = v10;
    swift_slowDealloc(v13, -1, -1);
  }

  if ((v3 & 1) == 0)
  {
    v69 = *(_QWORD *)(v1 + 232);
    v70 = *(_QWORD *)(v1 + 240);
    v72 = *(_QWORD *)(v1 + 216);
    v74 = *(_QWORD *)(v1 + 224);
    v77 = v7;
    v27 = v2 != 0;
    v67 = *(const char **)(v1 + 160);
    v68 = *(const char **)(v1 + 208);
    v28 = type metadata accessor for SFError(0);
    v29 = sub_10037C2A0();
    v30 = swift_allocError(v28, v29, 0, 0);
    v31 = v6;
    v33 = v32;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v84 = 0xD00000000000001ALL;
    v85 = 0x8000000100619630;
    *(_BYTE *)(v1 + 328) = v27;
    v34 = sub_100008384(&qword_1007BEA40);
    v35._countAndFlagsBits = String.init<A>(describing:)(v1 + 328, v34);
    object = (const char *)v35._object;
    String.append(_:)(v35);
    v37 = swift_bridgeObjectRelease(object);
    v38 = v85;
    *v33 = v84;
    v33[1] = v38;
    v33[2] = 0xD00000000000005ELL;
    v33[3] = 0x80000001006195B0;
    v33[4] = 101;
    v39 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, __n128))(*(_QWORD *)(v28 - 8) + 104))(v33, enum case for SFError.unexpected(_:), v28, v37);
    swift_willThrow(v39);
    swift_bridgeObjectRelease(v5);
    sub_100225AB4(v31, v77);
    sub_100225AB4(v82, v80);
    *(_QWORD *)&v40 = swift_bridgeObjectRelease(v67).n128_u64[0];
    swift_bridgeObjectRelease(v68, v40);
    sub_100225AB4(v69, v70);
    v41 = v72;
    v42 = v74;
    goto LABEL_9;
  }
  v14 = *(_QWORD *)(v1 + 144);
  v15 = (uint64_t *)(v14 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20));
  sub_1002B7ED4(v15[2], v15[3]);
  if ((v16 & 1) == 0)
  {
    v43 = *(_QWORD *)(v1 + 232);
    v44 = *(_QWORD *)(v1 + 224);
    v75 = *(_QWORD *)(v1 + 240);
    v78 = *(_QWORD *)(v1 + 216);
    v45 = *(const char **)(v1 + 208);
    v46 = *(const char **)(v1 + 160);
    v47 = type metadata accessor for SFError(0);
    v48 = sub_10037C2A0();
    v30 = swift_allocError(v47, v48, 0, 0);
    *v49 = 0xD000000000000018;
    v49[1] = 0x8000000100619610;
    v49[2] = 0xD00000000000005ELL;
    v49[3] = 0x80000001006195B0;
    v49[4] = 103;
    v50 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v49, enum case for SFError.unexpected(_:), v47);
    swift_willThrow(v50);
    swift_bridgeObjectRelease(v5);
    sub_100225AB4(v6, v7);
    sub_100225AB4(v82, v80);
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v46).n128_u64[0];
    swift_bridgeObjectRelease(v45, v51);
    sub_100225AB4(v43, v75);
    v41 = v78;
    v42 = v44;
LABEL_9:
    sub_100225AB4(v41, v42);
    swift_errorRetain(v30);
    v52 = swift_errorRetain(v30);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.error.getter(v53);
    v55 = os_log_type_enabled(v53, v54);
    v57 = *(_QWORD *)(v1 + 216);
    v56 = *(_QWORD *)(v1 + 224);
    if (v55)
    {
      v81 = *(_QWORD *)(v1 + 240);
      v83 = *(_QWORD *)(v1 + 224);
      v79 = *(_QWORD *)(v1 + 232);
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v84 = v59;
      *(_DWORD *)v58 = 136315138;
      *(_QWORD *)(v1 + 128) = v30;
      swift_errorRetain(v30);
      v60 = sub_100008384(&qword_1007B5A60);
      v61 = String.init<A>(describing:)(v1 + 128, v60);
      v63 = (const char *)v62;
      *(_QWORD *)(v1 + 136) = sub_100228BD8(v61, v62, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v58 + 4);
      swift_bridgeObjectRelease(v63);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Failed to exchange temporary identity: %s", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      swift_errorRelease(v30);
      sub_100225AB4(v57, v83);
      sub_100225AB4(v79, v81);
    }
    else
    {
      sub_100225AB4(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
      sub_100225AB4(v57, v56);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
      swift_errorRelease(v30);

    }
    goto LABEL_15;
  }
  v17 = *(_QWORD *)(v1 + 168);
  v18 = (void *)sub_1003D3004(v4, (uint64_t)v5, *v15, v15[1], v82, v80, v6, v7);
  v73 = v6;
  v76 = v7;
  v19 = *(void (**)(void *))(v17 + 24);
  v21 = *(_QWORD *)(v1 + 232);
  v20 = *(_QWORD *)(v1 + 240);
  v23 = *(_QWORD *)(v1 + 216);
  v22 = *(_QWORD *)(v1 + 224);
  v24 = *(const char **)(v1 + 208);
  if (v19)
  {
    v71 = *(const char **)(v1 + 160);
    v25 = *(_QWORD *)(*(_QWORD *)(v1 + 168) + 32);
    swift_retain(v25);
    v19(v18);
    sub_100225AB4(v21, v20);
    sub_100225AB4(v23, v22);
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v71).n128_u64[0];
    swift_bridgeObjectRelease(v24, v26);
    sub_100225AB4(v21, v20);
    sub_100225AB4(v23, v22);
    sub_1002845F4((uint64_t)v19, v25);
  }
  else
  {
    v64 = *(const char **)(v1 + 160);
    sub_100225AB4(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
    sub_100225AB4(v23, v22);
    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
    swift_bridgeObjectRelease(v24, v65);
    sub_100225AB4(v21, v20);
    sub_100225AB4(v23, v22);
  }

  swift_bridgeObjectRelease(v5);
  sub_100225AB4(v73, v76);
  sub_100225AB4(v82, v80);
LABEL_15:
  swift_task_dealloc(*(_QWORD *)(v1 + 192));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003CFF48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  const char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(const char **)(v0 + 208);
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 160)).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  sub_100225AB4(v1, v2);
  sub_100225AB4(v4, v3);
  v7 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v22 = *(_QWORD *)(v0 + 232);
    v23 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 224);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    v24 = v13;
    *(_QWORD *)(v0 + 128) = v7;
    swift_errorRetain(v7);
    v14 = sub_100008384(&qword_1007B5A60);
    v15 = String.init<A>(describing:)(v0 + 128, v14);
    v17 = (const char *)v16;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v12 + 4);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to exchange temporary identity: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
    sub_100225AB4(v11, v21);
    sub_100225AB4(v22, v23);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    sub_100225AB4(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
    sub_100225AB4(v19, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D0174()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  const char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(const char **)(v0 + 208);
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 160)).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  sub_100225AB4(v2, v1);
  sub_100225AB4(v4, v3);
  sub_10022E75C((_QWORD *)(v0 + 88));
  v7 = *(_QWORD *)(v0 + 272);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v22 = *(_QWORD *)(v0 + 232);
    v23 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 224);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    v24 = v13;
    *(_QWORD *)(v0 + 128) = v7;
    swift_errorRetain(v7);
    v14 = sub_100008384(&qword_1007B5A60);
    v15 = String.init<A>(describing:)(v0 + 128, v14);
    v17 = (const char *)v16;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v12 + 4);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to exchange temporary identity: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
    sub_100225AB4(v11, v21);
    sub_100225AB4(v22, v23);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    sub_100225AB4(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
    sub_100225AB4(v19, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D03AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[18] = v0;
  v2 = type metadata accessor for UUID(0);
  v1[19] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[20] = v3;
  v1[21] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v1[22] = static AirDropActor.shared;
  return swift_task_switch(sub_1003D0440, v4, 0);
}

uint64_t sub_1003D0440()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = *(void **)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  v2 = objc_msgSend(v1, "identifier");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v8 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = UUID.init()(0);
    v4 = UUID.uuidString.getter(v10);
    v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  *(_QWORD *)(v0 + 184) = v6;
  *(_QWORD *)(v0 + 192) = v4;
  v12 = objc_msgSend(v1, "deviceIRKData");
  if (!v12)
  {
    swift_bridgeObjectRelease(v6);
    v30 = type metadata accessor for SFError(0);
    v31 = sub_10037C2A0();
    swift_allocError(v30, v31, 0, 0);
    strcpy(v32, "deviceIRKData");
    *((_WORD *)v32 + 7) = -4864;
    *((_QWORD *)v32 + 2) = 0xD00000000000005ELL;
    *((_QWORD *)v32 + 3) = 0x80000001006195B0;
    *((_QWORD *)v32 + 4) = 119;
    v33 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for SFError.missingValue(_:), v30);
    swift_willThrow(v33);
LABEL_13:
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = v12;
  v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v16 = v15;

  *(_QWORD *)(v0 + 200) = v14;
  *(_QWORD *)(v0 + 208) = v16;
  v17 = objc_msgSend(v1, "edPKData");
  if (!v17)
  {
    swift_bridgeObjectRelease(v6);
    v34 = type metadata accessor for SFError(0);
    v35 = sub_10037C2A0();
    swift_allocError(v34, v35, 0, 0);
    *v36 = 0x617461444B506465;
    v36[1] = 0xE800000000000000;
    v36[2] = 0xD00000000000005ELL;
    v36[3] = 0x80000001006195B0;
    v36[4] = 123;
    v37 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, enum case for SFError.missingValue(_:), v34);
    swift_willThrow(v37);
    sub_100225AB4(v14, v16);
    goto LABEL_13;
  }
  v18 = v17;
  v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;

  *(_QWORD *)(v0 + 216) = v19;
  *(_QWORD *)(v0 + 224) = v21;
  if (qword_1007B4028 != -1)
    swift_once(&qword_1007B4028, sub_1003CEEBC);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100221DF8(v22, (uint64_t)qword_1007BE860);
  *(_QWORD *)(v0 + 232) = v23;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Waiting for pairing request", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }
  v27 = *(_QWORD *)(v0 + 144);

  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
  v28 = (_QWORD *)swift_task_alloc(dword_1007C48AC);
  *(_QWORD *)(v0 + 248) = v28;
  *v28 = v0;
  v28[1] = sub_1003D07AC;
  return sub_1004FD6A4();
}

uint64_t sub_1003D07AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 248);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    *(_QWORD *)(v4 + 352) = v1;
    v7 = *(_QWORD *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 184));
    return swift_task_switch(sub_1003D0B58, v7, 0);
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1007C4894);
    *(_QWORD *)(v4 + 256) = v9;
    *v9 = v6;
    v9[1] = sub_1003D0858;
    return sub_1004FD918(a1, 0x20000);
  }
}

uint64_t sub_1003D0858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 256);
  *(_QWORD *)(v4 + 264) = a1;
  *(_QWORD *)(v4 + 272) = a2;
  *(_QWORD *)(v4 + 280) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    *(_QWORD *)(v4 + 352) = v2;
    v6 = *(_QWORD *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 184));
    v7 = sub_1003D0B58;
    v8 = v6;
  }
  else
  {
    v7 = sub_1003D08D8;
    v8 = 0;
  }
  return swift_task_switch(v7, v8, 0);
}

uint64_t sub_1003D08D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 280);
  sub_10052E030(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  if (v1)
  {
    sub_100225AB4(v2, v3);
    *(_QWORD *)(v0 + 352) = v1;
    v4 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease(*(const char **)(v0 + 184));
    v5 = sub_1003D0B58;
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 176);
    sub_100225AB4(v2, v3);
    v5 = sub_1003D0950;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003D0950(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  *(_QWORD *)(v1 + 288) = *(_QWORD *)(v1 + 24);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 48);
  v2 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v1 + 320) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v1 + 336) = v2;
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received pairing request", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 224);
  v8 = *(_QWORD *)(v1 + 208);
  v7 = *(_QWORD *)(v1 + 216);
  v9 = *(_QWORD *)(v1 + 200);

  sub_10022E4A8(v7, v6);
  v10 = sub_10022E4A8(v9, v8);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Sending pairing response", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v15 = *(_QWORD *)(v1 + 216);
  v14 = *(_QWORD *)(v1 + 224);
  v17 = *(_QWORD *)(v1 + 200);
  v16 = *(_QWORD *)(v1 + 208);
  v18 = *(const char **)(v1 + 184);
  v19 = *(_QWORD *)(v1 + 192);

  *(_QWORD *)(v1 + 112) = &type metadata for SDTempPairingMessage.Response;
  *(_QWORD *)(v1 + 120) = sub_1003D3254();
  v20 = swift_allocObject(&unk_100726D30, 88, 7);
  *(_QWORD *)(v1 + 88) = v20;
  *(_OWORD *)(v20 + 16) = xmmword_1005D67A0;
  *(_BYTE *)(v20 + 32) = 1;
  *(_QWORD *)(v20 + 40) = v19;
  *(_QWORD *)(v20 + 48) = v18;
  *(_QWORD *)(v20 + 56) = v15;
  *(_QWORD *)(v20 + 64) = v14;
  *(_QWORD *)(v20 + 72) = v17;
  *(_QWORD *)(v20 + 80) = v16;
  swift_bridgeObjectRetain(v18);
  sub_10022E4A8(v15, v14);
  sub_10022E4A8(v17, v16);
  v21 = (_QWORD *)swift_task_alloc(dword_1007C5684);
  *(_QWORD *)(v1 + 360) = v21;
  *v21 = v1;
  v21[1] = sub_1003D0D58;
  return sub_10052E248(v1 + 88);
}

uint64_t sub_1003D0B58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = v0[44];
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v19 = v0[27];
    v20 = v0[28];
    v6 = v0[25];
    v18 = v0[26];
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v21 = v8;
    v0[16] = v2;
    swift_errorRetain(v2);
    v9 = sub_100008384(&qword_1007B5A60);
    v10 = String.init<A>(describing:)(v0 + 16, v9);
    v12 = (const char *)v11;
    v1[17] = sub_100228BD8(v10, v11, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 17, v1 + 18, v7 + 4);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to exchange temporary identity: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    sub_100225AB4(v6, v18);
    sub_100225AB4(v19, v20);
    swift_errorRelease(v2);
  }
  else
  {
    v13 = v0[27];
    v14 = v0[28];
    v15 = v0[25];
    v16 = v0[26];
    sub_100225AB4(v13, v14);
    sub_100225AB4(v15, v16);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  swift_task_dealloc(v1[21]);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1003D0D58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 360);
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 176);
    v5 = sub_1003D0FD0;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 176);
    sub_10022E75C((_QWORD *)(v2 + 88));
    v5 = sub_1003D0DCC;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003D0DCC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(void *);
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  unint64_t v33;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sent pairing response", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 336);
  v5 = *(_QWORD *)(v1 + 344);
  v8 = *(_QWORD *)(v1 + 320);
  v7 = *(_QWORD *)(v1 + 328);
  v10 = *(_QWORD *)(v1 + 304);
  v9 = *(_QWORD *)(v1 + 312);
  v12 = *(_QWORD *)(v1 + 288);
  v11 = *(_QWORD *)(v1 + 296);
  v13 = v2;
  v14 = *(_QWORD *)(v1 + 144);

  v15 = (void *)sub_1003D3004(v10, v9, v12, v11, v6, v5, v8, v7);
  v16 = *(void (**)(void *))(v14 + 24);
  v18 = *(_QWORD *)(v1 + 336);
  v17 = *(_QWORD *)(v1 + 344);
  v32 = *(_QWORD *)(v1 + 320);
  v33 = *(_QWORD *)(v1 + 328);
  v30 = *(const char **)(v1 + 296);
  v31 = *(const char **)(v1 + 312);
  v20 = *(_QWORD *)(v1 + 216);
  v19 = *(_QWORD *)(v1 + 224);
  v21 = *(_QWORD *)(v1 + 200);
  v22 = *(_QWORD *)(v1 + 208);
  v23 = *(const char **)(v1 + 184);
  if (v16)
  {
    v29 = *(_QWORD *)(v1 + 336);
    v24 = *(_QWORD *)(v1 + 344);
    v25 = *(_QWORD *)(*(_QWORD *)(v1 + 144) + 32);
    swift_retain(v25);
    v16(v15);
    sub_100225AB4(v20, v19);
    sub_100225AB4(v21, v22);
    swift_bridgeObjectRelease(v23);
    sub_100225AB4(v20, v19);
    sub_100225AB4(v21, v22);
    v26 = v25;
    v17 = v24;
    v18 = v29;
    sub_1002845F4((uint64_t)v16, v26);
  }
  else
  {
    sub_100225AB4(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224));
    sub_100225AB4(v21, v22);
    swift_bridgeObjectRelease(v23);
    sub_100225AB4(v20, v19);
    sub_100225AB4(v21, v22);
  }

  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v30).n128_u64[0];
  swift_bridgeObjectRelease(v31, v27);
  sub_100225AB4(v32, v33);
  sub_100225AB4(v18, v17);
  swift_task_dealloc(*(_QWORD *)(v1 + 168));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003D0FD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  const char *v4;
  const char *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 336);
  v26 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = *(const char **)(v0 + 312);
  v5 = *(const char **)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease(*(const char **)(v0 + 184));
  sub_100225AB4(v7, v6);
  sub_100225AB4(v9, v8);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
  swift_bridgeObjectRelease(v4, v10);
  sub_100225AB4(v3, v2);
  sub_100225AB4(v1, v26);
  sub_10022E75C((_QWORD *)(v0 + 88));
  v11 = *(_QWORD *)(v0 + 368);
  swift_errorRetain(v11);
  v12 = swift_errorRetain(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v27 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 208);
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    *(_DWORD *)v16 = 136315138;
    v29 = v17;
    *(_QWORD *)(v0 + 128) = v11;
    swift_errorRetain(v11);
    v18 = sub_100008384(&qword_1007B5A60);
    v19 = String.init<A>(describing:)(v0 + 128, v18);
    v21 = (const char *)v20;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v19, v20, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v16 + 4);
    swift_bridgeObjectRelease(v21);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to exchange temporary identity: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    sub_100225AB4(v15, v25);
    sub_100225AB4(v27, v28);
    swift_errorRelease(v11);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 208);
    sub_100225AB4(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
    sub_100225AB4(v23, v22);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D1238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  uint64_t v33;
  uint8_t *v34;
  int v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  uint8_t *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NWConnection.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v41 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v41 - v15;
  a2 += 16;
  swift_beginAccess(a2, v48, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v18 = result;
    if (qword_1007B4028 != -1)
      swift_once(&qword_1007B4028, sub_1003CEEBC);
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007BE860);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v45 = a1;
    v21 = v20(v16, a1, v7);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v43 = v6;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      v44 = (void (*)(char *, char *, uint64_t))v20;
      v27 = v26;
      v47 = v26;
      v42 = v18;
      *(_DWORD *)v25 = 136315138;
      v41 = v25 + 4;
      v44(v14, v16, v7);
      v28 = String.init<A>(describing:)(v14, v7);
      v30 = (const char *)v29;
      v46 = sub_100228BD8(v28, v29, &v47);
      v18 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v41);
      v31 = swift_bridgeObjectRelease(v30);
      v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      v32(v16, v7, v31);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Connection state changed to %s", v25, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      v33 = v27;
      v20 = (uint64_t (*)(char *, uint64_t, uint64_t))v44;
      swift_slowDealloc(v33, -1, -1);
      v34 = v25;
      v6 = v43;
      swift_slowDealloc(v34, -1, -1);
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      ((void (*)(char *, uint64_t))v32)(v16, v7);
    }

    v20(v11, v45, v7);
    v35 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v35 == enum case for NWConnection.State.waiting(_:)
      || (v36 = v35, v35 == enum case for NWConnection.State.failed(_:)))
    {
      swift_release(v18);
      return ((uint64_t (*)(char *, uint64_t))v32)(v11, v7);
    }
    if (v35 == enum case for NWConnection.State.setup(_:) || v35 == enum case for NWConnection.State.preparing(_:))
      return swift_release(v18);
    if (v35 == enum case for NWConnection.State.ready(_:))
    {
      v37 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
      v38 = (_QWORD *)swift_allocObject(&unk_100726CE0, 40, 7);
      v38[2] = 0;
      v38[3] = 0;
      v38[4] = v18;
      v39 = sub_100252EC0((uint64_t)v6, (uint64_t)&unk_1007BEA20, (uint64_t)v38);
      return swift_release(v39);
    }
    v40 = enum case for NWConnection.State.cancelled(_:);
    result = swift_release(v18);
    if (v36 != v40)
      return ((uint64_t (*)(char *, uint64_t))v32)(v11, v7);
  }
  return result;
}

uint64_t sub_1003D1614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = type metadata accessor for SDTempPairingEndpoint(0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDTempPairingConnection.Role(0);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003D1690, 0, 0);
}

uint64_t sub_1003D1690()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[5];
  v2 = v0[6];
  sub_1003D2E64(v0[3] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  v4 = (_QWORD *)v0[6];
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(*v4);
    v5 = (_QWORD *)swift_task_alloc(dword_1007BEA2C);
    v0[10] = v5;
    *v5 = v0;
    v5[1] = sub_1003D1844;
    return sub_1003D03AC();
  }
  else
  {
    v7 = v0[4];
    v8 = (_QWORD *)((char *)v4 + *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48));
    v9 = *v8;
    v10 = v8[1];
    v0[7] = v10;
    sub_1003517DC((uint64_t)v4, v7);
    v11 = (_QWORD *)swift_task_alloc(dword_1007BEA34);
    v0[8] = v11;
    *v11 = v0;
    v11[1] = sub_1003D178C;
    return sub_1003CF1D4(v0[4], v9, v10);
  }
}

uint64_t sub_1003D178C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t (*v4)();

  v3 = *(const char **)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1003D18E4;
  else
    v4 = sub_1003D17F8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003D17F8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1002443C8(*(_QWORD *)(v0 + 32), type metadata accessor for SDTempPairingEndpoint);
  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D1844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003D1ACC;
  else
    v3 = sub_1003D18A8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003D18A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D18E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1002443C8(*(_QWORD *)(v0 + 32), type metadata accessor for SDTempPairingEndpoint);
  v1 = *(_QWORD *)(v0 + 72);
  if (qword_1007B4028 != -1)
    swift_once(&qword_1007B4028, sub_1003CEEBC);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BE860);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v10 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D1ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 88);
  if (qword_1007B4028 != -1)
    swift_once(&qword_1007B4028, sub_1003CEEBC);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BE860);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v10 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D1CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1002845F4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1002443C8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role, type metadata accessor for SDTempPairingConnection.Role);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003D1D3C()
{
  return type metadata accessor for SDTempPairingConnection(0);
}

uint64_t type metadata accessor for SDTempPairingConnection(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE8C0, (uint64_t)&nominal type descriptor for SDTempPairingConnection);
}

uint64_t sub_1003D1D58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = &unk_1005D67F8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SDTempPairingConnection.Role(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 6, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SDTempPairingConnection.Role(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BE9E0, (uint64_t)&nominal type descriptor for SDTempPairingConnection.Role);
}

uint64_t *sub_1003D1E20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  const char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  const char *v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *a1 = *a2;
      swift_retain(v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      v14 = (uint64_t *)((char *)a1 + v13);
      v15 = (char *)a2 + v13;
      v16 = *(const char **)((char *)a2 + v13 + 8);
      *v14 = *(uint64_t *)((char *)a2 + v13);
      v14[1] = v16;
      v17 = *(uint64_t *)((char *)a2 + v13 + 16);
      v18 = *(uint64_t *)((char *)a2 + v13 + 24);
      swift_bridgeObjectRetain(v16);
      sub_10022E4A8(v17, v18);
      v14[2] = v17;
      v14[3] = v18;
      v19 = *((_QWORD *)v15 + 4);
      v20 = *((_QWORD *)v15 + 5);
      sub_10022E4A8(v19, v20);
      v14[4] = v19;
      v14[5] = v20;
      v21 = *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = (const char *)v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain(v24);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

__n128 sub_1003D1F58(_QWORD *a1, uint64_t a2)
{
  __n128 result;
  uint64_t v4;
  char *v5;
  const char *v6;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    swift_release(*a1);
  }
  else
  {
    v4 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = (char *)a1 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    swift_bridgeObjectRelease(*((const char **)v5 + 1));
    sub_100225AB4(*((_QWORD *)v5 + 2), *((_QWORD *)v5 + 3));
    sub_100225AB4(*((_QWORD *)v5 + 4), *((_QWORD *)v5 + 5));
    v6 = *(const char **)((char *)a1 + *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48) + 8);
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

uint64_t *sub_1003D1FEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  const char *v22;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    swift_retain(v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = *(const char **)((char *)a2 + v11 + 8);
    *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    v15 = *(uint64_t *)((char *)a2 + v11 + 16);
    v16 = *(uint64_t *)((char *)a2 + v11 + 24);
    swift_bridgeObjectRetain(v14);
    sub_10022E4A8(v15, v16);
    v12[2] = v15;
    v12[3] = v16;
    v17 = *((_QWORD *)v13 + 4);
    v18 = *((_QWORD *)v13 + 5);
    sub_10022E4A8(v17, v18);
    v12[4] = v17;
    v12[5] = v18;
    v19 = *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48);
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = (const char *)v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain(v22);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t *sub_1003D20F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  const char *v22;

  if (a1 != a2)
  {
    sub_1002443C8((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      swift_retain(v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (char *)a2 + v11;
      *v12 = *(uint64_t *)((char *)a2 + v11);
      v14 = *(const char **)((char *)a2 + v11 + 8);
      v12[1] = v14;
      v15 = *(uint64_t *)((char *)a2 + v11 + 16);
      v16 = *(uint64_t *)((char *)a2 + v11 + 24);
      swift_bridgeObjectRetain(v14);
      sub_10022E4A8(v15, v16);
      v12[2] = v15;
      v12[3] = v16;
      v17 = *((_QWORD *)v13 + 4);
      v18 = *((_QWORD *)v13 + 5);
      sub_10022E4A8(v17, v18);
      v12[4] = v17;
      v12[5] = v18;
      v19 = *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48);
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      *v20 = *v21;
      v22 = (const char *)v21[1];
      v20[1] = v22;
      swift_bridgeObjectRetain(v22);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

char *sub_1003D222C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    v11 = sub_100008384((uint64_t *)&unk_1007BBAC0);
    *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1003D22F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1002443C8((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      v11 = sub_100008384((uint64_t *)&unk_1007BBAC0);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1003D23CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for SDTempPairingEndpoint(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_1005D6818);
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t sub_1003D2450(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  __int128 v21;

  v3 = v1;
  v5 = sub_100008384(&qword_1007BEA58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1003D3894();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SDTempPairingMessage.Request.CodingKeys, &type metadata for SDTempPairingMessage.Request.CodingKeys, v11, v9, v10);
  v12 = *v3;
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v21, v5);
  if (!v2)
  {
    v13 = v3[1];
    v14 = v3[2];
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v21, v5);
    v15 = v3[3];
    v16 = v3[4];
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    v21 = *(_OWORD *)(v3 + 5);
    v20 = 3;
    v17 = sub_100285DE4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
    v21 = *(_OWORD *)(v3 + 7);
    v20 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003D260C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  __int128 v21;

  v3 = v1;
  v5 = sub_100008384(&qword_1007BEA78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1003D4410();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SDTempPairingMessage.Response.CodingKeys, &type metadata for SDTempPairingMessage.Response.CodingKeys, v11, v9, v10);
  v12 = *v3;
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v21, v5);
  if (!v2)
  {
    v13 = v3[1];
    v14 = *((unsigned __int8 *)v3 + 16);
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v13, v14, &v21, v5);
    v15 = v3[3];
    v16 = v3[4];
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    v21 = *(_OWORD *)(v3 + 5);
    v20 = 3;
    v17 = sub_100285DE4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
    v21 = *(_OWORD *)(v3 + 7);
    v20 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003D27CC(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier, *a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier);
}

uint64_t sub_1003D27F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003D2820 + 4 * byte_1005D67B0[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1003D2820()
{
  return 1701667182;
}

uint64_t sub_1003D2830()
{
  return 0x696669746E656469;
}

uint64_t sub_1003D284C()
{
  return 0x654B63696C627570;
}

uint64_t sub_1003D2868()
{
  return 0x5249656369766564;
}

uint64_t sub_1003D288C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003D38D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003D28B0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1003D28BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D3894();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003D28E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D3894();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1003D290C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_1003D3B20(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1003D295C(_QWORD *a1)
{
  return sub_1003D2450(a1);
}

uint64_t sub_1003D299C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003D29CC + 4 * byte_1005D67B5[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1003D29CC()
{
  return 0x726F727265;
}

uint64_t sub_1003D29E0()
{
  return 0x696669746E656469;
}

uint64_t sub_1003D29FC()
{
  return 0x654B63696C627570;
}

uint64_t sub_1003D2A18()
{
  return 0x5249656369766564;
}

uint64_t sub_1003D2A3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003D3EA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003D2A60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D4410();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003D2A88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D4410();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1003D2AB0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_1003D40F8(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1003D2B00(_QWORD *a1)
{
  return sub_1003D260C(a1);
}

_QWORD *sub_1003D2B40(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  char *v21;
  const char *v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = type metadata accessor for NWEndpoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SDTempPairingEndpoint(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SDTempPairingConnection.Role(0);
  v16 = __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[3] = 0;
  v4[4] = 0;
  UUID.init()(v16);
  sub_1003D2E64(a1, (uint64_t)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity) = a2;
  v4[2] = a3;
  sub_1003D2E64(a1, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
  {
    *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = *v18;
    v19 = a2;
    v20 = a3;
  }
  else
  {
    v21 = (char *)v18 + *(int *)(sub_100008384((uint64_t *)&unk_1007BBAC0) + 48);
    v36 = v8;
    v22 = (const char *)*((_QWORD *)v21 + 1);
    v23 = a2;
    v24 = a3;
    swift_bridgeObjectRelease(v22);
    sub_1003517DC((uint64_t)v18, (uint64_t)v14);
    v25 = type metadata accessor for NWProtocolTCP.Options(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = NWProtocolTCP.Options.init()();
    dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter(1);
    dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter(2);
    v27 = type metadata accessor for NWProtocolTLS.Options(0);
    swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    v28 = NWProtocolTLS.Options.init()();
    v29 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v28);
    aBlock[4] = sub_1003CEF90;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004FC8DC;
    aBlock[3] = &unk_100726C80;
    v30 = _Block_copy(aBlock);
    sec_protocol_options_set_verify_block(v29, v30, v24);
    _Block_release(v30);
    swift_unknownObjectRelease(v29);
    type metadata accessor for NWParameters(0);
    swift_retain(v28);
    swift_retain(v26);
    v31 = NWParameters.__allocating_init(tls:tcp:)(v28, v26);
    NWParameters.includePeerToPeer.setter(1);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v36);
    v32 = type metadata accessor for NWConnection(0);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    v33 = NWConnection.init(to:using:)(v11, v31);
    swift_release(v28);
    swift_release(v26);
    sub_1002443C8((uint64_t)v14, type metadata accessor for SDTempPairingEndpoint);
    *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = v33;
  }
  sub_1003CEFB4();
  sub_1002443C8(a1, type metadata accessor for SDTempPairingConnection.Role);
  return v4;
}

uint64_t sub_1003D2E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDTempPairingConnection.Role(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D2EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003D2EB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003D2EC0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D2EE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D1238(a1, v1);
}

uint64_t sub_1003D2EEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003D2F18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BEA1C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1003D1614(a1, v4, v5, v6);
}

unint64_t sub_1003D2F84()
{
  unint64_t result;

  result = qword_1007BEA38;
  if (!qword_1007BEA38)
  {
    result = swift_getWitnessTable(&unk_1005D6A00, &type metadata for SDTempPairingMessage.Request);
    atomic_store(result, (unint64_t *)&qword_1007BEA38);
  }
  return result;
}

uint64_t sub_1003D2FC8()
{
  uint64_t v0;
  double v1;

  *(_QWORD *)&v1 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 32)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + 48), v1);
  sub_100225AB4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_100225AB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003D3004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  id v17;
  void *v18;
  NSString v19;
  Class v20;
  Class v21;
  Class v22;
  uint64_t result;
  _QWORD v24[2];

  v24[1] = a8;
  v10 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)CUPairedPeer), "init");
  UUID.init(uuidString:)(a1, a2);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  objc_msgSend(v13, "setIdentifier:", isa);

  v17 = objc_msgSend(objc_allocWithZone((Class)RPIdentity), "initWithPairedPeer:type:", v13, 15);
  if (v17)
  {
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "setName:", v19);

    v20 = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "setDeviceIRKData:", v20);

    v21 = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "setEdPKData:", v21);

    v22 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "setAccessGroups:", v22);

    return (uint64_t)v18;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x8000000100619680, "DaemoniOSLibrary/SDTempPairingConnection.swift", 46, 2, 194, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_1003D3254()
{
  unint64_t result;

  result = qword_1007BEA48;
  if (!qword_1007BEA48)
  {
    result = swift_getWitnessTable(&unk_1005D69B0, &type metadata for SDTempPairingMessage.Response);
    atomic_store(result, (unint64_t *)&qword_1007BEA48);
  }
  return result;
}

uint64_t sub_1003D3298()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(const char **)(v0 + 48));
  sub_100225AB4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_100225AB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t destroy for SDTempPairingMessage.Response(uint64_t a1)
{
  swift_bridgeObjectRelease(*(const char **)(a1 + 32));
  sub_100225AB4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return sub_100225AB4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

uint64_t initializeWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(const char **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain(v5);
  sub_10022E4A8(v6, v7);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  sub_10022E4A8(v9, v8);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  const char *v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(const char **)(a2 + 32);
  v6 = *(const char **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)&v7 = swift_bridgeObjectRetain(v5).n128_u64[0];
  swift_bridgeObjectRelease(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  sub_10022E4A8(v8, v9);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  sub_100225AB4(v10, v11);
  v13 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  sub_10022E4A8(v13, v12);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v12;
  sub_100225AB4(v14, v15);
  return a1;
}

__n128 initializeWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(const char **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100225AB4(v7, v8);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100225AB4(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response()
{
  return &type metadata for SDTempPairingMessage.Response;
}

uint64_t storeEnumTagSinglePayload for SDTempPairingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003D3578 + 4 * byte_1005D67BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003D3598 + 4 * byte_1005D67BF[v4]))();
}

_BYTE *sub_1003D3578(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003D3598(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003D35A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003D35A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003D35B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003D35B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingError()
{
  return &type metadata for SDTempPairingError;
}

uint64_t destroy for SDTempPairingMessage.Request(uint64_t a1)
{
  double v2;

  *(_QWORD *)&v2 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + 16)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + 32), v2);
  sub_100225AB4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return sub_100225AB4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

uint64_t initializeWithCopy for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(const char **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(const char **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)&v9 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRetain(v6, v9);
  sub_10022E4A8(v7, v8);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v11 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  sub_10022E4A8(v11, v10);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v10;
  return a1;
}

_QWORD *assignWithCopy for SDTempPairingMessage.Request(_QWORD *a1, _QWORD *a2)
{
  const char *v4;
  const char *v5;
  double v6;
  double v7;
  const char *v8;
  const char *v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (const char *)a2[2];
  v5 = (const char *)a1[2];
  a1[2] = v4;
  *(_QWORD *)&v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v5, v6).n128_u64[0];
  a1[3] = a2[3];
  v8 = (const char *)a2[4];
  v9 = (const char *)a1[4];
  a1[4] = v8;
  *(_QWORD *)&v10 = swift_bridgeObjectRetain(v8, v7).n128_u64[0];
  swift_bridgeObjectRelease(v9, v10);
  v11 = a2[5];
  v12 = a2[6];
  sub_10022E4A8(v11, v12);
  v13 = a1[5];
  v14 = a1[6];
  a1[5] = v11;
  a1[6] = v12;
  sub_100225AB4(v13, v14);
  v16 = a2[7];
  v15 = a2[8];
  sub_10022E4A8(v16, v15);
  v17 = a1[7];
  v18 = a1[8];
  a1[7] = v16;
  a1[8] = v15;
  sub_100225AB4(v17, v18);
  return a1;
}

uint64_t assignWithTake for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  const char *v4;
  double v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(const char **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(const char **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7, v5);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100225AB4(v8, v9);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100225AB4(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request()
{
  return &type metadata for SDTempPairingMessage.Request;
}

unint64_t sub_1003D3850()
{
  unint64_t result;

  result = qword_1007BEA50;
  if (!qword_1007BEA50)
  {
    result = swift_getWitnessTable(&unk_1005D6960, &type metadata for SDTempPairingError);
    atomic_store(result, (unint64_t *)&qword_1007BEA50);
  }
  return result;
}

unint64_t sub_1003D3894()
{
  unint64_t result;

  result = qword_1007BEA60;
  if (!qword_1007BEA60)
  {
    result = swift_getWitnessTable(&unk_1005D6BF4, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEA60);
  }
  return result;
}

uint64_t sub_1003D38D8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701667182, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v8 = 0xEA00000000007265;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x654B63696C627570 && a2 == 0xE900000000000079)
  {
    v9 = 0xE900000000000079;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654B63696C627570, 0xE900000000000079, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x5249656369766564 && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease(0xED0000617461444BLL);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5249656369766564, 0xED0000617461444BLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1003D3B20(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  double v24;
  const char *v25;
  unint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v5 = sub_100008384(&qword_1007BEA80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1003D3894();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SDTempPairingMessage.Request.CodingKeys, &type metadata for SDTempPairingMessage.Request.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_10022E75C(a1);
  }
  else
  {
    LOBYTE(v37) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    LOBYTE(v37) = 1;
    v13 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    v15 = v14;
    v35 = v13;
    v36 = v12;
    LOBYTE(v37) = 2;
    swift_bridgeObjectRetain(v14);
    v16 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    v18 = v17;
    v32 = v16;
    v33 = v15;
    v39 = 3;
    v19 = sub_100285DA0();
    swift_bridgeObjectRetain(v18);
    v34 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v39, v5, &type metadata for Data, v19);
    v39 = 4;
    v20 = v37;
    v31 = v38;
    sub_10022E4A8(v37, v38);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v39, v5, &type metadata for Data, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v37;
    v22 = v38;
    v23 = v33;
    *(_QWORD *)&v24 = swift_bridgeObjectRetain(v33).n128_u64[0];
    v25 = v34;
    swift_bridgeObjectRetain(v34, v24);
    v26 = v31;
    sub_10022E4A8(v20, v31);
    sub_10022E4A8(v21, v22);
    sub_100225AB4(v20, v26);
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v23).n128_u64[0];
    swift_bridgeObjectRelease(v25, v27);
    sub_10022E75C(a1);
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v25).n128_u64[0];
    swift_bridgeObjectRelease(v23, v28);
    sub_100225AB4(v20, v26);
    sub_100225AB4(v21, v22);
    v29 = v35;
    *a2 = v36;
    a2[1] = v29;
    v30 = v32;
    a2[2] = (uint64_t)v23;
    a2[3] = v30;
    a2[4] = (uint64_t)v25;
    a2[5] = v20;
    a2[6] = v26;
    a2[7] = v21;
    a2[8] = v22;
  }
}

uint64_t sub_1003D3EA8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F727265, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v8 = 0xEA00000000007265;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x654B63696C627570 && a2 == 0xE900000000000079)
  {
    v9 = 0xE900000000000079;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654B63696C627570, 0xE900000000000079, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x5249656369766564 && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease(0xED0000617461444BLL);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5249656369766564, 0xED0000617461444BLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1003D40F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  char v34;

  v5 = sub_100008384(&qword_1007BEA68);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1003D4410();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SDTempPairingMessage.Response.CodingKeys, &type metadata for SDTempPairingMessage.Response.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_10022E75C(a1);
  }
  else
  {
    LOBYTE(v31) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    LOBYTE(v31) = 1;
    v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v31, v5);
    v33 = v14;
    LOBYTE(v31) = 2;
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    v17 = v16;
    v28 = v15;
    v29 = v13;
    v34 = 3;
    v18 = sub_100285DA0();
    swift_bridgeObjectRetain(v17);
    v30 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v34, v5, &type metadata for Data, v18);
    v27 = v17;
    v34 = 4;
    v19 = v31;
    v26 = v32;
    sub_10022E4A8(v31, v32);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v34, v5, &type metadata for Data, v30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v20 = v31;
    v21 = v32;
    v22 = v27;
    swift_bridgeObjectRetain(v27);
    v23 = v26;
    sub_10022E4A8(v19, v26);
    sub_10022E4A8(v20, v21);
    sub_100225AB4(v19, v23);
    swift_bridgeObjectRelease(v22);
    sub_10022E75C(a1);
    swift_bridgeObjectRelease(v22);
    sub_100225AB4(v19, v23);
    sub_100225AB4(v20, v21);
    v24 = v29;
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v24;
    *(_BYTE *)(a2 + 16) = v33 & 1;
    *(_QWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 32) = v22;
    *(_QWORD *)(a2 + 40) = v19;
    *(_QWORD *)(a2 + 48) = v23;
    *(_QWORD *)(a2 + 56) = v20;
    *(_QWORD *)(a2 + 64) = v21;
  }
}

unint64_t sub_1003D4410()
{
  unint64_t result;

  result = qword_1007BEA70;
  if (!qword_1007BEA70)
  {
    result = swift_getWitnessTable(&unk_1005D6BA4, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEA70);
  }
  return result;
}

unint64_t sub_1003D4454()
{
  unint64_t result;

  result = qword_1007BEA88;
  if (!qword_1007BEA88)
  {
    result = swift_getWitnessTable(&unk_1005D68E8, &type metadata for SDTempPairingError);
    atomic_store(result, (unint64_t *)&qword_1007BEA88);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage()
{
  return &type metadata for SDTempPairingMessage;
}

uint64_t _s16DaemoniOSLibrary20SDTempPairingMessageV8ResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1003D450C + 4 * byte_1005D67C9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1003D4540 + 4 * byte_1005D67C4[v4]))();
}

uint64_t sub_1003D4540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D4548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D4550);
  return result;
}

uint64_t sub_1003D455C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D4564);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003D4568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D4570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Request.CodingKeys;
}

unint64_t sub_1003D4590()
{
  unint64_t result;

  result = qword_1007BEA90;
  if (!qword_1007BEA90)
  {
    result = swift_getWitnessTable(&unk_1005D6AC4, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEA90);
  }
  return result;
}

unint64_t sub_1003D45D8()
{
  unint64_t result;

  result = qword_1007BEA98;
  if (!qword_1007BEA98)
  {
    result = swift_getWitnessTable(&unk_1005D6B7C, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEA98);
  }
  return result;
}

unint64_t sub_1003D4620()
{
  unint64_t result;

  result = qword_1007BEAA0;
  if (!qword_1007BEAA0)
  {
    result = swift_getWitnessTable(&unk_1005D6AEC, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEAA0);
  }
  return result;
}

unint64_t sub_1003D4668()
{
  unint64_t result;

  result = qword_1007BEAA8;
  if (!qword_1007BEAA8)
  {
    result = swift_getWitnessTable(&unk_1005D6B14, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEAA8);
  }
  return result;
}

unint64_t sub_1003D46B0()
{
  unint64_t result;

  result = qword_1007BEAB0;
  if (!qword_1007BEAB0)
  {
    result = swift_getWitnessTable(&unk_1005D6A34, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEAB0);
  }
  return result;
}

unint64_t sub_1003D46F8()
{
  unint64_t result;

  result = qword_1007BEAB8;
  if (!qword_1007BEAB8)
  {
    result = swift_getWitnessTable(&unk_1005D6A5C, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BEAB8);
  }
  return result;
}

uint64_t sub_1003D4740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  _QWORD v7[3];

  v7[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v7[1] = "\b";
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 80));
  v3 = sub_10021FF9C(&qword_1007B5A60);
  v4 = type metadata accessor for CheckedContinuation(255, v2, v3, &protocol self-conformance witness table for Error);
  result = type metadata accessor for Optional(319, v4);
  if (v6 <= 0x3F)
  {
    v7[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 3, v7, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003D47FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BEAC0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BEAC0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003D488C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  char *v17;
  __n128 v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  uint64_t v20;
  __n128 v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  char v27[24];

  v25 = a1;
  v2 = swift_isaMask & *v1;
  v3 = type metadata accessor for Optional(255, *(_QWORD *)(v2 + 0x50));
  v4 = sub_10021FF9C(&qword_1007B5A60);
  v5 = type metadata accessor for CheckedContinuation(255, v3, v4, &protocol self-conformance witness table for Error);
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  v16 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v1 + *(_QWORD *)(v2 + 88)) + 16);
  os_unfair_lock_lock(v16);
  v17 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x68);
  v18 = swift_beginAccess(v17, v27, 0, 0);
  v19 = *(void (**)(char *, char *, uint64_t, __n128))(v7 + 16);
  v19(v15, v17, v6, v18);
  v20 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1, 1, v5);
  v21 = swift_beginAccess(v17, v26, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 40))(v17, v13, v6, v21);
  swift_endAccess(v26);
  os_unfair_lock_unlock(v16);
  ((void (*)(char *, char *, uint64_t))v19)(v10, v15, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v5) == 1)
  {
    v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v15, v6);
    return ((uint64_t (*)(char *, uint64_t))v22)(v10, v6);
  }
  else
  {
    sub_1003D4AB0(v25, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v5);
  }
}

uint64_t sub_1003D4AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v6);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Result(0, v4, v10, *(_QWORD *)(v14 + 32));
  __chkstk_darwin(v15);
  v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v16, a1, v15);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    return CheckedContinuation.resume(throwing:)(v13, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v17, v4);
    return CheckedContinuation.resume(returning:)(v8, a2);
  }
}

void sub_1003D4C10(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;

  v4 = qword_1007B4030;
  v11 = a3;
  v5 = a1;
  if (v4 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007BEAC0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController did activate", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

}

void sub_1003D4D00(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1003D5040();

}

void sub_1003D4D4C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;

  v6 = qword_1007B4030;
  v7 = a3;
  v14 = a1;
  v8 = a4;
  if (v6 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007BEAC0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropRemoteViewController did invalidate", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

}

id sub_1003D4E54()
{
  _QWORD *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = swift_isaMask & *v0;
  v3 = *(_QWORD *)(v2 + 0x58);
  v4 = sub_100008384((uint64_t *)&unk_1007B7360);
  v5 = swift_allocObject(v4, 20, 7);
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)((char *)v0 + v3) = v5;
  *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60)) = 0;
  v6 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x68);
  v7 = type metadata accessor for Optional(255, *(_QWORD *)(v2 + 80));
  v8 = sub_10021FF9C(&qword_1007B5A60);
  v9 = type metadata accessor for CheckedContinuation(0, v7, v8, &protocol self-conformance witness table for Error);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v11.receiver = v0;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "init");
}

id sub_1003D4F54()
{
  return sub_1003D4E54();
}

uint64_t sub_1003D4F74(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = swift_isaMask & *a1;
  swift_release(*(_QWORD *)((char *)a1 + *(_QWORD *)(v2 + 0x58)));

  v3 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x68);
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(v2 + 80));
  v5 = sub_10021FF9C(&qword_1007B5A60);
  v6 = type metadata accessor for CheckedContinuation(255, v4, v5, &protocol self-conformance witness table for Error);
  v7 = type metadata accessor for Optional(0, v6);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
}

uint64_t type metadata accessor for SDAirDropRemoteViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100287FA0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SDAirDropRemoteViewController);
}

uint64_t sub_1003D5040()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = type metadata accessor for Optional(255, *(_QWORD *)((swift_isaMask & *v0) + 0x50));
  v2 = sub_10021FF9C(&qword_1007B5A60);
  v3 = type metadata accessor for Result(0, v1, v2, &protocol self-conformance witness table for Error);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v17 - v5);
  if (qword_1007B4030 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100221DF8(v7, (uint64_t)qword_1007BEAC0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SDAirDropRemoteViewController did deactivate", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = type metadata accessor for SFError(0);
  v13 = sub_10037C2A0();
  v14 = swift_allocError(v12, v13, 0, 0);
  *v15 = 0xD000000000000018;
  v15[1] = 0x80000001006196E0;
  v15[2] = 0xD000000000000064;
  v15[3] = 0x8000000100619700;
  v15[4] = 114;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v15, enum case for SFError.unexpected(_:), v12);
  *v6 = v14;
  swift_storeEnumTagMultiPayload(v6, v3, 1);
  sub_1003D488C((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003D524C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NWBrowser.Descriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser))
  {
    sub_1004A1E34(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
    v11 = objc_msgSend(objc_allocWithZone((Class)RPClient), "init");
    v12 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient) = v11;

    strcpy(v9, "_airdrop._tcp.");
    v9[15] = -18;
    *((_QWORD *)v9 + 2) = 0;
    *((_QWORD *)v9 + 3) = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v5);
    type metadata accessor for NWParameters(0);
    v13 = static NWParameters.tcp.getter();
    NWParameters.allowLocalEndpointReuse.setter(1);
    NWParameters.includePeerToPeer.setter(1);
    v14 = type metadata accessor for NWBrowser(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = NWBrowser.init(for:using:)(v9, v13);
    v16 = *(_QWORD *)(v1 + v10);
    *(_QWORD *)(v1 + v10) = v15;
    swift_retain(v15);
    swift_release(v16);
    v17 = swift_allocObject(&unk_100727220, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    swift_retain(v17);
    NWBrowser.browseResultsChangedHandler.setter(sub_1003DAE10, v17);
    swift_release(v17);
    v18 = swift_allocObject(&unk_100727220, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v1);
    v19 = swift_allocObject(&unk_100727248, 24, 7);
    swift_weakInit(v19 + 16, v15);
    v20 = swift_allocObject(&unk_100727270, 32, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v19;
    swift_retain(v18);
    swift_retain(v19);
    NWBrowser.stateUpdateHandler.setter(sub_1003DAE68, v20);
    swift_release(v18);
    swift_release(v19);
    NWBrowser.start(queue:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue));
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
    v22 = swift_allocObject(&unk_100727220, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16, v1);
    v23 = qword_1007B3D98;
    swift_retain(v22);
    if (v23 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v24 = static AirDropActor.shared;
    v25 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v26 = (_QWORD *)swift_allocObject(&unk_100727298, 40, 7);
    v26[2] = v24;
    v26[3] = v25;
    v26[4] = v22;
    swift_retain(v24);
    swift_release(v22);
    v27 = sub_100252AF4((uint64_t)v4, (uint64_t)&unk_1007BEC28, (uint64_t)v26);
    swift_release(v15);
    return swift_release(v27);
  }
  return result;
}

void sub_1003D55D4()
{
  uint64_t v0;
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  char v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  v2 = *(uint64_t **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser);
  if (v2)
  {
    v3 = v0;
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
    swift_retain(v2);
    sub_1004A1E50(v4);
    v5 = (uint64_t *)OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    if (v6)
      objc_msgSend(v6, "invalidate");
    NWBrowser.cancel()();
    v7 = *(_QWORD *)(v4 + 24);
    if (v7)
    {
      if ((unint64_t)v7 >> 62)
      {
        if (v7 < 0)
          v11 = *(_QWORD *)(v4 + 24);
        else
          v11 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
        if (_CocoaArrayWrapper.endIndex.getter(v11))
          goto LABEL_7;
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
        if (v8)
        {
LABEL_7:
          if ((v7 & 0xC000000000000001) != 0)
            goto LABEL_58;
          if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_60;
          }
          v9 = (char *)*(id *)(v7 + 32);
          swift_bridgeObjectRelease(v7);
          v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
          swift_bridgeObjectRetain(v10);

          while (1)
          {
LABEL_16:
            v7 = (uint64_t)String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v10);
            v4 = *(_QWORD *)(v4 + 24);
            v38 = v2;
            if (!v4)
              goto LABEL_27;
            if ((unint64_t)v4 >> 62)
            {
              if (v4 < 0)
                v14 = v4;
              else
                v14 = v4 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v4);
              if (!_CocoaArrayWrapper.endIndex.getter(v14))
              {
LABEL_26:
                swift_bridgeObjectRelease(v4);
                v4 = 0;
                goto LABEL_27;
              }
            }
            else
            {
              v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v4);
              if (!v12)
                goto LABEL_26;
            }
            if ((v4 & 0xC000000000000001) != 0)
            {
LABEL_60:
              v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
              swift_bridgeObjectRelease(v4);
              v4 = *(unsigned int *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
              swift_unknownObjectRelease(v36);
            }
            else
            {
              if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              v13 = (char *)*(id *)(v4 + 32);
              swift_bridgeObjectRelease(v4);
              v4 = *(unsigned int *)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

            }
LABEL_27:
            sub_100045388((uint64_t)CFSTR("BonjourBrowse"), (uint64_t)CFSTR("Stop"), v7, v4);

            v15 = *(_QWORD *)(v3 + v1);
            *(_QWORD *)(v3 + v1) = 0;
            swift_release(v15);
            v16 = *(void **)((char *)v5 + v3);
            *(uint64_t *)((char *)v5 + v3) = 0;

            v7 = v3
               + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
            swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections, v42, 1, 0);
            v37 = (uint64_t *)v7;
            v17 = *(_QWORD *)v7;
            v18 = *(_QWORD *)v7 + 64;
            v19 = 1 << *(_BYTE *)(*(_QWORD *)v7 + 32);
            v20 = -1;
            if (v19 < 64)
              v20 = ~(-1 << v19);
            v21 = v20 & *(_QWORD *)(*(_QWORD *)v7 + 64);
            v1 = (unint64_t)(v19 + 63) >> 6;
            swift_bridgeObjectRetain(*(_QWORD *)v7);
            v22 = 0;
            v5 = &OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection;
            v2 = &OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection;
            while (v21)
            {
              while (1)
              {
                v23 = __clz(__rbit64(v21));
                v21 &= v21 - 1;
                v24 = v23 | (v22 << 6);
LABEL_49:
                v4 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v24);
                v28 = *(_QWORD *)(v4
                                + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection);
                v29 = (id)v4;
                if (v28)
                {
                  swift_retain(v28);
                  NWConnection.forceCancel()();
                  swift_release(v28);
                }
                v7 = *(_QWORD *)(v4
                               + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection);
                if (!v7)
                  break;
                swift_retain(*(_QWORD *)(v4
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection));
                NWConnection.forceCancel()();

                swift_release(v7);
                if (!v21)
                  goto LABEL_33;
              }

            }
LABEL_33:
            v25 = v22 + 1;
            if (__OFADD__(v22, 1))
            {
              __break(1u);
            }
            else
            {
              if (v25 >= v1)
                goto LABEL_54;
              v26 = *(_QWORD *)(v18 + 8 * v25);
              ++v22;
              if (v26)
                goto LABEL_48;
              v22 = v25 + 1;
              if (v25 + 1 >= v1)
                goto LABEL_54;
              v26 = *(_QWORD *)(v18 + 8 * v22);
              if (v26)
                goto LABEL_48;
              v22 = v25 + 2;
              if (v25 + 2 >= v1)
                goto LABEL_54;
              v26 = *(_QWORD *)(v18 + 8 * v22);
              if (v26)
                goto LABEL_48;
              v22 = v25 + 3;
              if (v25 + 3 >= v1)
                goto LABEL_54;
              v26 = *(_QWORD *)(v18 + 8 * v22);
              if (v26)
                goto LABEL_48;
              v27 = v25 + 4;
              if (v27 >= v1)
              {
LABEL_54:
                swift_release(v17);
                v30 = (uint64_t *)(v3
                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult);
                swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v41, 1, 0);
                v31 = *v30;
                *v30 = (uint64_t)&_swiftEmptyDictionarySingleton;
                swift_bridgeObjectRelease(v31);
                v32 = *v37;
                *v37 = (uint64_t)&_swiftEmptyDictionarySingleton;
                swift_bridgeObjectRelease(v32);
                v33 = (uint64_t *)(v3
                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
                swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount, v40, 1, 0);
                v34 = *v33;
                *v33 = (uint64_t)&_swiftEmptyDictionarySingleton;
                swift_bridgeObjectRelease(v34);
                v39 = 1;
                CurrentValueSubject.send(completion:)(&v39);
                swift_release(v38);
                return;
              }
              v26 = *(_QWORD *)(v18 + 8 * v27);
              if (v26)
              {
                v22 = v27;
LABEL_48:
                v21 = (v26 - 1) & v26;
                v24 = __clz(__rbit64(v26)) + (v22 << 6);
                goto LABEL_49;
              }
              while (1)
              {
                v22 = v27 + 1;
                if (__OFADD__(v27, 1))
                  break;
                if (v22 >= v1)
                  goto LABEL_54;
                v26 = *(_QWORD *)(v18 + 8 * v22);
                ++v27;
                if (v26)
                  goto LABEL_48;
              }
            }
            __break(1u);
LABEL_58:
            v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
            swift_bridgeObjectRelease(v7);
            v10 = *(_QWORD *)(v35 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8);
            swift_bridgeObjectRetain(v10);
            swift_unknownObjectRelease(v35);
          }
        }
      }
      swift_bridgeObjectRelease(v7);
    }
    v10 = 0xE000000000000000;
    goto LABEL_16;
  }
}

uint64_t sub_1003D5AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BEB58);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BEB58);
  if (qword_1007B3E60 != -1)
    swift_once(&qword_1007B3E60, sub_1002E9E84);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

char *sub_1003D5B50(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  char *v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *ObjectType;
  objc_super v49;
  _QWORD *v50;

  v7 = v6;
  v46 = a5;
  v47 = a6;
  v44 = a3;
  v45 = a4;
  v42 = a1;
  v43 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  v41 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue;
  v39[1] = sub_1002741DC();
  v17 = v7;
  static DispatchQoS.default.getter();
  v50 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v19, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v41);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x80000001006198D0, v16, v13, v10, 0);
  *(_QWORD *)&v7[v40] = v21;
  v22 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate];
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints] = &_swiftEmptyDictionarySingleton;
  v24 = v42;
  v23 = v43;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus] = v42;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent] = v23;
  v25 = v44;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_bleController] = v44;
  v26 = (void *)objc_opt_self(NSNotificationCenter);
  v42 = v24;
  v27 = v23;
  v28 = v25;
  v29 = objc_msgSend(v26, "defaultCenter");
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter] = v29;
  v31 = v45;
  v30 = v46;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger] = v45;
  v32 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler];
  v33 = v47;
  *(_QWORD *)v32 = v30;
  *((_QWORD *)v32 + 1) = v33;
  v50 = _swiftEmptyArrayStorage;
  v34 = sub_100008384(&qword_1007BEC40);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v31);
  swift_retain(v33);
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery] = CurrentValueSubject.init(_:)(&v50);

  v49.receiver = v17;
  v49.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v49, "init");
  v36 = *(void **)&v35[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter];
  v37 = v35;
  objc_msgSend(v36, "addObserver:selector:name:object:", v37, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.WirelessModeChanged"), 0);
  objc_msgSend(v36, "addObserver:selector:name:object:", v37, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.WirelessPowerChanged"), 0);
  objc_msgSend(v36, "addObserver:selector:name:object:", v37, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.BluetoothPowerChanged"), 0);

  swift_release(v31);
  swift_release(v33);
  return v37;
}

uint64_t sub_1003D5F64(const char *a1, const char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v21[24];

  v6 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = a3 + 16;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100727220, 24, 7);
  swift_beginAccess(v9, v21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9, v12);
  swift_unknownObjectWeakInit(v11 + 16, Strong);

  v14 = qword_1007B3D98;
  swift_retain(v11);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  if (v14 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v17 = (_QWORD *)swift_allocObject(&unk_100727360, 56, 7);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v11;
  v17[5] = a1;
  v17[6] = a2;
  swift_retain(v15);
  swift_release(v11);
  v18 = sub_100252EE0((uint64_t)v8, (uint64_t)&unk_1007BECA0, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_1003D610C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003D6178, static AirDropActor.shared, 0);
}

uint64_t sub_1003D6178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    sub_1003D61E8(*(const char **)(v0 + 56), *(_QWORD *)(v0 + 64));

  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D61E8(const char *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  const char *v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  int64_t v47;
  const char *v48;
  unint64_t v49;
  int64_t v50;
  const char *v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  const char *v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, unint64_t, uint64_t);
  unint64_t v69;
  uint64_t (*v70)(unint64_t, uint64_t);
  int v71;
  void (*v72)(unint64_t, uint64_t);
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  double v76;
  void (*v77)(unint64_t, uint64_t);
  __n128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint8_t *v85;
  char v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  const char *v93;
  double v94;
  uint64_t v95;
  __n128 v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  __n128 v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  unint64_t i;
  int64_t v109;
  unint64_t v110;
  int64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  int v118;
  uint64_t v119;
  const char *v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  void *v126;
  const char **v127;
  double v128;
  const char *v129;
  uint64_t v130;
  _QWORD *v131;
  id v132;
  uint64_t v133;
  uint64_t result;
  char *v135;
  char *v136;
  void (*v137)(char *, uint64_t);
  void (*v138)(unint64_t, uint64_t);
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  int v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  int64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  const char *v156;
  char *v157;
  char *v158;
  int v159;
  char *v160;
  uint64_t v161;
  char *v162;
  const char *v163;
  unint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  const char *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  char v174[4];

  v163 = a1;
  v4 = type metadata accessor for NWEndpoint(0);
  v165 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v168 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v158 = (char *)&v135 - v8;
  v9 = __chkstk_darwin(v7);
  v148 = (char *)&v135 - v10;
  v11 = __chkstk_darwin(v9);
  v162 = (char *)&v135 - v12;
  v13 = __chkstk_darwin(v11);
  v136 = (char *)&v135 - v14;
  v15 = __chkstk_darwin(v13);
  v135 = (char *)&v135 - v16;
  v17 = __chkstk_darwin(v15);
  v140 = (char *)&v135 - v18;
  __chkstk_darwin(v17);
  v20 = (unint64_t)&v135 - v19;
  v147 = type metadata accessor for NWBrowser.Result.Change.Flags(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (uint64_t)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NWBrowser.Result(0);
  v171 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v169 = (uint64_t)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v157 = (char *)&v135 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v135 - v28;
  __chkstk_darwin(v27);
  v144 = (char *)&v135 - v30;
  v31 = type metadata accessor for NWBrowser.Result.Change(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v135 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v160 = (char *)&v135 - v36;
  v154 = v2;
  v167 = sub_10038E61C();
  v156 = v37;
  v38 = *(_QWORD *)(a2 + 56);
  v151 = a2 + 56;
  v39 = 1 << *(_BYTE *)(a2 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & v38;
  v152 = (unint64_t)(v39 + 63) >> 6;
  v159 = enum case for NWBrowser.Result.Change.removed(_:);
  v143 = enum case for NWBrowser.Result.Change.changed(_:);
  v166 = enum case for NWEndpoint.service(_:);
  v161 = a2;
  v42 = swift_bridgeObjectRetain((const char *)a2);
  v43 = 0;
  v172 = v22;
  v149 = v20;
  v150 = v29;
  v153 = v31;
  v155 = v35;
  v139 = v4;
  while (v41)
  {
    v44 = __clz(__rbit64(v41));
    v41 &= v41 - 1;
    v170 = v43;
    v45 = v44 | ((_QWORD)v43 << 6);
    v46 = v162;
LABEL_21:
    v52 = v160;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v32 + 16))(v160, *(_QWORD *)(v161 + 48) + *(_QWORD *)(v32 + 72) * v45, v31, v42);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v52, v31);
    v53 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v35, v31);
    if (v53 == v159)
    {
      v164 = v41;
      (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
      v54 = v171;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v171 + 32))(v29, v35, v22);
      NWBrowser.Result.endpoint.getter(v55);
      v56 = v165;
      v57 = v148;
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v148, v46, v4);
      v58 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v57, v4);
      if (v58 != v166)
        goto LABEL_69;
      (*(void (**)(char *, uint64_t))(v56 + 96))(v57, v4);
      v60 = *(_QWORD *)v57;
      v59 = (const char *)*((_QWORD *)v57 + 1);
      *(_QWORD *)&v61 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v57 + 3)).n128_u64[0];
      swift_bridgeObjectRelease(*((const char **)v57 + 5), v61);
      v62 = sub_100008384(&qword_1007BEC70);
      sub_10000D0F0((uint64_t)&v57[*(int *)(v62 + 80)], &qword_1007C4790);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v4);
      sub_1003D7598(v60, v59);
      v63 = swift_bridgeObjectRelease(v59);
      (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v29, v22, v63);
      v20 = v149;
      v31 = v153;
      v35 = v155;
      v43 = v170;
      v41 = v164;
    }
    else if (v53 == v143)
    {
      v164 = v41;
      (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
      v64 = sub_100008384(&qword_1007BECA8);
      v65 = &v35[*(int *)(v64 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v144, v35, v22);
      v66 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v146 + 32))(v145, v65, v147);
      NWBrowser.Result.endpoint.getter(v66);
      v67 = v165;
      v68 = *(void (**)(char *, unint64_t, uint64_t))(v165 + 16);
      v69 = v20;
      v20 = (unint64_t)v140;
      v68(v140, v69, v4);
      v70 = *(uint64_t (**)(unint64_t, uint64_t))(v67 + 88);
      v71 = v70(v20, v4);
      if (v71 != v166)
        goto LABEL_69;
      v142 = &v35[*(int *)(v64 + 48)];
      v72 = *(void (**)(unint64_t, uint64_t))(v67 + 96);
      v72(v20, v4);
      v73 = v67;
      v75 = *(_QWORD *)v20;
      v74 = *(const char **)(v20 + 8);
      *(_QWORD *)&v76 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v20 + 24)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v20 + 40), v76);
      v141 = sub_100008384(&qword_1007BEC70);
      sub_10000D0F0(v20 + *(int *)(v141 + 80), &qword_1007C4790);
      v77 = *(void (**)(unint64_t, uint64_t))(v73 + 8);
      v77(v69, v4);
      v20 = v69;
      if (v75 == v167 && v74 == v156)
      {
        v78 = swift_bridgeObjectRelease(v156);
        v29 = v150;
        v79 = v144;
        v41 = v164;
LABEL_34:
        (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v145, v147, v78);
        v22 = v172;
        v88 = *(void (**)(char *, uint64_t))(v171 + 8);
        v88(v79, v172);
        v88(v142, v22);
        v4 = v139;
        goto LABEL_37;
      }
      v137 = (void (*)(char *, uint64_t))v77;
      v138 = v72;
      v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v74, v167, v156, 0);
      v78 = swift_bridgeObjectRelease(v74);
      v29 = v150;
      v79 = v144;
      v41 = v164;
      if ((v86 & 1) != 0)
        goto LABEL_34;
      v89 = v135;
      NWBrowser.Result.endpoint.getter(v87);
      v20 = (unint64_t)v136;
      v90 = (uint64_t)v79;
      v4 = v139;
      v68(v136, (unint64_t)v89, v139);
      v91 = v70(v20, v4);
      if (v91 != v166)
        goto LABEL_69;
      v138(v20, v4);
      v92 = *(_QWORD *)v20;
      v93 = *(const char **)(v20 + 8);
      *(_QWORD *)&v94 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v20 + 24)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v20 + 40), v94);
      sub_10000D0F0(v20 + *(int *)(v141 + 80), &qword_1007C4790);
      v137(v89, v4);
      v95 = v145;
      sub_1003D7044(v90, v92, v93, v145);
      v96 = swift_bridgeObjectRelease(v93);
      (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v95, v147, v96);
      v22 = v172;
      v97 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
      v97(v90, v172);
      v97((uint64_t)v142, v22);
      v20 = v149;
LABEL_37:
      v31 = v153;
      v35 = v155;
      v43 = v170;
    }
    else
    {
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v80 = type metadata accessor for Logger(0);
      v81 = sub_100221DF8(v80, (uint64_t)qword_1007BEB58);
      v82 = Logger.logObject.getter(v81);
      v83 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v84 = 0;
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "Unknown bonjour result change", v84, 2u);
        v85 = v84;
        v35 = v155;
        swift_slowDealloc(v85, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      v43 = v170;
    }
  }
  v47 = (int64_t)(v43 + 1);
  v46 = v162;
  if (__OFADD__(v43, 1))
  {
    __break(1u);
    goto LABEL_66;
  }
  v48 = v156;
  if (v47 >= v152)
    goto LABEL_38;
  v49 = *(_QWORD *)(v151 + 8 * v47);
  v50 = (int64_t)(v43 + 1);
  if (v49)
    goto LABEL_20;
  v50 = (int64_t)(v43 + 2);
  if ((uint64_t)(v43 + 2) >= v152)
    goto LABEL_38;
  v49 = *(_QWORD *)(v151 + 8 * v50);
  if (v49)
    goto LABEL_20;
  v50 = (int64_t)(v43 + 3);
  if ((uint64_t)(v43 + 3) >= v152)
    goto LABEL_38;
  v49 = *(_QWORD *)(v151 + 8 * v50);
  if (v49)
    goto LABEL_20;
  v51 = v43 + 4;
  if ((uint64_t)(v43 + 4) >= v152)
  {
LABEL_38:
    swift_release(v161);
    v98 = *((_QWORD *)v163 + 7);
    v170 = v163 + 56;
    v99 = 1 << v163[32];
    v100 = -1;
    if (v99 < 64)
      v100 = ~(-1 << v99);
    v20 = v100 & v98;
    v101 = (unint64_t)(v99 + 63) >> 6;
    v102 = swift_bridgeObjectRetain(v163);
    v103 = 0;
    v104 = v171;
    v105 = v165;
    v106 = v168;
    if (v20)
      goto LABEL_43;
LABEL_44:
    v109 = v103 + 1;
    if (!__OFADD__(v103, 1))
    {
      if (v109 < v101)
      {
        v110 = *(_QWORD *)&v170[8 * v109];
        ++v103;
        if (v110)
          goto LABEL_57;
        v103 = v109 + 1;
        if (v109 + 1 >= v101)
          goto LABEL_64;
        v110 = *(_QWORD *)&v170[8 * v103];
        if (v110)
          goto LABEL_57;
        v103 = v109 + 2;
        if (v109 + 2 >= v101)
          goto LABEL_64;
        v110 = *(_QWORD *)&v170[8 * v103];
        if (v110)
        {
LABEL_57:
          v20 = (v110 - 1) & v110;
          for (i = __clz(__rbit64(v110)) + (v103 << 6); ; i = v107 | (v103 << 6))
          {
            v112 = v157;
            v113 = v172;
            (*(void (**)(char *, unint64_t, uint64_t, __n128))(v104 + 16))(v157, *((_QWORD *)v163 + 6) + *(_QWORD *)(v104 + 72) * i, v172, v102);
            v114 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v104 + 32))(v169, v112, v113);
            v115 = v158;
            NWBrowser.Result.endpoint.getter(v114);
            v116 = v115;
            v117 = v168;
            (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v168, v115, v4);
            v118 = (*(uint64_t (**)(char *, uint64_t))(v105 + 88))(v117, v4);
            if (v118 != v166)
              break;
            (*(void (**)(char *, uint64_t))(v105 + 96))(v106, v4);
            v119 = *(_QWORD *)v106;
            v120 = (const char *)*((_QWORD *)v106 + 1);
            *(_QWORD *)&v121 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v106 + 3)).n128_u64[0];
            swift_bridgeObjectRelease(*((const char **)v106 + 5), v121);
            v122 = sub_100008384(&qword_1007BEC70);
            sub_10000D0F0((uint64_t)&v106[*(int *)(v122 + 80)], &qword_1007C4790);
            (*(void (**)(char *, uint64_t))(v105 + 8))(v116, v4);
            if (v119 == v167 && v120 == v48
              || (_stringCompareWithSmolCheck(_:_:expecting:)(v119, v120, v167, v48, 0) & 1) != 0)
            {
              v104 = v171;
              (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v169, v172);
              v102 = swift_bridgeObjectRelease(v120);
              if (!v20)
                goto LABEL_44;
            }
            else
            {
              v123 = v169;
              sub_1003D78D8(v169, v119, v120);
              v124 = swift_bridgeObjectRelease(v120);
              v104 = v171;
              v125 = v123;
              v48 = v156;
              (*(void (**)(uint64_t, uint64_t, __n128))(v171 + 8))(v125, v172, v124);
              if (!v20)
                goto LABEL_44;
            }
LABEL_43:
            v107 = __clz(__rbit64(v20));
            v20 &= v20 - 1;
          }
          goto LABEL_69;
        }
        v111 = v109 + 3;
        if (v111 < v101)
        {
          v110 = *(_QWORD *)&v170[8 * v111];
          if (!v110)
          {
            while (1)
            {
              v103 = v111 + 1;
              if (__OFADD__(v111, 1))
                goto LABEL_68;
              if (v103 >= v101)
                goto LABEL_64;
              v110 = *(_QWORD *)&v170[8 * v103];
              ++v111;
              if (v110)
                goto LABEL_57;
            }
          }
          v103 = v111;
          goto LABEL_57;
        }
      }
LABEL_64:
      swift_bridgeObjectRelease(v48, v102.n128_f64[0]);
      swift_release(v163);
      v126 = v154;
      v127 = (const char **)&v154[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult];
      *(_QWORD *)&v128 = swift_beginAccess(&v154[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult], v174, 0, 0).n128_u64[0];
      v129 = *v127;
      swift_bridgeObjectRetain(v129, v128);
      v131 = sub_10022965C(v130);
      swift_bridgeObjectRelease(v129);
      v173 = v131;
      v132 = v126;
      swift_retain(v131);
      sub_1003DC370((uint64_t *)&v173, v132);
      swift_release(v131);

      v133 = (uint64_t)v173;
      CurrentValueSubject.send(_:)(&v173);
      return swift_release(v133);
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v49 = *(_QWORD *)(v151 + 8 * (_QWORD)v51);
  if (v49)
  {
    v50 = (int64_t)(v43 + 4);
LABEL_20:
    v41 = (v49 - 1) & v49;
    v170 = (const char *)v50;
    v45 = __clz(__rbit64(v49)) + (v50 << 6);
    v29 = v150;
    goto LABEL_21;
  }
  while (1)
  {
    v50 = (int64_t)(v51 + 1);
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v152)
      goto LABEL_38;
    v49 = *(_QWORD *)(v151 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_20;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001006198B0, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 680, 0);
  __break(1u);

  result = swift_release(v173);
  __break(1u);
  return result;
}

uint64_t sub_1003D6FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = a3 + 16;
    swift_beginAccess(v9, &v11, 0, 0);
    Strong = swift_weakLoadStrong(v9);
    sub_1003DC404(a1);

    return swift_release(Strong);
  }
  return result;
}

void sub_1003D7044(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  _QWORD v43[2];
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;

  v8 = sub_100008384(&qword_1007BDA78);
  __chkstk_darwin(v8);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NWBrowser.Result.Change.Flags(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)v43 - v16;
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v43 - v16, a4, v11);
  static NWBrowser.Result.Change.Flags.metadataChanged.getter(v18);
  v19 = sub_100220D78((unint64_t *)&unk_1007BECB0, (uint64_t (*)(uint64_t))&type metadata accessor for NWBrowser.Result.Change.Flags, (uint64_t)&protocol conformance descriptor for NWBrowser.Result.Change.Flags);
  LOBYTE(a4) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v17, v11, v19);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  v20(v17, v11);
  if ((a4 & 1) != 0)
  {
    if (sub_1004FCF60())
    {
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v21 = type metadata accessor for Logger(0);
      sub_100221DF8(v21, (uint64_t)qword_1007BEB58);
      v22 = swift_bridgeObjectRetain_n(a3, 2);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v44[0] = v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain(a3);
        v45 = sub_100228BD8(a2, (unint64_t)a3, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 4);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Bonjour TXT record change for service name %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
      }
      v39 = v43[1];
      sub_1003D7598(a2, a3);
      v40 = type metadata accessor for NWBrowser.Result(0);
      v41 = *(_QWORD *)(v40 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v10, a1, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v10, 0, 1, v40);
      *(_QWORD *)&v42 = swift_beginAccess(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v44, 33, 0).n128_u64[0];
      swift_bridgeObjectRetain(a3, v42);
      sub_10039540C((uint64_t)v10, a2, (uint64_t)a3);
      swift_endAccess(v44);
    }
    else
    {
      v32 = a2;
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v33 = type metadata accessor for Logger(0);
      sub_100221DF8(v33, (uint64_t)qword_1007BEB58);
      v34 = swift_bridgeObjectRetain_n(a3, 2);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.default.getter(v35);
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v44[0] = v38;
        *(_DWORD *)v37 = 136315138;
        swift_bridgeObjectRetain(a3);
        v45 = sub_100228BD8(v32, (unint64_t)a3, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v37 + 4);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "AWDL not yet available for serviceName %s", v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
      }
    }
  }
  else
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007BEB58);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unhandled Bonjour service change", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

  }
}

uint64_t sub_1003D7598(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  void *v26;
  uint64_t v27;
  const char **v28;
  double v29;
  void (*v30)(_QWORD *, __n128);
  const char *v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 v34;
  _BYTE v37[24];

  v3 = v2;
  v6 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100008384(&qword_1007BDA78);
  __chkstk_darwin(v9);
  v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for NWBrowser.Result(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v13 = swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v37, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v13);
  sub_10039540C((uint64_t)v11, a1, (uint64_t)a2);
  swift_endAccess(v37);
  *(_QWORD *)&v14 = swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount, v37, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v14);
  sub_10026B050(a1, (uint64_t)a2);
  swift_endAccess(v37);
  swift_bridgeObjectRelease(a2);
  v15 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  *(_QWORD *)&v16 = swift_beginAccess(v3+ OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections, v37, 32, 0).n128_u64[0];
  v17 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    swift_bridgeObjectRetain(a2, v16);
    v18 = sub_10045C200(a1, (uint64_t)a2);
    if ((v19 & 1) != 0)
    {
      v20 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_endAccess(v37);
      v21 = v20;
      swift_bridgeObjectRelease(a2);
      v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection];
      v23 = v21;
      if (v22)
      {
        swift_retain(v22);
        NWConnection.forceCancel()();
        swift_release(v22);
      }
      v24 = *(_QWORD *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection];
      if (v24)
      {
        swift_retain(*(_QWORD *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection]);
        NWConnection.forceCancel()();

        swift_release(v24);
      }
      else
      {

      }
    }
    else
    {
      swift_endAccess(v37);
      swift_bridgeObjectRelease(a2);
      v21 = 0;
    }
  }
  else
  {
    swift_endAccess(v37);
    v21 = 0;
  }
  *(_QWORD *)&v25 = swift_beginAccess(v15, v37, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v25);
  v26 = (void *)sub_10026B044(a1, (uint64_t)a2);
  swift_endAccess(v37);
  swift_bridgeObjectRelease(a2);

  v27 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  v28 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(_QWORD *)&v29 = swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints, v37, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v29);
  sub_100394C00((uint64_t)v8, a1, (uint64_t)a2);
  swift_endAccess(v37);
  v30 = *(void (**)(_QWORD *, __n128))(v3
                                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  v31 = *v28;
  swift_bridgeObjectRetain(*v28);
  v33 = sub_100229314(v32);
  v34 = swift_bridgeObjectRelease(v31);
  v30(v33, v34);

  return swift_release(v33);
}

void sub_1003D78D8(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v8 = sub_100008384(&qword_1007BDA78);
  __chkstk_darwin(v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1003D8738(a2, a3) & 1) != 0)
  {
    if (sub_1004FCF60())
    {
      v11 = type metadata accessor for NWBrowser.Result(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      *(_QWORD *)&v13 = swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v23, 33, 0).n128_u64[0];
      swift_bridgeObjectRetain(a3, v13);
      sub_10039540C((uint64_t)v10, a2, (uint64_t)a3);
      swift_endAccess(v23);
      return;
    }
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v21 = type metadata accessor for Logger(0);
    sub_100221DF8(v21, (uint64_t)qword_1007BEB58);
    v22 = swift_bridgeObjectRetain_n(a3, 2);
    v16 = Logger.logObject.getter(v22);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v23[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(a3, v23[0]);
      v24 = sub_100228BD8(a2, (unint64_t)a3, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      v20 = "AWDL not yet available for serviceName %s";
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v14 = type metadata accessor for Logger(0);
    sub_100221DF8(v14, (uint64_t)qword_1007BEB58);
    v15 = swift_bridgeObjectRetain_n(a3, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v23[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(a3, v23[0]);
      v24 = sub_100228BD8(a2, (unint64_t)a3, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      v20 = "Already discovering/discovered %s";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v16, v17, v20, v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      return;
    }
  }

  swift_bridgeObjectRelease_n(a3, 2);
}

uint64_t sub_1003D7C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003D7CB4, static AirDropActor.shared, 0);
}

void sub_1003D7CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  char *v5;
  double v6;
  const char *v7;
  double v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
  v2 = *(_QWORD *)(v1 + 24);
  if (!v2)
    goto LABEL_12;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v4 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v1 + 24)).n128_u64[0];
    if (v3)
      goto LABEL_4;
    goto LABEL_11;
  }
  if (v2 < 0)
    v3 = *(_QWORD *)(v1 + 24);
  else
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)(v1 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
LABEL_11:
    swift_bridgeObjectRelease((const char *)v2, v4);
LABEL_12:
    v7 = (const char *)0xE000000000000000;
    goto LABEL_13;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease((const char *)v2).n128_u64[0];
    v7 = *(const char **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8);
    swift_bridgeObjectRetain(v7, v14);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    v5 = (char *)*(id *)(v2 + 32);
    *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)v2).n128_u64[0];
    v7 = *(const char **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
    swift_bridgeObjectRetain(v7, v6);

  }
LABEL_13:
  v2 = (uint64_t)String._bridgeToObjectiveC()();
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
  v3 = *(_QWORD *)(v1 + 24);
  if (!v3)
  {
LABEL_24:
    sub_100045388((uint64_t)CFSTR("BonjourBrowse"), (uint64_t)CFSTR("Start"), v2, v3);

    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (!((unint64_t)v3 >> 62))
  {
    v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v10 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v1 + 24), v8).n128_u64[0];
    if (v9)
      goto LABEL_16;
LABEL_23:
    swift_bridgeObjectRelease((const char *)v3, v10);
    v3 = 0;
    goto LABEL_24;
  }
  if (v3 < 0)
    v12 = *(_QWORD *)(v1 + 24);
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)(v1 + 24), v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v12))
    goto LABEL_23;
LABEL_16:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_27:
    v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    swift_bridgeObjectRelease((const char *)v3);
    v3 = *(unsigned int *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease(v15);
    goto LABEL_24;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(v3 + 32);
    swift_bridgeObjectRelease((const char *)v3);
    v3 = *(unsigned int *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1003D7EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a1;
  v4[6] = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1003D7F4C, v5, 0);
}

uint64_t sub_1003D7F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate, v4);
    *(_QWORD *)(v0 + 64) = v6;

    if (v6)
      return swift_task_switch(sub_1003D7FF4, static AirDropActor.shared, 0);
  }
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D7FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  sub_100398FDC();
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
  if (v3)
  {
    v4 = v3;
    sub_1003D55D4();

    v3 = *(void **)(v1 + v2);
  }
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v1 + v2) = 0;

  swift_unknownObjectRelease(v5);
  return swift_task_switch(sub_1003B48A4, v6, 0);
}

id sub_1003D8074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  id result;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  os_log_t v71;
  int v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = type metadata accessor for NWBrowser.Result(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NWEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v75 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v68 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v68 - v14;
  NWBrowser.Result.endpoint.getter(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v15, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v12, v6) != enum case for NWEndpoint.service(_:))
  {
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001006198B0, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 680, 0);
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
  v16 = (const char *)*((_QWORD *)v12 + 1);
  v77 = *(_QWORD *)v12;
  *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v12 + 3)).n128_u64[0];
  swift_bridgeObjectRelease(*((const char **)v12 + 5), v17);
  v18 = sub_100008384(&qword_1007BEC70);
  sub_10000D0F0((uint64_t)&v12[*(int *)(v18 + 80)], &qword_1007C4790);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  v19 = sub_1004FC990();
  if ((v20 & 1) != 0)
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v46 = type metadata accessor for Logger(0);
    sub_100221DF8(v46, (uint64_t)qword_1007BEB58);
    swift_bridgeObjectRetain(v16);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = os_log_type_enabled(v48, v49);
    v51 = v77;
    if (v50)
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      v79 = v53;
      *(_DWORD *)v52 = 136315138;
      swift_bridgeObjectRetain(v16);
      v78 = sub_100228BD8(v51, (unint64_t)v16, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v52 + 4);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing TXT record for Bonjour service %s", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
    }
    return 0;
  }
  v21 = v76;
  v22 = *(void **)(v76 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
  if (!v22)
  {
    swift_bridgeObjectRelease(v16);
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_100221DF8(v54, (uint64_t)qword_1007BEB58);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Missing RPClient for Bonjour browser", v58, 2u);
      swift_slowDealloc(v58, -1, -1);
    }

    return 0;
  }
  v23 = v19;
  v24 = qword_1007B4038;
  v74 = v22;
  if (v24 != -1)
    swift_once(&qword_1007B4038, sub_1003D5AC0);
  v25 = type metadata accessor for Logger(0);
  sub_100221DF8(v25, (uint64_t)qword_1007BEB58);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v26 = swift_bridgeObjectRetain_n(v16, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc(22, -1);
    v72 = v29;
    v31 = v30;
    v73 = swift_slowAlloc(64, -1);
    v79 = v73;
    *(_DWORD *)v31 = 136315394;
    v71 = v27;
    swift_bridgeObjectRetain(v16);
    v78 = sub_100228BD8(v77, (unint64_t)v16, &v79);
    v70 = &v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v31 + 4);
    v32 = swift_bridgeObjectRelease_n(v16, 3);
    *(_WORD *)(v31 + 12) = 2080;
    v69 = v31 + 14;
    v33 = (const char *)NWBrowser.Result.interfaces.getter(v32);
    v34 = type metadata accessor for NWInterface(0);
    v35 = v23;
    v36 = Array.description.getter(v33, v34);
    v38 = v37;
    swift_bridgeObjectRelease(v33);
    v39 = v36;
    v23 = v35;
    v78 = sub_100228BD8(v39, (unint64_t)v38, &v79);
    v21 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v70, v69);
    v40 = swift_bridgeObjectRelease(v38);
    v41 = v5;
    v42 = v77;
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v41, v2, v40);
    v43 = v71;
    _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v72, "Creating service %s from interfaces %s", (uint8_t *)v31, 0x16u);
    v44 = v73;
    swift_arrayDestroy(v73, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(v16, 2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    v42 = v77;
  }
  v60 = (uint64_t)v75;
  NWBrowser.Result.endpoint.getter(v45);
  v61 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus);
  v62 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent);
  v63 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue);
  v64 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourDiscoverConnection(0));
  v65 = v61;
  v66 = v62;
  v67 = v63;
  return sub_10031D9EC(v42, (uint64_t)v16, v60, v23, (uint64_t)v65, (uint64_t)v66, (uint64_t)v74, (uint64_t)v67);
}

uint64_t sub_1003D8738(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  id v25;
  char v26;
  _BYTE v29[24];

  v3 = v2;
  v6 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(_QWORD *)&v10 = swift_beginAccess(v9, v29, 32, 0).n128_u64[0];
  v11 = *v9;
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain(a2, v10);
    v12 = sub_10045C200(a1, (uint64_t)a2);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v11 + 56);
      v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      v17 = *(_QWORD *)(v16 - 8);
      sub_10022E534(v15 + *(_QWORD *)(v17 + 72) * v14, (uint64_t)v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    }
    else
    {
      v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    }
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_endAccess(v29);
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v8, 1, v16);
  sub_10000D0F0((uint64_t)v8, &qword_1007B7760);
  if (v18 == 1)
  {
    v19 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
    *(_QWORD *)&v20 = swift_beginAccess(v3+ OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections, v29, 32, 0).n128_u64[0];
    v21 = *v19;
    if (*(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRetain(a2, v20);
      v22 = sub_10045C200(a1, (uint64_t)a2);
      v24 = v23;
      if ((v23 & 1) != 0)
        v25 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      else
        v25 = 0;
      v26 = v24 ^ 1;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v25 = 0;
      v26 = 1;
    }
    swift_endAccess(v29);

  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1003D8960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003D89C8, static AirDropActor.shared, 0);
}

uint64_t sub_1003D89C8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus), "bluetoothEnabled");
  v2 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser))
      sub_1004A1E34(*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
  }
  else
  {
    sub_1004A1E50(*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D8BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  v5 = sub_100008384(&qword_1007BDA78);
  v4[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7760);
  v4[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[37] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[38] = v8;
  v4[39] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v4[40] = static AirDropActor.shared;
  return swift_task_switch(sub_1003D8CD8, v9, 0);
}

uint64_t sub_1003D8CD8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char **v7;
  double v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  const char *v11;
  double v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  const char *v17;

  v1 = sub_1003D8074(*(_QWORD *)(v0 + 248));
  *(_QWORD *)(v0 + 328) = v1;
  if (v1)
  {
    v2 = v1;
    v4 = *(const char **)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    *(_QWORD *)(v0 + 336) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    v7 = (const char **)(v3 + v6);
    *(_QWORD *)&v8 = swift_beginAccess(v3 + v6, v0 + 16, 33, 0).n128_u64[0];
    swift_bridgeObjectRetain(v4, v8);
    v9 = v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    v17 = *v7;
    *v7 = (const char *)0x8000000000000000;
    sub_10046D130((uint64_t)v9, v5, v4, isUniquelyReferenced_nonNull_native);
    v11 = *v7;
    *v7 = v17;
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v11).n128_u64[0];
    swift_bridgeObjectRelease(v4, v12);
    swift_endAccess(v0 + 16);
    v13 = (_QWORD *)swift_task_alloc(dword_1007BA6CC);
    *(_QWORD *)(v0 + 344) = v13;
    *v13 = v0;
    v13[1] = sub_1003D8E24;
    return sub_10031DB2C(*(_QWORD *)(v0 + 312));
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 280);
    v16 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003D8E24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 344);
  *(_QWORD *)(*v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003D9370;
  else
    v4 = sub_1003D8E88;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 320), 0);
}

uint64_t sub_1003D8E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  const char *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char **v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  void (*v24)(_QWORD *, __n128);
  const char *v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  double v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  const char **v39;
  double v40;
  const char *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[2];

  v52 = v0 + 112;
  v53 = v0 + 64;
  v1 = v0 + 136;
  v51 = v0 + 160;
  if (qword_1007B4038 != -1)
    swift_once(&qword_1007B4038, sub_1003D5AC0);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007BEB58);
  v4 = swift_bridgeObjectRetain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(const char **)(v0 + 264);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 256);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v54[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(_QWORD *)(v0 + 240) = sub_100228BD8(v9, (unint64_t)v8, v54);
    v1 = v0 + 136;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v10 + 4);
    swift_bridgeObjectRelease_n(v8, 3);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Bonjour service %s completed discovery", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 264), 2);
  }

  v12 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 288);
  v13 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(const char **)(v0 + 264);
  sub_10022E534(v50, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
  v19 = (const char **)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(_QWORD *)&v20 = swift_beginAccess(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints, v51, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v18, v20);
  sub_100394C00(v14, v17, (uint64_t)v18);
  swift_endAccess(v51);
  *(_QWORD *)&v21 = swift_beginAccess(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount, v1, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v18, v21);
  sub_10026B050(v17, (uint64_t)v18);
  swift_endAccess(v1);
  swift_bridgeObjectRelease(v18);
  v22 = type metadata accessor for NWBrowser.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
  *(_QWORD *)&v23 = swift_beginAccess(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v52, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v18, v23);
  sub_10039540C(v16, v17, (uint64_t)v18);
  swift_endAccess(v52);
  v24 = *(void (**)(_QWORD *, __n128))(v15
                                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  v25 = *v19;
  swift_bridgeObjectRetain(v25);
  v27 = sub_100229314(v26);
  v28 = swift_bridgeObjectRelease(v25);
  v24(v27, v28);
  swift_release(v27);
  sub_10022E578(v50);
  v29 = *(_QWORD *)(v0 + 352);
  v30 = *(_QWORD *)(v0 + 328);
  v31 = *(const char **)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)&v33 = swift_beginAccess(*(_QWORD *)(v0 + 272) + *(_QWORD *)(v0 + 336), v53, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v31, v33);
  v34 = (void *)sub_10026B044(v32, (uint64_t)v31);
  swift_endAccess(v53);
  swift_bridgeObjectRelease(v31);

  v35 = *(_QWORD *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection);
  if (v35)
  {
    swift_retain(*(_QWORD *)(v30
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection));
    NWConnection.forceCancel()();
    swift_release(v35);
  }
  v36 = *(_QWORD *)(v0 + 328);
  v37 = *(_QWORD *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection);
  if (v37)
  {
    swift_retain(*(_QWORD *)(v36
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection));
    NWConnection.forceCancel()();
    swift_release(v37);
  }
  v38 = *(char **)(v0 + 272);
  v39 = (const char **)&v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult];
  *(_QWORD *)&v40 = swift_beginAccess(&v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult], v0 + 88, 0, 0).n128_u64[0];
  v41 = *v39;
  swift_bridgeObjectRetain(*v39, v40);
  v43 = sub_10022965C(v42);
  swift_bridgeObjectRelease(v41);
  v54[0] = (uint64_t)v43;
  v44 = v38;
  swift_retain(v43);
  sub_1003DC370(v54, v44);
  if (v29)
  {

    return swift_release(v54[0]);
  }
  else
  {
    v46 = *(void **)(v0 + 328);

    swift_release(v43);
    v47 = v54[0];
    *(_QWORD *)(v0 + 232) = v54[0];
    CurrentValueSubject.send(_:)(v0 + 232);
    swift_release(v47);

    sub_1002845F4(0, 0);
    v48 = *(_QWORD *)(v0 + 280);
    v49 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v49);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003D9370()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  const char **v3;
  double v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  const char *v18;
  double v19;
  char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  const char *v26;
  double v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  double v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  const char **v53;
  double v54;
  const char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v1 = *(const char **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = (const char **)(*(_QWORD *)(v0 + 272)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
  *(_QWORD *)&v4 = swift_beginAccess(v3, v0 + 40, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v1, v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v64[0] = (uint64_t)*v3;
  v6 = v64[0];
  *v3 = (const char *)0x8000000000000000;
  v8 = sub_10045C200(v2, (uint64_t)v1);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = (v7 & 1) == 0;
  v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v7;
  if (*(_QWORD *)(v6 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100470938();
      v6 = v64[0];
    }
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 264);
    sub_100469A18(v11, isUniquelyReferenced_nonNull_native);
    v6 = v64[0];
    v15 = sub_10045C200(v14, v13);
    if ((v12 & 1) != (v16 & 1))
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    v8 = v15;
  }
  v18 = *v3;
  *v3 = (const char *)v6;
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v20 = (char *)*v3;
  swift_bridgeObjectRetain(*v3, v19);
  if ((v12 & 1) == 0)
  {
    v21 = *(const char **)(v0 + 264);
    sub_10046E078(v8, *(_QWORD *)(v0 + 256), (uint64_t)v21, 0, v20);
    swift_bridgeObjectRetain(v21);
  }
  v22 = *((_QWORD *)v20 + 7);
  v23 = *(_QWORD *)(v22 + 8 * v8);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    goto LABEL_21;
  isUniquelyReferenced_nonNull_native = v0 + 64;
  v26 = *(const char **)(v0 + 264);
  *(_QWORD *)(v22 + 8 * v8) = v25;
  swift_endAccess(v0 + 40);
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v20).n128_u64[0];
  swift_bridgeObjectRelease(v26, v27);
  if (qword_1007B4038 != -1)
LABEL_22:
    swift_once(&qword_1007B4038, sub_1003D5AC0);
  v28 = *(_QWORD *)(v0 + 352);
  v29 = *(const char **)(v0 + 264);
  v30 = type metadata accessor for Logger(0);
  sub_100221DF8(v30, (uint64_t)qword_1007BEB58);
  swift_bridgeObjectRetain(v29);
  swift_errorRetain(v28);
  swift_bridgeObjectRetain(v29);
  v31 = swift_errorRetain(v28);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter(v32);
  v34 = os_log_type_enabled(v32, v33);
  v35 = *(_QWORD *)(v0 + 352);
  v36 = *(const char **)(v0 + 264);
  if (v34)
  {
    v37 = *(_QWORD *)(v0 + 256);
    v63 = isUniquelyReferenced_nonNull_native;
    v38 = swift_slowAlloc(22, -1);
    v39 = swift_slowAlloc(64, -1);
    v64[0] = v39;
    *(_DWORD *)v38 = 136315394;
    swift_bridgeObjectRetain(v36);
    *(_QWORD *)(v0 + 224) = sub_100228BD8(v37, (unint64_t)v36, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v38 + 4);
    swift_bridgeObjectRelease_n(v36, 3);
    *(_WORD *)(v38 + 12) = 2080;
    swift_getErrorValue(v35, v0 + 216, v0 + 184);
    v40 = Error.flatDescription.getter(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
    v42 = (const char *)v41;
    *(_QWORD *)(v0 + 208) = sub_100228BD8(v40, v41, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v38 + 14);
    swift_bridgeObjectRelease(v42);
    swift_errorRelease(v35);
    swift_errorRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Bonjour service %s failed discovery -  %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    v43 = v38;
    isUniquelyReferenced_nonNull_native = v63;
    swift_slowDealloc(v43, -1, -1);

    swift_errorRelease(v35);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 352));
    swift_bridgeObjectRelease_n(v36, 2);
    swift_errorRelease(v35);
    swift_errorRelease(v35);

  }
  v44 = *(_QWORD *)(v0 + 328);
  v45 = *(const char **)(v0 + 264);
  v46 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)&v47 = swift_beginAccess(*(_QWORD *)(v0 + 272) + *(_QWORD *)(v0 + 336), isUniquelyReferenced_nonNull_native, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(v45, v47);
  v48 = (void *)sub_10026B044(v46, (uint64_t)v45);
  swift_endAccess(isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v45);

  v49 = *(_QWORD *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection);
  if (v49)
  {
    swift_retain(*(_QWORD *)(v44
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection));
    NWConnection.forceCancel()();
    swift_release(v49);
  }
  v50 = *(_QWORD *)(v0 + 328);
  v51 = *(_QWORD *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection);
  if (v51)
  {
    swift_retain(*(_QWORD *)(v50
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection));
    NWConnection.forceCancel()();
    swift_release(v51);
  }
  v52 = *(char **)(v0 + 272);
  v53 = (const char **)&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult];
  *(_QWORD *)&v54 = swift_beginAccess(&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult], v0 + 88, 0, 0).n128_u64[0];
  v55 = *v53;
  swift_bridgeObjectRetain(*v53, v54);
  v57 = sub_10022965C(v56);
  swift_bridgeObjectRelease(v55);
  v64[0] = (uint64_t)v57;
  v58 = v52;
  swift_retain(v57);
  sub_1003DC370(v64, v58);
  v59 = *(void **)(v0 + 328);

  swift_release(v57);
  v60 = v64[0];
  *(_QWORD *)(v0 + 232) = v64[0];
  CurrentValueSubject.send(_:)(v0 + 232);
  swift_release(v60);

  sub_1002845F4((uint64_t)sub_1002202EC, 0);
  v61 = *(_QWORD *)(v0 + 280);
  v62 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v62);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[11] = a4;
  v5 = sub_100008384(&qword_1007BEC30);
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BEC38);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v4[18] = static AirDropActor.shared;
  return swift_task_switch(sub_1003D99B0, v9, 0);
}

uint64_t sub_1003D99B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 152) = Strong;
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(Strong
                                     + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery);
    v8 = sub_100008384(&qword_1007BEC40);
    v9 = sub_10026E2FC(&qword_1007BEC48, &qword_1007BEC40, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    Publisher<>.values.getter(v8, v9);
    AsyncPublisher.makeAsyncIterator()(v7);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v10 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
    *(_QWORD *)(v0 + 160) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
    swift_beginAccess(v4 + v10, v0 + 40, 0, 0);
    *(_QWORD *)(v0 + 168) = static AirDropActor.shared;
    *(_QWORD *)(v0 + 176) = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v11 = sub_10026E2FC(&qword_1007BEC50, &qword_1007BEC38, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v12 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 184) = v12;
    *v12 = v0;
    v12[1] = sub_1003D9B90;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 72, *(_QWORD *)(v0 + 120), v11);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003D9B90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 168);
  if (v0)
  {
    if (v4)
    {
      v5 = *(_QWORD *)(v2 + 176);
      ObjectType = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1003DA03C;
  }
  else
  {
    if (v4)
    {
      v10 = *(_QWORD *)(v2 + 176);
      v11 = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1003D9C5C;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_1003D9C5C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[18];
  v0[25] = v0[9];
  return swift_task_switch(sub_1003D9C78, v1, 0);
}

uint64_t sub_1003D9C78()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  void *v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  void *v26;
  double v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v1 = *(const char **)(v0 + 200);
  if (v1)
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v2 = type metadata accessor for Logger(0);
    sub_100221DF8(v2, (uint64_t)qword_1007BEB58);
    v3 = swift_bridgeObjectRetain_n(v1, 2);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v30 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_bridgeObjectRetain(v1, v30);
      v9 = Array.description.getter(v8, &type metadata for String);
      v11 = v10;
      swift_bridgeObjectRelease(v1);
      *(_QWORD *)(v6 + 4) = sub_100228BD8(v9, (unint64_t)v11, &v30);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Service names to discover %s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1, 2);
    }

    v15 = Logger.logObject.getter(*(id *)(v0 + 152));
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v18 = *(char **)(v0 + 152);
      v17 = *(_QWORD *)(v0 + 160);
      v19 = swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v30 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = *(const char **)&v18[v17];
      swift_bridgeObjectRetain(v21, v30);
      v23 = Dictionary.description.getter(v22, &type metadata for String, &type metadata for Int, &protocol witness table for String);
      v25 = v24;
      swift_bridgeObjectRelease(v21);
      *(_QWORD *)(v19 + 4) = sub_100228BD8(v23, (unint64_t)v25, &v30);
      swift_bridgeObjectRelease(v25);

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Current service name timeouts %s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {
      v26 = *(void **)(v0 + 152);

    }
    *(_QWORD *)&v27 = sub_1003DA09C(v1).n128_u64[0];
    swift_bridgeObjectRelease(v1, v27);
    *(_QWORD *)(v0 + 168) = static AirDropActor.shared;
    *(_QWORD *)(v0 + 176) = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v28 = sub_10026E2FC(&qword_1007BEC50, &qword_1007BEC38, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v29 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 184) = v29;
    *v29 = v0;
    v29[1] = sub_1003D9B90;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 72, *(_QWORD *)(v0 + 120), v28);
  }
  else
  {
    v12 = *(void **)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));

    v13 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003DA03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 192);
  v1 = sub_100008384(&qword_1007B5A60);
  v2 = swift_dynamicCast(v1, v0 + 80, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

__n128 sub_1003DA09C(const char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  unint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  __n128 result;
  double v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  const char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD v55[4];
  char v56[24];
  char v57[32];

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1;
  swift_bridgeObjectRetain(a1);
  sub_1003DAEE0(v7, (uint64_t)v6);
  v9 = v8;
  swift_bridgeObjectRelease(a1);

  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return swift_bridgeObjectRelease((const char *)v9);
  v52 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate];
  v53 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
  swift_beginAccess(&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections], v57, 0, 0);
  v49 = (const char *)v9;
  v12 = (const char **)(v9 + 40);
  v50 = (char *)&type metadata for () + 8;
  v51 = v6;
  while (1)
  {
    v15 = (uint64_t)*(v12 - 1);
    v16 = *v12;
    v17 = *(_QWORD *)(*(_QWORD *)v53 + 16);
    Strong = swift_unknownObjectWeakLoadStrong(v52, v11);
    if (!Strong)
      break;
    v19 = Strong;
    v20 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
    *(_QWORD *)&v21 = swift_beginAccess(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v56, 0, 0).n128_u64[0];
    v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    swift_bridgeObjectRetain(v16, v21);
    swift_unknownObjectRelease(v19);
    if (!v22)
      goto LABEL_10;
    if (v17 > 2)
      goto LABEL_21;
LABEL_11:
    v54 = v10;
    v23 = type metadata accessor for TaskPriority(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v5, 1, 1, v23);
    v25 = swift_allocObject(&unk_100727220, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16, v6);
    v26 = qword_1007B3D98;
    swift_bridgeObjectRetain(v16);
    swift_retain(v25);
    v27 = (uint64_t)v5;
    if (v26 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v28 = static AirDropActor.shared;
    v29 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v30 = (_QWORD *)swift_allocObject(&unk_1007272C0, 56, 7);
    v30[2] = v28;
    v30[3] = v29;
    v30[4] = v25;
    v30[5] = v15;
    v30[6] = v16;
    swift_retain(v28);
    swift_release(v25);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23);
    if ((_DWORD)v31 == 1)
    {
      sub_10000D0F0(v27, &qword_1007B68A0);
      v32 = 0;
      v33 = v30[2];
      if (!v33)
        goto LABEL_17;
    }
    else
    {
      v39 = TaskPriority.rawValue.getter(v31);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
      v32 = v39;
      v33 = v30[2];
      if (!v33)
      {
LABEL_17:
        v36 = 0;
        v38 = 0;
        goto LABEL_18;
      }
    }
    v34 = v30[3];
    ObjectType = swift_getObjectType(v33);
    swift_unknownObjectRetain(v33);
    v36 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v34);
    v38 = v37;
    swift_unknownObjectRelease(v33);
LABEL_18:
    v40 = swift_allocObject(&unk_1007272E8, 32, 7);
    *(_QWORD *)(v40 + 16) = &unk_1007BEC60;
    *(_QWORD *)(v40 + 24) = v30;
    if (v38 | v36)
    {
      v55[0] = 0;
      v55[1] = 0;
      v13 = v55;
      v55[2] = v36;
      v55[3] = v38;
    }
    else
    {
      v13 = 0;
    }
    v5 = (char *)v27;
    v12 += 2;
    v14 = swift_task_create(v32 | 0x1C00, v13, v50, &unk_1007B9C70, v40);
    swift_bridgeObjectRelease(v16);
    swift_release(v14);
    v10 = v54 - 1;
    v6 = v51;
    if (v54 == 1)
      return swift_bridgeObjectRelease(v49);
  }
  swift_bridgeObjectRetain(v16);
LABEL_10:
  if (v17 <= 5)
    goto LABEL_11;
LABEL_21:
  *(_QWORD *)&v42 = swift_bridgeObjectRelease(v16).n128_u64[0];
  swift_bridgeObjectRelease(v49, v42);
  if (qword_1007B4038 != -1)
    swift_once(&qword_1007B4038, sub_1003D5AC0);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100221DF8(v43, (uint64_t)qword_1007BEB58);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter(v45);
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Discover requests maxed out, waiting for them to complete", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }

  return result;
}

uint64_t sub_1003DA500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  v7 = sub_100008384(&qword_1007BDA78);
  v6[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NWBrowser.Result(0);
  v6[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[20] = v9;
  v6[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v6[22] = static AirDropActor.shared;
  return swift_task_switch(sub_1003DA5BC, v10, 0);
}

uint64_t sub_1003DA5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t *v5;
  __n128 v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 120) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 184) = Strong;
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = (uint64_t *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult);
    v6 = swift_beginAccess(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult, v0 + 40, 32, 0);
    v7 = *v5;
    if (!*(_QWORD *)(v7 + 16))
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 160) + 56))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 152), v6);
      goto LABEL_8;
    }
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(const char **)(v0 + 136);
    swift_bridgeObjectRetain(v8, v6.n128_f64[0]);
    v10 = sub_10045C200(v9, (uint64_t)v8);
    if ((v11 & 1) != 0)
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v7 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 160) + 72) * v10, *(_QWORD *)(v0 + 152));
      v12 = 0;
    }
    else
    {
      v12 = 1;
    }
    v13 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 160);
    v16 = *(const char **)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v15, v12, 1, v13);
    v17 = swift_bridgeObjectRelease(v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v15, 1, v13, v17) == 1)
    {
LABEL_8:
      sub_10000D0F0(*(_QWORD *)(v0 + 144), &qword_1007BDA78);
      swift_endAccess(v0 + 40);
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100221DF8(v18, (uint64_t)qword_1007BEB58);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Missing browse result for service name, endpoint may have disappeared", v22, 2u);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

      }
      goto LABEL_29;
    }
    v24 = *(_QWORD *)(v0 + 128);
    v23 = *(const char **)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    swift_endAccess(v0 + 40);
    if ((sub_1003D8738(v24, v23) & 1) == 0)
    {
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v34 = *(_QWORD *)(v0 + 136);
      v35 = type metadata accessor for Logger(0);
      sub_100221DF8(v35, (uint64_t)qword_1007BEB58);
      v36 = swift_bridgeObjectRetain_n(v34, 2);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.default.getter(v37);
      v39 = os_log_type_enabled(v37, v38);
      v41 = *(_QWORD *)(v0 + 160);
      v40 = *(_QWORD *)(v0 + 168);
      v42 = *(_QWORD *)(v0 + 152);
      v43 = *(const char **)(v0 + 136);
      if (v39)
      {
        v55 = *(_QWORD *)(v0 + 128);
        v44 = (uint8_t *)swift_slowAlloc(12, -1);
        v56 = v42;
        v45 = swift_slowAlloc(32, -1);
        v57 = v45;
        *(_DWORD *)v44 = 136315138;
        swift_bridgeObjectRetain(v43);
        *(_QWORD *)(v0 + 112) = sub_100228BD8(v55, (unint64_t)v43, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v44 + 4);
        swift_bridgeObjectRelease_n(v43, 3);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Already discovering/discovered %s", v44, 0xCu);
        swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v45, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v56);
      }
      else
      {

        swift_bridgeObjectRelease_n(v43, 2);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      }
      goto LABEL_29;
    }
    v25 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
    swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections], v0 + 64, 0, 0);
    v26 = *(_QWORD *)(*(_QWORD *)v25 + 16);
    v28 = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate], v27);
    if (v28
      && (v29 = v28,
          v30 = v28 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,
          swift_beginAccess(v28 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v0 + 88, 0, 0), v31 = *(_QWORD *)(*(_QWORD *)v30 + 16), swift_unknownObjectRelease(v29), v31))
    {
      if (v26 <= 2)
      {
LABEL_17:
        v32 = (_QWORD *)swift_task_alloc(dword_1007BEC6C);
        *(_QWORD *)(v0 + 192) = v32;
        *v32 = v0;
        v32[1] = sub_1003DAB68;
        return sub_1003D8BF8(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
      }
    }
    else if (v26 <= 5)
    {
      goto LABEL_17;
    }
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v46 = type metadata accessor for Logger(0);
    v47 = sub_100221DF8(v46, (uint64_t)qword_1007BEB58);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Discover requests maxed out, waiting for them to complete", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }
    v52 = *(_QWORD *)(v0 + 160);
    v51 = *(_QWORD *)(v0 + 168);
    v53 = *(_QWORD *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
  }
LABEL_29:
  v54 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DAB68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  return swift_task_switch(sub_1003DABC0, v1, 0);
}

uint64_t sub_1003DABC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropBonjourBrowser()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser);
}

uint64_t sub_1003DAD80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BEC14);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_1003D8960(a1, v4, v5, v6);
}

uint64_t sub_1003DADEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DAE10(const char *a1, const char *a2)
{
  uint64_t v2;

  return sub_1003D5F64(a1, a2, v2);
}

uint64_t sub_1003DAE18()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DAE3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DAE68(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D6FB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003DAE74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BEC24);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1003D98EC(a1, v4, v5, v6);
}

void sub_1003DAEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  const char **v13;
  uint64_t *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  int v29;
  uint64_t *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  _QWORD *v53;

  v4 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    v46 = _swiftEmptyArrayStorage;
    return;
  }
  v8 = 0;
  v48 = (uint64_t *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  v49 = (uint64_t *)(a2
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  v9 = a1 + 40;
  v10 = -(uint64_t)v7;
  v46 = _swiftEmptyArrayStorage;
  v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &qword_1007B7760;
  v44 = a1 + 40;
  v45 = v7;
  do
  {
    if (v8 <= v7)
      v12 = v7;
    else
      v12 = v8;
    v50 = -(uint64_t)v12;
    v13 = (const char **)(v9 + 16 * v8++);
    v14 = v48;
    while (1)
    {
      if (v50 + v8 == 1)
      {
        __break(1u);
        return;
      }
      v15 = (uint64_t)*(v13 - 1);
      v16 = *v13;
      swift_beginAccess(v14, v52, 32, 0);
      v17 = *v14;
      v18 = *(_QWORD *)(*v14 + 16);
      v51 = v15;
      if (v18)
      {
        swift_bridgeObjectRetain_n(v16, 2);
        v19 = sub_10045C200(v15, (uint64_t)v16);
        if ((v20 & 1) != 0)
        {
          v21 = v19;
          v22 = v11;
          v23 = v10;
          v24 = *(_QWORD *)(v17 + 56);
          v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
          v26 = *(_QWORD *)(v25 - 8);
          v27 = v24 + *(_QWORD *)(v26 + 72) * v21;
          v10 = v23;
          v11 = v22;
          v6 = v47;
          sub_10022E534(v27, (uint64_t)v47);
          v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
          v14 = v48;
          v28(v6, 0, 1, v25);
        }
        else
        {
          v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
        }
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
        swift_bridgeObjectRetain(v16);
      }
      swift_endAccess(v52);
      type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v6, 1, v25);
      sub_10000D0F0((uint64_t)v6, v11);
      if (v29 == 1)
        break;
LABEL_7:
      swift_bridgeObjectRelease(v16);
      ++v8;
      v13 += 2;
      if (v10 + v8 == 1)
        return;
    }
    v30 = v49;
    *(_QWORD *)&v31 = swift_beginAccess(v49, v52, 32, 0).n128_u64[0];
    v32 = *v30;
    if (!*(_QWORD *)(*v30 + 16))
      goto LABEL_20;
    swift_bridgeObjectRetain(v16, v31);
    v33 = sub_10045C200(v51, (uint64_t)v16);
    if ((v34 & 1) != 0)
    {
      v35 = *(id *)(*(_QWORD *)(v32 + 56) + 8 * v33);
      swift_endAccess(v52);

      swift_bridgeObjectRelease(v16);
      goto LABEL_7;
    }
    swift_bridgeObjectRelease(v16);
LABEL_20:
    swift_endAccess(v52);
    v36 = v46;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v46);
    v53 = v36;
    v43 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100229940(0, v36[2] + 1, 1);
      v36 = v53;
    }
    v9 = v44;
    v7 = v45;
    v39 = v36[2];
    v38 = v36[3];
    v40 = v36;
    if (v39 >= v38 >> 1)
    {
      sub_100229940(v38 > 1, v39 + 1, 1);
      v40 = v53;
    }
    v40[2] = v39 + 1;
    v46 = v40;
    v41 = &v40[2 * v39];
    v41[4] = v51;
    v41[5] = v16;
    v10 = v43;
  }
  while (v43 + v8);
}

uint64_t sub_1003DB24C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003DB280(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BEC5C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1003DA500(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003DB300()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DB324(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4, char *a5)
{
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  double v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  const char *v38;
  const char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  double v52;
  uint64_t result;
  char *v54;
  char *v55;
  char *v56;
  uint64_t *v57;
  unint64_t v60;
  _BYTE v61[24];
  char *v62;
  uint64_t *v63;
  uint64_t *v64;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v64 = __src;
  v63 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15)
      goto LABEL_64;
    if (a4 != a2 || &a2[2 * v13] <= a4)
      memmove(a4, a2, 16 * v13);
    v33 = (char *)&a4[2 * v13];
    v62 = v33;
    v64 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_63:
      sub_1003A9258((void **)&v64, (const void **)&v63, &v62);
      return 1;
    }
    v56 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount];
    v57 = v7;
    v34 = (uint64_t *)(a3 - 16);
    v35 = v6;
    while (1)
    {
      v60 = (unint64_t)v33;
      v36 = *((_QWORD *)v33 - 2);
      v38 = (const char *)*((_QWORD *)v33 - 1);
      v37 = v33 - 16;
      v40 = *(v35 - 2);
      v39 = (const char *)*(v35 - 1);
      v35 -= 2;
      *(_QWORD *)&v41 = swift_beginAccess(v56, v61, 32, 0).n128_u64[0];
      v42 = *(_QWORD *)v56;
      v43 = *(_QWORD *)(*(_QWORD *)v56 + 16);
      *(_QWORD *)&v44 = swift_bridgeObjectRetain(v38, v41).n128_u64[0];
      swift_bridgeObjectRetain(v39, v44);
      if (v43)
      {
        v45 = sub_10045C200(v36, (uint64_t)v38);
        if ((v46 & 1) != 0)
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v45);
          if (*(_QWORD *)(v42 + 16))
            goto LABEL_44;
        }
        else
        {
          v47 = 0;
          if (*(_QWORD *)(v42 + 16))
          {
LABEL_44:
            swift_bridgeObjectRetain(v39);
            v48 = sub_10045C200(v40, (uint64_t)v39);
            if ((v49 & 1) != 0)
              v50 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v48);
            else
              v50 = 0;
            swift_bridgeObjectRelease(v39);
            goto LABEL_51;
          }
        }
        v50 = 0;
      }
      else
      {
        v47 = 0;
        v50 = 0;
      }
LABEL_51:
      v51 = v34 + 2;
      swift_endAccess(v61);
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v38).n128_u64[0];
      swift_bridgeObjectRelease(v39, v52);
      if (v47 >= v50)
      {
        v62 = v37;
        if ((unint64_t)v51 < v60 || (unint64_t)v34 >= v60 || v51 != (uint64_t *)v60)
          *(_OWORD *)v34 = *(_OWORD *)v37;
        v35 = v6;
        v33 = v37;
      }
      else
      {
        v33 = (char *)v60;
        if (v51 != v6 || v34 >= v6)
          *(_OWORD *)v34 = *(_OWORD *)v35;
        v64 = v35;
      }
      if (v35 > v57)
      {
        v34 -= 2;
        v6 = v35;
        if (v33 > (char *)a4)
          continue;
      }
      goto LABEL_63;
    }
  }
  if (v8 >= -15)
  {
    if (a4 != __src || &__src[2 * v10] <= a4)
      memmove(a4, __src, 16 * v10);
    v55 = (char *)&a4[2 * v10];
    v62 = v55;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v54 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount];
      v14 = a4;
      while (1)
      {
        v15 = v7;
        v16 = *v6;
        v17 = (const char *)v6[1];
        v18 = *v14;
        v19 = (const char *)v14[1];
        *(_QWORD *)&v20 = swift_beginAccess(v54, v61, 32, 0).n128_u64[0];
        v21 = *(_QWORD *)v54;
        v22 = *(_QWORD *)(*(_QWORD *)v54 + 16);
        *(_QWORD *)&v23 = swift_bridgeObjectRetain(v17, v20).n128_u64[0];
        swift_bridgeObjectRetain(v19, v23);
        if (v22)
        {
          v24 = sub_10045C200(v16, (uint64_t)v17);
          if ((v25 & 1) != 0)
          {
            v26 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v24);
            if (*(_QWORD *)(v21 + 16))
              goto LABEL_16;
          }
          else
          {
            v26 = 0;
            if (*(_QWORD *)(v21 + 16))
            {
LABEL_16:
              swift_bridgeObjectRetain(v19);
              v27 = sub_10045C200(v18, (uint64_t)v19);
              if ((v28 & 1) != 0)
                v29 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v27);
              else
                v29 = 0;
              swift_bridgeObjectRelease(v19);
              goto LABEL_23;
            }
          }
          v29 = 0;
        }
        else
        {
          v26 = 0;
          v29 = 0;
        }
LABEL_23:
        swift_endAccess(v61);
        *(_QWORD *)&v30 = swift_bridgeObjectRelease(v17).n128_u64[0];
        swift_bridgeObjectRelease(v19, v30);
        if (v26 >= v29)
        {
          v32 = v15;
          if (v15 != v14)
            *(_OWORD *)v15 = *(_OWORD *)v14;
          v14 += 2;
          v63 = v14;
          v31 = v6;
        }
        else
        {
          v31 = v6 + 2;
          v32 = v15;
          if (v15 < v6 || v15 >= v31 || v15 != v6)
            *(_OWORD *)v15 = *(_OWORD *)v6;
        }
        v7 = v32 + 2;
        if (v14 < (uint64_t *)v55)
        {
          v6 = v31;
          if ((unint64_t)v31 < a3)
            continue;
        }
        v64 = v7;
        goto LABEL_63;
      }
    }
    goto LABEL_63;
  }
LABEL_64:

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1003DB770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  double v23;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;

  if (a3 != a2)
  {
    v5 = a3;
    v27 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
    v30 = *a4;
    v6 = (uint64_t *)(v30 + 16 * a3);
LABEL_5:
    v7 = (uint64_t *)(v30 + 16 * v5);
    v8 = *v7;
    v9 = (const char *)v7[1];
    v10 = a1;
    v26 = v6;
    while (1)
    {
      v11 = *(v6 - 2);
      v12 = (const char *)*(v6 - 1);
      *(_QWORD *)&v13 = swift_beginAccess(v27, v29, 32, 0).n128_u64[0];
      v14 = *v27;
      v15 = *(_QWORD *)(*v27 + 16);
      *(_QWORD *)&v16 = swift_bridgeObjectRetain(v9, v13).n128_u64[0];
      swift_bridgeObjectRetain(v12, v16);
      if (!v15)
      {
        v19 = 0;
        v22 = 0;
        goto LABEL_16;
      }
      v28 = v11;
      v17 = sub_10045C200(v8, (uint64_t)v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v17);
        if (!*(_QWORD *)(v14 + 16))
          goto LABEL_13;
      }
      else
      {
        v19 = 0;
        if (!*(_QWORD *)(v14 + 16))
        {
LABEL_13:
          v22 = 0;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRetain(v12);
      v20 = sub_10045C200(v28, (uint64_t)v12);
      if ((v21 & 1) != 0)
        v22 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v20);
      else
        v22 = 0;
      swift_bridgeObjectRelease(v12);
LABEL_16:
      swift_endAccess(v29);
      *(_QWORD *)&v23 = swift_bridgeObjectRelease(v9).n128_u64[0];
      swift_bridgeObjectRelease(v12, v23);
      if (v19 >= v22)
        goto LABEL_4;
      if (!v30)
      {
        __break(1u);
        return;
      }
      v8 = *v6;
      v9 = (const char *)v6[1];
      *(_OWORD *)v6 = *((_OWORD *)v6 - 1);
      *(v6 - 1) = (uint64_t)v9;
      *(v6 - 2) = v8;
      v6 -= 2;
      if (v5 == ++v10)
      {
LABEL_4:
        ++v5;
        v6 = v26 + 2;
        if (v5 == a2)
          return;
        goto LABEL_5;
      }
    }
  }
}

void sub_1003DB91C(uint64_t *a1, void *a2)
{
  Swift::Int v3;
  unint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t *v12;
  char *v13;
  Swift::Int v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  const char *v18;
  uint64_t *v19;
  uint64_t v20;
  const char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  Swift::Int v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  const char *v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  const char *v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  char v74;
  int64_t v75;
  uint64_t v76;
  char v77;
  double v78;
  char *v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  unint64_t v140;
  char *v141;
  char *v142;
  unint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  Swift::Int v146;
  _QWORD *v147;
  unint64_t v148;
  int64_t v149;
  Swift::Int v150;
  int64_t v151;
  char *v152;
  uint64_t *v153;
  void *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  _BYTE v164[24];
  uint64_t *v165;

  v3 = a1[1];
  v4 = a2;
  v5 = _minimumMergeRunLength(_:)(v3);
  if (v5 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
      {
        v9 = (id)v4;
        sub_1003DB770(0, v3, 1, a1, (uint64_t)v9);

      }
      else
      {

      }
      goto LABEL_150;
    }
    goto LABEL_172;
  }
  if (v3 >= 0)
    v6 = v3;
  else
    v6 = v3 + 1;
  if (v3 < -1)
    goto LABEL_180;
  v150 = v3;
  v146 = v5;
  v154 = (void *)v4;
  v144 = a1;
  if (v3 < 2)
  {
    v10 = _swiftEmptyArrayStorage;
    v153 = &_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v4 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      if (v4 < 2)
      {
LABEL_148:
        swift_bridgeObjectRelease(v13);
        v10[2] = 0;
        v4 = (unint64_t)v154;
        goto LABEL_149;
      }
LABEL_135:
      v133 = *v144;
      v147 = v10;
      v163 = *v144;
      while (1)
      {
        v134 = v4 - 2;
        if (v4 < 2)
          goto LABEL_167;
        if (!v133)
          goto LABEL_179;
        v135 = v13;
        v136 = *(_QWORD *)&v13[16 * v134 + 32];
        v137 = *(_QWORD *)&v13[16 * v4 + 24];
        v138 = *(_QWORD *)&v13[16 * v4 + 16];
        v165 = (uint64_t *)(v133 + 16 * v136);
        v139 = (uint64_t *)(v133 + 16 * v138);
        v140 = v133 + 16 * v137;
        v141 = v154;
        sub_1003DB324(v165, v139, v140, v153, v141);
        if (v161)
        {
          swift_bridgeObjectRelease(v135);
          goto LABEL_132;
        }

        if (v137 < v136)
          goto LABEL_168;
        if ((swift_isUniquelyReferenced_nonNull_native(v135) & 1) == 0)
          v135 = sub_1003A9300((uint64_t)v135);
        if (v134 >= *((_QWORD *)v135 + 2))
          goto LABEL_169;
        v142 = &v135[16 * v134 + 32];
        *(_QWORD *)v142 = v136;
        *((_QWORD *)v142 + 1) = v137;
        v143 = *((_QWORD *)v135 + 2);
        if (v4 > v143)
          goto LABEL_170;
        memmove(&v135[16 * v4 + 16], &v135[16 * v4 + 32], 16 * (v143 - v4));
        v13 = v135;
        *((_QWORD *)v135 + 2) = v143 - 1;
        v4 = v143 - 1;
        v112 = v143 > 2;
        v10 = v147;
        v133 = v163;
        if (!v112)
          goto LABEL_148;
      }
    }
    v147 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v6 >> 1;
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6 >> 1, &type metadata for String);
    *(_QWORD *)(v8 + 16) = v7;
    v147 = (_QWORD *)v8;
    v153 = (uint64_t *)(v8 + 32);
  }
  v11 = 0;
  v12 = (uint64_t *)*a1;
  v162 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
  v145 = *a1 + 24;
  v13 = (char *)_swiftEmptyArrayStorage;
  v14 = v3;
  v165 = (uint64_t *)*a1;
  while (2)
  {
    v15 = v11;
    v4 = v11 + 1;
    v151 = v11;
    if (v11 + 1 >= v14)
      goto LABEL_55;
    v155 = v13;
    v16 = &v12[2 * v4];
    v17 = *v16;
    v18 = (const char *)v16[1];
    v19 = &v12[2 * v11];
    v20 = *v19;
    v21 = (const char *)v19[1];
    *(_QWORD *)&v22 = swift_beginAccess(v162, v164, 32, 0).n128_u64[0];
    v23 = *(_QWORD *)v162;
    v24 = *(_QWORD *)(*(_QWORD *)v162 + 16);
    *(_QWORD *)&v25 = swift_bridgeObjectRetain(v18, v22).n128_u64[0];
    swift_bridgeObjectRetain(v21, v25);
    if (v24)
    {
      v26 = sub_10045C200(v17, (uint64_t)v18);
      if ((v27 & 1) != 0)
      {
        v158 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v26);
        if (!*(_QWORD *)(v23 + 16))
          goto LABEL_25;
LABEL_23:
        swift_bridgeObjectRetain(v21);
        v28 = sub_10045C200(v20, (uint64_t)v21);
        if ((v29 & 1) != 0)
          v30 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v28);
        else
          v30 = 0;
        v31 = v150;
        swift_bridgeObjectRelease(v21);
        goto LABEL_28;
      }
      v158 = 0;
      if (*(_QWORD *)(v23 + 16))
        goto LABEL_23;
    }
    else
    {
      v158 = 0;
    }
LABEL_25:
    v30 = 0;
    v31 = v150;
LABEL_28:
    swift_endAccess(v164);
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v18).n128_u64[0];
    swift_bridgeObjectRelease(v21, v32);
    v4 = v15 + 2;
    if (v15 + 2 >= v31)
      goto LABEL_46;
    v33 = v145 + 16 * v15;
    v34 = v33;
    while (1)
    {
      v35 = v4;
      v37 = *(const char **)(v34 + 16);
      v34 += 16;
      v36 = v37;
      v38 = *(_QWORD *)(v33 - 8);
      v39 = *(const char **)v33;
      v40 = *(_QWORD *)(v33 + 8);
      *(_QWORD *)&v41 = swift_beginAccess(v162, v164, 32, 0).n128_u64[0];
      v42 = *(_QWORD *)v162;
      v43 = *(_QWORD *)(*(_QWORD *)v162 + 16);
      *(_QWORD *)&v44 = swift_bridgeObjectRetain(v37, v41).n128_u64[0];
      swift_bridgeObjectRetain(v39, v44);
      if (!v43)
      {
        v47 = 0;
LABEL_38:
        v50 = 0;
        v51 = v150;
        goto LABEL_41;
      }
      v45 = sub_10045C200(v40, (uint64_t)v36);
      if ((v46 & 1) != 0)
      {
        v47 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v45);
        if (!*(_QWORD *)(v42 + 16))
          goto LABEL_38;
      }
      else
      {
        v47 = 0;
        if (!*(_QWORD *)(v42 + 16))
          goto LABEL_38;
      }
      swift_bridgeObjectRetain(v39);
      v48 = sub_10045C200(v38, (uint64_t)v39);
      v50 = (v49 & 1) != 0 ? *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v48) : 0;
      v51 = v150;
      swift_bridgeObjectRelease(v39);
LABEL_41:
      swift_endAccess(v164);
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v36).n128_u64[0];
      swift_bridgeObjectRelease(v39, v52);
      if (v158 < v30 == v47 >= v50)
        break;
      v4 = v35 + 1;
      v33 = v34;
      if (v51 == v35 + 1)
      {
        v4 = v51;
        goto LABEL_45;
      }
    }
    v4 = v35;
LABEL_45:
    v15 = v151;
LABEL_46:
    v13 = v155;
    v12 = v165;
    if (v158 < v30)
    {
      if ((uint64_t)v4 >= v15)
      {
        if (v15 < (uint64_t)v4)
        {
          v53 = 2 * v4;
          v54 = 2 * v15;
          v55 = v4;
          v56 = v15;
          while (1)
          {
            if (v56 != --v55)
            {
              if (!v12)
                goto LABEL_178;
              v57 = &v12[v53];
              v58 = v12[v54];
              v59 = v12[v54 + 1];
              *(_OWORD *)&v12[v54] = *(_OWORD *)&v12[v53 - 2];
              *(v57 - 2) = v58;
              *(v57 - 1) = v59;
            }
            ++v56;
            v53 -= 2;
            v54 += 2;
            if (v56 >= v55)
              goto LABEL_55;
          }
        }
        goto LABEL_55;
      }
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
LABEL_55:
    if ((uint64_t)v4 >= v150)
      goto LABEL_82;
    if (__OFSUB__(v4, v15))
      goto LABEL_171;
    if ((uint64_t)(v4 - v15) >= v146)
      goto LABEL_82;
    v60 = v15 + v146;
    if (__OFADD__(v15, v146))
      goto LABEL_174;
    if (v60 >= v150)
      v60 = v150;
    if (v60 < v15)
    {
LABEL_175:
      __break(1u);
LABEL_176:

      __break(1u);
LABEL_177:

      __break(1u);
LABEL_178:

      __break(1u);
LABEL_179:

      __break(1u);
LABEL_180:

      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    if (v4 == v60)
      goto LABEL_82;
    v156 = v13;
    v61 = &v12[2 * v4];
    v148 = v60;
    while (2)
    {
      v62 = &v12[2 * v4];
      v63 = *v62;
      v64 = (const char *)v62[1];
      v65 = v15;
      v159 = v61;
      while (2)
      {
        v66 = v4;
        v67 = *(v61 - 2);
        v68 = (const char *)*(v61 - 1);
        *(_QWORD *)&v69 = swift_beginAccess(v162, v164, 32, 0).n128_u64[0];
        v70 = *(_QWORD *)v162;
        v71 = *(_QWORD *)(*(_QWORD *)v162 + 16);
        *(_QWORD *)&v72 = swift_bridgeObjectRetain(v64, v69).n128_u64[0];
        swift_bridgeObjectRetain(v68, v72);
        if (v71)
        {
          v73 = sub_10045C200(v63, (uint64_t)v64);
          if ((v74 & 1) != 0)
          {
            v75 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v73);
            if (*(_QWORD *)(v70 + 16))
              goto LABEL_70;
LABEL_74:
            v4 = 0;
          }
          else
          {
            v75 = 0;
            if (!*(_QWORD *)(v70 + 16))
              goto LABEL_74;
LABEL_70:
            swift_bridgeObjectRetain(v68);
            v76 = sub_10045C200(v67, (uint64_t)v68);
            if ((v77 & 1) != 0)
              v4 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v76);
            else
              v4 = 0;
            swift_bridgeObjectRelease(v68);
          }
        }
        else
        {
          v75 = 0;
          v4 = 0;
        }
        swift_endAccess(v164);
        *(_QWORD *)&v78 = swift_bridgeObjectRelease(v64).n128_u64[0];
        swift_bridgeObjectRelease(v68, v78);
        if (v75 < (uint64_t)v4)
        {
          v12 = v165;
          if (!v165)
            goto LABEL_176;
          v4 = v66;
          v63 = *v61;
          v64 = (const char *)v61[1];
          *(_OWORD *)v61 = *((_OWORD *)v61 - 1);
          *(v61 - 1) = (uint64_t)v64;
          *(v61 - 2) = v63;
          v61 -= 2;
          if (v66 == ++v65)
            goto LABEL_65;
          continue;
        }
        break;
      }
      v12 = v165;
      v4 = v66;
LABEL_65:
      ++v4;
      v61 = v159 + 2;
      v15 = v151;
      if (v4 != v148)
        continue;
      break;
    }
    v4 = v148;
    v13 = v156;
LABEL_82:
    if ((uint64_t)v4 < v15)
    {
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
      goto LABEL_173;
    }
    v79 = v13;
    v149 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) != 0)
      v13 = v79;
    else
      v13 = sub_1003A8EEC(0, *((_QWORD *)v79 + 2) + 1, 1, v79);
    v81 = *((_QWORD *)v13 + 2);
    v80 = *((_QWORD *)v13 + 3);
    v4 = v81 + 1;
    if (v81 >= v80 >> 1)
      v13 = sub_1003A8EEC((char *)(v80 > 1), v81 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v4;
    v82 = v13 + 32;
    v83 = &v13[16 * v81 + 32];
    *(_QWORD *)v83 = v15;
    *((_QWORD *)v83 + 1) = v149;
    if (!v81)
    {
      v4 = 1;
LABEL_15:
      v11 = v149;
      v14 = v150;
      if (v149 >= v150)
      {
        v10 = v147;
        if (v4 < 2)
          goto LABEL_148;
        goto LABEL_135;
      }
      continue;
    }
    break;
  }
  v152 = v13 + 32;
  v157 = v13;
  while (1)
  {
    v84 = v4 - 1;
    if (v4 >= 4)
    {
      v89 = &v82[16 * v4];
      v90 = *((_QWORD *)v89 - 8);
      v91 = *((_QWORD *)v89 - 7);
      v95 = __OFSUB__(v91, v90);
      v92 = v91 - v90;
      if (v95)
        goto LABEL_155;
      v94 = *((_QWORD *)v89 - 6);
      v93 = *((_QWORD *)v89 - 5);
      v95 = __OFSUB__(v93, v94);
      v87 = v93 - v94;
      v88 = v95;
      if (v95)
        goto LABEL_156;
      v96 = v4 - 2;
      v97 = &v82[16 * v4 - 32];
      v99 = *(_QWORD *)v97;
      v98 = *((_QWORD *)v97 + 1);
      v95 = __OFSUB__(v98, v99);
      v100 = v98 - v99;
      if (v95)
        goto LABEL_158;
      v95 = __OFADD__(v87, v100);
      v101 = v87 + v100;
      if (v95)
        goto LABEL_161;
      if (v101 >= v92)
      {
        v119 = &v82[16 * v84];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v95 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v95)
          goto LABEL_165;
        v112 = v87 < v122;
        goto LABEL_120;
      }
    }
    else
    {
      if (v4 != 3)
      {
        v113 = *((_QWORD *)v13 + 4);
        v114 = *((_QWORD *)v13 + 5);
        v95 = __OFSUB__(v114, v113);
        v106 = v114 - v113;
        v107 = v95;
        goto LABEL_114;
      }
      v86 = *((_QWORD *)v13 + 4);
      v85 = *((_QWORD *)v13 + 5);
      v95 = __OFSUB__(v85, v86);
      v87 = v85 - v86;
      v88 = v95;
    }
    if ((v88 & 1) != 0)
      goto LABEL_157;
    v96 = v4 - 2;
    v102 = &v82[16 * v4 - 32];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v105 = __OFSUB__(v103, v104);
    v106 = v103 - v104;
    v107 = v105;
    if (v105)
      goto LABEL_160;
    v108 = &v82[16 * v84];
    v110 = *(_QWORD *)v108;
    v109 = *((_QWORD *)v108 + 1);
    v95 = __OFSUB__(v109, v110);
    v111 = v109 - v110;
    if (v95)
      goto LABEL_163;
    if (__OFADD__(v106, v111))
      goto LABEL_164;
    if (v106 + v111 >= v87)
    {
      v112 = v87 < v111;
LABEL_120:
      if (v112)
        v84 = v96;
      goto LABEL_122;
    }
LABEL_114:
    if ((v107 & 1) != 0)
      goto LABEL_159;
    v115 = &v82[16 * v84];
    v117 = *(_QWORD *)v115;
    v116 = *((_QWORD *)v115 + 1);
    v95 = __OFSUB__(v116, v117);
    v118 = v116 - v117;
    if (v95)
      goto LABEL_162;
    if (v118 < v106)
      goto LABEL_15;
LABEL_122:
    v123 = v84 - 1;
    if (v84 - 1 >= v4)
    {
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    if (!v12)
      goto LABEL_177;
    v124 = &v82[16 * v123];
    v125 = v82;
    v126 = *(_QWORD *)v124;
    v127 = v84;
    v128 = &v125[16 * v84];
    v129 = *((_QWORD *)v128 + 1);
    v130 = &v12[2 * *(_QWORD *)v124];
    v160 = &v12[2 * *(_QWORD *)v128];
    v131 = v154;
    sub_1003DB324(v130, v160, (unint64_t)&v12[2 * v129], v153, v131);
    v4 = v161;
    if (v161)
      break;

    if (v129 < v126)
      goto LABEL_152;
    if (v127 > *((_QWORD *)v157 + 2))
      goto LABEL_153;
    *(_QWORD *)v124 = v126;
    v82 = v152;
    *(_QWORD *)&v152[16 * v123 + 8] = v129;
    v132 = *((_QWORD *)v157 + 2);
    if (v127 >= v132)
      goto LABEL_154;
    v4 = v132 - 1;
    memmove(v128, v128 + 16, 16 * (v132 - 1 - v127));
    v13 = v157;
    *((_QWORD *)v157 + 2) = v132 - 1;
    v12 = v165;
    if (v132 <= 2)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease(v157);
LABEL_132:
  v4 = (unint64_t)v154;

  v10 = v147;
  v147[2] = 0;
LABEL_149:

  swift_bridgeObjectRelease((const char *)v10);
LABEL_150:

}

void sub_1003DC370(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7[2];

  v3 = *a1;
  v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_1003A9B48(v3);
  v5 = *(_QWORD *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  v6 = v4;
  sub_1003DB91C(v7, v6);

  *a1 = v3;
}

void sub_1003DC404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  char *v70;
  uint8_t *v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint8_t *v89;
  uint8_t *v90;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;

  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NWError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v88 - v11;
  v13 = __chkstk_darwin(v10);
  v91 = (char *)&v88 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v88 - v15;
  v17 = type metadata accessor for NWBrowser.State(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    v91 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v22 = type metadata accessor for Logger(0);
    sub_100221DF8(v22, (uint64_t)qword_1007BEB58);
    v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v24 = v23(v9, v12, v5);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(8, -1);
      v90 = (uint8_t *)v12;
      v29 = (_QWORD *)v28;
      *(_DWORD *)v27 = 138412290;
      v89 = v27 + 4;
      v30 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v31 = swift_allocError(v5, v30, 0, 0);
      v23(v32, v9, v5);
      v33 = _swift_stdlib_bridgeErrorToNSError(v31);
      v93 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v89);
      *v29 = v33;
      v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "AirDrop bonjour browser failed with error %@", v27, 0xCu);
      v35 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v29, 1, v35);
      v36 = v29;
      v12 = (char *)v90;
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
    }

    v52 = type metadata accessor for TaskPriority(0);
    v53 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v91, 1, 1, v52);
    v54 = swift_allocObject(&unk_100727220, 24, 7);
    swift_unknownObjectWeakInit(v54 + 16, v92);
    v55 = qword_1007B3D98;
    swift_retain(v54);
    if (v55 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v56 = static AirDropActor.shared;
    v57 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v58 = (_QWORD *)swift_allocObject(&unk_100727310, 40, 7);
    v58[2] = v56;
    v58[3] = v57;
    v58[4] = v54;
    swift_retain(v56);
    swift_release(v54);
    v59 = sub_100252EE0(v53, (uint64_t)&unk_1007BEC80, (uint64_t)v58);
    swift_release(v59);
    v34(v12, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v37 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v38 = type metadata accessor for Logger(0);
    sub_100221DF8(v38, (uint64_t)qword_1007BEB58);
    v39 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v40 = v91;
    v41 = v39(v91, v37, v5);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v92 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v44 = 138412290;
      v90 = v44 + 4;
      v45 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v46 = swift_allocError(v5, v45, 0, 0);
      v39(v47, v40, v5);
      v48 = _swift_stdlib_bridgeErrorToNSError(v46);
      v93 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v90);
      v49 = v92;
      *v92 = v48;
      v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "AirDrop bonjour browser waiting with error %@", v44, 0xCu);
      v51 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v49, 1, v51);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
    }
    v50(v37, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v60 = type metadata accessor for Logger(0);
    v61 = sub_100221DF8(v60, (uint64_t)qword_1007BEB58);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v62, v63))
      goto LABEL_36;
    v64 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v64 = 0;
    v65 = "AirDrop bonjour browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v62, v63, v65, v64, 2u);
    swift_slowDealloc(v64, -1, -1);
LABEL_36:

    return;
  }
  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v66 = type metadata accessor for Logger(0);
    v67 = sub_100221DF8(v66, (uint64_t)qword_1007BEB58);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = v4;
      v71 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "AirDrop bonjour browser ready", v71, 2u);
      v72 = v71;
      v4 = v70;
      swift_slowDealloc(v72, -1, -1);
    }

    v73 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v4, 1, 1, v73);
    v74 = qword_1007B3D98;
    v75 = v92;
    v76 = (uint64_t)v4;
    if (v74 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v77 = static AirDropActor.shared;
    v78 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v79 = (_QWORD *)swift_allocObject(&unk_100727338, 40, 7);
    v79[2] = v77;
    v79[3] = v78;
    v79[4] = v75;
    swift_retain(v77);
    v80 = sub_100252EC0(v76, (uint64_t)&unk_1007BEC90, (uint64_t)v79);
    swift_release(v80);
  }
  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_1007B4038 != -1)
        swift_once(&qword_1007B4038, sub_1003D5AC0);
      v81 = type metadata accessor for Logger(0);
      v82 = sub_100221DF8(v81, (uint64_t)qword_1007BEB58);
      v62 = Logger.logObject.getter(v82);
      v63 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v62, v63))
        goto LABEL_36;
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      v65 = "AirDrop bonjour browser cancelled";
      goto LABEL_35;
    }
    if (qword_1007B4038 != -1)
      swift_once(&qword_1007B4038, sub_1003D5AC0);
    v83 = type metadata accessor for Logger(0);
    v84 = sub_100221DF8(v83, (uint64_t)qword_1007BEB58);
    v85 = Logger.logObject.getter(v84);
    v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "AirDrop bonjour browser in unknown state", v87, 2u);
      swift_slowDealloc(v87, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_1003DCE0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BEC7C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1003D7EE0(a1, v4, v5, v6);
}

uint64_t sub_1003DCE7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BEC8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_1003D7C4C(a1, v4, v5, v6);
}

uint64_t sub_1003DCEE8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003DCF24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BEC9C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1003D610C(a1, v4, v5, v6, v7, v8);
}

void sub_1003DCFA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100221EDC(0, &qword_1007B5250, SFAirDropTransferItem_ptr);
    v5 = sub_1003DFE40(&qword_1007B5258, &qword_1007B5250, SFAirDropTransferItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain((const char *)a1);
    v8 = 0;
  }
  v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v17 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21)
      goto LABEL_34;
    v22 = v21;
    v26 = v21;
    v23 = sub_100221EDC(0, &qword_1007B5250, SFAirDropTransferItem_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15)
      goto LABEL_34;
LABEL_13:
    v16 = objc_msgSend(v15, "isFile");

    if (v16)
      goto LABEL_34;
  }
  if (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v8 << 6);
LABEL_12:
    v15 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v14);
    if (!v15)
      goto LABEL_34;
    goto LABEL_13;
  }
  v18 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v18 >= v24)
      goto LABEL_34;
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v17 + 2;
      if (v17 + 2 >= v24)
        goto LABEL_34;
      v19 = *(_QWORD *)(v25 + 8 * v8);
      if (!v19)
      {
        v8 = v17 + 3;
        if (v17 + 3 >= v24)
          goto LABEL_34;
        v19 = *(_QWORD *)(v25 + 8 * v8);
        if (!v19)
        {
          v8 = v17 + 4;
          if (v17 + 4 >= v24)
            goto LABEL_34;
          v19 = *(_QWORD *)(v25 + 8 * v8);
          if (!v19)
          {
            v8 = v17 + 5;
            if (v17 + 5 >= v24)
              goto LABEL_34;
            v19 = *(_QWORD *)(v25 + 8 * v8);
            if (!v19)
            {
              v20 = v17 + 6;
              while (v24 != v20)
              {
                v19 = *(_QWORD *)(v25 + 8 * v20++);
                if (v19)
                {
                  v8 = v20 - 1;
                  goto LABEL_31;
                }
              }
LABEL_34:
              sub_10022E5B4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v9 = (v19 - 1) & v19;
    v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1003DD2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BECC0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BECC0);
  if (qword_1007B3E78 != -1)
    swift_once(&qword_1007B3E78, sub_1002E9EF0);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8238);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1003DD334()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transferObserver;
  v2 = objc_allocWithZone((Class)SFAirDropTransferObserver);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter;
  v5 = type metadata accessor for SDAirDropRateLimiter();
  v6 = swift_allocObject(v5, 48, 7);
  *(_QWORD *)(v6 + 40) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v6 + 16) = 3;
  *(_OWORD *)(v6 + 24) = xmmword_1005D6CD0;
  *(_QWORD *)&v3[v4] = v6;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert] = 0;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SDAirDropAlertManager();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_1003DD43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;

  v1 = v0;
  if (qword_1007B4040 != -1)
    swift_once(&qword_1007B4040, sub_1003DD2A4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BECC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Activate AirDrop alert manager.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transferObserver);
  objc_msgSend(v7, "setDelegate:", v1);
  return objc_msgSend(v7, "activate");
}

uint64_t sub_1003DD56C()
{
  uint64_t v0;
  const char **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  id v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];

  v1 = (const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
  v2 = swift_beginAccess(v1, v43, 33, 0).n128_u64[0];
  v3 = (uint64_t)*v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_74;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v2 = swift_bridgeObjectRetain(*v1, *(double *)&v2).n128_u64[0];
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * v5 + 32);
        swift_retain(v6);
      }
      v7 = objc_msgSend(*(id *)(v6 + 16), "metaData");
      v8 = objc_msgSend(v7, "isVerifiableIdentity");

      if (!v8)
      {
        v13 = objc_msgSend(*(id *)(v6 + 16), "cancelAction");
        objc_msgSend(v13, "triggerAction");
        swift_bridgeObjectRelease((const char *)v3);
        swift_release(v6);

        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
        }
        else
        {
          v3 = (uint64_t)*v1;
          if (!((unint64_t)*v1 >> 62))
          {
            if (v14 == *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_12;
            goto LABEL_18;
          }
        }
        if (v3 < 0)
          v41 = v3;
        else
          v41 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain((const char *)v3);
        v42 = _CocoaArrayWrapper.endIndex.getter(v41);
        v2 = swift_bridgeObjectRelease((const char *)v3).n128_u64[0];
        if (v14 == v42)
          goto LABEL_12;
LABEL_18:
        v15 = v5 + 5;
        while (2)
        {
          v3 = v15 - 4;
          v16 = *v1;
          if (((unint64_t)*v1 & 0xC000000000000001) != 0)
          {
            v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v16);
          }
          else
          {
            if (v3 < 0)
              goto LABEL_64;
            if ((unint64_t)v3 >= *(_QWORD *)(((unint64_t)v16 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_65;
            v17 = *(_QWORD *)&v16[8 * v15];
            swift_retain(v17);
          }
          v18 = objc_msgSend(*(id *)(v17 + 16), "metaData");
          v19 = objc_msgSend(v18, "isVerifiableIdentity");

          if ((v19 & 1) != 0)
          {
            swift_release(v17);
            if (v3 == v5)
              goto LABEL_43;
            v20 = (uint64_t)*v1;
            if (((unint64_t)*v1 & 0xC000000000000001) != 0)
            {
              v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, *v1);
              v20 = (uint64_t)*v1;
              if (((unint64_t)*v1 & 0xC000000000000001) == 0)
                goto LABEL_29;
            }
            else
            {
              if (v5 < 0)
                goto LABEL_68;
              if ((unint64_t)v5 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_69;
              v21 = *(_QWORD *)(v20 + 8 * v5 + 32);
              swift_retain(v21);
              if ((v20 & 0xC000000000000001) == 0)
              {
LABEL_29:
                if (v3 < 0)
                  goto LABEL_70;
                if ((unint64_t)v3 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_71;
                v22 = *(_QWORD *)(v20 + 8 * v15);
                swift_retain(v22);
LABEL_32:
                isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v20);
                *v1 = (const char *)v20;
                if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
                {
                  v20 = sub_10026D800(v20);
                  *v1 = (const char *)v20;
                }
                v24 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
                *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v22;
                v25 = swift_release(v24);
                specialized Array._endMutation()(v25);
                v26 = (uint64_t)*v1;
                v27 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
                *v1 = (const char *)v26;
                if (!v27 || v26 < 0 || (v26 & 0x4000000000000000) != 0)
                {
                  v26 = sub_10026D800(v26);
                  *v1 = (const char *)v26;
                }
                if (v3 < 0)
                  goto LABEL_72;
                v28 = v26 & 0xFFFFFFFFFFFFFF8;
                if ((unint64_t)v3 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_73;
                v29 = *(_QWORD *)(v28 + 8 * v15);
                *(_QWORD *)(v28 + 8 * v15) = v21;
                v30 = swift_release(v29);
                specialized Array._endMutation()(v30);
LABEL_43:
                if (__OFADD__(v5++, 1))
                  goto LABEL_67;
LABEL_48:
                v34 = v15 - 3;
                if (__OFADD__(v3, 1))
                  goto LABEL_66;
                goto LABEL_49;
              }
            }
            v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v20);
            v20 = (uint64_t)*v1;
            goto LABEL_32;
          }
          v32 = objc_msgSend(*(id *)(v17 + 16), "cancelAction");
          if (v32)
          {
            v33 = v32;
            objc_msgSend(v32, "triggerAction");
            swift_release(v17);

            goto LABEL_48;
          }
          swift_release(v17);
          v34 = v15 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_66;
LABEL_49:
          v35 = (uint64_t)*v1;
          if ((unint64_t)*v1 >> 62)
          {
            if (v35 < 0)
              v37 = (uint64_t)*v1;
            else
              v37 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*v1);
            v36 = _CocoaArrayWrapper.endIndex.getter(v37);
            v2 = swift_bridgeObjectRelease((const char *)v35).n128_u64[0];
          }
          else
          {
            v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v15;
          if (v34 == v36)
            goto LABEL_12;
          continue;
        }
      }
      swift_release(v6);
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      ++v5;
      if (v9 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    if (v3 < 0)
      v38 = v3;
    else
      v38 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v3, *(double *)&v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v38);
  }
LABEL_10:
  v2 = swift_bridgeObjectRelease((const char *)v3, *(double *)&v2).n128_u64[0];
  v10 = (uint64_t)*v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_84;
  v5 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_12:
  while (1)
  {
    v10 = (uint64_t)*v1;
    if ((unint64_t)*v1 >> 62)
      break;
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v5)
      goto LABEL_14;
LABEL_83:
    __break(1u);
LABEL_84:
    if (v10 < 0)
      v40 = v10;
    else
      v40 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v10, *(double *)&v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v40);
    v2 = swift_bridgeObjectRelease((const char *)v10).n128_u64[0];
  }
  if (v10 < 0)
    v39 = (uint64_t)*v1;
  else
    v39 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1, *(double *)&v2);
  v11 = _CocoaArrayWrapper.endIndex.getter(v39);
  v2 = swift_bridgeObjectRelease((const char *)v10).n128_u64[0];
  if (v11 < v5)
    goto LABEL_83;
LABEL_14:
  sub_10047580C(v5, v11);
  return swift_endAccess(v43);
}

id sub_1003DDA50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropAlertManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAirDropAlertManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary21SDAirDropAlertManager);
}

void sub_1003DDAF8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  id v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  _QWORD *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  double v26;
  unint64_t v27;
  double v28;
  id v29;
  id v30;
  _BOOL4 v31;
  int v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  const char *v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint64_t v58;
  double v59;
  id v60;
  uint64_t v61;
  const char *v62;
  const char *v63;
  uint64_t v64;
  const char *v65;
  double v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint8_t *v70;
  const char *v71;
  id v72;
  int v73;
  int v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  const char *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  unsigned __int8 v93;
  id v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  id v98;
  uint64_t v99;
  const char *v100;
  const char *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  double v109;
  NSObject *v110;
  os_log_type_t v111;
  _BOOL4 v112;
  uint64_t v113;
  os_log_type_t v114;
  const char *v115;
  NSObject *v116;
  uint8_t *v117;
  uint32_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  id v123;
  unsigned __int8 v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  const char *v133;
  const char *v134;
  uint8_t *v135;
  uint64_t v136;
  unint64_t v137;
  const char *v138;
  float v139;
  double v140;
  double v141;
  double v142;
  id v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  const char *v147;
  char v148;
  char v149;
  uint64_t v150;
  os_log_type_t v151;
  _BOOL4 v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  const char *v171;
  const char *v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  uint8_t *v177;
  _QWORD *v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  NSObject *v183;
  os_log_type_t v184;
  uint8_t *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  const char *v189;
  id v190;
  void *v191;
  unsigned __int8 v192;
  NSObject *v193;
  NSObject *v194;
  os_log_type_t v195;
  uint8_t *v196;
  NSObject **v197;
  _DWORD *v198;
  NSObject *v199;
  _DWORD *v200;
  uint64_t v201;
  id v202;
  uint64_t v203;
  os_log_type_t v204;
  uint64_t v205;
  id v206;
  int v207;
  _BOOL4 v208;
  id v209;
  uint64_t v210;
  _BOOL4 v211;
  id v212;
  int v213;
  uint64_t v214;
  _QWORD *v215;
  uint8_t *buf;
  uint8_t *bufa;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  char v223[32];
  uint64_t v224;
  double v225;
  _BYTE v226[16];
  uint64_t v227;
  _BYTE v228[16];
  uint64_t v229;
  const char *v230[2];
  uint64_t v231[3];
  _QWORD v232[2];

  v2 = v1;
  v4 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v5 = (void *)static NSUserDefaults.airdrop.getter(v4);
  v6 = SFAirDropUserDefaults.systemLevelProgressEnabled.getter();

  if ((v6 & 1) != 0)
  {
    if (qword_1007B4040 != -1)
      swift_once(&qword_1007B4040, sub_1003DD2A4);
    v7 = type metadata accessor for Logger(0);
    sub_100221DF8(v7, (uint64_t)qword_1007BECC0);
    v218 = a1;
    v8 = Logger.logObject.getter(v218);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v231[0] = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = objc_msgSend(v218, "identifier");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v229 = sub_100228BD8(v13, (unint64_t)v15, v231);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v10 + 4);

      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Feature Flag for ModernProgress turned on, Alert is not generated for AirDrop %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    return;
  }
  v16 = objc_msgSend(a1, "identifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = (_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts);
  *(_QWORD *)&v21 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts, v231, 0, 0).n128_u64[0];
  v215 = v20;
  v22 = *v20;
  if (*(_QWORD *)(v22 + 16))
  {
    swift_bridgeObjectRetain((const char *)v22, v21);
    v23 = sub_10045C200(v17, (uint64_t)v19);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
      swift_retain(v25);
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v19).n128_u64[0];
      v27 = swift_bridgeObjectRelease((const char *)v22, v26).n128_u64[0];
      goto LABEL_13;
    }
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v19).n128_u64[0];
    v27 = swift_bridgeObjectRelease((const char *)v22, v28).n128_u64[0];
  }
  else
  {
    v27 = swift_bridgeObjectRelease(v19, v21).n128_u64[0];
  }
  v25 = 0;
LABEL_13:
  v232[0] = v25;
  v29 = objc_msgSend(a1, "userResponse", *(double *)&v27);
  v219 = objc_msgSend(a1, "userResponse");
  if (objc_msgSend(a1, "transferState") == (id)2)
  {
    v30 = objc_msgSend(a1, "transferProgress");

    v211 = v30 != 0;
  }
  else
  {
    v211 = 0;
  }
  v31 = objc_msgSend(a1, "transferState") == (id)3 || objc_msgSend(a1, "transferState") == (id)9;
  v208 = v31;
  v212 = objc_msgSend(a1, "transferState");
  v209 = objc_msgSend(a1, "transferState");
  buf = (uint8_t *)objc_msgSend(a1, "transferState");
  if (v25)
    v32 = *(unsigned __int8 *)(v25 + 32);
  else
    v32 = 1;
  v207 = v32;
  v33 = objc_msgSend(a1, "transferProgress");
  if (v33)
  {
    v34 = v33;
    v35 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v36 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v36 + 56) = sub_100221EDC(0, &qword_1007BED40, NSProgress_ptr);
    *(_QWORD *)(v36 + 64) = sub_1003DFE40(&qword_1007BED48, &qword_1007BED40, NSProgress_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v36 + 32) = v34;
    v37 = v34;
    v38 = String.init(format:_:)(1714564645, 0xE400000000000000, v36);
    v40 = v39;

  }
  else
  {
    v40 = (const char *)0xE600000000000000;
    v38 = 0x3E656E6F6E3CLL;
  }
  v210 = v2;
  if (qword_1007B4040 != -1)
    swift_once(&qword_1007B4040, sub_1003DD2A4);
  v41 = type metadata accessor for Logger(0);
  sub_100221DF8(v41, (uint64_t)qword_1007BECC0);
  v42 = a1;
  swift_bridgeObjectRetain(v40);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter(v44);
  if (os_log_type_enabled(v44, v45))
  {
    v204 = v45;
    v205 = v38;
    v206 = v29;
    v46 = swift_slowAlloc(52, -1);
    v203 = swift_slowAlloc(160, -1);
    v227 = v203;
    *(_DWORD *)v46 = 136316162;
    v47 = objc_msgSend(v42, "identifier");
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v49 = v42;
    v51 = v50;

    v229 = sub_100228BD8(v48, (unint64_t)v51, &v227);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v46 + 4);

    v52 = v49;
    swift_bridgeObjectRelease(v51);
    *(_WORD *)(v46 + 12) = 2080;
    v53 = (id)SFAirDropTransferStateToString(buf);
    if (v53)
    {
      v54 = v53;
      v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v57 = v56;

    }
    else
    {
      v229 = 0;
      v230[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v230[0]);
      v57 = (const char *)0x8000000100612DF0;
      v55 = 0xD000000000000015;
    }
    v229 = sub_100228BD8(v55, (unint64_t)v57, &v227);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v46 + 14);
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    *(_WORD *)(v46 + 22) = 2080;
    v60 = (id)SFAirDropTransferUserResponseToString(objc_msgSend(v49, "userResponse", v59));
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    v229 = sub_100228BD8(v61, (unint64_t)v63, &v227);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v46 + 24);

    swift_bridgeObjectRelease(v63);
    *(_WORD *)(v46 + 32) = 2080;
    swift_beginAccess(v232, v223, 0, 0);
    if (v232[0])
      v64 = 7562617;
    else
      v64 = 28526;
    if (v232[0])
      v65 = (const char *)0xE300000000000000;
    else
      v65 = (const char *)0xE200000000000000;
    v229 = sub_100228BD8(v64, (unint64_t)v65, &v227);
    v42 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v46 + 34);
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v65).n128_u64[0];
    *(_WORD *)(v46 + 42) = 2080;
    swift_bridgeObjectRetain(v40, v66);
    v229 = sub_100228BD8(v205, (unint64_t)v40, &v227);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230, v46 + 44);
    swift_bridgeObjectRelease_n(v40, 3);
    _os_log_impl((void *)&_mh_execute_header, v44, v204, "Transfer %s updated with state: %s, userResponse: %s, alert item exists: %s, progress: %s", (uint8_t *)v46, 0x34u);
    swift_arrayDestroy(v203, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v203, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    v29 = v206;
  }
  else
  {

    swift_bridgeObjectRelease_n(v40, 2);
  }
  if (v219 == (id)2)
  {
    v67 = Logger.logObject.getter(v58);
    v68 = static os_log_type_t.default.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = 2;
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      v71 = "Transfer cancelled by receiver";
LABEL_42:
      _os_log_impl((void *)&_mh_execute_header, v67, v68, v71, v70, 2u);
      swift_slowDealloc(v70, -1, -1);

      v73 = 0;
      v74 = 0;
      goto LABEL_53;
    }
LABEL_51:

    v73 = 0;
    v74 = 0;
LABEL_52:
    v69 = 2;
    goto LABEL_53;
  }
  if (v212 == (id)7)
  {
    v75 = Logger.logObject.getter(v58);
    v76 = static os_log_type_t.default.getter(v75);
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "Transfer state changed to readyForOpen. Dismissing any existing alert.", v77, 2u);
      swift_slowDealloc(v77, -1, -1);
    }

    v73 = 0;
LABEL_47:
    v74 = 0;
    v69 = 1;
    goto LABEL_53;
  }
  if (v209 == (id)8)
  {
    v67 = Logger.logObject.getter(v58);
    v68 = static os_log_type_t.default.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = 2;
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      v71 = "Transfer state changed to terminated. Dismissing any existing alert.";
      goto LABEL_42;
    }
    goto LABEL_51;
  }
  if (v208)
  {
    v119 = Logger.logObject.getter(v58);
    v120 = static os_log_type_t.default.getter(v119);
    if (os_log_type_enabled(v119, v120))
    {
      v121 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v121 = 0;
      _os_log_impl((void *)&_mh_execute_header, v119, v120, "Sender cancelled or transfer failed", v121, 2u);
      swift_slowDealloc(v121, -1, -1);
    }

    if (v29 == (id)1)
    {
      v74 = 0;
      v73 = 1;
    }
    else
    {
      v72 = objc_msgSend(v42, "failureReason");
      v74 = 0;
      v73 = v72 == (id)2;
    }
    goto LABEL_52;
  }
  swift_beginAccess(v232, &v229, 0, 0);
  if (v232[0])
    v161 = *(unsigned __int8 *)(v232[0] + 33);
  else
    v161 = 0;
  v183 = Logger.logObject.getter(v160);
  v184 = static os_log_type_t.default.getter(v183);
  if (os_log_type_enabled(v183, v184))
  {
    v222 = v42;
    v185 = (uint8_t *)swift_slowAlloc(12, -1);
    v186 = swift_slowAlloc(32, -1);
    *(_DWORD *)v185 = 136315138;
    v227 = v186;
    if (v161)
      v187 = 7562617;
    else
      v187 = 28526;
    if (v161)
      v188 = 0xE300000000000000;
    else
      v188 = 0xE200000000000000;
    v225 = COERCE_DOUBLE(sub_100228BD8(v187, v188, &v227));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v185 + 4);
    v189 = (const char *)v188;
    v42 = v222;
    swift_bridgeObjectRelease(v189);
    _os_log_impl((void *)&_mh_execute_header, v183, v184, "Current alert is showing progress: %s", v185, 0xCu);
    swift_arrayDestroy(v186, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v186, -1, -1);
    swift_slowDealloc(v185, -1, -1);
  }

  v72 = objc_msgSend(v42, "needsAction");
  v73 = (int)v72;
  if (v161)
  {
    v190 = objc_msgSend(v42, "transferProgress");
    if (!v190)
    {
      __break(1u);
      return;
    }
    v191 = v190;
    v192 = objc_msgSend(v190, "isFinished");

    if ((v192 & 1) != 0 || ((unint64_t)buf | 2) == 6)
      goto LABEL_47;
  }
  else
  {
    v73 = (v72 | v211) & v207;
  }
  v69 = 0;
  v74 = 1;
LABEL_53:
  v78 = Logger.logObject.getter(v72);
  v79 = static os_log_type_t.default.getter(v78);
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc(22, -1);
    *(double *)&v81 = COERCE_DOUBLE(swift_slowAlloc(64, -1));
    v225 = *(double *)&v81;
    *(_DWORD *)v80 = 136315394;
    if (v73)
      v82 = 1702195828;
    else
      v82 = 0x65736C6166;
    v213 = v73;
    if (v73)
      v83 = (const char *)0xE400000000000000;
    else
      v83 = (const char *)0xE500000000000000;
    v220 = v42;
    v227 = sub_100228BD8(v82, (unint64_t)v83, (uint64_t *)&v225);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, v228, v80 + 4);
    swift_bridgeObjectRelease(v83);
    *(_WORD *)(v80 + 12) = 2080;
    v227 = v69;
    v228[0] = v74;
    v84 = sub_100008384((uint64_t *)&unk_1007BED30);
    v85 = String.init<A>(describing:)(&v227, v84);
    v87 = (const char *)v86;
    v227 = sub_100228BD8(v85, v86, (uint64_t *)&v225);
    v73 = v213;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, v228, v80 + 14);
    v88 = v87;
    v42 = v220;
    swift_bridgeObjectRelease(v88);
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "showAlert: %s, dismissAlert: %s", (uint8_t *)v80, 0x16u);
    swift_arrayDestroy(v81, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v80, -1, -1);
  }

  if ((v73 | v74 ^ 1) != 1)
  {
    v92 = objc_msgSend(v42, "metaData");
    v93 = objc_msgSend(v92, "didAutoAccept");

    if ((v93 & 1) != 0 && buf == (uint8_t *)1)
    {
      v94 = objc_msgSend((id)objc_opt_self(TLAlert), "playAlertForType:", 12);
      v95 = Logger.logObject.getter(v94);
      v96 = static os_log_type_t.default.getter(v95);
      if (os_log_type_enabled(v95, v96))
      {
        v97 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v97 = 0;
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "Play auto-accept sound", v97, 2u);
        swift_slowDealloc(v97, -1, -1);
      }

    }
    goto LABEL_123;
  }
  swift_beginAccess(v232, &v227, 1, 0);
  v89 = v232[0];
  if (v232[0])
  {
    if (v74)
      v90 = 0;
    else
      v90 = v69;
    swift_retain(v232[0]);
    sub_1003FB648(v90);
    swift_release(v89);
    v91 = v232[0];
  }
  else
  {
    v91 = 0;
  }
  v232[0] = 0;
  swift_release(v91);
  v98 = objc_msgSend(v42, "identifier");
  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  swift_beginAccess(v215, &v225, 33, 0);
  v102 = sub_10026B150(v99, (uint64_t)v101);
  swift_endAccess(&v225);
  swift_bridgeObjectRelease(v101);
  swift_release(v102);
  if ((v73 & 1) != 0)
  {
    if (v211)
    {
      v103 = objc_msgSend(v42, "transferProgress");
      v224 = (uint64_t)v103;
      v104 = sub_100008384(&qword_1007BED28);
      Optional.unwrap(_:file:line:)(&v225, sub_1003DF508, 0, "DaemoniOSLibrary/SDAirDropAlertManager.swift", 44, 2, 156, v104);

      v105 = v225;
      *(double *)&v106 = COERCE_DOUBLE(NSProgress.estimatedTimeRemaining.getter());
      if ((v107 & 1) != 0)
      {
        objc_msgSend((id)objc_opt_self(SDStatusMonitor), "airDropProgressUIMaxPercentage");
        v140 = v139;
        objc_msgSend(*(id *)&v105, "fractionCompleted");
        v142 = v141;
        v143 = objc_msgSend(v42, "metaData");
        v144 = objc_msgSend(v143, "items");

        v145 = sub_100221EDC(0, &qword_1007B5250, SFAirDropTransferItem_ptr);
        v146 = sub_1003DFE40(&qword_1007B5258, &qword_1007B5250, SFAirDropTransferItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        v147 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v144, v145, v146);

        sub_1003DCFA4((uint64_t)v147);
        v149 = v148;
        swift_bridgeObjectRelease(v147);
        v110 = Logger.logObject.getter(v150);
        v151 = static os_log_type_t.default.getter(v110);
        v152 = os_log_type_enabled(v110, v151);
        if (v142 < v140 && (v149 & 1) != 0)
        {
          if (v152)
          {
            v113 = swift_slowAlloc(28, -1);
            *(_DWORD *)v113 = 134218496;
            v225 = v142;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v113 + 4);
            *(_WORD *)(v113 + 12) = 2048;
            v225 = v140;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v113 + 14);
            *(_WORD *)(v113 + 22) = 1024;
            LODWORD(v225) = 1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, (char *)&v225 + 4, v113 + 24);
            v114 = v151;
            v115 = "Progress: Showing, fracCompleted(%f). showAlertIfProgressBelow(%f). transferHasFiles = %{BOOL}d";
            v116 = v110;
            v117 = (uint8_t *)v113;
            v118 = 28;
            goto LABEL_99;
          }
LABEL_100:

          v154 = Logger.logObject.getter(v153);
          v155 = static os_log_type_t.default.getter(v154);
          if (os_log_type_enabled(v154, v155))
          {
            v156 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v156 = 0;
            _os_log_impl((void *)&_mh_execute_header, v154, v155, "Make new progress alert with no sound", v156, 2u);
            swift_slowDealloc(v156, -1, -1);
          }

          v157 = type metadata accessor for IncomingAirDropAlert();
          swift_allocObject(v157, 56, 7);
          v158 = sub_1003FA61C(v42, 0, 0, 0);

          v159 = v232[0];
          v232[0] = v158;
          swift_release(v159);
          *(_BYTE *)(v158 + 33) = 1;
LABEL_115:
          v122 = v210;
          v165 = v232[0];
          if (!v232[0])
            return;
          goto LABEL_116;
        }
        if (v152)
        {
          v168 = swift_slowAlloc(28, -1);
          *(_DWORD *)v168 = 134218496;
          v225 = v142;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v168 + 4);
          *(_WORD *)(v168 + 12) = 2048;
          v225 = v140;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v168 + 14);
          *(_WORD *)(v168 + 22) = 1024;
          LODWORD(v225) = v149 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, (char *)&v225 + 4, v168 + 24);
          _os_log_impl((void *)&_mh_execute_header, v110, v151, "Skip showing progress. Completed: (%f), Show alert if progress below: (%f), transfer has files: %{BOOL}d.", (uint8_t *)v168, 0x1Cu);
          v167 = v168;
          goto LABEL_113;
        }
      }
      else
      {
        v108 = v106;
        v109 = *(double *)&v106;
        v110 = Logger.logObject.getter(v106);
        v111 = static os_log_type_t.default.getter(v110);
        v112 = os_log_type_enabled(v110, v111);
        if (v109 > 2.0)
        {
          if (v112)
          {
            v113 = swift_slowAlloc(22, -1);
            *(_DWORD *)v113 = 134218240;
            v225 = *(double *)&v108;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v113 + 4);
            *(_WORD *)(v113 + 12) = 2048;
            v225 = 2.0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v113 + 14);
            v114 = v111;
            v115 = "Progress: Showing, timeRemaining(%f) > %f";
            v116 = v110;
            v117 = (uint8_t *)v113;
            v118 = 22;
LABEL_99:
            _os_log_impl((void *)&_mh_execute_header, v116, v114, v115, v117, v118);
            swift_slowDealloc(v113, -1, -1);
            goto LABEL_100;
          }
          goto LABEL_100;
        }
        if (v112)
        {
          v166 = swift_slowAlloc(22, -1);
          *(_DWORD *)v166 = 134218240;
          v225 = *(double *)&v108;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v166 + 4);
          *(_WORD *)(v166 + 12) = 2048;
          v225 = 2.0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v166 + 14);
          _os_log_impl((void *)&_mh_execute_header, v110, v111, "Progress: Skipping, timeRemaining(%f) ≤ %f", (uint8_t *)v166, 0x16u);
          v167 = v166;
LABEL_113:
          swift_slowDealloc(v167, -1, -1);
        }
      }

      goto LABEL_115;
    }
    v122 = v210;
    if (sub_10038C938())
    {
      if (objc_msgSend(v42, "needsAction"))
      {
        v123 = objc_msgSend(v42, "metaData");
        v124 = objc_msgSend(v123, "isVerifiableIdentity");

        if ((v124 & 1) == 0)
        {
          *(double *)&v193 = COERCE_DOUBLE(v42);
          v194 = Logger.logObject.getter(v193);
          v195 = static os_log_type_t.default.getter(v194);
          if (os_log_type_enabled(v194, v195))
          {
            v196 = (uint8_t *)swift_slowAlloc(12, -1);
            v197 = (NSObject **)swift_slowAlloc(8, -1);
            bufa = v196;
            *(_DWORD *)v196 = 138412290;
            v198 = v196 + 4;
            v225 = *(double *)&v193;
            v199 = v193;
            v200 = v198;
            v122 = v210;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v226, v200);
            *v197 = v193;

            _os_log_impl((void *)&_mh_execute_header, v194, v195, "Rate limited. Auto-declining transfer %@.", bufa, 0xCu);
            v201 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v197, 1, v201);
            swift_slowDealloc(v197, -1, -1);
            swift_slowDealloc(bufa, -1, -1);
          }
          else
          {

            v194 = v193;
          }

          v202 = -[NSObject cancelAction](v193, "cancelAction");
          objc_msgSend(v202, "triggerAction");

          v165 = v232[0];
          if (!v232[0])
            return;
LABEL_116:
          swift_retain(v165);
          v169 = objc_msgSend(v42, "identifier");
          v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v169);
          v172 = v171;

          swift_beginAccess(v215, &v225, 33, 0);
          v173 = swift_retain(v165);
          sub_100395430(v173, v170, v172);
          v174 = swift_endAccess(&v225);
          if (!v211)
          {
            if (*(_BYTE *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) == 1)
            {
              v175 = Logger.logObject.getter(v174);
              v176 = static os_log_type_t.default.getter(v175);
              if (os_log_type_enabled(v175, v176))
              {
                v177 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v177 = 0;
                _os_log_impl((void *)&_mh_execute_header, v175, v176, "Active alert present, enqueue this one later.", v177, 2u);
                swift_slowDealloc(v177, -1, -1);
              }

              v178 = (_QWORD *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
              swift_beginAccess(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts, &v225, 33, 0);
              v179 = swift_retain(v165);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v179);
              v181 = *(_QWORD *)((*v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v180 = *(_QWORD *)((*v178 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v181 >= v180 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v180 > 1, v181 + 1, 1);
              v182 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v181, v165);
              specialized Array._endMutation()(v182);
              swift_endAccess(&v225);
              swift_release(v165);
LABEL_123:
              swift_release(v232[0]);
              return;
            }
            *(_BYTE *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) = 1;
          }
          sub_1003FA88C();
          swift_release_n(v165, 2);
          return;
        }
      }
    }
    v125 = swift_allocObject(&unk_100727388, 24, 7);
    swift_unknownObjectWeakInit(v125 + 16, v210);
    v126 = swift_allocObject(&unk_1007273B0, 32, 7);
    *(_QWORD *)(v126 + 16) = v125;
    *(_QWORD *)(v126 + 24) = v42;
    v127 = v42;
    v128 = Logger.logObject.getter(v127);
    v129 = static os_log_type_t.default.getter(v128);
    if (os_log_type_enabled(v128, v129))
    {
      v130 = swift_slowAlloc(22, -1);
      *(double *)&v214 = COERCE_DOUBLE(swift_slowAlloc(64, -1));
      v225 = *(double *)&v214;
      *(_DWORD *)v130 = 136315394;
      v221 = v42;
      v131 = objc_msgSend(v127, "identifier");
      v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
      v134 = v133;

      v224 = sub_100228BD8(v132, (unint64_t)v134, (uint64_t *)&v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v224, &v225, v130 + 4);

      swift_bridgeObjectRelease(v134);
      *(_WORD *)(v130 + 12) = 2080;
      v135 = buf;
      if (buf == (uint8_t *)1)
        v136 = 1702195828;
      else
        v136 = 0x65736C6166;
      if (buf == (uint8_t *)1)
        v137 = 0xE400000000000000;
      else
        v137 = 0xE500000000000000;
      v224 = sub_100228BD8(v136, v137, (uint64_t *)&v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v224, &v225, v130 + 14);
      v138 = (const char *)v137;
      v42 = v221;
      swift_bridgeObjectRelease(v138);
      _os_log_impl((void *)&_mh_execute_header, v128, v129, "Making new IncomingAirDropAlert for transfer %s, playSound: %s", (uint8_t *)v130, 0x16u);
      swift_arrayDestroy(v214, 2, (char *)&type metadata for Any + 8);
      v122 = v210;
      swift_slowDealloc(v214, -1, -1);
      swift_slowDealloc(v130, -1, -1);

    }
    else
    {

      v135 = buf;
    }
    v162 = type metadata accessor for IncomingAirDropAlert();
    swift_allocObject(v162, 56, 7);
    v163 = sub_1003FA61C(v127, v135 == (uint8_t *)1, (uint64_t)sub_1003DFE38, v126);
    v164 = v232[0];
    v232[0] = v163;
    swift_release(v164);
    v165 = v232[0];
    if (v232[0])
      goto LABEL_116;
  }
}

unint64_t sub_1003DF508()
{
  return 0xD000000000000017;
}

void sub_1003DF524(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  NSObject *v8;
  id v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  const char **v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  char v50[24];
  char v51[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v51, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(a3, "metaData");
    v10 = objc_msgSend(v9, "isVerifiableIdentity");

    if ((v10 & 1) == 0)
    {
      if (a1 == 1)
      {
        v19 = *(uint64_t *)((char *)&v8->isa + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter);
        swift_beginAccess(v19 + 40, &v48, 1, 0);
        v20 = *(const char **)(v19 + 40);
        *(_QWORD *)(v19 + 40) = _swiftEmptyArrayStorage;
        swift_retain(v19);
        swift_bridgeObjectRelease(v20);
        v22 = (id)airdrop_log(v21);
        if (!v22)
        {
          __break(1u);
          return;
        }
        v23 = v22;
        v24 = static os_log_type_t.default.getter(v22);
        os_log(_:dso:log:type:_:)("Reset declines", 14, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
        swift_release(v19);

      }
      else if (a1 == 2)
      {
        v11 = OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter;
        v12 = *(uint64_t *)((char *)&v8->isa + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter);
        swift_retain(v12);
        sub_10038CAC0();
        swift_release(v12);
        v13 = *(uint64_t *)((char *)&v8->isa + v11);
        swift_retain(v13);
        LOBYTE(v11) = sub_10038C938();
        swift_release(v13);
        if ((v11 & 1) != 0)
        {
          if (qword_1007B4040 != -1)
            swift_once(&qword_1007B4040, sub_1003DD2A4);
          v14 = type metadata accessor for Logger(0);
          v15 = sub_100221DF8(v14, (uint64_t)qword_1007BECC0);
          v16 = Logger.logObject.getter(v15);
          v17 = static os_log_type_t.default.getter(v16);
          if (os_log_type_enabled(v16, v17))
          {
            v18 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v18 = 0;
            _os_log_impl((void *)&_mh_execute_header, v16, v17, "Rate limited. Auto-declining queued transfers.", v18, 2u);
            swift_slowDealloc(v18, -1, -1);
          }

          sub_1003DD56C();
        }
      }
    }
    v25 = (const char **)((char *)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
    *(_QWORD *)&v26 = swift_beginAccess((char *)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts, v50, 0, 0).n128_u64[0];
    v27 = (uint64_t)*v25;
    if ((unint64_t)*v25 >> 62)
    {
      if (v27 < 0)
        v36 = (uint64_t)*v25;
      else
        v36 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v25, v26);
      v37 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease((const char *)v27);
      if (v37)
      {
LABEL_15:
        if (qword_1007B4040 != -1)
          swift_once(&qword_1007B4040, sub_1003DD2A4);
        v28 = type metadata accessor for Logger(0);
        v29 = sub_100221DF8(v28, (uint64_t)qword_1007BECC0);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Dequeuing last dismissed alert and presenting next", v32, 2u);
          swift_slowDealloc(v32, -1, -1);
        }

        v33 = swift_beginAccess(v25, v49, 33, 0).n128_u64[0];
        v34 = (uint64_t)*v25;
        if ((unint64_t)*v25 >> 62)
        {
          if (v34 < 0)
            v43 = (uint64_t)*v25;
          else
            v43 = v34 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v25, *(double *)&v33);
          v44 = _CocoaArrayWrapper.endIndex.getter(v43);
          v33 = swift_bridgeObjectRelease((const char *)v34).n128_u64[0];
          if (v44)
          {
LABEL_21:
            v34 = (uint64_t)*v25;
            if (!((unint64_t)*v25 >> 62))
            {
              v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v35)
                goto LABEL_23;
              goto LABEL_49;
            }
LABEL_45:
            if (v34 < 0)
              v45 = v34;
            else
              v45 = v34 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain((const char *)v34, *(double *)&v33);
            v35 = _CocoaArrayWrapper.endIndex.getter(v45);
            swift_bridgeObjectRelease((const char *)v34);
            if (v35)
            {
LABEL_23:
              if ((v34 & 0xC000000000000001) == 0)
              {
                if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_52;
                }
                v35 = *(_QWORD *)(v34 + 32);
                swift_retain(v35);
LABEL_26:
                v34 = (uint64_t)*v25;
                if (!((unint64_t)*v25 >> 62))
                {
                  if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
LABEL_28:
                    sub_10047580C(0, 1);
                    swift_endAccess(v49);
                    sub_1003FA88C();
                    swift_release(v35);
                    goto LABEL_37;
                  }
                  goto LABEL_56;
                }
LABEL_52:
                if (v34 < 0)
                  v46 = v34;
                else
                  v46 = v34 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain((const char *)v34);
                v47 = _CocoaArrayWrapper.endIndex.getter(v46);
                swift_bridgeObjectRelease((const char *)v34);
                if (v47)
                  goto LABEL_28;
LABEL_56:
                __break(1u);
                goto LABEL_57;
              }
LABEL_50:
              v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
              goto LABEL_26;
            }
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
        }
        else if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    else if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_15;
    }
    *((_BYTE *)&v8->isa + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) = 0;
    if (qword_1007B4040 == -1)
    {
LABEL_34:
      v38 = type metadata accessor for Logger(0);
      v39 = sub_100221DF8(v38, (uint64_t)qword_1007BECC0);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.default.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Last alert dismissed", v42, 2u);
        swift_slowDealloc(v42, -1, -1);

LABEL_38:
        return;
      }

LABEL_37:
      v40 = v8;
      goto LABEL_38;
    }
LABEL_57:
    swift_once(&qword_1007B4040, sub_1003DD2A4);
    goto LABEL_34;
  }
}

uint64_t sub_1003DFAD0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  const char **v16;
  double v17;
  const char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  unint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  _BYTE v31[24];
  id v32;
  uint64_t v33;

  v2 = v1;
  if (qword_1007B4040 != -1)
    swift_once(&qword_1007B4040, sub_1003DD2A4);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BECC0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v32 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v8 + 4);
    *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing alerts for transfer: %@.", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = objc_msgSend(v5, "identifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts);
  *(_QWORD *)&v17 = swift_beginAccess(v16, &v32, 0, 0).n128_u64[0];
  v18 = *v16;
  if (*((_QWORD *)*v16 + 2))
  {
    swift_bridgeObjectRetain(*v16, v17);
    v19 = sub_10045C200(v13, (uint64_t)v15);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(*((_QWORD *)v18 + 7) + 8 * v19);
      swift_retain(v21);
      *(_QWORD *)&v22 = swift_bridgeObjectRelease(v15).n128_u64[0];
      swift_bridgeObjectRelease(v18, v22);
      if (*(_QWORD *)(v21 + 24))
        sub_1003FB648(0);
      swift_release(v21);
    }
    else
    {
      *(_QWORD *)&v24 = swift_bridgeObjectRelease(v15).n128_u64[0];
      v23 = swift_bridgeObjectRelease(v18, v24).n128_u64[0];
    }
  }
  else
  {
    v23 = swift_bridgeObjectRelease(v15, v17).n128_u64[0];
  }
  v25 = objc_msgSend(v5, "identifier", *(double *)&v23);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  swift_beginAccess(v16, v31, 33, 0);
  v29 = sub_10026B150(v26, (uint64_t)v28);
  swift_endAccess(v31);
  swift_bridgeObjectRelease(v28);
  return swift_release(v29);
}

uint64_t sub_1003DFDE8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DFE0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003DFE38(uint64_t a1)
{
  uint64_t v1;

  sub_1003DF524(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003DFE40(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100221EDC(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003DFE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BED50);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BED50);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003DFF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = type metadata accessor for Date(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(a1, 1, 1, v2);
  v4 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  v3(a1 + v4[5], 1, 1, v2);
  v3(a1 + v4[6], 1, 1, v2);
  v3(a1 + v4[7], 1, 1, v2);
  v3(a1 + v4[8], 1, 1, v2);
  v3(a1 + v4[9], 1, 1, v2);
  v3(a1 + v4[10], 1, 1, v2);
  v3(a1 + v4[11], 1, 1, v2);
  v3(a1 + v4[12], 1, 1, v2);
  *(_BYTE *)(a1 + v4[13]) = 0;
  v3(a1 + v4[14], 1, 1, v2);
  v3(a1 + v4[15], 1, 1, v2);
  v3(a1 + v4[16], 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(a1 + v4[17], 1, 1, v2);
  v6 = a1 + v4[18];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  *(_BYTE *)(a1 + v4[19]) = 2;
  v7 = (_QWORD *)(a1 + v4[20]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(a1 + v4[21]);
  *v8 = 0;
  v8[1] = 0;
  return result;
}

void sub_1003E00D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v48 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  v47 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v47 + 64);
  v6 = __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v47 - v8);
  v10 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  v19 = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v20 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  v22 = v21 > 8;
  v23 = (1 << v21) & 0x18E;
  if (!v22 && v23 != 0)
  {
    Date.init()(v19);
    v25 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
    v26 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], v49, 33, 0);
    sub_10023A084((uint64_t)v12, v26, &qword_1007C4330);
    v27 = swift_endAccess(v49);
    v28 = *(_QWORD *)&v1[v20];
    if (v28 < 9)
    {
      v29 = (uint64_t *)((char *)&unk_1005D6E20 + 8 * v28);
LABEL_10:
      v30 = *v29;
      static Date.distantFuture.getter(v27);
      *v9 = v30;
      v31 = type metadata accessor for TaskPriority(0);
      v32 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v48, 1, 1, v31);
      sub_100244384((uint64_t)v9, (uint64_t)v7, type metadata accessor for AuthenticationSecurityRequest);
      v33 = *(unsigned __int8 *)(v47 + 80);
      v34 = (v33 + 40) & ~v33;
      v35 = (_QWORD *)swift_allocObject(&unk_100727670, v34 + v5, v33 | 7);
      v35[2] = 0;
      v35[3] = 0;
      v35[4] = v1;
      sub_10038A290((uint64_t)v7, (uint64_t)v35 + v34);
      v36 = v1;
      v37 = sub_100252EC0(v32, (uint64_t)&unk_1007BEED8, (uint64_t)v35);
      swift_release(v37);
      sub_1002443C8((uint64_t)v9, type metadata accessor for AuthenticationSecurityRequest);
      return;
    }
    if (qword_1007B3DD8 == -1)
    {
LABEL_9:
      v29 = &qword_1007D80C0;
      goto LABEL_10;
    }
LABEL_17:
    v27 = swift_once(&qword_1007B3DD8, sub_1002CFC70);
    goto LABEL_9;
  }
  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v38 = type metadata accessor for Logger(0);
  sub_100221DF8(v38, (uint64_t)qword_1007BED50);
  v39 = v1;
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    v49[0] = v43;
    *(_DWORD *)v42 = 136315138;
    v44 = sub_1003FDAA0(*(_QWORD *)&v1[v20]);
    v46 = (const char *)v45;
    v50 = sub_100228BD8(v44, v45, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v42 + 4);

    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Authentication type %s does not support this method", v42, 0xCu);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1003E0564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[28] = a4;
  v5[29] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[30] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[31] = v7;
  v5[32] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[33] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[34] = v9;
  v5[35] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003E05EC, 0, 0);
}

uint64_t sub_1003E05EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0[28] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 21, 0, 0);
  sub_100221F28(v1, (uint64_t)(v0 + 8), &qword_1007BFF70);
  if (v0[11])
  {
    v2 = v0[29];
    sub_100244418((uint64_t)(v0 + 8), (uint64_t)(v0 + 13));
    sub_10000D0F0((uint64_t)(v0 + 8), &qword_1007BFF70);
    v3 = (_QWORD *)(*sub_10023A834(v0 + 13, v0[16])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 18, 0, 0);
    v4 = *sub_10023A834(v3, v3[3]);
    v5 = swift_task_alloc(32);
    v0[36] = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[37] = v6;
    *v6 = v0;
    v6[1] = sub_1003E08F8;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_100340AE8, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000D0F0((uint64_t)(v0 + 8), &qword_1007BFF70);
    v8 = v0[35];
    v9 = v0[32];
    v19 = v0[34];
    v20 = v0[33];
    v10 = v0[30];
    v18 = v0[31];
    v11 = (void *)v0[28];
    v12 = swift_allocObject(&unk_100727698, 24, 7);
    *(_QWORD *)(v12 + 16) = v11;
    v0[6] = sub_1003EE964;
    v0[7] = v12;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10025BBB4;
    v0[5] = &unk_1007276B0;
    v13 = _Block_copy(v0 + 2);
    static DispatchQoS.unspecified.getter(v11);
    v0[24] = _swiftEmptyArrayStorage;
    v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 24, v15, v16, v10, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v9, v13);
    _Block_release(v13);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v20);
    swift_release(v0[7]);
    v17 = v0[32];
    swift_task_dealloc(v0[35]);
    swift_task_dealloc(v17);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1003E08F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003E0B20;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 288));
    v4 = sub_1003E0964;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003E0964()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_10022E75C(v0 + 13);
  v1 = v0[35];
  v2 = v0[32];
  v13 = v0[34];
  v14 = v0[33];
  v3 = v0[30];
  v12 = v0[31];
  v4 = (void *)v0[28];
  v5 = swift_allocObject(&unk_100727698, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v0[6] = sub_1003EE964;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10025BBB4;
  v0[5] = &unk_1007276B0;
  v6 = _Block_copy(v0 + 2);
  static DispatchQoS.unspecified.getter(v4);
  v0[24] = _swiftEmptyArrayStorage;
  v7 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v8 = sub_100008384((uint64_t *)&unk_1007B6410);
  v9 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 24, v8, v9, v3, v7);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v6);
  _Block_release(v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release(v0[7]);
  v10 = v0[32];
  swift_task_dealloc(v0[35]);
  swift_task_dealloc(v10);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1003E0B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  sub_10022E75C((_QWORD *)(v0 + 104));
  *(_QWORD *)(v0 + 200) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  type metadata accessor for SFAuthenticationError(0);
  if ((swift_dynamicCast(v0 + 312, v0 + 200, v2, v3, 0) & 1) != 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 304));
    sub_1003E1854(*(unsigned int *)(v0 + 312));
    v4 = *(_QWORD *)(v0 + 200);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 200));
    if (qword_1007B4048 != -1)
      swift_once(&qword_1007B4048, sub_1003DFE80);
    v5 = *(_QWORD *)(v0 + 304);
    v6 = type metadata accessor for Logger(0);
    sub_100221DF8(v6, (uint64_t)qword_1007BED50);
    swift_errorRetain(v5);
    v7 = swift_errorRetain(v5);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 304);
    if (v10)
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 208) = v11;
      swift_errorRetain(v11);
      v14 = String.init<A>(describing:)(v0 + 208, v2);
      v16 = (const char *)v15;
      *(_QWORD *)(v0 + 216) = sub_100228BD8(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v12 + 4);
      swift_bridgeObjectRelease(v16);
      swift_errorRelease(v11);
      swift_errorRelease(v11);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unexpected error: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(*(_QWORD *)(v0 + 304));
      swift_errorRelease(v11);
    }

    v17 = *(_QWORD *)(v0 + 304);
    sub_1003E1854(10);
    v4 = v17;
  }
  swift_errorRelease(v4);
  v18 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003E0DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1007B4048, sub_1003DFE80);
    goto LABEL_4;
  }
  v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(64, &type metadata for Int8);
  *(_QWORD *)(v7 + 16) = 64;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  v8 = SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v7 + 32));
  if (!v8)
  {
    v14 = sub_1003EE318((_BYTE *)(v7 + 32), 64);
    v16 = v15;
    swift_bridgeObjectRelease((const char *)v7);
    v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    *v17 = v14;
    v17[1] = v16;
    sub_100225AA0(v18, v19);
    return;
  }
  LODWORD(v1) = v8;
  swift_bridgeObjectRelease((const char *)v7);
  if (qword_1007B4048 != -1)
    goto LABEL_9;
LABEL_4:
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007BED50);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 67109120;
    v21 = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v13 + 4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error generating ranging key (status = %d)", v13, 8u);
    swift_slowDealloc(v13, -1, -1);
  }

}

uint64_t sub_1003E0FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  Class isa;
  id v25;
  const char *v26;
  const char *v27;
  NSString v28;
  id v29;
  Class v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint8_t *v64;
  uint64_t v65;
  __int128 *v66;
  unint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD v70[5];
  char v71[24];
  char v72[24];
  __int128 v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  char v78[32];

  v1 = v0;
  v2 = sub_100008384(&qword_1007C4330);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v67 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (unint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *(_QWORD *)v15 = v16;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  v18 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) != 0)
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    if (v15 >> 60 == 15)
      return sub_1003E1854(10);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    v20 = objc_allocWithZone((Class)SDAuthenticationRequest);
    sub_10022E4A8(v13, v15);
    v21 = objc_msgSend(v20, "init");
    v18 = (uint64_t)v21;
    if (v21)
    {
      v69 = v15;
      v22 = v13;
      v68 = (uint64_t)v21;
      v23 = v21;
      isa = Data._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v23, "setAwdlInfo:", isa);

      objc_msgSend(v23, "setVersion:", 1);
      v25 = v23;
      UUID.uuidString.getter(v25);
      v27 = v26;
      v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setSessionID:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

      if (HIDWORD(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
      {
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
        __break(1u);
        return result;
      }
      v21 = objc_msgSend(v25, "setType:");
      v67 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      if ((unint64_t)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) - 3) < 6)
      {
        v13 = v22;
        v15 = v69;
        v18 = v68;
        goto LABEL_16;
      }
      v29 = v25;
      v13 = v22;
      v15 = v69;
      v30 = Data._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v29, "setRangingToken:", v30);

      v18 = v68;
    }
    else
    {
      v67 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      if ((unint64_t)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) - 3) < 6)
        goto LABEL_16;
    }
    v31 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate, v78, 0, 0);
    sub_100221F28(v31, (uint64_t)v7, &qword_1007C4330);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      v21 = (id)sub_10000D0F0((uint64_t)v7, &qword_1007C4330);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (v18)
      {
        v32 = v18;
        v33 = (id)v18;
        objc_msgSend(v33, "setUnlockDate:", Date.timeIntervalSince1970.getter(v33));

        v18 = v32;
      }
      v21 = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
LABEL_16:
    Date.init()(v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    v34 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v75, 33, 0);
    v35 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10023A084((uint64_t)v5, v34 + *(int *)(v35 + 32), &qword_1007C4330);
    swift_endAccess(v75);
    if (v18)
    {
      v36 = objc_msgSend((id)v18, "data");
      if (v36)
      {
        v37 = v36;
        v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v36);
        v40 = v39;

        if (qword_1007B4048 != -1)
          swift_once(&qword_1007B4048, sub_1003DFE80);
        v41 = type metadata accessor for Logger(0);
        v42 = sub_100221DF8(v41, (uint64_t)qword_1007BED50);
        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.default.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          v45 = v18;
          v46 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v46 = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Sending authentication request", v46, 2u);
          v47 = v46;
          v18 = v45;
          swift_slowDealloc(v47, -1, -1);
        }

        v48 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v72, 0, 0);
        sub_100221F28(v48, (uint64_t)&v73, &qword_1007B9E38);
        if (v74)
        {
          sub_10026EE60(&v73, (uint64_t)v75);
          v49 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
          swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v71, 0, 0);
          sub_100221F28(v49, (uint64_t)&v73, &qword_1007BFF70);
          if (v74)
          {
            sub_100244418((uint64_t)&v73, (uint64_t)v70);
            sub_10000D0F0((uint64_t)&v73, &qword_1007BFF70);
            v50 = sub_10023A834(v70, v70[3]);
            v51 = *v67;
            v52 = v18;
            v53 = *v50;
            v54 = v76;
            v55 = v77;
            v56 = sub_10023A834(v75, v76);
            v57 = v53;
            v18 = v52;
            sub_10056A0EC(v38, v40, (uint64_t)v56, 0, v51, v57, v54, v55);
            sub_10022E75C(v75);
            sub_10022E75C(v70);
LABEL_34:
            sub_1003FCE8C(0, 1);

            sub_100225AA0(v13, v15);
            return sub_100225AB4(v38, v40);
          }
          sub_10022E75C(v75);
          v66 = &v73;
        }
        else
        {
          sub_10000D0F0((uint64_t)&v73, &qword_1007B9E38);
          v65 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
          swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v70, 0, 0);
          sub_100221F28(v65, (uint64_t)v75, &qword_1007BFF70);
          if (v76)
          {
            sub_100244418((uint64_t)v75, (uint64_t)&v73);
            sub_10000D0F0((uint64_t)v75, &qword_1007BFF70);
            sub_10023A834(&v73, v74);
            sub_100560874(v38, v40, 0, *v67);
            sub_10022E75C(&v73);
            goto LABEL_34;
          }
          v66 = (__int128 *)v75;
        }
        sub_10000D0F0((uint64_t)v66, &qword_1007BFF70);
        goto LABEL_34;
      }
    }
    if (qword_1007B4048 == -1)
      goto LABEL_26;
    goto LABEL_36;
  }
  __break(1u);
LABEL_36:
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_26:
  v58 = type metadata accessor for Logger(0);
  v59 = sub_100221DF8(v58, (uint64_t)qword_1007BED50);
  v60 = Logger.logObject.getter(v59);
  v61 = static os_log_type_t.error.getter(v60);
  if (os_log_type_enabled(v60, v61))
  {
    v62 = v18;
    v63 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v63 = 0;
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Error converting request to data", v63, 2u);
    v64 = v63;
    v18 = v62;
    swift_slowDealloc(v64, -1, -1);
  }

  sub_1003E1854(10);
  return sub_100225AA0(v13, v15);
}

uint64_t sub_1003E1854(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v21[5];
  char v22[24];
  _BYTE v23[24];
  uint64_t v24;

  v3 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v3);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_QWORD *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    Date.init()(result);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 0, 1, v13);
    v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], v23, 33, 0);
    v15 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10023A084((uint64_t)v5, (uint64_t)&v14[*(int *)(v15 + 20)], &qword_1007C4330);
    v16 = &v14[*(int *)(v15 + 72)];
    *(_DWORD *)v16 = a1;
    v16[4] = 0;
    swift_endAccess(v23);
    sub_1003E6E18();
    v17 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v22, 0, 0);
    sub_100221F28(v17, (uint64_t)v23, &qword_1007BFF70);
    if (v24)
    {
      sub_100244418((uint64_t)v23, (uint64_t)v21);
      sub_10000D0F0((uint64_t)v23, &qword_1007BFF70);
      v18 = (char *)*sub_10023A834(v21, v21[3]);
      v19 = v1;
      sub_1003886B8(v19, a1, 0, (char *)0xE000000000000000, v18);

      return sub_10022E75C(v21);
    }
    else
    {
      return sub_10000D0F0((uint64_t)v23, &qword_1007BFF70);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003E1A8C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  NSObject *v30;
  char *v31;
  NSObject *v32;
  NSObject **v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  void (*v51)(const char *, char *, uint64_t);
  const char *v52;
  void (*v53)(const char *, _QWORD, uint64_t, uint64_t);
  NSObject *v54;
  uint64_t v55;
  NSObject **v56;
  double v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  const char *v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  Class isa;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  __n128 v95;
  unint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  const char *v100;
  void *v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  NSObject **v105;
  unint64_t v106;
  id v107;
  void *v108;
  const char *v109;
  const char *v110;
  NSString v111;
  uint64_t v112;
  unint64_t v113;
  Class v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  NSData v119;
  unint64_t v120;
  uint64_t v121;
  id v122;
  void *v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  NSObject *v127;
  NSObject *v128;
  os_log_type_t v129;
  BOOL v130;
  uint8_t *v131;
  _QWORD *v132;
  NSObject *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  void *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  id v148;
  NSString v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  _BOOL4 v161;
  unint64_t v162;
  unint64_t v163;
  NSObject *v164;
  uint8_t *v165;
  NSObject *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  NSObject **v173;
  char *v174;
  id v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  const char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  const char *v187;
  char *v188;
  uint64_t v189;
  _QWORD *v190;
  __int128 aBlock;
  uint64_t (*v192)(uint64_t);
  void *v193;
  uint64_t (*v194)();
  _QWORD *v195;
  __int128 v196;
  uint64_t v197;
  char v198[8];
  uint64_t v199;
  char v200[8];

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = (char *)type metadata accessor for DispatchWorkItemFlags(0);
  v180 = *((_QWORD *)v181 - 1);
  __chkstk_darwin(v181);
  v179 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for DispatchQoS(0);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v176 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for UUID(0);
  v184 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v183 = (char *)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C4330);
  v10 = __chkstk_darwin(v9);
  v182 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v187 = (char *)&v166 - v12;
  v189 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v188 = (char *)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (NSObject **)((char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v1;
  v20 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v18 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v21 = v20;
  v22 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v22 & 1) != 0)
  {
    v175 = v21;
    if (qword_1007B4048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_3:
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100221DF8(v23, (uint64_t)qword_1007BED50);
  v25 = a1;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = os_log_type_enabled(v26, v27);
  v174 = v5;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v173 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v29 = 138412290;
    *(_QWORD *)&aBlock = v25;
    v30 = v25;
    v186 = v24;
    v31 = v19;
    v32 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v29 + 4);
    v33 = v173;
    *v173 = v25;

    v34 = v31;
    v35 = v189;
    v24 = v186;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Handling authentication request %@", v29, 0xCu);
    v36 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v33, 1, v36);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {

    v26 = v25;
    v34 = v19;
    v35 = v189;
  }

  v37 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v38 = *(_QWORD *)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v38 <= 8 && ((1 << v38) & 0x18E) != 0)
  {
    v39 = v34;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v43;
      *(_DWORD *)v42 = 136315138;
      v44 = sub_1003FDAA0(*(_QWORD *)&v34[v37]);
      v46 = (const char *)v45;
      v199 = sub_100228BD8(v44, v45, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v199, v200, v42 + 4);

      swift_bridgeObjectRelease(v46);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Authentication type %s does not support handling this message", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

    }
    return;
  }
  v47 = (uint64_t)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v198, 0, 0);
  sub_100221F28(v47, (uint64_t)&aBlock, &qword_1007B9E38);
  sub_100221F28((uint64_t)&aBlock, (uint64_t)&v196, &qword_1007B9E38);
  if (!v197)
  {
    sub_10000D0F0((uint64_t)&v196, &qword_1007B9E38);
    v59 = sub_100244304();
    v60 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v59, 0, 0);
    *(_DWORD *)v61 = 10;
    strcpy((char *)(v61 + 8), "No peer device");
    *(_BYTE *)(v61 + 23) = -18;
    swift_willThrow(v60);
    sub_10000D0F0((uint64_t)&aBlock, &qword_1007B9E38);
    goto LABEL_29;
  }
  sub_10026EE60(&v196, (uint64_t)&v199);
  sub_10000D0F0((uint64_t)&aBlock, &qword_1007B9E38);
  v48 = -[NSObject sessionStartDate](v25, "sessionStartDate");
  v49 = v188;
  Date.init(timeIntervalSince1970:)(v48);
  v50 = v34;
  v51 = *(void (**)(const char *, char *, uint64_t))(v13 + 16);
  v52 = v187;
  v51(v187, v49, v35);
  v171 = v13;
  v53 = *(void (**)(const char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  v53(v52, 0, 1, v35);
  v172 = v50;
  v54 = v25;
  v55 = (uint64_t)&v50[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
  swift_beginAccess(&v50[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], &aBlock, 33, 0);
  sub_10023A084((uint64_t)v52, v55, &qword_1007C4330);
  swift_endAccess(&aBlock);
  v173 = (NSObject **)v54;
  if ((-[NSObject hasUnlockDate](v54, "hasUnlockDate") & 1) != 0)
  {
    v56 = v173;
    objc_msgSend(v173, "unlockDate");
    if (v57 == 0.0)
    {
      v58 = (uint64_t)v182;
      v51(v182, v188, v35);
    }
    else
    {
      v62 = objc_msgSend(v56, "unlockDate");
      v58 = (uint64_t)v182;
      Date.init(timeIntervalSince1970:)(v62);
    }
    v53((const char *)v58, 0, 1, v35);
    swift_beginAccess(v55, &aBlock, 33, 0);
    v63 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10023A084(v58, v55 + *(int *)(v63 + 68), &qword_1007C4330);
    swift_endAccess(&aBlock);
  }
  v186 = v24;
  v64 = v187;
  v65 = v188;
  v51(v187, v188, v35);
  v53(v64, 0, 1, v35);
  swift_beginAccess(v55, &aBlock, 33, 0);
  v66 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10023A084((uint64_t)v64, v55 + v66[7], &qword_1007C4330);
  v67 = v55 + v66[8];
  sub_10000D0F0(v67, &qword_1007C4330);
  v51((const char *)v67, v65, v35);
  v53((const char *)v67, 0, 1, v35);
  v68 = swift_endAccess(&aBlock);
  Date.init()(v68);
  v53(v64, 0, 1, v35);
  swift_beginAccess(v55, &aBlock, 33, 0);
  sub_10023A084((uint64_t)v64, v55 + v66[9], &qword_1007C4330);
  swift_endAccess(&aBlock);
  v69 = 0;
  v70 = v172;
  v71 = v185;
  if ((unint64_t)(*(_QWORD *)&v172[v37] - 1) <= 3)
  {
    v72 = v35;
    v73 = objc_msgSend(v173, "awdlInfo");
    if (v73)
    {
      v74 = v73;
      v75 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v73);
      v77 = v76;

      isa = Data._bridgeToObjectiveC()().super.isa;
      v79 = sub_1000C7E44(isa);

      if (v79)
      {
        v69 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v79, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
        sub_100225AB4(v75, v77);

        v35 = v72;
        goto LABEL_22;
      }
      sub_100225AB4(v75, v77);
    }
    v96 = sub_100244304();
    v60 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v96, 0, 0);
    *(_DWORD *)v97 = 10;
    *(_QWORD *)(v97 + 8) = 0xD00000000000001FLL;
    *(_QWORD *)(v97 + 16) = 0x8000000100618540;
    swift_willThrow(v60);
    (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v188, v72, v98);
    goto LABEL_28;
  }
LABEL_22:
  v80 = v35;
  v81 = objc_msgSend(v173, "aksToken");
  v82 = v184;
  v83 = v183;
  if (!v81)
  {
    v93 = sub_100244304();
    v60 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v93, 0, 0);
    *(_DWORD *)v94 = 10;
    *(_QWORD *)(v94 + 8) = 0xD00000000000001FLL;
    *(_QWORD *)(v94 + 16) = 0x8000000100619BD0;
    swift_willThrow(v60);
    v95 = swift_bridgeObjectRelease(v69);
    (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v188, v80, v95);
LABEL_28:
    sub_10022E75C(&v199);
    goto LABEL_29;
  }
  v84 = v81;
  v187 = v69;
  v85 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v81);
  v87 = v86;

  sub_100244418((uint64_t)&v199, (uint64_t)&aBlock);
  (*(void (**)(char *, char *, unint64_t))(v82 + 16))(v83, &v70[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], v71);
  v88 = *(_QWORD *)&v70[v37];
  v89 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
  v90 = swift_allocObject(v89, *(unsigned int *)(v89 + 48), *(unsigned __int16 *)(v89 + 52));
  *(_QWORD *)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
  v91 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (!v91)
  {
    __break(1u);
    return;
  }
  *(_QWORD *)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v91;
  *(_BYTE *)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 0;
  sub_10026EE60(&aBlock, v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
  (*(void (**)(uint64_t, char *, unint64_t))(v82 + 32))(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v83, v71);
  *(_QWORD *)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v88;
  v92 = *(_QWORD *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession];
  *(_QWORD *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession] = v90;
  swift_retain(v90);
  swift_release(v92);
  sub_10022E4A8(v85, v87);
  sub_100524A50(0, 0xF000000000000000);
  sub_100524700(v85, v87);
  v102 = v101;
  sub_100225AB4(v85, v87);
  v103 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v102);
  v185 = v104;

  v105 = (NSObject **)sub_100524914();
  v182 = (const char *)v106;
  v184 = v103;
  v183 = (char *)v90;
  v107 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationResponse), "init");
  if (!v107)
  {
    v120 = sub_100244304();
    v60 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v120, 0, 0);
    *(_DWORD *)v121 = 10;
    *(_QWORD *)(v121 + 8) = 0xD000000000000031;
    *(_QWORD *)(v121 + 16) = 0x8000000100619BF0;
    swift_willThrow(v60);
    swift_bridgeObjectRelease(v187);
    sub_100225AB4(v184, v185);
    sub_100225AB4((uint64_t)v105, (unint64_t)v182);
LABEL_45:
    sub_100225AB4(v85, v87);
    swift_release(v183);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v188, v189);
    sub_10022E75C(&v199);
LABEL_29:
    v199 = v60;
    swift_errorRetain(v60);
    v99 = sub_100008384(&qword_1007B5A60);
    if (swift_dynamicCast(&aBlock, &v199, v99, &type metadata for SFAuthenticationErrorMessage, 0))
    {
      swift_errorRelease(v60);
      v100 = (const char *)v192;
      sub_1003E4674(aBlock, *((uint64_t *)&aBlock + 1), (const char *)v192);
      swift_bridgeObjectRelease(v100);
      swift_errorRelease(v199);
    }
    else
    {
      swift_errorRelease(v199);
      sub_1003E4674(10, 0, (const char *)0xE000000000000000);
      swift_errorRelease(v60);
    }
    return;
  }
  v108 = v107;
  v173 = v105;
  UUID.uuidString.getter(v107);
  v110 = v109;
  v111 = String._bridgeToObjectiveC()();
  objc_msgSend(v108, "setSessionID:", v111, swift_bridgeObjectRelease(v110).n128_f64[0]);

  objc_msgSend(v108, "setVersion:", 1);
  v112 = v184;
  v113 = v185;
  v114 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v108, "setAksToken:", v114);

  if ((unint64_t)(*(_QWORD *)&v172[v37] - 1) < 4)
  {
    v115 = v85;
    v116 = *(_QWORD *)&v172[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession];
    if (v116)
    {
      v117 = *(_QWORD *)(v116 + 16);
      v118 = *(_QWORD *)(v116 + 24);
      sub_10022E4A8(v117, v118);
      v119.super.isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100225AB4(v117, v118);
    }
    else
    {
      v119.super.isa = 0;
    }
    objc_msgSend(v108, "setAwdlInfo:", v119.super.isa);

    v85 = v115;
  }
  v122 = objc_msgSend(v108, "data");
  if (!v122)
  {
    v135 = sub_100244304();
    v60 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v135, 0, 0);
    *(_DWORD *)v136 = 10;
    *(_QWORD *)(v136 + 8) = 0xD000000000000022;
    *(_QWORD *)(v136 + 16) = 0x8000000100619C30;
    swift_willThrow(v60);
    swift_bridgeObjectRelease(v187);
    sub_100225AB4(v112, v113);
    sub_100225AB4((uint64_t)v173, (unint64_t)v182);

    goto LABEL_45;
  }
  v123 = v122;
  v167 = v85;
  v168 = v87;
  v124 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v122);
  v126 = v125;

  v127 = v108;
  v128 = Logger.logObject.getter(v127);
  v129 = static os_log_type_t.default.getter(v128);
  v130 = os_log_type_enabled(v128, v129);
  v170 = v126;
  v169 = v124;
  v166 = v127;
  if (v130)
  {
    v131 = (uint8_t *)swift_slowAlloc(12, -1);
    v132 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v131 = 138412290;
    *(_QWORD *)&aBlock = v127;
    v133 = v127;
    v126 = v170;
    v124 = v169;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v131 + 4);
    *v132 = v108;

    _os_log_impl((void *)&_mh_execute_header, v128, v129, "Sending authentication response: %@", v131, 0xCu);
    v134 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v132, 1, v134);
    swift_slowDealloc(v132, -1, -1);
    swift_slowDealloc(v131, -1, -1);
  }
  else
  {

    v128 = v127;
  }
  v137 = v181;
  v138 = v180;

  sub_100244418((uint64_t)&v199, (uint64_t)&v196);
  v139 = (_QWORD *)swift_allocObject(&unk_100727508, 80, 7);
  v140 = v172;
  v139[2] = v172;
  v139[3] = v124;
  v139[4] = v126;
  sub_10026EE60(&v196, (uint64_t)(v139 + 5));
  v194 = sub_1003EE6A8;
  v195 = v139;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v192 = sub_10025BBB4;
  v193 = &unk_100727520;
  v141 = _Block_copy(&aBlock);
  v181 = v140;
  v142 = sub_10022E4A8(v124, v126);
  v143 = v176;
  static DispatchQoS.unspecified.getter(v142);
  v190 = _swiftEmptyArrayStorage;
  v144 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v145 = sub_100008384((uint64_t *)&unk_1007B6410);
  v146 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  v147 = v179;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v190, v145, v146, v137, v144);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v143, v147, v141);
  _Block_release(v141);
  (*(void (**)(char *, char *))(v138 + 8))(v147, v137);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v143, v178);
  swift_release(v195);
  v148 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v149 = String._bridgeToObjectiveC()();
  LOBYTE(v145) = objc_msgSend(v148, "BOOLForKey:", v149);

  if ((v145 & 1) != 0 || (unint64_t)(*(_QWORD *)&v140[v37] - 1) >= 4)
  {
    swift_bridgeObjectRelease(v187, v166);
    v159 = Logger.logObject.getter(v158);
    v160 = static os_log_type_t.default.getter(v159);
    v161 = os_log_type_enabled(v159, v160);
    v162 = v168;
    v163 = v185;
    v164 = v166;
    if (v161)
    {
      v165 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v165 = 0;
      _os_log_impl((void *)&_mh_execute_header, v159, v160, "Skipping ranging", v165, 2u);
      swift_slowDealloc(v165, -1, -1);
    }
    sub_100225AB4(v184, v163);

    sub_100225AB4((uint64_t)v173, (unint64_t)v182);
    sub_100225AB4(v169, v170);

    sub_100225AB4(v167, v162);
    swift_release(v183);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v188, v189);
    sub_10022E75C(&v199);
    v181[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded] = 1;
  }
  else
  {
    v150 = type metadata accessor for TaskPriority(0);
    v151 = (uint64_t)v174;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v174, 1, 1, v150);
    v152 = (_QWORD *)swift_allocObject(&unk_100727558, 64, 7);
    v152[2] = 0;
    v152[3] = 0;
    v153 = v181;
    v152[4] = v187;
    v152[5] = v153;
    v154 = (uint64_t)v173;
    v155 = (unint64_t)v182;
    v152[6] = v173;
    v152[7] = v155;
    v156 = v153;
    sub_10022E4A8(v154, v155);
    v157 = sub_100252EC0(v151, (uint64_t)&unk_1007BEEC8, (uint64_t)v152);
    sub_100225AB4(v184, v185);
    swift_release(v157);
    sub_100225AB4(v154, v155);
    sub_100225AB4(v169, v170);

    sub_100225AB4(v167, v168);
    swift_release(v183);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v188, v189);
    sub_10022E75C(&v199);
  }
}

uint64_t sub_1003E3058(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[5];
  _BYTE v17[24];
  _BYTE v18[24];
  uint64_t v19;

  v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v17, 0, 0);
  sub_100221F28(v8, (uint64_t)v18, &qword_1007BFF70);
  if (!v19)
    return sub_10000D0F0((uint64_t)v18, &qword_1007BFF70);
  sub_100244418((uint64_t)v18, (uint64_t)v16);
  sub_10000D0F0((uint64_t)v18, &qword_1007BFF70);
  v9 = sub_10023A834(v16, v16[3]);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
  v11 = *v9;
  v12 = a4[3];
  v13 = a4[4];
  v14 = sub_10023A834(a4, v12);
  sub_10056A0EC(a2, a3, (uint64_t)v14, 1, v10, v11, v12, v13);
  return sub_10022E75C(v16);
}

uint64_t sub_1003E316C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v7[17] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[18] = v9;
  v7[19] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v7[20] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[21] = v11;
  v7[22] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003E31F8, 0, 0);
}

uint64_t sub_1003E31F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  const char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = 0xD000000000000012;
  v2 = *(_QWORD *)(v0 + 104);
  if (v2)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 112)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
    *(_QWORD *)(v0 + 184) = v3;
    if (v3)
    {
      v4 = dword_1007BC45C;
      swift_retain(v3);
      v5 = (_QWORD *)swift_task_alloc(v4);
      *(_QWORD *)(v0 + 192) = v5;
      *v5 = v0;
      v5[1] = sub_1003E33AC;
      return sub_100362338(v2, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
    }
    v7 = "No ranging session";
  }
  else
  {
    v1 = 0xD00000000000004FLL;
    v7 = "remoteAWDLInfo is missing for type that requires ranging. This shouldn't happen";
  }
  v8 = (unint64_t)(v7 - 32) | 0x8000000000000000;
  v9 = sub_100244304();
  v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0, 0);
  *(_DWORD *)v11 = 10;
  *(_QWORD *)(v11 + 8) = v1;
  *(_QWORD *)(v11 + 16) = v8;
  swift_willThrow(v10);
  *(_QWORD *)(v0 + 88) = v10;
  swift_errorRetain(v10);
  v12 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v0 + 64, v0 + 88, v12, &type metadata for SFAuthenticationErrorMessage, 0))
  {
    swift_errorRelease(v10);
    v13 = *(const char **)(v0 + 80);
    sub_1003E4674(*(_DWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v13);
    swift_bridgeObjectRelease(v13);
    v14 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 88));
    sub_1003E4674(10, 0, (const char *)0xE000000000000000);
    v14 = v10;
  }
  swift_errorRelease(v14);
  v15 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E33AC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 192);
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003E375C;
  }
  else
  {
    *(_BYTE *)(v4 + 208) = a1 & 1;
    v6 = sub_1003E3424;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003E3424()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(unsigned __int8 *)(v0 + 208);
  *(_BYTE *)(*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = v1;
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 200);
    sub_1003E3838();
    swift_release(*(_QWORD *)(v0 + 184));
    if (v2)
    {
      *(_QWORD *)(v0 + 88) = v2;
      swift_errorRetain(v2);
      v3 = sub_100008384(&qword_1007B5A60);
      if ((swift_dynamicCast(v0 + 64, v0 + 88, v3, &type metadata for SFAuthenticationErrorMessage, 0) & 1) != 0)
      {
        swift_errorRelease(v2);
        v4 = *(const char **)(v0 + 80);
        sub_1003E4674(*(_DWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v4);
        swift_bridgeObjectRelease(v4);
        v5 = *(_QWORD *)(v0 + 88);
      }
      else
      {
        swift_errorRelease(*(_QWORD *)(v0 + 88));
        sub_1003E4674(10, 0, (const char *)0xE000000000000000);
        v5 = v2;
      }
      swift_errorRelease(v5);
    }
  }
  else
  {
    if (qword_1007B4048 != -1)
      swift_once(&qword_1007B4048, sub_1003DFE80);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007BED50);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Out of range", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    v24 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 144);
    v15 = *(void **)(v0 + 112);

    v16 = swift_allocObject(&unk_100727580, 24, 7);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v0 + 48) = sub_1003EE7A4;
    *(_QWORD *)(v0 + 56) = v16;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10025BBB4;
    *(_QWORD *)(v0 + 40) = &unk_100727598;
    v17 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v15);
    *(_QWORD *)(v0 + 96) = _swiftEmptyArrayStorage;
    v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v19 = sub_100008384((uint64_t *)&unk_1007B6410);
    v20 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 96, v19, v20, v14, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v13, v17);
    swift_release(v12);
    _Block_release(v17);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    swift_release(*(_QWORD *)(v0 + 56));
  }
  v21 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E375C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 88) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v0 + 64, v0 + 88, v2, &type metadata for SFAuthenticationErrorMessage, 0) & 1) != 0)
  {
    swift_errorRelease(v1);
    v3 = *(const char **)(v0 + 80);
    sub_1003E4674(*(_DWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v3);
    swift_bridgeObjectRelease(v3);
    v4 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 88));
    sub_1003E4674(10, 0, (const char *)0xE000000000000000);
    v4 = v1;
  }
  swift_errorRelease(v4);
  v5 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003E3838()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const void *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  uint64_t v58;
  _QWORD *v59;

  v2 = v0;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8];
  if (v12 >> 60 == 15)
  {
    if (qword_1007B4048 != -1)
      swift_once(&qword_1007B4048, sub_1003DFE80);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007BED50);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Auth token not present yet", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    goto LABEL_19;
  }
  v55 = v9;
  v18 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded];
  v56 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken];
  sub_10022E4A8(v56, v12);
  if (v18 != 1)
  {
    if (qword_1007B4048 != -1)
      swift_once(&qword_1007B4048, sub_1003DFE80);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_100221DF8(v29, (uint64_t)qword_1007BED50);
    v15 = Logger.logObject.getter(v30);
    v31 = static os_log_type_t.default.getter(v15);
    if (!os_log_type_enabled(v15, v31))
    {
      sub_100225AA0(v56, v12);
LABEL_19:

      return;
    }
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v31, "Ranging not succeeded yet", v32, 2u);
    swift_slowDealloc(v32, -1, -1);

    v33 = v56;
    goto LABEL_22;
  }
  v53 = v4;
  v54 = v1;
  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v19 = type metadata accessor for Logger(0);
  v52 = sub_100221DF8(v19, (uint64_t)qword_1007BED50);
  v20 = Logger.logObject.getter(v52);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Consuming auth token", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession];
  v24 = v56;
  if (!v23)
  {
    v34 = sub_100244304();
    v35 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0, 0);
    *(_DWORD *)v36 = 10;
    *(_QWORD *)(v36 + 8) = 0xD000000000000013;
    *(_QWORD *)(v36 + 16) = 0x80000001006184E0;
    swift_willThrow(v35);
    goto LABEL_21;
  }
  sub_100244404(v56, v12);
  swift_retain(v23);
  v25 = v54;
  sub_100524700(v24, v12);
  v26 = v24;
  v28 = v27;
  sub_100225AA0(v26, v12);
  if (v25)
  {
    swift_release(v23);
    v24 = v56;
LABEL_21:
    v33 = v24;
LABEL_22:
    sub_100225AA0(v33, v12);
    return;
  }
  v51 = v23;
  v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
  sub_100225AB4(v37, v38);

  v24 = v56;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 4)
  {
    v39 = sub_10001DDC4();
    if (!(_DWORD)v39)
    {
      v48 = sub_100244304();
      v49 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v48, 0, 0);
      *(_DWORD *)v50 = 10;
      *(_QWORD *)(v50 + 8) = 0xD000000000000045;
      *(_QWORD *)(v50 + 16) = 0x8000000100619CB0;
      swift_willThrow(v49);
      swift_release(v51);
      goto LABEL_21;
    }
    v54 = 0;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "BIO ARM SUCCEEDED", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

  }
  v54 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v43 = swift_allocObject(&unk_1007275D0, 24, 7);
  *(_QWORD *)(v43 + 16) = v2;
  aBlock[4] = sub_1003EE7DC;
  v58 = v43;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_1007275E8;
  v52 = (uint64_t)_Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v2);
  v59 = _swiftEmptyArrayStorage;
  v44 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v45 = sub_100008384((uint64_t *)&unk_1007B6410);
  v46 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v45, v46, v3, v44);
  v47 = (const void *)v52;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v52);
  swift_release(v51);
  _Block_release(v47);
  sub_100225AA0(v56, v12);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v55);
  swift_release(v58);
}

void sub_1003E3E80(unint64_t a1)
{
  _BYTE *v1;
  void *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  id v15;
  const char *v16;
  const char *v17;
  NSString v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  NSObject *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD v67[5];
  char v68[24];
  char v69[24];
  char v70[24];
  __int128 v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v3 = v1;
  v5 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v5);
  v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_BYTE **)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once(&qword_1007B4048, sub_1003DFE80);
    goto LABEL_12;
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationConfirmation), "init");
  v2 = v14;
  if (v14)
  {
    objc_msgSend(v14, "setVersion:", 1);
    v15 = v2;
    UUID.uuidString.getter(v15);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setSessionID:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

    objc_msgSend(v15, "setSuccess:", HIDWORD(a1) & 1);
    if ((a1 & 0x100000000) == 0)
      objc_msgSend(v15, "setErrorCode:", a1);
    v19 = objc_msgSend(v15, "data");
    if (v19)
    {
      v20 = v19;
      v65 = a1;
      v63 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v64 = v21;

      if (qword_1007B4048 != -1)
        swift_once(&qword_1007B4048, sub_1003DFE80);
      v22 = type metadata accessor for Logger(0);
      sub_100221DF8(v22, (uint64_t)qword_1007BED50);
      v23 = v15;
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = (_QWORD *)swift_slowAlloc(8, -1);
        v62 = v3;
        *(_DWORD *)v26 = 138412290;
        v73 = v23;
        v28 = v23;
        v29 = v23;
        v3 = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v26 + 4);
        *v27 = v2;

        v23 = v28;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending confirmation: %@", v26, 0xCu);
        v30 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v27, 1, v30);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);
      }
      else
      {

        v24 = v23;
      }
      v36 = v64;
      v37 = v63;

      v38 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v70, 0, 0);
      sub_100221F28(v38, (uint64_t)&v71, &qword_1007B9E38);
      v39 = v65;
      if (v72)
      {
        sub_10026EE60(&v71, (uint64_t)&v73);
        v40 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v68, 0, 0);
        sub_100221F28(v40, (uint64_t)&v71, &qword_1007BFF70);
        if (v72)
        {
          sub_100244418((uint64_t)&v71, (uint64_t)v67);
          sub_10000D0F0((uint64_t)&v71, &qword_1007BFF70);
          v41 = sub_10023A834(v67, v67[3]);
          v42 = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
          v43 = *v41;
          v44 = v23;
          v45 = v75;
          v46 = v76;
          v47 = sub_10023A834(&v73, v75);
          v48 = v45;
          v23 = v44;
          v49 = sub_10056A0EC(v37, v36, (uint64_t)v47, 2, v42, v43, v48, v46);
          v50 = HIDWORD(v49) & 1;
          sub_10022E75C(&v73);
          v51 = sub_10022E75C(v67);
          goto LABEL_24;
        }
        sub_10022E75C(&v73);
        v53 = &v71;
      }
      else
      {
        sub_10000D0F0((uint64_t)&v71, &qword_1007B9E38);
        v52 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v67, 0, 0);
        sub_100221F28(v52, (uint64_t)&v73, &qword_1007BFF70);
        if (v75)
        {
          sub_100244418((uint64_t)&v73, (uint64_t)&v71);
          sub_10000D0F0((uint64_t)&v73, &qword_1007BFF70);
          sub_10023A834(&v71, v72);
          v49 = sub_100560874(v37, v36, 2, *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          v50 = HIDWORD(v49) & 1;
          v51 = sub_10022E75C(&v71);
          goto LABEL_24;
        }
        v53 = (__int128 *)&v73;
      }
      v51 = sub_10000D0F0((uint64_t)v53, &qword_1007BFF70);
      v49 = 0;
      LOBYTE(v50) = 1;
LABEL_24:
      v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent] = 1;
      if ((v39 & 0x100000000) != 0)
      {
        if ((v50 & 1) != 0)
        {
          v54 = (uint64_t)v66;
          Date.init()(v51);
          v55 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
          v56 = &v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
          swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], &v73, 33, 0);
          v57 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
          sub_10023A084(v54, (uint64_t)&v56[*(int *)(v57 + 20)], &qword_1007C4330);
          swift_endAccess(&v73);
          sub_1003E6E18();
          v58 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
          swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v69, 0, 0);
          sub_100221F28(v58, (uint64_t)&v73, &qword_1007BFF70);
          if (v75)
          {
            sub_100244418((uint64_t)&v73, (uint64_t)&v71);
            sub_10000D0F0((uint64_t)&v73, &qword_1007BFF70);
            v59 = (char *)*sub_10023A834(&v71, v72);
            v60 = v3;
            sub_1003EC2C0(v60, v59, type metadata accessor for SDAuthenticationLockSession, (uint64_t (*)(uint64_t))sub_1003EE658, (uint64_t (*)(uint64_t))sub_1003EE658, (uint64_t (*)(uint64_t))sub_1003EE658);

            sub_100225AB4(v37, v36);
            sub_10022E75C(&v71);
          }
          else
          {

            sub_100225AB4(v37, v36);
            sub_10000D0F0((uint64_t)&v73, &qword_1007BFF70);
          }
          return;
        }
        v61 = v49;
      }
      else
      {
        v61 = v39;
      }
      sub_1003E1854(v61);

      sub_100225AB4(v37, v36);
      return;
    }
  }
  else
  {
    objc_msgSend(0, "setSuccess:", HIDWORD(a1) & 1);
  }
  if (qword_1007B4048 != -1)
    goto LABEL_33;
LABEL_12:
  v31 = type metadata accessor for Logger(0);
  v32 = sub_100221DF8(v31, (uint64_t)qword_1007BED50);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.error.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Error converting confirmation to data", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

  sub_1003E1854(10);
}

uint64_t sub_1003E4674(int a1, uint64_t a2, const char *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v14 = swift_allocObject(&unk_100727620, 48, 7);
  *(_QWORD *)(v14 + 16) = v3;
  *(_DWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  aBlock[4] = sub_1003EE810;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100727638;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  swift_bridgeObjectRetain(a3);
  static DispatchQoS.unspecified.getter(v17);
  v24 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008384((uint64_t *)&unk_1007B6410);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v26);
}

void sub_1003E4888(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject **v24;
  NSObject *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  Class isa;
  id v41;
  const char *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  char *v52;
  uint8_t *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  const char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  NSString v64;
  unsigned int v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  unint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(char *, _QWORD, uint64_t, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = v1;
  v13 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = v13;
  v15 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if (qword_1007B4048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_3:
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007BED50);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v83 = v5;
  if (v21)
  {
    v82 = v8;
    v22 = v17;
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 138412290;
    v85 = v18;
    v25 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v23 + 4);
    *v24 = v18;

    v17 = v22;
    v8 = v82;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Handling authentication response %@", v23, 0xCu);
    v26 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v24, 1, v26);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

    v19 = v18;
  }
  v27 = v84;

  v29 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v30 = *(_QWORD *)&v27[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v30 > 8 || ((1 << v30) & 0x18E) == 0)
  {
    v49 = v27;
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = v27;
      v53 = (uint8_t *)swift_slowAlloc(12, -1);
      v54 = swift_slowAlloc(32, -1);
      v85 = v54;
      *(_DWORD *)v53 = 136315138;
      v55 = sub_1003FDAA0(*(_QWORD *)&v52[v29]);
      v57 = (const char *)v56;
      v87 = sub_100228BD8(v55, v56, (uint64_t *)&v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v53 + 4);

      swift_bridgeObjectRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Authentication type %s does not support handling this message", v53, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {

    }
    return;
  }
  Date.init()(v28);
  v31 = type metadata accessor for Date(0);
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v8, 0, 1, v31);
  v33 = &v27[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
  swift_beginAccess(&v27[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], &v85, 33, 0);
  v34 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10023A084((uint64_t)v8, (uint64_t)&v33[*(int *)(v34 + 36)], &qword_1007C4330);
  swift_endAccess(&v85);
  sub_1003FD560();
  if (-[NSObject hasErrorCode](v18, "hasErrorCode"))
  {
    sub_1003E1854((uint64_t)-[NSObject errorCode](v18, "errorCode"));
    return;
  }
  v35 = -[NSObject awdlInfo](v18, "awdlInfo");
  if (v35)
  {
    v36 = v35;
    v81 = v32;
    v82 = (char *)v17;
    v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

    isa = Data._bridgeToObjectiveC()().super.isa;
    v41 = sub_1000C7E44(isa);

    if (v41)
    {
      v79 = v37;
      v80 = v39;
      v42 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v43 = (uint64_t *)&v27[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken];
      v44 = *(_QWORD *)&v27[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8];
      if (v44 >> 60 == 15)
      {
        swift_bridgeObjectRelease(v42);
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.error.getter(v46);
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v48 = 0;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Could not find ranging token", v48, 2u);
          swift_slowDealloc(v48, -1, -1);
        }

        LOBYTE(v85) = 0;
        sub_1003E3E80(0xAuLL);
        sub_100225AB4(v79, v80);
      }
      else
      {
        v61 = *v43;
        v62 = sub_10022E4A8(*v43, *(_QWORD *)&v27[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8]);
        Date.init()(v62);
        v81(v8, 0, 1, v31);
        swift_beginAccess(v33, &v85, 33, 0);
        sub_10023A084((uint64_t)v8, (uint64_t)&v33[*(int *)(v34 + 40)], &qword_1007C4330);
        swift_endAccess(&v85);
        v63 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v64 = String._bridgeToObjectiveC()();
        v65 = objc_msgSend(v63, "BOOLForKey:", v64);

        if (v65)
        {
          swift_bridgeObjectRelease(v42);
          v67 = Logger.logObject.getter(v66);
          v68 = static os_log_type_t.default.getter(v67);
          v69 = os_log_type_enabled(v67, v68);
          v71 = v79;
          v70 = v80;
          if (v69)
          {
            v72 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v72 = 0;
            _os_log_impl((void *)&_mh_execute_header, v67, v68, "Default classCUnlockSkipRanging is set. Skipping ranging", v72, 2u);
            swift_slowDealloc(v72, -1, -1);
            sub_100225AB4(v71, v70);

            sub_100225AA0(v61, v44);
          }
          else
          {
            sub_100225AB4(v79, v80);
            sub_100225AA0(v61, v44);

          }
          v84[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded] = 1;
        }
        else
        {
          v73 = type metadata accessor for TaskPriority(0);
          v74 = (uint64_t)v83;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v83, 1, 1, v73);
          v75 = (_QWORD *)swift_allocObject(&unk_100727440, 64, 7);
          v75[2] = 0;
          v75[3] = 0;
          v76 = v84;
          v75[4] = v84;
          v75[5] = v42;
          v75[6] = v61;
          v75[7] = v44;
          v77 = v76;
          sub_100244404(v61, v44);
          v78 = sub_100252EC0(v74, (uint64_t)&unk_1007BEEA8, (uint64_t)v75);
          sub_100225AB4(v79, v80);
          sub_100225AA0(v61, v44);
          swift_release(v78);
        }
      }
      return;
    }
    v35 = (id)sub_100225AB4(v37, v39);
  }
  v58 = Logger.logObject.getter(v35);
  v59 = static os_log_type_t.error.getter(v58);
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Message does not have AWDL info", v60, 2u);
    swift_slowDealloc(v60, -1, -1);
  }

  LOBYTE(v85) = 0;
  sub_1003E3E80(0xAuLL);
}

uint64_t sub_1003E5148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v7[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[21] = v9;
  v7[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v7[23] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[24] = v11;
  v7[25] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003E51D4, 0, 0);
}

uint64_t sub_1003E51D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BED50);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting ranging as initiator", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[16];

  v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  v0[26] = v7;
  if (v7)
  {
    v8 = dword_1007BC45C;
    swift_retain(v7);
    v9 = (_QWORD *)swift_task_alloc(v8);
    v0[27] = v9;
    *v9 = v0;
    v9[1] = sub_1003E54B0;
    return sub_100362338(v0[17], v0[18], v0[19]);
  }
  else
  {
    v11 = v0[25];
    v12 = v0[22];
    v22 = v0[24];
    v23 = v0[23];
    v13 = v0[20];
    v21 = v0[21];
    v14 = (void *)v0[16];
    v15 = swift_allocObject(&unk_1007274B8, 32, 7);
    *(_BYTE *)(v15 + 16) = 2;
    *(_QWORD *)(v15 + 24) = v14;
    v0[12] = sub_1003EE64C;
    v0[13] = v15;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10025BBB4;
    v0[11] = &unk_1007274D0;
    v16 = _Block_copy(v0 + 8);
    static DispatchQoS.unspecified.getter(v14);
    v0[15] = _swiftEmptyArrayStorage;
    v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_100008384((uint64_t *)&unk_1007B6410);
    v19 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 15, v18, v19, v13, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v12, v16);
    _Block_release(v16);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v23);
    swift_release(v0[13]);
    v20 = v0[22];
    swift_task_dealloc(v0[25]);
    swift_task_dealloc(v20);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1003E54B0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 216);
  *(_QWORD *)(*v2 + 224) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003E56EC;
  }
  else
  {
    swift_release(*(_QWORD *)(v4 + 208));
    *(_BYTE *)(v4 + 232) = a1 & 1;
    v6 = sub_1003E5530;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003E5530()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_BYTE *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  v5 = *(void **)(v0 + 128);
  v6 = swift_allocObject(&unk_1007274B8, 32, 7);
  *(_BYTE *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v0 + 96) = sub_1003EE64C;
  *(_QWORD *)(v0 + 104) = v6;
  *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 72) = 1107296256;
  *(_QWORD *)(v0 + 80) = sub_10025BBB4;
  *(_QWORD *)(v0 + 88) = &unk_1007274D0;
  v7 = _Block_copy((const void *)(v0 + 64));
  static DispatchQoS.unspecified.getter(v5);
  *(_QWORD *)(v0 + 120) = _swiftEmptyArrayStorage;
  v8 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v9 = sub_100008384((uint64_t *)&unk_1007B6410);
  v10 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 120, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v3, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  swift_release(*(_QWORD *)(v0 + 104));
  v11 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E56EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[28];
  v2 = v0[25];
  v3 = v0[22];
  v16 = v0[24];
  v17 = v0[23];
  v4 = v0[20];
  v15 = v0[21];
  v5 = (void *)v0[16];
  swift_release(v0[26]);
  v6 = swift_allocObject(&unk_100727468, 32, 7);
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  v0[6] = sub_1003EE608;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10025BBB4;
  v0[5] = &unk_100727480;
  v7 = _Block_copy(v0 + 2);
  v8 = v5;
  v9 = swift_errorRetain(v1);
  static DispatchQoS.unspecified.getter(v9);
  v0[14] = _swiftEmptyArrayStorage;
  v10 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v11 = sub_100008384((uint64_t *)&unk_1007B6410);
  v12 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v4, v10);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v3, v7);
  _Block_release(v7);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v17);
  swift_release(v0[7]);
  v13 = v0[22];
  swift_task_dealloc(v0[25]);
  swift_task_dealloc(v13);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1003E58C0(char a1)
{
  unint64_t v1;

  if ((a1 & 1) != 0)
    v1 = 0x100000000;
  else
    v1 = 9;
  sub_1003E3E80(v1);
}

void sub_1003E5910(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  const char *v3;
  _DWORD v4[4];
  const char *v5;
  uint64_t v6;

  v6 = a1;
  swift_errorRetain(a1);
  v1 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v4, &v6, v1, &type metadata for SFAuthenticationErrorMessage, 6) & 1) != 0)
  {
    v2 = v4[0];
    v3 = v5;
    LOBYTE(v4[0]) = 0;
    sub_1003E3E80(v2);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    LOBYTE(v4[0]) = 0;
    sub_1003E3E80(0xAuLL);
  }
}

uint64_t sub_1003E59A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject **v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  Swift::String v23;
  Swift::String v24;
  const char *object;
  Swift::String v26;
  NSObject *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B4048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_3:
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007BED50);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v47 = v11;
    v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v14 + 4);
    *v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Handling token %@", v14, 0xCu);
    v17 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {

    v12 = v11;
  }

  v18 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
  v20 = v19 > 8;
  v21 = (1 << v19) & 0x18E;
  if (v20 || v21 == 0)
  {
    v36 = -[NSObject aksToken](v11, "aksToken");
    if (v36)
    {
      v37 = v36;
      v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v40 = v39;

      v41 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8);
      *v41 = v38;
      v41[1] = v40;
      sub_10022E4A8(v38, v40);
      sub_100225AA0(v42, v43);
      sub_1003E3838();
      return sub_100225AB4(v38, v40);
    }
    v44 = sub_100244304();
    v30 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0, 0);
    v31 = v30;
    *(_DWORD *)v45 = 10;
    *(_QWORD *)(v45 + 8) = 0xD000000000000024;
    *(_QWORD *)(v45 + 16) = 0x8000000100619D00;
  }
  else
  {
    v47 = 0;
    v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v23._object = (void *)0x8000000100619D30;
    v23._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v23);
    v24._countAndFlagsBits = sub_1003FDAA0(*(_QWORD *)(v2 + v18));
    object = (const char *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v26._countAndFlagsBits = 0xD000000000000027;
    v26._object = (void *)0x8000000100619D50;
    String.append(_:)(v26);
    v27 = v47;
    v28 = v48;
    v29 = sub_100244304();
    v30 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v29, 0, 0);
    v31 = v30;
    *(_DWORD *)v32 = 10;
    *(_QWORD *)(v32 + 8) = v27;
    *(_QWORD *)(v32 + 16) = v28;
  }
  swift_willThrow(v30);
  v50 = v31;
  swift_errorRetain(v31);
  v33 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(&v47, &v50, v33, &type metadata for SFAuthenticationErrorMessage, 6))
  {
    v34 = v49;
    sub_1003E4674((int)v47, v48, v49);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    sub_1003E4674(10, 0, (const char *)0xE000000000000000);
  }
  LOBYTE(v47) = 0;
  sub_1003E3E80(0xAuLL);
  return swift_errorRelease(v31);
}

void sub_1003E5E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE v12[16];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1007B4048, sub_1003DFE80);
    goto LABEL_4;
  }
  sub_1003FD560();
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) & 1) == 0)
  {
    v12[12] = 0;
    sub_1003E3E80(0xEuLL);
    return;
  }
  if (qword_1007B4048 != -1)
    goto LABEL_9;
LABEL_4:
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100221DF8(v7, (uint64_t)qword_1007BED50);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Can't cancel session that is already finished", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

}

void sub_1003E5F9C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v1 = (int *)type metadata accessor for RangingMetrics(0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100278774();
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  if (v4)
  {
    v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v10, 0, 0);
    sub_100244384(v5, (uint64_t)v3, type metadata accessor for RangingMetrics);
    v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
    swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v9, 33, 0);
    v7 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    v8 = v6 + v7[10];
    swift_retain(v4);
    sub_1002D46E8((uint64_t)v3, v8);
    sub_1002D46E8((uint64_t)&v3[v1[5]], v6 + v7[11]);
    sub_1002D46E8((uint64_t)&v3[v1[6]], v6 + v7[12]);
    *(_BYTE *)(v6 + v7[13]) = v3[v1[7]];
    sub_1002D46E8((uint64_t)&v3[v1[8]], v6 + v7[14]);
    sub_1002D46E8((uint64_t)&v3[v1[9]], v6 + v7[15]);
    swift_endAccess(v9);
    swift_release(v4);
    sub_1002443C8((uint64_t)v3, type metadata accessor for RangingMetrics);
  }
  sub_1003E6128();
}

void sub_1003E6128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  double v31;
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  double v37;
  uint64_t v38;
  char v39;
  char v40;
  double v41;
  uint64_t v42;
  char v43;
  char v44;
  double v45;
  uint64_t v46;
  char v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  double v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  const char *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  const char *v87;
  NSString v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  const char *v97;
  const char *v98;
  const char *v99;
  NSString v100;
  uint64_t v101;
  const char *v102;
  const char *v103;
  NSString v104;
  NSString v105;
  double v106;
  const char *v107;
  const char *v108;
  id v109;
  NSString v110;
  NSString v111;
  NSString v112;
  char **v113;
  const char *v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122[24];
  _QWORD v123[3];
  uint64_t v124;
  char v125[32];

  v1 = v0;
  v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  v3 = __chkstk_darwin(v2);
  v121 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v120 = (uint64_t)&v116 - v6;
  v7 = __chkstk_darwin(v5);
  v119 = (uint64_t)&v116 - v8;
  v9 = __chkstk_darwin(v7);
  v118 = (uint64_t)&v116 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v116 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v116 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v116 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v116 - v20;
  v22 = type metadata accessor for DispatchPredicate(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (uint64_t *)((char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  v28 = objc_msgSend(objc_allocWithZone((Class)SFWatchAuthenticationEvent), "init");
  if ((*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) & 0x8000000000000000) != 0)
  {
LABEL_46:
    __break(1u);
    return;
  }
  v29 = v28;
  v117 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  objc_msgSend(v28, "setAuthenticationType:");
  v30 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  *(_QWORD *)&v31 = swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v125, 0, 0).n128_u64[0];
  v32 = (unsigned int *)(v30 + *(int *)(v2 + 72));
  v33 = *((unsigned __int8 *)v32 + 4);
  if ((v33 & 1) == 0)
    objc_msgSend(v29, "setFailureReason:", *v32, v31);
  objc_msgSend(v29, "setSucceeded:", v33, v31);
  objc_msgSend(v29, "setScreenOn:", *(_BYTE *)(v30 + *(int *)(v2 + 76)) & 1);
  sub_100244384(v30, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v34 = COERCE_DOUBLE(sub_1003EB4B8());
  v116 = v2;
  v36 = v35;
  sub_1002443C8((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v37 = *(double *)&v34;
  if ((v36 & 1) != 0)
    v37 = 0.0;
  objc_msgSend(v29, "setDiscoveryDuration:", v37);
  sub_100244384(v30, (uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v38 = COERCE_DOUBLE(sub_1003EB6A8());
  v40 = v39;
  sub_1002443C8((uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v41 = *(double *)&v38;
  if ((v40 & 1) != 0)
    v41 = 0.0;
  objc_msgSend(v29, "setKeyExchangeDuration:", v41);
  sub_100244384(v30, (uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v42 = COERCE_DOUBLE(sub_1003EB898());
  v44 = v43;
  sub_1002443C8((uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v45 = *(double *)&v42;
  if ((v44 & 1) != 0)
    v45 = 0.0;
  objc_msgSend(v29, "setAwdlBringUpDuration:", v45);
  sub_100244384(v30, (uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v46 = COERCE_DOUBLE(sub_1003EBCB8());
  v48 = v47;
  sub_1002443C8((uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v49 = *(double *)&v46;
  if ((v48 & 1) != 0)
    v49 = 0.0;
  objc_msgSend(v29, "setRangingDuration:", v49);
  v50 = v118;
  sub_100244384(v30, v118, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v51 = COERCE_DOUBLE(sub_1003EBA88());
  v53 = v52;
  sub_1002443C8(v50, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v54 = *(double *)&v51;
  if ((v53 & 1) != 0)
    v54 = 0.0;
  objc_msgSend(v29, "setPeerFoundDuration:", v54);
  v55 = v119;
  sub_100244384(v30, v119, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v56 = COERCE_DOUBLE(sub_1003EB2D0());
  v58 = v57;
  sub_1002443C8(v55, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v59 = *(double *)&v56;
  if ((v58 & 1) != 0)
    v59 = 0.0;
  objc_msgSend(v29, "setTotalDuration:", v59);
  v60 = v120;
  sub_100244384(v30, v120, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v61 = COERCE_DOUBLE(sub_1003EBEA8());
  v63 = v62;
  sub_1002443C8(v60, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v64 = *(double *)&v61;
  if ((v63 & 1) != 0)
    v64 = 0.0;
  objc_msgSend(v29, "setTimeSinceBoot:", v64);
  v65 = v121;
  sub_100244384(v30, v121, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&v66 = COERCE_DOUBLE(sub_1003EC090());
  v68 = v67;
  sub_1002443C8(v65, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v69 = *(double *)&v66;
  if ((v68 & 1) != 0)
    v69 = 0.0;
  objc_msgSend(v29, "setTimeSinceRemoteUnlocked:", v69);
  v70 = *(_QWORD *)(v1 + v117) - 3;
  if (v70 >= 6)
    v71 = 7;
  else
    v71 = 0x50501010101uLL >> (8 * v70);
  if (sub_1000C8DEC(v71 & 7) == 1)
  {
    v72 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v122, 0, 0);
    sub_100221F28(v72, (uint64_t)v123, &qword_1007BFF70);
    v73 = v124;
    if (v124)
    {
      v74 = sub_10023A834(v123, v124);
      v75 = *(_QWORD *)(v73 - 8);
      __chkstk_darwin(v74);
      v77 = (char *)&v116 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v75 + 16))(v77);
      v78 = sub_10000D0F0((uint64_t)v123, &qword_1007BFF70);
      sub_100560270(v78, v79);
      v81 = v80;
      v83 = v82;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v73);
      swift_bridgeObjectRelease(v83);
    }
    else
    {
      sub_10000D0F0((uint64_t)v123, &qword_1007BFF70);
      v81 = (const char *)0xE000000000000000;
    }
    v88 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setWatchHardwareModel:", v88, swift_bridgeObjectRelease(v81).n128_f64[0]);

    sub_100221F28(v72, (uint64_t)v123, &qword_1007BFF70);
    v89 = v124;
    if (v124)
    {
      v90 = sub_10023A834(v123, v124);
      v91 = *(_QWORD *)(v89 - 8);
      __chkstk_darwin(v90);
      v93 = (char *)&v116 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v91 + 16))(v93);
      v94 = sub_10000D0F0((uint64_t)v123, &qword_1007BFF70);
      sub_100560270(v94, v95);
      v97 = v96;
      v99 = v98;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v89);
      swift_bridgeObjectRelease(v97);
    }
    else
    {
      sub_10000D0F0((uint64_t)v123, &qword_1007BFF70);
      v99 = (const char *)0xE000000000000000;
    }
    v104 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setWatchSoftwareVersion:", v104, swift_bridgeObjectRelease(v99).n128_f64[0]);

    v105 = objc_msgSend(v29, "watchHardwareModel");
    if (!v105)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v108 = v107;
      v105 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v106 = swift_bridgeObjectRelease(v108).n128_u64[0];
    }
    objc_msgSend(v29, "setRemoteHardwareModel:", v105, v106);

    v109 = objc_msgSend(v29, "watchSoftwareVersion");
    if (v109)
    {
      v110 = v109;
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v115 = v114;
      v110 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v115);
    }
    v113 = &selRef_setRemoteSoftwareVersion_;
  }
  else
  {
    v84 = v116;
    v85 = v30 + *(int *)(v116 + 80);
    v86 = *(const char **)(v85 + 8);
    if (v86)
      v87 = *(const char **)(v85 + 8);
    else
      v87 = (const char *)0xE000000000000000;
    swift_bridgeObjectRetain(v86);
    v100 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setRemoteHardwareModel:", v100, swift_bridgeObjectRelease(v87).n128_f64[0]);

    v101 = v30 + *(int *)(v84 + 84);
    v102 = *(const char **)(v101 + 8);
    if (v102)
      v103 = *(const char **)(v101 + 8);
    else
      v103 = (const char *)0xE000000000000000;
    swift_bridgeObjectRetain(v102);
    v111 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setRemoteSoftwareVersion:", v111, swift_bridgeObjectRelease(v103).n128_f64[0]);

    v112 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setWatchHardwareModel:", v112);

    v110 = String._bridgeToObjectiveC()();
    v113 = &selRef_setWatchSoftwareVersion_;
  }
  objc_msgSend(v29, *v113, v110);

  objc_msgSend(v29, "submitEvent");
}

uint64_t sub_1003E6A2C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1007B4048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007BED50);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v20 = v12;
    v13 = type metadata accessor for UUID(0);
    v14 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    v17 = (const char *)v16;
    v19 = sub_100228BD8(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  return sub_1003E1854(12);
}

void sub_1003E6CA0(_BYTE *a1, Swift::UInt a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for StateMetrics(0);
  v10 = (uint64_t)&a1[v9[5]];
  v11 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_1002D46E8(v10, v3 + v11[16]);
  *(_BYTE *)(v3 + v11[19]) = *a1;
  sub_10054763C((uint64_t)v8);
  sub_10023A084((uint64_t)v8, v3 + v11[6], &qword_1007C4330);
  v12 = *(_QWORD *)&a1[v9[9]];
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_10045C40C(a2), (v14 & 1) != 0))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v13);
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain(v16);
  }
  else
  {
    v17 = 0;
    v16 = 0;
  }
  v18 = (_QWORD *)(v3 + v11[20]);
  swift_bridgeObjectRelease(v18[1]);
  *v18 = v17;
  v18[1] = v16;
  v19 = *(_QWORD *)&a1[v9[10]];
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_10045C40C(a2), (v21 & 1) != 0))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    swift_bridgeObjectRetain(v23);
  }
  else
  {
    v24 = 0;
    v23 = 0;
  }
  v25 = (_QWORD *)(v3 + v11[21]);
  swift_bridgeObjectRelease(v25[1]);
  *v25 = v24;
  v25[1] = v23;
}

void sub_1003E6E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  const char *object;
  Swift::String v53;
  uint64_t v54;
  const char *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  const char *v65;
  Swift::String v66;
  uint64_t v67;
  const char *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  const char *v78;
  Swift::String v79;
  uint64_t v80;
  const char *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  const char *v93;
  Swift::String v94;
  uint64_t v95;
  const char *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  Swift::String v106;
  const char *v107;
  Swift::String v108;
  uint64_t v109;
  const char *v110;
  unint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  Swift::String v119;
  const char *v120;
  Swift::String v121;
  uint64_t v122;
  const char *v123;
  unint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  Swift::String v133;
  const char *v134;
  Swift::String v135;
  uint64_t v136;
  const char *v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  void *v149;
  Swift::String v150;
  Swift::String v151;
  uint64_t v152;
  uint64_t v153;
  Swift::String v154;
  const char *v155;
  Swift::String v156;
  uint64_t v157;
  const char *v158;
  unint64_t v159;
  unint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  const char *v165;
  const char *v166;
  id v167;
  NSString v168;
  NSString v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  uint8_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  _QWORD *v184;
  const char *v185;
  uint64_t v186;
  _BYTE v187[24];

  v1 = v0;
  v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  v3 = __chkstk_darwin(v2);
  v176 = (uint64_t)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v182 = (uint64_t)&v175 - v6;
  v7 = __chkstk_darwin(v5);
  v181 = (uint64_t)&v175 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v175 - v10;
  v12 = __chkstk_darwin(v9);
  v180 = (uint64_t)&v175 - v13;
  v14 = __chkstk_darwin(v12);
  v179 = (uint64_t)&v175 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v175 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v175 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v175 - v22;
  v24 = type metadata accessor for DispatchPredicate(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (uint64_t *)((char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v24);
  v29 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)(v27);
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
  if ((v28 & 1) != 0)
  {
    v30 = sub_100008384(&qword_1007B54A0);
    v27 = (_QWORD *)swift_allocObject(v30, 48, 7);
    v183 = xmmword_1005CD2A0;
    *((_OWORD *)v27 + 1) = xmmword_1005CD2A0;
    v27[4] = UUID.uuidString.getter(v27);
    v27[5] = v31;
    if (qword_1007B4048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4048, sub_1003DFE80);
LABEL_3:
  v32 = type metadata accessor for Logger(0);
  v178 = sub_100221DF8(v32, (uint64_t)qword_1007BED50);
  v33 = Logger.logObject.getter(v178);
  v34 = static os_log_type_t.default.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Logging metrics", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

  v36 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  swift_beginAccess(v36, v187, 0, 0);
  v37 = *(unsigned __int8 *)(v36 + *(int *)(v2 + 76));
  if (v37 != 2)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000016;
    v185 = (const char *)0x8000000100619B90;
    if ((v37 & 1) != 0)
      v38 = 1702195828;
    else
      v38 = 0x65736C6166;
    if ((v37 & 1) != 0)
      v39 = (const char *)0xE400000000000000;
    else
      v39 = (const char *)0xE500000000000000;
    v40 = v39;
    String.append(_:)(*(Swift::String *)&v38);
    swift_bridgeObjectRelease(v39);
    v41 = (uint64_t)v184;
    v42 = v185;
    v44 = v27[2];
    v43 = v27[3];
    if (v44 >= v43 >> 1)
      v27 = sub_100227A68((_QWORD *)(v43 > 1), v44 + 1, 1, v27);
    v27[2] = v44 + 1;
    v45 = &v27[2 * v44];
    v45[4] = v41;
    v45[5] = v42;
  }
  v177 = v11;
  sub_100244384(v36, (uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v46 = sub_1003EBEA8();
  v48 = v47;
  sub_1002443C8((uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v48 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD00000000000001ELL;
    v185 = (const char *)0x8000000100619B70;
    v49 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v50 = swift_allocObject(v49, 72, 7);
    *(_OWORD *)(v50 + 16) = v183;
    *(_QWORD *)(v50 + 56) = &type metadata for Double;
    *(_QWORD *)(v50 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v50 + 32) = v46;
    v51._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v50);
    object = (const char *)v51._object;
    String.append(_:)(v51);
    swift_bridgeObjectRelease(object);
    v53._countAndFlagsBits = 115;
    v53._object = (void *)0xE100000000000000;
    String.append(_:)(v53);
    v54 = (uint64_t)v184;
    v55 = v185;
    v57 = v27[2];
    v56 = v27[3];
    if (v57 >= v56 >> 1)
      v27 = sub_100227A68((_QWORD *)(v56 > 1), v57 + 1, 1, v27);
    v27[2] = v57 + 1;
    v58 = &v27[2 * v57];
    v58[4] = v54;
    v58[5] = v55;
  }
  sub_100244384(v36, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v59 = sub_1003EC090();
  v61 = v60;
  sub_1002443C8((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v61 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000029;
    v185 = (const char *)0x8000000100619B40;
    v62 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v63 = swift_allocObject(v62, 72, 7);
    *(_OWORD *)(v63 + 16) = v183;
    *(_QWORD *)(v63 + 56) = &type metadata for Double;
    *(_QWORD *)(v63 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v63 + 32) = v59;
    v64._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v63);
    v65 = (const char *)v64._object;
    String.append(_:)(v64);
    swift_bridgeObjectRelease(v65);
    v66._countAndFlagsBits = 115;
    v66._object = (void *)0xE100000000000000;
    String.append(_:)(v66);
    v67 = (uint64_t)v184;
    v68 = v185;
    v70 = v27[2];
    v69 = v27[3];
    if (v70 >= v69 >> 1)
      v27 = sub_100227A68((_QWORD *)(v69 > 1), v70 + 1, 1, v27);
    v27[2] = v70 + 1;
    v71 = &v27[2 * v70];
    v71[4] = v67;
    v71[5] = v68;
  }
  sub_100244384(v36, (uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v72 = sub_1003EB4B8();
  v74 = v73;
  sub_1002443C8((uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v74 & 1) != 0)
  {
    v84 = (uint64_t)v177;
  }
  else
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000018;
    v185 = (const char *)0x8000000100619B20;
    v75 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v76 = swift_allocObject(v75, 72, 7);
    *(_OWORD *)(v76 + 16) = v183;
    *(_QWORD *)(v76 + 56) = &type metadata for Double;
    *(_QWORD *)(v76 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v76 + 32) = v72;
    v77._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v76);
    v78 = (const char *)v77._object;
    String.append(_:)(v77);
    swift_bridgeObjectRelease(v78);
    v79._countAndFlagsBits = 115;
    v79._object = (void *)0xE100000000000000;
    String.append(_:)(v79);
    v80 = (uint64_t)v184;
    v81 = v185;
    v83 = v27[2];
    v82 = v27[3];
    v84 = (uint64_t)v177;
    if (v83 >= v82 >> 1)
      v27 = sub_100227A68((_QWORD *)(v82 > 1), v83 + 1, 1, v27);
    v27[2] = v83 + 1;
    v85 = &v27[2 * v83];
    v85[4] = v80;
    v85[5] = v81;
  }
  v86 = v179;
  sub_100244384(v36, v179, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v87 = sub_1003EB6A8();
  v89 = v88;
  sub_1002443C8(v86, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v89 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD00000000000001BLL;
    v185 = (const char *)0x8000000100619B00;
    v90 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v91 = swift_allocObject(v90, 72, 7);
    *(_OWORD *)(v91 + 16) = v183;
    *(_QWORD *)(v91 + 56) = &type metadata for Double;
    *(_QWORD *)(v91 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v91 + 32) = v87;
    v92._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v91);
    v93 = (const char *)v92._object;
    String.append(_:)(v92);
    swift_bridgeObjectRelease(v93);
    v94._countAndFlagsBits = 115;
    v94._object = (void *)0xE100000000000000;
    String.append(_:)(v94);
    v95 = (uint64_t)v184;
    v96 = v185;
    v98 = v27[2];
    v97 = v27[3];
    if (v98 >= v97 >> 1)
      v27 = sub_100227A68((_QWORD *)(v97 > 1), v98 + 1, 1, v27);
    v27[2] = v98 + 1;
    v99 = &v27[2 * v98];
    v99[4] = v95;
    v99[5] = v96;
  }
  v100 = v180;
  sub_100244384(v36, v180, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v101 = sub_1003EB898();
  v103 = v102;
  sub_1002443C8(v100, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v103 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD00000000000001CLL;
    v185 = (const char *)0x8000000100619AE0;
    v104 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v105 = swift_allocObject(v104, 72, 7);
    *(_OWORD *)(v105 + 16) = v183;
    *(_QWORD *)(v105 + 56) = &type metadata for Double;
    *(_QWORD *)(v105 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v105 + 32) = v101;
    v106._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v105);
    v107 = (const char *)v106._object;
    String.append(_:)(v106);
    swift_bridgeObjectRelease(v107);
    v108._countAndFlagsBits = 115;
    v108._object = (void *)0xE100000000000000;
    String.append(_:)(v108);
    v109 = (uint64_t)v184;
    v110 = v185;
    v112 = v27[2];
    v111 = v27[3];
    if (v112 >= v111 >> 1)
      v27 = sub_100227A68((_QWORD *)(v111 > 1), v112 + 1, 1, v27);
    v27[2] = v112 + 1;
    v113 = &v27[2 * v112];
    v113[4] = v109;
    v113[5] = v110;
  }
  sub_100244384(v36, v84, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v114 = sub_1003EBA88();
  v116 = v115;
  sub_1002443C8(v84, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v116 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000019;
    v185 = (const char *)0x8000000100619AC0;
    v117 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v118 = swift_allocObject(v117, 72, 7);
    *(_OWORD *)(v118 + 16) = v183;
    *(_QWORD *)(v118 + 56) = &type metadata for Double;
    *(_QWORD *)(v118 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v118 + 32) = v114;
    v119._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v118);
    v120 = (const char *)v119._object;
    String.append(_:)(v119);
    swift_bridgeObjectRelease(v120);
    v121._countAndFlagsBits = 115;
    v121._object = (void *)0xE100000000000000;
    String.append(_:)(v121);
    v122 = (uint64_t)v184;
    v123 = v185;
    v125 = v27[2];
    v124 = v27[3];
    if (v125 >= v124 >> 1)
      v27 = sub_100227A68((_QWORD *)(v124 > 1), v125 + 1, 1, v27);
    v27[2] = v125 + 1;
    v126 = &v27[2 * v125];
    v126[4] = v122;
    v126[5] = v123;
  }
  v127 = v181;
  sub_100244384(v36, v181, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v128 = sub_1003EBCB8();
  v130 = v129;
  sub_1002443C8(v127, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v130 & 1) == 0)
  {
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000016;
    v185 = (const char *)0x8000000100619AA0;
    v131 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v132 = swift_allocObject(v131, 72, 7);
    *(_OWORD *)(v132 + 16) = v183;
    *(_QWORD *)(v132 + 56) = &type metadata for Double;
    *(_QWORD *)(v132 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v132 + 32) = v128;
    v133._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v132);
    v134 = (const char *)v133._object;
    String.append(_:)(v133);
    swift_bridgeObjectRelease(v134);
    v135._countAndFlagsBits = 115;
    v135._object = (void *)0xE100000000000000;
    String.append(_:)(v135);
    v136 = (uint64_t)v184;
    v137 = v185;
    v139 = v27[2];
    v138 = v27[3];
    if (v139 >= v138 >> 1)
      v27 = sub_100227A68((_QWORD *)(v138 > 1), v139 + 1, 1, v27);
    v27[2] = v139 + 1;
    v140 = &v27[2 * v139];
    v140[4] = v136;
    v140[5] = v137;
  }
  v141 = v182;
  sub_100244384(v36, v182, type metadata accessor for SDAuthenticationLockSession.Metrics);
  v142 = sub_1003EB2D0();
  v144 = v143;
  sub_1002443C8(v141, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v144 & 1) == 0)
  {
    v145 = v176;
    sub_100244384(v36, v176, type metadata accessor for SDAuthenticationLockSession.Metrics);
    sub_1003EB4B8();
    v147 = v146;
    sub_1002443C8(v145, type metadata accessor for SDAuthenticationLockSession.Metrics);
    if ((v147 & 1) != 0)
      v148 = 0;
    else
      v148 = 0xD000000000000013;
    if ((v147 & 1) != 0)
      v149 = (void *)0xE000000000000000;
    else
      v149 = (void *)0x8000000100619A80;
    v184 = 0;
    v185 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(v185);
    v184 = (_QWORD *)0xD000000000000017;
    v185 = (const char *)0x8000000100619A60;
    v150._countAndFlagsBits = v148;
    v150._object = v149;
    String.append(_:)(v150);
    swift_bridgeObjectRelease((const char *)v149);
    v151._countAndFlagsBits = 2112800;
    v151._object = (void *)0xE300000000000000;
    String.append(_:)(v151);
    v152 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v153 = swift_allocObject(v152, 72, 7);
    *(_OWORD *)(v153 + 16) = v183;
    *(_QWORD *)(v153 + 56) = &type metadata for Double;
    *(_QWORD *)(v153 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v153 + 32) = v142;
    v154._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v153);
    v155 = (const char *)v154._object;
    String.append(_:)(v154);
    swift_bridgeObjectRelease(v155);
    v156._countAndFlagsBits = 115;
    v156._object = (void *)0xE100000000000000;
    String.append(_:)(v156);
    v157 = (uint64_t)v184;
    v158 = v185;
    v160 = v27[2];
    v159 = v27[3];
    if (v160 >= v159 >> 1)
      v27 = sub_100227A68((_QWORD *)(v159 > 1), v160 + 1, 1, v27);
    v27[2] = v160 + 1;
    v161 = &v27[2 * v160];
    v161[4] = v157;
    v161[5] = v158;
  }
  v184 = v27;
  v162 = sub_100008384((uint64_t *)&unk_1007BD6A0);
  v163 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
  v164 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v162, v163);
  v166 = v165;
  swift_bridgeObjectRelease((const char *)v27);
  v167 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v168 = String._bridgeToObjectiveC()();
  v169 = String._bridgeToObjectiveC()();
  objc_msgSend(v167, "setObject:forKey:", v168, v169);

  swift_bridgeObjectRetain(v166);
  v171 = Logger.logObject.getter(v170);
  v172 = static os_log_type_t.default.getter(v171);
  if (os_log_type_enabled(v171, v172))
  {
    v173 = (uint8_t *)swift_slowAlloc(12, -1);
    v174 = swift_slowAlloc(32, -1);
    v184 = (_QWORD *)v174;
    *(_DWORD *)v173 = 136315138;
    swift_bridgeObjectRetain(v166);
    v186 = sub_100228BD8(v164, (unint64_t)v166, (uint64_t *)&v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, v187, v173 + 4);
    swift_bridgeObjectRelease_n(v166, 3);
    _os_log_impl((void *)&_mh_execute_header, v171, v172, "%s", v173, 0xCu);
    swift_arrayDestroy(v174, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v174, -1, -1);
    swift_slowDealloc(v173, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v166, 2);
  }
}

void sub_1003E7CBC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD v10[5];
  char v11[24];
  _BYTE v12[24];
  uint64_t v13;

  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BED50);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Sending confirmation", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v11, 0, 0);
  sub_100221F28(v7, (uint64_t)v12, &qword_1007BFF70);
  if (v13)
  {
    sub_100244418((uint64_t)v12, (uint64_t)v10);
    sub_10000D0F0((uint64_t)v12, &qword_1007BFF70);
    v8 = (char *)*sub_10023A834(v10, v10[3]);
    v9 = a1;
    sub_1003EC2C0(v9, v8, type metadata accessor for SDAuthenticationLockSession, (uint64_t (*)(uint64_t))sub_1003EE658, (uint64_t (*)(uint64_t))sub_1003EE658, (uint64_t (*)(uint64_t))sub_1003EE658);

    sub_10022E75C(v10);
  }
  else
  {
    sub_10000D0F0((uint64_t)v12, &qword_1007BFF70);
  }
  v12[0] = 1;
  sub_1003E3E80(0x100000000uLL);
}

void sub_1003E7E68(uint64_t a1, uint64_t a2, char *a3)
{
  char *v3;
  char *v4;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  const char *v12;
  NSString v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject **v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD v57[5];
  char v58[24];
  char v59[24];
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[16];
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  v8 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationResponse), "init");
  v9 = v8;
  v56 = a2;
  if (v8)
  {
    -[NSObject setVersion:](v8, "setVersion:", 1);
    v10 = v9;
    UUID.uuidString.getter(v10);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    -[NSObject setSessionID:](v10, "setSessionID:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    -[NSObject setErrorCode:](v10, "setErrorCode:", a1);
    v14 = -[NSObject data](v10, "data");
    if (v14)
    {
      v15 = v14;
      v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      v19 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v59, 0, 0);
      sub_100221F28(v19, (uint64_t)&v60, &qword_1007B9E38);
      if (v61)
      {
        sub_10026EE60(&v60, (uint64_t)&v62);
        v20 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v58, 0, 0);
        sub_100221F28(v20, (uint64_t)&v60, &qword_1007BFF70);
        if (v61)
        {
          sub_100244418((uint64_t)&v60, (uint64_t)v57);
          sub_10000D0F0((uint64_t)&v60, &qword_1007BFF70);
          v21 = sub_10023A834(v57, v57[3]);
          v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
          v23 = *v21;
          v24 = a1;
          v54 = a3;
          v25 = v64;
          v26 = v65;
          v27 = sub_10023A834(&v62, v64);
          v28 = v25;
          a1 = v24;
          v29 = v26;
          a3 = v54;
          sub_10056A0EC(v16, v18, (uint64_t)v27, 1, v22, v23, v28, v29);
          sub_100225AB4(v16, v18);
          sub_10022E75C(&v62);
          sub_10022E75C(v57);
        }
        else
        {
          sub_10022E75C(&v62);
          sub_100225AB4(v16, v18);
          sub_10000D0F0((uint64_t)&v60, &qword_1007BFF70);
        }
        v30 = v56;
        goto LABEL_16;
      }
      sub_100225AB4(v16, v18);
      sub_10000D0F0((uint64_t)&v60, &qword_1007B9E38);
    }
  }
  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v31 = type metadata accessor for Logger(0);
  sub_100221DF8(v31, (uint64_t)qword_1007BED50);
  v32 = v9;
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.error.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v55 = a3;
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v35 = 138412290;
    if (v9)
    {
      v62 = (uint64_t)v32;
      v37 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v35 + 4);
      v38 = v9;
    }
    else
    {
      v62 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v35 + 4);
      v38 = 0;
    }
    *v36 = v38;

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Could not convert response to data: %@", v35, 0xCu);
    v39 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v36, 1, v39);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v35, -1, -1);

    a3 = v55;
    v30 = v56;
    a1 = a1;
  }
  else
  {

    v30 = v56;
  }
LABEL_16:
  v40 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v57, 0, 0);
  sub_100221F28(v40, (uint64_t)&v62, &qword_1007BFF70);
  if (v64)
  {
    sub_100244418((uint64_t)&v62, (uint64_t)&v60);
    sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
    v41 = (char *)*sub_10023A834(&v60, v61);
    v42 = v4;
    sub_1003886B8(v42, a1, v30, a3, v41);

    sub_10022E75C(&v60);
  }
  else
  {
    sub_10000D0F0((uint64_t)&v62, &qword_1007BFF70);
  }
  if (qword_1007B4048 != -1)
    swift_once(&qword_1007B4048, sub_1003DFE80);
  v43 = type metadata accessor for Logger(0);
  sub_100221DF8(v43, (uint64_t)qword_1007BED50);
  v44 = swift_bridgeObjectRetain_n(a3, 2);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter(v45);
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(12, -1);
    v48 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v47 = 138412290;
    v49 = sub_100244304();
    v50 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v49, 0, 0);
    *(_DWORD *)v51 = a1;
    *(_QWORD *)(v51 + 8) = v30;
    *(_QWORD *)(v51 + 16) = a3;
    swift_bridgeObjectRetain(a3);
    v52 = _swift_stdlib_bridgeErrorToNSError(v50);
    v62 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v47 + 4);
    *v48 = v52;
    swift_bridgeObjectRelease_n(a3, 2);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Session failed with error: %@", v47, 0xCu);
    v53 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v48, 1, v53);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v47, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    v45 = v9;
  }

}

uint64_t sub_1003E84F0()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate, &qword_1007C4330);
  sub_100225AA0(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken), *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession));
  sub_100225AA0(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken), *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8));
  return sub_1002443C8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, type metadata accessor for SDAuthenticationLockSession.Metrics);
}

uint64_t sub_1003E85EC()
{
  return type metadata accessor for SDAuthenticationLockSession(0);
}

uint64_t type metadata accessor for SDAuthenticationLockSession(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007BEDC0, (uint64_t)&nominal type descriptor for SDAuthenticationLockSession);
}

void sub_1003E8608(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1005D6D60;
    v6[2] = &unk_1005D6D78;
    v6[3] = &unk_1005D6D60;
    v6[4] = &unk_1005D6D90;
    v4 = type metadata accessor for SDAuthenticationLockSession.Metrics(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_1005D6D90;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 344);
    }
  }
}

uint64_t type metadata accessor for SDAuthenticationLockSession.Metrics(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BEE28, (uint64_t)&nominal type descriptor for SDAuthenticationLockSession.Metrics);
}

uint64_t *sub_1003E86C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  const char *v68;
  _QWORD *v69;
  _QWORD *v70;
  const char *v71;
  double v72;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = sub_100008384(&qword_1007C4330);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = sub_100008384(&qword_1007C4330);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = sub_100008384(&qword_1007C4330);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      v23 = sub_100008384(&qword_1007C4330);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v9((uint64_t *)((char *)a2 + v24), 1, v7))
    {
      v27 = sub_100008384(&qword_1007C4330);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
    v28 = a3[9];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    if (v9((uint64_t *)((char *)a2 + v28), 1, v7))
    {
      v31 = sub_100008384(&qword_1007C4330);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
    }
    v32 = a3[10];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    if (v9((uint64_t *)((char *)a2 + v32), 1, v7))
    {
      v35 = sub_100008384(&qword_1007C4330);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
    }
    v36 = a3[11];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    if (v9((uint64_t *)((char *)a2 + v36), 1, v7))
    {
      v39 = sub_100008384(&qword_1007C4330);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
    }
    v40 = a3[12];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    if (v9((uint64_t *)((char *)a2 + v40), 1, v7))
    {
      v43 = sub_100008384(&qword_1007C4330);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
    }
    v44 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v9((uint64_t *)((char *)a2 + v44), 1, v7))
    {
      v47 = sub_100008384(&qword_1007C4330);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
    }
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    if (v9((uint64_t *)((char *)a2 + v48), 1, v7))
    {
      v51 = sub_100008384(&qword_1007C4330);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
    }
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    if (v9((uint64_t *)((char *)a2 + v52), 1, v7))
    {
      v55 = sub_100008384(&qword_1007C4330);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
    }
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    if (v9((uint64_t *)((char *)a2 + v56), 1, v7))
    {
      v59 = sub_100008384(&qword_1007C4330);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
    }
    v60 = a3[18];
    v61 = a3[19];
    v62 = (char *)a1 + v60;
    v63 = (char *)a2 + v60;
    *(_DWORD *)v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    *((_BYTE *)a1 + v61) = *((_BYTE *)a2 + v61);
    v64 = a3[20];
    v65 = a3[21];
    v66 = (uint64_t *)((char *)a1 + v64);
    v67 = (uint64_t *)((char *)a2 + v64);
    v68 = (const char *)v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = (uint64_t *)((char *)a1 + v65);
    v70 = (uint64_t *)((char *)a2 + v65);
    v71 = (const char *)v70[1];
    *v69 = *v70;
    v69[1] = v71;
    *(_QWORD *)&v72 = swift_bridgeObjectRetain(v68).n128_u64[0];
    swift_bridgeObjectRetain(v71, v72);
  }
  return a1;
}

uint64_t sub_1003E8D44(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + a2[6];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v9 = a1 + a2[7];
  if (!v6(v9, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  v10 = a1 + a2[8];
  if (!v6(v10, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  v11 = a1 + a2[9];
  if (!v6(v11, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  v12 = a1 + a2[10];
  if (!v6(v12, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  v13 = a1 + a2[11];
  if (!v6(v13, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
  v14 = a1 + a2[12];
  if (!v6(v14, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  v15 = a1 + a2[14];
  if (!v6(v15, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  v16 = a1 + a2[15];
  if (!v6(v16, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
  v17 = a1 + a2[16];
  if (!v6(v17, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
  v18 = a1 + a2[17];
  if (!v6(v18, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[20] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[21] + 8));
}

char *sub_1003E8FD8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  const char *v66;
  char *v67;
  char *v68;
  const char *v69;
  double v70;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v8(&a2[v26], 1, v6))
  {
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  v30 = a3[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v8(&a2[v30], 1, v6))
  {
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  if (v8(&a2[v34], 1, v6))
  {
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  v38 = a3[12];
  v39 = &a1[v38];
  v40 = &a2[v38];
  if (v8(&a2[v38], 1, v6))
  {
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v39, v40, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
  }
  v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  if (v8(&a2[v42], 1, v6))
  {
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
  }
  v46 = a3[15];
  v47 = &a1[v46];
  v48 = &a2[v46];
  if (v8(&a2[v46], 1, v6))
  {
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v47, v48, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v47, 0, 1, v6);
  }
  v50 = a3[16];
  v51 = &a1[v50];
  v52 = &a2[v50];
  if (v8(&a2[v50], 1, v6))
  {
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v52, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v51, 0, 1, v6);
  }
  v54 = a3[17];
  v55 = &a1[v54];
  v56 = &a2[v54];
  if (v8(&a2[v54], 1, v6))
  {
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
  }
  v58 = a3[18];
  v59 = a3[19];
  v60 = &a1[v58];
  v61 = &a2[v58];
  *(_DWORD *)v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  v62 = a3[20];
  v63 = a3[21];
  v64 = &a1[v62];
  v65 = &a2[v62];
  v66 = (const char *)*((_QWORD *)v65 + 1);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  *((_QWORD *)v64 + 1) = v66;
  v67 = &a1[v63];
  v68 = &a2[v63];
  v69 = (const char *)*((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *((_QWORD *)v67 + 1) = v69;
  *(_QWORD *)&v70 = swift_bridgeObjectRetain(v66).n128_u64[0];
  swift_bridgeObjectRetain(v69, v70);
  return a1;
}

char *sub_1003E962C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  uint64_t v88;
  char *v89;
  char *v90;
  const char *v91;
  const char *v92;
  double v93;
  double v94;
  uint64_t v95;
  char *v96;
  char *v97;
  const char *v98;
  const char *v99;
  double v100;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  v30 = a3[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
LABEL_31:
  v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = v8(&a1[v36], 1, v6);
  v40 = v8(v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v38, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v37, v38, v6);
LABEL_37:
  v42 = a3[10];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = v8(&a1[v42], 1, v6);
  v46 = v8(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    v47 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v43, v44, v6);
LABEL_43:
  v48 = a3[11];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = v8(&a1[v48], 1, v6);
  v52 = v8(v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v50, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v49, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v49, v50, v6);
LABEL_49:
  v54 = a3[12];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = v8(&a1[v54], 1, v6);
  v58 = v8(v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    v59 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v55, v56, v6);
LABEL_55:
  a1[a3[13]] = a2[a3[13]];
  v60 = a3[14];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = v8(&a1[v60], 1, v6);
  v64 = v8(v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v61, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    v65 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v61, v62, v6);
LABEL_61:
  v66 = a3[15];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = v8(&a1[v66], 1, v6);
  v70 = v8(v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v67, v68, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v67, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    v71 = sub_100008384(&qword_1007C4330);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v67, v68, v6);
LABEL_67:
  v72 = a3[16];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = v8(&a1[v72], 1, v6);
  v76 = v8(v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v73, v74, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v73, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    v77 = sub_100008384(&qword_1007C4330);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v73, v74, v6);
LABEL_73:
  v78 = a3[17];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = v8(&a1[v78], 1, v6);
  v82 = v8(v80, 1, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v79, v80, v6);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }
  if (v82)
  {
LABEL_78:
    v83 = sub_100008384(&qword_1007C4330);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v79, v80, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v79, 0, 1, v6);
LABEL_79:
  v84 = a3[18];
  v85 = &a1[v84];
  v86 = &a2[v84];
  v87 = *(_DWORD *)v86;
  v85[4] = v86[4];
  *(_DWORD *)v85 = v87;
  a1[a3[19]] = a2[a3[19]];
  v88 = a3[20];
  v89 = &a1[v88];
  v90 = &a2[v88];
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v91 = (const char *)*((_QWORD *)v90 + 1);
  v92 = (const char *)*((_QWORD *)v89 + 1);
  *((_QWORD *)v89 + 1) = v91;
  *(_QWORD *)&v93 = swift_bridgeObjectRetain(v91).n128_u64[0];
  *(_QWORD *)&v94 = swift_bridgeObjectRelease(v92, v93).n128_u64[0];
  v95 = a3[21];
  v96 = &a1[v95];
  v97 = &a2[v95];
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = (const char *)*((_QWORD *)v97 + 1);
  v99 = (const char *)*((_QWORD *)v96 + 1);
  *((_QWORD *)v96 + 1) = v98;
  *(_QWORD *)&v100 = swift_bridgeObjectRetain(v98, v94).n128_u64[0];
  swift_bridgeObjectRelease(v99, v100);
  return a1;
}

char *sub_1003EA02C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_100008384(&qword_1007C4330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    v25 = sub_100008384(&qword_1007C4330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v8(&a2[v26], 1, v6))
  {
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  v30 = a3[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v8(&a2[v30], 1, v6))
  {
    v33 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  if (v8(&a2[v34], 1, v6))
  {
    v37 = sub_100008384(&qword_1007C4330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v36, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  v38 = a3[12];
  v39 = &a1[v38];
  v40 = &a2[v38];
  if (v8(&a2[v38], 1, v6))
  {
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v40, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
  }
  v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  if (v8(&a2[v42], 1, v6))
  {
    v45 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
  }
  v46 = a3[15];
  v47 = &a1[v46];
  v48 = &a2[v46];
  if (v8(&a2[v46], 1, v6))
  {
    v49 = sub_100008384(&qword_1007C4330);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v47, v48, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v47, 0, 1, v6);
  }
  v50 = a3[16];
  v51 = &a1[v50];
  v52 = &a2[v50];
  if (v8(&a2[v50], 1, v6))
  {
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v52, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v51, 0, 1, v6);
  }
  v54 = a3[17];
  v55 = &a1[v54];
  v56 = &a2[v54];
  if (v8(&a2[v54], 1, v6))
  {
    v57 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
  }
  v58 = a3[18];
  v59 = a3[19];
  v60 = &a1[v58];
  v61 = &a2[v58];
  *(_DWORD *)v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  v62 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
  return a1;
}

char *sub_1003EA664(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  double v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100008384(&qword_1007C4330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = sub_100008384(&qword_1007C4330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = sub_100008384(&qword_1007C4330);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = sub_100008384(&qword_1007C4330);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  v30 = a3[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    v35 = sub_100008384(&qword_1007C4330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
LABEL_31:
  v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = v8(&a1[v36], 1, v6);
  v40 = v8(v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    v41 = sub_100008384(&qword_1007C4330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v37, v38, v6);
LABEL_37:
  v42 = a3[10];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = v8(&a1[v42], 1, v6);
  v46 = v8(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    v47 = sub_100008384(&qword_1007C4330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v43, v44, v6);
LABEL_43:
  v48 = a3[11];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = v8(&a1[v48], 1, v6);
  v52 = v8(v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v49, v50, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v49, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    v53 = sub_100008384(&qword_1007C4330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v49, v50, v6);
LABEL_49:
  v54 = a3[12];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = v8(&a1[v54], 1, v6);
  v58 = v8(v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    v59 = sub_100008384(&qword_1007C4330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v55, v56, v6);
LABEL_55:
  v60 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = v8(&a1[v60], 1, v6);
  v64 = v8(v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v61, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    v65 = sub_100008384(&qword_1007C4330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v61, v62, v6);
LABEL_61:
  v66 = a3[15];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = v8(&a1[v66], 1, v6);
  v70 = v8(v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v67, v68, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v67, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    v71 = sub_100008384(&qword_1007C4330);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v67, v68, v6);
LABEL_67:
  v72 = a3[16];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = v8(&a1[v72], 1, v6);
  v76 = v8(v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v73, v74, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v73, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    v77 = sub_100008384(&qword_1007C4330);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v73, v74, v6);
LABEL_73:
  v78 = a3[17];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = v8(&a1[v78], 1, v6);
  v82 = v8(v80, 1, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v79, v80, v6);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }
  if (v82)
  {
LABEL_78:
    v83 = sub_100008384(&qword_1007C4330);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v79, v80, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v79, 0, 1, v6);
LABEL_79:
  v84 = a3[18];
  v85 = a3[19];
  v86 = &a1[v84];
  v87 = &a2[v84];
  *(_DWORD *)v86 = *(_DWORD *)v87;
  v86[4] = v87[4];
  a1[v85] = a2[v85];
  v88 = a3[20];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v92 = *(_QWORD *)v90;
  v91 = *((_QWORD *)v90 + 1);
  v93 = (const char *)*((_QWORD *)v89 + 1);
  *(_QWORD *)v89 = v92;
  *((_QWORD *)v89 + 1) = v91;
  *(_QWORD *)&v94 = swift_bridgeObjectRelease(v93).n128_u64[0];
  v95 = a3[21];
  v96 = &a1[v95];
  v97 = &a2[v95];
  v99 = *(_QWORD *)v97;
  v98 = *((_QWORD *)v97 + 1);
  v100 = (const char *)*((_QWORD *)v96 + 1);
  *(_QWORD *)v96 = v99;
  *((_QWORD *)v96 + 1) = v98;
  swift_bridgeObjectRelease(v100, v94);
  return a1;
}

uint64_t sub_1003EB03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003EB048);
}

uint64_t sub_1003EB048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100008384(&qword_1007C4330);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 80) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003EB0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003EB0E4);
}

uint64_t sub_1003EB0E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100008384(&qword_1007C4330);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  return result;
}

void sub_1003EB164(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[18];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = v4[0];
    v4[5] = v4[0];
    v4[6] = v4[0];
    v4[7] = v4[0];
    v4[8] = v4[0];
    v4[9] = &unk_1005D6D90;
    v4[10] = v4[0];
    v4[11] = v4[0];
    v4[12] = v4[0];
    v4[13] = v4[0];
    v4[14] = &unk_1005D6DB0;
    v4[15] = &unk_1005D6DC8;
    v4[16] = &unk_1005D6DE0;
    v4[17] = &unk_1005D6DE0;
    swift_initStructMetadata(a1, 256, 18, v4, a1 + 16);
  }
}

uint64_t sub_1003EB20C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10023A084(a1, v3, &qword_1007C4330);
  return swift_endAccess(v5);
}

void sub_1003EB270()
{
  sub_1003E00D0();
}

void sub_1003EB290(void *a1)
{
  sub_1003E1A8C(a1);
}

void sub_1003EB2B0(void *a1)
{
  sub_1003E4888(a1);
}

uint64_t sub_1003EB2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  sub_100221F28(v0, (uint64_t)v6, &qword_1007C4330);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    v15 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v15, &qword_1007C4330);
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  v17 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v17 + 20), (uint64_t)v4, &qword_1007C4330);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v16(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EB4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v14 + 24), (uint64_t)v6, &qword_1007C4330);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v16, &qword_1007C4330);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_100221F28(v0 + *(int *)(v14 + 28), (uint64_t)v4, &qword_1007C4330);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EB6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v14 + 32), (uint64_t)v6, &qword_1007C4330);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v16, &qword_1007C4330);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_100221F28(v0 + *(int *)(v14 + 36), (uint64_t)v4, &qword_1007C4330);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EB898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v14 + 40), (uint64_t)v6, &qword_1007C4330);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v16, &qword_1007C4330);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_100221F28(v0 + *(int *)(v14 + 44), (uint64_t)v4, &qword_1007C4330);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EBA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  double v21;
  uint64_t v22;
  char v23;
  char v24;
  void (*v25)(char *, uint64_t);
  double v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_100008384(&qword_1007C4330);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v27 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - v13;
  v15 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  if ((*(_BYTE *)(v1 + *(int *)(v15 + 52)) & 1) != 0)
  {
    *(double *)&result = 0.0;
    return result;
  }
  v17 = v15;
  sub_100221F28(v1 + *(int *)(v15 + 48), (uint64_t)v7, &qword_1007C4330);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v18(v7, 1, v8) == 1)
  {
    v19 = (uint64_t)v7;
LABEL_7:
    sub_10000D0F0(v19, &qword_1007C4330);
    *(double *)&result = 0.0;
    return result;
  }
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v14, v7, v8);
  sub_100221F28(v1 + *(int *)(v17 + 40), (uint64_t)v5, &qword_1007C4330);
  if (v18(v5, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v19 = (uint64_t)v5;
    goto LABEL_7;
  }
  v20(v12, v5, v8);
  v21 = Date.timeIntervalSince(_:)(v12);
  v22 = sub_1003EB898();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v12, v8);
  v25(v14, v8);
  v26 = *(double *)&v22;
  if ((v24 & 1) != 0)
    v26 = 0.0;
  *(double *)&result = v21 - v26;
  return result;
}

uint64_t sub_1003EBCB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v14 + 56), (uint64_t)v6, &qword_1007C4330);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v16, &qword_1007C4330);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_100221F28(v0 + *(int *)(v14 + 60), (uint64_t)v4, &qword_1007C4330);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EBEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v14 + 64), (uint64_t)v6, &qword_1007C4330);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v16, &qword_1007C4330);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_100221F28(v0, (uint64_t)v4, &qword_1007C4330);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EC090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  sub_100221F28(v0, (uint64_t)v6, &qword_1007C4330);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    v15 = (uint64_t)v6;
LABEL_5:
    sub_10000D0F0(v15, &qword_1007C4330);
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  v17 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_100221F28(v0 + *(int *)(v17 + 68), (uint64_t)v4, &qword_1007C4330);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v16(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v11);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_1003EC278(void *a1, char *a2)
{
  return sub_1003EC2C0(a1, a2, type metadata accessor for SDAuthenticationPairingLockSession, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988);
}

uint64_t sub_1003EC29C(void *a1, char *a2)
{
  return sub_1003EC2C0(a1, a2, type metadata accessor for SDAuthenticationKeySession, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988);
}

uint64_t sub_1003EC2C0(void *a1, char *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t Strong;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  Class isa;
  unint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  const char *v133;
  NSString v134;
  NSString v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  const char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  const char *v160;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  const char *v165;
  uint64_t v166;
  const char *v167;
  void (*v168)(_QWORD *);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  __n128 v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  const char *v182;
  uint64_t v183;
  uint64_t v184;
  __n128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  const char *v190;
  uint64_t v191;
  uint64_t v192;
  NSObject *v193;
  os_log_type_t v194;
  uint8_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  const char *v200;
  uint64_t v201;
  uint64_t v202;
  const char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  const char *v207;
  char *v208;
  uint64_t v209;
  const char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  NSObject *v223;
  os_log_type_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  __n128 v229;
  unsigned int (*v230)(char *, uint64_t, uint64_t, __n128);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  const char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  NSObject *v238;
  os_log_type_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  const char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  char *v261;
  NSObject *v262;
  os_log_type_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  __n128 v268;
  unsigned int (*v269)(char *, uint64_t, uint64_t, __n128);
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  const char *v273;
  char *v274;
  uint64_t v275;
  Class v276;
  id v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  const char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  Class v291;
  unint64_t v292;
  char v293;
  uint64_t result;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t ObjectType;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t (*v305)(uint64_t);
  uint64_t (*v306)(uint64_t);
  char *v307;
  uint64_t (*v308)(uint64_t);
  char *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  _BYTE v318[16];
  uint64_t v319;
  uint64_t v320;
  __int128 v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  const char *v325[2];
  uint64_t v326;
  uint64_t v327[2];
  __int128 v328;
  __int128 v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char v335[24];
  _QWORD v336[3];
  uint64_t v337;
  uint64_t v338;
  _QWORD v339[6];

  v305 = a6;
  v306 = a5;
  v308 = a4;
  ObjectType = swift_getObjectType(a2);
  v9 = sub_100008384(&qword_1007B7280);
  v10 = __chkstk_darwin(v9);
  v301 = (char *)&v295 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (uint64_t)&v295 - v13;
  v15 = __chkstk_darwin(v12);
  v297 = (uint64_t)&v295 - v16;
  __chkstk_darwin(v15);
  v298 = (uint64_t)&v295 - v17;
  v18 = sub_100008384(&qword_1007C4330);
  v19 = __chkstk_darwin(v18);
  v303 = (char *)&v295 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v300 = (uint64_t)&v295 - v21;
  v312 = (char *)type metadata accessor for Logger(0);
  v304 = *((_QWORD *)v312 - 1);
  __chkstk_darwin(v312);
  v307 = (char *)&v295 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Date(0);
  v310 = *(_QWORD *)(v23 - 8);
  v311 = v23;
  __chkstk_darwin(v23);
  v309 = (char *)&v295 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for UUID(0);
  v26 = *(_QWORD *)(v25 - 8);
  v315 = v25;
  v316 = v26;
  v27 = __chkstk_darwin(v25);
  v296 = (char *)&v295 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v295 - v30;
  __chkstk_darwin(v29);
  v314 = (char *)&v295 - v32;
  v33 = type metadata accessor for DispatchPredicate(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (uint64_t *)((char *)&v295 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = a3(0);
  v339[4] = &off_100727F40;
  v313 = a2;
  v38 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v339[3] = v37;
  v339[0] = a1;
  *v36 = v38;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v34 + 104))(v36, enum case for DispatchPredicate.onQueue(_:), v33);
  v39 = a1;
  v40 = v38;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v36);
  (*(void (**)(_QWORD *, uint64_t))(v34 + 8))(v36, v33);
  if ((a1 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v41 = (uint64_t (*)(uint64_t))sub_100221DF8((uint64_t)v312, (uint64_t)qword_1007C5FF8);
  v42 = sub_100244418((uint64_t)v339, (uint64_t)v336);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter(v43);
  v45 = os_log_type_enabled(v43, v44);
  v302 = v14;
  if (v45)
  {
    v14 = swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v328 = v46;
    *(_DWORD *)v14 = 136315138;
    sub_100244418((uint64_t)v336, (uint64_t)&v331);
    v47 = sub_100008384(&qword_1007B53E8);
    v48 = String.init<A>(describing:)(&v331, v47);
    v50 = (const char *)v49;
    v331 = sub_100228BD8(v48, v49, (uint64_t *)&v328);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v331, &v332, v14 + 4);
    swift_bridgeObjectRelease(v50);
    sub_10022E75C(v336);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Session did complete: %s", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_10022E75C(v336);
  }

  v51 = v339[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v339[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v335, 0, 0);
  sub_100221F28(v51, (uint64_t)v336, &qword_1007B9E38);
  v52 = v337;
  if (v337)
  {
    v53 = v338;
    sub_10023A834(v336, v337);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
    v56 = v55;
    sub_10022E75C(v336);
    if (v56)
    {
      v57 = *(_QWORD *)&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
      if (v57)
      {
        swift_retain(*(_QWORD *)&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager]);
        sub_1002C9F2C(v54, v56);
        swift_release(v57);
      }
      swift_bridgeObjectRelease(v56);
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)v336, &qword_1007B9E38);
  }
  sub_100244418((uint64_t)v339, (uint64_t)&v331);
  v58 = sub_100008384(&qword_1007B53E8);
  v59 = sub_100008384((uint64_t *)&unk_1007BB690);
  if (swift_dynamicCast(&v328, &v331, v58, v59, 6))
  {
    v60 = sub_10026EE60(&v328, (uint64_t)v336);
    __chkstk_darwin(v60);
    *(&v295 - 2) = (uint64_t)v336;
    v61 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions], &v331, 33, 0);
    sub_100388524(v308, (uint64_t)(&v295 - 4));
    v63 = *(_QWORD *)(*(_QWORD *)v61 + 16);
    if (v63 >= v62)
    {
      sub_100475304(v62, v63);
      swift_endAccess(&v331);
      v64 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      *(_QWORD *)&v66 = swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions], &v321, 0, 0).n128_u64[0];
      v312 = v64;
      v14 = *(_QWORD *)v64;
      v67 = *(_QWORD *)(*(_QWORD *)v64 + 16);
      if (!v67)
      {
LABEL_19:
        v77 = 1;
        v78 = v310;
        goto LABEL_35;
      }
      v308 = v41;
      swift_bridgeObjectRetain((const char *)v14, v66);
      v68 = 0;
      v69 = 0;
      v70 = v314;
      v71 = v315;
      while (1)
      {
        v73 = *(_QWORD *)(v14 + v68 + 56);
        v72 = *(_QWORD *)(v14 + v68 + 64);
        sub_10023A834((_QWORD *)(v14 + v68 + 32), v73);
        (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v72 + 8) + 8) + 32))(v73);
        v75 = v337;
        v74 = v338;
        sub_10023A834(v336, v337);
        (*(void (**)(uint64_t))(*(_QWORD *)(v74 + 8) + 32))(v75);
        LOBYTE(v74) = static UUID.== infix(_:_:)(v70, v31);
        v76 = *(void (**)(char *, uint64_t))(v316 + 8);
        v76(v31, v71);
        v76(v70, v71);
        if ((v74 & 1) != 0)
          break;
        ++v69;
        v68 += 40;
        if (v67 == v69)
        {
          swift_bridgeObjectRelease((const char *)v14);
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease((const char *)v14);
      v99 = (uint64_t)v312;
      if (v69 < *(_QWORD *)(*(_QWORD *)v312 + 16))
      {
        sub_100244418(*(_QWORD *)v312 + v68 + 32, (uint64_t)&v331);
        v101 = v333;
        v100 = v334;
        sub_10023A834(&v331, v333);
        v102 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v100 + 8) + 8) + 40))(v101);
        v78 = v310;
        if (v102 == 1)
        {
          v103 = Logger.logObject.getter(1);
          v104 = static os_log_type_t.default.getter(v103);
          if (os_log_type_enabled(v103, v104))
          {
            v105 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v105 = 0;
            _os_log_impl((void *)&_mh_execute_header, v103, v104, "Posting authenticated notification", v105, 2u);
            swift_slowDealloc(v105, -1, -1);
          }

          sub_10055ED84();
        }
        swift_beginAccess(v99, &v317, 33, 0);
        sub_100268B98(v69, (uint64_t)&v328);
        swift_endAccess(&v317);
        sub_10022E75C(&v328);
        v65 = sub_10022E75C(&v331);
        v77 = 0;
LABEL_35:
        v106 = (uint64_t)v309;
        Date.init()(v65);
        v107 = v313;
        sub_10054B8BC(v106);
        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v106, v311);
        v108 = *(_QWORD *)&v107[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser];
        if (v108)
        {
          swift_retain(v108);
          sub_1002C1910();
          swift_release(v108);
        }
        v109 = v313;
        sub_10054C088(0);
        v111 = v337;
        v110 = v338;
        sub_10023A834(v336, v337);
        (*(void (**)(uint64_t))(*(_QWORD *)(v110 + 8) + 88))(v111);
        Strong = swift_unknownObjectWeakLoadStrong(&v109[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v112);
        if (Strong)
        {
          v114 = (void *)Strong;
          v116 = v337;
          v115 = v338;
          sub_10023A834(v336, v337);
          v117 = v314;
          (*(void (**)(uint64_t))(*(_QWORD *)(v115 + 8) + 32))(v116);
          isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v316 + 8))(v117, v315);
          objc_msgSend(v114, "manager:didCompleteAuthenticationFor:", v313, isa);

          swift_unknownObjectRelease(v114);
        }
        sub_10022E75C(v336);
        sub_100244418((uint64_t)v339, (uint64_t)v336);
        if (v77)
        {
LABEL_40:
          v119 = *(_QWORD *)(*sub_10023A834(v336, v337)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
          if (v119 <= 8 && ((1 << v119) & 0x18E) != 0)
          {
            v120 = v336;
LABEL_116:
            sub_10022E75C(v120);
            v293 = sub_1003FD808(*(_QWORD *)(v339[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
            sub_1004A9FB8(v293);
            return sub_10022E75C(v339);
          }
          sub_10022E75C(v336);
          sub_100244418((uint64_t)v339, (uint64_t)&v331);
          goto LABEL_114;
        }
LABEL_112:
        sub_10022E75C(v336);
        sub_100244418((uint64_t)v339, (uint64_t)&v331);
        v292 = *(_QWORD *)(*sub_10023A834(&v331, v333) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
        if (v292 > 8 || ((1 << v292) & 0x18E) == 0)
        {
          v120 = &v331;
          goto LABEL_116;
        }
LABEL_114:
        sub_10022E75C(&v331);
        return sub_10022E75C(v339);
      }
      goto LABEL_123;
    }
    __break(1u);
    goto LABEL_121;
  }
  v330 = 0;
  v328 = 0u;
  v329 = 0u;
  sub_10000D0F0((uint64_t)&v328, &qword_1007BEEB0);
  sub_100244418((uint64_t)v339, (uint64_t)&v331);
  v79 = sub_100008384((uint64_t *)&unk_1007BB680);
  if ((swift_dynamicCast(&v328, &v331, v58, v79, 6) & 1) == 0)
  {
    v330 = 0;
    v328 = 0u;
    v329 = 0u;
    sub_10000D0F0((uint64_t)&v328, &qword_1007BEEB8);
    sub_100244418((uint64_t)v339, (uint64_t)v336);
    goto LABEL_112;
  }
  v80 = sub_10026EE60(&v328, (uint64_t)v336);
  __chkstk_darwin(v80);
  *(&v295 - 2) = (uint64_t)v336;
  v81 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions], &v331, 33, 0);
  sub_100388268(v306, (uint64_t)(&v295 - 4));
  v83 = *(_QWORD *)(*(_QWORD *)v81 + 16);
  if (v83 < v82)
  {
LABEL_121:
    __break(1u);
    goto LABEL_122;
  }
  sub_100475340(v82, v83);
  v84 = swift_endAccess(&v331);
  __chkstk_darwin(v84);
  *(&v295 - 2) = (uint64_t)v336;
  v85 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions], &v331, 33, 0);
  sub_10038828C(v305, (uint64_t)(&v295 - 4));
  v87 = *(_QWORD *)(*(_QWORD *)v85 + 16);
  if (v87 < v86)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  sub_10047532C(v86, v87);
  swift_endAccess(&v331);
  v88 = *(uint64_t (**)(uint64_t))v85;
  v89 = *(_QWORD *)(*(_QWORD *)v85 + 16);
  if (v89)
  {
    v308 = v41;
    v90 = (_QWORD *)((char *)v88 + 32);
    v306 = v88;
    swift_bridgeObjectRetain((const char *)v88);
    v91 = 0;
    v92 = v314;
    v93 = v315;
    while (1)
    {
      v95 = v90[3];
      v94 = v90[4];
      sub_10023A834(v90, v95);
      (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v94 + 8) + 8) + 32))(v95);
      v97 = v337;
      v96 = v338;
      sub_10023A834(v336, v337);
      (*(void (**)(uint64_t))(*(_QWORD *)(v96 + 8) + 32))(v97);
      LOBYTE(v96) = static UUID.== infix(_:_:)(v92, v31);
      v98 = *(void (**)(char *, uint64_t))(v316 + 8);
      v98(v31, v93);
      v98(v92, v93);
      if ((v96 & 1) != 0)
        break;
      ++v91;
      v90 += 5;
      if (v89 == v91)
      {
        swift_bridgeObjectRelease((const char *)v306);
        v14 = 1;
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease((const char *)v306);
    swift_beginAccess(v85, &v328, 33, 0);
    sub_100268BAC(v91, (uint64_t)&v331);
    swift_endAccess(&v328);
    sub_10022E75C(&v331);
    v14 = 0;
LABEL_45:
    v41 = v308;
  }
  else
  {
    v14 = 1;
  }
  v122 = v337;
  v121 = v338;
  sub_10023A834(v336, v337);
  (*(void (**)(uint64_t))(*(_QWORD *)(v121 + 8) + 88))(v122);
  v124 = v337;
  v123 = v338;
  sub_10023A834(v336, v337);
  v125 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v123 + 8) + 40))(v124);
  v126 = v316;
  v127 = v307;
  LODWORD(v306) = v14;
  if (v125 == 3)
  {
    sub_100553810();
    v128 = sub_100556250();
    v129 = (uint64_t)v309;
    Date.init()(v128);
    sub_10054B8BC(v129);
    (*(void (**)(uint64_t, uint64_t))(v310 + 8))(v129, v311);
    v131 = v337;
    v130 = v338;
    sub_10023A834(v336, v337);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v130 + 8) + 40))(v131) == 3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(SFAuthenticationsDynamicStoreEnabledBioArmPath);
      v133 = v132;
      v134 = String._bridgeToObjectiveC()();
      v135 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v133);
      sub_1000C85E8(1, v134, v135);

    }
    else
    {
      v136 = sub_100244418((uint64_t)v336, (uint64_t)&v331);
      v137 = Logger.logObject.getter(v136);
      v138 = static os_log_type_t.error.getter(v137);
      if (os_log_type_enabled(v137, v138))
      {
        v139 = (uint8_t *)swift_slowAlloc(12, -1);
        v140 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v328 = v140;
        *(_DWORD *)v139 = 136315138;
        v142 = v333;
        v141 = v334;
        sub_10023A834(&v331, v333);
        v143 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v141 + 8) + 40))(v142);
        v144 = sub_1003FDAA0(v143);
        v146 = (const char *)v145;
        *(_QWORD *)&v321 = sub_100228BD8(v144, v145, (uint64_t *)&v328);
        v126 = v316;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v321, (char *)&v321 + 8, v139 + 4);
        swift_bridgeObjectRelease(v146);
        sub_10022E75C(&v331);
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "Dynamic store not set for %s", v139, 0xCu);
        swift_arrayDestroy(v140, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v140, -1, -1);
        swift_slowDealloc(v139, -1, -1);
      }
      else
      {
        sub_10022E75C(&v331);
      }

      v14 = v306;
      v127 = v307;
    }
  }
  v148 = v337;
  v147 = v338;
  sub_10023A834(v336, v337);
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v147 + 8) + 40))(v148) == 5)
    sub_100547314();
  v150 = v337;
  v149 = v338;
  sub_10023A834(v336, v337);
  v151 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v149 + 8) + 40))(v150);
  sub_100244418((uint64_t)v336, (uint64_t)&v331);
  if (v151 == 8)
  {
    sub_10022E75C(&v331);
  }
  else
  {
    v153 = v333;
    v152 = v334;
    sub_10023A834(&v331, v333);
    v154 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v152 + 8) + 40))(v153);
    sub_10022E75C(&v331);
    if (v154 != 5)
      goto LABEL_81;
  }
  v156 = v337;
  v155 = v338;
  sub_10023A834(v336, v337);
  (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v155 + 8) + 64))(&v321, v156);
  if (!v322)
  {
    sub_10000D0F0((uint64_t)&v321, &qword_1007B9E38);
    v192 = sub_100244418((uint64_t)v339, (uint64_t)&v328);
    v193 = Logger.logObject.getter(v192);
    v194 = static os_log_type_t.error.getter(v193);
    if (os_log_type_enabled(v193, v194))
    {
      v195 = (uint8_t *)swift_slowAlloc(12, -1);
      v196 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v321 = v196;
      *(_DWORD *)v195 = 136315138;
      sub_10023A834(&v328, *((uint64_t *)&v329 + 1));
      v197 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v198 = dispatch thunk of CustomStringConvertible.description.getter(v315, v197);
      v200 = (const char *)v199;
      v317 = sub_100228BD8(v198, v199, (uint64_t *)&v321);
      v126 = v316;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318, v195 + 4);
      swift_bridgeObjectRelease(v200);
      sub_10022E75C(&v328);
      _os_log_impl((void *)&_mh_execute_header, v193, v194, "No peer device for session: %s", v195, 0xCu);
      swift_arrayDestroy(v196, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v196, -1, -1);
      swift_slowDealloc(v195, -1, -1);
    }
    else
    {
      sub_10022E75C(&v328);
    }

LABEL_79:
    v213 = v337;
    v212 = v338;
    sub_10023A834(v336, v337);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v212 + 8) + 40))(v213) == 5)
    {
      v214 = v303;
      Date.init()(5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v214, 0, 1, v311);
      v215 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager], &v328, 33, 0);
      v216 = *((_QWORD *)v215 + 3);
      v217 = *((_QWORD *)v215 + 4);
      sub_10026EEE8((uint64_t)v215, v216);
      (*(void (**)(char *, uint64_t, uint64_t))(v217 + 16))(v214, v216, v217);
      swift_endAccess(&v328);
    }
LABEL_81:
    v219 = v337;
    v218 = v338;
    sub_10023A834(v336, v337);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v218 + 8) + 40))(v219) == 8)
    {
      sub_100244418((uint64_t)v336, (uint64_t)&v328);
      if (!(_DWORD)v14)
      {
        sub_10022E75C(&v328);
        v222 = v313;
        v223 = Logger.logObject.getter(v222);
        v224 = static os_log_type_t.default.getter(v223);
        if (os_log_type_enabled(v223, v224))
        {
          v308 = v41;
          v225 = swift_slowAlloc(18, -1);
          v312 = (char *)swift_slowAlloc(32, -1);
          *(_QWORD *)&v321 = v312;
          *(_DWORD *)v225 = 67109378;
          v227 = swift_unknownObjectWeakLoadStrong(&v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v226);

          swift_unknownObjectRelease(v227);
          LODWORD(v317) = v227 != 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, (char *)&v317 + 4, v225 + 4);

          *(_WORD *)(v225 + 8) = 2080;
          v228 = &v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          v229 = swift_beginAccess(&v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v324, 0, 0);
          v230 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v126 + 48);
          v231 = v126;
          v232 = v315;
          if (v230(v228, 1, v315, v229))
          {
            v233 = 7104878;
            v234 = (const char *)0xE300000000000000;
          }
          else
          {
            v252 = v314;
            v253 = (*(uint64_t (**)(char *, char *, uint64_t))(v231 + 16))(v314, v228, v232);
            v233 = UUID.uuidString.getter(v253);
            v234 = v254;
            (*(void (**)(char *, uint64_t))(v231 + 8))(v252, v232);
          }
          v317 = sub_100228BD8(v233, (unint64_t)v234, (uint64_t *)&v321);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318, v225 + 10);

          swift_bridgeObjectRelease(v234);
          _os_log_impl((void *)&_mh_execute_header, v223, v224, "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v225, 0x12u);
          v255 = (uint64_t)v312;
          swift_arrayDestroy(v312, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v255, -1, -1);
          swift_slowDealloc(v225, -1, -1);

          v247 = v315;
          v126 = v316;
        }
        else
        {

          v247 = v315;
        }
        v256 = &v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate];
        v257 = swift_unknownObjectWeakLoadStrong(&v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v246);
        v258 = (uint64_t)v301;
        if (v257)
        {
          v259 = (void *)v257;
          v260 = (uint64_t)&v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess(&v222[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v317, 0, 0);
          sub_100221F28(v260, v258, &qword_1007B7280);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v258, 1, v247) != 1)
          {
            v274 = v296;
            (*(void (**)(char *, uint64_t, uint64_t))(v126 + 32))(v296, v258, v247);
            v275 = v247;
            v276 = UUID._bridgeToObjectiveC()().super.isa;
            v277 = sub_10056F370(11, 0, 0xE000000000000000);
            objc_msgSend(v259, "manager:didFailAuthenticationFor:error:", v222, v276, v277);
            swift_unknownObjectRelease(v259);

            v126 = v316;
            (*(void (**)(char *, uint64_t))(v316 + 8))(v274, v275);
            v278 = v302;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56))(v302, 1, 1, v275);
            swift_beginAccess(v260, &v321, 33, 0);
            v250 = v278;
            v251 = v260;
LABEL_104:
            sub_10023A084(v250, v251, &qword_1007B7280);
            swift_endAccess(&v321);
LABEL_107:
            LOBYTE(v14) = (_BYTE)v306;
            goto LABEL_108;
          }
          swift_unknownObjectRelease(v259);
          sub_10000D0F0(v258, &qword_1007B7280);
        }
        v261 = v222;
        v262 = Logger.logObject.getter(v261);
        v263 = static os_log_type_t.error.getter(v262);
        if (os_log_type_enabled(v262, v263))
        {
          v264 = swift_slowAlloc(18, -1);
          v312 = (char *)swift_slowAlloc(32, -1);
          v327[0] = (uint64_t)v312;
          *(_DWORD *)v264 = 67109378;
          v266 = swift_unknownObjectWeakLoadStrong(v256, v265);

          swift_unknownObjectRelease(v266);
          LODWORD(v321) = v266 != 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v321, (char *)&v321 + 4, v264 + 4);

          *(_WORD *)(v264 + 8) = 2080;
          v267 = &v261[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          v268 = swift_beginAccess(&v261[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v321, 0, 0);
          v269 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v126 + 48);
          v270 = v126;
          v271 = v315;
          if (v269(v267, 1, v315, v268))
          {
            v272 = 7104878;
            v273 = (const char *)0xE300000000000000;
          }
          else
          {
            v279 = v314;
            v280 = (*(uint64_t (**)(char *, char *, uint64_t))(v270 + 16))(v314, v267, v271);
            v272 = UUID.uuidString.getter(v280);
            v273 = v281;
            (*(void (**)(char *, uint64_t))(v270 + 8))(v279, v271);
          }
          v326 = sub_100228BD8(v272, (unint64_t)v273, v327);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v326, v327, v264 + 10);

          swift_bridgeObjectRelease(v273);
          _os_log_impl((void *)&_mh_execute_header, v262, v263, "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v264, 0x12u);
          v282 = (uint64_t)v312;
          swift_arrayDestroy(v312, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v282, -1, -1);
          swift_slowDealloc(v264, -1, -1);

          v126 = v316;
        }
        else
        {

        }
        goto LABEL_107;
      }
      v220 = *((_QWORD *)&v329 + 1);
      v221 = v330;
      sub_10023A834(&v328, *((uint64_t *)&v329 + 1));
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v221 + 16))(v220, v221) & 1) != 0)
      {
        sub_10022E75C(&v328);
LABEL_89:
        sub_100244418((uint64_t)v336, (uint64_t)&v321);
        v237 = v313;
        v238 = Logger.logObject.getter(v237);
        v239 = static os_log_type_t.default.getter(v238);
        if (os_log_type_enabled(v238, v239))
        {
          v240 = swift_slowAlloc(14, -1);
          *(_DWORD *)v240 = 67109376;
          v241 = v322;
          v242 = v323;
          sub_10023A834(&v321, v322);
          LODWORD(v241) = (*(uint64_t (**)(uint64_t, uint64_t))(v242 + 16))(v241, v242) & 1;
          sub_10022E75C(&v321);
          LODWORD(v324) = v241;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v324, (char *)&v324 + 4, v240 + 4);
          *(_WORD *)(v240 + 8) = 1024;
          v243 = (uint64_t)&v237[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess(&v237[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v324, 0, 0);
          v244 = v297;
          sub_100221F28(v243, v297, &qword_1007B7280);
          v245 = v315;
          LODWORD(v242) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v316 + 48))(v244, 1, v315) != 1;
          sub_10000D0F0(v244, &qword_1007B7280);
          LODWORD(v321) = v242;
          v126 = v316;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v321, (char *)&v321 + 4, v240 + 10);

          _os_log_impl((void *)&_mh_execute_header, v238, v239, "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)", (uint8_t *)v240, 0xEu);
          swift_slowDealloc(v240, -1, -1);

        }
        else
        {
          sub_10022E75C(&v321);

          v245 = v315;
        }
        sub_10055E3D0();
        v248 = v302;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56))(v302, 1, 1, v245);
        v249 = &v237[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess(&v237[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v321, 33, 0);
        v250 = v248;
        v251 = (uint64_t)v249;
        goto LABEL_104;
      }
      v235 = &v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
      swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI], &v317, 0, 0);
      v236 = v298;
      sub_100221F28((uint64_t)v235, v298, &qword_1007B7280);
      LODWORD(v235) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v236, 1, v315);
      sub_10000D0F0(v236, &qword_1007B7280);
      sub_10022E75C(&v328);
      if ((_DWORD)v235 != 1)
        goto LABEL_89;
    }
LABEL_108:
    v284 = v337;
    v283 = v338;
    sub_10023A834(v336, v337);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v283 + 8) + 40))(v284) != 8)
    {
      v286 = swift_unknownObjectWeakLoadStrong(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v285);
      if (v286)
      {
        v287 = (void *)v286;
        v289 = v337;
        v288 = v338;
        sub_10023A834(v336, v337);
        v290 = v314;
        (*(void (**)(uint64_t))(*(_QWORD *)(v288 + 8) + 32))(v289);
        v291 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v290, v315);
        objc_msgSend(v287, "manager:didEnableAuthenticationFor:", v313, v291);

        swift_unknownObjectRelease(v287);
      }
    }
    sub_10022E75C(v336);
    sub_100244418((uint64_t)v339, (uint64_t)v336);
    if ((v14 & 1) != 0)
      goto LABEL_40;
    goto LABEL_112;
  }
  sub_10026EE60(&v321, (uint64_t)&v328);
  v157 = *((_QWORD *)&v329 + 1);
  v158 = v330;
  sub_10023A834(&v328, *((uint64_t *)&v329 + 1));
  v159 = (*(uint64_t (**)(uint64_t, uint64_t))(v158 + 8))(v157, v158);
  if (!v160)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v161 = v160;
  sub_10055FB38(v159, v160);
  swift_bridgeObjectRelease(v161);
  v162 = *((_QWORD *)&v329 + 1);
  v163 = v330;
  sub_10023A834(&v328, *((uint64_t *)&v329 + 1));
  v164 = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 8))(v162, v163);
  if (!v165)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  v166 = v164;
  v167 = v165;
  swift_beginAccess(&v313[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID], &v317, 33, 0);
  v168 = sub_1004590EC(&v321, v166, (uint64_t)v167);
  v170 = v169;
  v171 = type metadata accessor for RegistrationState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 48))(v170, 1, v171))
    *(_BYTE *)(v170 + *(int *)(v171 + 20)) = 0;
  ((void (*)(__int128 *, _QWORD))v168)(&v321, 0);
  swift_endAccess(&v317);
  v172 = swift_bridgeObjectRelease(v167);
  v173 = v304;
  v174 = (uint64_t)v312;
  (*(void (**)(char *, uint64_t (*)(uint64_t), char *, __n128))(v304 + 16))(v127, v41, v312, v172);
  sub_100244418((uint64_t)&v328, (uint64_t)&v321);
  sub_100244418((uint64_t)&v328, (uint64_t)&v317);
  v14 = v313;
  v175 = Logger.logObject.getter(v14);
  v176 = static os_log_type_t.default.getter(v175);
  if (!os_log_type_enabled(v175, v176))
  {

    sub_10022E75C(&v321);
    sub_10022E75C(&v317);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v127, v174);
    LODWORD(v14) = (_DWORD)v306;
LABEL_78:
    sub_10022E75C(&v328);
    goto LABEL_79;
  }
  v177 = swift_slowAlloc(22, -1);
  v309 = (char *)swift_slowAlloc(64, -1);
  v327[0] = (uint64_t)v309;
  *(_DWORD *)v177 = 136315394;
  v178 = v322;
  v179 = v323;
  sub_10023A834(&v321, v322);
  v180 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 8))(v178, v179);
  if (v181)
  {
    v182 = (const char *)v181;
    v183 = v300;
    sub_10054A47C(v180, v181, v300);
    v184 = v183;
    v185 = swift_bridgeObjectRelease(v182);
    v186 = v310;
    v187 = v183;
    v188 = v311;
    v189 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v310 + 48))(v187, 1, v311, v185);
    if ((_DWORD)v189 == 1)
    {
      sub_10000D0F0(v184, &qword_1007C4330);
      v190 = (const char *)0xE90000000000003ELL;
      v191 = 0x676E697373696D3CLL;
    }
    else
    {
      v201 = Date.description.getter(v189);
      v202 = v184;
      v191 = v201;
      v190 = v203;
      (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v202, v188);
    }
    v324 = sub_100228BD8(v191, (unint64_t)v190, v327);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v324, v325, v177 + 4);

    swift_bridgeObjectRelease(v190);
    sub_10022E75C(&v321);
    *(_WORD *)(v177 + 12) = 2080;
    v204 = v319;
    v205 = v320;
    sub_10023A834(&v317, v319);
    v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v205 + 8))(v204, v205);
    v208 = v307;
    if (v207)
    {
      v209 = v206;
      v210 = v207;
    }
    else
    {
      v209 = 0xD000000000000015;
      v324 = 0;
      v325[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v325[0]);
      v210 = (const char *)0x8000000100612DF0;
    }
    LODWORD(v14) = (_DWORD)v306;
    v324 = sub_100228BD8(v209, (unint64_t)v210, v327);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v324, v325, v177 + 14);
    swift_bridgeObjectRelease(v210);
    sub_10022E75C(&v317);
    _os_log_impl((void *)&_mh_execute_header, v175, v176, "Recording last registration date as %s for device: %s", (uint8_t *)v177, 0x16u);
    v211 = v309;
    swift_arrayDestroy(v309, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v211, -1, -1);
    swift_slowDealloc(v177, -1, -1);

    (*(void (**)(char *, char *))(v304 + 8))(v208, v312);
    v126 = v316;
    goto LABEL_78;
  }
LABEL_126:

  result = sub_10022E75C(&v317);
  __break(1u);
  return result;
}

uint64_t sub_1003EE234(void *a1, char *a2)
{
  return sub_1003EC2C0(a1, a2, type metadata accessor for SDAuthenticationPairingKeySession, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988, (uint64_t (*)(uint64_t))sub_1003EE988);
}

uint64_t sub_1003EE258(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1003EE318(_BYTE *__src, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_1003EE258(__src, &__src[a2]);
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  __DataStorage.init(bytes:length:)(__src, a2);
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  v6 = type metadata accessor for Data.RangeReference(0);
  result = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

id sub_1003EE3C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken) = xmmword_1005CF260;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession) = 0;
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken) = xmmword_1005CF260;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = 0;
  sub_1003DFF10(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  v17 = sub_100278B64(a1, a2, a3, v14, a5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  return v17;
}

uint64_t sub_1003EE514()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(const char **)(v0 + 40));
  sub_100225AB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003EE550(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1007BEEA4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D098;
  return sub_1003E5148(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1003EE5DC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003EE608()
{
  uint64_t v0;

  sub_1003E5910(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003EE610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003EE620(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003EE628()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003EE64C()
{
  uint64_t v0;

  sub_1003E58C0(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1003EE658(_QWORD *a1)
{
  uint64_t v1;

  return sub_100561DDC(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1003EE674()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10022E75C((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003EE6A8()
{
  uint64_t *v0;

  return sub_1003E3058(v0[2], v0[3], v0[4], v0 + 5);
}

uint64_t sub_1003EE6B8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(const char **)(v0 + 32));

  sub_100225AB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003EE6F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1007BEEC4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D098;
  return sub_1003E316C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1003EE780()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003EE7A4()
{
  sub_1003E3E80(9uLL);
}

void sub_1003EE7DC()
{
  uint64_t v0;

  sub_1003E7CBC(*(char **)(v0 + 16));
}

uint64_t sub_1003EE7E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003EE810()
{
  uint64_t v0;

  sub_1003E7E68(*(unsigned int *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1003EE83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for AuthenticationSecurityRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + *(int *)(v1 + 20) + v4;
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003EE8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BEED4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D12C;
  return sub_1003E0564(a1, v5, v6, v7, v8);
}

uint64_t sub_1003EE964()
{
  sub_1003E0DA4();
  return sub_1003E0FC8();
}

uint64_t sub_1003EE988(_QWORD *a1)
{
  return sub_1003EE658(a1) & 1;
}

void sub_1003EE9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10022E534(v0, (uint64_t)v4);
  v5 = (char *)sub_1003EEA98 + 4 * byte_1005D6E70[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1003EEA98()
{
  uint64_t v0;

  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return 0;
}

uint64_t sub_1003EECB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BEEE0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BEEE0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003EED48()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary44SDAirDropPlatformUISessionManagerUnsupported);
}

void sub_1003EED8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  v4 = *(void **)(*v2 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;

}

uint64_t sub_1003EED9C()
{
  uint64_t v0;

  return sub_1003EFB28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1003EEDAC()
{
  uint64_t v0;

  sub_100232F78(v0 + 16);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary47SDAirDropPlatformNotificationManagerUnsupported);
}

uint64_t sub_1003EEDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)v2 + 16;
  *(_QWORD *)(*(_QWORD *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1003EEE24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  _QWORD *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007B6220);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003EFAE0(a1, (uint64_t)v10);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if ((_DWORD)result == 1)
  {
    v12 = _swiftEmptyArrayStorage;
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v7, v10, v4);
    v14 = sub_100008384(&qword_1007B64D8);
    v15 = *(_QWORD *)(v5 + 72);
    v16 = *(unsigned __int8 *)(v5 + 80);
    v17 = (v16 + 32) & ~v16;
    v12 = (_QWORD *)swift_allocObject(v14, v17 + v15, v16 | 7);
    *((_OWORD *)v12 + 1) = xmmword_1005CD2A0;
    result = ((uint64_t (*)(char *, char *, uint64_t))v13)((char *)v12 + v17, v7, v4);
  }
  *a2 = v12;
  return result;
}

uint64_t sub_1003EEF5C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceUnsupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary44SDAirDropPlatformNearFieldServiceUnsupported);
}

uint64_t sub_1003EEFA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_1003EEFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for UUID(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003EF044, static AirDropActor.shared, 0);
}

uint64_t sub_1003EF044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  UUID.init()(a1);
  SFAirDropClient.BoopAtADistance.ServerInfo.init(applicationLabel:publicKeyData:bonjourUUID:)(0, 0xE000000000000000, 0, 0xC000000000000000, v2);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003EF0A0()
{
  uint64_t v0;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return sub_1003EFB28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1003EF0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v20[1] = a1;
  v1 = sub_100008384(&qword_1007BF618);
  __chkstk_darwin(v1);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007BF620);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007B6220);
  __chkstk_darwin(v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007BF628);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  Just.init(_:)(v10, v8);
  v16 = sub_100008384(&qword_1007B64B8);
  Just.map<A>(_:)(sub_1003EEE24, 0, v11, v16);
  v17 = sub_10026E2FC(&qword_1007BF630, &qword_1007BF620, (uint64_t)&protocol conformance descriptor for Just<A>);
  Publisher<>.values.getter(v4, v17);
  v18 = sub_10026E2FC(&qword_1007BF638, &qword_1007BF618, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  SFNoThrowAsyncSequence.init<A>(_:)(v3, v16, v1, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1003EF314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerSupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary42SDAirDropPlatformLockStateManagerSupported);
}

id sub_1003EF370()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "deviceKeyBagLocked");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003EF3CC(_QWORD *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v5 = a1[3];
  v6 = sub_10023A834(a1, v5);
  v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
  if (qword_1007B3E00 != -1)
    swift_once(&qword_1007B3E00, sub_1002D4788);
  objc_msgSend(v4, "addObserver:selector:name:object:", v7, a2, qword_1007D80D8, 0);

  return swift_unknownObjectRelease(v7);
}

uint64_t sub_1003EF488(_QWORD *a1)
{
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = a1[3];
  v4 = sub_10023A834(a1, v3);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
  objc_msgSend(v2, "removeObserver:", v5);

  return swift_unknownObjectRelease(v5);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerUnsupported()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary44SDAirDropPlatformLockStateManagerUnsupported);
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary40SDAirDropPlatformUISessionManagerFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary43SDAirDropPlatformNotificationManagerFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary40SDAirDropPlatformNearFieldServiceFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary40SDAirDropPlatformLockStateManagerFactory);
}

uint64_t sub_1003EF5A8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v4 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (_QWORD *)NameDropIdentity.shared.unsafeMutableAddressor(v6);
  v10 = *v9;
  v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v9 + 136);
  v12 = swift_retain(*v9);
  v13 = (void *)v11(v12);
  v14 = swift_release(v10);
  if (!v13)
  {
    if (qword_1007B4050 != -1)
      swift_once(&qword_1007B4050, sub_1003EECB8);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100221DF8(v28, (uint64_t)qword_1007BEEE0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "User has no NameDrop identity, returning nil for myContactInfo", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    goto LABEL_21;
  }
  v15 = CNContact.boopDefaultHandle.getter(v14);
  v17 = v16;
  v18 = ((unint64_t)v16 >> 56) & 0xF;
  if (((unint64_t)v16 & 0x2000000000000000) == 0)
    v18 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    swift_bridgeObjectRelease(v16);
    if (qword_1007B4050 != -1)
      swift_once(&qword_1007B4050, sub_1003EECB8);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100221DF8(v33, (uint64_t)qword_1007BEEE0);
    v24 = Logger.logObject.getter(v34);
    v25 = static os_log_type_t.default.getter(v24);
    if (!os_log_type_enabled(v24, v25))
      goto LABEL_20;
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v27 = "User's NameDrop identity has no handles, returning nil for myContactInfo";
    goto LABEL_19;
  }
  v19 = v15;
  v20 = CNContact.vCardForBoopingDefaultHandle()();
  if (v21 >> 60 == 15)
  {
    swift_bridgeObjectRelease(v17);
    if (qword_1007B4050 != -1)
      swift_once(&qword_1007B4050, sub_1003EECB8);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100221DF8(v22, (uint64_t)qword_1007BEEE0);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (!os_log_type_enabled(v24, v25))
      goto LABEL_20;
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v27 = "User's NameDrop identity could not be converted to a vCard, returning nil for myContactInfo";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v24, v25, v27, v26, 2u);
    swift_slowDealloc(v26, -1, -1);
LABEL_20:

LABEL_21:
    v35 = type metadata accessor for SFAirDrop.ContactInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
  }
  v37 = v21;
  v54 = v20;
  v52 = a1;
  v53 = CNContact.boopPresentedName.getter();
  v51 = v38;
  v39 = CNContact.boopDefaultHandleIsEmail.getter();
  v40 = objc_msgSend(v2, "myGivenName");
  v41 = v40;
  if ((v39 & 1) != 0)
  {
    if (v40)
    {
      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

    }
    else
    {
      v50 = 0;
      v43 = 0;
    }
    v46 = v51;
    v45 = v52;
    *v8 = v19;
    v8[1] = (uint64_t)v17;
    v47 = (unsigned int *)&enum case for SFAirDrop.ContactInfo.Handle.email(_:);
  }
  else
  {
    if (v40)
    {
      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v44;

    }
    else
    {
      v50 = 0;
      v43 = 0;
    }
    v46 = v51;
    v45 = v52;
    *v8 = v19;
    v8[1] = (uint64_t)v17;
    v47 = (unsigned int *)&enum case for SFAirDrop.ContactInfo.Handle.phone(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *v47, v4);
  SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)(v50, v43, v53, v46, v8, v54, v37);

  v48 = type metadata accessor for SFAirDrop.ContactInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v45, 0, 1, v48);
}

uint64_t sub_1003EF9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v14;

  v0 = type metadata accessor for SFPlatform(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SFAirDropUserDefaults(0, v4);
  v5 = static SFAirDropUserDefaults.shared.getter();
  v6 = SFAirDropUserDefaults.walkAwayEnabled.getter();

  static SFPlatform.macOS.getter(v7);
  LOBYTE(v5) = static SFPlatform.isPlatform(_:)(v3);
  v8 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v9 = v8(v3, v0);
  if ((v5 & 1) != 0
    || (static SFPlatform.iOS.getter(v9), v11 = static SFPlatform.isPlatform(_:)(v3), v9 = v8(v3, v0), (v11 & 1) != 0))
  {
    v12 = 1;
  }
  else
  {
    static SFPlatform.visionOS.getter(v9);
    v12 = static SFPlatform.isPlatform(_:)(v3);
    v9 = v8(v3, v0);
  }
  return v6 & v12 & (SFDeviceClassCodeGet(v9, v10) != 4);
}

uint64_t sub_1003EFAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B6220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003EFB28(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1003EFB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003EFB78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BD000;
  if (!qword_1007BD000)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007BD000);
  }
  return result;
}

unint64_t sub_1003EFBB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B4E60;
  if (!qword_1007B4E60)
  {
    type metadata accessor for PFMediaCapabilitiesOutOfBandHintsKey(255);
    result = swift_getWitnessTable(&unk_1005CE7C8, v1);
    atomic_store(result, (unint64_t *)&qword_1007B4E60);
  }
  return result;
}

_QWORD *sub_1003EFC00(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  const char *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  const char *v19;
  _QWORD *v20;
  _QWORD *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  const char *v27;
  _QWORD *v28;
  _QWORD *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const char *v51;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v49 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v49 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v49);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = (const char *)v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v51 = (const char *)v14[1];
    *v13 = *v14;
    v13[1] = v51;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (_QWORD *)((char *)a1 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = (const char *)v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)((char *)a1 + v16);
    v21 = (_QWORD *)((char *)a2 + v16);
    v22 = (const char *)v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = (_QWORD *)((char *)a1 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = (const char *)v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)((char *)a1 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = (const char *)v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[13];
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = *v34;
    v36 = v34[1];
    *(_QWORD *)&v37 = swift_bridgeObjectRetain(v12).n128_u64[0];
    *(_QWORD *)&v38 = swift_bridgeObjectRetain(v51, v37).n128_u64[0];
    *(_QWORD *)&v39 = swift_bridgeObjectRetain(v19, v38).n128_u64[0];
    *(_QWORD *)&v40 = swift_bridgeObjectRetain(v22, v39).n128_u64[0];
    *(_QWORD *)&v41 = swift_bridgeObjectRetain(v27, v40).n128_u64[0];
    swift_bridgeObjectRetain(v30, v41);
    sub_10022E4A8(v35, v36);
    *v33 = v35;
    v33[1] = v36;
    v42 = a3[14];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = type metadata accessor for UUID(0);
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
    v46(v43, v44, v45);
    v46((char *)a1 + a3[15], (char *)a2 + a3[15], v45);
    v47 = a3[17];
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
    v48 = a3[19];
    *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  }
  return a1;
}

uint64_t sub_1003EFDD8(uint64_t a1, int *a2)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[5] + 8)).n128_u64[0];
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[6] + 8), v5).n128_u64[0];
  *(_QWORD *)&v7 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[7] + 8), v6).n128_u64[0];
  *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[8] + 8), v7).n128_u64[0];
  *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + a2[9] + 8), v8).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + a2[10] + 8), v9);
  sub_100225AB4(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8));
  v10 = a1 + a2[14];
  v11 = type metadata accessor for UUID(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v13(v10, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(a1 + a2[15], v11);
}

uint64_t sub_1003EFED4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  const char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  const char *v18;
  _QWORD *v19;
  _QWORD *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  const char *v26;
  _QWORD *v27;
  _QWORD *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  const char *v49;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = (const char *)v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v49 = (const char *)v13[1];
  *v12 = *v13;
  v12[1] = v49;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = (const char *)v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = (const char *)v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = (const char *)v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v29 = (const char *)v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[13];
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = v33[1];
  *(_QWORD *)&v36 = swift_bridgeObjectRetain(v11).n128_u64[0];
  *(_QWORD *)&v37 = swift_bridgeObjectRetain(v49, v36).n128_u64[0];
  *(_QWORD *)&v38 = swift_bridgeObjectRetain(v18, v37).n128_u64[0];
  *(_QWORD *)&v39 = swift_bridgeObjectRetain(v21, v38).n128_u64[0];
  *(_QWORD *)&v40 = swift_bridgeObjectRetain(v26, v39).n128_u64[0];
  swift_bridgeObjectRetain(v29, v40);
  sub_10022E4A8(v34, v35);
  *v32 = v34;
  v32[1] = v35;
  v41 = a3[14];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = type metadata accessor for UUID(0);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
  v45(v42, v43, v44);
  v45(a1 + a3[15], a2 + a3[15], v44);
  v46 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  v47 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  return a1;
}

uint64_t sub_1003F0080(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  const char *v10;
  const char *v11;
  double v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  const char *v17;
  const char *v18;
  double v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  const char *v24;
  const char *v25;
  double v26;
  double v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  const char *v31;
  const char *v32;
  double v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  const char *v38;
  const char *v39;
  double v40;
  double v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  const char *v45;
  const char *v46;
  double v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = (const char *)v9[1];
  v11 = (const char *)v8[1];
  v8[1] = v10;
  *(_QWORD *)&v12 = swift_bridgeObjectRetain(v10).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11, v12).n128_u64[0];
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v17 = (const char *)v16[1];
  v18 = (const char *)v15[1];
  v15[1] = v17;
  *(_QWORD *)&v19 = swift_bridgeObjectRetain(v17, v13).n128_u64[0];
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v18, v19).n128_u64[0];
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v24 = (const char *)v23[1];
  v25 = (const char *)v22[1];
  v22[1] = v24;
  *(_QWORD *)&v26 = swift_bridgeObjectRetain(v24, v20).n128_u64[0];
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v25, v26).n128_u64[0];
  v28 = a3[8];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v31 = (const char *)v30[1];
  v32 = (const char *)v29[1];
  v29[1] = v31;
  *(_QWORD *)&v33 = swift_bridgeObjectRetain(v31, v27).n128_u64[0];
  *(_QWORD *)&v34 = swift_bridgeObjectRelease(v32, v33).n128_u64[0];
  v35 = a3[9];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v38 = (const char *)v37[1];
  v39 = (const char *)v36[1];
  v36[1] = v38;
  *(_QWORD *)&v40 = swift_bridgeObjectRetain(v38, v34).n128_u64[0];
  *(_QWORD *)&v41 = swift_bridgeObjectRelease(v39, v40).n128_u64[0];
  v42 = a3[10];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v45 = (const char *)v44[1];
  v46 = (const char *)v43[1];
  v43[1] = v45;
  *(_QWORD *)&v47 = swift_bridgeObjectRetain(v45, v41).n128_u64[0];
  swift_bridgeObjectRelease(v46, v47);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v48 = a3[13];
  v49 = (uint64_t *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v51 = *v50;
  v52 = v50[1];
  sub_10022E4A8(*v50, v52);
  v53 = *v49;
  v54 = v49[1];
  *v49 = v51;
  v49[1] = v52;
  sub_100225AB4(v53, v54);
  v55 = a3[14];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = type metadata accessor for UUID(0);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24);
  v59(v56, v57, v58);
  v59(a1 + a3[15], a2 + a3[15], v58);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1003F029C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[15], a2 + a3[15], v14);
  v16 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_1003F03C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  double v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  double v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = (const char *)v8[1];
  *v8 = v11;
  v8[1] = v10;
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = (const char *)v15[1];
  *v15 = v18;
  v15[1] = v17;
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19, v13).n128_u64[0];
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = (const char *)v22[1];
  *v22 = v25;
  v22[1] = v24;
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v26, v20).n128_u64[0];
  v28 = a3[8];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  v33 = (const char *)v29[1];
  *v29 = v32;
  v29[1] = v31;
  *(_QWORD *)&v34 = swift_bridgeObjectRelease(v33, v27).n128_u64[0];
  v35 = a3[9];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = (const char *)v36[1];
  *v36 = v39;
  v36[1] = v38;
  *(_QWORD *)&v41 = swift_bridgeObjectRelease(v40, v34).n128_u64[0];
  v42 = a3[10];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  v47 = (const char *)v43[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47, v41);
  v48 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[13];
  v50 = *(_QWORD *)(a1 + v49);
  v51 = *(_QWORD *)(a1 + v49 + 8);
  *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
  sub_100225AB4(v50, v51);
  v52 = a3[14];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = type metadata accessor for UUID(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40);
  v56(v53, v54, v55);
  v56(a1 + a3[15], a2 + a3[15], v55);
  v57 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v57) = *(_BYTE *)(a2 + v57);
  v58 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v58) = *(_BYTE *)(a2 + v58);
  return a1;
}

uint64_t sub_1003F0560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F056C);
}

uint64_t sub_1003F056C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for UUID(0);
    v10 = a1 + *(int *)(a3 + 56);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1003F0618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F0624);
}

uint64_t sub_1003F0624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for UUID(0);
    v12 = a1 + *(int *)(a4 + 56);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SDNearFieldTap(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BF6B8;
  if (!qword_1007BF6B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDNearFieldTap);
  return result;
}

uint64_t sub_1003F0708(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[10];
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_1005D7200;
    v5[2] = &unk_1005D7218;
    v5[3] = &unk_1005D7218;
    v5[4] = &unk_1005D7218;
    v5[5] = &unk_1005D7218;
    v5[6] = &unk_1005D7200;
    v5[7] = &unk_1005D7230;
    v5[8] = &unk_1005D7230;
    v5[9] = &unk_1005D7248;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = &unk_1005D7230;
      v9 = &unk_1005D7260;
      v10 = &unk_1005D7260;
      v11 = &unk_1005D7230;
      swift_initStructMetadata(a1, 256, 16, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003F07CC@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  id v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  char v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;

  v8 = objc_msgSend(a1, "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v8);

  v9 = objc_msgSend(a1, "identifier");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = (int *)type metadata accessor for SDNearFieldTap(0);
  v14 = (uint64_t *)(a4 + v13[5]);
  *v14 = v10;
  v14[1] = v12;
  v15 = objc_msgSend(a1, "contactID");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  v20 = (uint64_t *)(a4 + v13[6]);
  *v20 = v17;
  v20[1] = v19;
  v21 = sub_10016B034(a1);
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = (uint64_t *)(a4 + v13[7]);
  *v26 = v23;
  v26[1] = v25;
  v27 = sub_10016B084(a1);
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v32 = (uint64_t *)(a4 + v13[8]);
  *v32 = v29;
  v32[1] = v31;
  v33 = sub_10016B0D4(a1);
  if (v33)
  {
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v37 = v36;

  }
  else
  {
    v35 = 0;
    v37 = 0;
  }
  v38 = (uint64_t *)(a4 + v13[9]);
  *v38 = v35;
  v38[1] = v37;
  v39 = objc_msgSend(a1, "applicationLabel");
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  v43 = (uint64_t *)(a4 + v13[10]);
  *v43 = v40;
  v43[1] = v42;
  *(_BYTE *)(a4 + v13[12]) = objc_msgSend(a1, "isSameAccount");
  v44 = sub_10016AFC8(a1);
  v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v47 = v46;

  v48 = (uint64_t *)(a4 + v13[13]);
  *v48 = v45;
  v48[1] = v47;
  v49 = sub_10016B124(a1);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v49);

  *(_BYTE *)(a4 + v13[16]) = objc_msgSend(a1, "shouldForceSingleBandAWDLMode");
  if (sub_10016B1A4((uint64_t)a1))
    v50 = sub_10016B1C4(a1);
  else
    v50 = 2;
  *(_BYTE *)(a4 + v13[17]) = v50;
  if (sub_10016B210((uint64_t)a1))
    v51 = sub_10016B230(a1);
  else
    v51 = 2;
  v52 = a2 & 1;
  *(_BYTE *)(a4 + v13[18]) = v51;
  v53 = objc_msgSend(a1, "flags");

  *(_BYTE *)(a4 + v13[19]) = v53 & 1;
  *(_BYTE *)(a4 + v13[11]) = v52;
  v54 = a4 + v13[15];
  v55 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v54, a3, v55);
}

uint64_t sub_1003F0AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;

  v6 = type metadata accessor for UUID(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = SFAirDropClient.BoopAtADistance.TapEvent.date.getter(v11);
  v15 = SFAirDropClient.BoopAtADistance.TapEvent.identifier.getter(v14);
  v17 = v16;
  v18 = (int *)type metadata accessor for SDNearFieldTap(0);
  v19 = (uint64_t *)(a3 + v18[5]);
  *v19 = v15;
  v19[1] = v17;
  v20 = SFAirDropClient.BoopAtADistance.TapEvent.contactID.getter();
  v21 = (uint64_t *)(a3 + v18[6]);
  *v21 = v20;
  v21[1] = v22;
  v23 = SFAirDropClient.BoopAtADistance.TapEvent.deviceName.getter();
  v24 = (uint64_t *)(a3 + v18[7]);
  *v24 = v23;
  v24[1] = v25;
  v26 = SFAirDropClient.BoopAtADistance.TapEvent.deviceModel.getter();
  v27 = (uint64_t *)(a3 + v18[8]);
  *v27 = v26;
  v27[1] = v28;
  v29 = SFAirDropClient.BoopAtADistance.TapEvent.accountID.getter();
  v30 = (uint64_t *)(a3 + v18[9]);
  *v30 = v29;
  v30[1] = v31;
  v32 = SFAirDropClient.BoopAtADistance.TapEvent.applicationLabel.getter();
  v33 = (uint64_t *)(a3 + v18[10]);
  *v33 = v32;
  v33[1] = v34;
  *(_BYTE *)(a3 + v18[11]) = (SFAirDropClient.BoopAtADistance.Transaction.isInitiator.getter() & 1) == 0;
  *(_BYTE *)(a3 + v18[12]) = SFAirDropClient.BoopAtADistance.TapEvent.isSameAccount.getter() & 1;
  v35 = SFAirDropClient.BoopAtADistance.Transaction.identifier.getter();
  v36 = SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter(v35);
  v37 = SFAirDropClient.BoopAtADistance.ServerInfo.publicKeyData.getter(v36);
  v39 = v38;
  v40 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v41 = v40(v13, v9);
  v42 = (uint64_t *)(a3 + v18[13]);
  *v42 = v37;
  v42[1] = v39;
  v43 = SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter(v41);
  SFAirDropClient.BoopAtADistance.ServerInfo.bonjourUUID.getter(v43);
  v40(v13, v9);
  v44 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(a3 + v18[14], v8, v50);
  *(_BYTE *)(a3 + v18[16]) = SFAirDropClient.BoopAtADistance.TapEvent.shouldForceSingleBandAWDLMode.getter(v44) & 1;
  *(_BYTE *)(a3 + v18[17]) = SFAirDropClient.BoopAtADistance.TapEvent.isKnownIdentity.getter() & 1;
  LOBYTE(v37) = SFAirDropClient.BoopAtADistance.TapEvent.isUnsupportedApplicationLabel.getter();
  v45 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(a2, v45);
  v47 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0, v46);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(a1, v47);
  *(_BYTE *)(a3 + v18[18]) = v37 & 1;
  *(_BYTE *)(a3 + v18[19]) = 1;
  return result;
}

uint64_t sub_1003F0D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v85 = type metadata accessor for SDNearFieldTap(0);
  v2 = __chkstk_darwin(v85);
  v83 = (uint64_t)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v81 - v4;
  v6 = type metadata accessor for NWEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v81 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v81 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v81 - v17;
  sub_1002BE30C(a1);
  v20 = v19;
  swift_bridgeObjectRelease(v19);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v18, a1, v6);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  else
  {
    sub_1002BE318((uint64_t)v18);
    v23 = v22;
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v18, v6);
    swift_bridgeObjectRelease(v23);
    if (!v23)
    {
      if (qword_1007B4058 != -1)
        swift_once(&qword_1007B4058, sub_1003F1698);
      v61 = type metadata accessor for Logger(0);
      sub_100221DF8(v61, (uint64_t)qword_1007BF648);
      v21(v16, a1, v6);
      v21(v13, a1, v6);
      v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v10, a1, v6);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc(32, -1);
        v66 = swift_slowAlloc(96, -1);
        v88 = v66;
        *(_DWORD *)v65 = 136315650;
        v67 = sub_1002BE324((uint64_t)v16);
        v85 = v66;
        if (v68)
        {
          v69 = v68;
        }
        else
        {
          v86 = 0;
          v87 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v87);
          v69 = 0x8000000100612DF0;
          v67 = 0xD000000000000015;
        }
        v86 = sub_100228BD8(v67, v69, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 4);
        swift_bridgeObjectRelease(v69);
        v24(v16, v6);
        *(_WORD *)(v65 + 12) = 2080;
        v74 = sub_1002BE30C((uint64_t)v13);
        if (v75)
        {
          v76 = v75;
        }
        else
        {
          v86 = 0;
          v87 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v87);
          v76 = 0x8000000100612DF0;
          v74 = 0xD000000000000015;
        }
        v86 = sub_100228BD8(v74, v76, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 14);
        swift_bridgeObjectRelease(v76);
        v24(v13, v6);
        *(_WORD *)(v65 + 22) = 2080;
        v77 = sub_1002BE318((uint64_t)v10);
        if (v78)
        {
          v79 = v78;
          v80 = v85;
        }
        else
        {
          v86 = 0;
          v87 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v87);
          v79 = 0x8000000100612DF0;
          v80 = v85;
          v77 = 0xD000000000000015;
        }
        v86 = sub_100228BD8(v77, v79, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 24);
        swift_bridgeObjectRelease(v79);
        v24(v10, v6);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "SDAirDropNearFieldService Failed to get endpoint identifier from endpoint.deviceName:%s endpoint.deviceIdentifier:%s endpoint.contactID:%s ", (uint8_t *)v65, 0x20u);
        swift_arrayDestroy(v80, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v80, -1, -1);
        swift_slowDealloc(v65, -1, -1);
      }
      else
      {
        v24(v16, v6);
        v24(v13, v6);
        v24(v10, v6);
      }

      return 0;
    }
  }
  v25 = sub_1002BE30C(a1);
  v28 = v84;
  v27 = v85;
  if (v26)
  {
    v29 = v25;
    v30 = v26;
    if (qword_1007B4058 != -1)
      swift_once(&qword_1007B4058, sub_1003F1698);
    v31 = type metadata accessor for Logger(0);
    sub_100221DF8(v31, (uint64_t)qword_1007BF648);
    sub_1003F2C54(v28, (uint64_t)v5);
    v32 = swift_bridgeObjectRetain_n(v30, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(22, -1);
      v82 = swift_slowAlloc(64, -1);
      v86 = v82;
      *(_DWORD *)v35 = 136315394;
      v36 = (uint64_t *)&v5[*(int *)(v27 + 20)];
      v37 = v29;
      v38 = *v36;
      v39 = v36[1];
      swift_bridgeObjectRetain(v39);
      v88 = sub_100228BD8(v38, v39, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v35 + 4);
      v40 = v39;
      v29 = v37;
      swift_bridgeObjectRelease(v40);
      sub_1003F2C98((uint64_t)v5);
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain(v30);
      v88 = sub_100228BD8(v37, v30, &v86);
      v28 = v84;
      v27 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v35 + 14);
      swift_bridgeObjectRelease_n(v30, 3);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointIdentifier: %s}", (uint8_t *)v35, 0x16u);
      v41 = v82;
      swift_arrayDestroy(v82, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v35, -1, -1);

    }
    else
    {
      sub_1003F2C98((uint64_t)v5);

      swift_bridgeObjectRelease_n(v30, 2);
    }
    v42 = (_QWORD *)(v28 + *(int *)(v27 + 20));
    v43 = v42[1];
    if (*v42 == v29 && v30 == v43)
    {
      v44 = v30;
LABEL_33:
      swift_bridgeObjectRelease(v44);
      return 1;
    }
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(*v42, v43, v29, v30, 0);
    swift_bridgeObjectRelease(v30);
    if ((v45 & 1) != 0)
      return 1;
  }
  v46 = sub_1002BE318(a1);
  if (v47)
  {
    v48 = v46;
    v49 = v47;
    if (qword_1007B4058 != -1)
      swift_once(&qword_1007B4058, sub_1003F1698);
    v50 = type metadata accessor for Logger(0);
    sub_100221DF8(v50, (uint64_t)qword_1007BF648);
    v51 = v83;
    sub_1003F2C54(v28, v83);
    v52 = swift_bridgeObjectRetain_n(v49, 2);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v84 = v48;
      v55 = swift_slowAlloc(22, -1);
      v56 = swift_slowAlloc(64, -1);
      v88 = v56;
      *(_DWORD *)v55 = 136315394;
      v57 = (uint64_t *)(v51 + *(int *)(v27 + 24));
      v58 = v57[1];
      if (v58)
      {
        v59 = *v57;
        v60 = v57[1];
      }
      else
      {
        v59 = 0xD000000000000015;
        v86 = 0;
        v87 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v87);
        v60 = 0x8000000100612DF0;
      }
      swift_bridgeObjectRetain(v58);
      v86 = sub_100228BD8(v59, v60, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v55 + 4);
      swift_bridgeObjectRelease(v60);
      sub_1003F2C98(v83);
      *(_WORD *)(v55 + 12) = 2080;
      swift_bridgeObjectRetain(v49);
      v48 = v84;
      v86 = sub_100228BD8(v84, v49, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v55 + 14);
      swift_bridgeObjectRelease_n(v49, 3);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointContactID: %s}", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      v27 = v85;
    }
    else
    {
      sub_1003F2C98(v51);

      swift_bridgeObjectRelease_n(v49, 2);
    }
    v70 = (_QWORD *)(v28 + *(int *)(v27 + 24));
    v71 = v70[1];
    if (v71)
    {
      if (*v70 == v48 && v71 == v49)
      {
        v44 = v49;
        goto LABEL_33;
      }
      v73 = _stringCompareWithSmolCheck(_:_:expecting:)(*v70, v71, v48, v49, 0);
      swift_bridgeObjectRelease(v49);
      if ((v73 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease(v49);
    }
  }
  return 0;
}

uint64_t sub_1003F1698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BF648);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BF648);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_1003F1728@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_1003F1748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003F37BC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1003F17A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003F37BC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1003F17F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *object;
  Swift::String v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;

  v1 = v0;
  v2 = type metadata accessor for OSLogDateFormatter.Style(0);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogDateFormatter(0);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B6598);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for SDNearFieldTap(0);
  v16 = (uint64_t *)(v0 + v15[10]);
  v17 = (void *)v16[1];
  v54 = *v16;
  sub_10031AF00();
  v18 = swift_bridgeObjectRetain(v17);
  v19 = (void *)static NSUserDefaults.airdrop.getter(v18);
  SFAirDropUserDefaults.boopInteractionTypeOverride.getter();

  v20 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType(0);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20);
  sub_1003F2CD4((uint64_t)v14);
  if ((_DWORD)v19 != 1)
  {
    v56 = v54;
    v57 = (unint64_t)v17;
    v21._countAndFlagsBits = 0x6469727265766F5BLL;
    v21._object = (void *)0xEB000000005D6E65;
    String.append(_:)(v21);
    v17 = (void *)v57;
    v54 = v56;
  }
  v56 = 0;
  v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(159);
  v22._countAndFlagsBits = 542130516;
  v22._object = (void *)0xE400000000000000;
  String.append(_:)(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1, v8);
  v24 = v50;
  v23 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v4, enum case for OSLogDateFormatter.Style.timeNoTimeZone(_:), v51);
  static FormatStyle<>.oslog(_:)(v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  v25 = sub_100220D78(&qword_1007BF728, (uint64_t (*)(uint64_t))&type metadata accessor for OSLogDateFormatter, (uint64_t)&protocol conformance descriptor for OSLogDateFormatter);
  v26 = v53;
  Date.formatted<A>(_:)(&v55, v7, v53, v25);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  object = v55._object;
  String.append(_:)(v55);
  swift_bridgeObjectRelease(object);
  v28._countAndFlagsBits = 32;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  v29 = (uint64_t *)(v1 + v15[5]);
  v30 = *v29;
  v31 = (void *)v29[1];
  swift_bridgeObjectRetain(v31);
  v32._countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 0x20726F6620;
  v33._object = (void *)0xE500000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = v54;
  v34._object = v17;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v17);
  v35._countAndFlagsBits = 0x6F63206874697720;
  v35._object = (void *)0xEF203A746361746ELL;
  String.append(_:)(v35);
  v55 = *(Swift::String *)(v1 + v15[6]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v55, &type metadata for String, &protocol witness table for String);
  v36._countAndFlagsBits = 0x203A6570797420;
  v36._object = (void *)0xE700000000000000;
  String.append(_:)(v36);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[11]);
  _print_unlocked<A, B>(_:_:)(&v55, &v56, &type metadata for SDNearFieldTapType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v37._countAndFlagsBits = 0xD00000000000001BLL;
  v37._object = (void *)0x800000010061A070;
  String.append(_:)(v37);
  v38 = type metadata accessor for UUID(0);
  v39 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v38, v39);
  v41 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v41);
  v42._countAndFlagsBits = 0xD000000000000012;
  v42._object = (void *)0x800000010061A090;
  String.append(_:)(v42);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[17]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v55, &type metadata for Bool, &protocol witness table for Bool);
  v43._object = (void *)0x800000010061A0B0;
  v43._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v43);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[18]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v55, &type metadata for Bool, &protocol witness table for Bool);
  v44._object = (void *)0x800000010061A0E0;
  v44._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v44);
  if (*(_BYTE *)(v1 + v15[16]))
    v45 = 1702195828;
  else
    v45 = 0x65736C6166;
  if (*(_BYTE *)(v1 + v15[16]))
    v46 = 0xE400000000000000;
  else
    v46 = 0xE500000000000000;
  v47 = v46;
  String.append(_:)(*(Swift::String *)&v45);
  swift_bridgeObjectRelease(v46);
  return v56;
}

uint64_t sub_1003F1CE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003F1D14 + 4 * byte_1005D71C0[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1003F1D14()
{
  return 0x696669746E656469;
}

unint64_t sub_1003F1D34()
{
  return 0xD000000000000011;
}

uint64_t sub_1003F1EAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  char v48;

  v3 = v1;
  v5 = sub_100008384(&qword_1007BF750);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1003F2D14();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SDNearFieldTap.CodingKeys, &type metadata for SDNearFieldTap.CodingKeys, v11, v9, v10);
  LOBYTE(v47) = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_100220D78(&qword_1007BF758, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v47, v5, v12, v13);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = (int *)type metadata accessor for SDNearFieldTap(0);
  v15 = (uint64_t *)(v3 + v14[5]);
  v16 = *v15;
  v17 = v15[1];
  LOBYTE(v47) = 1;
  KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v47, v5);
  v18 = (uint64_t *)(v3 + v14[6]);
  v19 = *v18;
  v20 = v18[1];
  LOBYTE(v47) = 2;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v47, v5);
  v21 = (uint64_t *)(v3 + v14[7]);
  v22 = *v21;
  v23 = v21[1];
  LOBYTE(v47) = 3;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v22, v23, &v47, v5);
  v24 = (uint64_t *)(v3 + v14[8]);
  v25 = *v24;
  v26 = v24[1];
  LOBYTE(v47) = 4;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, &v47, v5);
  v27 = (uint64_t *)(v3 + v14[9]);
  v28 = *v27;
  v29 = v27[1];
  LOBYTE(v47) = 5;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v28, v29, &v47, v5);
  v30 = (uint64_t *)(v3 + v14[10]);
  v31 = *v30;
  v32 = v30[1];
  LOBYTE(v47) = 6;
  KeyedEncodingContainer.encode(_:forKey:)(v31, v32, &v47, v5);
  LOBYTE(v47) = *(_BYTE *)(v3 + v14[11]);
  v48 = 7;
  v33 = sub_1003F2D9C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v47, &v48, v5, &type metadata for SDNearFieldTapType, v33);
  v34 = *(unsigned __int8 *)(v3 + v14[12]);
  LOBYTE(v47) = 8;
  KeyedEncodingContainer.encode(_:forKey:)(v34, &v47, v5);
  v47 = *(_OWORD *)(v3 + v14[13]);
  v48 = 9;
  v35 = sub_100285DE4();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v47, &v48, v5, &type metadata for Data, v35);
  v46 = v6;
  v36 = v3 + v14[14];
  LOBYTE(v47) = 10;
  v37 = type metadata accessor for UUID(0);
  v38 = sub_100220D78(&qword_1007B7290, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v36, &v47, v5, v37, v38);
  v39 = v3 + v14[15];
  LOBYTE(v47) = 11;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v39, &v47, v5, v37, v38);
  v40 = *(unsigned __int8 *)(v3 + v14[16]);
  LOBYTE(v47) = 12;
  KeyedEncodingContainer.encode(_:forKey:)(v40, &v47, v5);
  v41 = *(unsigned __int8 *)(v3 + v14[17]);
  LOBYTE(v47) = 13;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v41, &v47, v5);
  v42 = *(unsigned __int8 *)(v3 + v14[18]);
  LOBYTE(v47) = 14;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v42, &v47, v5);
  v43 = *(unsigned __int8 *)(v3 + v14[19]);
  LOBYTE(v47) = 15;
  KeyedEncodingContainer.encode(_:forKey:)(v43, &v47, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v8, v5);
}

void sub_1003F2300(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  int *v62;
  __int128 v63;
  char v64;

  v53 = a2;
  v60 = type metadata accessor for UUID(0);
  v56 = *(_QWORD *)(v60 - 8);
  v3 = __chkstk_darwin(v60);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v51 - v6;
  v8 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100008384(&qword_1007BF730);
  v11 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = (int *)type metadata accessor for SDNearFieldTap(0);
  __chkstk_darwin(v62);
  v61 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  v59 = a1;
  sub_10023A834(a1, v15);
  v17 = sub_1003F2D14();
  v54 = v13;
  v18 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SDNearFieldTap.CodingKeys, &type metadata for SDNearFieldTap.CodingKeys, v17, v15, v16);
  if (v18)
  {
    sub_10022E75C(v59);
  }
  else
  {
    v51 = v5;
    v52 = v7;
    v58 = v11;
    LOBYTE(v63) = 0;
    v19 = sub_100220D78(&qword_1007BF740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v20 = v55;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v8, &v63, v55, v8, v19);
    v21 = v61;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v61, v10, v8);
    LOBYTE(v63) = 1;
    v22 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20);
    v23 = v62;
    v24 = (uint64_t *)&v21[v62[5]];
    *v24 = v22;
    v24[1] = v25;
    LOBYTE(v63) = 2;
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    v27 = (uint64_t *)&v21[v23[6]];
    *v27 = v26;
    v27[1] = v28;
    LOBYTE(v63) = 3;
    v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    v30 = (uint64_t *)&v21[v23[7]];
    *v30 = v29;
    v30[1] = v31;
    LOBYTE(v63) = 4;
    v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    v33 = (uint64_t *)&v21[v23[8]];
    *v33 = v32;
    v33[1] = v34;
    LOBYTE(v63) = 5;
    v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    v36 = (uint64_t *)&v21[v23[9]];
    *v36 = v35;
    v36[1] = v37;
    LOBYTE(v63) = 6;
    v38 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20);
    v39 = (uint64_t *)&v21[v23[10]];
    *v39 = v38;
    v39[1] = v40;
    v64 = 7;
    v41 = sub_1003F2D58();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for SDNearFieldTapType, &v64, v20, &type metadata for SDNearFieldTapType, v41);
    v21[v23[11]] = v63;
    LOBYTE(v63) = 8;
    v21[v23[12]] = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20) & 1;
    v64 = 9;
    v42 = sub_100285DA0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v64, v20, &type metadata for Data, v42);
    *(_OWORD *)&v61[v62[13]] = v63;
    LOBYTE(v63) = 10;
    v43 = sub_100220D78(&qword_1007B7278, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v60, &v63, v55, v60, v43);
    v44 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
    v45 = v60;
    v44(&v61[v62[14]], v52, v60);
    LOBYTE(v63) = 11;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v45, &v63, v55, v45, v43);
    v44(&v61[v62[15]], v51, v60);
    LOBYTE(v63) = 12;
    v46 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v55);
    v61[v62[16]] = v46 & 1;
    LOBYTE(v63) = 13;
    v47 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v55);
    v61[v62[17]] = v47;
    LOBYTE(v63) = 14;
    v48 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v55);
    v61[v62[18]] = v48;
    LOBYTE(v63) = 15;
    LOBYTE(v43) = KeyedDecodingContainer.decode(_:forKey:)(&v63, v55);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v55);
    v49 = v43 & 1;
    v50 = (uint64_t)v61;
    v61[v62[19]] = v49;
    sub_1003F2C54(v50, v53);
    sub_10022E75C(v59);
    sub_1003F2C98(v50);
  }
}

uint64_t sub_1003F2BA0()
{
  unsigned __int8 *v0;

  return sub_1003F1CE8(*v0);
}

uint64_t sub_1003F2BA8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003F3128(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003F2BCC(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1003F2BD8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003F2D14();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003F2C00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003F2D14();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003F2C28(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003F2300(a1, a2);
}

uint64_t sub_1003F2C3C(_QWORD *a1)
{
  return sub_1003F1EAC(a1);
}

uint64_t sub_1003F2C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDNearFieldTap(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F2C98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDNearFieldTap(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003F2CD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007B6598);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003F2D14()
{
  unint64_t result;

  result = qword_1007BF738;
  if (!qword_1007BF738)
  {
    result = swift_getWitnessTable(&unk_1005D74BC, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BF738);
  }
  return result;
}

unint64_t sub_1003F2D58()
{
  unint64_t result;

  result = qword_1007BF748;
  if (!qword_1007BF748)
  {
    result = swift_getWitnessTable(&unk_1005D7494, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_1007BF748);
  }
  return result;
}

unint64_t sub_1003F2D9C()
{
  unint64_t result;

  result = qword_1007BF760;
  if (!qword_1007BF760)
  {
    result = swift_getWitnessTable(&unk_1005D746C, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_1007BF760);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SDNearFieldTap.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNearFieldTap.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1003F2EBC + 4 * byte_1005D71D5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1003F2EF0 + 4 * byte_1005D71D0[v4]))();
}

uint64_t sub_1003F2EF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F2EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003F2F00);
  return result;
}

uint64_t sub_1003F2F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003F2F14);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1003F2F18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F2F20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTap.CodingKeys()
{
  return &type metadata for SDNearFieldTap.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SDNearFieldTapType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003F2F88 + 4 * byte_1005D71DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003F2FBC + 4 * byte_1005D71DA[v4]))();
}

uint64_t sub_1003F2FBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F2FC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003F2FCCLL);
  return result;
}

uint64_t sub_1003F2FD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003F2FE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003F2FE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F2FEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTapType()
{
  return &type metadata for SDNearFieldTapType;
}

unint64_t sub_1003F300C()
{
  unint64_t result;

  result = qword_1007BF768;
  if (!qword_1007BF768)
  {
    result = swift_getWitnessTable(&unk_1005D738C, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_1007BF768);
  }
  return result;
}

unint64_t sub_1003F3054()
{
  unint64_t result;

  result = qword_1007BF770;
  if (!qword_1007BF770)
  {
    result = swift_getWitnessTable(&unk_1005D7444, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BF770);
  }
  return result;
}

unint64_t sub_1003F309C()
{
  unint64_t result;

  result = qword_1007BF778;
  if (!qword_1007BF778)
  {
    result = swift_getWitnessTable(&unk_1005D73B4, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BF778);
  }
  return result;
}

unint64_t sub_1003F30E4()
{
  unint64_t result;

  result = qword_1007BF780;
  if (!qword_1007BF780)
  {
    result = swift_getWitnessTable(&unk_1005D73DC, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1007BF780);
  }
  return result;
}

uint64_t sub_1003F3128(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702125924, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v7 = 0xEA00000000007265;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x800000010061A110)
  {
    v8 = 0x800000010061A110;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000010061A110, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL)
  {
    v9 = 0xEA0000000000656DLL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614E656369766564, 0xEA0000000000656DLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564)
  {
    v10 = 0xEB000000006C6564;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4D656369766564, 0xEB000000006C6564, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044)
  {
    v11 = 0xE900000000000044;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746E756F636361, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x800000010061A130)
  {
    v12 = 0x800000010061A130;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000010061A130, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v13 = 0xE400000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6341656D61537369 && a2 == 0xED0000746E756F63)
  {
    v14 = 0xED0000746E756F63;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6341656D61537369, 0xED0000746E756F63, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x800000010061A150)
  {
    v15 = 0x800000010061A150;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x800000010061A150, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x800000010061A170)
  {
    v16 = 0x800000010061A170;
LABEL_68:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x800000010061A170, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_68;
  }
  if (a1 == 0x746361736E617274 && a2 == 0xED000044496E6F69)
  {
    v17 = 0xED000044496E6F69;
LABEL_74:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746361736E617274, 0xED000044496E6F69, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_74;
  }
  if (a1 == 0xD00000000000001DLL)
  {
    v18 = 0x800000010061A190;
    if (a2 == 0x800000010061A190)
      goto LABEL_79;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x800000010061A190, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_79:
    swift_bridgeObjectRelease(v18);
    return 12;
  }
  if (a1 == 0x496E776F6E4B7369 && a2 == 0xEF797469746E6564)
  {
    v19 = 0xEF797469746E6564;
LABEL_85:
    swift_bridgeObjectRelease(v19);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x496E776F6E4B7369, 0xEF797469746E6564, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_85;
  }
  if (a1 == 0xD00000000000001DLL)
  {
    v20 = 0x800000010061A1B0;
    if (a2 == 0x800000010061A1B0)
      goto LABEL_90;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x800000010061A1B0, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
LABEL_90:
    swift_bridgeObjectRelease(v20);
    return 14;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x800000010061A1D0)
  {
    swift_bridgeObjectRelease(0x800000010061A1D0);
    return 15;
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x800000010061A1D0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v21 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

unint64_t sub_1003F37BC()
{
  unint64_t result;

  result = qword_1007BF788;
  if (!qword_1007BF788)
  {
    result = swift_getWitnessTable(&unk_1005D7314, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_1007BF788);
  }
  return result;
}

uint64_t sub_1003F3800(char a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t isEscapingClosureAtFileLocation;
  id v5;
  id v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  __int128 v22;
  __int128 v23;
  __int128 aBlock;
  __int128 v25;
  void *v26;
  uint64_t v27;

  v2 = (void *)v1[3];
  if ((a1 & 1) == 0)
  {
    isEscapingClosureAtFileLocation = v2;
    v11 = 0;
    goto LABEL_5;
  }
  v3 = (void *)objc_opt_self(BSAuditToken);
  isEscapingClosureAtFileLocation = v2;
  v5 = objc_msgSend(v3, "tokenForCurrentProcess");
  objc_msgSend(v5, "realToken");
  v22 = v25;
  v23 = aBlock;

  v6 = objc_allocWithZone((Class)STActivityAttribution);
  aBlock = v23;
  v25 = v22;
  v7 = objc_msgSend(v6, "initWithAuditToken:", &aBlock);
  if (qword_1007B4068 != -1)
    goto LABEL_7;
  while (1)
  {
    v8 = (void *)qword_1007D8440;
    v9 = objc_allocWithZone((Class)STStatusItemsStatusDomainStatusItemAttribution);
    v10 = v8;
    v11 = objc_msgSend(v9, "initWithStatusItemIdentifier:activityAttribution:", v10, v7);

LABEL_5:
    v12 = (void *)v1[2];
    v7 = (_QWORD *)swift_allocObject(&unk_100727A88, 32, 7);
    v7[2] = v2;
    v7[3] = v11;
    v13 = swift_allocObject(&unk_100727AB0, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_1003F4054;
    *(_QWORD *)(v13 + 24) = v7;
    v26 = sub_100287F38;
    v27 = v13;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v25 = sub_1003F3F1C;
    *((_QWORD *)&v25 + 1) = &unk_100727AC8;
    v2 = _Block_copy(&aBlock);
    v14 = v27;
    v15 = v11;
    swift_retain(v13);
    v16 = (id)isEscapingClosureAtFileLocation;
    swift_release(v14);
    v17 = swift_allocObject(&unk_100727B00, 24, 7);
    swift_weakInit(v17 + 16, v1);
    v18 = swift_allocObject(&unk_100727B28, 32, 7);
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = v11;
    v26 = sub_1003F40D4;
    v27 = v18;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v25 = sub_10025BBB4;
    *((_QWORD *)&v25 + 1) = &unk_100727B40;
    v1 = _Block_copy(&aBlock);
    v19 = v27;
    v20 = v15;
    swift_release(v19);
    objc_msgSend(v12, "updateVolatileData:completion:", v2, v1);

    _Block_release(v1);
    _Block_release(v2);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 104, 31, 32, 1);
    swift_release(v7);
    result = swift_release(v13);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_7:
    swift_once(&qword_1007B4068, sub_1003F3B78);
  }
  return result;
}

uint64_t sub_1003F3AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BF790);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BF790);
  if (qword_1007B3E38 != -1)
    swift_once(&qword_1007B3E38, sub_1002E9DE4);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

NSString sub_1003F3B78()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1007D8440 = (uint64_t)result;
  return result;
}

id sub_1003F3BAC(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t *v6;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint64_t v26;
  _QWORD *v28;
  void *v29;
  NSObject *v31;
  uint64_t v32;

  v6 = &qword_1007B4000;
  if (a3)
  {
    v8 = qword_1007B4060;
    v9 = a3;
    if (v8 != -1)
      swift_once(&qword_1007B4060, sub_1003F3AE8);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007BF790);
    v11 = v9;
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 138412290;
      v31 = v11;
      v29 = a4;
      v15 = v11;
      v6 = &qword_1007B4000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 4);
      *v28 = a3;

      a4 = v29;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing attribution: %@", v14, 0xCu);
      v16 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v28, 1, v16);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

    }
    objc_msgSend(a1, "removeAttribution:", v11, v28);

  }
  if (a4)
  {
    v17 = v6[12];
    v18 = a4;
    if (v17 != -1)
      swift_once(&qword_1007B4060, sub_1003F3AE8);
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007BF790);
    v20 = v18;
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      v31 = v20;
      v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v23 + 4);
      *v24 = a4;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Adding attribution: %@", v23, 0xCu);
      v26 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v24, 1, v26);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {

      v21 = v20;
    }

    objc_msgSend(a1, "addAttribution:", v20);
  }
  return objc_msgSend(a2, "setUserInitiated:", 1);
}

void sub_1003F3F1C(uint64_t a1, void *a2, void *a3)
{
  void (*v4)(id, id);
  id v5;
  id v6;

  v4 = *(void (**)(id, id))(a1 + 32);
  v6 = a2;
  v5 = a3;
  v4(v6, v5);

}

void sub_1003F3F70(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(Strong + 24);
    *(_QWORD *)(Strong + 24) = a2;
    v7 = a2;
    swift_release(v5);

  }
}

uint64_t sub_1003F3FDC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDTempPairingStatusItemController()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDTempPairingStatusItemController);
}

uint64_t sub_1003F4028()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003F4054(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1003F3BAC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1003F405C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F406C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003F407C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003F4084()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F40A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003F40D4()
{
  uint64_t v0;

  sub_1003F3F70(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003F40E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BF850);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BF850);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003F4174(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[162] = v1;
  v2[161] = a1;
  v3 = sub_100008384(&qword_1007B68A0);
  v2[163] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[164] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[165] = v5;
  v2[166] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v2[167] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[168] = swift_task_alloc(v7);
  v2[169] = swift_task_alloc(v7);
  v2[170] = swift_task_alloc(v7);
  return swift_task_switch(sub_1003F423C, v1, 0);
}

uint64_t sub_1003F423C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  const char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t DynamicType;
  Swift::String v46;
  const char *object;
  Swift::String v48;
  uint64_t v49;
  Swift::String v50;
  const char *v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  const char *v92;
  uint64_t v93;
  const char *v94;
  const char *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  const char *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  NSObject *log;
  os_log_t logb;
  os_log_t loga;
  os_log_type_t type;
  _QWORD *typea;
  _QWORD *v181;
  uint64_t *v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186[3];

  v1 = (_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 1296);
  v3 = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  *(_QWORD *)(v0 + 1368) = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  v4 = *(_QWORD *)(v2 + v3);
  if (v4)
  {
    v5 = qword_1007B4070;
    swift_retain();
    if (v5 != -1)
      swift_once(&qword_1007B4070, sub_1003F40E4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007BF850);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Response timer cancelled", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_100008384(&qword_1007B5A60);
    Task.cancel()();
    swift_release(v4);
  }
  sub_1003F78AC(*(_QWORD *)(v0 + 1288), v0 + 96);
  if (*(_QWORD *)(v0 + 120))
  {
    v11 = (_QWORD *)(v0 + 56);
    v12 = (_QWORD *)(v0 + 1096);
    sub_10026EE60((__int128 *)(v0 + 96), v0 + 56);
    if (qword_1007B4070 != -1)
      swift_once(&qword_1007B4070, sub_1003F40E4);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007BF850);
    v14 = sub_100244418(v0 + 56, v0 + 456);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v186[0] = v18;
      *(_DWORD *)v17 = 136315138;
      sub_100244418(v0 + 456, v0 + 136);
      v19 = sub_100008384(&qword_1007B5D40);
      v20 = String.init<A>(describing:)(v0 + 136, v19);
      v22 = (const char *)v21;
      *(_QWORD *)(v0 + 1280) = sub_100228BD8(v20, v21, v186);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1280, v0 + 1288, v17 + 4);
      v23 = v22;
      v12 = (_QWORD *)(v0 + 1096);
      swift_bridgeObjectRelease(v23);
      sub_10022E75C((_QWORD *)(v0 + 456));
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Received input %s)", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      sub_10022E75C((_QWORD *)(v0 + 456));
    }

    v33 = *(_QWORD *)(v0 + 80);
    v34 = sub_10023A834((_QWORD *)(v0 + 56), v33);
    *(_QWORD *)(v0 + 1120) = v33;
    v35 = sub_100244348(v12);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v35, v34, v33);
    sub_1003F7A54((uint64_t)v12);
    v36 = *(_QWORD *)(v0 + 1296);
    sub_10022E75C(v12);
    sub_100244418(v36 + 112, v0 + 376);
    v37 = *(_QWORD *)(v0 + 400);
    v38 = *(_QWORD *)(v0 + 408);
    sub_10023A834((_QWORD *)(v0 + 376), v37);
    v39 = v36 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
    swift_beginAccess(v39, v0 + 1152, 0, 0);
    sub_100244418(v39, v0 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 80))(v0 + 56, v0 + 296, v37, v38);
    sub_10022E75C((_QWORD *)(v0 + 296));
    v1 = (_QWORD *)(v0 + 16);
    sub_10026EE60((__int128 *)(v0 + 336), v0 + 16);
    sub_10022E75C((_QWORD *)(v0 + 376));
  }
  else
  {
    v24 = *(_QWORD **)(v0 + 1296);
    sub_10000D0F0(v0 + 96, (uint64_t *)&unk_1007BFA90);
    v25 = (uint64_t)(v24 + 14);
    v26 = v24[17];
    v27 = v24[18];
    v28 = sub_10023A834(v24 + 14, v26);
    v29 = *(_QWORD *)(v26 - 8);
    v30 = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v29 + 16))(v30, v28, v26);
    LOBYTE(v28) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v26);
    swift_task_dealloc(v30);
    if ((v28 & 1) == 0)
    {
      v186[0] = 0;
      v40 = *(_QWORD *)(v0 + 1296);
      v41 = *(_QWORD *)(v0 + 1288);
      v186[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(70);
      *(_QWORD *)(v0 + 1224) = 0;
      *(_QWORD *)(v0 + 1232) = 0xE000000000000000;
      v42._countAndFlagsBits = 0xD00000000000001CLL;
      v42._object = (void *)0x800000010061A3C0;
      String.append(_:)(v42);
      sub_100244418(v25, v0 + 176);
      v43 = *(_QWORD *)(v0 + 200);
      v44 = sub_10023A834((_QWORD *)(v0 + 176), v43);
      DynamicType = swift_getDynamicType(v44, v43, 1);
      sub_10022E75C((_QWORD *)(v0 + 176));
      v46._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
      object = (const char *)v46._object;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(object);
      v48._object = (void *)0x800000010061A3E0;
      v48._countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v48);
      sub_1003F78AC(v41, v0 + 216);
      v49 = sub_100008384((uint64_t *)&unk_1007BFA90);
      v50._countAndFlagsBits = String.init<A>(describing:)(v0 + 216, v49);
      v51 = (const char *)v50._object;
      String.append(_:)(v50);
      swift_bridgeObjectRelease(v51);
      v52._countAndFlagsBits = 0xD000000000000014;
      v52._object = (void *)0x800000010061A400;
      String.append(_:)(v52);
      v53 = v40 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
      swift_beginAccess(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext, v0 + 1176, 0, 0);
      sub_100244418(v53, v0 + 256);
      v54 = sub_100008384(&qword_1007B5D70);
      _print_unlocked<A, B>(_:_:)(v0 + 256, v0 + 1224, v54, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      sub_10022E75C((_QWORD *)(v0 + 256));
      v55 = *(_QWORD *)(v0 + 1224);
      v56 = *(_QWORD *)(v0 + 1232);
      v57 = sub_100244304();
      v58 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v57, 0, 0);
      *(_DWORD *)v59 = 10;
      *(_QWORD *)(v59 + 8) = v55;
      *(_QWORD *)(v59 + 16) = v56;
      swift_willThrow(v58);
      *(_QWORD *)(v0 + 1256) = v58;
      swift_errorRetain(v58);
      v60 = sub_100008384(&qword_1007B5A60);
      if (swift_dynamicCast(v0 + 1200, v0 + 1256, v60, &type metadata for SFAuthenticationErrorMessage, 0))
      {
        swift_errorRelease(v58);
        v61 = *(const char **)(v0 + 1216);
        sub_1003F6884(*(_DWORD *)(v0 + 1200), *(_QWORD *)(v0 + 1208), v61);
        swift_bridgeObjectRelease(v61);
        swift_errorRelease(*(_QWORD *)(v0 + 1256));
      }
      else
      {
        swift_errorRelease(*(_QWORD *)(v0 + 1256));
        *(_QWORD *)(v0 + 1264) = v58;
        swift_errorRetain(v58);
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast(v0 + 1424, v0 + 1264, v60, v62, 0))
        {
          swift_errorRelease(v58);
          sub_1003F6884(*(_DWORD *)(v0 + 1424), 0, (const char *)0xE000000000000000);
          swift_errorRelease(*(_QWORD *)(v0 + 1264));
        }
        else
        {
          swift_errorRelease(*(_QWORD *)(v0 + 1264));
          *(_QWORD *)(v0 + 1240) = 0;
          *(_QWORD *)(v0 + 1248) = 0xE000000000000000;
          *(_QWORD *)(v0 + 1272) = v58;
          _print_unlocked<A, B>(_:_:)(v0 + 1272, v0 + 1240, v60, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v63 = *(const char **)(v0 + 1248);
          sub_1003F6884(0xAu, *(_QWORD *)(v0 + 1240), v63);
          swift_bridgeObjectRelease(v63);
          swift_errorRelease(v58);
        }
      }
LABEL_41:
      v167 = *(_QWORD *)(v0 + 1352);
      v168 = *(_QWORD *)(v0 + 1344);
      v169 = *(_QWORD *)(v0 + 1328);
      v170 = *(_QWORD *)(v0 + 1304);
      swift_task_dealloc(*(_QWORD *)(v0 + 1360));
      swift_task_dealloc(v167);
      swift_task_dealloc(v168);
      swift_task_dealloc(v169);
      swift_task_dealloc(v170);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = (_QWORD *)(v0 + 576);
    sub_100244418(v25, v0 + 576);
    v31 = *(_QWORD *)(v0 + 600);
    v32 = *(_QWORD *)(v0 + 608);
    sub_10023A834((_QWORD *)(v0 + 576), v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 72))(v31, v32);
  }
  sub_10022E75C(v11);
  v64 = *(_QWORD *)(v0 + 40);
  v65 = *(_QWORD *)(v0 + 48);
  sub_10023A834(v1, v64);
  v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
  *(_QWORD *)(v0 + 1376) = v66;
  v67 = *(_QWORD *)(v66 + 16);
  *(_QWORD *)(v0 + 1384) = v67;
  if (!v67)
  {
    swift_bridgeObjectRelease((const char *)v66);
    v103 = *(_QWORD **)(v0 + 1296);
    v104 = (_QWORD *)((char *)v103 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
    swift_beginAccess((char *)v103 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext, v0 + 1128, 33, 0);
    sub_10023D490(v104, v1);
    swift_endAccess(v0 + 1128);
    v105 = v103 + 14;
    v106 = v103[17];
    v107 = v103[18];
    v108 = sub_10023A834(v105, v106);
    v109 = *(_QWORD *)(v106 - 8);
    v110 = swift_task_alloc((*(_QWORD *)(v109 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v109 + 16))(v110, v108, v106);
    (*(void (**)(uint64_t, uint64_t))(v107 + 24))(v106, v107);
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v110, v106);
    swift_task_dealloc(v110);
    sub_100244418((uint64_t)v1, v0 + 856);
    v111 = sub_100008384(&qword_1007B5D70);
    v112 = sub_100008384(&qword_1007BFAA0);
    if ((swift_dynamicCast(v0 + 896, v0 + 856, v111, v112, 6) & 1) != 0)
    {
      v113 = *(_QWORD *)(v0 + 1344);
      sub_10026EE60((__int128 *)(v0 + 896), v0 + 816);
      sub_100244418(v113, v0 + 496);
      v182 = sub_10023A834((_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 520));
      v114 = *(_QWORD *)(v0 + 840);
      v115 = *(_QWORD *)(v0 + 848);
      sub_10026EEE8(v0 + 816, v114);
      v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8))(v114, v115);
      v117 = *(_QWORD **)(v0 + 1344);
      v129 = v116;
      v131 = v130;
      loga = *(os_log_t *)(v0 + 1336);
      typea = v117 + 5;
      v132 = *(_QWORD *)(v0 + 840);
      v185 = v1;
      v133 = *(_QWORD *)(v0 + 848);
      sub_10023A834((_QWORD *)(v0 + 816), v132);
      v175 = (*(uint64_t (**)(uint64_t, uint64_t))(v133 + 16))(v132, v133);
      v134 = *(_QWORD *)((char *)v117 + SHIDWORD(loga[3].isa));
      v135 = *v182;
      v136 = v117[8];
      v137 = v117[9];
      v138 = sub_10023A834(typea, v136);
      v139 = v135;
      v1 = v185;
      sub_10056A0EC(v129, v131, (uint64_t)v138, v175, v134, v139, v136, v137);
      sub_100225AB4(v129, v131);
      sub_10022E75C((_QWORD *)(v0 + 496));
      sub_10022E75C((_QWORD *)(v0 + 816));
    }
    else
    {
      *(_QWORD *)(v0 + 928) = 0;
      *(_OWORD *)(v0 + 896) = 0u;
      *(_OWORD *)(v0 + 912) = 0u;
      sub_10000D0F0(v0 + 896, &qword_1007BFAA8);
    }
    sub_100244418((uint64_t)v1, v0 + 936);
    v140 = sub_100008384(&qword_1007BFAB0);
    if (swift_dynamicCast(v0 + 976, v0 + 936, v111, v140, 6))
    {
      v141 = *(_QWORD **)(v0 + 1344);
      v142 = *(_QWORD *)(v0 + 1336);
      sub_10000D0F0(v0 + 976, &qword_1007BFAB8);
      sub_10023A834(v141, v141[3]);
      v143 = (uint64_t)v141 + *(int *)(v142 + 24);
    }
    else
    {
      *(_QWORD *)(v0 + 1008) = 0;
      *(_OWORD *)(v0 + 976) = 0u;
      *(_OWORD *)(v0 + 992) = 0u;
      sub_10000D0F0(v0 + 976, &qword_1007BFAB8);
      sub_100244418((uint64_t)v1, v0 + 1016);
      v144 = sub_100008384(&qword_1007BFAC0);
      if ((swift_dynamicCast(v0 + 1056, v0 + 1016, v111, v144, 6) & 1) == 0)
      {
        *(_QWORD *)(v0 + 1088) = 0;
        *(_OWORD *)(v0 + 1056) = 0u;
        *(_OWORD *)(v0 + 1072) = 0u;
        sub_10000D0F0(v0 + 1056, &qword_1007BFAC8);
        goto LABEL_37;
      }
      v145 = *(_QWORD **)(v0 + 1344);
      v146 = *(_QWORD *)(v0 + 1336);
      sub_10000D0F0(v0 + 1056, &qword_1007BFAC8);
      sub_10023A834(v145, v145[3]);
      v143 = (uint64_t)v145 + *(int *)(v146 + 24);
    }
    sub_100560D38(v143);
LABEL_37:
    sub_100244418((uint64_t)v1, v0 + 776);
    v147 = sub_100008384(&qword_1007BFAD0);
    v148 = swift_dynamicCast(v0 + 536, v0 + 776, v111, v147, 6);
    v149 = *(_QWORD *)(v0 + 1368);
    v150 = *(_QWORD *)(v0 + 1344);
    v151 = *(_QWORD *)(v0 + 1304);
    v152 = *(_QWORD *)(v0 + 1296);
    if (v148)
    {
      sub_10026EE60((__int128 *)(v0 + 536), v0 + 416);
      v153 = sub_10023A834((_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 440));
      v154 = *(_DWORD *)((char *)v153 + *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 28));
      v155 = *(_QWORD *)(v152 + 152);
      v156 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v151, 1, 1, v156);
      v157 = swift_allocObject(&unk_100727BA0, 24, 7);
      swift_weakInit(v157 + 16, v152);
      v158 = swift_allocObject(&unk_100727BF0, 52, 7);
      *(_QWORD *)(v158 + 16) = 0;
      *(_QWORD *)(v158 + 24) = 0;
      *(_QWORD *)(v158 + 32) = v155;
      *(_QWORD *)(v158 + 40) = v157;
      *(_DWORD *)(v158 + 48) = v154;
      v159 = sub_100252AF4(v151, (uint64_t)&unk_1007BFAF0, v158);
      v160 = *(_QWORD *)(v152 + v149);
      *(_QWORD *)(v152 + v149) = v159;
      swift_release(v160);
      sub_1003F7870(v150);
      sub_10022E75C((_QWORD *)(v0 + 416));
    }
    else
    {
      *(_QWORD *)(v0 + 568) = 0;
      *(_OWORD *)(v0 + 536) = 0u;
      *(_OWORD *)(v0 + 552) = 0u;
      sub_10000D0F0(v0 + 536, &qword_1007BFAD8);
      v161 = *(_QWORD *)(v152 + 152);
      v162 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v151, 1, 1, v162);
      v163 = swift_allocObject(&unk_100727BA0, 24, 7);
      swift_weakInit(v163 + 16, v152);
      v164 = swift_allocObject(&unk_100727BC8, 52, 7);
      *(_QWORD *)(v164 + 16) = 0;
      *(_QWORD *)(v164 + 24) = 0;
      *(_QWORD *)(v164 + 32) = v161;
      *(_QWORD *)(v164 + 40) = v163;
      *(_DWORD *)(v164 + 48) = 12;
      v165 = sub_100252AF4(v151, (uint64_t)&unk_1007BFAE8, v164);
      v166 = *(_QWORD *)(v152 + v149);
      *(_QWORD *)(v152 + v149) = v165;
      swift_release(v166);
      sub_1003F7870(v150);
    }
    sub_10022E75C(v1);
    goto LABEL_41;
  }
  *(_QWORD *)(v0 + 1392) = 0;
  v181 = (_QWORD *)(v0 + 616);
  sub_100244418(v66 + 32, v0 + 616);
  if (qword_1007B4070 != -1)
    swift_once(&qword_1007B4070, sub_1003F40E4);
  v68 = *(_QWORD *)(v0 + 1296);
  v69 = type metadata accessor for Logger(0);
  sub_100221DF8(v69, (uint64_t)qword_1007BF850);
  sub_100244418((uint64_t)v181, v0 + 656);
  v70 = swift_retain_n(v68, 2);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter(v71);
  if (os_log_type_enabled(v71, v72))
  {
    v73 = *(_QWORD *)(v0 + 1360);
    type = v72;
    v74 = *(_QWORD *)(v0 + 1328);
    v171 = *(_QWORD *)(v0 + 1320);
    v172 = *(_QWORD *)(v0 + 1336);
    v173 = *(_QWORD *)(v0 + 1312);
    v183 = v1;
    v75 = *(_QWORD **)(v0 + 1296);
    log = v71;
    v76 = swift_slowAlloc(22, -1);
    v174 = swift_slowAlloc(64, -1);
    v186[0] = v174;
    *(_DWORD *)v76 = 136315394;
    v77 = v75[17];
    v78 = v75[18];
    v79 = sub_10023A834(v75 + 14, v77);
    v80 = *(_QWORD *)(v77 - 8);
    v81 = swift_task_alloc((*(_QWORD *)(v80 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v80 + 16))(v81, v79, v77);
    (*(void (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v77);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 16))(v74, v73 + *(int *)(v172 + 24), v173);
    v82 = sub_1003F7870(v73);
    v83 = UUID.uuidString.getter(v82);
    v85 = v84;
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v74, v173);
    v86 = sub_1004312F0(8, v83, (unint64_t)v85);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    swift_bridgeObjectRelease(v85);
    swift_task_dealloc(v81);
    v93 = static String._fromSubstring(_:)(v86, v88, v90, v92);
    v95 = v94;
    swift_bridgeObjectRelease(v92);
    *(_QWORD *)(v76 + 4) = sub_100228BD8(v93, (unint64_t)v95, v186);
    v96 = v75;
    v1 = v183;
    swift_release_n(v96, 2);
    swift_bridgeObjectRelease(v95);
    *(_WORD *)(v76 + 12) = 2080;
    v97 = *(_QWORD *)(v0 + 680);
    v98 = sub_10023A834((_QWORD *)(v0 + 656), v97);
    v99 = swift_getDynamicType(v98, v97, 1);
    v100 = _typeName(_:qualified:)(v99, 0);
    v102 = (const char *)v101;
    *(_QWORD *)(v76 + 14) = sub_100228BD8(v100, v101, v186);
    swift_bridgeObjectRelease(v102);
    sub_10022E75C((_QWORD *)(v0 + 656));
    v71 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s: Running step: %s", (uint8_t *)v76, 0x16u);
    swift_arrayDestroy(v174, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v174, -1, -1);
    swift_slowDealloc(v76, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 1296), 2);
    sub_10022E75C((_QWORD *)(v0 + 656));
  }

  v118 = *(_QWORD **)(v0 + 1296);
  v119 = v118 + 14;
  sub_100244418((uint64_t)v1, v0 + 696);
  v120 = *(_QWORD *)(v0 + 720);
  logb = (os_log_t)sub_10023A834((_QWORD *)(v0 + 696), v120);
  v121 = *(_QWORD *)(v0 + 640);
  v184 = *(_QWORD *)(v0 + 648);
  v122 = sub_10023A834(v181, v121);
  v123 = v118[17];
  v124 = v118[18];
  sub_10023A834(v119, v123);
  v125 = *(_QWORD *)(v123 - 8);
  v126 = swift_task_alloc((*(_QWORD *)(v125 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 1400) = v126;
  (*(void (**)(void))(v125 + 16))();
  (*(void (**)(uint64_t, uint64_t))(v124 + 24))(v123, v124);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v123);
  v127 = (_QWORD *)swift_task_alloc(dword_1007BF8CC);
  *(_QWORD *)(v0 + 1408) = v127;
  *v127 = v0;
  v127[1] = sub_1003F5414;
  return sub_1003F662C(v0 + 736, (uint64_t)logb, (uint64_t)v122, *(_QWORD *)(v0 + 1352), v121, v120, v184);
}

uint64_t sub_1003F5414()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t (*v7)();
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1408);
  *(_QWORD *)(*(_QWORD *)v1 + 1416) = v0;
  swift_task_dealloc(v3);
  v4 = v2[169];
  v5 = v2[162];
  if (v0)
  {
    v6 = (const char *)v2[172];
    sub_1003F7870(v4);
    swift_bridgeObjectRelease(v6);
    v7 = sub_1003F6048;
  }
  else
  {
    v8 = v2[175];
    sub_1003F7870(v4);
    swift_task_dealloc(v8);
    v7 = sub_1003F54A8;
  }
  return swift_task_switch(v7, v5, 0);
}

uint64_t sub_1003F54A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  const char *v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t DynamicType;
  uint64_t v58;
  unint64_t v59;
  const char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  unsigned int v120;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  _QWORD *typea;
  _QWORD *typeb;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128[2];

  v1 = v0 + 16;
  v2 = (_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 1384);
  v4 = *(_QWORD *)(v0 + 1392) + 1;
  sub_10022E75C((_QWORD *)(v0 + 16));
  sub_10026EE60((__int128 *)(v0 + 736), v0 + 16);
  sub_10022E75C((_QWORD *)(v0 + 696));
  sub_10022E75C((_QWORD *)(v0 + 616));
  if (v4 == v3)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 1376));
    v5 = *(_QWORD *)(v0 + 1416);
    v6 = *(_QWORD **)(v0 + 1296);
    v7 = (_QWORD *)((char *)v6 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
    swift_beginAccess((char *)v6 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext, v0 + 1128, 33, 0);
    sub_10023D490(v7, (_QWORD *)(v0 + 16));
    swift_endAccess(v0 + 1128);
    v8 = v6 + 14;
    v9 = v6[17];
    v10 = v6[18];
    v11 = sub_10023A834(v8, v9);
    v12 = *(_QWORD *)(v9 - 8);
    v13 = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v12 + 16))(v13, v11, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v9);
    v14 = v13;
    v15 = (_QWORD *)(v0 + 16);
    swift_task_dealloc(v14);
    sub_100244418(v0 + 16, v0 + 856);
    v16 = sub_100008384(&qword_1007B5D70);
    v17 = sub_100008384(&qword_1007BFAA0);
    if ((swift_dynamicCast(v0 + 896, v0 + 856, v16, v17, 6) & 1) != 0)
    {
      v18 = *(_QWORD *)(v0 + 1344);
      sub_10026EE60((__int128 *)(v0 + 896), v0 + 816);
      sub_100244418(v18, v0 + 496);
      v126 = sub_10023A834((_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 520));
      v19 = *(_QWORD *)(v0 + 840);
      v20 = *(_QWORD *)(v0 + 848);
      sub_10026EEE8(v0 + 816, v19);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      v23 = *(_QWORD **)(v0 + 1344);
      if (v5)
      {
        sub_1003F7870(*(_QWORD *)(v0 + 1344));
        sub_10022E75C((_QWORD *)(v0 + 496));
        sub_10022E75C((_QWORD *)(v0 + 816));
        sub_10022E75C(v15);
        *(_QWORD *)(v0 + 1256) = v5;
        swift_errorRetain(v5);
        v24 = sub_100008384(&qword_1007B5A60);
        if ((swift_dynamicCast(v0 + 1200, v0 + 1256, v24, &type metadata for SFAuthenticationErrorMessage, 0) & 1) != 0)
        {
          swift_errorRelease(v5);
          v25 = *(const char **)(v0 + 1216);
          sub_1003F6884(*(_DWORD *)(v0 + 1200), *(_QWORD *)(v0 + 1208), v25);
          swift_bridgeObjectRelease(v25);
          swift_errorRelease(*(_QWORD *)(v0 + 1256));
        }
        else
        {
          swift_errorRelease(*(_QWORD *)(v0 + 1256));
          *(_QWORD *)(v0 + 1264) = v5;
          swift_errorRetain(v5);
          type metadata accessor for SFAuthenticationError(0);
          if (swift_dynamicCast(v0 + 1424, v0 + 1264, v24, v112, 0))
          {
            swift_errorRelease(v5);
            sub_1003F6884(*(_DWORD *)(v0 + 1424), 0, (const char *)0xE000000000000000);
            swift_errorRelease(*(_QWORD *)(v0 + 1264));
          }
          else
          {
            swift_errorRelease(*(_QWORD *)(v0 + 1264));
            *(_QWORD *)(v0 + 1240) = 0;
            *(_QWORD *)(v0 + 1248) = 0xE000000000000000;
            *(_QWORD *)(v0 + 1272) = v5;
            _print_unlocked<A, B>(_:_:)(v0 + 1272, v0 + 1240, v24, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            v113 = *(const char **)(v0 + 1248);
            sub_1003F6884(0xAu, *(_QWORD *)(v0 + 1240), v113);
            swift_bridgeObjectRelease(v113);
            swift_errorRelease(v5);
          }
        }
LABEL_24:
        v108 = *(_QWORD *)(v0 + 1352);
        v109 = *(_QWORD *)(v0 + 1344);
        v110 = *(_QWORD *)(v0 + 1328);
        v111 = *(_QWORD *)(v0 + 1304);
        swift_task_dealloc(*(_QWORD *)(v0 + 1360));
        swift_task_dealloc(v108);
        swift_task_dealloc(v109);
        swift_task_dealloc(v110);
        swift_task_dealloc(v111);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v71 = v21;
      v72 = v22;
      loga = *(os_log_t *)(v0 + 1336);
      typeb = v23 + 5;
      v73 = *(_QWORD *)(v0 + 840);
      v74 = *(_QWORD *)(v0 + 848);
      sub_10023A834((_QWORD *)(v0 + 816), v73);
      v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
      v75 = *(_QWORD *)((char *)v23 + SHIDWORD(loga[3].isa));
      v76 = *v126;
      v77 = v23[8];
      v78 = v23[9];
      v79 = sub_10023A834(typeb, v77);
      v80 = v76;
      v15 = (_QWORD *)(v0 + 16);
      sub_10056A0EC(v71, v72, (uint64_t)v79, v120, v75, v80, v77, v78);
      sub_100225AB4(v71, v72);
      sub_10022E75C((_QWORD *)(v0 + 496));
      sub_10022E75C((_QWORD *)(v0 + 816));
    }
    else
    {
      *(_QWORD *)(v0 + 928) = 0;
      *(_OWORD *)(v0 + 896) = 0u;
      *(_OWORD *)(v0 + 912) = 0u;
      sub_10000D0F0(v0 + 896, &qword_1007BFAA8);
    }
    sub_100244418((uint64_t)v15, v0 + 936);
    v81 = sub_100008384(&qword_1007BFAB0);
    if (swift_dynamicCast(v0 + 976, v0 + 936, v16, v81, 6))
    {
      v82 = *(_QWORD **)(v0 + 1344);
      v83 = *(_QWORD *)(v0 + 1336);
      sub_10000D0F0(v0 + 976, &qword_1007BFAB8);
      sub_10023A834(v82, v82[3]);
      v84 = (uint64_t)v82 + *(int *)(v83 + 24);
    }
    else
    {
      *(_QWORD *)(v0 + 1008) = 0;
      *(_OWORD *)(v0 + 976) = 0u;
      *(_OWORD *)(v0 + 992) = 0u;
      sub_10000D0F0(v0 + 976, &qword_1007BFAB8);
      sub_100244418((uint64_t)v15, v0 + 1016);
      v85 = sub_100008384(&qword_1007BFAC0);
      if ((swift_dynamicCast(v0 + 1056, v0 + 1016, v16, v85, 6) & 1) == 0)
      {
        *(_QWORD *)(v0 + 1088) = 0;
        *(_OWORD *)(v0 + 1056) = 0u;
        *(_OWORD *)(v0 + 1072) = 0u;
        sub_10000D0F0(v0 + 1056, &qword_1007BFAC8);
        goto LABEL_20;
      }
      v86 = *(_QWORD **)(v0 + 1344);
      v87 = *(_QWORD *)(v0 + 1336);
      sub_10000D0F0(v0 + 1056, &qword_1007BFAC8);
      sub_10023A834(v86, v86[3]);
      v84 = (uint64_t)v86 + *(int *)(v87 + 24);
    }
    sub_100560D38(v84);
LABEL_20:
    sub_100244418((uint64_t)v15, v0 + 776);
    v88 = sub_100008384(&qword_1007BFAD0);
    v89 = swift_dynamicCast(v0 + 536, v0 + 776, v16, v88, 6);
    v90 = *(_QWORD *)(v0 + 1368);
    v91 = *(_QWORD *)(v0 + 1344);
    v92 = *(_QWORD *)(v0 + 1304);
    v93 = *(_QWORD *)(v0 + 1296);
    if (v89)
    {
      sub_10026EE60((__int128 *)(v0 + 536), v0 + 416);
      v94 = sub_10023A834((_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 440));
      v95 = *(_DWORD *)((char *)v94 + *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 28));
      v96 = *(_QWORD *)(v93 + 152);
      v97 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v92, 1, 1, v97);
      v98 = swift_allocObject(&unk_100727BA0, 24, 7);
      swift_weakInit(v98 + 16, v93);
      v99 = swift_allocObject(&unk_100727BF0, 52, 7);
      *(_QWORD *)(v99 + 16) = 0;
      *(_QWORD *)(v99 + 24) = 0;
      *(_QWORD *)(v99 + 32) = v96;
      *(_QWORD *)(v99 + 40) = v98;
      *(_DWORD *)(v99 + 48) = v95;
      v100 = sub_100252AF4(v92, (uint64_t)&unk_1007BFAF0, v99);
      v101 = *(_QWORD *)(v93 + v90);
      *(_QWORD *)(v93 + v90) = v100;
      swift_release(v101);
      sub_1003F7870(v91);
      sub_10022E75C((_QWORD *)(v0 + 416));
    }
    else
    {
      *(_QWORD *)(v0 + 568) = 0;
      *(_OWORD *)(v0 + 536) = 0u;
      *(_OWORD *)(v0 + 552) = 0u;
      sub_10000D0F0(v0 + 536, &qword_1007BFAD8);
      v102 = *(_QWORD *)(v93 + 152);
      v103 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v92, 1, 1, v103);
      v104 = swift_allocObject(&unk_100727BA0, 24, 7);
      swift_weakInit(v104 + 16, v93);
      v105 = swift_allocObject(&unk_100727BC8, 52, 7);
      *(_QWORD *)(v105 + 16) = 0;
      *(_QWORD *)(v105 + 24) = 0;
      *(_QWORD *)(v105 + 32) = v102;
      *(_QWORD *)(v105 + 40) = v104;
      *(_DWORD *)(v105 + 48) = 12;
      v106 = sub_100252AF4(v92, (uint64_t)&unk_1007BFAE8, v105);
      v107 = *(_QWORD *)(v93 + v90);
      *(_QWORD *)(v93 + v90) = v106;
      swift_release(v107);
      sub_1003F7870(v91);
    }
    sub_10022E75C(v15);
    goto LABEL_24;
  }
  v26 = *(_QWORD *)(v0 + 1392) + 1;
  *(_QWORD *)(v0 + 1392) = v26;
  sub_100244418(*(_QWORD *)(v0 + 1376) + 40 * v26 + 32, v0 + 616);
  if (qword_1007B4070 != -1)
    swift_once(&qword_1007B4070, sub_1003F40E4);
  v27 = *(_QWORD *)(v0 + 1296);
  v28 = type metadata accessor for Logger(0);
  sub_100221DF8(v28, (uint64_t)qword_1007BF850);
  sub_100244418(v0 + 616, v0 + 656);
  v29 = swift_retain_n(v27, 2);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    type = v31;
    v32 = *(_QWORD *)(v0 + 1360);
    v33 = *(_QWORD *)(v0 + 1328);
    v114 = *(_QWORD *)(v0 + 1320);
    v115 = *(_QWORD *)(v0 + 1336);
    v116 = *(_QWORD *)(v0 + 1312);
    v34 = *(_QWORD **)(v0 + 1296);
    log = v30;
    v117 = swift_slowAlloc(22, -1);
    v119 = swift_slowAlloc(64, -1);
    v128[0] = v119;
    *(_DWORD *)v117 = 136315394;
    v118 = v34;
    v35 = v34[17];
    v36 = v34[18];
    v37 = sub_10023A834(v34 + 14, v35);
    v38 = *(_QWORD *)(v35 - 8);
    v39 = swift_task_alloc((*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v38 + 16))(v39, v37, v35);
    (*(void (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
    v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v2 = (_QWORD *)(v0 + 696);
    v40(v39, v35);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16))(v33, v32 + *(int *)(v115 + 24), v116);
    v41 = sub_1003F7870(v32);
    v42 = UUID.uuidString.getter(v41);
    v44 = v43;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v33, v116);
    v45 = sub_1004312F0(8, v42, (unint64_t)v44);
    v47 = v46;
    v49 = v48;
    v51 = v50;
    swift_bridgeObjectRelease(v44);
    swift_task_dealloc(v39);
    v52 = static String._fromSubstring(_:)(v45, v47, v49, v51);
    v54 = v53;
    swift_bridgeObjectRelease(v51);
    *(_QWORD *)(v117 + 4) = sub_100228BD8(v52, (unint64_t)v54, v128);
    v1 = v0 + 16;
    swift_release_n(v118, 2);
    swift_bridgeObjectRelease(v54);
    *(_WORD *)(v117 + 12) = 2080;
    v55 = *(_QWORD *)(v0 + 680);
    v56 = sub_10023A834((_QWORD *)(v0 + 656), v55);
    DynamicType = swift_getDynamicType(v56, v55, 1);
    v58 = _typeName(_:qualified:)(DynamicType, 0);
    v60 = (const char *)v59;
    *(_QWORD *)(v117 + 14) = sub_100228BD8(v58, v59, v128);
    swift_bridgeObjectRelease(v60);
    sub_10022E75C((_QWORD *)(v0 + 656));
    v30 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s: Running step: %s", (uint8_t *)v117, 0x16u);
    swift_arrayDestroy(v119, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v119, -1, -1);
    swift_slowDealloc(v117, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 1296), 2);
    sub_10022E75C((_QWORD *)(v0 + 656));
  }

  v61 = *(_QWORD **)(v0 + 1296);
  sub_100244418(v1, (uint64_t)v2);
  v62 = *(_QWORD *)(v0 + 720);
  typea = sub_10023A834(v2, v62);
  v63 = *(_QWORD *)(v0 + 640);
  v127 = *(_QWORD *)(v0 + 648);
  v64 = sub_10023A834((_QWORD *)(v0 + 616), v63);
  v65 = v61[17];
  v66 = v61[18];
  sub_10023A834(v61 + 14, v65);
  v67 = *(_QWORD *)(v65 - 8);
  v68 = swift_task_alloc((*(_QWORD *)(v67 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 1400) = v68;
  (*(void (**)(void))(v67 + 16))();
  (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v65, v66);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v65);
  v69 = (_QWORD *)swift_task_alloc(dword_1007BF8CC);
  *(_QWORD *)(v0 + 1408) = v69;
  *v69 = v0;
  v69[1] = sub_1003F5414;
  return sub_1003F662C(v0 + 736, (uint64_t)typea, (uint64_t)v64, *(_QWORD *)(v0 + 1352), v63, v62, v127);
}

uint64_t sub_1003F6048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_task_dealloc(*(_QWORD *)(v0 + 1400));
  sub_10022E75C((_QWORD *)(v0 + 696));
  sub_10022E75C((_QWORD *)(v0 + 616));
  sub_10022E75C((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 1416);
  *(_QWORD *)(v0 + 1256) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v0 + 1200, v0 + 1256, v2, &type metadata for SFAuthenticationErrorMessage, 0) & 1) != 0)
  {
    swift_errorRelease(v1);
    v3 = *(const char **)(v0 + 1216);
    sub_1003F6884(*(_DWORD *)(v0 + 1200), *(_QWORD *)(v0 + 1208), v3);
    swift_bridgeObjectRelease(v3);
    v4 = *(_QWORD *)(v0 + 1256);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 1256));
    *(_QWORD *)(v0 + 1264) = v1;
    swift_errorRetain(v1);
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast(v0 + 1424, v0 + 1264, v2, v5, 0))
    {
      swift_errorRelease(v1);
      sub_1003F6884(*(_DWORD *)(v0 + 1424), 0, (const char *)0xE000000000000000);
      v4 = *(_QWORD *)(v0 + 1264);
    }
    else
    {
      swift_errorRelease(*(_QWORD *)(v0 + 1264));
      *(_QWORD *)(v0 + 1240) = 0;
      *(_QWORD *)(v0 + 1248) = 0xE000000000000000;
      *(_QWORD *)(v0 + 1272) = v1;
      _print_unlocked<A, B>(_:_:)(v0 + 1272, v0 + 1240, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v6 = *(const char **)(v0 + 1248);
      sub_1003F6884(0xAu, *(_QWORD *)(v0 + 1240), v6);
      swift_bridgeObjectRelease(v6);
      v4 = v1;
    }
  }
  swift_errorRelease(v4);
  v7 = *(_QWORD *)(v0 + 1352);
  v8 = *(_QWORD *)(v0 + 1344);
  v9 = *(_QWORD *)(v0 + 1328);
  v10 = *(_QWORD *)(v0 + 1304);
  swift_task_dealloc(*(_QWORD *)(v0 + 1360));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F6224()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  int v42;
  __int128 v43[2];
  uint64_t v44;
  char v45[24];
  uint64_t v46;
  uint64_t v47[4];
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4070 != -1)
    swift_once(&qword_1007B4070, sub_1003F40E4);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007BF850);
  v10 = swift_retain_n(v0, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v42 = v13;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v41 = v15;
    v37 = v2;
    v40 = v14;
    *(_DWORD *)v14 = 136315138;
    v48[0] = v15;
    v39 = v14 + 4;
    v36 = v6;
    v16 = v1[17];
    v17 = v1[18];
    v18 = sub_10023A834(v1 + 14, v16);
    v38 = &v35;
    v19 = *(_QWORD *)(v16 - 8);
    __chkstk_darwin(v18);
    v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v16);
    v22 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v8, &v4[*(int *)(v37 + 24)], v5);
    sub_1003F7870((uint64_t)v4);
    v23 = sub_1003BB2C0();
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v5, v23);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    v46 = sub_100228BD8(v24, (unint64_t)v26, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v39);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v26);
    v27 = v40;
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v42, "Invalidating session %s", v40, 0xCu);
    v28 = v41;
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v29 = (uint64_t)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess(v29, v45, 0, 0);
  sub_100244418(v29, (uint64_t)&v46);
  v30 = sub_100008384(&qword_1007B5D70);
  v31 = sub_100008384(&qword_1007BFA80);
  if ((swift_dynamicCast(v43, &v46, v30, v31, 6) & 1) != 0)
  {
    sub_10026EE60(v43, (uint64_t)v48);
    v32 = v49;
    v33 = v50;
    sub_10023A834(v48, v49);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v33 + 16))(&v46, v32, v33);
    sub_10023A834(&v46, v47[2]);
    sub_10036541C();
    sub_10022E75C(&v46);
    return sub_10022E75C(v48);
  }
  else
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    return sub_10000D0F0((uint64_t)v43, &qword_1007BFA88);
  }
}

uint64_t sub_1003F662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a7);
  v8[10] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[11] = v11;
  v8[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a6 - 8);
  v8[13] = v12;
  v8[14] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003F66D4, v7, 0);
}

uint64_t sub_1003F66D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v9;

  v1 = v0[14];
  v2 = v0[12];
  v3 = v0[10];
  v4 = v0[7];
  v5 = v0[8];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[13] + 16))(v1, v0[3], v4);
  swift_dynamicCast(v2, v1, v4, v3, 7);
  v6 = *(int **)(v5 + 16);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_1003F678C;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v9)(v0[2], v0[12], v0[5], v0[6], v0[8]);
}

uint64_t sub_1003F678C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 120);
  v3 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1003F6830, *(_QWORD *)(v3 + 72), 0);
  v5 = *(_QWORD *)(v3 + 112);
  v6 = *(_QWORD *)(v3 + 96);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 88) + 8))(v6, *(_QWORD *)(v3 + 80));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1003F6830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v2, *(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F6884(unsigned int a1, uint64_t a2, const char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  NSString v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t *v47;
  NSObject *v48;
  int v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t v122;
  char *v123;
  const char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  _QWORD v131[3];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE v135[16];
  uint64_t v136;

  v4 = v3;
  v130 = a1;
  v7 = type metadata accessor for UUID(0);
  v128 = *(_QWORD *)(v7 - 8);
  v129 = v7;
  __chkstk_darwin(v7);
  v127 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v9 = __chkstk_darwin(v126);
  v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v117 - v12;
  v14 = v3 + 14;
  v15 = v3[17];
  v16 = v3[18];
  v17 = sub_10023A834(v3 + 14, v15);
  v18 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v20);
  LOBYTE(v16) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
  if ((v16 & 1) != 0)
    goto LABEL_22;
  v122 = a2;
  v21 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationResponse), "init");
  v22 = v21;
  v123 = v11;
  v124 = a3;
  v125 = v13;
  if (v21)
  {
    objc_msgSend(v21, "setVersion:", 1);
    v23 = v22;
    v24 = v4[17];
    v25 = v4[18];
    v26 = sub_10023A834(v14, v24);
    v121 = &v117;
    v27 = *(_QWORD *)(v24 - 8);
    __chkstk_darwin(v26);
    v29 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v29);
    v30 = *(void (**)(_QWORD, _QWORD))(v25 + 24);
    v31 = v23;
    v30(v24, v25);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v24);
    v32 = v127;
    v33 = &v13[*(int *)(v126 + 24)];
    v35 = v128;
    v34 = v129;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v127, v33, v129);
    v36 = sub_1003F7870((uint64_t)v125);
    UUID.uuidString.getter(v36);
    v38 = v37;
    v39 = *(void (**)(_QWORD, _QWORD))(v35 + 8);
    v22 = v23;
    v40 = v32;
    v11 = v123;
    v41 = v34;
    v13 = v125;
    v39(v40, v41);
    v42 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v38).n128_u64[0];
    a3 = v124;
    objc_msgSend(v31, "setSessionID:", v42, v43);

    objc_msgSend(v31, "setErrorCode:", v130);
  }
  if (qword_1007B4070 != -1)
    swift_once(&qword_1007B4070, sub_1003F40E4);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_100221DF8(v44, (uint64_t)qword_1007BF850);
  v46 = v22;
  swift_bridgeObjectRetain_n(a3, 2);
  v47 = (uint64_t *)v46;
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter(v48);
  if (os_log_type_enabled(v48, (os_log_type_t)v49))
  {
    LODWORD(v118) = v49;
    v119 = v45;
    v121 = v47;
    v120 = v14;
    v50 = swift_slowAlloc(22, -1);
    v51 = (uint64_t *)swift_slowAlloc(16, -1);
    *(_DWORD *)v50 = 138412546;
    v52 = sub_100244304();
    v53 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v52, 0, 0);
    *(_DWORD *)v54 = v130;
    *(_QWORD *)(v54 + 8) = v122;
    *(_QWORD *)(v54 + 16) = a3;
    swift_bridgeObjectRetain(a3);
    v55 = _swift_stdlib_bridgeErrorToNSError(v53);
    v134 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v50 + 4);
    *v51 = v55;
    swift_bridgeObjectRelease_n(a3, 2);
    *(_WORD *)(v50 + 12) = 2112;
    if (v22)
    {
      v47 = v121;
      v134 = (uint64_t)v121;
      v56 = v121;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v50 + 14);
      v57 = (uint64_t)v22;
    }
    else
    {
      v134 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v50 + 14);
      v57 = 0;
      v22 = 0;
      v47 = v121;
    }
    v51[1] = v57;

    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v118, "Reporting error %@ to remote device as %@", (uint8_t *)v50, 0x16u);
    v58 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v51, 2, v58);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    v11 = v123;
    a3 = v124;
    v14 = v120;
    v13 = v125;
    if (v22)
    {
LABEL_13:
      v59 = objc_msgSend(v47, "data");
      if (v59)
      {
        v60 = v59;
        v119 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v59);
        v118 = v61;

        v62 = v4[17];
        v63 = v4[18];
        v64 = sub_10023A834(v14, v62);
        v120 = &v117;
        v65 = v14;
        v66 = *(_QWORD *)(v62 - 8);
        __chkstk_darwin(v64);
        v68 = (char *)&v117 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v66 + 16))(v68);
        (*(void (**)(uint64_t, uint64_t))(v63 + 24))(v62, v63);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v62);
        sub_100244418((uint64_t)v13, (uint64_t)&v134);
        sub_1003F7870((uint64_t)v13);
        v69 = sub_10023A834(&v134, v136);
        v70 = v4[17];
        v71 = v4[18];
        v72 = sub_10023A834(v65, v70);
        v117 = (uint64_t)&v117;
        v121 = v47;
        v73 = *(_QWORD *)(v70 - 8);
        __chkstk_darwin(v72);
        v75 = (char *)&v117 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v73 + 16))(v75);
        (*(void (**)(uint64_t, uint64_t))(v71 + 24))(v70, v71);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v70);
        sub_100244418((uint64_t)(v11 + 40), (uint64_t)v131);
        sub_1003F7870((uint64_t)v11);
        v76 = v4[17];
        v77 = v4[18];
        v78 = sub_10023A834(v65, v76);
        v79 = *(_QWORD *)(v76 - 8);
        __chkstk_darwin(v78);
        v81 = (char *)&v117 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v79 + 16))(v81);
        v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v76, v77);
        v83 = *(void (**)(_QWORD, _QWORD))(v79 + 8);
        v11 = v123;
        v83(v81, v76);
        v84 = *v69;
        v85 = v132;
        v86 = v133;
        v87 = sub_10023A834(v131, v132);
        v88 = v119;
        v89 = v118;
        v90 = v82;
        v14 = v65;
        sub_10056A0EC(v119, v118, (uint64_t)v87, 1, v90, v84, v85, v86);
        sub_100225AB4(v88, v89);

        sub_10022E75C(v131);
        a3 = v124;
        v13 = v125;
        sub_10022E75C(&v134);
LABEL_19:
        a2 = v122;
        goto LABEL_22;
      }
    }
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    if (v22)
      goto LABEL_13;
  }
  v91 = v47;
  v92 = Logger.logObject.getter(v91);
  v93 = static os_log_type_t.error.getter(v92);
  if (!os_log_type_enabled(v92, v93))
  {

    goto LABEL_19;
  }
  v94 = (uint8_t *)swift_slowAlloc(12, -1);
  v121 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v94 = 138412290;
  if (v22)
  {
    v134 = (uint64_t)v91;
    v95 = v91;
  }
  else
  {
    v134 = 0;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v94 + 4);
  v96 = v121;
  *v121 = (uint64_t)v22;

  _os_log_impl((void *)&_mh_execute_header, v92, v93, "Could not convert response to data: %@", v94, 0xCu);
  v97 = sub_100008384(&qword_1007B4C30);
  swift_arrayDestroy(v96, 1, v97);
  swift_slowDealloc(v96, -1, -1);
  swift_slowDealloc(v94, -1, -1);

  v11 = v123;
  a3 = v124;
  a2 = v122;
  v13 = v125;
LABEL_22:
  v98 = v4[17];
  v99 = v4[18];
  v100 = sub_10023A834(v14, v98);
  v125 = (char *)&v117;
  v101 = a2;
  v102 = v14;
  v103 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v100);
  v105 = (char *)&v117 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v103 + 16))(v105);
  (*(void (**)(uint64_t, uint64_t))(v99 + 24))(v98, v99);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v98);
  sub_100244418((uint64_t)v13, (uint64_t)&v134);
  sub_1003F7870((uint64_t)v13);
  sub_10023A834(&v134, v136);
  v106 = v4[17];
  v107 = v4[18];
  v108 = sub_10023A834(v102, v106);
  v109 = (uint64_t)v11;
  v110 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v108);
  v112 = (char *)&v117 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v110 + 16))(v112);
  (*(void (**)(uint64_t, uint64_t))(v107 + 24))(v106, v107);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v106);
  v113 = (uint64_t)v127;
  v115 = v128;
  v114 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v127, v109 + *(int *)(v126 + 24), v129);
  sub_1003F7870(v109);
  sub_100561F18(v113, v130, v101, a3);
  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v113, v114);
  return sub_10022E75C(&v134);
}

uint64_t sub_1003F7324(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v6 + 104) = a6;
  *(_QWORD *)(v6 + 48) = a5;
  *(double *)(v6 + 40) = a1;
  v7 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v6 + 56) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003F738C, 0, 0);
}

uint64_t sub_1003F738C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  static Task<>.checkCancellation()();
  v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 80) = v4;
  *v4 = v0;
  v4[1] = sub_1003F7450;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1003F7450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_1003F7638;
  else
    v6 = sub_1003F74D0;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003F74D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 88);
  static Task<>.checkCancellation()();
  if (!v1)
  {
    if (qword_1007B4070 != -1)
      swift_once(&qword_1007B4070, sub_1003F40E4);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007BF850);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Response timer fired", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 48);

    swift_beginAccess(v8 + 16, v0 + 16, 0, 0);
    Strong = swift_weakLoadStrong(v8 + 16);
    *(_QWORD *)(v0 + 96) = Strong;
    if (Strong)
      return swift_task_switch(sub_1003F766C, Strong, 0);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F7638()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F766C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1003F6884(*(_DWORD *)(v0 + 104), 0xD00000000000001ELL, (const char *)0x800000010061A420);
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F76CC()
{
  uint64_t v0;

  sub_10022E75C((_QWORD *)(v0 + 112));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 160));
  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_responseTimerContinuation, (uint64_t *)&unk_1007BFB10);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer));
  sub_10022E75C((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1003F7730()
{
  return type metadata accessor for SDAuthenticationSessionExecutor(0);
}

uint64_t type metadata accessor for SDAuthenticationSessionExecutor(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BF8B0;
  if (!qword_1007BF8B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSessionExecutor);
  return result;
}

void sub_1003F7774(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[1] = &unk_1005D75D8;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_1005D75F0;
  sub_1003F7818(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_1005D75F0;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = &unk_1005D75D8;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_1003F7818(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007BF8D0[0])
  {
    v2 = sub_10021FF9C((uint64_t *)&unk_1007B5A00);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1007BF8D0);
  }
}

uint64_t sub_1003F7870(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003F78AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007BFA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F78F4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F791C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BFAE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1003F7324(v6, a1, v4, v5, v7, v8);
}

uint64_t sub_1003F79A4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 52, 7);
}

uint64_t sub_1003F79D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BFAE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D12C;
  return sub_1003F7324(v6, a1, v4, v5, v7, v8);
}

void sub_1003F7A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  __int128 v21[2];
  uint64_t v22;
  _BYTE v23[32];
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  sub_10022E77C(a1, (uint64_t)v23);
  v1 = sub_100008384(&qword_1007BFB00);
  if (swift_dynamicCast(v21, v23, (char *)&type metadata for Any + 8, v1, 6))
  {
    sub_10026EE60(v21, (uint64_t)v24);
    v2 = v25;
    v3 = v26;
    sub_10023A834(v24, v25);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
    {
      v4 = v25;
      v5 = v26;
      sub_10023A834(v24, v25);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      *(_QWORD *)&v21[0] = 0;
      *((_QWORD *)&v21[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease(*((const char **)&v21[0] + 1));
      *(_QWORD *)&v21[0] = 0xD00000000000001ELL;
      *((_QWORD *)&v21[0] + 1) = 0x8000000100615A90;
      v7 = (id)SFAuthenticationErrorToString(v6);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease((const char *)v10);
      v12 = v21[0];
      v13 = sub_100244304();
      v14 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0, 0);
      *(_DWORD *)v15 = v6;
      *(_OWORD *)(v15 + 8) = v12;
      swift_willThrow(v14);
    }
    sub_10022E75C(v24);
  }
  else
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_10000D0F0((uint64_t)v21, &qword_1007BFB08);
    if (qword_1007B4070 != -1)
      swift_once(&qword_1007B4070, sub_1003F40E4);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007BF850);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Message does not support error reporting", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

  }
}

uint64_t sub_1003F7C9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003F7D78, static AirDropActor.shared, 0);
}

void sub_1003F7D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C590);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C5B0, 1, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPhoneLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropContentHandlerPhoneLinks);
}

uint64_t sub_1003F8054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPhoneLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003F8088(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BFB4C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003F7C9C(a1);
}

void sub_1003F80DC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  __n128 v15;
  NSURL *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  const char *v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __n128 v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  double v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  __int128 v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE v63[56];

  v3 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = SFAirDropReceive.AskRequest.urlItems.getter(v8);
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease((const char *)v11);
  if (v12 == 1)
  {
    v14 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v13);
    sub_100298F1C((uint64_t)v14, (uint64_t)v5);
    v15 = swift_bridgeObjectRelease(v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v15) == 1)
    {
      sub_10000D0F0((uint64_t)v5, (uint64_t *)&unk_1007B5200);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
      URL._bridgeToObjectiveC()(v16);
      v18 = v17;
      v19 = objc_msgSend(v17, "formattedPhoneNumber");

      if (v19)
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

        v61 = 0x545F4E5245444F4DLL;
        v62 = 0xEF524546534E4152;
        swift_bridgeObjectRetain("CONTACT_INFORMATION");
        v23._countAndFlagsBits = 95;
        v23._object = (void *)0xE100000000000000;
        String.append(_:)(v23);
        v24._countAndFlagsBits = 0xD000000000000016;
        v24._object = "CONTACT_INFORMATION";
        String.append(_:)(v24);
        swift_bridgeObjectRelease("CONTACT_INFORMATION");
        if ((a2 & 1) != 0)
        {
          v25._countAndFlagsBits = 0x4C4154495041435FLL;
          v25._object = (void *)0xEC00000044455A49;
          String.append(_:)(v25);
        }
        v26._countAndFlagsBits = 0x545845545FLL;
        v26._object = (void *)0xE500000000000000;
        String.append(_:)(v26);
        v27 = (const char *)v62;
        v28 = sub_100008384(&qword_1007B7608);
        swift_arrayDestroy(&qword_10071C270, 1, v28);
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v27);
        v31 = (id)SFLocalizedStringForKey(v29, v30);

        if (v31)
        {
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v34 = v33;

          v35 = sub_100008384((uint64_t *)&unk_1007B86C0);
          v36 = swift_allocObject(v35, 72, 7);
          *(_OWORD *)(v36 + 16) = xmmword_1005CD2A0;
          *(_QWORD *)(v36 + 56) = &type metadata for String;
          *(_QWORD *)(v36 + 64) = sub_100299AB0();
          *(_QWORD *)(v36 + 32) = v20;
          *(_QWORD *)(v36 + 40) = v22;
          static String.localizedStringWithFormat(_:_:)(v32, v34, v36);
          *(_QWORD *)&v37 = swift_bridgeObjectRelease(v34).n128_u64[0];
          v38 = swift_bridgeObjectRelease((const char *)v36, v37);
          (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v38);
          return;
        }
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  v39 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v39, v63);
  v60 = xmmword_1005CD2A0;
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x494C5F454E4F4850;
  v41 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xEA00000000004B4ELL;
  *(_QWORD *)(inited + 48) = v12;
  v61 = 0x545F4E5245444F4DLL;
  v62 = 0xEF524546534E4152;
  *(_QWORD *)&v42 = swift_bridgeObjectRetain((const char *)0xEA00000000004B4ELL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v42);
  v43._countAndFlagsBits = 95;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x494C5F454E4F4850;
  v44._object = (void *)0xEA00000000004B4ELL;
  String.append(_:)(v44);
  swift_bridgeObjectRelease((const char *)0xEA00000000004B4ELL);
  if (v12 > 1)
  {
    v45._countAndFlagsBits = 0x4C4152554C505FLL;
    v45._object = (void *)0xE700000000000000;
    String.append(_:)(v45);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v46._countAndFlagsBits = 0x4C4154495041435FLL;
    v46._object = (void *)0xEC00000044455A49;
    String.append(_:)(v46);
  }
  v47._countAndFlagsBits = 0x545845545FLL;
  v47._object = (void *)0xE500000000000000;
  String.append(_:)(v47);
  v48 = (const char *)v62;
  swift_setDeallocating(inited);
  v49 = *(_QWORD *)(inited + 16);
  v50 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v41, v49, v50);
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  v53 = (id)SFLocalizedStringForKey(v51, v52);

  if (v53)
  {
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    v57 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v58 = swift_allocObject(v57, 72, 7);
    *(_OWORD *)(v58 + 16) = v60;
    *(_QWORD *)(v58 + 56) = &type metadata for Int;
    *(_QWORD *)(v58 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v58 + 32) = v12;
    static String.localizedStringWithFormat(_:_:)(v54, v56, v58);
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v56).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v58, v59);
    return;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1003F8600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BFC10);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BFC10);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003F8690(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFPlatform(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v11);
  v2[18] = swift_task_alloc(v11);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v12 = static AirDropActor.shared;
  v2[19] = static AirDropActor.shared;
  return swift_task_switch(sub_1003F87AC, v12, 0);
}

uint64_t sub_1003F87AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16);
  *(_QWORD *)(v1 + 160) = v9;
  v10 = v9(v2, v5, v3, v8);
  v11 = *(_QWORD *)(v1 + 144);
  v12 = *(_QWORD *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);
  if (v7)
  {
    v14 = SFAirDropReceive.AskRequest.urlItems.getter(v10);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = swift_bridgeObjectRelease((const char *)v14);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 8);
    *(_QWORD *)(v1 + 168) = v17;
    v18 = v17(v11, v12, v16);
    if (!v15 && SFWalletAppAvailable(v18))
    {
      *(_QWORD *)(v1 + 176) = objc_opt_self(PKAddPassesViewController);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 184) = static MainActor.shared.getter(v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      return swift_task_switch(sub_1003F8900, v20, v21);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 120));
  }
  v23 = *(_QWORD *)(v1 + 136);
  v24 = *(_QWORD *)(v1 + 112);
  v25 = *(_QWORD *)(v1 + 88);
  v26 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1003F8900()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 184));
  *(_BYTE *)(v0 + 192) = objc_msgSend(v1, "canAddPasses");
  return swift_task_switch(sub_1003F8954, v2, 0);
}

uint64_t sub_1003F8954()
{
  uint64_t v0;
  int v1;
  id v2;
  BOOL v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(_QWORD, unint64_t, _QWORD);
  uint64_t v10;
  const char *v11;
  const char *v12;
  NSString v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  NSString v17;
  NSString v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *type;
  uint64_t v39;

  v1 = *(unsigned __int8 *)(v0 + 192);
  v2 = objc_msgSend((id)objc_opt_self(PKPassLibrary), "isPassLibraryAvailable");
  if ((_DWORD)v2)
    v3 = v1 == 0;
  else
    v3 = 1;
  if (v3)
  {
    v4 = 0;
  }
  else
  {
    v5 = SFAirDropReceive.AskRequest.files.getter(v2);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = *(_QWORD *)(v0 + 104);
      v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      type = (const char *)v5;
      v39 = *(_QWORD *)(v7 + 72);
      v9 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v7 + 16);
      while (1)
      {
        v10 = v9(*(_QWORD *)(v0 + 112), v8, *(_QWORD *)(v0 + 96));
        SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v10);
        v12 = v11;
        v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v12);
        SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v14);
        v16 = v15;
        v17 = String._bridgeToObjectiveC()();
        v18 = objc_msgSend(v17, "pathExtension", swift_bridgeObjectRelease(v16).n128_f64[0]);

        if (!v18)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v20 = v19;
          v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v20);
        }
        v21 = *(_QWORD *)(v0 + 112);
        v22 = *(_QWORD *)(v0 + 96);
        v23 = SFIsPass(v13, v18);

        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v22);
        if ((v23 & 1) == 0)
          break;
        v8 += v39;
        if (!--v6)
        {
          v5 = (uint64_t)type;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease(type);
      v4 = 0;
    }
    else
    {
LABEL_14:
      swift_bridgeObjectRelease((const char *)v5);
      v24 = *(_QWORD *)(v0 + 80);
      v25 = *(_QWORD *)(v0 + 88);
      v26 = *(_QWORD *)(v0 + 72);
      static SFPlatform.macOS.getter(v27);
      v28 = static SFPlatform.isPlatform(_:)(v25);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
      if ((v28 & 1) != 0)
      {
        v4 = 1;
      }
      else
      {
        v29 = objc_allocWithZone((Class)LSApplicationRecord);
        v30 = sub_100528FF4(0xD000000000000012, 0x800000010061A580, 1);
        v31 = *(_QWORD *)(v0 + 40);
        v32 = *(void **)(v31 + 16);
        *(_QWORD *)(v31 + 16) = v30;

        v4 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16) != 0;
      }
    }
  }
  v33 = *(_QWORD *)(v0 + 136);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 88);
  v36 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v4);
}

uint64_t sub_1003F8E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  v5 = sub_100008384(&qword_1007B9928);
  v4[23] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[24] = v6;
  v4[25] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[26] = swift_task_alloc(v7);
  v4[27] = swift_task_alloc(v7);
  v4[28] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v4[29] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[30] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[31] = swift_task_alloc(v10);
  v4[32] = swift_task_alloc(v10);
  v4[33] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[34] = swift_task_alloc(v11);
  v4[35] = swift_task_alloc(v11);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v12 = static AirDropActor.shared;
  v4[36] = static AirDropActor.shared;
  return swift_task_switch(sub_1003F8FDC, v12, 0);
}

uint64_t sub_1003F8FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 296) = objc_opt_self(PKAddPassesViewController);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 304) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003F9088, v2, v3);
}

uint64_t sub_1003F9088()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 288);
  swift_release(*(_QWORD *)(v0 + 304));
  *(_BYTE *)(v0 + 336) = objc_msgSend(v1, "canAddPasses");
  return swift_task_switch(sub_1003F9110, v2, 0);
}

uint64_t sub_1003F9110()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  Class v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(double *);
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  Class isa;
  __n128 v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  _QWORD *v79;
  void **v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84[2];

  v1 = *(unsigned __int8 *)(v0 + 336);
  if (objc_msgSend((id)objc_opt_self(PKPassLibrary), "isPassLibraryAvailable"))
    v2 = v1 == 0;
  else
    v2 = 1;
  if (v2)
  {
    if (qword_1007B4078 != -1)
      goto LABEL_35;
    goto LABEL_7;
  }
  v79 = (_QWORD *)(v0 + 120);
  v80 = (void **)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 240);
  v23 = *(_QWORD *)(v0 + 184);
  v22 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 176);
  v81 = *(_QWORD *)(v24 + 16);
  v78 = objc_msgSend(objc_allocWithZone((Class)PKPassLibrary), "init");
  *(_QWORD *)(v0 + 312) = v78;
  *(_QWORD *)(v0 + 120) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain((const char *)v24);
  v25 = 0;
  v26 = 0;
  v82 = v22;
  v83 = v23;
  while (1)
  {
    if (v26 == v81)
    {
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v27(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 232));
      v26 = v81;
LABEL_14:
      v30 = *(_QWORD *)(v0 + 272);
      v31 = *(_QWORD *)(v0 + 184);
      sub_10000D0F0(*(_QWORD *)(v0 + 224), (uint64_t *)&unk_1007B5200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v30, 1, 1, v31);
      goto LABEL_17;
    }
    if (v26 >= v81)
      goto LABEL_33;
    v28 = *(_QWORD *)(v0 + 224);
    v29 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v28, *(_QWORD *)(v0 + 176)+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v26++, v29);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v27(v28, 0, 1, v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v28, 1, v29) == 1)
      goto LABEL_14;
    v32 = *(_QWORD *)(v0 + 264);
    v33 = *(_QWORD *)(v0 + 232);
    v34 = *(_QWORD *)(v0 + 200);
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
    v35(v32, *(_QWORD *)(v0 + 224), v33);
    v36 = v34 + *(int *)(v23 + 48);
    v35(v36, v32, v33);
    if (__OFADD__(v25, 1))
      goto LABEL_34;
    v37 = *(_QWORD **)(v0 + 272);
    v38 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = (char *)v37 + *(int *)(v23 + 48);
    *v37 = v25;
    v35((uint64_t)v40, v36, v38);
    v22 = v82;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v37, 0, 1, v39);
    ++v25;
LABEL_17:
    *(_QWORD *)(v0 + 320) = v27;
    v41 = *(_QWORD *)(v0 + 280);
    v42 = *(_QWORD *)(v0 + 184);
    sub_10022E718(*(_QWORD *)(v0 + 272), v41, &qword_1007B9930);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v41, 1, v42) == 1)
    {
      v72 = v0 + 16;
      swift_bridgeObjectRelease(*(const char **)(v0 + 176));
      v73 = *(const char **)(v0 + 120);
      sub_1003FA550();
      swift_bridgeObjectRetain(v73);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v0 + 328) = isa;
      v75 = swift_bridgeObjectRelease(v73);
      *(_QWORD *)(v0 + 56) = v0 + 128;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1003F98E4;
      v76 = swift_continuation_init(v0 + 16, 0, v75);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v77 = (_QWORD *)(v0 + 80);
      v77[1] = 0x40000000;
      v77[2] = sub_1003F9DE8;
      v77[3] = &unk_100727D38;
      v77[4] = v76;
      objc_msgSend(v78, "addPasses:withCompletionHandler:", isa, v77);
      return swift_continuation_await(v72);
    }
    v43 = *(char **)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 256);
    v45 = *(_QWORD *)v43;
    (*(void (**)(uint64_t, char *, _QWORD))(v21 + 32))(v44, &v43[*(int *)(v83 + 48)], *(_QWORD *)(v0 + 232));
    v54 = Data.init(contentsOf:options:)(v44, 0);
    v56 = v55;
    v57 = objc_allocWithZone((Class)PKPass);
    sub_10022E4A8(v54, v56);
    v58 = Data._bridgeToObjectiveC()().super.isa;
    *v80 = 0;
    v59 = objc_msgSend(v57, "initWithData:error:", v58, v80);

    v60 = *v80;
    if (v59)
    {
      v61 = v60;
      sub_100225AB4(v54, v56);
      v62 = v59;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
      v64 = *(_QWORD *)((*v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v63 = *(_QWORD *)((*v79 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v64 >= v63 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
      v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
      specialized Array._endMutation()(v65);
      sub_100225AB4(v54, v56);

    }
    else
    {
      v69 = v60;
      v70 = _convertNSErrorToError(_:)(v60);

      swift_willThrow(v71);
      sub_100225AB4(v54, v56);
      sub_100225AB4(v54, v56);
      if (qword_1007B4078 != -1)
        swift_once(&qword_1007B4078, sub_1003F8600);
      v46 = type metadata accessor for Logger(0);
      sub_100221DF8(v46, (uint64_t)qword_1007BFC10);
      swift_errorRetain(v70);
      v47 = swift_errorRetain(v70);
      v48 = Logger.logObject.getter(v47);
      v49 = static os_log_type_t.error.getter(v48);
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc(12, -1);
        v51 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v50 = 138412290;
        swift_errorRetain(v70);
        v52 = _swift_stdlib_bridgeErrorToNSError(v70);
        *(_QWORD *)(v50 + 4) = v52;
        *v51 = v52;
        swift_errorRelease(v70);
        swift_errorRelease(v70);
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Wallet pass add or initWithData failed: %@", (uint8_t *)v50, 0xCu);
        v53 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v51, 1, v53);
        swift_slowDealloc(v51, -1, -1);
        swift_slowDealloc(v50, -1, -1);

        swift_errorRelease(v70);
      }
      else
      {
        swift_errorRelease(v70);
        swift_errorRelease(v70);
        swift_errorRelease(v70);

      }
    }
    v22 = v82;
    v23 = v83;
    if (__OFADD__(v45, 1))
      break;
    v66 = *(_QWORD *)(v0 + 256);
    v67 = *(_QWORD *)(v0 + 232);
    v68 = *(void (**)(double *))(v0 + 160);
    v84[0] = (double)(v45 + 1) / (double)(uint64_t)(v81 + 1);
    v68(v84);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v66, v67);
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  swift_once(&qword_1007B4078, sub_1003F8600);
LABEL_7:
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007BFC10);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Wallet not available. Abort", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = type metadata accessor for SFAirDropReceive.Failure(0);
  v9 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v8, v9, 0, 0);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v8);
  swift_willThrow(v11);
  v12 = *(_QWORD *)(v0 + 272);
  v14 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 248);
  v17 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 224);
  v19 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F98E4()
{
  uint64_t v0;

  return swift_task_switch(sub_1003F995C, *(_QWORD *)(*(_QWORD *)v0 + 288), 0);
}

uint64_t sub_1003F995C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 128);

  v2 = *(_QWORD *)(v0 + 120);
  if (!v1)
  {
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v26 = *(_QWORD *)(v0 + 120);
      else
        v26 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(const char **)(v0 + 120));
      v3 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease((const char *)v2);
      if (v3)
      {
LABEL_5:
        v4 = v3 - 1;
        if (__OFSUB__(v3, 1))
        {
          __break(1u);
        }
        else if ((v2 & 0xC000000000000001) == 0)
        {
          if ((v4 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v5 = *(id *)(v2 + 8 * v4 + 32);
            goto LABEL_10;
          }
          __break(1u);
        }
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_10:
        v6 = v5;
        v7 = objc_msgSend(v5, "passURL", swift_bridgeObjectRelease((const char *)v2).n128_f64[0]);

        if (v7)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v7);

          v8 = 0;
        }
        else
        {
          v8 = 1;
        }
        v9 = *(_QWORD *)(v0 + 232);
        v10 = *(_QWORD *)(v0 + 240);
        v12 = *(_QWORD *)(v0 + 208);
        v11 = *(_QWORD *)(v0 + 216);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 320))(v12, v8, 1, v9);
        sub_10022E718(v12, v11, (uint64_t *)&unk_1007B5200);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) != 1)
        {
          v13 = *(void **)(v0 + 312);
          v14 = *(_QWORD *)(v0 + 280);
          v50 = *(_QWORD *)(v0 + 272);
          v51 = *(_QWORD *)(v0 + 264);
          v15 = *(_QWORD *)(v0 + 248);
          v17 = *(_QWORD *)(v0 + 232);
          v16 = *(_QWORD *)(v0 + 240);
          v18 = *(_QWORD *)(v0 + 216);
          v52 = *(_QWORD *)(v0 + 256);
          v53 = *(_QWORD *)(v0 + 224);
          v54 = *(_QWORD *)(v0 + 208);
          v55 = *(_QWORD *)(v0 + 200);
          v19 = *(uint64_t **)(v0 + 152);
          v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
          v20(v15, v18, v17);
          v21 = sub_100008384(&qword_1007B5318);
          v22 = *(unsigned __int8 *)(v16 + 80);
          v23 = (v22 + 32) & ~v22;
          v24 = swift_allocObject(v21, v23 + *(_QWORD *)(v16 + 72), v22 | 7);
          *(_OWORD *)(v24 + 16) = xmmword_1005CD2A0;
          v20(v24 + v23, v15, v17);

          *v19 = v24;
          swift_task_dealloc(v14);
          swift_task_dealloc(v50);
          swift_task_dealloc(v51);
          swift_task_dealloc(v52);
          swift_task_dealloc(v15);
          swift_task_dealloc(v53);
          swift_task_dealloc(v18);
          swift_task_dealloc(v54);
          swift_task_dealloc(v55);
          v25 = *(uint64_t (**)(void))(v0 + 8);
          return v25();
        }
        goto LABEL_20;
      }
    }
    else
    {
      v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v3)
        goto LABEL_5;
    }
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v0 + 320);
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 216);
    v30 = swift_bridgeObjectRelease((const char *)v2);
    v27(v29, 1, 1, v28, v30);
LABEL_20:
    sub_10000D0F0(*(_QWORD *)(v0 + 216), (uint64_t *)&unk_1007B5200);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease(*(const char **)(v0 + 120));
LABEL_21:
  if (qword_1007B4078 != -1)
    swift_once(&qword_1007B4078, sub_1003F8600);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_100221DF8(v31, (uint64_t)qword_1007BFC10);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.error.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v35 = 134217984;
    *(_QWORD *)(v0 + 136) = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v35 + 4);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Wallet pass add failed with status: %ld", v35, 0xCu);
    swift_slowDealloc(v35, -1, -1);
  }
  v36 = *(void **)(v0 + 312);

  v37 = type metadata accessor for SFAirDropReceive.Failure(0);
  v38 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v37, v38, 0, 0);
  v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v37);
  swift_willThrow(v40);

  v41 = *(_QWORD *)(v0 + 272);
  v43 = *(_QWORD *)(v0 + 256);
  v42 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 200);
  v47 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1003F9DE8(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1003F9DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v7 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v3 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  v13 = v10;
  sub_100323EA0(a1, v10, 1, a3);

  return sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007C5DE0);
}

uint64_t type metadata accessor for SDAirDropContentHandlerWalletItems()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary34SDAirDropContentHandlerWalletItems);
}

uint64_t sub_1003F9F20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerWalletItems();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003F9F54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BFC54);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003F8690(a1);
}

uint64_t sub_1003F9FA8(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = 0;
  v2 = swift_allocObject(&unk_100727D20, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRetain(a1);
  v3 = sub_100008384((uint64_t *)&unk_1007B6820);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000013, 0x800000010061A4E0, &v5, &unk_1007BFD20, v2, 0xD000000000000069, 0x800000010061A500, 83, &type metadata for Double, v3);
}

uint64_t sub_1003FA068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003F9DFC(a1, a2, a3);
}

void sub_1003FA088(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  double v13;
  Swift::String v14;
  Swift::String v15;
  double v16;
  Swift::String v17;
  Swift::String v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  const char *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  double v48;
  _BYTE v49[56];
  uint64_t v50;
  const char *v51;
  _BYTE v52[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  if (v4 == 1 && (v6 = SFAirDropReceive.AskRequest.itemsDescription.getter(v5), v7))
  {
    v8 = v6;
    v9 = v7;
    v10 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v10, v49);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x5449575F53534150;
    v12 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xEF454C5449545F48;
    *(_QWORD *)(inited + 48) = 1;
    v50 = 0x545F4E5245444F4DLL;
    v51 = (const char *)0xEF524546534E4152;
    *(_QWORD *)&v13 = swift_bridgeObjectRetain((const char *)0xEF454C5449545F48).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v13);
    v14._countAndFlagsBits = 95;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0x5449575F53534150;
    v15._object = (void *)0xEF454C5449545F48;
    String.append(_:)(v15);
    *(_QWORD *)&v16 = swift_bridgeObjectRelease((const char *)inited).n128_u64[0];
    swift_bridgeObjectRelease((const char *)0xEF454C5449545F48, v16);
    if ((a2 & 1) != 0)
    {
      v17._countAndFlagsBits = 0x4C4154495041435FLL;
      v17._object = (void *)0xEC00000044455A49;
      String.append(_:)(v17);
    }
    v18._countAndFlagsBits = 0x545845545FLL;
    v18._object = (void *)0xE500000000000000;
    String.append(_:)(v18);
    v19 = v51;
    swift_setDeallocating(inited);
    v20 = *(_QWORD *)(inited + 16);
    v21 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v12, v20, v21);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v24 = (id)SFLocalizedStringForKey(v22, v23);

    if (v24)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      v28 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v29 = swift_allocObject(v28, 72, 7);
      *(_OWORD *)(v29 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v29 + 56) = &type metadata for String;
      *(_QWORD *)(v29 + 64) = sub_100299AB0();
      *(_QWORD *)(v29 + 32) = v8;
      *(_QWORD *)(v29 + 40) = v9;
      v30 = v25;
LABEL_13:
      static String.localizedStringWithFormat(_:_:)(v30, v27, v29);
      *(_QWORD *)&v48 = swift_bridgeObjectRelease(v27).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v29, v48);
      return;
    }
  }
  else
  {
    v31 = sub_100008384(&qword_1007B7600);
    v32 = swift_initStackObject(v31, v52);
    *(_OWORD *)(v32 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v32 + 32) = 1397965136;
    v33 = v32 + 32;
    *(_QWORD *)(v32 + 40) = 0xE400000000000000;
    *(_QWORD *)(v32 + 48) = v4;
    v50 = 0x545F4E5245444F4DLL;
    v51 = (const char *)0xEF524546534E4152;
    *(_QWORD *)&v34 = swift_bridgeObjectRetain((const char *)0xE400000000000000).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v32, v34);
    v35._countAndFlagsBits = 95;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    v36._countAndFlagsBits = 1397965136;
    v36._object = (void *)0xE400000000000000;
    String.append(_:)(v36);
    swift_bridgeObjectRelease((const char *)0xE400000000000000);
    if (v4 > 1)
    {
      v37._countAndFlagsBits = 0x4C4152554C505FLL;
      v37._object = (void *)0xE700000000000000;
      String.append(_:)(v37);
    }
    swift_bridgeObjectRelease((const char *)v32);
    if ((a2 & 1) != 0)
    {
      v38._countAndFlagsBits = 0x4C4154495041435FLL;
      v38._object = (void *)0xEC00000044455A49;
      String.append(_:)(v38);
    }
    v39._countAndFlagsBits = 0x545845545FLL;
    v39._object = (void *)0xE500000000000000;
    String.append(_:)(v39);
    swift_setDeallocating(v32);
    v40 = *(_QWORD *)(v32 + 16);
    v41 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v33, v40, v41);
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v51);
    v44 = (id)SFLocalizedStringForKey(v42, v43);

    if (v44)
    {
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v27 = v46;

      v47 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v29 = swift_allocObject(v47, 72, 7);
      *(_OWORD *)(v29 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v29 + 56) = &type metadata for Int;
      *(_QWORD *)(v29 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v29 + 32) = v4;
      v30 = v45;
      goto LABEL_13;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1003FA4BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FA4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc(dword_1007BFD1C);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D12C;
  return sub_1003F8E5C(a1, a2, a3, v8);
}

unint64_t sub_1003FA550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BFD28;
  if (!qword_1007BFD28)
  {
    v1 = objc_opt_self(PKPass);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007BFD28);
  }
  return result;
}

uint64_t sub_1003FA58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BFD30);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BFD30);
  if (qword_1007B3E80 != -1)
    swift_once(&qword_1007B3E80, sub_1002E9F14);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8250);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003FA61C(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v4;
  *(_QWORD *)(v5 + 24) = 0;
  *(_WORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 48) = 0;
  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007BFD30);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v29 = v25;
    *(_DWORD *)v14 = 136315394;
    v27 = a4;
    v15 = objc_msgSend(v11, "identifier");
    v26 = a3;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v28 = sub_100228BD8(v16, (unint64_t)v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v14 + 4);

    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    if ((a2 & 1) != 0)
      v19 = 1702195828;
    else
      v19 = 0x65736C6166;
    if ((a2 & 1) != 0)
      v20 = 0xE400000000000000;
    else
      v20 = 0xE500000000000000;
    v28 = sub_100228BD8(v19, v20, &v29);
    a4 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v14 + 14);
    v21 = (const char *)v20;
    a3 = v26;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "IncomingAirDropAlert created for transfer %s, playSound=%s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)(v5 + 16) = v11;
  *(_BYTE *)(v5 + 34) = a2 & 1;
  v22 = *(_QWORD *)(v5 + 40);
  v23 = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  sub_1002845F4(v22, v23);
  return v5;
}

void sub_1003FA88C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;

  v1 = v0;
  v2 = *(void **)(v0 + 16);
  sub_1003FBCD0(v2, *(unsigned __int8 *)(v0 + 33));
  if (v3)
  {
    v5 = v3;
    v6 = v4;
    if (*(_BYTE *)(v1 + 34) == 1)
      objc_msgSend((id)objc_opt_self(TLAlert), "playAlertForType:", 12);
    v36 = sub_1003FCD0C;
    v37 = v1;
    aBlock = _NSConcreteStackBlock;
    v33 = 1107296256;
    v34 = sub_1002D6B08;
    v35 = &unk_100727D68;
    v7 = _Block_copy(&aBlock);
    v8 = v37;
    swift_retain(v1);
    swift_release(v8);
    objc_msgSend(v5, "setErrorHandler:", v7);
    _Block_release(v7);
    v36 = sub_1003FAF74;
    v37 = 0;
    aBlock = _NSConcreteStackBlock;
    v33 = 1107296256;
    v34 = sub_100366D0C;
    v35 = &unk_100727D90;
    v9 = _Block_copy(&aBlock);
    objc_msgSend(v5, "setResponseHandler:", v9);
    _Block_release(v9);
    v10 = swift_allocObject(&unk_100727DC8, 32, 7);
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v1;
    v36 = sub_1003FCD58;
    v37 = v10;
    aBlock = _NSConcreteStackBlock;
    v33 = 1107296256;
    v34 = sub_1003FB388;
    v35 = &unk_100727DE0;
    v11 = _Block_copy(&aBlock);
    v12 = v37;
    swift_retain(v1);
    swift_release(v12);
    objc_msgSend(v5, "setDictionaryResponseHandler:", v11);
    _Block_release(v11);
    v13 = *(void **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = v5;
    v14 = v5;

    if (qword_1007B4080 != -1)
      swift_once(&qword_1007B4080, sub_1003FA58C);
    v15 = type metadata accessor for Logger(0);
    sub_100221DF8(v15, (uint64_t)qword_1007BFD30);
    swift_retain_n(v1, 2);
    v16 = v14;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v20 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v19 = 138412546;
      aBlock = (void **)&v16->isa;
      v21 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v33, v19 + 4);
      *v20 = v5;

      *(_WORD *)(v19 + 12) = 2112;
      aBlock = (void **)v2;
      v22 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v33, v19 + 14);
      v20[1] = v2;
      swift_release_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "IncomingAirDropAlert: Presenting AirDrop alert: %@ for transfer %@.", (uint8_t *)v19, 0x16u);
      v23 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v20, 2, v23);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {

      swift_release_n(v1, 2);
      v17 = v16;
    }

    -[NSObject present](v16, "present");
  }
  else
  {
    if (qword_1007B4080 != -1)
      swift_once(&qword_1007B4080, sub_1003FA58C);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007BFD30);
    v25 = swift_retain_n(v0, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v28 = 138412290;
      aBlock = (void **)v2;
      v30 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v33, v28 + 4);
      *v29 = v2;
      swift_release_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to populate AirDrop alert for transfer %@.", v28, 0xCu);
      v31 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v29, 1, v31);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
  }
}

void sub_1003FAD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BFD30);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v16 = a1;
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_errorRetain(a1);
    v10 = sub_100008384((uint64_t *)&unk_1007C31A0);
    v11 = String.init<A>(describing:)(&v16, v10);
    v13 = (const char *)v12;
    v16 = sub_100228BD8(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Alert error handler called with error: %s.", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v14 = objc_msgSend(*(id *)(a2 + 16), "cancelAction");
  if (v14)
  {
    v15 = v14;
    sub_1003FB400(v14);

  }
}

void sub_1003FAF74(int a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;
  int v7;
  uint64_t v8;

  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007BFD30);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    v7 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8, v5 + 4);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Alert response handler called with: %d.", v5, 8u);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

void sub_1003FB090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  id v18;
  void *v19;
  unint64_t v20;
  uint64_t v21[5];
  __int128 v22;
  __int128 v23;

  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BFD30);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v21[0] = v9;
    *(_DWORD *)v8 = 136315138;
    if (a1)
    {
      v10 = Dictionary.description.getter(a1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v12 = v11;
    }
    else
    {
      v12 = (const char *)0xE90000000000003ELL;
      v10 = 0x74636964206F6E3CLL;
    }
    *(_QWORD *)&v22 = sub_100228BD8(v10, (unint64_t)v12, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 8, v8 + 4);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Dictionary response handler called %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    if (!a1)
      return;
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    if (!a1)
      return;
  }
  v20 = SBSUserNotificationButtonDefinitionResponseIndexKey;
  v13 = SBSUserNotificationButtonDefinitionResponseIndexKey;
  v14 = sub_100008384(&qword_1007B5510);
  v15 = sub_10022E644();
  AnyHashable.init<A>(_:)(v21, &v20, v14, v15);
  if (*(_QWORD *)(a1 + 16) && (v16 = sub_10045C1D0((uint64_t)v21), (v17 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_10022E6C0((uint64_t)v21);
  if (*((_QWORD *)&v23 + 1))
  {
    if ((swift_dynamicCast(&v20, &v22, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a2);
        goto LABEL_20;
      }
      if ((v20 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v20 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v18 = *(id *)(a2 + 8 * v20 + 32);
LABEL_20:
        v19 = v18;
        sub_1003FB400(v18);

        return;
      }
      __break(1u);
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v22, (uint64_t *)&unk_1007B6890);
  }
}

uint64_t sub_1003FB388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v4 = 0;
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1003FB400(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  uint64_t v20;
  uint64_t v21;

  objc_msgSend(a1, "triggerAction");
  *(_BYTE *)(v1 + 32) = 1;
  v3 = objc_msgSend(*(id *)(v1 + 16), "cancelAction");
  if (v3
    && (v4 = v3,
        sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr),
        v5 = a1,
        v6 = static NSObject.== infix(_:_:)(v5, v4),
        v5,
        v5,
        v4,
        (v6 & 1) != 0))
  {
    v7 = 2;
  }
  else
  {
    v7 = objc_msgSend(a1, "shouldUpdateUserResponse");
  }
  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007BFD30);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v21 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = v7;
    v15 = (id)SFAirDropTransferUserResponseToString(v7);
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v7 = v14;
    v20 = sub_100228BD8(v16, (unint64_t)v18, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v12 + 4);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "User response is %s, dismissing alert.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  return sub_1003FB648(v7);
}

uint64_t sub_1003FB648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BFD30);
  v5 = swift_retain_n(v1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = a1;
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v23 = v9;
    v10 = objc_msgSend(*(id *)(v2 + 16), "identifier");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v22 = sub_100228BD8(v11, (unint64_t)v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v8 + 4);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Dismiss alert for transfer %s.", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    v14 = v9;
    a1 = v21;
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  objc_msgSend(*(id *)(v2 + 24), "invalidate");
  v15 = *(void **)(v2 + 24);
  *(_QWORD *)(v2 + 24) = 0;

  v16 = *(void (**)(uint64_t))(v2 + 40);
  if (v16)
  {
    v17 = *(_QWORD *)(v2 + 48);
    swift_retain(v17);
    v16(a1);
    sub_1002845F4((uint64_t)v16, v17);
    v18 = *(_QWORD *)(v2 + 40);
  }
  else
  {
    v18 = 0;
  }
  v19 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  return sub_1002845F4(v18, v19);
}

uint64_t sub_1003FB880()
{
  uint64_t v0;

  sub_1002845F4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for IncomingAirDropAlert()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary20IncomingAirDropAlert);
}

void sub_1003FB8D4(int a1, id a2, char a3)
{
  id v5;
  uint64_t v6;
  const char *v7;
  const char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t inited;
  const char *v16;
  Class isa;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  id v22;
  Class v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  void *v35;
  uint64_t v36;
  _BYTE v37[104];
  __int128 v38;
  __int128 v39;

  if (objc_msgSend(a2, "transferState") == (id)6)
    return;
  v5 = objc_msgSend(a2, "identifier");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = objc_msgSend(a2, "metaData");
  v10 = objc_msgSend(v9, "previewImage");

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)(&v38, v10);
    swift_unknownObjectRelease(v10);
    sub_10000D0F0((uint64_t)&v38, (uint64_t *)&unk_1007B6890);
    v11 = objc_msgSend(a2, "metaData");
    v12 = objc_msgSend(v11, "contactIdentifier");

    if (v12)
    {

      goto LABEL_6;
    }
    if ((a3 & 1) == 0)
    {
LABEL_12:
      swift_bridgeObjectRelease(v8);
      return;
    }
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
    sub_10000D0F0((uint64_t)&v38, (uint64_t *)&unk_1007B6890);
    if ((a3 & 1) == 0)
      goto LABEL_12;
  }
LABEL_6:
  v13 = objc_msgSend(objc_allocWithZone((Class)NSExtensionItem), "init");
  v14 = sub_100008384((uint64_t *)&unk_1007C31D0);
  inited = swift_initStackObject(v14, v37);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)&v38 = 25705;
  *((_QWORD *)&v38 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v38, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = v8;
  v16 = (const char *)sub_10021E5F8(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "setUserInfo:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = (void *)objc_opt_self(NSKeyedArchiver);
  v19 = sub_100008384(&qword_1007B5390);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1005D1DF0;
  *(_QWORD *)(v20 + 32) = v13;
  *(_QWORD *)&v38 = v20;
  specialized Array._endMutation()(v20);
  v21 = (const char *)v38;
  sub_100221EDC(0, (unint64_t *)&unk_1007BFE90, NSExtensionItem_ptr);
  v22 = v13;
  v23 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
  *(_QWORD *)&v38 = 0;
  v25 = objc_msgSend(v18, "archivedDataWithRootObject:requiringSecureCoding:error:", v23, 1, &v38, v24);

  v26 = (id)v38;
  if (v25)
  {
    v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    if (SBUserNotificationExtensionIdentifierKey)
    {
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationExtensionIdentifierKey);
      *((_QWORD *)&v39 + 1) = &type metadata for String;
      *(_QWORD *)&v38 = 0xD000000000000020;
      *((_QWORD *)&v38 + 1) = 0x800000010061A6C0;
      sub_100394858((uint64_t)&v38, v30, v31);
      if (SBUserNotificationExtensionItemsKey)
      {
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationExtensionItemsKey);
        v34 = v33;
        *((_QWORD *)&v39 + 1) = &type metadata for Data;
        *(_QWORD *)&v38 = v27;
        *((_QWORD *)&v38 + 1) = v29;
        sub_10022E4A8(v27, v29);
        sub_100394858((uint64_t)&v38, v32, v34);

        sub_100225AB4(v27, v29);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    v35 = v26;
    _convertNSErrorToError(_:)(v26);

    swift_willThrow(v36);
  }
}

void sub_1003FBCD0(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  const char *v13;
  const char *v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const char *v19;
  const char *v20;
  NSString v21;
  id v22;
  const char *v23;
  const char *v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  const char *v29;
  const char *v30;
  NSString v31;
  int64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  const char *v42;
  const char *v43;
  id v44;
  NSString v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  const char *v60;
  const char *v61;
  id v62;
  NSString v63;
  id v64;
  id v65;
  uint64_t v66;
  const char *v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t inited;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  const char *v83;
  const char *v84;
  const char *v85;
  char isUniquelyReferenced_nonNull_native;
  const char *v87;
  double v88;
  NSString v89;
  id v90;
  NSString v91;
  NSString v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  const char *v106;
  const char *v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  const char *v113;
  double v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  const char *v119;
  uint64_t v120;
  char v121;
  const char *v122;
  double v123;
  __n128 v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  const char *v141;
  const char *v142;
  const char *v143;
  const char *v144;
  Class isa;
  double v146;
  unint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int v154;
  id v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  unint64_t v162;
  char *v163;
  unint64_t v164;
  unint64_t v165;
  id v166;
  uint64_t v167;
  _OWORD v168[2];
  __int128 v169;
  void *v170;
  uint64_t v171;
  const char *v172;
  uint64_t v173;
  const char *v174;

  v154 = a2;
  v3 = sub_100008384((uint64_t *)&unk_1007B5200);
  v4 = __chkstk_darwin(v3);
  v152 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v156 = (char *)&v151 - v6;
  v7 = type metadata accessor for URL(0);
  v159 = *(_QWORD *)(v7 - 8);
  v160 = v7;
  __chkstk_darwin(v7);
  v153 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)SFUserAlert), "init");
  v10 = objc_msgSend(a1, "possibleActions");
  v11 = sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr);
  v165 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  v161 = objc_msgSend(a1, "cancelAction");
  v12 = objc_msgSend(a1, "contentsTitle");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = (uint64_t)objc_msgSend(v15, "length");
  if (v16 >= 1000)
    v17 = 1000;
  else
    v17 = v16;
  v18 = objc_msgSend(v15, "substringToIndex:", v17);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;
  swift_bridgeObjectRelease(v14);

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v22 = objc_msgSend(a1, "contentsDescription");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = (uint64_t)objc_msgSend(v25, "length");
  if (v26 >= 1000)
    v27 = 1000;
  else
    v27 = v26;
  v28 = objc_msgSend(v25, "substringToIndex:", v27);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;
  swift_bridgeObjectRelease(v24);

  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setMessage:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v155 = v9;
  objc_msgSend(v9, "setHasDefaultButton:", 0);
  v173 = (uint64_t)_swiftEmptyArrayStorage;
  v174 = (const char *)_swiftEmptyArrayStorage;
  v166 = a1;
  if (!objc_msgSend(a1, "needsAction"))
  {
    swift_bridgeObjectRelease((const char *)v165);
    v36 = (const char *)_swiftEmptyArrayStorage;
    v34 = v161;
    if (!v161)
      goto LABEL_58;
LABEL_45:
    v57 = v34;
    v58 = objc_msgSend(v57, "localizedTitle");
    if (!v58)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    v59 = v58;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = v60;

    v62 = objc_allocWithZone((Class)SBSMutableUserNotificationButtonDefinition);
    v63 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend(v62, "initWithTitle:", v63, swift_bridgeObjectRelease(v61).n128_f64[0]);

    v65 = objc_msgSend(v64, "build");
    v66 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v65, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v67 = (const char *)v173;
    if ((unint64_t)v173 >> 62)
    {
      if (v173 < 0)
        v147 = v173;
      else
        v147 = v173 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v173);
      v148 = _CocoaArrayWrapper.endIndex.getter(v147);
      swift_bridgeObjectRelease(v67);
      if (v148 >= 2)
        goto LABEL_48;
      sub_100474338(0, 0, v66);
      v149 = v57;
      swift_bridgeObjectRetain(v67);
      v150 = _CocoaArrayWrapper.endIndex.getter(v147);
      swift_bridgeObjectRelease(v67);
      if (v150 < 0)
      {
        __break(1u);
        swift_once(&qword_1007B4080, sub_1003FA58C);
        v132 = type metadata accessor for Logger(0);
        sub_100221DF8(v132, (uint64_t)qword_1007BFD30);
        swift_errorRetain(v67);
        v133 = swift_errorRetain(v67);
        v134 = Logger.logObject.getter(v133);
        v135 = static os_log_type_t.error.getter(v134);
        if (os_log_type_enabled(v134, v135))
        {
          v136 = (uint8_t *)swift_slowAlloc(12, -1);
          v137 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v169 = v137;
          *(_DWORD *)v136 = 136315138;
          *(_QWORD *)&v168[0] = v67;
          swift_errorRetain(v67);
          v138 = sub_100008384(&qword_1007B5A60);
          v139 = String.init<A>(describing:)(v168, v138);
          v141 = (const char *)v140;
          *(_QWORD *)&v168[0] = sub_100228BD8(v139, v140, (uint64_t *)&v169);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v168, (char *)v168 + 8, v136 + 4);
          v142 = v141;
          v34 = v161;
          swift_bridgeObjectRelease(v142);
          swift_errorRelease(v67);
          swift_errorRelease(v67);
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "Failed to populate preview image: %s", v136, 0xCu);
          swift_arrayDestroy(v137, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v137, -1, -1);
          swift_slowDealloc(v136, -1, -1);

          swift_errorRelease(v67);
        }
        else
        {
          swift_errorRelease(v67);
          swift_errorRelease(v67);
          swift_errorRelease(v67);

        }
        goto LABEL_83;
      }
    }
    else
    {
      if (*(_QWORD *)((v173 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
      {
LABEL_48:
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
          v36 = (const char *)sub_100227B74(0, *((_QWORD *)v36 + 2) + 1, 1, (uint64_t)v36);
        v69 = *((_QWORD *)v36 + 2);
        v68 = *((_QWORD *)v36 + 3);
        if (v69 >= v68 >> 1)
          v36 = (const char *)sub_100227B74((_QWORD *)(v68 > 1), v69 + 1, 1, (uint64_t)v36);
        *((_QWORD *)v36 + 2) = v69 + 1;
        *(_QWORD *)&v36[8 * v69 + 32] = v66;
        v174 = v36;
        v70 = v57;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
        v72 = *(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v71 = *(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v72 >= v71 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
        v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
        specialized Array._endMutation()(v73);
        goto LABEL_57;
      }
      sub_100474338(0, 0, v66);
      v74 = v57;
    }
    sub_100474050(0, 0, (uint64_t)v57);
LABEL_57:

    goto LABEL_58;
  }
  v32 = v165;
  v162 = v165 >> 62;
  if (v165 >> 62)
  {
LABEL_40:
    if (v32 < 0)
      v56 = v32;
    else
      v56 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v32);
    v33 = _CocoaArrayWrapper.endIndex.getter(v56);
    v34 = v161;
    if (v33)
      goto LABEL_10;
    goto LABEL_44;
  }
  v33 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain((const char *)v165);
  v34 = v161;
  if (!v33)
  {
LABEL_44:
    swift_bridgeObjectRelease_n(v32, 2);
    v36 = (const char *)_swiftEmptyArrayStorage;
    if (!v34)
      goto LABEL_58;
    goto LABEL_45;
  }
LABEL_10:
  v164 = v32 & 0xC000000000000001;
  v35 = v32 & 0xFFFFFFFFFFFFFF8;
  v158 = v32 & 0xFFFFFFFFFFFFFF8;
  if (v32 < 0)
    v35 = v32;
  v157 = v35;
  v36 = (const char *)_swiftEmptyArrayStorage;
  v37 = 4;
  v163 = (char *)&type metadata for Any + 8;
  do
  {
    if (v164)
      v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v32);
    else
      v38 = *(id *)(v32 + 8 * v37);
    v39 = v38;
    v40 = v37 - 3;
    if (__OFADD__(v37 - 4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (!objc_msgSend(v166, "userResponse"))
    {
      if (v162)
      {
        swift_bridgeObjectRetain((const char *)v32);
        v55 = _CocoaArrayWrapper.endIndex.getter(v157);
        swift_bridgeObjectRelease((const char *)v32);
        if (v55 == 1)
        {
LABEL_33:
          v41 = objc_msgSend(v39, "singleItemLocalizedTitle");
          if (!v41)
            goto LABEL_91;
          goto LABEL_19;
        }
      }
      else if (*(_QWORD *)(v158 + 16) == 1)
      {
        goto LABEL_33;
      }
    }
    v41 = objc_msgSend(v39, "localizedTitle");
    if (!v41)
    {
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
LABEL_19:
    static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v43 = v42;

    v44 = objc_allocWithZone((Class)SBSMutableUserNotificationButtonDefinition);
    v45 = String._bridgeToObjectiveC()();
    v46 = objc_msgSend(v44, "initWithTitle:", v45, swift_bridgeObjectRelease(v43).n128_f64[0]);

    if (!*((_QWORD *)v36 + 2))
      objc_msgSend(v46, "setIsPreferredButton:", 1);
    v47 = objc_msgSend(v46, "build");
    v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v47, &type metadata for AnyHashable, v163, &protocol witness table for AnyHashable);

    if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      v36 = (const char *)sub_100227B74(0, *((_QWORD *)v36 + 2) + 1, 1, (uint64_t)v36);
    v50 = *((_QWORD *)v36 + 2);
    v49 = *((_QWORD *)v36 + 3);
    if (v50 >= v49 >> 1)
      v36 = (const char *)sub_100227B74((_QWORD *)(v49 > 1), v50 + 1, 1, (uint64_t)v36);
    *((_QWORD *)v36 + 2) = v50 + 1;
    *(_QWORD *)&v36[8 * v50 + 32] = v48;
    v51 = v39;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
    v53 = *(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v52 = *(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v53 >= v52 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
    v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
    specialized Array._endMutation()(v54);

    ++v37;
    v32 = v165;
  }
  while (v40 != v33);
  swift_bridgeObjectRelease_n(v165, 2);
  v174 = v36;
  v34 = v161;
  if (v161)
    goto LABEL_45;
LABEL_58:
  v75 = sub_100008384((uint64_t *)&unk_1007C4210);
  inited = swift_initStackObject(v75, &v171);
  *(_OWORD *)(inited + 16) = xmmword_1005D0690;
  if (!kCFUserNotificationAlertTopMostKey)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCFUserNotificationAlertTopMostKey);
  *(_QWORD *)(inited + 40) = v77;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = 1;
  if (!SBUserNotificationDontDismissOnUnlock)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationDontDismissOnUnlock);
  *(_QWORD *)(inited + 88) = v78;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 1;
  if (!SBUserNotificationDismissOnLock)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationDismissOnLock);
  *(_QWORD *)(inited + 136) = v79;
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 0;
  if (!SBUserNotificationAllowLockscreenDismissalKey)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  *(_QWORD *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationAllowLockscreenDismissalKey);
  *(_QWORD *)(inited + 184) = v80;
  *(_BYTE *)(inited + 192) = 0;
  *(_QWORD *)(inited + 216) = &type metadata for Bool;
  *(_QWORD *)(inited + 224) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 232) = 0x800000010061A640;
  *(_QWORD *)(inited + 240) = 0xD000000000000020;
  *(_QWORD *)(inited + 248) = 0x800000010061A660;
  v81 = sub_10021E744(inited);
  if (!SBSUserNotificationButtonDefinitionsKey)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUserNotificationButtonDefinitionsKey);
  v84 = v83;
  v85 = v174;
  v170 = (void *)sub_100008384(&qword_1007BFE88);
  *(_QWORD *)&v169 = v85;
  sub_10022138C(&v169, v168);
  swift_bridgeObjectRetain(v85);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v81);
  v167 = v81;
  v172 = (const char *)0x8000000000000000;
  sub_10046B5EC(v168, v82, v84, isUniquelyReferenced_nonNull_native);
  v87 = v172;
  v172 = (const char *)v167;
  *(_QWORD *)&v88 = swift_bridgeObjectRelease(v84).n128_u64[0];
  swift_bridgeObjectRelease(v87, v88);
  v89 = String._bridgeToObjectiveC()();
  v90 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v89);

  if (!v90)
  {
    v98 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v156, 1, 1, v160);
    goto LABEL_69;
  }
  v91 = String._bridgeToObjectiveC()();
  v92 = String._bridgeToObjectiveC()();
  v93 = objc_msgSend(v90, "URLForResource:withExtension:", v91, v92);

  if (v93)
  {
    v94 = (uint64_t)v152;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v93);

    v95 = 0;
    v96 = v160;
  }
  else
  {
    v95 = 1;
    v96 = v160;
    v94 = (uint64_t)v152;
  }
  v97 = v153;
  v98 = (uint64_t)v156;
  v99 = v159;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56))(v94, v95, 1, v96);
  sub_1003417A8(v94, v98);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v98, 1, v96) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v97, v98, v96);
    if (SBUserNotificationIconImageAssetCatalogPathKey)
    {
      v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(SBUserNotificationIconImageAssetCatalogPathKey);
      v107 = v106;
      v109 = URL.path.getter(v108);
      v170 = &type metadata for String;
      *(_QWORD *)&v169 = v109;
      *((_QWORD *)&v169 + 1) = v110;
      sub_10022138C(&v169, v168);
      v111 = (uint64_t)v172;
      v112 = swift_isUniquelyReferenced_nonNull_native(v172);
      v167 = v111;
      v172 = (const char *)0x8000000000000000;
      sub_10046B5EC(v168, v105, v107, v112);
      v113 = v172;
      v172 = (const char *)v167;
      *(_QWORD *)&v114 = swift_bridgeObjectRelease(v107).n128_u64[0];
      *(_QWORD *)&v115 = swift_bridgeObjectRelease(v113, v114).n128_u64[0];
      v116 = SBUserNotificationIconImageAssetCatalogImageKey;
      if (SBUserNotificationIconImageAssetCatalogImageKey)
      {
        swift_bridgeObjectRelease(v174, v115);
        v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
        v119 = v118;
        v170 = &type metadata for String;
        *(_QWORD *)&v169 = 0x706F7244726941;
        *((_QWORD *)&v169 + 1) = 0xE700000000000000;
        sub_10022138C(&v169, v168);
        v120 = (uint64_t)v172;
        v121 = swift_isUniquelyReferenced_nonNull_native(v172);
        v167 = v120;
        v172 = (const char *)0x8000000000000000;
        sub_10046B5EC(v168, v117, v119, v121);
        v122 = v172;
        v172 = (const char *)v167;
        *(_QWORD *)&v123 = swift_bridgeObjectRelease(v119).n128_u64[0];
        v124 = swift_bridgeObjectRelease(v122, v123);
        (*(void (**)(char *, uint64_t, __n128))(v159 + 8))(v97, v160, v124);
        goto LABEL_77;
      }
      goto LABEL_99;
    }
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    return;
  }
LABEL_69:
  swift_bridgeObjectRelease(v174);
  sub_10000D0F0(v98, (uint64_t *)&unk_1007B5200);
  if (qword_1007B4080 != -1)
    swift_once(&qword_1007B4080, sub_1003FA58C);
  v100 = type metadata accessor for Logger(0);
  v101 = sub_100221DF8(v100, (uint64_t)qword_1007BFD30);
  v102 = Logger.logObject.getter(v101);
  v103 = static os_log_type_t.error.getter(v102);
  if (os_log_type_enabled(v102, v103))
  {
    v104 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v104 = 0;
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "Could not find assets catalog.", v104, 2u);
    swift_slowDealloc(v104, -1, -1);
  }

LABEL_77:
  v125 = objc_msgSend(v166, "metaData");
  v126 = objc_msgSend(v125, "contactIdentifier");

  if (v126)
  {
    v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
    v129 = v128;

    v170 = &type metadata for String;
    *(_QWORD *)&v169 = v127;
    *((_QWORD *)&v169 + 1) = v129;
    sub_10022138C(&v169, v168);
    v130 = (uint64_t)v172;
    v131 = swift_isUniquelyReferenced_nonNull_native(v172);
    v167 = v130;
    sub_10046B5EC(v168, 0xD000000000000023, (const char *)0x800000010061A690, v131);
    v172 = (const char *)v167;
    swift_bridgeObjectRelease((const char *)0x8000000000000000);
  }
  sub_1003FB8D4((int)&v172, v166, v154 & 1);
LABEL_83:
  v143 = v172;
  v144 = (const char *)sub_100323054((uint64_t)v172);
  swift_bridgeObjectRelease(v143);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v146 = swift_bridgeObjectRelease(v144).n128_u64[0];
  objc_msgSend(v155, "setAdditionalInfo:", isa, v146);

}

void sub_1003FCD0C(uint64_t a1)
{
  uint64_t v1;

  sub_1003FAD80(a1, v1);
}

uint64_t sub_1003FCD14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003FCD24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003FCD2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003FCD58(uint64_t a1)
{
  uint64_t v1;

  sub_1003FB090(a1, *(_QWORD *)(v1 + 16));
}

uint64_t Optional.tryAuthUnwrap(_:)@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, v11);
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v10, v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  v14 = sub_100244304();
  swift_allocError(&type metadata for SFAuthenticationErrorMessage, v14, 0, 0);
  *(_DWORD *)v15 = 10;
  *(_QWORD *)(v15 + 8) = a1;
  *(_QWORD *)(v15 + 16) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_willThrow(v16);
}

uint64_t sub_1003FCE8C(uint64_t a1, int a2)
{
  char *v2;
  double v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  const char *v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  double v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t aBlock[5];
  uint64_t v77;

  v4 = v2;
  v63 = a2;
  v62 = *(double *)&a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  __chkstk_darwin(v5);
  v72 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v69 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTimeInterval(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  v10 = __chkstk_darwin(v9);
  v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - v12;
  v14 = type metadata accessor for DispatchTime(0);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v57 - v18;
  v20 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v61 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchPredicate(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (uint64_t *)((char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  v60 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)(v26);
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_1007B4088, sub_1003FE020);
    goto LABEL_8;
  }
  v59 = v4;
  v58 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer;
  v28 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer];
  if (v28)
  {
    swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer]);
    swift_unknownObjectRetain(v28);
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease(v28);
  }
  if ((v63 & 1) != 0)
    v3 = 15.0;
  else
    v3 = v62;
  sub_100360CE4();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v29 = sub_100220D78(&qword_1007B7398, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  v30 = sub_100008384(&qword_1007B73A0);
  v31 = sub_10026E2FC(&qword_1007B73A8, &qword_1007B73A0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v20, v29);
  v26 = (_QWORD *)static OS_dispatch_source.makeTimerSource(flags:queue:)(v22, v60);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v20);
  ObjectType = swift_getObjectType(v26);
  static DispatchTime.now()(ObjectType);
  + infix(_:_:)(v17, v3);
  v33 = v65;
  v34 = *(void (**)(char *, uint64_t))(v64 + 8);
  v34(v17, v65);
  v36 = v67;
  v35 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v13, enum case for DispatchTimeInterval.never(_:), v68);
  v37 = v66;
  sub_10027D73C(v66);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v19, v13, v37, ObjectType);
  v38 = *(void (**)(char *, uint64_t))(v36 + 8);
  v38(v37, v35);
  v38(v13, v35);
  v34(v19, v33);
  v39 = swift_allocObject(&unk_100727FB0, 24, 7);
  v19 = v59;
  swift_unknownObjectWeakInit(v39 + 16, v59);
  aBlock[4] = (uint64_t)sub_1003FE96C;
  v77 = v39;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10025BBB4;
  aBlock[3] = (uint64_t)&unk_100727FC8;
  v40 = _Block_copy(aBlock);
  swift_retain(v39);
  v41 = v69;
  j___s8Dispatch0A3QoSV11unspecifiedACvgZ(ObjectType);
  v42 = v72;
  sub_10048671C();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v41, v42, v40, ObjectType);
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v74);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v71);
  v43 = v77;
  swift_release(v39);
  swift_release(v43);
  v44 = *(_QWORD *)&v19[v58];
  *(_QWORD *)&v19[v58] = v26;
  swift_unknownObjectRetain(v26);
  swift_unknownObjectRelease(v44);
  if (qword_1007B4088 != -1)
    goto LABEL_13;
LABEL_8:
  v45 = type metadata accessor for Logger(0);
  sub_100221DF8(v45, (uint64_t)qword_1007BFEA0);
  v46 = v19;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc(22, -1);
    v50 = swift_slowAlloc(32, -1);
    aBlock[0] = v50;
    *(_DWORD *)v49 = 136315394;
    v51 = type metadata accessor for UUID(0);
    v52 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v53 = dispatch thunk of CustomStringConvertible.description.getter(v51, v52);
    v55 = (const char *)v54;
    v75 = sub_100228BD8(v53, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, aBlock, v49 + 4);

    swift_bridgeObjectRelease(v55);
    *(_WORD *)(v49 + 12) = 2048;
    v75 = *(_QWORD *)&v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, aBlock, v49 + 14);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Starting response timer for %s to fire in %f sec", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v49, -1, -1);

  }
  else
  {

  }
  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease(v26);
}

uint64_t sub_1003FD560()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint8_t **)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_1007B4088, sub_1003FE020);
    goto LABEL_4;
  }
  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer;
  v6 = *(_QWORD **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer];
  if (!v6)
    return result;
  v10 = qword_1007B4088;
  swift_unknownObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer]);
  if (v10 != -1)
    goto LABEL_10;
LABEL_4:
  v11 = type metadata accessor for Logger(0);
  sub_100221DF8(v11, (uint64_t)qword_1007BFEA0);
  v12 = v2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v25 = v16;
    *(_DWORD *)v15 = 136315138;
    v27 = v16;
    v24 = v15 + 4;
    v17 = type metadata accessor for UUID(0);
    v18 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
    v21 = v20;
    v26 = sub_100228BD8(v19, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v24);

    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Canceling response timer for %s", v15, 0xCu);
    v22 = v25;
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  swift_getObjectType(v6);
  OS_dispatch_source.cancel()();
  v23 = *(_QWORD *)&v2[v1];
  *(_QWORD *)&v2[v1] = 0;
  swift_unknownObjectRelease(v6);
  return swift_unknownObjectRelease(v23);
}

uint64_t sub_1003FD808(unint64_t a1)
{
  if (a1 > 8)
    return 3;
  else
    return byte_1005D7D22[a1];
}

uint64_t sub_1003FD828()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1007B4088 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B4088, sub_1003FE020);
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007BFEA0);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v20 = v12;
    v13 = type metadata accessor for UUID(0);
    v14 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    v17 = (const char *)v16;
    v19 = sub_100228BD8(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Invalidating %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  return sub_1003FD560();
}

uint64_t sub_1003FDA90(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 8)
    return 0;
  return result;
}

unint64_t sub_1003FDAA0(uint64_t a1)
{
  unint64_t result;

  result = 1769105779;
  switch(a1)
  {
    case 0:
      result = 0x6E776F6E6B6E75;
      break;
    case 1:
      return result;
    case 2:
      result = 0x6C6C61576F6E616ELL;
      break;
    case 3:
      result = 0xD000000000000013;
      break;
    case 4:
      result = 0x6C436B636F6C6E75;
      break;
    case 5:
      result = 0xD000000000000015;
      break;
    case 6:
      result = 0x636F6C6E5563616DLL;
      break;
    case 7:
      result = 0x6F7270704163616DLL;
      break;
    case 8:
      result = 0x6172747369676572;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_1003FDBD4(unint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;

  if (a1 - 1 >= 8)
    v3 = 0;
  else
    v3 = 0x101050508080101uLL >> (8 * (a1 - 1));
  v4 = v3;
  v5 = SFDeviceClassCodeGet(a1, a2);
  v6 = (0x18Eu >> a1) & 1;
  if (a1 < 9)
  {
    v7 = (0x71u >> a1) & 1;
  }
  else
  {
    v6 = 0;
    v7 = 1;
  }
  if (v4 == v5)
    return v7;
  else
    return v6;
}

Swift::Int sub_1003FDC4C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1003FDC90()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1003FDCB8()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_1003FDCF8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1003FE924(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1003FDD28(_QWORD *a1@<X8>)
{
  *a1 = &off_10071CC18;
}

unint64_t sub_1003FDD38()
{
  uint64_t *v0;

  return sub_1003FDAA0(*v0);
}

unint64_t static SFAuthenticationError._nsErrorDomain.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1003FDD5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100220D78(&qword_1007B4AE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_1003FDD9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100220D78(&qword_1007B4AE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_1003FDDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100220D78(&qword_1007B4AE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

Swift::Int sub_1003FDE34()
{
  unsigned __int8 *v0;
  int v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 2006);
  return Hasher._finalize()();
}

void sub_1003FDE78()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 2006);
}

Swift::Int sub_1003FDEA4()
{
  unsigned __int8 *v0;
  int v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 2006);
  return Hasher._finalize()();
}

uint64_t sub_1003FDEE4@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1003FE934(*a1);
  *a2 = result;
  return result;
}

void sub_1003FDF0C(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 2006;
}

void sub_1003FDF1C(_QWORD *a1@<X8>)
{
  *a1 = &off_10071C8E8;
}

uint64_t sub_1003FDF2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1003FDF68 + 4 * byte_1005D7778[a1]))(0xD000000000000016, 0x800000010061A920);
}

uint64_t sub_1003FDF68()
{
  uint64_t v0;

  return v0 - 7;
}

uint64_t sub_1003FE018()
{
  unsigned __int8 *v0;

  return sub_1003FDF2C(*v0);
}

uint64_t sub_1003FE020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BFEA0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BFEA0);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1003FE0B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x100))();

  }
}

id sub_1003FE144()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAuthenticationSession(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003FE208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003FE2E0(a1, a2, a3, &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, &qword_1007BFF70);
}

uint64_t sub_1003FE21C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1003FE264()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
}

uint64_t sub_1003FE278@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1003FE8DC(v3, a1);
}

uint64_t sub_1003FE2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003FE2E0(a1, a2, a3, &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, &qword_1007B9E38);
}

uint64_t sub_1003FE2E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  _QWORD *v5;
  uint64_t v8;
  _BYTE v10[24];

  v8 = *v5 + *a4;
  swift_beginAccess(v8, v10, 33, 0);
  sub_10023A084(a1, v8, a5);
  return swift_endAccess(v10);
}

uint64_t sub_1003FE348()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xE8))();
}

uint64_t SFAuthenticationError.description.getter()
{
  id v0;
  uint64_t v1;

  v0 = (id)SFAuthenticationErrorToString();
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v0);

  return v1;
}

uint64_t sub_1003FE3C8()
{
  return sub_100220D78(&qword_1007BFEC0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
}

uint64_t sub_1003FE3F4()
{
  return sub_100220D78(&qword_1007BFEC8, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&unk_1005CDD5C);
}

uint64_t sub_1003FE420()
{
  return sub_100220D78(&qword_1007BFED0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&unk_1005CDD20);
}

unint64_t sub_1003FE450()
{
  unint64_t result;

  result = qword_1007BFED8;
  if (!qword_1007BFED8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(result, (unint64_t *)&qword_1007BFED8);
  }
  return result;
}

uint64_t sub_1003FE494()
{
  return sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
}

uint64_t sub_1003FE4C0()
{
  unsigned int *v0;
  id v1;
  uint64_t v2;

  v1 = (id)SFAuthenticationErrorToString(*v0);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_1003FE50C()
{
  return type metadata accessor for SDAuthenticationSession(0);
}

uint64_t type metadata accessor for SDAuthenticationSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BFF38;
  if (!qword_1007BFF38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSession);
  return result;
}

uint64_t sub_1003FE550(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = "(";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = &unk_1005D79C0;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationType()
{
  return &type metadata for SDAuthenticationType;
}

uint64_t storeEnumTagSinglePayload for SDAuthenticationRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003FE648 + 4 * byte_1005D7788[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003FE67C + 4 * byte_1005D7783[v4]))();
}

uint64_t sub_1003FE67C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FE684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003FE68CLL);
  return result;
}

uint64_t sub_1003FE698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003FE6A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003FE6A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FE6AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationRole()
{
  return &type metadata for SDAuthenticationRole;
}

uint64_t destroy for SFAuthenticationErrorMessage(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s16DaemoniOSLibrary28SFAuthenticationErrorMessageVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SFAuthenticationErrorMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for SFAuthenticationErrorMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SFAuthenticationErrorMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFAuthenticationErrorMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAuthenticationErrorMessage()
{
  return &type metadata for SFAuthenticationErrorMessage;
}

unint64_t sub_1003FE824()
{
  unint64_t result;

  result = qword_1007BFF48;
  if (!qword_1007BFF48)
  {
    result = swift_getWitnessTable(&unk_1005D7A80, &type metadata for SDAuthenticationRole);
    atomic_store(result, (unint64_t *)&qword_1007BFF48);
  }
  return result;
}

uint64_t sub_1003FE868()
{
  return sub_10026E2FC(&qword_1007BFF50, &qword_1007BFF58, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003FE898()
{
  unint64_t result;

  result = qword_1007BFF60;
  if (!qword_1007BFF60)
  {
    result = swift_getWitnessTable(&unk_1005D7B80, &type metadata for SDAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_1007BFF60);
  }
  return result;
}

uint64_t sub_1003FE8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003FE924(unint64_t result)
{
  if (result > 8)
    return 0;
  return result;
}

uint64_t sub_1003FE934(int a1)
{
  if ((a1 - 2006) >= 0xB)
    return 11;
  else
    return (a1 - 2006);
}

uint64_t sub_1003FE948()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003FE96C()
{
  uint64_t v0;

  sub_1003FE0B0(v0);
}

uint64_t sub_1003FE974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003FE984(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t getEnumTagSinglePayload for SDAuthenticationTransportMessageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAuthenticationTransportMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1003FEA68 + 4 * byte_1005D7792[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1003FEA9C + 4 * byte_1005D778D[v4]))();
}

uint64_t sub_1003FEA9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FEAA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003FEAACLL);
  return result;
}

uint64_t sub_1003FEAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003FEAC0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1003FEAC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FEACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationTransportMessageType()
{
  return &type metadata for SDAuthenticationTransportMessageType;
}

uint64_t sub_1003FEAE8()
{
  return sub_10026E2FC(&qword_1007BFF78, &qword_1007BFF80, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003FEB18()
{
  unint64_t result;

  result = qword_1007BFF88;
  if (!qword_1007BFF88)
  {
    result = swift_getWitnessTable(&unk_1005D7CF8, &type metadata for SDAuthenticationTransportMessageType);
    atomic_store(result, (unint64_t *)&qword_1007BFF88);
  }
  return result;
}

uint64_t sub_1003FEB60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v2[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1003FEBF4, v5, 0);
}

uint64_t sub_1003FEBF4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1007BBC1C);
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1003FEC48;
  return sub_100352BB0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003FEC48(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_BYTE *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003FECA4, v3, 0);
}

uint64_t sub_1003FECA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, unint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v15;

  if (*(_BYTE *)(v0 + 72) != 1)
  {
LABEL_9:
    v13 = 0;
    goto LABEL_10;
  }
  v1 = SFAirDropReceive.AskRequest.files.getter();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v15 = v1;
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v6 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v7 = *(_QWORD *)(v0 + 48);
      v8 = *(_QWORD *)(v0 + 32);
      v9 = v6(v7, v4, v8);
      SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v9);
      v11 = v10;
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      LOBYTE(v11) = SFIsPDF(v12);

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v8);
      if ((v11 & 1) == 0)
        break;
      v4 += v5;
      if (!--v2)
      {
        v1 = v15;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v15);
    goto LABEL_9;
  }
LABEL_7:
  swift_bridgeObjectRelease(v1);
  v13 = 1;
LABEL_10:
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_1003FEDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  char v19;
  uint64_t v20;

  v7 = type metadata accessor for SFPlatform(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v3 + 16);
  v13 = SFFilesAppAvailable(v9);
  if ((_DWORD)v13
    && (static SFPlatform.visionOS.getter(v13),
        v14 = static SFPlatform.isPlatform(_:)(v11),
        v15 = *(void (**)(char *, uint64_t))(v8 + 8),
        v16 = ((uint64_t (*)(char *, uint64_t))v15)(v11, v7),
        (v14 & 1) == 0))
  {
    static SFPlatform.macOS.getter(v16);
    v19 = static SFPlatform.isPlatform(_:)(v11);
    v15(v11, v7);
    if ((v19 & 1) != 0)
      v17 = 1;
    else
      v17 = *(_BYTE *)(v12 + 24) ^ 1;
  }
  else
  {
    v17 = 0;
  }
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100324988(a1, a2, v17 & 1, a3);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPDFs()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary27SDAirDropContentHandlerPDFs);
}

uint64_t sub_1003FEED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPDFs();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  result = swift_allocObject(v4, 25, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 0;
  *(_QWORD *)(v3 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1003FEF2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007BFFBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1003FEB60(a1);
}

uint64_t sub_1003FEF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1003FEDB0(a1, a2, a3);
}

void sub_1003FEFA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100353004(a1, a2, a3);
}

uint64_t sub_1003FEFC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003FF02C, static AirDropActor.shared, 0);
}

uint64_t sub_1003FF02C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = static AirDropActor.shared;
  *(_QWORD *)(v0 + 24) = static AirDropActor.shared;
  return swift_task_switch(sub_100353730, v1, 0);
}

uint64_t sub_1003FF04C(uint64_t a1, uint64_t a2)
{
  return sub_1003FF2CC(a2);
}

uint64_t sub_1003FF054@<X0>(uint64_t a1@<X8>)
{
  return sub_10035386C(a1);
}

void sub_1003FF078(uint64_t a1, char a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  double v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  _BYTE v26[56];

  v4 = SFAirDropReceive.AskRequest.files.getter(a1);
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  if (v5 <= 1)
  {
    sub_10032D49C(a1, a2 & 1);
  }
  else
  {
    v6 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v6, v26);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 4605008;
    v8 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = v5;
    *(_QWORD *)&v9 = swift_bridgeObjectRetain((const char *)0xE300000000000000).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v9);
    v10._countAndFlagsBits = 95;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 4605008;
    v11._object = (void *)0xE300000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease((const char *)0xE300000000000000);
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000;
    String.append(_:)(v12);
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v13._countAndFlagsBits = 0x4C4154495041435FLL;
      v13._object = (void *)0xEC00000044455A49;
      String.append(_:)(v13);
    }
    v14._countAndFlagsBits = 0x545845545FLL;
    v14._object = (void *)0xE500000000000000;
    String.append(_:)(v14);
    swift_setDeallocating(inited);
    v15 = *(_QWORD *)(inited + 16);
    v16 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v8, v15, v16);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
    v19 = (id)SFLocalizedStringForKey(v17, v18);

    if (v19)
    {
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v23 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v24 + 56) = &type metadata for Int;
      *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v24 + 32) = v5;
      static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
      *(_QWORD *)&v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v24, v25);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003FF2CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v17;
  uint64_t v18;

  v2 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v18 - v8;
  v10 = SFFilesAppAvailable(v7);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, a1, v2);
  if ((v10 & 1) == 0)
  {
    v11(v6, (uint64_t)v9, v2);
    v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v12 == enum case for SFAirDropReceive.ItemDestination.customApp(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
      v13 = *(_QWORD *)v6;
      v14 = *((_QWORD *)v6 + 1);
      if (v13 != 0xD000000000000034 || v14 != 0x80000001006133A0)
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0xD000000000000034, 0x80000001006133A0, 0);
        swift_bridgeObjectRelease(v14);
        v15 = v17 ^ 1;
        goto LABEL_8;
      }
      swift_bridgeObjectRelease(0x80000001006133A0);
    }
    else if (v12 != enum case for SFAirDropReceive.ItemDestination.noItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v15 = 1;
      goto LABEL_8;
    }
  }
  v15 = 0;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v15 & 1;
}

void sub_1003FF468()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  nw_listener_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener])
  {
    v2 = v0;
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v3 = type metadata accessor for Logger(0);
    sub_100221DF8(v3, (uint64_t)qword_1007C0080);
    v4 = v0;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      *(_DWORD *)v7 = 136315138;
      v26 = v8;
      v9 = type metadata accessor for UUID(0);
      v10 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v11 = dispatch thunk of CustomStringConvertible.description.getter(v9, v10);
      v13 = v12;
      v25 = sub_100228BD8(v11, v12, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v7 + 4);

      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting AirDrop Near Field Server for transaction %s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

    }
    else
    {

    }
    v14 = sub_100501C2C(*(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_localIdentity]);
    v15 = NWParameters.nw.getter();
    v16 = nw_listener_create(v15);
    swift_unknownObjectRelease(v15);
    if (v16)
    {
      type metadata accessor for NWListener(0);
      v17 = swift_unknownObjectRetain(v16);
      v18 = NWListener.__allocating_init(_:)(v17);
      v19 = *(_QWORD *)&v2[v1];
      *(_QWORD *)&v2[v1] = v18;
      swift_retain(v18);
      swift_release(v19);
      v20 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener];
      *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener] = v16;
      swift_unknownObjectRetain(v16);
      swift_unknownObjectRelease(v20);
      v21 = swift_allocObject(&unk_1007282B8, 32, 7);
      *(_QWORD *)(v21 + 16) = v4;
      *(_QWORD *)(v21 + 24) = v18;
      v22 = v4;
      swift_retain(v18);
      NWListener.stateUpdateHandler.setter(sub_100401BA0, v21);
      v23 = swift_allocObject(&unk_1007282E0, 24, 7);
      *(_QWORD *)(v23 + 16) = v22;
      v24 = v22;
      NWListener.newConnectionHandler.setter(sub_100401BCC, v23);
      NWListener.start(queue:)(*(_QWORD *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_queue]);
      swift_release(v14);
      swift_unknownObjectRelease(v16);
      swift_release(v18);
    }
    else
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x800000010061AB70, "DaemoniOSLibrary/SDAirDropNearFieldServer.swift", 47, 2, 61, 0);
      __break(1u);
    }
  }
}

void sub_1003FF7B8()
{
  sub_1003FF7E0(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
}

void sub_1003FF7CC()
{
  sub_1003FF7E0(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
}

void sub_1003FF7E0(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char **v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  const char **v41;
  unint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45[3];

  v5 = type metadata accessor for NWConnection.State(0);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v40 - v9;
  if (qword_1007B3EF0 != -1)
    swift_once(&qword_1007B3EF0, sub_1002FA36C);
  v11 = type metadata accessor for Logger(0);
  sub_100221DF8(v11, (uint64_t)qword_1007BA148);
  v12 = v2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v42 = (unint64_t)a2;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v45[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v17 = 0xEE00726576726553;
    v18 = 0x2072756F6A6E6F42;
    if (v12[*a1] != 1)
    {
      v18 = 0x656946207261654ELL;
      v17 = 0xEA0000000000646CLL;
    }
    if (v12[*a1])
      v19 = v18;
    else
      v19 = 0xD00000000000001ALL;
    if (v12[*a1])
      v20 = (const char *)v17;
    else
      v20 = (const char *)0x8000000100615690;
    v44 = (const char *)sub_100228BD8(v19, (unint64_t)v20, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v15 + 4);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Cleaning up connections for %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    a2 = (_QWORD *)v42;
  }
  else
  {

  }
  v21 = (const char **)&v12[*a2];
  *(_QWORD *)&v22 = swift_beginAccess(v21, v45, 1, 0).n128_u64[0];
  v23 = (uint64_t)*v21;
  v44 = (const char *)_swiftEmptyArrayStorage;
  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain((const char *)v23, v22);
    if (v24)
      goto LABEL_16;
LABEL_30:
    v36 = swift_bridgeObjectRelease((const char *)v23).n128_u64[0];
    v37 = (const char *)_swiftEmptyArrayStorage;
LABEL_31:
    v39 = *v21;
    *v21 = v37;
    swift_bridgeObjectRelease(v39, *(double *)&v36);
    return;
  }
  if (v23 < 0)
    v38 = v23;
  else
    v38 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v23, v22);
  v24 = _CocoaArrayWrapper.endIndex.getter(v38);
  if (!v24)
    goto LABEL_30;
LABEL_16:
  if (v24 >= 1)
  {
    v25 = 0;
    v41 = v21;
    v42 = v23 & 0xC000000000000001;
    v26 = enum case for NWConnection.State.cancelled(_:);
    v27 = (const char *)v23;
    do
    {
      if (v42)
      {
        v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
      }
      else
      {
        v30 = *(_QWORD *)(v23 + 8 * v25 + 32);
        swift_retain(v30);
      }
      NWConnection.state.getter();
      v31 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v8, v26, v5);
      v32 = sub_100220D78(&qword_1007C0130, (uint64_t (*)(uint64_t))&type metadata accessor for NWConnection.State, (uint64_t)&protocol conformance descriptor for NWConnection.State);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v5, v32);
      v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v8, v5);
      v35 = ((uint64_t (*)(char *, uint64_t))v34)(v10, v5);
      if ((v33 & 1) != 0)
      {
        swift_release(v30);
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v35);
        v28 = *((_QWORD *)v44 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
        v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v30);
        specialized ContiguousArray._endMutation()(v29);
      }
      ++v25;
      v23 = (uint64_t)v27;
    }
    while (v24 != v25);
    v36 = swift_bridgeObjectRelease(v27).n128_u64[0];
    v37 = v44;
    v21 = v41;
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1003FFBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C0080);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0080);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003FFC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v6 = type metadata accessor for NWListener.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject(&unk_100728308, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject(&unk_100728380, v17 + 8, v15 | 7);
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v18[v16], v9, v6);
  *(_QWORD *)&v18[v17] = a3;
  swift_retain(a3);
  v19 = sub_100252EE0((uint64_t)v12, (uint64_t)&unk_1007C0140, (uint64_t)v18);
  return swift_release(v19);
}

uint64_t sub_1003FFE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return swift_task_switch(sub_1003FFE2C, 0, 0);
}

uint64_t sub_1003FFE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1007C014C);
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_1003FFEC8;
    return sub_1003FFF20(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003FFEC8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));

  return swift_task_switch(sub_1002E3B60, 0, 0);
}

uint64_t sub_1003FFF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = type metadata accessor for NWError(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v3[15] = swift_task_alloc(v6);
  v7 = type metadata accessor for NWListener.State(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v3[19] = static AirDropActor.shared;
  return swift_task_switch(sub_100400008, v9, 0);
}

uint64_t sub_100400008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t Strong;
  _QWORD *v62;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint8_t *buf;
  uint64_t v88;
  uint64_t *v89;

  v89 = (uint64_t *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v2, *(_QWORD *)(v0 + 56), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v5, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007C0080);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15 = v14(v10, v9, v12);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    if (v18)
    {
      v88 = *(_QWORD *)(v0 + 88);
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v86 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138412290;
      v23 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v24 = swift_allocError(v21, v23, 0, 0);
      v14(v25, v19, v21);
      v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *v89 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, v0 + 56, v22 + 4);
      *v86 = v26;
      v27 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v27(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop Near Field server waiting with error %@", v22, 0xCu);
      v28 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v86, 1, v28);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }
    v27(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 80));
    goto LABEL_41;
  }
  if (v4 == enum case for NWListener.State.failed(_:))
  {
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v29, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v33 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 88);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007C0080);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v39 = v38(v33, v34, v35);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v44 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 96);
    v45 = *(_QWORD *)(v0 + 80);
    if (v42)
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      buf = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138412290;
      v47 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v48 = swift_allocError(v45, v47, 0, 0);
      v38(v49, v43, v45);
      v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(_QWORD *)(v0 + 40) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v89, v46 + 4);
      *(_QWORD *)buf = v50;
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop Near Field server failed with error %@", v46, 0xCu);
      v52 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(buf, 1, v52);
      swift_slowDealloc(buf, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    }

    *(_QWORD *)(v0 + 168) = v51;
    v59 = *(_QWORD *)(v0 + 72);
    NWListener.cancel()();
    Strong = swift_unknownObjectWeakLoadStrong(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate, v60);
    *(_QWORD *)(v0 + 176) = Strong;
    if (Strong)
    {
      v62 = (_QWORD *)swift_task_alloc(dword_1007B9C44);
      *(_QWORD *)(v0 + 184) = v62;
      *v62 = v0;
      v62[1] = sub_100349AE0;
      return sub_1002DBEF0(0, *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    goto LABEL_41;
  }
  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v53 = type metadata accessor for Logger(0);
    v54 = sub_100221DF8(v53, (uint64_t)qword_1007C0080);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter(v55);
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_35;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Near Field server setting up";
LABEL_34:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1, -1);
LABEL_35:

    goto LABEL_41;
  }
  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_1007B4090 != -1)
        swift_once(&qword_1007B4090, sub_1003FFBFC);
      v74 = type metadata accessor for Logger(0);
      v75 = sub_100221DF8(v74, (uint64_t)qword_1007C0080);
      v76 = Logger.logObject.getter(v75);
      v77 = static os_log_type_t.default.getter(v76);
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v78 = 0;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Unknown AirDrop Near Field server state", v78, 2u);
        swift_slowDealloc(v78, -1, -1);
      }
      v80 = *(_QWORD *)(v0 + 136);
      v79 = *(_QWORD *)(v0 + 144);
      v81 = *(_QWORD *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
      goto LABEL_41;
    }
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v72 = type metadata accessor for Logger(0);
    v73 = sub_100221DF8(v72, (uint64_t)qword_1007C0080);
    v55 = Logger.logObject.getter(v73);
    v56 = static os_log_type_t.default.getter(v55);
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_35;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Near Field server stopped";
    goto LABEL_34;
  }
  if (qword_1007B4090 != -1)
    swift_once(&qword_1007B4090, sub_1003FFBFC);
  v64 = type metadata accessor for Logger(0);
  v65 = sub_100221DF8(v64, (uint64_t)qword_1007C0080);
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.default.getter(v66);
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop Near Field server ready", v68, 2u);
    swift_slowDealloc(v68, -1, -1);
  }
  v69 = *(_QWORD *)(v0 + 72);

  sub_100400F14();
  v71 = swift_unknownObjectWeakLoadStrong(v69 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate, v70);
  *(_QWORD *)(v0 + 160) = v71;
  if (v71)
    return swift_task_switch(sub_100349A04, static AirDropActor.shared, 0);
LABEL_41:
  v82 = *(_QWORD *)(v0 + 112);
  v83 = *(_QWORD *)(v0 + 120);
  v85 = *(_QWORD *)(v0 + 96);
  v84 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100400898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_100728308, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  v9 = (_QWORD *)swift_allocObject(&unk_100728330, 48, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  v10 = sub_100252EE0((uint64_t)v6, (uint64_t)&unk_1007C0108, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_100400984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1004009A0, 0, 0);
}

uint64_t sub_1004009A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    return swift_task_switch(sub_100400A50, static AirDropActor.shared, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100400A50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  sub_100400A90(*(_QWORD *)(v0 + 56));

  return swift_task_switch(sub_10028A0E4, 0, 0);
}

uint64_t sub_100400A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE v28[24];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1003FF7E0(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
  swift_beginAccess(v11, v28, 33, 0);
  v12 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v14 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v14 >= v13 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, a1);
  specialized Array._endMutation()(v15);
  swift_endAccess(v28);
  v16 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_transactionID;
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = swift_allocObject(&unk_100728308, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v16, v4);
  v19 = qword_1007B3D98;
  swift_retain(a1);
  swift_retain(v18);
  if (v19 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v20 = static AirDropActor.shared;
  v21 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v22 = *(unsigned __int8 *)(v5 + 80);
  v23 = (v22 + 48) & ~v22;
  v24 = (char *)swift_allocObject(&unk_100728358, v23 + v6, v22 | 7);
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = a1;
  *((_QWORD *)v24 + 5) = v18;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(&v24[v23], v7, v4);
  swift_retain(v20);
  swift_release(v18);
  v25 = sub_100252EC0((uint64_t)v10, (uint64_t)&unk_1007C0120, (uint64_t)v24);
  return swift_release(v25);
}

uint64_t sub_100400D00()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_1007B4090 != -1)
    swift_once(&qword_1007B4090, sub_1003FFBFC);
  v1 = type metadata accessor for Logger(0);
  sub_100221DF8(v1, (uint64_t)qword_1007C0080);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    *(_DWORD *)v5 = 136315138;
    v17 = v6;
    v7 = type metadata accessor for UUID(0);
    v8 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v9 = dispatch thunk of CustomStringConvertible.description.getter(v7, v8);
    v11 = (const char *)v10;
    v16 = sub_100228BD8(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v5 + 4);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping AirDrop Near Field Server for transaction %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  sub_1002E91D4();
  v12 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener;
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener];
  if (v13)
  {
    swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener]);
    NWListener.cancel()();
    swift_release(v13);
    v14 = *(_QWORD *)&v2[v12];
  }
  else
  {
    v14 = 0;
  }
  *(_QWORD *)&v2[v12] = 0;
  return swift_release(v14);
}

void sub_100400F14()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  Class *v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  uint64_t v19;
  nw_endpoint_t bonjour_service;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  Class v25;
  __n128 v26;
  uint64_t v27;
  NSObject *oslog;
  Class v29;
  uint64_t v30;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener];
  if (v1)
  {
    v2 = qword_1007B4090;
    swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener]);
    if (v2 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v3 = type metadata accessor for Logger(0);
    sub_100221DF8(v3, (uint64_t)qword_1007C0080);
    v4 = v0;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = (Class *)swift_slowAlloc(8, -1);
      *(_DWORD *)v7 = 138412290;
      isa = Data._bridgeToObjectiveC()().super.isa;
      v29 = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v7 + 4);
      *v8 = isa;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Setting Near Field server advertised remote public keys to %@", v7, 0xCu);
      v10 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v8, 1, v10);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

    }
    else
    {

    }
    v16 = UUID.uuidString.getter(v11);
    v18 = v17;
    v19 = String.utf8CString.getter(v16, v17);
    swift_bridgeObjectRelease(v18);
    bonjour_service = nw_endpoint_create_bonjour_service((const char *)(v19 + 32), "_asquic._udp", "local");
    swift_release(v19);
    v21 = sub_100008384(&qword_1007B86E0);
    v22 = swift_allocObject(v21, 48, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1005CD2A0;
    v23 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey];
    v24 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey + 8];
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v24;
    sub_10022E4A8(v23, v24);
    v25 = Array._bridgeToObjectiveC()().super.isa;
    v26 = swift_bridgeObjectRelease((const char *)v22);
    nw_endpoint_set_public_keys(bonjour_service, v25, v26);

    v27 = nw_array_create();
    sub_10016B194((uint64_t)bonjour_service, v27);
    nw_listener_set_advertise_endpoints(v1, v27);
    swift_unknownObjectRelease(v1);
    swift_unknownObjectRelease(bonjour_service);
    swift_unknownObjectRelease(v27);
  }
  else
  {
    if (qword_1007B4090 != -1)
      swift_once(&qword_1007B4090, sub_1003FFBFC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C0080);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "No listener available to add advertised endpoints", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

uint64_t sub_100401270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  v7 = type metadata accessor for SDAirDropServerConnection(0);
  v6[10] = v7;
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100401300, static AirDropActor.shared, 0);
}

uint64_t sub_100401300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  v1 = v0 + 16;
  if (qword_1007B4090 != -1)
    swift_once(&qword_1007B4090, sub_1003FFBFC);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007C0080);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 56);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v31 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 40) = v8;
    v11 = type metadata accessor for NWConnection(0);
    swift_retain(v8);
    v12 = String.init<A>(describing:)(v0 + 40, v11);
    v14 = (const char *)v13;
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v12, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4);
    swift_bridgeObjectRelease(v14);
    swift_release_n(v8, 2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AirDrop Near Field server received connection: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    v15 = v9;
    v1 = v0 + 16;
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 56), 2);
  }

  v16 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v16, v1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16, v17);
  if (Strong
    && (v20 = (void *)Strong,
        v21 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate, v19), *(_QWORD *)(v0 + 96) = v21, v20, v21))
  {
    v23 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD **)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 72);
    v25 = *(_QWORD *)(v0 + 56);
    v26 = (char *)v22 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    *v22 = v25;
    v27 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v24, v27);
    swift_storeEnumTagMultiPayload(v22, v23, 2);
    v28 = dword_1007B9B5C;
    swift_retain(v25);
    v29 = (_QWORD *)swift_task_alloc(v28);
    *(_QWORD *)(v0 + 104) = v29;
    *v29 = v0;
    v29[1] = sub_1004015E4;
    return sub_1002D8598(*(_QWORD *)(v0 + 88));
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004015E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 88);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  swift_unknownObjectRelease(v2);
  sub_1002E9C4C(v3);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10040174C()
{
  return type metadata accessor for SDAirDropNearFieldServer(0);
}

uint64_t type metadata accessor for SDAirDropNearFieldServer(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C00F0;
  if (!qword_1007C00F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropNearFieldServer);
  return result;
}

uint64_t sub_100401790(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1005D7DE8;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = &unk_1005D7E00;
    v7 = &unk_1005D7E18;
    v8 = v5;
    v9 = &unk_1005D7E30;
    v10 = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10040184C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener));
}

uint64_t sub_10040185C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType);
}

id sub_100401870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  objc_class *ObjectType;
  objc_super v49;
  _QWORD *v50;

  v8 = v7;
  v45 = a6;
  v46 = a7;
  v43 = a3;
  v44 = a5;
  v47 = a4;
  v41 = a2;
  v42 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v7);
  v9 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener] = 0;
  v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType] = 2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections] = _swiftEmptyArrayStorage;
  v18 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  v38 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_queue;
  sub_1002741DC();
  v19 = v8;
  static DispatchQoS.default.getter();
  v50 = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v22 = sub_10021FF50();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v21, v22, v12, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v40);
  v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000039, 0x800000010061ABB0, v17, v14, v11, 0);
  *(_QWORD *)&v8[v38] = v23;
  v24 = v42;
  *((_QWORD *)v18 + 1) = v41;
  swift_unknownObjectWeakAssign(v18, v24);
  v25 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_transactionID];
  v26 = type metadata accessor for UUID(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v29 = v43;
  v28(v25, v43, v26);
  v31 = v44;
  v30 = v45;
  *(_QWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_localIdentity] = v44;
  v32 = (uint64_t *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey];
  v33 = v46;
  v34 = v47;
  *v32 = v30;
  v32[1] = v33;
  v28(&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listenerUUID], v34, v26);
  swift_unknownObjectRetain(v31);
  sub_10022E4A8(v30, v33);

  v49.receiver = v19;
  v49.super_class = ObjectType;
  v35 = objc_msgSendSuper2(&v49, "init");
  v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v36(v34, v26);
  v36(v29, v26);
  return v35;
}

uint64_t sub_100401B74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100401BA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1003FFC8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100401BA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100401BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_100400898(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100401BD4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100401BF8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100401C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007C0104);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_1004009A0, 0, 0);
}

uint64_t sub_100401C94()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 4));
  swift_release(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100401D18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1007C0114);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D12C;
  return sub_100401270(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100401DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for NWListener.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100401E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for NWListener.State(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1007C013C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  v9[7] = v7;
  v9[8] = v8;
  v9[5] = a1;
  v9[6] = v6;
  return swift_task_switch(sub_1003FFE2C, 0, 0);
}

Swift::Int sub_100401EE8()
{
  void **v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  v2 = v1;
  NSObject.hash(into:)(v4);

  return Hasher._finalize()();
}

void sub_100401F34(uint64_t a1)
{
  id *v1;
  id v3;

  v3 = *v1;
  NSObject.hash(into:)(a1);

}

ValueMetadata *_s17ClassroomEndpointVMa()
{
  return &_s17ClassroomEndpointVN;
}

Swift::Int sub_100401F88()
{
  void **v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  v2 = v1;
  NSObject.hash(into:)(v4);

  return Hasher._finalize()();
}

void sub_100401FD0(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*v1, "identifier");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10040202C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  sub_1002BA59C();
  return static NSObject.== infix(_:_:)(v2, v3) & 1;
}

unint64_t sub_100402070()
{
  unint64_t result;

  result = qword_1007C0150;
  if (!qword_1007C0150)
  {
    result = swift_getWitnessTable(&unk_1005D7E84, &_s17ClassroomEndpointVN);
    atomic_store(result, (unint64_t *)&qword_1007C0150);
  }
  return result;
}

uint64_t sub_1004020B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v16[24];

  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = a1 + 16;
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = swift_allocObject(&unk_1007285A0, 24, 7);
  swift_beginAccess(v5, v16, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  swift_weakInit(v7 + 16, Strong);
  swift_release(Strong);
  v9 = qword_1007B3D98;
  swift_retain(v7);
  if (v9 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v11 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v12 = (_QWORD *)swift_allocObject(&unk_1007285C8, 40, 7);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v7;
  swift_retain(v10);
  swift_release(v7);
  v13 = sub_100252EE0((uint64_t)v4, (uint64_t)&unk_1007C0568, (uint64_t)v12);
  return swift_release(v13);
}

uint64_t sub_10040223C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a1;
  v4[6] = a4;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1004022A8, v5, 0);
}

uint64_t sub_1004022A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1007C0574);
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_10040233C;
    return sub_10040239C();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10040233C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  swift_release(v1);
  return swift_task_switch(sub_10028A0E4, v2, 0);
}

uint64_t sub_10040239C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1[3] = v0;
  v2 = sub_100008384((uint64_t *)&unk_1007BB630);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007B5280);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v1[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v1[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[14] = v9;
  v1[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v1[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[17] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[18] = swift_task_alloc(v12);
  v1[19] = swift_task_alloc(v12);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_1004024E8, v13, 0);
}

uint64_t sub_1004024E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = type metadata accessor for SFAirDropReceive.Failure(0);
  v2 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v3 = swift_allocError(v1, v2, 0, 0);
  *(_QWORD *)(v0 + 168) = v3;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v4, enum case for SFAirDropReceive.Failure.receiverCancelled(_:), v1);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_1004025AC;
  return sub_10050A37C(v3);
}

uint64_t sub_1004025AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10040260C, v2, 0);
}

uint64_t sub_10040260C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  __n128 v16;
  void (*v17)(uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  double v61;
  __n128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = *(_QWORD *)(v1 + 144);
  v2 = *(_QWORD *)(v1 + 152);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  CurrentValueSubject.value.getter(a1);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v1 + 120);
    v75 = *(_QWORD *)(v1 + 136);
    v76 = *(_QWORD *)(v1 + 128);
    v10 = *(_QWORD *)(v1 + 104);
    v72 = *(_QWORD *)(v1 + 112);
    v73 = *(_QWORD *)(v1 + 144);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    v77 = v74;
    *(_DWORD *)v11 = 136315138;
    SFAirDropReceive.Transfer.id.getter(v74);
    v12 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v10, v12);
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v9, v10);
    *(_QWORD *)(v1 + 16) = sub_100228BD8(v13, (unint64_t)v15, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v11 + 4);
    v16 = swift_bridgeObjectRelease(v15);
    v17 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
    v17(v73, v76, v16);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Receiver cancelled transfer %s", v11, 0xCu);
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {
    v20 = *(_QWORD *)(v1 + 136);
    v19 = *(_QWORD *)(v1 + 144);
    v21 = *(_QWORD *)(v1 + 128);

    v17 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
    v18 = ((uint64_t (*)(uint64_t, uint64_t))v17)(v19, v21);
  }
  v23 = *(_QWORD *)(v1 + 88);
  v22 = *(_QWORD *)(v1 + 96);
  v24 = *(_QWORD *)(v1 + 80);
  SFAirDropReceive.Transfer.state.getter(v18);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24);
  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
    goto LABEL_9;
  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
  {
    v26 = *(_QWORD *)(v1 + 152);
    v27 = *(_QWORD *)(v1 + 128);
    v28 = *(_QWORD *)(v1 + 96);
    v30 = *(_QWORD *)(v1 + 40);
    v29 = *(_QWORD *)(v1 + 48);
    v31 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v28, *(_QWORD *)(v1 + 80));
    v32 = &qword_1007BB658;
LABEL_7:
    v33 = sub_100008384(v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v28 + *(int *)(v33 + 48), v31);
    SFAirDrop.PermissionRequest.cancel()();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    ((void (*)(uint64_t, uint64_t))v17)(v26, v27);
    v34 = type metadata accessor for SFAirDrop.ContactInfo(0);
LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v28, v34);
    goto LABEL_14;
  }
  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:))
  {
LABEL_9:
    v35 = *(_QWORD *)(v1 + 152);
    v36 = *(_QWORD *)(v1 + 128);
    v37 = *(_QWORD *)(v1 + 96);
    v38 = *(_QWORD *)(v1 + 72);
    v39 = *(_QWORD *)(v1 + 56);
    v40 = *(_QWORD *)(v1 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v37, *(_QWORD *)(v1 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v37, v39);
    SFAirDrop.PermissionRequest.cancel()();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    ((void (*)(uint64_t, uint64_t))v17)(v35, v36);
  }
  else
  {
    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:)
      || (_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:))
    {
      v41 = *(_QWORD *)(v1 + 152);
      v42 = *(_QWORD *)(v1 + 128);
      v28 = *(_QWORD *)(v1 + 96);
      v43 = *(_QWORD *)(v1 + 72);
      v44 = *(_QWORD *)(v1 + 56);
      v45 = *(_QWORD *)(v1 + 64);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v28, *(_QWORD *)(v1 + 80));
      v46 = sub_100008384(&qword_1007B5290);
      v47 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v28 + *(int *)(v46 + 48)));
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v45 + 32))(v43, v28 + *(int *)(v46 + 64), v44, v47);
      SFAirDrop.PermissionRequest.cancel()();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      ((void (*)(uint64_t, uint64_t))v17)(v41, v42);
      v34 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
      goto LABEL_13;
    }
    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:)
      || (_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
    {
      v54 = *(_QWORD *)(v1 + 152);
      v55 = *(_QWORD *)(v1 + 128);
      v56 = *(_QWORD *)(v1 + 96);
      v57 = *(_QWORD *)(v1 + 72);
      v58 = *(_QWORD *)(v1 + 56);
      v59 = *(_QWORD *)(v1 + 64);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v56, *(_QWORD *)(v1 + 80));
      v60 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
      *(_QWORD *)&v61 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v56 + v60[12])).n128_u64[0];
      v62 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v56 + v60[16]), v61);
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v59 + 32))(v57, v56 + v60[20], v58, v62);
      SFAirDrop.PermissionRequest.cancel()();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      ((void (*)(uint64_t, uint64_t))v17)(v54, v55);
      v63 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v56, v63);
      goto LABEL_14;
    }
    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
    {
      v26 = *(_QWORD *)(v1 + 152);
      v27 = *(_QWORD *)(v1 + 128);
      v28 = *(_QWORD *)(v1 + 96);
      v29 = *(_QWORD *)(v1 + 72);
      v31 = *(_QWORD *)(v1 + 56);
      v30 = *(_QWORD *)(v1 + 64);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v28, *(_QWORD *)(v1 + 80));
      v32 = (uint64_t *)&unk_1007BCFC0;
      goto LABEL_7;
    }
    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
    {
      v26 = *(_QWORD *)(v1 + 152);
      v27 = *(_QWORD *)(v1 + 128);
      v28 = *(_QWORD *)(v1 + 96);
      v30 = *(_QWORD *)(v1 + 40);
      v29 = *(_QWORD *)(v1 + 48);
      v31 = *(_QWORD *)(v1 + 32);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 96))(v28, *(_QWORD *)(v1 + 80));
      v32 = &qword_1007BB628;
      goto LABEL_7;
    }
    v64 = Logger.logObject.getter(v25);
    v65 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Nothing to cancel for transfer state", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
    }
    v67 = *(_QWORD *)(v1 + 152);
    v68 = *(_QWORD *)(v1 + 128);
    v70 = *(_QWORD *)(v1 + 88);
    v69 = *(_QWORD *)(v1 + 96);
    v71 = *(_QWORD *)(v1 + 80);

    ((void (*)(uint64_t, uint64_t))v17)(v67, v68);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
  }
LABEL_14:
  v48 = *(_QWORD *)(v1 + 144);
  v49 = *(_QWORD *)(v1 + 120);
  v50 = *(_QWORD *)(v1 + 96);
  v51 = *(_QWORD *)(v1 + 72);
  v52 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 152));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100402C54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100008384(&qword_1007C0508);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v8);
  v2[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
  v2[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[13] = v10;
  v11 = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[14] = v11;
  v12 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v2[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[16] = v13;
  v14 = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[17] = v14;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2[18] = static AirDropActor.shared;
  v15 = (_QWORD *)swift_task_alloc(dword_1007C0514);
  v2[19] = v15;
  *v15 = v2;
  v15[1] = sub_100402DC4;
  return sub_100403180(v14, v11);
}

uint64_t sub_100402DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v4 = sub_100403058;
  else
    v4 = sub_100402E28;
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_100402E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 56);
  v25 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v22 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v0 + 16);
  v9 = v6 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v6, v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, v19, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v6, enum case for SFAirDropReceive.AskResponse.accept(_:), v7);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v10(v8, v6, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v7);
  sub_10053DB60(v8, v21);
  sub_10000D0F0(v8, &qword_1007C0508);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v22);
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v23, v6, v7);
  CurrentValueSubject.value.getter(v11);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v24, v23, v7);
  v12 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24 + *(int *)(v12 + 20), v21, v22);
  v13 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100403058()
{
  uint64_t *v0;
  uint64_t **v1;

  v1 = (uint64_t **)swift_task_alloc(dword_1007C051C);
  v0[21] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1004030A8;
  return sub_100408A64(v0[2], v0[20]);
}

uint64_t sub_1004030A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_100403100, v1, 0);
}

uint64_t sub_100403100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_errorRelease(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100403180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3[62] = a2;
  v3[63] = v2;
  v3[61] = a1;
  v4 = sub_100008384(&qword_1007B6C20);
  v3[64] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B6BF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[65] = swift_task_alloc(v5);
  v3[66] = swift_task_alloc(v5);
  v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v3[67] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[68] = v7;
  v3[69] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[70] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[71] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[72] = swift_task_alloc(v10);
  v3[73] = swift_task_alloc(v10);
  v3[74] = swift_task_alloc(v10);
  v3[75] = swift_task_alloc(v10);
  v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[76] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[77] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[78] = swift_task_alloc(v13);
  v3[79] = swift_task_alloc(v13);
  v3[80] = swift_task_alloc(v13);
  v3[81] = swift_task_alloc(v13);
  v3[82] = swift_task_alloc(v13);
  v3[83] = swift_task_alloc(v13);
  v14 = type metadata accessor for SFAirDrop.TransferType(0);
  v3[84] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[85] = v15;
  v3[86] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3[87] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[88] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[89] = swift_task_alloc(v18);
  v3[90] = swift_task_alloc(v18);
  v3[91] = swift_task_alloc(v18);
  v3[92] = swift_task_alloc(v18);
  v3[93] = swift_task_alloc(v18);
  v3[94] = swift_task_alloc(v18);
  v3[95] = swift_task_alloc(v18);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v19 = static AirDropActor.shared;
  v3[96] = static AirDropActor.shared;
  return swift_task_switch(sub_1004033C4, v19, 0);
}

uint64_t sub_1004033C4(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _QWORD, uint64_t);
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  int v125;
  NSObject *v126;
  os_log_type_t v127;
  int v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t);
  uint64_t (*v131)(uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(uint64_t, uint64_t);
  uint64_t (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  NSObject *v158;
  os_log_type_t v159;
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  unint64_t v171;
  const char *v172;
  const char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  const char *v177;
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t (*v191)(void);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  void (*v201)(uint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t);
  uint64_t v212;
  NSObject *v213;
  os_log_type_t v214;
  uint8_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  const char *v227;
  uint8_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(uint64_t, _QWORD, uint64_t);
  void (*v237)(uint64_t, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  void (*v247)(uint64_t, uint64_t);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  os_log_type_t typeb[8];
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  _BOOL4 v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(uint64_t, uint64_t);
  uint64_t v280;
  uint64_t v281;
  char log;
  os_log_t loge;
  os_log_t loga;
  os_log_t logb;
  os_log_t logc;
  os_log_t logd;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(uint64_t, os_log_t);
  uint64_t (*v291)(uint64_t, os_log_t);
  void (*v292)(_QWORD, _QWORD, _QWORD);
  uint64_t v293;
  _BYTE *v294;
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t (*v298)(_QWORD);
  uint64_t (*v299)(_QWORD);
  int v300;
  char v301;
  void (*v302)(uint64_t, uint64_t, __n128);
  uint64_t (*v303)(uint64_t);
  void (*v304)(uint64_t, uint64_t);
  uint64_t v305[2];
  Swift::String v306;

  *(_QWORD *)(v1 + 776) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask request START", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v1 + 504);

  v6 = sub_10031AF00();
  v7 = (void *)static NSUserDefaults.airdrop.getter(v6);
  v8 = SFAirDropUserDefaults.alwaysAutoAccept.getter();

  v9 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_deviceStatus), "disableAutoAccept");
  v294 = (_BYTE *)(v1 + 1076);
  v263 = (int)v9;
  if ((v8 & 1) != 0)
  {
    v266 = 1;
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 504)
        + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v10, v1 + 440, 0, 0);
    sub_100244418(v10, v1 + 16);
    v11 = *(_QWORD *)(v1 + 40);
    v12 = *(_QWORD *)(v1 + 48);
    sub_10023A834((_QWORD *)(v1 + 16), v11);
    v266 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    v9 = (id)sub_10022E75C((_QWORD *)(v1 + 16));
  }
  v13 = *(_QWORD *)(v1 + 688);
  v14 = *(_QWORD *)(v1 + 680);
  v15 = *(_QWORD *)(v1 + 672);
  v16 = *(_QWORD *)(v1 + 664);
  v17 = *(_QWORD *)(v1 + 616);
  v18 = *(_QWORD *)(v1 + 608);
  v19 = *(_QWORD *)(v1 + 504);
  *(_QWORD *)(v1 + 784) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest;
  v20 = SFAirDropReceive.AskRequest.type.getter(v9);
  log = SFAirDrop.TransferType.isOnlyExchange.getter(v20);
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  *(_QWORD *)(v1 + 792) = v21;
  v22 = v21(v13, v15);
  *(_QWORD *)(v1 + 800) = *(_QWORD *)(v19
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v23 = CurrentValueSubject.value.getter(v22);
  v276 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v23);
  v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  *(_QWORD *)(v1 + 808) = v24;
  v25 = v18;
  v26 = v24;
  v24(v16, v25);
  v27 = sub_100423E34();
  v271 = v27;
  v28 = SFAirDropReceive.AskRequest.type.getter(v27);
  v29 = SFAirDrop.TransferType.isCustom.getter(v28);
  v30 = v29 & 1;
  *v294 = v29 & 1;
  v31 = v21(v13, v15);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(32, -1);
    *(_DWORD *)v34 = 67110144;
    *(_DWORD *)(v1 + 1052) = v266 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1052, v1 + 1056, v34 + 4);
    *(_WORD *)(v34 + 8) = 1024;
    *(_DWORD *)(v1 + 1056) = log & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1056, v1 + 1060, v34 + 10);
    *(_WORD *)(v34 + 14) = 1024;
    *(_DWORD *)(v1 + 1060) = v276 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1060, v1 + 1064, v34 + 16);
    *(_WORD *)(v34 + 20) = 1024;
    *(_DWORD *)(v1 + 1064) = v271;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1064, v1 + 1068, v34 + 22);
    *(_WORD *)(v34 + 26) = 1024;
    *(_DWORD *)(v1 + 1068) = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1068, v1 + 1072, v34 + 28);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "contentCanAutoAccept: %{BOOL}d isOnlyExchange: %{BOOL}d isPreviewSensitive: %{BOOL}d isDeviceLocked: %{BOOL}d isCustom: %{BOOL}d", (uint8_t *)v34, 0x20u);
    swift_slowDealloc(v34, -1, -1);
  }
  v35 = *(_QWORD *)(v1 + 656);
  v36 = *(_QWORD *)(v1 + 608);
  v37 = *(_QWORD *)(v1 + 600);

  v39 = CurrentValueSubject.value.getter(v38);
  SFAirDropReceive.Transfer.askRequest.getter(v39);
  v26(v35, v36);
  sub_10041EF24(v37);
  v50 = *(_QWORD *)(v1 + 648);
  v51 = (uint64_t (*)(uint64_t, uint64_t))v26;
  v52 = *(_QWORD *)(v1 + 608);
  v53 = *(_QWORD *)(v1 + 600);
  v54 = *(_QWORD *)(v1 + 592);
  v55 = *(_QWORD *)(v1 + 560);
  v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 568) + 8);
  *(_QWORD *)(v1 + 816) = v56;
  v57 = v56(v53, v55);
  v58 = CurrentValueSubject.value.getter(v57);
  SFAirDropReceive.Transfer.askRequest.getter(v58);
  v59 = v51(v50, v52);
  v60 = SFAirDropReceive.AskRequest.canAutoAccept.getter(v59);
  v56(v54, v55);
  v61 = *(_QWORD *)(v1 + 504);
  if ((v60 & 1) != 0)
    v62 = 1;
  else
    v62 = *(unsigned __int8 *)(v61
                             + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept);
  v63 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(_QWORD *)(v1 + 824) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  v64 = v61 + v63;
  swift_beginAccess(v61 + v63, v1 + 416, 0, 0);
  sub_100244418(v64, v1 + 96);
  v65 = sub_100008384(&qword_1007C5E20);
  *(_QWORD *)(v1 + 832) = v65;
  v66 = sub_100008384(&qword_1007C0520);
  if (swift_dynamicCast(v1 + 176, v1 + 96, v65, v66, 6))
  {
    v67 = sub_10000D0F0(v1 + 176, &qword_1007C0528);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Content overrides canAutoAccept - checking...", v70, 2u);
      swift_slowDealloc(v70, -1, -1);
    }
    v71 = *(_QWORD *)(v1 + 640);
    v72 = *(_QWORD *)(v1 + 608);

    v74 = CurrentValueSubject.value.getter(v73);
    SFAirDropReceive.Transfer.askRequest.getter(v74);
    v51(v71, v72);
    v299 = (uint64_t (*)(_QWORD))((char *)&dword_1007BD0E8 + dword_1007BD0E8);
    v75 = (_QWORD *)swift_task_alloc(unk_1007BD0EC);
    *(_QWORD *)(v1 + 840) = v75;
    *v75 = v1;
    v75[1] = sub_100404BBC;
    return v299(*(_QWORD *)(v1 + 584));
  }
  *(_QWORD *)(v1 + 208) = 0;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  v76 = sub_10000D0F0(v1 + 176, &qword_1007C0528);
  if ((v263 | v62 ^ 1) & 1 | ((v266 & 1) == 0) | ((log | v276) | v271) & 1)
  {
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Waiting for permission request task", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }
    v80 = *(_QWORD *)(v1 + 824);
    v82 = *(_QWORD *)(v1 + 504);
    v81 = *(_QWORD *)(v1 + 512);

    sub_100244418(v82 + v80, v1 + 216);
    v83 = *(_QWORD *)(v1 + 240);
    v84 = *(_QWORD *)(v1 + 248);
    v85 = sub_10023A834((_QWORD *)(v1 + 216), v83);
    CurrentValueSubject.value.getter(v85);
    v86 = *(_QWORD *)(v82 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)
        + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation;
    v87 = sub_100008384(&qword_1007B5B20);
    v88 = *(_QWORD *)(v87 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v81, v86, v87);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v81, 0, 1, v87);
    v89 = (_QWORD *)swift_task_alloc(dword_1007C1CD4);
    *(_QWORD *)(v1 + 856) = v89;
    *v89 = v1;
    v89[1] = sub_100406070;
    return sub_10047B9A8(*(_QWORD *)(v1 + 528), *(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 512), v83, v84);
  }
  v90 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
  v289 = *(_QWORD *)(v1 + 760);
  v278 = *(_QWORD *)(v1 + 704);
  loga = *(os_log_t *)(v1 + 696);
  v91 = *(_QWORD *)(v1 + 664);
  v92 = *(_QWORD *)(v1 + 608);
  v93 = *(_QWORD *)(v1 + 552);
  v94 = *(_QWORD *)(v1 + 544);
  v95 = *(_QWORD *)(v1 + 536);
  v96 = *(void (**)(uint64_t, _QWORD, uint64_t))(v94 + 104);
  v96(v93, enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:), v95);
  sub_10053D3FC(v93, v91);
  v97 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v97(v93, v95);
  v90(v91, v92);
  (*(void (**)(uint64_t, _QWORD, os_log_t))(v278 + 104))(v289, enum case for SFAirDropReceive.ItemDestination.default(_:), loga);
  *(_DWORD *)(v1 + 1072) = 1;
  *(_QWORD *)(v1 + 928) = v96;
  *(_QWORD *)(v1 + 920) = v97;
  v98 = *(_QWORD *)(v1 + 832);
  sub_100244418(*(_QWORD *)(v1 + 504) + *(_QWORD *)(v1 + 824), v1 + 296);
  v99 = sub_100008384(&qword_1007C0538);
  if ((swift_dynamicCast(v1 + 336, v1 + 296, v98, v99, 6) & 1) != 0)
  {
    v290 = *(void (**)(uint64_t, os_log_t))(v1 + 816);
    v300 = *v294;
    v100 = *(_QWORD *)(v1 + 760);
    v101 = *(_QWORD *)(v1 + 744);
    v102 = *(_QWORD *)(v1 + 704);
    v273 = v102;
    v279 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
    v103 = *(_QWORD *)(v1 + 696);
    v104 = *(_QWORD *)(v1 + 664);
    v268 = *(_QWORD *)(v1 + 608);
    v105 = *(_QWORD *)(v1 + 576);
    logb = *(os_log_t *)(v1 + 560);
    sub_10026EE60((__int128 *)(v1 + 336), v1 + 256);
    v106 = *(_QWORD *)(v1 + 280);
    v107 = *(_QWORD *)(v1 + 288);
    sub_10023A834((_QWORD *)(v1 + 256), v106);
    v108 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 16);
    v109 = v108(v101, v100, v103);
    v110 = CurrentValueSubject.value.getter(v109);
    SFAirDropReceive.Transfer.askRequest.getter(v110);
    v279(v104, v268);
    v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 8))(v101, v105, v106, v107);
    v290(v105, logb);
    (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v101, v103);
    v112 = sub_10022E75C((_QWORD *)(v1 + 256));
    if (v300 != 1)
    {
      v119 = 0;
      v120 = 0xF000000000000000;
      v114 = v1 + 1076;
      goto LABEL_33;
    }
    v113 = *(_QWORD *)(v1 + 704);
    v114 = v1 + 1076;
  }
  else
  {
    v114 = v1 + 1076;
    v115 = *v294;
    *(_OWORD *)(v1 + 336) = 0u;
    *(_OWORD *)(v1 + 352) = 0u;
    *(_QWORD *)(v1 + 368) = 0;
    v112 = sub_10000D0F0(v1 + 336, &qword_1007C0540);
    if (v115 != 1)
    {
      v119 = 0;
      v111 = 0;
      v120 = 0xF000000000000000;
      goto LABEL_33;
    }
    v111 = 0;
    v113 = *(_QWORD *)(v1 + 704);
    v108 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
  }
  *(_BYTE *)(v114 + 2) = v111 & 1;
  v116 = *(_QWORD *)(v1 + 736);
  v117 = *(_QWORD *)(v1 + 696);
  v108(v116, *(_QWORD *)(v1 + 760), v117);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v113 + 88))(v116, v117) != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
  {
    v192 = *(_QWORD *)(v1 + 832);
    v193 = *(_QWORD *)(v1 + 736);
    v194 = *(_QWORD *)(v1 + 696);
    v195 = *(_QWORD *)(v1 + 504) + *(_QWORD *)(v1 + 824);
    v196 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 704) + 8);
    *(_QWORD *)(v1 + 936) = v196;
    v196(v193, v194);
    sub_100244418(v195, v1 + 136);
    v197 = sub_100008384(&qword_1007C0550);
    if ((swift_dynamicCast(v1 + 376, v1 + 136, v192, v197, 6) & 1) != 0)
    {
      v198 = *(_QWORD *)(v1 + 784);
      v199 = *(_QWORD *)(v1 + 504);
      sub_10000D0F0(v1 + 376, &qword_1007C0558);
      v303 = (uint64_t (*)(uint64_t))((char *)&dword_1007BD0F0 + dword_1007BD0F0);
      v200 = (_QWORD *)swift_task_alloc(unk_1007BD0F4);
      *(_QWORD *)(v1 + 944) = v200;
      *v200 = v1;
      v200[1] = sub_100407510;
      return v303(v199 + v198);
    }
    *(_QWORD *)(v1 + 408) = 0;
    *(_OWORD *)(v1 + 376) = 0u;
    *(_OWORD *)(v1 + 392) = 0u;
    sub_10000D0F0(v1 + 376, &qword_1007C0558);
    v119 = 0;
    v120 = 0xF000000000000000;
    goto LABEL_50;
  }
  v118 = *(uint64_t **)(v1 + 736);
  (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v1 + 704) + 96))(v118, *(_QWORD *)(v1 + 696));
  v119 = *v118;
  v120 = v118[1];
  v121 = sub_100244404(*v118, v120);
  v122 = Logger.logObject.getter(v121);
  v123 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v122, v123))
  {
    v124 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v124 = 0;
    _os_log_impl((void *)&_mh_execute_header, v122, v123, "Retrieved receiverMetadata via destination", v124, 2u);
    swift_slowDealloc(v124, -1, -1);
  }
  sub_100225AA0(v119, v120);

  if (v120 >> 60 == 15)
  {
LABEL_50:
    v221 = SFAirDropReceive.AskRequest.customPayload.getter();
    v223 = v222;
    v224 = sub_100225AA0(v221, v222);
    v225 = Logger.logObject.getter(v224);
    v226 = static os_log_type_t.error.getter(v225);
    if (os_log_type_enabled(v225, v226))
    {
      if (v223 >> 60 == 15)
        v227 = "Failed to receive senderMetadata";
      else
        v227 = "Receiver metadata was not found";
      v228 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v228 = 0;
      _os_log_impl((void *)&_mh_execute_header, v225, v226, v227, v228, 2u);
      swift_slowDealloc(v228, -1, -1);
    }
    v229 = *(_QWORD *)(v1 + 760);
    v230 = *(_QWORD *)(v1 + 704);
    v231 = *(_QWORD *)(v1 + 696);

    v232 = type metadata accessor for SFAirDropReceive.Failure(0);
    v233 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v232, v233, 0, 0);
    v235 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v232 - 8) + 104))(v234, enum case for SFAirDropReceive.Failure.badRequest(_:), v232);
    swift_willThrow(v235);
    sub_100225AA0(v119, v120);
    (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v229, v231);
    v40 = *(_QWORD *)(v1 + 752);
    v41 = *(_QWORD *)(v1 + 744);
    v42 = *(_QWORD *)(v1 + 736);
    v43 = *(_QWORD *)(v1 + 728);
    v44 = *(_QWORD *)(v1 + 720);
    v45 = *(_QWORD *)(v1 + 712);
    v46 = *(_QWORD *)(v1 + 688);
    v47 = *(_QWORD *)(v1 + 664);
    v48 = *(_QWORD *)(v1 + 656);
    *(_QWORD *)typeb = *(_QWORD *)(v1 + 648);
    v255 = *(_QWORD *)(v1 + 640);
    v258 = *(_QWORD *)(v1 + 632);
    v261 = *(_QWORD *)(v1 + 624);
    v264 = *(_QWORD *)(v1 + 600);
    v267 = *(_QWORD *)(v1 + 592);
    v272 = *(_QWORD *)(v1 + 584);
    v277 = *(_QWORD *)(v1 + 576);
    loge = *(os_log_t *)(v1 + 552);
    v288 = *(_QWORD *)(v1 + 528);
    v295 = *(_QWORD *)(v1 + 520);
    v298 = *(uint64_t (**)(_QWORD))(v1 + 512);
    swift_task_dealloc(*(_QWORD *)(v1 + 760));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(v255);
    swift_task_dealloc(v258);
    swift_task_dealloc(v261);
    swift_task_dealloc(v264);
    swift_task_dealloc(v267);
    swift_task_dealloc(v272);
    swift_task_dealloc(v277);
    swift_task_dealloc(loge);
    swift_task_dealloc(v288);
    swift_task_dealloc(v295);
    swift_task_dealloc(v298);
    v191 = *(uint64_t (**)(void))(v1 + 8);
    return v191();
  }
LABEL_33:
  v269 = v111;
  v125 = v111 & 1;
  *(_BYTE *)(v114 + 3) = v125;
  v274 = v120;
  v280 = v119;
  *(_QWORD *)(v1 + 984) = v120;
  *(_QWORD *)(v1 + 976) = v119;
  v126 = Logger.logObject.getter(v112);
  v127 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v126, v127))
  {
    v128 = *(_DWORD *)(v1 + 1072);
    v129 = swift_slowAlloc(14, -1);
    *(_DWORD *)v129 = 67109376;
    *(_DWORD *)(v1 + 1032) = v128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1032, v1 + 1036, v129 + 4);
    *(_WORD *)(v129 + 8) = 1024;
    *(_DWORD *)(v1 + 1036) = v125;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1036, v1 + 1040, v129 + 10);
    _os_log_impl((void *)&_mh_execute_header, v126, v127, "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}", (uint8_t *)v129, 0xEu);
    swift_slowDealloc(v129, -1, -1);
  }
  v130 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
  v131 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
  v291 = *(uint64_t (**)(uint64_t, os_log_t))(v1 + 792);
  v132 = *(_QWORD *)(v1 + 688);
  logc = *(os_log_t *)(v1 + 672);
  v133 = *(_QWORD *)(v1 + 664);
  v134 = *(_QWORD *)(v1 + 608);
  v135 = *(_QWORD *)(v1 + 576);
  v136 = *(_QWORD *)(v1 + 560);

  v296 = sub_1003B0844();
  v138 = v137;
  v301 = v139;
  v140 = CurrentValueSubject.value.getter(v296);
  SFAirDropReceive.Transfer.askRequest.getter(v140);
  v141 = v131(v133, v134);
  SFAirDropReceive.AskRequest.type.getter(v141);
  v142 = v130(v135, v136);
  v143 = SFAirDrop.TransferType.isFiles.getter(v142);
  v144 = v291(v132, logc);
  if ((v143 & 1) == 0)
    goto LABEL_37;
  v145 = v138;
  v146 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
  v147 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
  v148 = *(_QWORD *)(v1 + 664);
  v149 = *(_QWORD *)(v1 + 608);
  v150 = *(_QWORD *)(v1 + 576);
  v151 = *(_QWORD *)(v1 + 560);
  v152 = CurrentValueSubject.value.getter(v144);
  SFAirDropReceive.Transfer.askRequest.getter(v152);
  v153 = v147(v148, v149);
  v154 = SFAirDropReceive.AskRequest.senderIsMe.getter(v153);
  v155 = v146(v150, v151);
  v138 = v145;
  if ((v154 & 1) != 0)
    goto LABEL_37;
  v201 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
  v202 = *(_QWORD *)(v1 + 664);
  v203 = *(_QWORD *)(v1 + 608);
  v204 = CurrentValueSubject.value.getter(v155);
  v205 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v204);
  v201(v202, v203);
  if ((v205 & 1) == 0)
    goto LABEL_37;
  if (v301 != 2)
    goto LABEL_37;
  v206 = *(_QWORD *)(v1 + 760);
  v207 = *(_QWORD *)(v1 + 744);
  v208 = *(_QWORD *)(v1 + 704);
  v209 = *(_QWORD *)(v1 + 696);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v208 + 104))(v207, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v209);
  v210 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  LOBYTE(v206) = dispatch thunk of static Equatable.== infix(_:_:)(v206, v207, v209, v210);
  v211 = *(void (**)(uint64_t, uint64_t))(v208 + 8);
  *(_QWORD *)(v1 + 992) = v211;
  v211(v207, v209);
  if ((v206 & 1) != 0)
  {
LABEL_37:
    v156 = *(_QWORD *)(v1 + 504);
    v292 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 704) + 16);
    v292(*(_QWORD *)(v1 + 712), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
    swift_retain_n(v156, 4);
    v157 = sub_10031B7DC(v296, v138, v301);
    v158 = Logger.logObject.getter(v157);
    v159 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v158, v159))
    {
      v247 = *(void (**)(uint64_t, uint64_t))(v1 + 816);
      v160 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
      v245 = (void *)v138;
      v259 = *(_QWORD *)(v1 + 704);
      v248 = *(_QWORD *)(v1 + 696);
      v250 = *(_QWORD *)(v1 + 712);
      v161 = *(_QWORD *)(v1 + 664);
      v162 = *(_QWORD *)(v1 + 608);
      v244 = *(_QWORD *)(v1 + 576);
      v246 = *(_QWORD *)(v1 + 560);
      v163 = *(_QWORD *)(v1 + 504);
      v164 = swift_slowAlloc(34, -1);
      v256 = swift_slowAlloc(64, -1);
      v305[0] = v256;
      *(_DWORD *)v164 = 67109890;
      type = v159;
      v165 = CurrentValueSubject.value.getter(v256);
      v166 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v165);
      v160(v161, v162);
      swift_release(v163);
      *(_DWORD *)(v1 + 1044) = v166 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1044, v1 + 1048, v164 + 4);
      v167 = swift_release(v163);
      *(_WORD *)(v164 + 8) = 1024;
      v168 = CurrentValueSubject.value.getter(v167);
      SFAirDropReceive.Transfer.askRequest.getter(v168);
      v169 = ((uint64_t (*)(uint64_t, uint64_t))v160)(v161, v162);
      v170 = SFAirDropReceive.AskRequest.senderIsMe.getter(v169);
      v247(v244, v246);
      swift_release(v163);
      *(_DWORD *)(v1 + 1040) = v170 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1040, v1 + 1044, v164 + 10);
      swift_release(v163);
      *(_WORD *)(v164 + 14) = 2080;
      sub_10031B7DC(v296, (uint64_t)v245, v301);
      v306._countAndFlagsBits = v296;
      v306._object = v245;
      v171 = sub_1003ABB94(v306, v301);
      v173 = v172;
      sub_10031B7F4(v296, (uint64_t)v245, v301);
      *(_QWORD *)(v1 + 472) = sub_100228BD8(v171, (unint64_t)v173, v305);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 472, v1 + 480, v164 + 16);
      swift_bridgeObjectRelease(v173);
      sub_10031B7F4(v296, (uint64_t)v245, v301);
      sub_10031B7F4(v296, (uint64_t)v245, v301);
      *(_WORD *)(v164 + 24) = 2080;
      v174 = sub_100220D78(&qword_1007C04A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      v175 = dispatch thunk of CustomStringConvertible.description.getter(v248, v174);
      v177 = (const char *)v176;
      *(_QWORD *)(v1 + 464) = sub_100228BD8(v175, v176, v305);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 464, v1 + 472, v164 + 26);
      v178 = swift_bridgeObjectRelease(v177);
      v302 = *(void (**)(uint64_t, uint64_t, __n128))(v259 + 8);
      v302(v250, v248, v178);
      _os_log_impl((void *)&_mh_execute_header, v158, type, "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, askStepDestination: %s}", (uint8_t *)v164, 0x22u);
      swift_arrayDestroy(v256, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v256, -1, -1);
      swift_slowDealloc(v164, -1, -1);

    }
    else
    {
      v179 = *(_QWORD *)(v1 + 712);
      v180 = *(_QWORD *)(v1 + 704);
      v181 = *(_QWORD *)(v1 + 696);
      swift_release_n(*(_QWORD *)(v1 + 504), 4);

      sub_10031B7F4(v296, v138, v301);
      sub_10031B7F4(v296, v138, v301);
      v302 = *(void (**)(uint64_t, uint64_t, __n128))(v180 + 8);
      ((void (*)(uint64_t, uint64_t))v302)(v179, v181);
    }
    v292(*(_QWORD *)(v1 + 488), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v269 & 1, v280, v274);
    v182 = *(_QWORD *)(v1 + 760);
    v183 = *(_QWORD *)(v1 + 752);
    v184 = *(_QWORD *)(v1 + 744);
    v185 = *(_QWORD *)(v1 + 736);
    v186 = *(_QWORD *)(v1 + 728);
    v187 = *(_QWORD *)(v1 + 720);
    v188 = *(_QWORD *)(v1 + 712);
    v189 = *(_QWORD *)(v1 + 688);
    v190 = *(_QWORD *)(v1 + 664);
    v249 = *(_QWORD *)(v1 + 656);
    v251 = *(_QWORD *)(v1 + 648);
    *(_QWORD *)typea = *(_QWORD *)(v1 + 640);
    v257 = *(_QWORD *)(v1 + 632);
    v260 = *(_QWORD *)(v1 + 624);
    v262 = *(_QWORD *)(v1 + 600);
    v265 = *(_QWORD *)(v1 + 592);
    v270 = *(_QWORD *)(v1 + 584);
    v275 = *(_QWORD *)(v1 + 576);
    v281 = *(_QWORD *)(v1 + 552);
    logd = *(os_log_t *)(v1 + 528);
    v293 = *(_QWORD *)(v1 + 520);
    v297 = *(_QWORD *)(v1 + 512);
    ((void (*)(uint64_t, _QWORD))v302)(v182, *(_QWORD *)(v1 + 696));
    swift_task_dealloc(v182);
    swift_task_dealloc(v183);
    swift_task_dealloc(v184);
    swift_task_dealloc(v185);
    swift_task_dealloc(v186);
    swift_task_dealloc(v187);
    swift_task_dealloc(v188);
    swift_task_dealloc(v189);
    swift_task_dealloc(v190);
    swift_task_dealloc(v249);
    swift_task_dealloc(v251);
    swift_task_dealloc(*(_QWORD *)typea);
    swift_task_dealloc(v257);
    swift_task_dealloc(v260);
    swift_task_dealloc(v262);
    swift_task_dealloc(v265);
    swift_task_dealloc(v270);
    swift_task_dealloc(v275);
    swift_task_dealloc(v281);
    swift_task_dealloc(logd);
    swift_task_dealloc(v293);
    swift_task_dealloc(v297);
    v191 = *(uint64_t (**)(void))(v1 + 8);
    return v191();
  }
  v212 = sub_10031B7F4(v296, v145, 2u);
  v213 = Logger.logObject.getter(v212);
  v214 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v213, v214))
  {
    v215 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v215 = 0;
    _os_log_impl((void *)&_mh_execute_header, v213, v214, "Ask sensitive preview START", v215, 2u);
    swift_slowDealloc(v215, -1, -1);
  }
  v216 = *(_QWORD *)(v1 + 824);
  v217 = *(_QWORD *)(v1 + 760);
  v218 = *(_QWORD *)(v1 + 520);
  v219 = *(_QWORD *)(v1 + 504);

  sub_100244418(v219 + v216, v1 + 56);
  v220 = sub_10023A834((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
  CurrentValueSubject.value.getter(v220);
  sub_10047D8B4(v217, v218);
  v236 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 928);
  v304 = *(void (**)(uint64_t, uint64_t))(v1 + 920);
  v237 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
  v238 = *(_QWORD *)(v1 + 664);
  v239 = *(_QWORD *)(v1 + 608);
  v240 = *(_QWORD *)(v1 + 552);
  v241 = *(_QWORD *)(v1 + 536);
  v242 = *(_QWORD *)(v1 + 520);
  v237(*(_QWORD *)(v1 + 624), v239);
  sub_10022E75C((_QWORD *)(v1 + 56));
  v243 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v240, v242, v243);
  v236(v240, enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:), v241);
  sub_10053D3FC(v240, v238);
  v304(v240, v241);
  v237(v238, v239);
  return swift_task_switch(sub_100408278, 0, 0);
}

uint64_t sub_100404BBC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 840);
  *(_BYTE *)(v3 + 1077) = a1;
  *(_QWORD *)(v3 + 848) = v1;
  swift_task_dealloc(v4);
  v5 = *(_QWORD *)(v3 + 768);
  (*(void (**)(_QWORD, _QWORD))(v3 + 816))(*(_QWORD *)(v3 + 584), *(_QWORD *)(v3 + 560));
  if (v1)
    v6 = sub_100405F00;
  else
    v6 = sub_100404C48;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_100404C48(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  int v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);
  uint64_t (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD, _QWORD);
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  unint64_t v102;
  const char *v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  const char *v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(void);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  void (*v132)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  NSObject *v158;
  os_log_type_t v159;
  const char *v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, _QWORD, uint64_t);
  void (*v179)(uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t (*v202)(uint64_t, uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  NSObject *logc;
  os_log_t logd;
  os_log_t loge;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t, os_log_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t, uint64_t);
  void *v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned __int8 *v238;
  char v239;
  unsigned __int8 *v240;
  unsigned __int8 *v241;
  unsigned __int8 *v242;
  uint64_t v243[3];
  Swift::String v244;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v2, v3))
  {
    v21 = *(unsigned __int8 *)(v1 + 1077);

    if (v21 != 1)
      goto LABEL_3;
LABEL_7:
    v238 = (unsigned __int8 *)(v1 + 1076);
    v205 = *(_QWORD *)(v1 + 848);
    v22 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
    v229 = *(_QWORD *)(v1 + 760);
    log = *(os_log_t *)(v1 + 704);
    v224 = *(_QWORD *)(v1 + 696);
    v23 = *(_QWORD *)(v1 + 664);
    v24 = *(_QWORD *)(v1 + 608);
    v25 = *(_QWORD *)(v1 + 552);
    v26 = *(_QWORD *)(v1 + 544);
    v27 = *(_QWORD *)(v1 + 536);
    v28 = *(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104);
    v28(v25, enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:), v27);
    sub_10053D3FC(v25, v23);
    v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v29(v25, v27);
    v22(v23, v24);
    ((void (*)(uint64_t, _QWORD, uint64_t))log[13].isa)(v229, enum case for SFAirDropReceive.ItemDestination.default(_:), v224);
    *(_DWORD *)(v1 + 1072) = 1;
    *(_QWORD *)(v1 + 928) = v28;
    *(_QWORD *)(v1 + 920) = v29;
    v30 = *(_QWORD *)(v1 + 832);
    sub_100244418(*(_QWORD *)(v1 + 504) + *(_QWORD *)(v1 + 824), v1 + 296);
    v31 = sub_100008384(&qword_1007C0538);
    if ((swift_dynamicCast(v1 + 336, v1 + 296, v30, v31, 6) & 1) != 0)
    {
      v230 = *(void (**)(uint64_t, uint64_t))(v1 + 816);
      v234 = *v238;
      v32 = *(_QWORD *)(v1 + 760);
      v33 = *(_QWORD *)(v1 + 744);
      v34 = *(_QWORD *)(v1 + 704);
      v35 = *(_QWORD *)(v1 + 696);
      v36 = *(_QWORD *)(v1 + 664);
      v214 = *(_QWORD *)(v1 + 608);
      loga = *(os_log_t *)(v1 + 808);
      v37 = *(_QWORD *)(v1 + 576);
      v225 = *(_QWORD *)(v1 + 560);
      sub_10026EE60((__int128 *)(v1 + 336), v1 + 256);
      v38 = *(_QWORD *)(v1 + 280);
      v39 = *(_QWORD *)(v1 + 288);
      sub_10023A834((_QWORD *)(v1 + 256), v38);
      v202 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      v40 = v202(v33, v32, v35);
      v41 = CurrentValueSubject.value.getter(v40);
      SFAirDropReceive.Transfer.askRequest.getter(v41);
      ((void (*)(uint64_t, uint64_t))loga)(v36, v214);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8))(v33, v37, v38, v39);
      v230(v37, v225);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      v43 = sub_10022E75C((_QWORD *)(v1 + 256));
      if (v234 != 1)
      {
        v51 = 0;
        v52 = 0xF000000000000000;
        v45 = v1 + 1076;
        goto LABEL_19;
      }
      v44 = *(_QWORD *)(v1 + 704);
      v45 = v1 + 1076;
      v46 = v202;
    }
    else
    {
      v45 = v1 + 1076;
      v47 = *v238;
      *(_OWORD *)(v1 + 336) = 0u;
      *(_OWORD *)(v1 + 352) = 0u;
      *(_QWORD *)(v1 + 368) = 0;
      v43 = sub_10000D0F0(v1 + 336, &qword_1007C0540);
      if (v47 != 1)
      {
        v51 = 0;
        v42 = 0;
        v52 = 0xF000000000000000;
        goto LABEL_19;
      }
      v42 = 0;
      v44 = *(_QWORD *)(v1 + 704);
      v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    }
    *(_BYTE *)(v45 + 2) = v42 & 1;
    v48 = *(_QWORD *)(v1 + 736);
    v49 = *(_QWORD *)(v1 + 696);
    v46(v48, *(_QWORD *)(v1 + 760), v49);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v48, v49) != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
    {
      v123 = *(_QWORD *)(v1 + 832);
      v124 = *(_QWORD *)(v1 + 736);
      v125 = *(_QWORD *)(v1 + 696);
      v126 = *(_QWORD *)(v1 + 504) + *(_QWORD *)(v1 + 824);
      v127 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 704) + 8);
      *(_QWORD *)(v1 + 936) = v127;
      v127(v124, v125);
      sub_100244418(v126, v1 + 136);
      v128 = sub_100008384(&qword_1007C0550);
      if ((swift_dynamicCast(v1 + 376, v1 + 136, v123, v128, 6) & 1) != 0)
      {
        v129 = *(_QWORD *)(v1 + 784);
        v130 = *(_QWORD *)(v1 + 504);
        sub_10000D0F0(v1 + 376, &qword_1007C0558);
        v241 = (unsigned __int8 *)&dword_1007BD0F0 + dword_1007BD0F0;
        v131 = (_QWORD *)swift_task_alloc(unk_1007BD0F4);
        *(_QWORD *)(v1 + 944) = v131;
        *v131 = v1;
        v131[1] = sub_100407510;
        return ((uint64_t (*)(uint64_t))v241)(v130 + v129);
      }
      *(_QWORD *)(v1 + 408) = 0;
      *(_OWORD *)(v1 + 376) = 0u;
      *(_OWORD *)(v1 + 392) = 0u;
      sub_10000D0F0(v1 + 376, &qword_1007C0558);
      v51 = 0;
      v52 = 0xF000000000000000;
      goto LABEL_37;
    }
    v50 = *(uint64_t **)(v1 + 736);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v1 + 704) + 96))(v50, *(_QWORD *)(v1 + 696));
    v51 = *v50;
    v52 = v50[1];
    v53 = sub_100244404(*v50, v52);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Retrieved receiverMetadata via destination", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }
    sub_100225AA0(v51, v52);

    if (v52 >> 60 == 15)
    {
LABEL_37:
      v154 = SFAirDropReceive.AskRequest.customPayload.getter();
      v156 = v155;
      v157 = sub_100225AA0(v154, v155);
      v158 = Logger.logObject.getter(v157);
      v159 = static os_log_type_t.error.getter(v158);
      if (os_log_type_enabled(v158, v159))
      {
        if (v156 >> 60 == 15)
          v160 = "Failed to receive senderMetadata";
        else
          v160 = "Receiver metadata was not found";
        v161 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v161 = 0;
        _os_log_impl((void *)&_mh_execute_header, v158, v159, v160, v161, 2u);
        swift_slowDealloc(v161, -1, -1);
      }
      v162 = *(_QWORD *)(v1 + 760);
      v163 = *(_QWORD *)(v1 + 704);
      v164 = *(_QWORD *)(v1 + 696);

      v165 = type metadata accessor for SFAirDropReceive.Failure(0);
      v166 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      swift_allocError(v165, v166, 0, 0);
      v168 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v165 - 8) + 104))(v167, enum case for SFAirDropReceive.Failure.badRequest(_:), v165);
      swift_willThrow(v168);
      sub_100225AA0(v51, v52);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v162, v164);
      goto LABEL_43;
    }
LABEL_19:
    v208 = v42;
    v57 = v42 & 1;
    *(_BYTE *)(v45 + 3) = v57;
    v211 = v52;
    v215 = v51;
    *(_QWORD *)(v1 + 984) = v52;
    *(_QWORD *)(v1 + 976) = v51;
    v58 = Logger.logObject.getter(v43);
    v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = *(_DWORD *)(v1 + 1072);
      v61 = swift_slowAlloc(14, -1);
      *(_DWORD *)v61 = 67109376;
      *(_DWORD *)(v1 + 1032) = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1032, v1 + 1036, v61 + 4);
      *(_WORD *)(v61 + 8) = 1024;
      *(_DWORD *)(v1 + 1036) = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1036, v1 + 1040, v61 + 10);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}", (uint8_t *)v61, 0xEu);
      swift_slowDealloc(v61, -1, -1);
    }
    v62 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
    v63 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
    v226 = *(uint64_t (**)(uint64_t, os_log_t))(v1 + 792);
    v64 = *(_QWORD *)(v1 + 688);
    logb = *(os_log_t *)(v1 + 672);
    v65 = *(_QWORD *)(v1 + 664);
    v66 = *(_QWORD *)(v1 + 608);
    v67 = *(_QWORD *)(v1 + 576);
    v68 = *(_QWORD *)(v1 + 560);

    v69 = sub_1003B0844();
    v231 = v70;
    v235 = v69;
    v239 = v71;
    v72 = CurrentValueSubject.value.getter(v69);
    SFAirDropReceive.Transfer.askRequest.getter(v72);
    v73 = v63(v65, v66);
    SFAirDropReceive.AskRequest.type.getter(v73);
    v74 = v62(v67, v68);
    v75 = SFAirDrop.TransferType.isFiles.getter(v74);
    v76 = v226(v64, logb);
    if ((v75 & 1) == 0)
      goto LABEL_23;
    v77 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
    v78 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
    v79 = *(_QWORD *)(v1 + 664);
    v80 = *(_QWORD *)(v1 + 608);
    v81 = *(_QWORD *)(v1 + 576);
    v82 = *(_QWORD *)(v1 + 560);
    v83 = CurrentValueSubject.value.getter(v76);
    SFAirDropReceive.Transfer.askRequest.getter(v83);
    v84 = v78(v79, v80);
    v85 = SFAirDropReceive.AskRequest.senderIsMe.getter(v84);
    v86 = v77(v81, v82);
    if ((v85 & 1) != 0)
      goto LABEL_23;
    v132 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
    v133 = *(_QWORD *)(v1 + 664);
    v134 = *(_QWORD *)(v1 + 608);
    v135 = CurrentValueSubject.value.getter(v86);
    v136 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v135);
    v132(v133, v134);
    if ((v136 & 1) == 0)
      goto LABEL_23;
    if (v239 != 2)
      goto LABEL_23;
    v137 = *(_QWORD *)(v1 + 760);
    v138 = *(_QWORD *)(v1 + 744);
    v139 = *(_QWORD *)(v1 + 704);
    v140 = *(_QWORD *)(v1 + 696);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v139 + 104))(v138, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v140);
    v141 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    LOBYTE(v137) = dispatch thunk of static Equatable.== infix(_:_:)(v137, v138, v140, v141);
    v142 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
    *(_QWORD *)(v1 + 992) = v142;
    v142(v138, v140);
    if ((v137 & 1) != 0)
    {
LABEL_23:
      v87 = *(_QWORD *)(v1 + 504);
      v88 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 704) + 16);
      v88(*(_QWORD *)(v1 + 712), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
      swift_retain_n(v87, 4);
      v89 = sub_10031B7DC(v235, (uint64_t)v231, v239);
      v90 = Logger.logObject.getter(v89);
      v91 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v90, v91))
      {
        v189 = *(void (**)(uint64_t, uint64_t))(v1 + 816);
        v92 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
        v199 = *(_QWORD *)(v1 + 704);
        v190 = *(_QWORD *)(v1 + 696);
        v191 = *(_QWORD *)(v1 + 712);
        v93 = *(_QWORD *)(v1 + 664);
        v186 = *(_QWORD *)(v1 + 608);
        v187 = *(_QWORD *)(v1 + 576);
        v188 = *(_QWORD *)(v1 + 560);
        logc = v90;
        v94 = *(_QWORD *)(v1 + 504);
        v95 = swift_slowAlloc(34, -1);
        v196 = swift_slowAlloc(64, -1);
        v243[0] = v196;
        *(_DWORD *)v95 = 67109890;
        type = v91;
        v96 = CurrentValueSubject.value.getter(v196);
        v97 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v96);
        v92(v93, v186);
        swift_release(v94);
        *(_DWORD *)(v1 + 1044) = v97 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1044, v1 + 1048, v95 + 4);
        v98 = swift_release(v94);
        *(_WORD *)(v95 + 8) = 1024;
        v99 = CurrentValueSubject.value.getter(v98);
        SFAirDropReceive.Transfer.askRequest.getter(v99);
        v100 = ((uint64_t (*)(uint64_t, uint64_t))v92)(v93, v186);
        v101 = SFAirDropReceive.AskRequest.senderIsMe.getter(v100);
        v189(v187, v188);
        swift_release(v94);
        *(_DWORD *)(v1 + 1040) = v101 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1040, v1 + 1044, v95 + 10);
        swift_release(v94);
        *(_WORD *)(v95 + 14) = 2080;
        sub_10031B7DC(v235, (uint64_t)v231, v239);
        v244._countAndFlagsBits = v235;
        v244._object = v231;
        v102 = sub_1003ABB94(v244, v239);
        v104 = v103;
        sub_10031B7F4(v235, (uint64_t)v231, v239);
        *(_QWORD *)(v1 + 472) = sub_100228BD8(v102, (unint64_t)v104, v243);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 472, v1 + 480, v95 + 16);
        swift_bridgeObjectRelease(v104);
        sub_10031B7F4(v235, (uint64_t)v231, v239);
        sub_10031B7F4(v235, (uint64_t)v231, v239);
        *(_WORD *)(v95 + 24) = 2080;
        v105 = sub_100220D78(&qword_1007C04A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
        v106 = dispatch thunk of CustomStringConvertible.description.getter(v190, v105);
        v108 = (const char *)v107;
        *(_QWORD *)(v1 + 464) = sub_100228BD8(v106, v107, v243);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 464, v1 + 472, v95 + 26);
        v109 = swift_bridgeObjectRelease(v108);
        v240 = *(unsigned __int8 **)(v199 + 8);
        ((void (*)(uint64_t, uint64_t, __n128))v240)(v191, v190, v109);
        _os_log_impl((void *)&_mh_execute_header, logc, type, "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, askStepDestination: %s}", (uint8_t *)v95, 0x22u);
        swift_arrayDestroy(v196, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v196, -1, -1);
        swift_slowDealloc(v95, -1, -1);

      }
      else
      {
        v110 = *(_QWORD *)(v1 + 712);
        v111 = *(_QWORD *)(v1 + 704);
        v112 = *(_QWORD *)(v1 + 696);
        swift_release_n(*(_QWORD *)(v1 + 504), 4);

        sub_10031B7F4(v235, (uint64_t)v231, v239);
        sub_10031B7F4(v235, (uint64_t)v231, v239);
        v240 = *(unsigned __int8 **)(v111 + 8);
        ((void (*)(uint64_t, uint64_t))v240)(v110, v112);
      }
      v88(*(_QWORD *)(v1 + 488), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
      SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v208 & 1, v215, v211);
      v113 = *(_QWORD *)(v1 + 760);
      v114 = *(_QWORD *)(v1 + 752);
      v115 = *(_QWORD *)(v1 + 744);
      v116 = *(_QWORD *)(v1 + 736);
      v117 = *(_QWORD *)(v1 + 728);
      v118 = *(_QWORD *)(v1 + 720);
      v119 = *(_QWORD *)(v1 + 712);
      v120 = *(_QWORD *)(v1 + 688);
      v121 = *(_QWORD *)(v1 + 664);
      v192 = *(_QWORD *)(v1 + 656);
      *(_QWORD *)typea = *(_QWORD *)(v1 + 648);
      v197 = *(_QWORD *)(v1 + 640);
      v200 = *(_QWORD *)(v1 + 632);
      v203 = *(_QWORD *)(v1 + 624);
      v206 = *(_QWORD *)(v1 + 600);
      v209 = *(_QWORD *)(v1 + 592);
      v212 = *(_QWORD *)(v1 + 584);
      v216 = *(_QWORD *)(v1 + 576);
      logd = *(os_log_t *)(v1 + 552);
      v227 = *(_QWORD *)(v1 + 528);
      v232 = *(_QWORD *)(v1 + 520);
      v236 = *(_QWORD *)(v1 + 512);
      ((void (*)(uint64_t, _QWORD))v240)(v113, *(_QWORD *)(v1 + 696));
      swift_task_dealloc(v113);
      swift_task_dealloc(v114);
      swift_task_dealloc(v115);
      swift_task_dealloc(v116);
      swift_task_dealloc(v117);
      swift_task_dealloc(v118);
      swift_task_dealloc(v119);
      swift_task_dealloc(v120);
      swift_task_dealloc(v121);
      swift_task_dealloc(v192);
      swift_task_dealloc(*(_QWORD *)typea);
      swift_task_dealloc(v197);
      swift_task_dealloc(v200);
      swift_task_dealloc(v203);
      swift_task_dealloc(v206);
      swift_task_dealloc(v209);
      swift_task_dealloc(v212);
      swift_task_dealloc(v216);
      swift_task_dealloc(logd);
      swift_task_dealloc(v227);
      swift_task_dealloc(v232);
      swift_task_dealloc(v236);
      v122 = *(uint64_t (**)(void))(v1 + 8);
      return v122();
    }
    v143 = sub_10031B7F4(v235, (uint64_t)v231, 2u);
    v144 = Logger.logObject.getter(v143);
    v145 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v144, v145))
    {
      v146 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v146 = 0;
      _os_log_impl((void *)&_mh_execute_header, v144, v145, "Ask sensitive preview START", v146, 2u);
      swift_slowDealloc(v146, -1, -1);
    }
    v147 = *(_QWORD *)(v1 + 824);
    v148 = *(_QWORD *)(v1 + 760);
    v149 = *(_QWORD *)(v1 + 520);
    v150 = *(_QWORD *)(v1 + 504);

    sub_100244418(v150 + v147, v1 + 56);
    v151 = sub_10023A834((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
    CurrentValueSubject.value.getter(v151);
    sub_10047D8B4(v148, v149);
    if (!v205)
    {
      v178 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 928);
      v242 = *(unsigned __int8 **)(v1 + 920);
      v179 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
      v180 = *(_QWORD *)(v1 + 664);
      v181 = *(_QWORD *)(v1 + 608);
      v182 = *(_QWORD *)(v1 + 552);
      v183 = *(_QWORD *)(v1 + 536);
      v184 = *(_QWORD *)(v1 + 520);
      v179(*(_QWORD *)(v1 + 624), v181);
      sub_10022E75C((_QWORD *)(v1 + 56));
      v185 = sub_100008384(&qword_1007B5280);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v182, v184, v185);
      v178(v182, enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:), v183);
      sub_10053D3FC(v182, v180);
      ((void (*)(uint64_t, uint64_t))v242)(v182, v183);
      v179(v180, v181);
      return swift_task_switch(sub_100408278, 0, 0);
    }
    v152 = *(_QWORD *)(v1 + 760);
    v153 = *(_QWORD *)(v1 + 696);
    (*(void (**)(_QWORD, _QWORD))(v1 + 808))(*(_QWORD *)(v1 + 624), *(_QWORD *)(v1 + 608));
    sub_100225AA0(v215, v211);
    v142(v152, v153);
    sub_10022E75C((_QWORD *)(v1 + 56));
LABEL_43:
    v169 = *(_QWORD *)(v1 + 752);
    v170 = *(_QWORD *)(v1 + 744);
    v171 = *(_QWORD *)(v1 + 736);
    v172 = *(_QWORD *)(v1 + 728);
    v173 = *(_QWORD *)(v1 + 720);
    v174 = *(_QWORD *)(v1 + 712);
    v175 = *(_QWORD *)(v1 + 688);
    v176 = *(_QWORD *)(v1 + 664);
    v177 = *(_QWORD *)(v1 + 656);
    *(_QWORD *)typeb = *(_QWORD *)(v1 + 648);
    v198 = *(_QWORD *)(v1 + 640);
    v201 = *(_QWORD *)(v1 + 632);
    v204 = *(_QWORD *)(v1 + 624);
    v207 = *(_QWORD *)(v1 + 600);
    v210 = *(_QWORD *)(v1 + 592);
    v213 = *(_QWORD *)(v1 + 584);
    v217 = *(_QWORD *)(v1 + 576);
    loge = *(os_log_t *)(v1 + 552);
    v228 = *(_QWORD *)(v1 + 528);
    v233 = *(_QWORD *)(v1 + 520);
    v237 = *(_QWORD *)(v1 + 512);
    swift_task_dealloc(*(_QWORD *)(v1 + 760));
    swift_task_dealloc(v169);
    swift_task_dealloc(v170);
    swift_task_dealloc(v171);
    swift_task_dealloc(v172);
    swift_task_dealloc(v173);
    swift_task_dealloc(v174);
    swift_task_dealloc(v175);
    swift_task_dealloc(v176);
    swift_task_dealloc(v177);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(v198);
    swift_task_dealloc(v201);
    swift_task_dealloc(v204);
    swift_task_dealloc(v207);
    swift_task_dealloc(v210);
    swift_task_dealloc(v213);
    swift_task_dealloc(v217);
    swift_task_dealloc(loge);
    swift_task_dealloc(v228);
    swift_task_dealloc(v233);
    swift_task_dealloc(v237);
    v122 = *(uint64_t (**)(void))(v1 + 8);
    return v122();
  }
  v4 = *(unsigned __int8 *)(v1 + 1077);
  v5 = (uint8_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v5 = 67109120;
  *(_DWORD *)(v1 + 1048) = v4;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1048, v1 + 1052, v5 + 4);
  _os_log_impl((void *)&_mh_execute_header, v2, v3, "Content overrides canAutoAccept - willAutoAccept = %{BOOL}d", v5, 8u);
  swift_slowDealloc(v5, -1, -1);

  if ((v4 & 1) != 0)
    goto LABEL_7;
LABEL_3:
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Waiting for permission request task", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  v10 = *(_QWORD *)(v1 + 824);
  v12 = *(_QWORD *)(v1 + 504);
  v11 = *(_QWORD *)(v1 + 512);

  sub_100244418(v12 + v10, v1 + 216);
  v13 = *(_QWORD *)(v1 + 240);
  v14 = *(_QWORD *)(v1 + 248);
  v15 = sub_10023A834((_QWORD *)(v1 + 216), v13);
  CurrentValueSubject.value.getter(v15);
  v16 = *(_QWORD *)(v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)
      + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation;
  v17 = sub_100008384(&qword_1007B5B20);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v11, v16, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
  v19 = (_QWORD *)swift_task_alloc(dword_1007C1CD4);
  *(_QWORD *)(v1 + 856) = v19;
  *v19 = v1;
  v19[1] = sub_100406070;
  return sub_10047B9A8(*(_QWORD *)(v1 + 528), *(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 512), v13, v14);
}

uint64_t sub_100405F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 720);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = *(_QWORD *)(v0 + 664);
  v9 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 648);
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_QWORD *)(v0 + 632);
  v14 = *(_QWORD *)(v0 + 624);
  v15 = *(_QWORD *)(v0 + 600);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 520);
  v22 = *(_QWORD *)(v0 + 512);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100406070()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = (*v1)[107];
  (*v1)[108] = v0;
  swift_task_dealloc(v3);
  v4 = (void (*)(uint64_t, uint64_t))v2[101];
  v5 = v2[96];
  v6 = v2[79];
  v7 = v2[76];
  sub_10000D0F0(v2[64], &qword_1007B6C20);
  v4(v6, v7);
  if (v0)
    v8 = sub_1004088EC;
  else
    v8 = sub_100406110;
  return swift_task_switch(v8, v5, 0);
}

uint64_t sub_100406110()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t);

  v1 = (void (*)(uint64_t, uint64_t))v0[101];
  v2 = v0[83];
  v3 = v0[76];
  v4 = v0[69];
  v5 = v0[68];
  v6 = v0[67];
  v7 = v0[66];
  sub_10022E75C(v0 + 27);
  v8 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, v7, v8);
  v9 = enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v0[109] = v10;
  v10(v4, v9, v6);
  sub_10053D3FC(v4, v2);
  v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[110] = v11;
  v11(v4, v6);
  v1(v2, v3);
  return swift_task_switch(sub_1004061F4, 0, 0);
}

uint64_t sub_1004061F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[66];
  v2 = swift_task_alloc(32);
  v0[111] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[112] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[113] = v4;
  *v4 = v0;
  v4[1] = sub_10040629C;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[94], &unk_1007C0530, v2, sub_100424404, v3, 0, 0, v0[87]);
}

uint64_t sub_10040629C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 904);
  *(_QWORD *)(*(_QWORD *)v1 + 912) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100407344;
    v5 = 0;
  }
  else
  {
    v6 = v2[112];
    v7 = v2[111];
    v8 = v2[96];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_10040631C;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10040631C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  int v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD, _QWORD, _QWORD);
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  const char *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  const char *v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(void);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  const char *v142;
  uint8_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, _QWORD, uint64_t);
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(uint64_t, _QWORD, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  os_log_t log;
  os_log_t loga;
  NSObject *logb;
  os_log_t logc;
  os_log_t logd;
  uint64_t v206;
  uint64_t (*v207)(uint64_t, os_log_t);
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t, uint64_t);
  void *v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  void (*v219)(uint64_t, uint64_t, __n128);
  uint64_t (*v220)(uint64_t);
  void (*v221)(uint64_t, uint64_t);
  uint64_t v222[3];
  Swift::String v223;

  v1 = (unsigned __int8 *)(v0 + 1076);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 696);
  sub_10000D0F0(*(_QWORD *)(v0 + 528), &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
  v6 = *(_QWORD *)(v0 + 912);
  v7 = *(_QWORD *)(v0 + 880);
  v8 = *(_QWORD *)(v0 + 872);
  *(_DWORD *)(v0 + 1072) = 0;
  *(_QWORD *)(v0 + 928) = v8;
  *(_QWORD *)(v0 + 920) = v7;
  v9 = *(_QWORD *)(v0 + 832);
  sub_100244418(*(_QWORD *)(v0 + 504) + *(_QWORD *)(v0 + 824), v0 + 296);
  v10 = sub_100008384(&qword_1007C0538);
  v187 = v6;
  if (!swift_dynamicCast(v0 + 336, v0 + 296, v9, v10, 6))
  {
    v27 = *v1;
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    *(_QWORD *)(v0 + 368) = 0;
    v24 = sub_10000D0F0(v0 + 336, &qword_1007C0540);
    if (v27 == 1)
    {
      v23 = 0;
      v25 = *(_QWORD *)(v0 + 704);
      v26 = *(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 16);
      goto LABEL_6;
    }
    v34 = 0;
    v23 = 0;
LABEL_13:
    v35 = 0xF000000000000000;
    goto LABEL_14;
  }
  v210 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
  v214 = *v1;
  v11 = *(_QWORD *)(v0 + 760);
  v12 = *(_QWORD *)(v0 + 744);
  v13 = *(_QWORD *)(v0 + 704);
  v197 = v13;
  log = *(os_log_t *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 696);
  v15 = *(_QWORD *)(v0 + 664);
  v193 = *(_QWORD *)(v0 + 608);
  v16 = *(_QWORD *)(v0 + 576);
  v206 = *(_QWORD *)(v0 + 560);
  sub_10026EE60((__int128 *)(v0 + 336), v0 + 256);
  v18 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 288);
  sub_10023A834((_QWORD *)(v0 + 256), v18);
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16);
  v20 = v14;
  v181 = v19;
  v21 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(v12, v11, v14);
  v22 = CurrentValueSubject.value.getter(v21);
  SFAirDropReceive.Transfer.askRequest.getter(v22);
  ((void (*)(uint64_t, uint64_t))log)(v15, v193);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(v12, v16, v18, v17);
  v210(v16, v206);
  (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v12, v20);
  v24 = sub_10022E75C((_QWORD *)(v0 + 256));
  if (v214 != 1)
  {
    v34 = 0;
    goto LABEL_13;
  }
  v25 = *(_QWORD *)(v0 + 704);
  v1 = (unsigned __int8 *)(v0 + 1076);
  v26 = v181;
LABEL_6:
  v1[2] = v23 & 1;
  v28 = *(_QWORD *)(v0 + 736);
  v29 = *(_QWORD *)(v0 + 696);
  v26(v28, *(_QWORD *)(v0 + 760), v29);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v28, v29);
  v31 = *(uint64_t **)(v0 + 736);
  v32 = *(_QWORD *)(v0 + 704);
  v33 = *(_QWORD *)(v0 + 696);
  if (v30 != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
  {
    v106 = *(_QWORD *)(v0 + 832);
    v107 = *(_QWORD *)(v0 + 504) + *(_QWORD *)(v0 + 824);
    v108 = *(void (**)(uint64_t *, uint64_t))(v32 + 8);
    *(_QWORD *)(v0 + 936) = v108;
    v108(v31, v33);
    sub_100244418(v107, v0 + 136);
    v109 = sub_100008384(&qword_1007C0550);
    if ((swift_dynamicCast(v0 + 376, v0 + 136, v106, v109, 6) & 1) != 0)
    {
      v110 = *(_QWORD *)(v0 + 784);
      v111 = *(_QWORD *)(v0 + 504);
      sub_10000D0F0(v0 + 376, &qword_1007C0558);
      v220 = (uint64_t (*)(uint64_t))((char *)&dword_1007BD0F0 + dword_1007BD0F0);
      v112 = (_QWORD *)swift_task_alloc(unk_1007BD0F4);
      *(_QWORD *)(v0 + 944) = v112;
      *v112 = v0;
      v112[1] = sub_100407510;
      return v220(v111 + v110);
    }
    *(_QWORD *)(v0 + 408) = 0;
    *(_OWORD *)(v0 + 376) = 0u;
    *(_OWORD *)(v0 + 392) = 0u;
    sub_10000D0F0(v0 + 376, &qword_1007C0558);
    v34 = 0;
    v35 = 0xF000000000000000;
    goto LABEL_32;
  }
  (*(void (**)(_QWORD, uint64_t))(v32 + 96))(*(_QWORD *)(v0 + 736), v33);
  v34 = *v31;
  v35 = v31[1];
  v36 = sub_100244404(*v31, v35);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Retrieved receiverMetadata via destination", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }
  sub_100225AA0(v34, v35);

  if (v35 >> 60 == 15)
  {
LABEL_32:
    v136 = SFAirDropReceive.AskRequest.customPayload.getter();
    v138 = v137;
    v139 = sub_100225AA0(v136, v137);
    v140 = Logger.logObject.getter(v139);
    v141 = static os_log_type_t.error.getter(v140);
    if (os_log_type_enabled(v140, v141))
    {
      if (v138 >> 60 == 15)
        v142 = "Failed to receive senderMetadata";
      else
        v142 = "Receiver metadata was not found";
      v143 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v143 = 0;
      _os_log_impl((void *)&_mh_execute_header, v140, v141, v142, v143, 2u);
      swift_slowDealloc(v143, -1, -1);
    }
    v144 = *(_QWORD *)(v0 + 760);
    v145 = *(_QWORD *)(v0 + 704);
    v146 = *(_QWORD *)(v0 + 696);

    v147 = type metadata accessor for SFAirDropReceive.Failure(0);
    v148 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v147, v148, 0, 0);
    v150 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v147 - 8) + 104))(v149, enum case for SFAirDropReceive.Failure.badRequest(_:), v147);
    swift_willThrow(v150);
    sub_100225AA0(v34, v35);
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v144, v146);
    goto LABEL_38;
  }
LABEL_14:
  v190 = v23;
  v40 = v23 & 1;
  *(_BYTE *)(v0 + 1079) = v23 & 1;
  v194 = v35;
  v198 = v34;
  *(_QWORD *)(v0 + 984) = v35;
  *(_QWORD *)(v0 + 976) = v34;
  v41 = Logger.logObject.getter(v24);
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = *(_DWORD *)(v0 + 1072);
    v44 = swift_slowAlloc(14, -1);
    *(_DWORD *)v44 = 67109376;
    *(_DWORD *)(v0 + 1032) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1032, v0 + 1036, v44 + 4);
    *(_WORD *)(v44 + 8) = 1024;
    *(_DWORD *)(v0 + 1036) = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1036, v0 + 1040, v44 + 10);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}", (uint8_t *)v44, 0xEu);
    swift_slowDealloc(v44, -1, -1);
  }
  v45 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 816);
  v46 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 808);
  v207 = *(uint64_t (**)(uint64_t, os_log_t))(v0 + 792);
  v47 = *(_QWORD *)(v0 + 688);
  loga = *(os_log_t *)(v0 + 672);
  v48 = *(_QWORD *)(v0 + 664);
  v49 = *(_QWORD *)(v0 + 608);
  v50 = *(_QWORD *)(v0 + 576);
  v51 = *(_QWORD *)(v0 + 560);

  v52 = sub_1003B0844();
  v211 = v53;
  v215 = v52;
  v218 = v54;
  v55 = CurrentValueSubject.value.getter(v52);
  SFAirDropReceive.Transfer.askRequest.getter(v55);
  v56 = v46(v48, v49);
  SFAirDropReceive.AskRequest.type.getter(v56);
  v57 = v45(v50, v51);
  v58 = SFAirDrop.TransferType.isFiles.getter(v57);
  v59 = v207(v47, loga);
  if ((v58 & 1) == 0)
    goto LABEL_18;
  v60 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 816);
  v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 808);
  v62 = *(_QWORD *)(v0 + 664);
  v63 = *(_QWORD *)(v0 + 608);
  v64 = *(_QWORD *)(v0 + 576);
  v65 = *(_QWORD *)(v0 + 560);
  v66 = CurrentValueSubject.value.getter(v59);
  SFAirDropReceive.Transfer.askRequest.getter(v66);
  v67 = v61(v62, v63);
  v68 = SFAirDropReceive.AskRequest.senderIsMe.getter(v67);
  v69 = v60(v64, v65);
  if ((v68 & 1) != 0)
    goto LABEL_18;
  v114 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
  v115 = *(_QWORD *)(v0 + 664);
  v116 = *(_QWORD *)(v0 + 608);
  v117 = CurrentValueSubject.value.getter(v69);
  v118 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v117);
  v114(v115, v116);
  if ((v118 & 1) == 0)
    goto LABEL_18;
  if (v218 != 2)
    goto LABEL_18;
  v119 = *(_QWORD *)(v0 + 760);
  v120 = *(_QWORD *)(v0 + 744);
  v121 = *(_QWORD *)(v0 + 704);
  v122 = *(_QWORD *)(v0 + 696);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v121 + 104))(v120, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v122);
  v123 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  LOBYTE(v119) = dispatch thunk of static Equatable.== infix(_:_:)(v119, v120, v122, v123);
  v124 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
  *(_QWORD *)(v0 + 992) = v124;
  v124(v120, v122);
  if ((v119 & 1) != 0)
  {
LABEL_18:
    v70 = *(_QWORD *)(v0 + 504);
    v71 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 16);
    v71(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 696));
    swift_retain_n(v70, 4);
    v72 = sub_10031B7DC(v215, (uint64_t)v211, v218);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v73, v74))
    {
      v171 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
      v75 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
      v182 = *(_QWORD *)(v0 + 704);
      v172 = *(_QWORD *)(v0 + 696);
      v173 = *(_QWORD *)(v0 + 712);
      v76 = *(_QWORD *)(v0 + 664);
      v168 = *(_QWORD *)(v0 + 608);
      v169 = *(_QWORD *)(v0 + 576);
      v170 = *(_QWORD *)(v0 + 560);
      logb = v73;
      v77 = *(_QWORD *)(v0 + 504);
      v78 = swift_slowAlloc(34, -1);
      v178 = swift_slowAlloc(64, -1);
      v222[0] = v178;
      *(_DWORD *)v78 = 67109890;
      type = v74;
      v79 = CurrentValueSubject.value.getter(v178);
      v80 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v79);
      v75(v76, v168);
      swift_release(v77);
      *(_DWORD *)(v0 + 1044) = v80 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1044, v0 + 1048, v78 + 4);
      v81 = swift_release(v77);
      *(_WORD *)(v78 + 8) = 1024;
      v82 = CurrentValueSubject.value.getter(v81);
      SFAirDropReceive.Transfer.askRequest.getter(v82);
      v83 = ((uint64_t (*)(uint64_t, uint64_t))v75)(v76, v168);
      v84 = SFAirDropReceive.AskRequest.senderIsMe.getter(v83);
      v171(v169, v170);
      swift_release(v77);
      *(_DWORD *)(v0 + 1040) = v84 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1040, v0 + 1044, v78 + 10);
      swift_release(v77);
      *(_WORD *)(v78 + 14) = 2080;
      sub_10031B7DC(v215, (uint64_t)v211, v218);
      v223._countAndFlagsBits = v215;
      v223._object = v211;
      v85 = sub_1003ABB94(v223, v218);
      v87 = v86;
      sub_10031B7F4(v215, (uint64_t)v211, v218);
      *(_QWORD *)(v0 + 472) = sub_100228BD8(v85, (unint64_t)v87, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 472, v0 + 480, v78 + 16);
      swift_bridgeObjectRelease(v87);
      sub_10031B7F4(v215, (uint64_t)v211, v218);
      sub_10031B7F4(v215, (uint64_t)v211, v218);
      *(_WORD *)(v78 + 24) = 2080;
      v88 = sub_100220D78(&qword_1007C04A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      v89 = dispatch thunk of CustomStringConvertible.description.getter(v172, v88);
      v91 = (const char *)v90;
      *(_QWORD *)(v0 + 464) = sub_100228BD8(v89, v90, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472, v78 + 26);
      v92 = swift_bridgeObjectRelease(v91);
      v219 = *(void (**)(uint64_t, uint64_t, __n128))(v182 + 8);
      v219(v173, v172, v92);
      _os_log_impl((void *)&_mh_execute_header, logb, type, "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, askStepDestination: %s}", (uint8_t *)v78, 0x22u);
      swift_arrayDestroy(v178, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v178, -1, -1);
      swift_slowDealloc(v78, -1, -1);

    }
    else
    {
      v93 = *(_QWORD *)(v0 + 712);
      v94 = *(_QWORD *)(v0 + 704);
      v95 = *(_QWORD *)(v0 + 696);
      swift_release_n(*(_QWORD *)(v0 + 504), 4);

      sub_10031B7F4(v215, (uint64_t)v211, v218);
      sub_10031B7F4(v215, (uint64_t)v211, v218);
      v219 = *(void (**)(uint64_t, uint64_t, __n128))(v94 + 8);
      ((void (*)(uint64_t, uint64_t))v219)(v93, v95);
    }
    v71(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 696));
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v190 & 1, v198, v194);
    v96 = *(_QWORD *)(v0 + 760);
    v97 = *(_QWORD *)(v0 + 752);
    v98 = *(_QWORD *)(v0 + 744);
    v99 = *(_QWORD *)(v0 + 736);
    v100 = *(_QWORD *)(v0 + 728);
    v101 = *(_QWORD *)(v0 + 720);
    v102 = *(_QWORD *)(v0 + 712);
    v103 = *(_QWORD *)(v0 + 688);
    v104 = *(_QWORD *)(v0 + 664);
    v174 = *(_QWORD *)(v0 + 656);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 648);
    v179 = *(_QWORD *)(v0 + 640);
    v183 = *(_QWORD *)(v0 + 632);
    v185 = *(_QWORD *)(v0 + 624);
    v188 = *(_QWORD *)(v0 + 600);
    v191 = *(_QWORD *)(v0 + 592);
    v195 = *(_QWORD *)(v0 + 584);
    v199 = *(_QWORD *)(v0 + 576);
    logc = *(os_log_t *)(v0 + 552);
    v208 = *(_QWORD *)(v0 + 528);
    v212 = *(_QWORD *)(v0 + 520);
    v216 = *(_QWORD *)(v0 + 512);
    ((void (*)(uint64_t, _QWORD))v219)(v96, *(_QWORD *)(v0 + 696));
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v104);
    swift_task_dealloc(v174);
    swift_task_dealloc(*(_QWORD *)typea);
    swift_task_dealloc(v179);
    swift_task_dealloc(v183);
    swift_task_dealloc(v185);
    swift_task_dealloc(v188);
    swift_task_dealloc(v191);
    swift_task_dealloc(v195);
    swift_task_dealloc(v199);
    swift_task_dealloc(logc);
    swift_task_dealloc(v208);
    swift_task_dealloc(v212);
    swift_task_dealloc(v216);
    v105 = *(uint64_t (**)(void))(v0 + 8);
    return v105();
  }
  v125 = sub_10031B7F4(v215, (uint64_t)v211, 2u);
  v126 = Logger.logObject.getter(v125);
  v127 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v126, v127))
  {
    v128 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v128 = 0;
    _os_log_impl((void *)&_mh_execute_header, v126, v127, "Ask sensitive preview START", v128, 2u);
    swift_slowDealloc(v128, -1, -1);
  }
  v129 = *(_QWORD *)(v0 + 824);
  v130 = *(_QWORD *)(v0 + 760);
  v131 = *(_QWORD *)(v0 + 520);
  v132 = *(_QWORD *)(v0 + 504);

  sub_100244418(v132 + v129, v0 + 56);
  v133 = sub_10023A834((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  CurrentValueSubject.value.getter(v133);
  sub_10047D8B4(v130, v131);
  if (v187)
  {
    v134 = *(_QWORD *)(v0 + 760);
    v135 = *(_QWORD *)(v0 + 696);
    (*(void (**)(_QWORD, _QWORD))(v0 + 808))(*(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 608));
    sub_100225AA0(v198, v194);
    v124(v134, v135);
    sub_10022E75C((_QWORD *)(v0 + 56));
LABEL_38:
    v151 = *(_QWORD *)(v0 + 752);
    v152 = *(_QWORD *)(v0 + 744);
    v153 = *(_QWORD *)(v0 + 736);
    v154 = *(_QWORD *)(v0 + 728);
    v155 = *(_QWORD *)(v0 + 720);
    v156 = *(_QWORD *)(v0 + 712);
    v157 = *(_QWORD *)(v0 + 688);
    v158 = *(_QWORD *)(v0 + 664);
    v159 = *(_QWORD *)(v0 + 656);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 648);
    v180 = *(_QWORD *)(v0 + 640);
    v184 = *(_QWORD *)(v0 + 632);
    v186 = *(_QWORD *)(v0 + 624);
    v189 = *(_QWORD *)(v0 + 600);
    v192 = *(_QWORD *)(v0 + 592);
    v196 = *(_QWORD *)(v0 + 584);
    v200 = *(_QWORD *)(v0 + 576);
    logd = *(os_log_t *)(v0 + 552);
    v209 = *(_QWORD *)(v0 + 528);
    v213 = *(_QWORD *)(v0 + 520);
    v217 = *(_QWORD *)(v0 + 512);
    swift_task_dealloc(*(_QWORD *)(v0 + 760));
    swift_task_dealloc(v151);
    swift_task_dealloc(v152);
    swift_task_dealloc(v153);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(v180);
    swift_task_dealloc(v184);
    swift_task_dealloc(v186);
    swift_task_dealloc(v189);
    swift_task_dealloc(v192);
    swift_task_dealloc(v196);
    swift_task_dealloc(v200);
    swift_task_dealloc(logd);
    swift_task_dealloc(v209);
    swift_task_dealloc(v213);
    swift_task_dealloc(v217);
    v105 = *(uint64_t (**)(void))(v0 + 8);
    return v105();
  }
  v160 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 928);
  v221 = *(void (**)(uint64_t, uint64_t))(v0 + 920);
  v161 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
  v162 = *(_QWORD *)(v0 + 664);
  v163 = *(_QWORD *)(v0 + 608);
  v164 = *(_QWORD *)(v0 + 552);
  v165 = *(_QWORD *)(v0 + 536);
  v166 = *(_QWORD *)(v0 + 520);
  v161(*(_QWORD *)(v0 + 624), v163);
  sub_10022E75C((_QWORD *)(v0 + 56));
  v167 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v164, v166, v167);
  v160(v164, enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:), v165);
  sub_10053D3FC(v164, v162);
  v221(v164, v165);
  v161(v162, v163);
  return swift_task_switch(sub_100408278, 0, 0);
}

uint64_t sub_100407344()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[111];
  v2 = v0[96];
  swift_task_dealloc(v0[112]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100407390, v2, 0);
}

uint64_t sub_100407390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_10000D0F0(*(_QWORD *)(v0 + 528), &qword_1007B6BF0);
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 720);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = *(_QWORD *)(v0 + 664);
  v9 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 648);
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_QWORD *)(v0 + 632);
  v14 = *(_QWORD *)(v0 + 624);
  v15 = *(_QWORD *)(v0 + 600);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 520);
  v22 = *(_QWORD *)(v0 + 512);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100407510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 944);
  v4[119] = a1;
  v4[120] = a2;
  v4[121] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_1004080F8;
  else
    v6 = sub_100407584;
  return swift_task_switch(v6, v4[96], 0);
}

uint64_t sub_100407584(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  const char *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void);
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, _QWORD, uint64_t);
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  os_log_t logc;
  uint64_t (*v148)(uint64_t, os_log_t);
  void (*v149)(_QWORD, _QWORD, _QWORD);
  uint64_t v150;
  uint64_t v151;
  Swift::String v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  void (*v158)(uint64_t, uint64_t, __n128);
  void (*v159)(uint64_t, uint64_t);
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161[3];

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Retrieved receiverMetadata via content handler", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v130 = *(_QWORD *)(v1 + 968);
  v5 = *(_QWORD *)(v1 + 960);
  v6 = *(_QWORD *)(v1 + 952);
  v7 = *(unsigned __int8 *)(v1 + 1078);
  *(_BYTE *)(v1 + 1079) = v7;
  v138 = v6;
  v141 = v5;
  *(_QWORD *)(v1 + 984) = v5;
  *(_QWORD *)(v1 + 976) = v6;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_DWORD *)(v1 + 1072);
    v12 = swift_slowAlloc(14, -1);
    *(_DWORD *)v12 = 67109376;
    *(_DWORD *)(v1 + 1032) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1032, v1 + 1036, v12 + 4);
    *(_WORD *)(v12 + 8) = 1024;
    *(_DWORD *)(v1 + 1036) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1036, v1 + 1040, v12 + 10);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}", (uint8_t *)v12, 0xEu);
    swift_slowDealloc(v12, -1, -1);
  }
  v135 = v7;
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
  v148 = *(uint64_t (**)(uint64_t, os_log_t))(v1 + 792);
  v15 = *(_QWORD *)(v1 + 688);
  log = *(os_log_t *)(v1 + 672);
  v16 = *(_QWORD *)(v1 + 664);
  v17 = *(_QWORD *)(v1 + 608);
  v18 = *(_QWORD *)(v1 + 576);
  v19 = *(_QWORD *)(v1 + 560);

  v152._countAndFlagsBits = sub_1003B0844();
  v152._object = v20;
  v157 = v21;
  v22 = CurrentValueSubject.value.getter(v152._countAndFlagsBits);
  SFAirDropReceive.Transfer.askRequest.getter(v22);
  v23 = v14(v16, v17);
  SFAirDropReceive.AskRequest.type.getter(v23);
  v24 = v13(v18, v19);
  v25 = SFAirDrop.TransferType.isFiles.getter(v24);
  v26 = v148(v15, log);
  if ((v25 & 1) == 0)
    goto LABEL_7;
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 816);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 808);
  v29 = *(_QWORD *)(v1 + 664);
  v30 = *(_QWORD *)(v1 + 608);
  v31 = *(_QWORD *)(v1 + 576);
  v32 = *(_QWORD *)(v1 + 560);
  v33 = CurrentValueSubject.value.getter(v26);
  SFAirDropReceive.Transfer.askRequest.getter(v33);
  v34 = v28(v29, v30);
  v35 = SFAirDropReceive.AskRequest.senderIsMe.getter(v34);
  v36 = v27(v31, v32);
  if ((v35 & 1) != 0)
    goto LABEL_7;
  v76 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
  v77 = *(_QWORD *)(v1 + 664);
  v78 = *(_QWORD *)(v1 + 608);
  v79 = CurrentValueSubject.value.getter(v36);
  v80 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v79);
  v76(v77, v78);
  if ((v80 & 1) == 0)
    goto LABEL_7;
  if (v157 != 2)
    goto LABEL_7;
  v81 = *(_QWORD *)(v1 + 760);
  v82 = *(_QWORD *)(v1 + 744);
  v83 = *(_QWORD *)(v1 + 704);
  v84 = *(_QWORD *)(v1 + 696);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v83 + 104))(v82, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v84);
  v85 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  LOBYTE(v81) = dispatch thunk of static Equatable.== infix(_:_:)(v81, v82, v84, v85);
  v86 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  *(_QWORD *)(v1 + 992) = v86;
  v86(v82, v84);
  if ((v81 & 1) != 0)
  {
LABEL_7:
    v37 = *(_QWORD *)(v1 + 504);
    v38 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 704) + 16);
    v38(*(_QWORD *)(v1 + 712), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
    swift_retain_n(v37, 4);
    v39 = sub_10031B7DC(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v117 = *(void (**)(uint64_t, uint64_t))(v1 + 816);
      v42 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
      v127 = *(_QWORD *)(v1 + 704);
      v118 = *(_QWORD *)(v1 + 696);
      v119 = *(_QWORD *)(v1 + 712);
      v43 = *(_QWORD *)(v1 + 664);
      v44 = *(_QWORD *)(v1 + 608);
      v115 = *(_QWORD *)(v1 + 576);
      v116 = *(_QWORD *)(v1 + 560);
      loga = v40;
      v45 = *(_QWORD *)(v1 + 504);
      v149 = v38;
      v46 = swift_slowAlloc(34, -1);
      v124 = swift_slowAlloc(64, -1);
      v161[0] = v124;
      *(_DWORD *)v46 = 67109890;
      type = v41;
      v47 = CurrentValueSubject.value.getter(v124);
      v48 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v47);
      v42(v43, v44);
      swift_release(v45);
      *(_DWORD *)(v1 + 1044) = v48 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1044, v1 + 1048, v46 + 4);
      v49 = swift_release(v45);
      *(_WORD *)(v46 + 8) = 1024;
      v50 = CurrentValueSubject.value.getter(v49);
      SFAirDropReceive.Transfer.askRequest.getter(v50);
      v51 = ((uint64_t (*)(uint64_t, uint64_t))v42)(v43, v44);
      v52 = SFAirDropReceive.AskRequest.senderIsMe.getter(v51);
      v117(v115, v116);
      swift_release(v45);
      *(_DWORD *)(v1 + 1040) = v52 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1040, v1 + 1044, v46 + 10);
      swift_release(v45);
      *(_WORD *)(v46 + 14) = 2080;
      sub_10031B7DC(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      v53 = sub_1003ABB94(v152, v157);
      v55 = v54;
      sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      *(_QWORD *)(v1 + 472) = sub_100228BD8(v53, (unint64_t)v55, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 472, v1 + 480, v46 + 16);
      swift_bridgeObjectRelease(v55);
      sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      *(_WORD *)(v46 + 24) = 2080;
      v56 = sub_100220D78(&qword_1007C04A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v118, v56);
      v59 = (const char *)v58;
      *(_QWORD *)(v1 + 464) = sub_100228BD8(v57, v58, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 464, v1 + 472, v46 + 26);
      v60 = swift_bridgeObjectRelease(v59);
      v158 = *(void (**)(uint64_t, uint64_t, __n128))(v127 + 8);
      v158(v119, v118, v60);
      _os_log_impl((void *)&_mh_execute_header, loga, type, "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, askStepDestination: %s}", (uint8_t *)v46, 0x22u);
      swift_arrayDestroy(v124, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1, -1);
      v61 = v46;
      v38 = v149;
      swift_slowDealloc(v61, -1, -1);

    }
    else
    {
      v62 = *(_QWORD *)(v1 + 712);
      v63 = *(_QWORD *)(v1 + 704);
      v64 = *(_QWORD *)(v1 + 696);
      swift_release_n(*(_QWORD *)(v1 + 504), 4);

      sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, v157);
      v158 = *(void (**)(uint64_t, uint64_t, __n128))(v63 + 8);
      ((void (*)(uint64_t, uint64_t))v158)(v62, v64);
    }
    v38(*(_QWORD *)(v1 + 488), *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 696));
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v135, v138, v141);
    v65 = *(_QWORD *)(v1 + 760);
    v66 = *(_QWORD *)(v1 + 752);
    v67 = *(_QWORD *)(v1 + 744);
    v68 = *(_QWORD *)(v1 + 736);
    v69 = *(_QWORD *)(v1 + 728);
    v70 = *(_QWORD *)(v1 + 720);
    v71 = *(_QWORD *)(v1 + 712);
    v72 = *(_QWORD *)(v1 + 688);
    v73 = *(_QWORD *)(v1 + 664);
    v120 = *(_QWORD *)(v1 + 656);
    *(_QWORD *)typea = *(_QWORD *)(v1 + 648);
    v125 = *(_QWORD *)(v1 + 640);
    v128 = *(_QWORD *)(v1 + 632);
    v131 = *(_QWORD *)(v1 + 624);
    v133 = *(_QWORD *)(v1 + 600);
    v136 = *(_QWORD *)(v1 + 592);
    v139 = *(_QWORD *)(v1 + 584);
    v142 = *(_QWORD *)(v1 + 576);
    logb = *(os_log_t *)(v1 + 552);
    v150 = *(_QWORD *)(v1 + 528);
    v153 = *(_QWORD *)(v1 + 520);
    v155 = *(_QWORD *)(v1 + 512);
    ((void (*)(uint64_t, _QWORD))v158)(v65, *(_QWORD *)(v1 + 696));
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v120);
    swift_task_dealloc(*(_QWORD *)typea);
    swift_task_dealloc(v125);
    swift_task_dealloc(v128);
    swift_task_dealloc(v131);
    swift_task_dealloc(v133);
    swift_task_dealloc(v136);
    swift_task_dealloc(v139);
    swift_task_dealloc(v142);
    swift_task_dealloc(logb);
    swift_task_dealloc(v150);
    swift_task_dealloc(v153);
    swift_task_dealloc(v155);
    v74 = *(uint64_t (**)(void))(v1 + 8);
    return v74();
  }
  v159 = v86;
  v87 = sub_10031B7F4(v152._countAndFlagsBits, (uint64_t)v152._object, 2u);
  v88 = Logger.logObject.getter(v87);
  v89 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "Ask sensitive preview START", v90, 2u);
    swift_slowDealloc(v90, -1, -1);
  }
  v91 = *(_QWORD *)(v1 + 824);
  v92 = *(_QWORD *)(v1 + 760);
  v93 = *(_QWORD *)(v1 + 520);
  v94 = *(_QWORD *)(v1 + 504);

  sub_100244418(v94 + v91, v1 + 56);
  v95 = sub_10023A834((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
  CurrentValueSubject.value.getter(v95);
  sub_10047D8B4(v92, v93);
  if (v130)
  {
    v96 = *(_QWORD *)(v1 + 760);
    v97 = *(_QWORD *)(v1 + 696);
    (*(void (**)(_QWORD, _QWORD))(v1 + 808))(*(_QWORD *)(v1 + 624), *(_QWORD *)(v1 + 608));
    sub_100225AA0(v138, v141);
    v159(v96, v97);
    sub_10022E75C((_QWORD *)(v1 + 56));
    v98 = *(_QWORD *)(v1 + 752);
    v99 = *(_QWORD *)(v1 + 744);
    v100 = *(_QWORD *)(v1 + 736);
    v101 = *(_QWORD *)(v1 + 728);
    v102 = *(_QWORD *)(v1 + 720);
    v103 = *(_QWORD *)(v1 + 712);
    v104 = *(_QWORD *)(v1 + 688);
    v105 = *(_QWORD *)(v1 + 664);
    v106 = *(_QWORD *)(v1 + 656);
    *(_QWORD *)typeb = *(_QWORD *)(v1 + 648);
    v126 = *(_QWORD *)(v1 + 640);
    v129 = *(_QWORD *)(v1 + 632);
    v132 = *(_QWORD *)(v1 + 624);
    v134 = *(_QWORD *)(v1 + 600);
    v137 = *(_QWORD *)(v1 + 592);
    v140 = *(_QWORD *)(v1 + 584);
    v143 = *(_QWORD *)(v1 + 576);
    logc = *(os_log_t *)(v1 + 552);
    v151 = *(_QWORD *)(v1 + 528);
    v154 = *(_QWORD *)(v1 + 520);
    v156 = *(_QWORD *)(v1 + 512);
    swift_task_dealloc(*(_QWORD *)(v1 + 760));
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v104);
    swift_task_dealloc(v105);
    swift_task_dealloc(v106);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(v126);
    swift_task_dealloc(v129);
    swift_task_dealloc(v132);
    swift_task_dealloc(v134);
    swift_task_dealloc(v137);
    swift_task_dealloc(v140);
    swift_task_dealloc(v143);
    swift_task_dealloc(logc);
    swift_task_dealloc(v151);
    swift_task_dealloc(v154);
    swift_task_dealloc(v156);
    v74 = *(uint64_t (**)(void))(v1 + 8);
    return v74();
  }
  v107 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 928);
  v160 = *(void (**)(uint64_t, uint64_t))(v1 + 920);
  v108 = *(void (**)(uint64_t, uint64_t))(v1 + 808);
  v109 = *(_QWORD *)(v1 + 664);
  v110 = *(_QWORD *)(v1 + 608);
  v111 = *(_QWORD *)(v1 + 552);
  v112 = *(_QWORD *)(v1 + 536);
  v113 = *(_QWORD *)(v1 + 520);
  v108(*(_QWORD *)(v1 + 624), v110);
  sub_10022E75C((_QWORD *)(v1 + 56));
  v114 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v111, v113, v114);
  v107(v111, enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:), v112);
  sub_10053D3FC(v111, v109);
  v160(v111, v112);
  v108(v109, v110);
  return swift_task_switch(sub_100408278, 0, 0);
}

uint64_t sub_1004080F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(_QWORD, _QWORD))(v0 + 936))(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 696));
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 720);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = *(_QWORD *)(v0 + 664);
  v9 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 648);
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_QWORD *)(v0 + 632);
  v14 = *(_QWORD *)(v0 + 624);
  v15 = *(_QWORD *)(v0 + 600);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 520);
  v22 = *(_QWORD *)(v0 + 512);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100408278()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[65];
  v2 = swift_task_alloc(32);
  v0[125] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[126] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[127] = v4;
  *v4 = v0;
  v4[1] = sub_100408320;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[91], &unk_1007C0548, v2, sub_100424404, v3, 0, 0, v0[87]);
}

uint64_t sub_100408320()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1016);
  *(_QWORD *)(*(_QWORD *)v1 + 1024) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004086F8;
    v5 = 0;
  }
  else
  {
    v6 = v2[126];
    v7 = v2[125];
    v8 = v2[96];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_1004083A0;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1004083A0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 704) + 16);
  v2 = v1(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 696));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v46 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 992);
    v5 = *(_QWORD *)(v0 + 744);
    v6 = *(_QWORD *)(v0 + 720);
    v7 = *(_QWORD *)(v0 + 696);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v48 = v9;
    *(_DWORD *)v8 = 136315138;
    v1(v5, v6, v7);
    v10 = String.init<A>(describing:)(v5, v7);
    v12 = (const char *)v11;
    *(_QWORD *)(v0 + 480) = sub_100228BD8(v10, v11, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 480, v0 + 488, v8 + 4);
    v13 = swift_bridgeObjectRelease(v12);
    v46(v6, v7, v13);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Ask sensitive preview END. Accepting transfer for sensitive content {destination: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 992);
    v15 = *(_QWORD *)(v0 + 720);
    v16 = *(_QWORD *)(v0 + 696);

    v14(v15, v16);
  }
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 992);
  v18 = *(unsigned __int8 *)(v0 + 1079);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 728);
  v22 = *(_QWORD *)(v0 + 696);
  v23 = *(_QWORD *)(v0 + 520);
  v1(*(_QWORD *)(v0 + 488), v21, v22);
  SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v18, v20, v19);
  v17(v21, v22);
  sub_10000D0F0(v23, &qword_1007B6BF0);
  v24 = *(_QWORD *)(v0 + 760);
  v25 = *(_QWORD *)(v0 + 752);
  v26 = *(_QWORD *)(v0 + 744);
  v27 = *(_QWORD *)(v0 + 736);
  v28 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 720);
  v30 = *(_QWORD *)(v0 + 712);
  v31 = *(_QWORD *)(v0 + 688);
  v32 = *(_QWORD *)(v0 + 664);
  v34 = *(_QWORD *)(v0 + 656);
  v35 = *(_QWORD *)(v0 + 648);
  v36 = *(_QWORD *)(v0 + 640);
  v37 = *(_QWORD *)(v0 + 632);
  v38 = *(_QWORD *)(v0 + 624);
  v39 = *(_QWORD *)(v0 + 600);
  v40 = *(_QWORD *)(v0 + 592);
  v41 = *(_QWORD *)(v0 + 584);
  v42 = *(_QWORD *)(v0 + 576);
  v43 = *(_QWORD *)(v0 + 552);
  v44 = *(_QWORD *)(v0 + 528);
  v45 = *(_QWORD *)(v0 + 520);
  v47 = *(_QWORD *)(v0 + 512);
  (*(void (**)(uint64_t, _QWORD))(v0 + 992))(v24, *(_QWORD *)(v0 + 696));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004086F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[125];
  v2 = v0[96];
  swift_task_dealloc(v0[126]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100408744, v2, 0);
}

uint64_t sub_100408744()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 992);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 520);
  sub_100225AA0(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 984));
  sub_10000D0F0(v4, &qword_1007B6BF0);
  v1(v2, v3);
  v5 = *(_QWORD *)(v0 + 752);
  v6 = *(_QWORD *)(v0 + 744);
  v7 = *(_QWORD *)(v0 + 736);
  v8 = *(_QWORD *)(v0 + 728);
  v9 = *(_QWORD *)(v0 + 720);
  v10 = *(_QWORD *)(v0 + 712);
  v11 = *(_QWORD *)(v0 + 688);
  v12 = *(_QWORD *)(v0 + 664);
  v13 = *(_QWORD *)(v0 + 656);
  v15 = *(_QWORD *)(v0 + 648);
  v16 = *(_QWORD *)(v0 + 640);
  v17 = *(_QWORD *)(v0 + 632);
  v18 = *(_QWORD *)(v0 + 624);
  v19 = *(_QWORD *)(v0 + 600);
  v20 = *(_QWORD *)(v0 + 592);
  v21 = *(_QWORD *)(v0 + 584);
  v22 = *(_QWORD *)(v0 + 576);
  v23 = *(_QWORD *)(v0 + 552);
  v24 = *(_QWORD *)(v0 + 528);
  v25 = *(_QWORD *)(v0 + 520);
  v26 = *(_QWORD *)(v0 + 512);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004088EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_10022E75C((_QWORD *)(v0 + 216));
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 720);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = *(_QWORD *)(v0 + 664);
  v9 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 648);
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_QWORD *)(v0 + 632);
  v14 = *(_QWORD *)(v0 + 624);
  v15 = *(_QWORD *)(v0 + 600);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 520);
  v22 = *(_QWORD *)(v0 + 512);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100408A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Failure(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  v3[11] = static AirDropActor.shared;
  return swift_task_switch(sub_100408B24, v8, 0);
}

uint64_t sub_100408B24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;

  v1 = v0[3];
  v2 = v0[4];
  swift_errorRetain(v1);
  SFAirDropReceive.Failure.init(_:)(v1);
  v0[12] = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
  v3 = (uint64_t **)swift_task_alloc(dword_1007C4A24);
  v0[13] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_100408BA4;
  return sub_10050AB3C(v0[3]);
}

uint64_t sub_100408BA4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_100408C00, static AirDropActor.shared, 0);
}

uint64_t sub_100408C00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v4 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v5 = swift_allocError(v3, v4, 0, 0);
  v0[14] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v1, v3);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_100408CA8;
  return sub_10050A37C(v5);
}

uint64_t sub_100408CA8()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t **v4;

  v1 = *v0;
  v2 = (*v0)[14];
  v3 = *v0;
  swift_task_dealloc((*v0)[15]);
  swift_errorRelease(v2);
  v4 = (uint64_t **)swift_task_alloc(dword_1007C5BA4);
  v1[16] = (uint64_t)v4;
  *v4 = v3;
  v4[1] = (uint64_t *)sub_100408D24;
  return sub_100542C10(v1[7], v1[10]);
}

uint64_t sub_100408D24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_100408D7C, v1, 0);
}

uint64_t sub_100408D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
  v6 = enum case for SFAirDropReceive.AskResponse.error(_:);
  v7 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5 + *(int *)(v8 + 20), v2, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100408E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for SFAirDropReceive.Failure(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  v9 = sub_100008384(&qword_1007C03A8);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007BA320);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v3[14] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[15] = v12;
  v3[16] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3[17] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[18] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v15);
  v3[20] = swift_task_alloc(v15);
  v3[21] = swift_task_alloc(v15);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v16 = static AirDropActor.shared;
  v3[22] = static AirDropActor.shared;
  return swift_task_switch(sub_100408FB0, v16, 0);
}

uint64_t sub_100408FB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  const char *object;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[14];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[3], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    v4 = v0[21];
    v5 = v0[17];
    v6 = v0[18];
    v7 = v0[16];
    (*(void (**)(uint64_t, _QWORD))(v0[15] + 96))(v7, v0[14]);
    v8 = v7 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v7, v5);
    v9 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = (_QWORD *)swift_task_alloc(dword_1007C03BC);
    v0[23] = v10;
    *v10 = v0;
    v10[1] = sub_100409254;
    return sub_10040A08C(v0[13]);
  }
  else
  {
    v12 = v0[14];
    v13 = v0[15];
    v14 = type metadata accessor for SFError(0);
    v15 = sub_100220D78(&qword_1007B64E8, (uint64_t (*)(uint64_t))&type metadata accessor for SFError, (uint64_t)&protocol conformance descriptor for SFError);
    v16 = swift_allocError(v14, v15, 0, 0);
    v18 = v17;
    _StringGuts.grow(_:)(60);
    v19._object = (void *)0x800000010061ACA0;
    v19._countAndFlagsBits = 0xD000000000000039;
    String.append(_:)(v19);
    v20 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v12, v20);
    object = (const char *)v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v23._countAndFlagsBits = 125;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    *v18 = 0;
    v18[1] = 0xE000000000000000;
    v18[2] = 0xD00000000000006ALL;
    v18[3] = 0x800000010061ACE0;
    v18[4] = 97;
    v24 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v18, enum case for SFError.unexpected(_:), v14);
    swift_willThrow(v24);
    v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v26 = v0[16];
    v27 = v0[14];
    v0[45] = v16;
    v25(v26, v27);
    swift_errorRetain(v16);
    SFAirDropReceive.Failure.init(_:)(v16);
    return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
  }
}

uint64_t sub_100409254()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t **v5;

  v2 = (*v1)[23];
  v3 = *v1;
  v3[24] = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100409D3C, v3[22], 0);
  v5 = (uint64_t **)swift_task_alloc(dword_1007C03C4);
  v3[25] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = (uint64_t *)sub_1004092E8;
  return sub_10040B4F4(v3[21]);
}

uint64_t sub_1004092E8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 200);
  *(_QWORD *)(v4 + 208) = a1;
  *(double *)(v4 + 216) = a2;
  *(_QWORD *)(v4 + 224) = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_100409DA8;
  else
    v6 = sub_10040935C;
  return swift_task_switch(v6, *(_QWORD *)(v4 + 176), 0);
}

uint64_t sub_10040935C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t **v4;

  sub_1005432F8(a1);
  v2 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  v3 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v2);
  v4 = (uint64_t **)swift_task_alloc(dword_1007C03CC);
  v1[29] = (uint64_t)v4;
  *v4 = v1;
  v4[1] = (uint64_t *)sub_1004093D4;
  return sub_10040DDF4(v1[20], v1[26], v1[21], v3 & 1);
}

uint64_t sub_1004093D4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v3 = *(_QWORD *)(*v2 + 232);
  v4 = *v2;
  *(_BYTE *)(v4 + 392) = a1;
  *(_QWORD *)(v4 + 240) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 208));
    return swift_task_switch(sub_100409E28, v5, 0);
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc(dword_1007C5B84);
    *(_QWORD *)(v4 + 248) = v7;
    *v7 = v4;
    v7[1] = sub_100409484;
    return sub_10053DCB4(*(_QWORD *)(v4 + 208), *(_QWORD *)(v4 + 160));
  }
}

uint64_t sub_100409484(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v10;
  _QWORD *v11;

  v6 = *(_QWORD *)(*v3 + 248);
  v7 = *v3;
  *(_QWORD *)(v7 + 256) = a1;
  *(_QWORD *)(v7 + 264) = v2;
  swift_task_dealloc(v6);
  if (v2)
  {
    v8 = *(_QWORD *)(v7 + 176);
    swift_bridgeObjectRelease(*(const char **)(v7 + 208));
    return swift_task_switch(sub_100409EA8, v8, 0);
  }
  else
  {
    v10 = *(double *)(v7 + 216) + a2;
    v11 = (_QWORD *)swift_task_alloc(dword_1007C03D4);
    *(_QWORD *)(v7 + 272) = v11;
    *v11 = v7;
    v11[1] = sub_100409554;
    return sub_100410C18(*(_QWORD *)(v7 + 152), *(_QWORD *)(v7 + 96), *(_BYTE *)(v7 + 392), *(_QWORD *)(v7 + 208), a1, *(_QWORD *)(v7 + 160), v10);
  }
}

uint64_t sub_100409554(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  double v8;
  _QWORD *v10;

  v4 = *(_QWORD *)(*v3 + 272);
  v5 = *v3;
  *(_BYTE *)(v5 + 393) = a1;
  *(_QWORD *)(v5 + 280) = a2;
  *(_QWORD *)(v5 + 288) = v2;
  swift_task_dealloc(v4);
  if (v2)
  {
    v6 = *(const char **)(v5 + 208);
    v7 = *(_QWORD *)(v5 + 176);
    *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v5 + 256)).n128_u64[0];
    swift_bridgeObjectRelease(v6, v8);
    return swift_task_switch(sub_100409F3C, v7, 0);
  }
  else
  {
    v10 = (_QWORD *)swift_task_alloc(dword_1007C03DC);
    *(_QWORD *)(v5 + 296) = v10;
    *v10 = v5;
    v10[1] = sub_10040960C;
    return sub_1004153A4(*(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104));
  }
}

uint64_t sub_10040960C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  const char *v8;
  uint64_t v9;
  double v10;
  double v11;
  _QWORD *v13;

  v5 = *(_QWORD *)(*v3 + 296);
  v6 = *v3;
  *(_QWORD *)(v6 + 304) = a2;
  *(_QWORD *)(v6 + 312) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v7 = *(const char **)(v6 + 280);
    v8 = *(const char **)(v6 + 208);
    v9 = *(_QWORD *)(v6 + 176);
    *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 256)).n128_u64[0];
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v7, v10).n128_u64[0];
    swift_bridgeObjectRelease(v8, v11);
    return swift_task_switch(sub_100409FD0, v9, 0);
  }
  else
  {
    *(_QWORD *)(v6 + 320) = static AirDropActor.shared;
    v13 = (_QWORD *)swift_task_alloc(dword_1007C5B94);
    *(_QWORD *)(v6 + 328) = v13;
    *v13 = v6;
    v13[1] = sub_10040970C;
    return sub_100541C1C(*(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 208), *(_QWORD *)(v6 + 256), *(_QWORD *)(v6 + 280), *(unsigned __int8 *)(v6 + 392), *(unsigned __int8 *)(v6 + 393), *(_QWORD *)(v6 + 152), a1);
  }
}

uint64_t sub_10040970C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1004099CC;
  else
    v4 = sub_100409770;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 320), 0);
}

uint64_t sub_100409770()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  *(_QWORD *)(v0 + 344) = v1;
  *v1 = v0;
  v1[1] = sub_1004097C8;
  return sub_10050A37C(0);
}

uint64_t sub_1004097C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 320);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_100409820, v1, 0);
}

uint64_t sub_100409820()
{
  _QWORD *v0;
  const char *v1;
  const char *v2;
  const char *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  double v10;
  double v11;
  double v12;

  v1 = (const char *)v0[38];
  v2 = (const char *)v0[35];
  v3 = (const char *)v0[32];
  v4 = (const char *)v0[26];
  v5 = v0[22];
  v7 = v0[10];
  v6 = v0[11];
  v8 = v0[8];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32);
  v0[44] = v9;
  v9(v6, v7, v8);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v2, v10).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v1, v12);
  return swift_task_switch(sub_1004098AC, v5, 0);
}

uint64_t sub_1004098AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 352);
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 16);
  sub_10000D0F0(*(_QWORD *)(v0 + 96), &qword_1007C03A8);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  v10(v1, v5);
  sub_10000D0F0(v6, &qword_1007BA320);
  v10(v2, v5);
  v20(v9, v7, v8);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004099CC()
{
  _QWORD *v0;
  const char *v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;

  v1 = (const char *)v0[38];
  v2 = (const char *)v0[35];
  v3 = (const char *)v0[26];
  v4 = v0[22];
  *(_QWORD *)&v5 = swift_bridgeObjectRelease((const char *)v0[32]).n128_u64[0];
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v2, v5).n128_u64[0];
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v3, v6).n128_u64[0];
  swift_bridgeObjectRelease(v1, v7);
  return swift_task_switch(sub_100409A38, v4, 0);
}

uint64_t sub_100409A38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[17];
  v4 = v0[18];
  v5 = v0[13];
  sub_10000D0F0(v0[12], &qword_1007C03A8);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v1, v3);
  v6(v2, v3);
  sub_10000D0F0(v5, &qword_1007BA320);
  v7 = v0[42];
  v8 = v0[21];
  v9 = v0[17];
  v0[45] = v7;
  v6(v8, v9);
  swift_errorRetain(v7);
  SFAirDropReceive.Failure.init(_:)(v7);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409AF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v5 = swift_allocError(v3, v4, 0, 0);
  v0[46] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v1, v3);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  v0[47] = v7;
  *v7 = v0;
  v7[1] = sub_100409BAC;
  return sub_10050A37C(v5);
}

uint64_t sub_100409BAC()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t **v4;

  v1 = *v0;
  v2 = (*v0)[46];
  v3 = *v0;
  swift_task_dealloc((*v0)[47]);
  swift_errorRelease(v2);
  v4 = (uint64_t **)swift_task_alloc(dword_1007C5BA4);
  v1[48] = (uint64_t)v4;
  *v4 = v3;
  v4[1] = (uint64_t *)sub_100409C28;
  return sub_100542C10(v1[2], v1[7]);
}

uint64_t sub_100409C28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_100409C80, v1, 0);
}

uint64_t sub_100409C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_errorRelease(*(_QWORD *)(v0 + 360));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100409D3C()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = v0[17];
  v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
  v3 = v0[24];
  v4 = v0[21];
  v0[45] = v3;
  v2(v4, v1);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409DA8()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[18];
  sub_10000D0F0(v0[13], &qword_1007BA320);
  v2 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v3 = v0[28];
  v4 = v0[21];
  v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409E28()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[18];
  sub_10000D0F0(v0[13], &qword_1007BA320);
  v2 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v3 = v0[30];
  v4 = v0[21];
  v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409EA8()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[13];
  v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
  v2(v0[20], v0[17]);
  sub_10000D0F0(v1, &qword_1007BA320);
  v3 = v0[33];
  v4 = v0[21];
  v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409F3C()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[13];
  v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
  v2(v0[20], v0[17]);
  sub_10000D0F0(v1, &qword_1007BA320);
  v3 = v0[36];
  v4 = v0[21];
  v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_100409FD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[17];
  v4 = v0[18];
  v5 = v0[13];
  sub_10000D0F0(v0[12], &qword_1007C03A8);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v1, v3);
  v6(v2, v3);
  sub_10000D0F0(v5, &qword_1007BA320);
  v7 = v0[39];
  v8 = v0[21];
  v9 = v0[17];
  v0[45] = v7;
  v6(v8, v9);
  swift_errorRetain(v7);
  SFAirDropReceive.Failure.init(_:)(v7);
  return swift_task_switch(sub_100409AF4, static AirDropActor.shared, 0);
}

uint64_t sub_10040A08C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v2[13] = a1;
  v2[14] = v1;
  v3 = type metadata accessor for SFAirDropReceive.Failure(0);
  v2[15] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[16] = v4;
  v2[17] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007B68A0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v2[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[20] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v8);
  v2[22] = swift_task_alloc(v8);
  v2[23] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v2[24] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[25] = v10;
  v2[26] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(sub_100008384(&qword_1007BA3A8) - 8);
  v2[27] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v2[28] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[29] = swift_task_alloc(v13);
  v2[30] = swift_task_alloc(v13);
  v14 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v2[31] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[32] = v15;
  v2[33] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007BA300);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SFAirDrop.ContactInfo(0);
  v2[35] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[36] = v18;
  v2[37] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[38] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[39] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[40] = swift_task_alloc(v21);
  v2[41] = swift_task_alloc(v21);
  v22 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[42] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v2[43] = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[44] = swift_task_alloc(v24);
  v2[45] = swift_task_alloc(v24);
  v25 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2[46] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[47] = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[48] = swift_task_alloc(v27);
  v2[49] = swift_task_alloc(v27);
  v2[50] = swift_task_alloc(v27);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v28 = static AirDropActor.shared;
  v2[51] = static AirDropActor.shared;
  return swift_task_switch(sub_10040A314, v28, 0);
}

uint64_t sub_10040A314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  const char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint8_t *bufa;
  uint8_t *buf;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v2 = *(_QWORD *)(v1 + 400);
  v4 = *(_QWORD *)(v1 + 368);
  v3 = *(_QWORD *)(v1 + 376);
  v5 = *(_QWORD *)(v1 + 360);
  v6 = *(_QWORD *)(v1 + 336);
  v7 = *(_QWORD *)(v1 + 344);
  v8 = *(_QWORD *)(v1 + 328);
  v9 = *(_QWORD *)(v1 + 312);
  v94 = *(_QWORD *)(v1 + 304);
  v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  v92 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v11 = v92(v2, v4);
  SFAirDropReceive.AskRequest.type.getter(v11);
  v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v5, v6);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v8, v94);
  v14 = *(_QWORD *)(v1 + 328);
  v15 = *(_QWORD *)(v1 + 304);
  v16 = *(_QWORD *)(v1 + 312);
  if (v13 == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    v18 = *(_QWORD *)(v1 + 280);
    v17 = *(_QWORD *)(v1 + 288);
    v19 = *(_QWORD *)(v1 + 272);
    (*(void (**)(_QWORD, uint64_t))(v16 + 96))(*(_QWORD *)(v1 + 328), v15);
    swift_bridgeObjectRelease(*(const char **)(v14 + 8));
    sub_1003EF5A8(v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v18) == 1)
    {
      v21 = *(_QWORD **)(v1 + 264);
      v20 = *(_QWORD *)(v1 + 272);
      v22 = *(_QWORD *)(v1 + 248);
      v23 = *(_QWORD *)(v1 + 256);
      *v21 = 0xD000000000000012;
      v21[1] = 0x8000000100616050;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v21, enum case for SFAirDrop.ContactInfo.Handle.email(_:), v22);
      SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)(0, 0, 0x65502064656B6146, 0xEC0000006E6F7372, v21, 0, 0xC000000000000000);
      v24 = sub_10000D0F0(v20, &qword_1007BA300);
    }
    else
    {
      v24 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 288) + 32))(*(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
    }
    *(_QWORD *)(v1 + 416) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    v40 = Logger.logObject.getter(v24);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Share Contacts Permission START", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
    v43 = *(_QWORD *)(v1 + 392);
    v44 = *(_QWORD *)(v1 + 296);
    v45 = *(_QWORD *)(v1 + 240);
    v46 = *(_QWORD *)(v1 + 112);

    v47 = v46 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v46 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler, v1 + 56, 0, 0);
    sub_100244418(v47, v1 + 16);
    v48 = sub_10023A834((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
    CurrentValueSubject.value.getter(v48);
    sub_10047DF4C(v43, v44, v45);
    v82 = *(_QWORD *)(v1 + 368);
    buf = *(uint8_t **)(v1 + 384);
    v59 = *(_QWORD *)(v1 + 288);
    v60 = *(_QWORD *)(v1 + 296);
    v61 = *(_QWORD *)(v1 + 280);
    v62 = *(_QWORD *)(v1 + 240);
    v97 = *(_QWORD *)(v1 + 224);
    v63 = *(_QWORD *)(v1 + 208);
    v89 = *(_QWORD *)(v1 + 232);
    v91 = *(_QWORD *)(v1 + 216);
    v65 = *(_QWORD *)(v1 + 192);
    v64 = *(_QWORD *)(v1 + 200);
    v86 = *(_QWORD *)(v1 + 144);
    v79 = *(_QWORD *)(v1 + 112);
    ((void (*)(_QWORD))v92)(*(_QWORD *)(v1 + 392));
    sub_10022E75C((_QWORD *)(v1 + 16));
    v66 = v63 + *(int *)(sub_100008384(&qword_1007BB658) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v63, v60, v61);
    v67 = sub_100008384((uint64_t *)&unk_1007BB630);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v66, v62, v67);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v64 + 104))(v63, enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:), v65);
    sub_10053D3FC(v63, (uint64_t)buf);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    v92((uint64_t)buf, v82);
    v68 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v86, 1, 1, v68);
    sub_100221F28(v62, v89, &qword_1007BA3A8);
    v69 = *(unsigned __int8 *)(v91 + 80);
    v70 = (v69 + 16) & ~v69;
    v71 = swift_allocObject(&unk_100728578, v70 + v97, v69 | 7);
    *(_QWORD *)(v1 + 424) = v71;
    sub_10022E718(v89, v71 + v70, &qword_1007BA3A8);
    v72 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
    swift_retain(v79);
    v73 = (_QWORD *)swift_task_alloc(v72);
    *(_QWORD *)(v1 + 432) = v73;
    *v73 = v1;
    v73[1] = sub_10040ABE4;
    return concurrentRace<A>(priority:operation:against:)(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 144), &unk_1007C04D0, v71, &unk_1007C04E0, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 152));
  }
  else
  {
    v25 = *(_QWORD *)(v1 + 112);
    v26 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v26(*(_QWORD *)(v1 + 328), v15);
    v27 = swift_retain_n(v25, 2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = *(_QWORD *)(v1 + 384);
      v31 = *(_QWORD *)(v1 + 352);
      v75 = *(_QWORD *)(v1 + 368);
      v76 = *(_QWORD *)(v1 + 336);
      v32 = *(_QWORD *)(v1 + 320);
      v80 = *(_QWORD *)(v1 + 304);
      v87 = *(_QWORD *)(v1 + 112);
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v95 = swift_slowAlloc(32, -1);
      v98 = v95;
      *(_DWORD *)v33 = 136315138;
      v34 = CurrentValueSubject.value.getter(v95);
      SFAirDropReceive.Transfer.askRequest.getter(v34);
      v35 = v92(v30, v75);
      SFAirDropReceive.AskRequest.type.getter(v35);
      v12(v31, v76);
      v36 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v37 = dispatch thunk of CustomStringConvertible.description.getter(v80, v36);
      v39 = v38;
      v26(v32, v80);
      *(_QWORD *)(v1 + 80) = sub_100228BD8(v37, (unint64_t)v39, &v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v33 + 4);
      swift_bridgeObjectRelease(v39);
      swift_release_n(v87, 2);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Share Contacts Permission SKIP. {type: %s}", v33, 0xCu);
      swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {
      v49 = *(_QWORD *)(v1 + 112);

      swift_release_n(v49, 2);
    }
    v50 = *(_QWORD *)(v1 + 392);
    v51 = *(_QWORD *)(v1 + 400);
    v52 = *(_QWORD *)(v1 + 384);
    v54 = *(_QWORD *)(v1 + 352);
    v53 = *(_QWORD *)(v1 + 360);
    v56 = *(_QWORD *)(v1 + 320);
    v55 = *(_QWORD *)(v1 + 328);
    v57 = *(_QWORD *)(v1 + 296);
    v58 = *(_QWORD *)(v1 + 272);
    v77 = *(_QWORD *)(v1 + 264);
    v78 = *(_QWORD *)(v1 + 240);
    v81 = *(_QWORD *)(v1 + 232);
    bufa = *(uint8_t **)(v1 + 208);
    v85 = *(_QWORD *)(v1 + 184);
    v88 = *(_QWORD *)(v1 + 176);
    v90 = *(_QWORD *)(v1 + 168);
    v93 = *(_QWORD *)(v1 + 144);
    v96 = *(_QWORD *)(v1 + 136);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 160) + 56))(*(_QWORD *)(v1 + 104), 1, 1, *(_QWORD *)(v1 + 152));
    swift_task_dealloc(v51);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v81);
    swift_task_dealloc(bufa);
    swift_task_dealloc(v85);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10040ABE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 432);
  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc(v3);
  v4 = v2[53];
  v5 = v2[51];
  v6 = v2[18];
  v7 = v2[14];
  sub_10000D0F0(v6, &qword_1007B68A0);
  swift_release(v7);
  swift_release(v4);
  if (v0)
    v8 = sub_10040AFC4;
  else
    v8 = sub_10040AC7C;
  return swift_task_switch(v8, v5, 0);
}

uint64_t sub_10040AC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t);
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  const char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, _QWORD, uint64_t);
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32);
  v5(v1, *(_QWORD *)(v0 + 176), v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v45 = *(_QWORD *)(v0 + 280);
    v47 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 240);
    v43 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 160);
    v49 = v5;
    v10 = *(_QWORD *)(v0 + 152);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v51 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
    v16 = (const char *)v15;
    *(_QWORD *)(v0 + 96) = sub_100228BD8(v14, v15, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v11 + 4);
    v17 = swift_bridgeObjectRelease(v16);
    v18 = v10;
    v5 = v49;
    (*(void (**)(uint64_t, uint64_t, __n128))(v39 + 8))(v9, v18, v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Share Contacts Permission END {response: %s}", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    sub_10000D0F0(v41, &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v45);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 296);
    v21 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    sub_10000D0F0(v22, &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  v5(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
  v26 = *(_QWORD *)(v0 + 392);
  v27 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 320);
  v31 = *(_QWORD *)(v0 + 328);
  v33 = *(_QWORD *)(v0 + 296);
  v34 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 240);
  v38 = *(_QWORD *)(v0 + 232);
  v40 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 184);
  v44 = *(_QWORD *)(v0 + 176);
  v46 = *(_QWORD *)(v0 + 168);
  v48 = *(_QWORD *)(v0 + 144);
  v50 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 56))(*(_QWORD *)(v0 + 104), 0, 1, *(_QWORD *)(v0 + 152));
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040AFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (!swift_dynamicCast(v2, v0 + 88, v4, v3, 0))
  {
    v16 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 280);
    sub_10000D0F0(*(_QWORD *)(v0 + 240), &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
LABEL_8:
    swift_errorRelease(*(_QWORD *)(v0 + 88));
    v24 = *(_QWORD *)(v0 + 392);
    v25 = *(_QWORD *)(v0 + 384);
    v27 = *(_QWORD *)(v0 + 352);
    v26 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 320);
    v28 = *(_QWORD *)(v0 + 328);
    v30 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 264);
    v31 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 240);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 176);
    v38 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 144);
    v40 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 400));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 88))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  *(_DWORD *)(v0 + 464) = v5;
  if (v5 != enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
  {
    v19 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 120);
    sub_10000D0F0(*(_QWORD *)(v0 + 240), &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    goto LABEL_8;
  }
  v6 = swift_errorRelease(*(_QWORD *)(v0 + 440));
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Share Contacts Permission END - Cancelling exchange", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = type metadata accessor for CancellationError(0);
  v11 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
  v12 = swift_allocError(v10, v11, 0, 0);
  *(_QWORD *)(v0 + 448) = v12;
  CancellationError.init()();
  v13 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  *(_QWORD *)(v0 + 456) = v13;
  *v13 = v0;
  v13[1] = sub_10040B2E4;
  return sub_10050A37C(v12);
}

uint64_t sub_10040B2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 448);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 408);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 456));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10040B344, v2, 0);
}

uint64_t sub_10040B344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(unsigned int *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v6, v8, 0, 0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v9, v1, v6);
  swift_willThrow(v10);
  sub_10000D0F0(v5, &qword_1007BA3A8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  swift_errorRelease(*(_QWORD *)(v0 + 88));
  v11 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 328);
  v17 = *(_QWORD *)(v0 + 296);
  v19 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 272);
  v21 = *(_QWORD *)(v0 + 240);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 400));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040B4F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v2[26] = a1;
  v2[27] = v1;
  v3 = type metadata accessor for CancellationError(0);
  v2[28] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[29] = v4;
  v2[30] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007C5E40);
  v2[31] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v6);
  v2[33] = swift_task_alloc(v6);
  v7 = sub_100008384(&qword_1007B6BD0);
  v2[34] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[35] = swift_task_alloc(v8);
  v2[36] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFNWInterfaceTypeCategory(0);
  v2[37] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[38] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[39] = swift_task_alloc(v11);
  v2[40] = swift_task_alloc(v11);
  v12 = sub_100008384(&qword_1007C5E70);
  v2[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007C03E0);
  v2[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SDAirDropServerConnection(0);
  v2[43] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[44] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[45] = swift_task_alloc(v16);
  v2[46] = swift_task_alloc(v16);
  v17 = type metadata accessor for SFAirDrop.Progress(0);
  v2[47] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[48] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[49] = swift_task_alloc(v19);
  v2[50] = swift_task_alloc(v19);
  v20 = sub_100008384(&qword_1007BA480);
  v2[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008384(&qword_1007BA488);
  v2[52] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v2[53] = v22;
  v2[54] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v2[55] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[56] = v24;
  v2[57] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SFNWInterfaceType(0);
  v2[58] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[59] = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[60] = swift_task_alloc(v27);
  v2[61] = swift_task_alloc(v27);
  v2[62] = swift_task_alloc(v27);
  v28 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v2[63] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v2[64] = v29;
  v2[65] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100008384(&qword_1007C4330);
  v2[66] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v30 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for Date(0);
  v2[67] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v2[68] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[69] = swift_task_alloc(v33);
  v2[70] = swift_task_alloc(v33);
  v34 = sub_100008384(&qword_1007B5B20);
  v2[71] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v2[72] = v35;
  v2[73] = swift_task_alloc((*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100008384(&qword_1007B6BD8);
  v2[74] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v2[75] = v37;
  v2[76] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[77] = v38;
  v39 = *(_QWORD *)(v38 - 8);
  v2[78] = v39;
  v40 = (*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[79] = swift_task_alloc(v40);
  v2[80] = swift_task_alloc(v40);
  v41 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[81] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v2[82] = v42;
  v43 = (*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[83] = swift_task_alloc(v43);
  v2[84] = swift_task_alloc(v43);
  v44 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2[85] = v44;
  v45 = *(_QWORD *)(v44 - 8);
  v2[86] = v45;
  v46 = (*(_QWORD *)(v45 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[87] = swift_task_alloc(v46);
  v2[88] = swift_task_alloc(v46);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v47 = static AirDropActor.shared;
  v2[89] = static AirDropActor.shared;
  return swift_task_switch(sub_10040B928, v47, 0);
}

uint64_t sub_10040B928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  const char *v55;
  int *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  void (*v66)(uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;

  v2 = *(_QWORD *)(v1 + 704);
  v3 = *(_QWORD *)(v1 + 688);
  v4 = *(_QWORD *)(v1 + 680);
  v5 = *(_QWORD *)(v1 + 672);
  v6 = *(_QWORD *)(v1 + 656);
  v7 = *(_QWORD *)(v1 + 648);
  v8 = *(_QWORD *)(v1 + 640);
  v9 = *(_QWORD *)(v1 + 624);
  v155 = *(_QWORD *)(v1 + 616);
  v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v1 + 720) = v11;
  v12 = v11(v2, v4);
  SFAirDropReceive.AskRequest.type.getter(v12);
  v159 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  v13 = v159(v5, v7);
  v14 = SFAirDrop.TransferType.isFiles.getter(v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v16 = v15(v8, v155);
  if ((v14 & 1) != 0)
    goto LABEL_3;
  v17 = *(_QWORD *)(v1 + 696);
  v18 = *(_QWORD *)(v1 + 680);
  v19 = *(_QWORD *)(v1 + 664);
  v20 = *(_QWORD *)(v1 + 648);
  v21 = *(_QWORD *)(v1 + 632);
  v22 = *(_QWORD *)(v1 + 616);
  v23 = CurrentValueSubject.value.getter(v16);
  SFAirDropReceive.Transfer.askRequest.getter(v23);
  v24 = v11(v17, v18);
  SFAirDropReceive.AskRequest.type.getter(v24);
  v25 = v159(v19, v20);
  v26 = SFAirDrop.TransferType.isCustom.getter(v25);
  v16 = v15(v21, v22);
  if ((v26 & 1) != 0)
  {
LABEL_3:
    v152 = (void (*)(uint64_t, uint64_t))v11;
    *(_QWORD *)(v1 + 728) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    v27 = Logger.logObject.getter(v16);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Monitoring Transfer START", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }
    v30 = *(_QWORD *)(v1 + 584);
    v31 = *(_QWORD *)(v1 + 576);
    v32 = *(_QWORD *)(v1 + 568);
    v33 = *(_QWORD *)(v1 + 544);
    v34 = *(_QWORD *)(v1 + 536);
    v35 = *(_QWORD *)(v1 + 528);
    v36 = *(_QWORD *)(v1 + 216);

    v37 = *(_QWORD *)(v36 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
    *(_QWORD *)(v1 + 736) = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v32);
    SFProgressContinuation.task.getter(v32);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v149 = v37;
    v38 = v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
    swift_beginAccess(v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart, v1 + 120, 0, 0);
    sub_100221F28(v38, v35, &qword_1007C4330);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1, v34);
    v40 = *(_QWORD *)(v1 + 560);
    if (v39 == 1)
    {
      v41 = *(_QWORD *)(v1 + 528);
      static Date.now.getter(v40);
      sub_10000D0F0(v41, &qword_1007C4330);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 544) + 32))(v40, *(_QWORD *)(v1 + 528), *(_QWORD *)(v1 + 536));
    }
    v42 = *(_QWORD *)(v1 + 696);
    v156 = *(_QWORD *)(v1 + 680);
    v117 = *(_QWORD *)(v1 + 664);
    v121 = *(_QWORD *)(v1 + 648);
    v161 = *(_QWORD *)(v1 + 608);
    v43 = *(_QWORD *)(v1 + 520);
    v132 = *(_QWORD *)(v1 + 512);
    v134 = *(_QWORD *)(v1 + 504);
    v123 = *(_QWORD *)(v1 + 496);
    v139 = *(_QWORD *)(v1 + 440);
    v144 = *(_QWORD *)(v1 + 592);
    v44 = *(_QWORD *)(v1 + 376);
    v130 = *(_QWORD *)(v1 + 384);
    v119 = v44;
    v136 = *(_QWORD *)(v1 + 448);
    v126 = *(_QWORD *)(v1 + 456);
    v128 = *(_QWORD *)(v1 + 208);
    v45 = *(_QWORD *)(v1 + 216)
        + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v45, v1 + 144, 0, 0);
    sub_100244418(v45, v1 + 16);
    v46 = *(_QWORD *)(v1 + 40);
    v116 = *(_QWORD *)(v1 + 48);
    v47 = sub_10023A834((_QWORD *)(v1 + 16), v46);
    CurrentValueSubject.value.getter(v47);
    v48 = sub_100008384((uint64_t *)&unk_1007B6820);
    sub_10047CBAC(v42, 0x726566736E617274, (void *)0xEC000000676E6972, v161, v46, v44, v48, v116, v43);
    v152(v42, v156);
    sub_10022E75C((_QWORD *)(v1 + 16));
    sub_100244418(v45, v1 + 56);
    v49 = *(_QWORD *)(v1 + 80);
    v50 = *(_QWORD *)(v1 + 88);
    v51 = sub_10023A834((_QWORD *)(v1 + 56), v49);
    v52 = CurrentValueSubject.value.getter(v51);
    SFAirDropReceive.Transfer.askRequest.getter(v52);
    v152(v42, v156);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 64))(v117, v49, v50);
    v55 = v54;
    *(_QWORD *)(v1 + 744) = v53;
    *(_QWORD *)(v1 + 752) = v54;
    v159(v117, v121);
    sub_10022E75C((_QWORD *)(v1 + 56));
    sub_100504234(v123);
    v56 = (int *)sub_100008384(&qword_1007BB650);
    *(_QWORD *)(v1 + 760) = v56;
    v57 = v126 + v56[12];
    v58 = (uint64_t *)(v126 + v56[16]);
    v59 = v126 + v56[20];
    v60 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    *(_QWORD *)(v1 + 768) = v60;
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
    *(_QWORD *)(v1 + 776) = v61;
    v61(v126, v128, v60);
    v62 = enum case for SFAirDrop.Progress.notStarted(_:);
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 104);
    *(_QWORD *)(v1 + 784) = v63;
    v63(v57, v62, v119);
    *v58 = sub_1002BAAD4(v53, v55);
    v58[1] = v64;
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
    *(_QWORD *)(v1 + 792) = v65;
    v65(v59, v43, v134);
    *(_DWORD *)(v1 + 880) = enum case for SFAirDropReceive.Transfer.State.transferring(_:);
    v66 = *(void (**)(uint64_t))(v136 + 104);
    *(_QWORD *)(v1 + 800) = v66;
    v66(v126);
    sub_10053D3FC(v126, v42);
    v67 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
    *(_QWORD *)(v1 + 808) = v67;
    v67(v126, v139);
    v152(v42, v156);
    SFProgressTask.makeAsyncIterator()(v144);
    v68 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    *(_QWORD *)(v1 + 816) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess(v149 + v68, v1 + 96, 0, 0);
    *(_DWORD *)(v1 + 884) = enum case for SFNWInterfaceType.other(_:);
    *(_DWORD *)(v1 + 888) = enum case for SFAirDrop.Progress.completed(_:);
    *(_DWORD *)(v1 + 892) = enum case for SFNWInterfaceTypeCategory.regular(_:);
    v69 = static AirDropActor.shared;
    v70 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v71 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v1 + 824) = v71;
    *v71 = v1;
    v71[1] = sub_10040C474;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v1 + 408), v69, v70, *(_QWORD *)(v1 + 416), v1 + 176);
  }
  else
  {
    v73 = swift_retain_n(*(_QWORD *)(v1 + 216), 2);
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.default.getter(v74);
    if (os_log_type_enabled(v74, v75))
    {
      v76 = *(_QWORD *)(v1 + 696);
      v77 = *(_QWORD *)(v1 + 664);
      v140 = *(_QWORD *)(v1 + 680);
      v142 = *(_QWORD *)(v1 + 648);
      v153 = v11;
      v78 = *(_QWORD *)(v1 + 632);
      v146 = *(_QWORD *)(v1 + 616);
      v150 = *(_QWORD *)(v1 + 216);
      v79 = (uint8_t *)swift_slowAlloc(12, -1);
      v157 = swift_slowAlloc(32, -1);
      v163 = v157;
      *(_DWORD *)v79 = 136315138;
      v80 = CurrentValueSubject.value.getter(v157);
      SFAirDropReceive.Transfer.askRequest.getter(v80);
      v81 = v153(v76, v140);
      SFAirDropReceive.AskRequest.type.getter(v81);
      v159(v77, v142);
      v82 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v83 = dispatch thunk of CustomStringConvertible.description.getter(v146, v82);
      v85 = v84;
      v86 = v78;
      v11 = v153;
      v15(v86, v146);
      *(_QWORD *)(v1 + 168) = sub_100228BD8(v83, (unint64_t)v85, &v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 168, v1 + 176, v79 + 4);
      swift_bridgeObjectRelease(v85);
      swift_release_n(v150, 2);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Monitoring Transfer SKIP. {type: %s}", v79, 0xCu);
      swift_arrayDestroy(v157, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v157, -1, -1);
      swift_slowDealloc(v79, -1, -1);

    }
    else
    {
      v88 = *(_QWORD *)(v1 + 216);

      v87 = swift_release_n(v88, 2);
    }
    v89 = *(_QWORD *)(v1 + 696);
    v90 = *(_QWORD *)(v1 + 680);
    v91 = *(_QWORD *)(v1 + 664);
    v92 = *(_QWORD *)(v1 + 648);
    v93 = *(_QWORD *)(v1 + 632);
    v94 = *(_QWORD *)(v1 + 616);
    v95 = CurrentValueSubject.value.getter(v87);
    SFAirDropReceive.Transfer.askRequest.getter(v95);
    v96 = v11(v89, v90);
    SFAirDropReceive.AskRequest.type.getter(v96);
    v97 = v159(v91, v92);
    v98 = SFAirDrop.TransferType.isLinks.getter(v97);
    v99 = v15(v93, v94);
    if ((v98 & 1) != 0)
    {
      v100 = *(_QWORD *)(v1 + 696);
      v101 = *(_QWORD *)(v1 + 680);
      v102 = *(_QWORD *)(v1 + 664);
      v103 = *(_QWORD *)(v1 + 648);
      v104 = CurrentValueSubject.value.getter(v99);
      SFAirDropReceive.Transfer.askRequest.getter(v104);
      v105 = v11(v100, v101);
      v106 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v105);
      v159(v102, v103);
      v162 = sub_100229040((uint64_t)v106);
      swift_bridgeObjectRelease(v106);
    }
    else
    {
      v162 = _swiftEmptyArrayStorage;
    }
    v107 = *(_QWORD *)(v1 + 696);
    v108 = *(_QWORD *)(v1 + 672);
    v109 = *(_QWORD *)(v1 + 664);
    v110 = *(_QWORD *)(v1 + 640);
    v111 = *(_QWORD *)(v1 + 632);
    v112 = *(_QWORD *)(v1 + 608);
    v113 = *(_QWORD *)(v1 + 584);
    v114 = *(_QWORD *)(v1 + 560);
    v115 = *(_QWORD *)(v1 + 552);
    v118 = *(_QWORD *)(v1 + 528);
    v120 = *(_QWORD *)(v1 + 520);
    v122 = *(_QWORD *)(v1 + 496);
    v124 = *(_QWORD *)(v1 + 488);
    v125 = *(_QWORD *)(v1 + 480);
    v127 = *(_QWORD *)(v1 + 456);
    v129 = *(_QWORD *)(v1 + 432);
    v131 = *(_QWORD *)(v1 + 408);
    v133 = *(_QWORD *)(v1 + 400);
    v135 = *(_QWORD *)(v1 + 392);
    v137 = *(_QWORD *)(v1 + 368);
    v138 = *(_QWORD *)(v1 + 360);
    v141 = *(_QWORD *)(v1 + 336);
    v143 = *(_QWORD *)(v1 + 328);
    v145 = *(_QWORD *)(v1 + 320);
    v147 = *(_QWORD *)(v1 + 312);
    v148 = *(_QWORD *)(v1 + 288);
    v151 = *(_QWORD *)(v1 + 280);
    v154 = *(_QWORD *)(v1 + 264);
    v158 = *(_QWORD *)(v1 + 256);
    v160 = *(_QWORD *)(v1 + 240);
    swift_task_dealloc(*(_QWORD *)(v1 + 704));
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v118);
    swift_task_dealloc(v120);
    swift_task_dealloc(v122);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v127);
    swift_task_dealloc(v129);
    swift_task_dealloc(v131);
    swift_task_dealloc(v133);
    swift_task_dealloc(v135);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v141);
    swift_task_dealloc(v143);
    swift_task_dealloc(v145);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v151);
    swift_task_dealloc(v154);
    swift_task_dealloc(v158);
    swift_task_dealloc(v160);
    return (*(uint64_t (**)(_QWORD *, double))(v1 + 8))(v162, 0.0);
  }
}

uint64_t sub_10040C474()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 824));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 712);
    swift_bridgeObjectRelease(*(const char **)(v2 + 752));
    v4 = sub_10040DA9C;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 712);
    v4 = sub_10040C4E4;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10040C4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  const char **v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  unsigned int v99;
  void (*v100)(uint64_t, _QWORD, uint64_t);
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 416));
    v4 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 832) = v4;
    *v4 = v0;
    v4[1] = sub_10040CCB4;
    return SFProgressTask.finalValue.getter(v0 + 200, *(_QWORD *)(v0 + 592));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 344);
    v7 = *(_QWORD *)(v0 + 352);
    v8 = *(_QWORD *)(v0 + 336);
    v9 = *(_QWORD *)(v0 + 736) + *(_QWORD *)(v0 + 816);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 400), v1, v2);
    sub_100221F28(v9, v8, &qword_1007C03E0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 336), &qword_1007C03E0);
      if (qword_1007B4220 != -1)
        swift_once(&qword_1007B4220, sub_10050CF88);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_100221DF8(v10, (uint64_t)qword_1007C48D0);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.error.getter(v12);
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "UPLOAD connection is not active", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }
      v15 = *(unsigned int *)(v0 + 884);
      v16 = *(_QWORD *)(v0 + 488);
      v17 = *(_QWORD *)(v0 + 464);
      v18 = *(_QWORD *)(v0 + 472);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v16, v15, v17);
    }
    else
    {
      v19 = *(_QWORD *)(v0 + 360);
      v20 = *(_QWORD *)(v0 + 368);
      v21 = *(_QWORD *)(v0 + 344);
      sub_100221DB4(*(_QWORD *)(v0 + 336), v20, type metadata accessor for SDAirDropServerConnection);
      sub_10042344C(v20, v19);
      if (swift_getEnumCaseMultiPayload(v19, v21) > 1)
      {
        v23 = *(uint64_t **)(v0 + 360);
        v22 = *v23;
        v24 = (char *)v23 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
        v25 = type metadata accessor for UUID(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      }
      else
      {
        v22 = **(_QWORD **)(v0 + 360);
      }
      v26 = *(_QWORD *)(v0 + 368);
      sub_1004FA6E0(*(_QWORD *)(v0 + 488));
      swift_release(v22);
      sub_1002443C8(v26, type metadata accessor for SDAirDropServerConnection);
    }
    v27 = *(_DWORD *)(v0 + 888);
    v28 = *(_QWORD *)(v0 + 392);
    v29 = *(_QWORD *)(v0 + 376);
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v31(v28, *(_QWORD *)(v0 + 400), v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v30 + 88))(v28, v29) == v27)
    {
      v32 = *(const char ***)(v0 + 392);
      (*(void (**)(const char **, _QWORD))(*(_QWORD *)(v0 + 384) + 96))(v32, *(_QWORD *)(v0 + 376));
      swift_bridgeObjectRelease(*v32);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      v36 = os_log_type_enabled(v34, v35);
      v37 = *(_QWORD *)(v0 + 496);
      v38 = *(_QWORD *)(v0 + 464);
      v39 = *(_QWORD *)(v0 + 472);
      v40 = *(_QWORD *)(v0 + 400);
      v41 = *(_QWORD *)(v0 + 376);
      v42 = *(_QWORD *)(v0 + 384);
      if (v36)
      {
        v43 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Pipelined UPLOAD already complete", v43, 2u);
        swift_slowDealloc(v43, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }
    else
    {
      v100 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 800);
      v99 = *(_DWORD *)(v0 + 880);
      v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 792);
      v44 = *(int **)(v0 + 760);
      v94 = *(const char **)(v0 + 752);
      v45 = *(_QWORD *)(v0 + 744);
      v102 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
      v103 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
      v98 = *(_QWORD *)(v0 + 696);
      v101 = *(_QWORD *)(v0 + 680);
      v95 = *(_QWORD *)(v0 + 504);
      v96 = *(_QWORD *)(v0 + 520);
      v106 = *(_QWORD *)(v0 + 496);
      v104 = *(_QWORD *)(v0 + 488);
      v46 = *(_QWORD *)(v0 + 456);
      v105 = *(_QWORD *)(v0 + 464);
      v47 = *(_QWORD *)(v0 + 440);
      v48 = *(_QWORD *)(v0 + 400);
      v49 = *(_QWORD *)(v0 + 376);
      v50 = v46 + v44[12];
      v51 = (uint64_t *)(v46 + v44[16]);
      v52 = v46 + v44[20];
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 776))(v46, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 768));
      v31(v50, v48, v49);
      *v51 = sub_1002BAAD4(v45, v94);
      v51[1] = v53;
      v97(v52, v96, v95);
      v100(v46, v99, v47);
      sub_10053D3FC(v46, v98);
      v103(v46, v47);
      v102(v98, v101);
      v54 = sub_100220D78(&qword_1007BA108, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType, (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v104, v106, v105, v54);
      if ((v55 & 1) == 0)
      {
        v56 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 720);
        v57 = *(_QWORD *)(v0 + 696);
        v58 = *(_QWORD *)(v0 + 680);
        v59 = *(_QWORD *)(v0 + 464);
        v60 = *(_QWORD *)(v0 + 472);
        v61 = *(_QWORD *)(v0 + 328);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 16))(v61, *(_QWORD *)(v0 + 488), v59);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v59);
        sub_10053D7F0(v61, v57);
        sub_10000D0F0(v61, &qword_1007C5E70);
        v55 = v56(v57, v58);
      }
      v62 = *(unsigned int *)(v0 + 892);
      v63 = *(_QWORD *)(v0 + 488);
      v107 = *(_QWORD *)(v0 + 480);
      v65 = *(_QWORD *)(v0 + 464);
      v64 = *(_QWORD *)(v0 + 472);
      v67 = *(_QWORD *)(v0 + 312);
      v66 = *(_QWORD *)(v0 + 320);
      v68 = *(_QWORD *)(v0 + 296);
      v69 = *(_QWORD *)(v0 + 304);
      SFNWInterfaceType.category()(v55);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 104))(v67, v62, v68);
      v70 = sub_100220D78(&qword_1007BA498, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceTypeCategory, (uint64_t)&protocol conformance descriptor for SFNWInterfaceTypeCategory);
      v71 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67, v68, v70);
      v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v72(v67, v68);
      v72(v66, v68);
      v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v107, v63, v65);
      if ((v71 & 1) != 0)
      {
        v74 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 472) + 8);
        v74(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 464));
      }
      else
      {
        v76 = *(_QWORD *)(v0 + 472);
        v75 = *(_QWORD *)(v0 + 480);
        v108 = *(_QWORD *)(v0 + 464);
        v78 = *(_QWORD *)(v0 + 312);
        v77 = *(_QWORD *)(v0 + 320);
        v79 = *(_QWORD *)(v0 + 296);
        v80 = SFNWInterfaceType.category()(v73);
        SFNWInterfaceType.category()(v80);
        v81 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v78, v79, v70);
        v72(v78, v79);
        v72(v77, v79);
        v74 = *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8);
        v82 = v74(v75, v108);
        if ((v81 & 1) == 0)
        {
          v83 = Logger.logObject.getter(v82);
          v84 = static os_log_type_t.default.getter(v83);
          if (os_log_type_enabled(v83, v84))
          {
            v85 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v85 = 0;
            _os_log_impl((void *)&_mh_execute_header, v83, v84, "AirDrop interface changed to high priority category", v85, 2u);
            swift_slowDealloc(v85, -1, -1);
          }

          sub_1005434CC(3.0);
        }
      }
      v86 = *(_QWORD *)(v0 + 496);
      v87 = *(_QWORD *)(v0 + 464);
      v88 = *(_QWORD *)(v0 + 392);
      v89 = *(_QWORD *)(v0 + 376);
      v90 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 384) + 8);
      v90(*(_QWORD *)(v0 + 400), v89);
      v74(v86, v87);
      v90(v88, v89);
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 472) + 32))(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 464));
    v91 = static AirDropActor.shared;
    v92 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v93 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 824) = v93;
    *v93 = v0;
    v93[1] = sub_10040C474;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 408), v91, v92, *(_QWORD *)(v0 + 416), v0 + 176);
  }
}

uint64_t sub_10040CCB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 832);
  *(_QWORD *)(*v1 + 840) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 712);
    swift_bridgeObjectRelease(*(const char **)(v2 + 752));
    v5 = sub_10040DC58;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 712);
    v5 = sub_10040CD28;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_10040CD28()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char **v7;
  _QWORD *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(const char **, _QWORD, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  void (*v68)(uint64_t, _QWORD, uint64_t);
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;

  v62 = *(_DWORD *)(v0 + 888);
  v80 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
  v68 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 800);
  v66 = *(_DWORD *)(v0 + 880);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 792);
  v1 = *(int **)(v0 + 760);
  v57 = *(_QWORD *)(v0 + 752);
  v59 = *(void (**)(const char **, _QWORD, uint64_t))(v0 + 784);
  v55 = *(_QWORD *)(v0 + 744);
  v77 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
  v2 = *(_QWORD *)(v0 + 696);
  v72 = *(_QWORD *)(v0 + 680);
  v84 = *(_QWORD *)(v0 + 552);
  v90 = *(_QWORD *)(v0 + 560);
  v51 = *(_QWORD *)(v0 + 504);
  v53 = *(_QWORD *)(v0 + 520);
  v70 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 456);
  v74 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 328);
  v7 = (const char **)(v3 + v1[12]);
  v8 = (_QWORD *)(v3 + v1[16]);
  v9 = v3 + v1[20];
  v10 = *(const char **)(v0 + 200);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 776))(v3, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 768));
  *v7 = v10;
  v59(v7, v62, v5);
  *v8 = v55;
  v8[1] = v57;
  v64(v9, v53, v51);
  v68(v3, v66, v4);
  v69 = v10;
  swift_bridgeObjectRetain(v10);
  sub_10053D3FC(v3, v2);
  v80(v3, v4);
  v77(v2, v72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v6, 1, 1, v74);
  sub_10053D7F0(v6, v2);
  sub_10000D0F0(v6, &qword_1007C5E70);
  v11 = ((uint64_t (*)(uint64_t, uint64_t))v77)(v2, v72);
  static Date.now.getter(v11);
  sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v90, v84);
  if ((result & 1) != 0)
  {
    v13 = *(_QWORD *)(v0 + 552);
    v75 = *(_QWORD **)(v0 + 544);
    v14 = *(_QWORD *)(v0 + 536);
    v81 = *(_QWORD *)(v0 + 280);
    v85 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 256);
    v91 = *(_QWORD *)(v0 + 272);
    v18 = v15 + *(int *)(v17 + 48);
    v19 = (void (*)(uint64_t, uint64_t, uint64_t))v75[2];
    v19(v15, *(_QWORD *)(v0 + 560), v14);
    v20 = (void (*)(uint64_t, uint64_t, uint64_t))v75[4];
    v78 = v18;
    v20(v18, v13, v14);
    v21 = v16 + *(int *)(v17 + 48);
    v19(v16, v15, v14);
    v19(v21, v18, v14);
    v20(v81, v16, v14);
    v22 = (void (*)(uint64_t, uint64_t))v75[1];
    v22(v21, v14);
    v23 = v16 + *(int *)(v17 + 48);
    v20(v16, v15, v14);
    v20(v23, v78, v14);
    v20(v81 + *(int *)(v91 + 36), v23, v14);
    v92 = v22;
    v22(v16, v14);
    v24 = sub_10022E718(v81, v85, &qword_1007B6BD0);
    v25 = ClosedRange<>.interval.getter(v24);
    v26 = sub_10000D0F0(v85, &qword_1007B6BD0);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Monitoring Transfer END", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }
    v82 = *(_QWORD *)(v0 + 600);
    v86 = *(_QWORD *)(v0 + 592);
    v88 = *(_QWORD *)(v0 + 608);
    v30 = *(_QWORD *)(v0 + 560);
    v31 = *(_QWORD *)(v0 + 536);
    v32 = *(_QWORD *)(v0 + 520);
    v34 = *(_QWORD *)(v0 + 504);
    v33 = *(_QWORD *)(v0 + 512);
    v35 = *(_QWORD *)(v0 + 496);
    v37 = *(_QWORD *)(v0 + 464);
    v36 = *(_QWORD *)(v0 + 472);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    v92(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v88, v86);
    v38 = *(_QWORD *)(v0 + 696);
    v39 = *(_QWORD *)(v0 + 672);
    v40 = *(_QWORD *)(v0 + 664);
    v41 = *(_QWORD *)(v0 + 640);
    v42 = *(_QWORD *)(v0 + 632);
    v43 = *(_QWORD *)(v0 + 608);
    v44 = *(_QWORD *)(v0 + 584);
    v45 = *(_QWORD *)(v0 + 560);
    v46 = *(_QWORD *)(v0 + 552);
    v47 = *(_QWORD *)(v0 + 528);
    v48 = *(_QWORD *)(v0 + 520);
    v49 = *(_QWORD *)(v0 + 496);
    v50 = *(_QWORD *)(v0 + 488);
    v52 = *(_QWORD *)(v0 + 480);
    v54 = *(_QWORD *)(v0 + 456);
    v56 = *(_QWORD *)(v0 + 432);
    v58 = *(_QWORD *)(v0 + 408);
    v60 = *(_QWORD *)(v0 + 400);
    v61 = *(_QWORD *)(v0 + 392);
    v63 = *(_QWORD *)(v0 + 368);
    v65 = *(_QWORD *)(v0 + 360);
    v67 = *(_QWORD *)(v0 + 336);
    v71 = *(_QWORD *)(v0 + 328);
    v73 = *(_QWORD *)(v0 + 320);
    v76 = *(_QWORD *)(v0 + 312);
    v79 = *(_QWORD *)(v0 + 288);
    v83 = *(_QWORD *)(v0 + 280);
    v87 = *(_QWORD *)(v0 + 264);
    v89 = *(_QWORD *)(v0 + 256);
    v93 = *(_QWORD *)(v0 + 240);
    swift_task_dealloc(*(_QWORD *)(v0 + 704));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v54);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(v83);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v69, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10040D310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 856);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 712);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 864));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10040D374, v2, 0);
}

uint64_t sub_10040D374()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 720);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 472) + 56))(v4, 1, 1, *(_QWORD *)(v0 + 464));
  sub_10053D7F0(v4, v2);
  sub_10000D0F0(v4, &qword_1007C5E70);
  v5 = v1(v2, v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Monitoring Transfer END - Cancelled.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 224);

  v12 = type metadata accessor for SFAirDropReceive.Failure(0);
  v13 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v12, v13, 0, 0);
  v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, enum case for SFAirDropReceive.Failure.senderCancelled(_:), v12);
  swift_willThrow(v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_errorRelease(*(_QWORD *)(v0 + 184));
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 672);
  v18 = *(_QWORD *)(v0 + 664);
  v19 = *(_QWORD *)(v0 + 640);
  v20 = *(_QWORD *)(v0 + 632);
  v21 = *(_QWORD *)(v0 + 608);
  v22 = *(_QWORD *)(v0 + 584);
  v23 = *(_QWORD *)(v0 + 560);
  v24 = *(_QWORD *)(v0 + 552);
  v26 = *(_QWORD *)(v0 + 528);
  v27 = *(_QWORD *)(v0 + 520);
  v28 = *(_QWORD *)(v0 + 496);
  v29 = *(_QWORD *)(v0 + 488);
  v30 = *(_QWORD *)(v0 + 480);
  v31 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 432);
  v33 = *(_QWORD *)(v0 + 408);
  v34 = *(_QWORD *)(v0 + 400);
  v35 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v37 = *(_QWORD *)(v0 + 360);
  v38 = *(_QWORD *)(v0 + 336);
  v39 = *(_QWORD *)(v0 + 328);
  v40 = *(_QWORD *)(v0 + 320);
  v41 = *(_QWORD *)(v0 + 312);
  v42 = *(_QWORD *)(v0 + 288);
  v43 = *(_QWORD *)(v0 + 280);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 704));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040D6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 848);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 712);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 872));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10040D714, v2, 0);
}

uint64_t sub_10040D714()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 848);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 472) + 56))(v5, 1, 1, *(_QWORD *)(v0 + 464));
  sub_10053D7F0(v5, v3);
  sub_10000D0F0(v5, &qword_1007C5E70);
  v2(v3, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 848);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v9);
    v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 192) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Monitoring Transfer END - Failure {%@}", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {
    v15 = *(_QWORD *)(v0 + 848);

    swift_errorRelease(v15);
    v14 = swift_errorRelease(v15);
  }
  swift_willThrow(v14);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 672);
  v18 = *(_QWORD *)(v0 + 664);
  v19 = *(_QWORD *)(v0 + 640);
  v20 = *(_QWORD *)(v0 + 632);
  v21 = *(_QWORD *)(v0 + 608);
  v22 = *(_QWORD *)(v0 + 584);
  v23 = *(_QWORD *)(v0 + 560);
  v24 = *(_QWORD *)(v0 + 552);
  v26 = *(_QWORD *)(v0 + 528);
  v27 = *(_QWORD *)(v0 + 520);
  v28 = *(_QWORD *)(v0 + 496);
  v29 = *(_QWORD *)(v0 + 488);
  v30 = *(_QWORD *)(v0 + 480);
  v31 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 432);
  v33 = *(_QWORD *)(v0 + 408);
  v34 = *(_QWORD *)(v0 + 400);
  v35 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v37 = *(_QWORD *)(v0 + 360);
  v38 = *(_QWORD *)(v0 + 336);
  v39 = *(_QWORD *)(v0 + 328);
  v40 = *(_QWORD *)(v0 + 320);
  v41 = *(_QWORD *)(v0 + 312);
  v42 = *(_QWORD *)(v0 + 288);
  v43 = *(_QWORD *)(v0 + 280);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 704));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040DA9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = v0[75];
  v22 = v0[74];
  v23 = v0[76];
  v1 = v0[70];
  v2 = v0[68];
  v3 = v0[67];
  v4 = v0[65];
  v6 = v0[63];
  v5 = v0[64];
  v7 = v0[62];
  v8 = v0[58];
  v9 = v0[59];
  (*(void (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[54], v0[52]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  v10 = v0[22];
  v0[23] = v10;
  v0[106] = v10;
  v11 = v0[30];
  v12 = v0[28];
  swift_errorRetain(v10);
  v13 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v11, v0 + 23, v13, v12, 0))
  {
    v14 = v0[28];
    swift_errorRelease(v10);
    v15 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v16 = swift_allocError(v14, v15, 0, 0);
    v0[107] = v16;
    CancellationError.init()();
    v17 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v0[108] = v17;
    *v17 = v0;
    v17[1] = sub_10040D310;
    v18 = v16;
  }
  else
  {
    swift_errorRelease(v0[23]);
    swift_errorRetain(v10);
    v19 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v0[109] = v19;
    *v19 = v0;
    v19[1] = sub_10040D6B0;
    v18 = v10;
  }
  return sub_10050A37C(v18);
}

uint64_t sub_10040DC58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[74];
  v4 = v0[70];
  v5 = v0[68];
  v6 = v0[67];
  v7 = v0[65];
  v8 = v0[63];
  v9 = v0[64];
  (*(void (**)(_QWORD, _QWORD))(v0[59] + 8))(v0[62], v0[58]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = v0[105];
  v0[23] = v10;
  v0[106] = v10;
  v11 = v0[30];
  v12 = v0[28];
  swift_errorRetain(v10);
  v13 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v11, v0 + 23, v13, v12, 0))
  {
    v14 = v0[28];
    swift_errorRelease(v10);
    v15 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v16 = swift_allocError(v14, v15, 0, 0);
    v0[107] = v16;
    CancellationError.init()();
    v17 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v0[108] = v17;
    *v17 = v0;
    v17[1] = sub_10040D310;
    v18 = v16;
  }
  else
  {
    swift_errorRelease(v0[23]);
    swift_errorRetain(v10);
    v19 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v0[109] = v19;
    *v19 = v0;
    v19[1] = sub_10040D6B0;
    v18 = v10;
  }
  return sub_10050A37C(v18);
}

uint64_t sub_10040DDF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  *(_BYTE *)(v5 + 194) = a4;
  *(_QWORD *)(v5 + 264) = a3;
  *(_QWORD *)(v5 + 272) = v4;
  *(_QWORD *)(v5 + 248) = a1;
  *(_QWORD *)(v5 + 256) = a2;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B6BF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 280) = swift_task_alloc(v6);
  *(_QWORD *)(v5 + 288) = swift_task_alloc(v6);
  v7 = sub_100008384((uint64_t *)&unk_1007C5E10);
  *(_QWORD *)(v5 + 296) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 304) = v8;
  *(_QWORD *)(v5 + 312) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  *(_QWORD *)(v5 + 320) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 328) = v10;
  *(_QWORD *)(v5 + 336) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDrop.DeclineAction(0);
  *(_QWORD *)(v5 + 344) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 352) = v12;
  *(_QWORD *)(v5 + 360) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B6BE8);
  *(_QWORD *)(v5 + 368) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 376) = v14;
  *(_QWORD *)(v5 + 384) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  *(_QWORD *)(v5 + 392) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v5 + 400) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 408) = swift_task_alloc(v17);
  *(_QWORD *)(v5 + 416) = swift_task_alloc(v17);
  *(_QWORD *)(v5 + 424) = swift_task_alloc(v17);
  v18 = type metadata accessor for SFAirDrop.TransferType(0);
  *(_QWORD *)(v5 + 432) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v5 + 440) = v19;
  *(_QWORD *)(v5 + 448) = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  *(_QWORD *)(v5 + 456) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v5 + 464) = v21;
  *(_QWORD *)(v5 + 472) = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SFAirDropReceive.Transfer(0);
  *(_QWORD *)(v5 + 480) = v22;
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v5 + 488) = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 496) = swift_task_alloc(v24);
  *(_QWORD *)(v5 + 504) = swift_task_alloc(v24);
  *(_QWORD *)(v5 + 512) = swift_task_alloc(v24);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v25 = static AirDropActor.shared;
  *(_QWORD *)(v5 + 520) = static AirDropActor.shared;
  return swift_task_switch(sub_10040E01C, v25, 0);
}

uint64_t sub_10040E01C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  const char *v3;
  unsigned __int8 v4;
  uint64_t v5;
  char *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  void (*v49)(uint64_t);
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  char v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  const char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  unint64_t v85;
  const char *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  os_log_t loga;
  os_log_t log;
  NSObject *logb;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  os_log_type_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::String v129;

  v1 = type metadata accessor for SDAirDropUserSafetyContentHandler();
  *(_QWORD *)(v0 + 528) = swift_allocObject(v1, 16, 7);
  v2 = sub_1003B0844();
  v5 = v2;
  v6 = (char *)v3;
  *(_QWORD *)(v0 + 536) = v2;
  *(_QWORD *)(v0 + 544) = v3;
  *(_BYTE *)(v0 + 195) = v4;
  if (!v4)
  {
    swift_bridgeObjectRetain(v3);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.default.getter(v81);
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc(12, -1);
      v84 = swift_slowAlloc(32, -1);
      v128 = v84;
      *(_DWORD *)v83 = 136315138;
      swift_bridgeObjectRetain(v6);
      v129._countAndFlagsBits = v5;
      v129._object = v6;
      v85 = sub_1003ABB94(v129, 0);
      v87 = v86;
      sub_10031B7F4(v5, (uint64_t)v6, 0);
      *(_QWORD *)(v0 + 224) = sub_100228BD8(v85, (unint64_t)v87, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v83 + 4);
      swift_bridgeObjectRelease(v87);
      sub_10031B7F4(v5, (uint64_t)v6, 0);
      sub_10031B7F4(v5, (uint64_t)v6, 0);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Analyzing full content SKIP {userSafetyMode: %s}", v83, 0xCu);
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v83, -1, -1);

    }
    else
    {

      sub_10031B7F4(v5, (uint64_t)v6, 0);
      sub_10031B7F4(v5, (uint64_t)v6, 0);
    }
    goto LABEL_14;
  }
  v7 = v4;
  if ((*(_BYTE *)(v0 + 194) & 1) != 0)
    goto LABEL_8;
  v8 = *(_QWORD *)(v0 + 512);
  v10 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 488);
  v11 = *(_QWORD *)(v0 + 464);
  v12 = *(_QWORD *)(v0 + 472);
  v122 = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(*(_QWORD *)(v0 + 272)
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v13 = CurrentValueSubject.value.getter(v2);
  SFAirDropReceive.Transfer.askRequest.getter(v13);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 560) = v14;
  v15 = v14(v8, v10);
  v16 = SFAirDropReceive.AskRequest.senderIsMe.getter(v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  v18 = v17(v12, v122);
  if ((v16 & 1) != 0)
    goto LABEL_8;
  v19 = *(_QWORD *)(v0 + 512);
  v20 = *(_QWORD *)(v0 + 472);
  v21 = *(_QWORD *)(v0 + 448);
  loga = *(os_log_t *)(v0 + 480);
  v114 = *(_QWORD *)(v0 + 456);
  v117 = *(_QWORD *)(v0 + 440);
  v123 = *(_QWORD *)(v0 + 432);
  v22 = CurrentValueSubject.value.getter(v18);
  SFAirDropReceive.Transfer.askRequest.getter(v22);
  v23 = v14(v19, (uint64_t)loga);
  SFAirDropReceive.AskRequest.type.getter(v23);
  v24 = v17(v20, v114);
  v25 = SFAirDrop.TransferType.isFiles.getter(v24);
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v21, v123);
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v55 = *(_QWORD *)(v0 + 272);
    sub_10031B7F4(v5, (uint64_t)v6, v7);
    v56 = swift_retain_n(v55, 3);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = *(_QWORD *)(v0 + 512);
      v126 = v58;
      v61 = *(_QWORD *)(v0 + 480);
      v60 = *(_QWORD *)(v0 + 488);
      v62 = *(_QWORD *)(v0 + 472);
      v105 = v61;
      v107 = *(_QWORD *)(v0 + 464);
      logb = v57;
      v63 = *(_QWORD *)(v0 + 456);
      v110 = *(_QWORD *)(v0 + 448);
      v118 = *(_QWORD *)(v0 + 440);
      v115 = *(_QWORD *)(v0 + 432);
      v64 = *(_QWORD *)(v0 + 272);
      v65 = *(unsigned __int8 *)(v0 + 194);
      v66 = swift_slowAlloc(24, -1);
      v120 = swift_slowAlloc(32, -1);
      v128 = v120;
      *(_DWORD *)v66 = 67109634;
      *(_DWORD *)(v0 + 764) = v65;
      v67 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 764, v0 + 768, v66 + 4);
      *(_WORD *)(v66 + 8) = 1024;
      v68 = CurrentValueSubject.value.getter(v67);
      SFAirDropReceive.Transfer.askRequest.getter(v68);
      v69 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8);
      v70 = v69(v59, v61);
      v71 = SFAirDropReceive.AskRequest.senderIsMe.getter(v70);
      v72 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
      v72(v62, v63);
      *(_DWORD *)(v0 + 756) = v71 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 756, v0 + 760, v66 + 10);
      v73 = swift_release(v64);
      *(_WORD *)(v66 + 14) = 2080;
      v74 = CurrentValueSubject.value.getter(v73);
      SFAirDropReceive.Transfer.askRequest.getter(v74);
      v75 = v69(v59, v105);
      SFAirDropReceive.AskRequest.type.getter(v75);
      v72(v62, v63);
      v76 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v77 = dispatch thunk of CustomStringConvertible.description.getter(v115, v76);
      v79 = v78;
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v110, v115);
      *(_QWORD *)(v0 + 240) = sub_100228BD8(v77, (unint64_t)v79, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v66 + 16);
      swift_bridgeObjectRelease(v79);
      swift_release_n(v64, 2);
      _os_log_impl((void *)&_mh_execute_header, logb, v126, "Analyzing full content SKIP {isPreviewSensitive: %{BOOL}d, senderIsMe: %{BOOL}d, askRequest.type: %s", (uint8_t *)v66, 0x18u);
      swift_arrayDestroy(v120, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v120, -1, -1);
      swift_slowDealloc(v66, -1, -1);

    }
    else
    {
      v88 = *(_QWORD *)(v0 + 272);

      swift_release_n(v88, 3);
    }
LABEL_14:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 400) + 16))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 392));
    v89 = *(_QWORD *)(v0 + 504);
    v90 = *(_QWORD *)(v0 + 512);
    v91 = *(_QWORD *)(v0 + 496);
    v92 = *(_QWORD *)(v0 + 472);
    v93 = *(_QWORD *)(v0 + 448);
    v95 = *(_QWORD *)(v0 + 416);
    v94 = *(_QWORD *)(v0 + 424);
    v96 = *(_QWORD *)(v0 + 408);
    v97 = *(_QWORD *)(v0 + 384);
    v116 = *(_QWORD *)(v0 + 360);
    v119 = *(_QWORD *)(v0 + 336);
    v121 = *(_QWORD *)(v0 + 312);
    v125 = *(_QWORD *)(v0 + 288);
    v127 = *(_QWORD *)(v0 + 280);
    swift_release(*(_QWORD *)(v0 + 528));
    swift_task_dealloc(v90);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v116);
    swift_task_dealloc(v119);
    swift_task_dealloc(v121);
    swift_task_dealloc(v125);
    swift_task_dealloc(v127);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v124 = (void (*)(uint64_t, uint64_t))v14;
  v26 = *(_QWORD *)(v0 + 424);
  v27 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 264);
  v29 = *(NSObject **)(*(_QWORD *)(v0 + 400) + 16);
  *(_QWORD *)(v0 + 568) = v29;
  log = v29;
  v30 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v29)(v26, v28, v27);
  *(_QWORD *)(v0 + 576) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Analyzing full content START", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }
  v34 = *(_QWORD *)(v0 + 512);
  v35 = *(_QWORD *)(v0 + 384);
  v98 = *(_QWORD *)(v0 + 360);
  v99 = *(_QWORD *)(v0 + 480);
  v102 = *(_QWORD *)(v0 + 392);
  v103 = *(_QWORD *)(v0 + 352);
  v36 = *(_QWORD *)(v0 + 336);
  v104 = *(_QWORD *)(v0 + 344);
  v106 = *(_QWORD *)(v0 + 328);
  v108 = *(_QWORD *)(v0 + 320);
  v109 = *(_QWORD *)(v0 + 368);
  v37 = *(_QWORD *)(v0 + 272);
  v101 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 256);
  v100 = (const char *)v38;

  sub_1003ABCA0(v38);
  v39 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(_QWORD *)(v0 + 584) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  v40 = v37 + v39;
  swift_beginAccess(v37 + v39, v0 + 160, 0, 0);
  sub_100244418(v40, v0 + 96);
  v41 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 128);
  v43 = sub_10023A834((_QWORD *)(v0 + 96), v41);
  CurrentValueSubject.value.getter(v43);
  sub_10047CBAC(v34, 0xD000000000000014, (void *)0x800000010061AE00, v35, v41, (uint64_t)&type metadata for Double, (uint64_t)&type metadata for Bool, v42, v98);
  v124(v34, v99);
  sub_10022E75C((_QWORD *)(v0 + 96));
  v44 = (int *)sub_100008384(&qword_1007B5298);
  *(_QWORD *)(v0 + 592) = v44;
  v45 = v44[12];
  v46 = v44[16];
  v47 = v36 + v44[20];
  ((void (*)(uint64_t, uint64_t, uint64_t))log)(v36, v101, v102);
  *(_QWORD *)(v36 + v45) = v100;
  *(_QWORD *)(v36 + v46) = 0;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16);
  *(_QWORD *)(v0 + 600) = v48;
  v48(v47, v98, v104);
  *(_DWORD *)(v0 + 768) = enum case for SFAirDropReceive.Transfer.State.analyzingFullContent(_:);
  v49 = *(void (**)(uint64_t))(v106 + 104);
  *(_QWORD *)(v0 + 608) = v49;
  v49(v36);
  swift_bridgeObjectRetain(v100);
  sub_10053D3FC(v36, v34);
  v50 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
  *(_QWORD *)(v0 + 616) = v50;
  v50(v36, v108);
  v124(v34, v99);
  SFProgressTask.makeAsyncIterator()(v109);
  v51 = static AirDropActor.shared;
  v52 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v53 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 624) = v53;
  *v53 = v0;
  v53[1] = sub_10040E9F0;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 184, v51, v52, *(_QWORD *)(v0 + 296), v0 + 200);
}

uint64_t sub_10040E9F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 624));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 520);
    sub_10031B7F4(*(_QWORD *)(v2 + 536), *(_QWORD *)(v2 + 544), *(_BYTE *)(v2 + 195));
    v4 = sub_100410700;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 520);
    v4 = sub_10040EA68;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10040EA68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  unsigned int v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  if ((*(_BYTE *)(v0 + 192) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 632) = v2;
    *v2 = v0;
    v2[1] = sub_10040EC78;
    return SFProgressTask.finalValue.getter(v0 + 193, *(_QWORD *)(v0 + 368));
  }
  else
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 616);
    v17 = *(_DWORD *)(v0 + 768);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 600);
    v4 = *(int **)(v0 + 592);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 608);
    v19 = *(_QWORD *)(v0 + 512);
    v20 = *(_QWORD *)(v0 + 480);
    v5 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 320);
    v9 = *(const char **)(v0 + 256);
    v10 = v4[12];
    v11 = v7 + v4[20];
    v12 = v4[16];
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 568))(v7, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 392));
    *(_QWORD *)(v7 + v10) = v9;
    *(_QWORD *)(v7 + v12) = v1;
    v16(v11, v5, v6);
    v18(v7, v17, v8);
    swift_bridgeObjectRetain(v9);
    sub_10053D3FC(v7, v19);
    v22(v7, v8);
    v21(v19, v20);
    v13 = static AirDropActor.shared;
    v14 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v15 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 624) = v15;
    *v15 = v0;
    v15[1] = sub_10040E9F0;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 184, v13, v14, *(_QWORD *)(v0 + 296), v0 + 200);
  }
}

uint64_t sub_10040EC78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 632);
  *(_QWORD *)(*v1 + 640) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 520);
    sub_10031B7F4(*(_QWORD *)(v2 + 536), *(_QWORD *)(v2 + 544), *(_BYTE *)(v2 + 195));
    v5 = sub_100410998;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 520);
    v5 = sub_10040ECF4;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_10040ECF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  const char *v43;
  const char *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  os_log_type_t type;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, _QWORD, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  Swift::String v109;

  v2 = *(unsigned __int8 *)(v1 + 193);
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v1 + 760) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 760, v1 + 764, v5 + 4);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Analyzing full content END {isSensitive: %{BOOL}d}", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 272);

  v7 = swift_beginAccess(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics, v1 + 136, 33, 0);
  SFAirDropReceive.Transfer.Metrics.sensitive.setter(v2, v7);
  swift_endAccess(v1 + 136);
  if ((_DWORD)v2)
  {
    v8 = *(_QWORD *)(v1 + 640);
    v9 = *(void (**)(char *, char *, uint64_t))(v1 + 504);
    v10 = *(_QWORD *)(v1 + 288);
    sub_100244418(*(_QWORD *)(v1 + 272) + *(_QWORD *)(v1 + 584), v1 + 56);
    v11 = sub_10023A834((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
    CurrentValueSubject.value.getter(v11);
    sub_10047EAC4(v9, v10);
    if (v8)
    {
      v12 = *(void (**)(uint64_t, uint64_t))(v1 + 560);
      v13 = *(_QWORD *)(v1 + 504);
      v14 = *(_QWORD *)(v1 + 480);
      v15 = *(_QWORD *)(v1 + 376);
      v16 = *(_QWORD *)(v1 + 360);
      v98 = *(_QWORD *)(v1 + 368);
      v103 = *(_QWORD *)(v1 + 384);
      v18 = *(_QWORD *)(v1 + 344);
      v17 = *(_QWORD *)(v1 + 352);
      sub_10031B7F4(*(_QWORD *)(v1 + 536), *(_QWORD *)(v1 + 544), *(_BYTE *)(v1 + 195));
      v12(v13, v14);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v20 = v8;
      v19(v103, v98);
      sub_10022E75C((_QWORD *)(v1 + 56));
      swift_errorRetain(v8);
      v21 = swift_errorRetain(v8);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(12, -1);
        v25 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v24 = 138412290;
        swift_errorRetain(v20);
        v26 = _swift_stdlib_bridgeErrorToNSError(v20);
        *(_QWORD *)(v1 + 208) = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 208, v1 + 216, v24 + 4);
        *v25 = v26;
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Analyzing full content END - Failure {%@}", v24, 0xCu);
        v27 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v25, 1, v27);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

      }
      else
      {

        swift_errorRelease(v8);
        v28 = swift_errorRelease(v8);
      }
      v70 = *(_QWORD *)(v1 + 528);
      v72 = *(_QWORD *)(v1 + 504);
      v71 = *(_QWORD *)(v1 + 512);
      v73 = *(_QWORD *)(v1 + 496);
      v78 = *(_QWORD *)(v1 + 472);
      v79 = *(_QWORD *)(v1 + 448);
      v74 = *(_QWORD *)(v1 + 424);
      v75 = *(_QWORD *)(v1 + 400);
      v81 = *(_QWORD *)(v1 + 416);
      v83 = *(_QWORD *)(v1 + 408);
      v76 = *(_QWORD *)(v1 + 392);
      v86 = *(_QWORD *)(v1 + 384);
      v89 = *(_QWORD *)(v1 + 360);
      v93 = *(_QWORD *)(v1 + 336);
      v97 = *(_QWORD *)(v1 + 312);
      v102 = *(_QWORD *)(v1 + 288);
      v107 = *(_QWORD *)(v1 + 280);
      swift_willThrow(v28);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      swift_release(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v78);
      swift_task_dealloc(v79);
      swift_task_dealloc(v74);
      swift_task_dealloc(v81);
      swift_task_dealloc(v83);
      swift_task_dealloc(v86);
      swift_task_dealloc(v89);
      swift_task_dealloc(v93);
      swift_task_dealloc(v97);
      swift_task_dealloc(v102);
      swift_task_dealloc(v107);
      return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
    }
    else
    {
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 568);
      v101 = *(void (**)(uint64_t, uint64_t))(v1 + 560);
      v106 = *(void (**)(uint64_t, uint64_t))(v1 + 616);
      v92 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 608);
      v96 = *(_QWORD *)(v1 + 512);
      v59 = *(_QWORD *)(v1 + 480);
      v60 = *(_QWORD *)(v1 + 392);
      v61 = *(_QWORD *)(v1 + 336);
      v62 = *(_QWORD *)(v1 + 320);
      v63 = *(_QWORD *)(v1 + 264);
      v85 = *(_QWORD *)(v1 + 288);
      v64 = *(const char **)(v1 + 256);
      v101(*(_QWORD *)(v1 + 504), v59);
      sub_10022E75C((_QWORD *)(v1 + 56));
      v65 = sub_100008384(&qword_1007B5290);
      *(_QWORD *)(v1 + 648) = v65;
      v66 = *(int *)(v65 + 48);
      v67 = v61 + *(int *)(v65 + 64);
      v58(v61, v63, v60);
      *(_QWORD *)(v61 + v66) = v64;
      v68 = sub_100008384(&qword_1007B5280);
      *(_QWORD *)(v1 + 656) = v68;
      v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
      *(_QWORD *)(v1 + 664) = v69;
      v69(v67, v85, v68);
      v92(v61, enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:), v62);
      swift_bridgeObjectRetain(v64);
      sub_10053D3FC(v61, v96);
      v106(v61, v62);
      v101(v96, v59);
      return swift_task_switch(sub_10040F55C, 0, 0);
    }
  }
  else
  {
    v29 = sub_10031B7DC(*(_QWORD *)(v1 + 536), *(_QWORD *)(v1 + 544), *(_BYTE *)(v1 + 195));
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    v32 = os_log_type_enabled(v30, v31);
    v33 = *(_BYTE *)(v1 + 195);
    v34 = *(void **)(v1 + 544);
    v35 = *(_QWORD *)(v1 + 536);
    v36 = *(_QWORD *)(v1 + 424);
    v37 = *(_QWORD *)(v1 + 384);
    v94 = *(_QWORD *)(v1 + 392);
    v99 = *(_QWORD *)(v1 + 368);
    v104 = *(_QWORD *)(v1 + 400);
    v38 = *(_QWORD *)(v1 + 360);
    v39 = *(_QWORD *)(v1 + 344);
    if (v32)
    {
      v84 = *(_QWORD *)(v1 + 344);
      v87 = *(_QWORD *)(v1 + 376);
      v80 = *(_QWORD *)(v1 + 352);
      v82 = *(_QWORD *)(v1 + 360);
      v90 = *(_QWORD *)(v1 + 424);
      v40 = swift_slowAlloc(18, -1);
      type = v31;
      v41 = swift_slowAlloc(32, -1);
      v108 = v41;
      *(_DWORD *)v40 = 136315394;
      sub_10031B7DC(v35, (uint64_t)v34, v33);
      v109._countAndFlagsBits = v35;
      v109._object = v34;
      v42 = sub_1003ABB94(v109, v33);
      v44 = v43;
      sub_10031B7F4(v35, (uint64_t)v34, v33);
      *(_QWORD *)(v1 + 232) = sub_100228BD8(v42, (unint64_t)v44, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 232, v1 + 240, v40 + 4);
      swift_bridgeObjectRelease(v44);
      sub_10031B7F4(v35, (uint64_t)v34, v33);
      sub_10031B7F4(v35, (uint64_t)v34, v33);
      *(_WORD *)(v40 + 12) = 1024;
      *(_DWORD *)(v1 + 196) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 196, v1 + 200, v40 + 14);
      _os_log_impl((void *)&_mh_execute_header, v30, type, "Sensitive preview step SKIP {userSafetyMode: %s, isSensitive: %{BOOL}d}", (uint8_t *)v40, 0x12u);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v84);
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v37, v99);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v90, v94);
    }
    else
    {
      v45 = *(_QWORD *)(v1 + 352);
      v46 = v30;
      v47 = *(_QWORD *)(v1 + 376);

      sub_10031B7F4(v35, (uint64_t)v34, v33);
      sub_10031B7F4(v35, (uint64_t)v34, v33);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v39);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v37, v99);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v36, v94);
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 568))(*(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 392));
    v48 = *(_QWORD *)(v1 + 504);
    v49 = *(_QWORD *)(v1 + 512);
    v50 = *(_QWORD *)(v1 + 496);
    v51 = *(_QWORD *)(v1 + 472);
    v52 = *(_QWORD *)(v1 + 448);
    v54 = *(_QWORD *)(v1 + 416);
    v53 = *(_QWORD *)(v1 + 424);
    v55 = *(_QWORD *)(v1 + 408);
    v56 = *(_QWORD *)(v1 + 384);
    v88 = *(_QWORD *)(v1 + 360);
    v91 = *(_QWORD *)(v1 + 336);
    v95 = *(_QWORD *)(v1 + 312);
    v100 = *(_QWORD *)(v1 + 288);
    v105 = *(_QWORD *)(v1 + 280);
    swift_release(*(_QWORD *)(v1 + 528));
    swift_task_dealloc(v49);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v88);
    swift_task_dealloc(v91);
    swift_task_dealloc(v95);
    swift_task_dealloc(v100);
    swift_task_dealloc(v105);
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  }
}

uint64_t sub_10040F55C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[36];
  v2 = swift_task_alloc(32);
  v0[84] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[85] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[86] = v4;
  *v4 = v0;
  v4[1] = sub_10040F604;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[52], &unk_1007C04B8, v2, sub_100424404, v3, 0, 0, v0[49]);
}

uint64_t sub_10040F604()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 688);
  *(_QWORD *)(*(_QWORD *)v1 + 696) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10040FE44;
    v5 = 0;
  }
  else
  {
    v6 = v2[85];
    v7 = v2[84];
    v8 = v2[65];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_10040F684;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10040F684()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  _BOOL4 v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  const char *v41;
  const char *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, _QWORD, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t typeb;
  os_log_type_t typec[8];
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  Swift::String v105;

  v1 = *(unsigned __int8 *)(v0 + 195);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v0 + 704) = v6;
  v6(v3, v4);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  *(_QWORD *)(v0 + 712) = v7;
  v7(v3, v2, v4);
  if (v1 == 2)
  {
    v8 = *(_QWORD *)(v0 + 696);
    v9 = *(_QWORD *)(v0 + 424);
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 272) + *(_QWORD *)(v0 + 584);
    sub_10031B7F4(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544), 2u);
    sub_100244418(v11, v0 + 16);
    v12 = sub_10023A834((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    CurrentValueSubject.value.getter(v12);
    sub_10047D8B4(v9, v10);
    if (v8)
    {
      v13 = v8;
      v15 = *(_QWORD *)(v0 + 376);
      v14 = *(_QWORD *)(v0 + 384);
      v17 = *(_QWORD *)(v0 + 360);
      v16 = *(_QWORD *)(v0 + 368);
      v18 = *(_QWORD *)(v0 + 344);
      v19 = *(_QWORD *)(v0 + 352);
      v20 = *(_QWORD *)(v0 + 288);
      (*(void (**)(_QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 480));
      sub_10000D0F0(v20, &qword_1007B6BF0);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      sub_10022E75C((_QWORD *)(v0 + 16));
      swift_errorRetain(v13);
      v21 = swift_errorRetain(v13);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(12, -1);
        v25 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v24 = 138412290;
        swift_errorRetain(v13);
        v26 = _swift_stdlib_bridgeErrorToNSError(v13);
        *(_QWORD *)(v0 + 208) = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v24 + 4);
        *v25 = v26;
        swift_errorRelease(v13);
        swift_errorRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Analyzing full content END - Failure {%@}", v24, 0xCu);
        v27 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v25, 1, v27);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

      }
      else
      {

        swift_errorRelease(v13);
        v28 = swift_errorRelease(v13);
      }
      v65 = *(_QWORD *)(v0 + 528);
      v67 = *(_QWORD *)(v0 + 504);
      v66 = *(_QWORD *)(v0 + 512);
      v68 = *(_QWORD *)(v0 + 496);
      v72 = *(_QWORD *)(v0 + 472);
      v75 = *(_QWORD *)(v0 + 448);
      v69 = *(_QWORD *)(v0 + 424);
      v70 = *(_QWORD *)(v0 + 400);
      v78 = *(_QWORD *)(v0 + 416);
      v81 = *(_QWORD *)(v0 + 408);
      v71 = *(_QWORD *)(v0 + 392);
      v83 = *(_QWORD *)(v0 + 384);
      v87 = *(_QWORD *)(v0 + 360);
      v91 = *(_QWORD *)(v0 + 336);
      *(_QWORD *)typec = *(_QWORD *)(v0 + 312);
      v99 = *(_QWORD *)(v0 + 288);
      v103 = *(_QWORD *)(v0 + 280);
      swift_willThrow(v28);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
      swift_release(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v72);
      swift_task_dealloc(v75);
      swift_task_dealloc(v69);
      swift_task_dealloc(v78);
      swift_task_dealloc(v81);
      swift_task_dealloc(v83);
      swift_task_dealloc(v87);
      swift_task_dealloc(v91);
      swift_task_dealloc(*(_QWORD *)typec);
      swift_task_dealloc(v99);
      swift_task_dealloc(v103);
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 656);
      v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 664);
      v56 = *(_QWORD *)(v0 + 648);
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 568);
      v98 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
      v102 = *(void (**)(uint64_t, uint64_t))(v0 + 616);
      typeb = *(_QWORD *)(v0 + 512);
      v86 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 608);
      v90 = *(_QWORD *)(v0 + 480);
      v57 = *(_QWORD *)(v0 + 424);
      v58 = *(_QWORD *)(v0 + 392);
      v59 = *(_QWORD *)(v0 + 336);
      v60 = *(_QWORD *)(v0 + 320);
      v61 = *(_QWORD *)(v0 + 280);
      v62 = *(const char **)(v0 + 256);
      ((void (*)(_QWORD))v98)(*(_QWORD *)(v0 + 496));
      sub_10022E75C((_QWORD *)(v0 + 16));
      v63 = *(int *)(v56 + 48);
      v64 = v59 + *(int *)(v56 + 64);
      v74(v59, v57, v58);
      *(_QWORD *)(v59 + v63) = v62;
      v80(v64, v61, v77);
      v86(v59, enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:), v60);
      swift_bridgeObjectRetain(v62);
      sub_10053D3FC(v59, typeb);
      v102(v59, v60);
      v98(typeb, v90);
      return swift_task_switch(sub_100410144, 0, 0);
    }
  }
  else
  {
    v29 = sub_10031B7DC(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544), *(_BYTE *)(v0 + 195));
    v30 = Logger.logObject.getter(v29);
    type = static os_log_type_t.default.getter(v30);
    v31 = os_log_type_enabled(v30, type);
    v32 = *(_BYTE *)(v0 + 195);
    v33 = *(void **)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 536);
    v35 = *(_QWORD *)(v0 + 384);
    v96 = *(_QWORD *)(v0 + 376);
    v100 = *(_QWORD *)(v0 + 368);
    v36 = *(_QWORD *)(v0 + 344);
    v37 = *(_QWORD *)(v0 + 288);
    if (v31)
    {
      v82 = *(_QWORD *)(v0 + 360);
      v84 = *(_QWORD *)(v0 + 344);
      v76 = *(_QWORD *)(v0 + 288);
      v79 = *(_QWORD *)(v0 + 352);
      v88 = *(_QWORD *)(v0 + 384);
      v38 = swift_slowAlloc(18, -1);
      v73 = swift_slowAlloc(32, -1);
      v104 = v73;
      *(_DWORD *)v38 = 136315394;
      sub_10031B7DC(v34, (uint64_t)v33, v32);
      v105._countAndFlagsBits = v34;
      v105._object = v33;
      v39 = sub_1003ABB94(v105, v32);
      v40 = v30;
      v42 = v41;
      sub_10031B7F4(v34, (uint64_t)v33, v32);
      *(_QWORD *)(v0 + 216) = sub_100228BD8(v39, (unint64_t)v42, &v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v38 + 4);
      swift_bridgeObjectRelease(v42);
      sub_10031B7F4(v34, (uint64_t)v33, v32);
      sub_10031B7F4(v34, (uint64_t)v33, v32);
      *(_WORD *)(v38 + 12) = 1024;
      *(_DWORD *)(v0 + 752) = 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 752, v0 + 756, v38 + 14);
      _os_log_impl((void *)&_mh_execute_header, v40, type, "Intervention step SKIP {userSafetyMode: %s, isSensitive: %{BOOL}d}", (uint8_t *)v38, 0x12u);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      sub_10000D0F0(v76, &qword_1007B6BF0);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v84);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v88, v100);
    }
    else
    {
      v43 = *(_QWORD *)(v0 + 360);
      v44 = v30;
      v45 = *(_QWORD *)(v0 + 352);

      sub_10031B7F4(v34, (uint64_t)v33, v32);
      sub_10031B7F4(v34, (uint64_t)v33, v32);
      sub_10000D0F0(v37, &qword_1007B6BF0);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v36);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v35, v100);
    }
    v7(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 392));
    v46 = *(_QWORD *)(v0 + 504);
    v47 = *(_QWORD *)(v0 + 512);
    v48 = *(_QWORD *)(v0 + 496);
    v49 = *(_QWORD *)(v0 + 472);
    v50 = *(_QWORD *)(v0 + 448);
    v52 = *(_QWORD *)(v0 + 416);
    v51 = *(_QWORD *)(v0 + 424);
    v53 = *(_QWORD *)(v0 + 408);
    v54 = *(_QWORD *)(v0 + 384);
    v85 = *(_QWORD *)(v0 + 360);
    v89 = *(_QWORD *)(v0 + 336);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 312);
    v97 = *(_QWORD *)(v0 + 288);
    v101 = *(_QWORD *)(v0 + 280);
    swift_release(*(_QWORD *)(v0 + 528));
    swift_task_dealloc(v47);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v85);
    swift_task_dealloc(v89);
    swift_task_dealloc(*(_QWORD *)typea);
    swift_task_dealloc(v97);
    swift_task_dealloc(v101);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_10040FE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 520);
  sub_10031B7F4(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544), *(_BYTE *)(v0 + 195));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10040FEAC, v3, 0);
}

uint64_t sub_10040FEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  sub_10000D0F0(*(_QWORD *)(v0 + 288), &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 696);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain(v7);
    v13 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 208) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v11 + 4);
    *v12 = v13;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Analyzing full content END - Failure {%@}", v11, 0xCu);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_errorRelease(v7);
    v15 = swift_errorRelease(v7);
  }
  v16 = *(_QWORD *)(v0 + 528);
  v18 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 496);
  v24 = *(_QWORD *)(v0 + 472);
  v25 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 424);
  v21 = *(_QWORD *)(v0 + 400);
  v26 = *(_QWORD *)(v0 + 416);
  v27 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 384);
  v29 = *(_QWORD *)(v0 + 360);
  v30 = *(_QWORD *)(v0 + 336);
  v31 = *(_QWORD *)(v0 + 312);
  v32 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 280);
  swift_willThrow(v15);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  swift_release(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v20);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100410144()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[35];
  v2 = swift_task_alloc(32);
  v0[90] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[91] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[92] = v4;
  *v4 = v0;
  v4[1] = sub_1004101EC;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[51], &unk_1007C04C0, v2, sub_100424404, v3, 0, 0, v0[49]);
}

uint64_t sub_1004101EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 736);
  *(_QWORD *)(*(_QWORD *)v1 + 744) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10041040C;
    v5 = 0;
  }
  else
  {
    v6 = v2[91];
    v7 = v2[90];
    v8 = (void (*)(uint64_t, uint64_t))v2[88];
    v9 = v2[65];
    v10 = v2[51];
    v11 = v2[49];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v8(v10, v11);
    v4 = sub_100410294;
    v5 = v9;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100410294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v23 = *(_QWORD *)(v0 + 424);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 712);
  v1 = *(_QWORD *)(v0 + 384);
  v21 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 248);
  sub_10000D0F0(*(_QWORD *)(v0 + 280), &qword_1007B6BF0);
  sub_10000D0F0(v7, &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v25(v8, v23, v21);
  v9 = *(_QWORD *)(v0 + 504);
  v10 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 472);
  v13 = *(_QWORD *)(v0 + 448);
  v15 = *(_QWORD *)(v0 + 416);
  v14 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 408);
  v17 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 360);
  v20 = *(_QWORD *)(v0 + 336);
  v22 = *(_QWORD *)(v0 + 312);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_10041040C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[90];
  v2 = v0[65];
  swift_task_dealloc(v0[91]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100410458, v2, 0);
}

uint64_t sub_100410458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 288);
  sub_10000D0F0(*(_QWORD *)(v0 + 280), &qword_1007B6BF0);
  sub_10000D0F0(v7, &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v8 = *(_QWORD *)(v0 + 744);
  swift_errorRetain(v8);
  v9 = swift_errorRetain(v8);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v8);
    v14 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 208) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Analyzing full content END - Failure {%@}", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_errorRelease(v8);
    v16 = swift_errorRelease(v8);
  }
  v17 = *(_QWORD *)(v0 + 528);
  v19 = *(_QWORD *)(v0 + 504);
  v18 = *(_QWORD *)(v0 + 512);
  v20 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 472);
  v26 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 424);
  v22 = *(_QWORD *)(v0 + 400);
  v27 = *(_QWORD *)(v0 + 416);
  v28 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 360);
  v31 = *(_QWORD *)(v0 + 336);
  v32 = *(_QWORD *)(v0 + 312);
  v33 = *(_QWORD *)(v0 + 288);
  v34 = *(_QWORD *)(v0 + 280);
  swift_willThrow(v16);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_release(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v21);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100410700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 200);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain(v7);
    v13 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 208) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v11 + 4);
    *v12 = v13;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Analyzing full content END - Failure {%@}", v11, 0xCu);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_errorRelease(v7);
    v15 = swift_errorRelease(v7);
  }
  v16 = *(_QWORD *)(v0 + 528);
  v18 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 496);
  v24 = *(_QWORD *)(v0 + 472);
  v25 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 424);
  v21 = *(_QWORD *)(v0 + 400);
  v26 = *(_QWORD *)(v0 + 416);
  v27 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 384);
  v29 = *(_QWORD *)(v0 + 360);
  v30 = *(_QWORD *)(v0 + 336);
  v31 = *(_QWORD *)(v0 + 312);
  v32 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 280);
  swift_willThrow(v15);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  swift_release(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v20);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100410998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 368);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 640);
  swift_errorRetain(v4);
  v5 = swift_errorRetain(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v4);
    v10 = _swift_stdlib_bridgeErrorToNSError(v4);
    *(_QWORD *)(v0 + 208) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Analyzing full content END - Failure {%@}", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_errorRelease(v4);
    v12 = swift_errorRelease(v4);
  }
  v13 = *(_QWORD *)(v0 + 528);
  v15 = *(_QWORD *)(v0 + 504);
  v14 = *(_QWORD *)(v0 + 512);
  v16 = *(_QWORD *)(v0 + 496);
  v21 = *(_QWORD *)(v0 + 472);
  v22 = *(_QWORD *)(v0 + 448);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 400);
  v23 = *(_QWORD *)(v0 + 416);
  v24 = *(_QWORD *)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 384);
  v26 = *(_QWORD *)(v0 + 360);
  v27 = *(_QWORD *)(v0 + 336);
  v28 = *(_QWORD *)(v0 + 312);
  v29 = *(_QWORD *)(v0 + 288);
  v30 = *(_QWORD *)(v0 + 280);
  swift_willThrow(v12);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_release(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v17);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100410C18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v8 + 632) = v7;
  *(_QWORD *)(v8 + 624) = a6;
  *(_QWORD *)(v8 + 616) = a5;
  *(_QWORD *)(v8 + 608) = a4;
  *(double *)(v8 + 600) = a7;
  *(_BYTE *)(v8 + 1159) = a3;
  *(_QWORD *)(v8 + 592) = a2;
  *(_QWORD *)(v8 + 584) = a1;
  v9 = type metadata accessor for SFAirDropReceive.Failure(0);
  *(_QWORD *)(v8 + 640) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 648) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 656) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 664) = swift_task_alloc(v11);
  v12 = type metadata accessor for SFPlatform(0);
  *(_QWORD *)(v8 + 672) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 680) = v13;
  *(_QWORD *)(v8 + 688) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007C03A8);
  *(_QWORD *)(v8 + 696) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  *(_QWORD *)(v8 + 704) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 712) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 720) = swift_task_alloc(v17);
  *(_QWORD *)(v8 + 728) = swift_task_alloc(v17);
  v18 = sub_100008384(&qword_1007B6BF0);
  *(_QWORD *)(v8 + 736) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008384(&qword_1007B6BE8);
  *(_QWORD *)(v8 + 744) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v8 + 752) = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 760) = swift_task_alloc(v21);
  *(_QWORD *)(v8 + 768) = swift_task_alloc(v21);
  v22 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  *(_QWORD *)(v8 + 776) = v22;
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v8 + 784) = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 792) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 800) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 808) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 816) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 824) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 832) = swift_task_alloc(v24);
  *(_QWORD *)(v8 + 840) = swift_task_alloc(v24);
  v25 = type metadata accessor for SFAirDrop.TransferType(0);
  *(_QWORD *)(v8 + 848) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v8 + 856) = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 864) = swift_task_alloc(v27);
  *(_QWORD *)(v8 + 872) = swift_task_alloc(v27);
  v28 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  *(_QWORD *)(v8 + 880) = v28;
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v8 + 888) = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 896) = swift_task_alloc(v30);
  *(_QWORD *)(v8 + 904) = swift_task_alloc(v30);
  v31 = type metadata accessor for SFAirDropReceive.Transfer(0);
  *(_QWORD *)(v8 + 912) = v31;
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v8 + 920) = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 928) = swift_task_alloc(v33);
  *(_QWORD *)(v8 + 936) = swift_task_alloc(v33);
  *(_QWORD *)(v8 + 944) = swift_task_alloc(v33);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v34 = static AirDropActor.shared;
  *(_QWORD *)(v8 + 952) = static AirDropActor.shared;
  return swift_task_switch(sub_100410EE4, v34, 0);
}

uint64_t sub_100410EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t DynamicType;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  const char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v105;
  uint64_t v106;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  _BOOL4 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  const char *v144;
  __n128 v145;
  void (*v146)(uint64_t, uint64_t, __n128);
  uint64_t v147;
  _QWORD *v148;
  const char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  const char *v157;
  const char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  void (*v162)(uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  const char *v166;
  const char *v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t, uint64_t);
  double v175;
  _QWORD *v176;
  uint64_t v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(uint64_t, uint64_t, uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  void (*v207)(uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225[2];

  v2 = *(_QWORD *)(v1 + 944);
  v3 = *(_QWORD *)(v1 + 936);
  v4 = *(_QWORD *)(v1 + 920);
  v5 = *(_QWORD *)(v1 + 912);
  v6 = *(_QWORD *)(v1 + 904);
  v7 = *(_QWORD *)(v1 + 896);
  v190 = v1 + 528;
  v194 = *(_QWORD *)(v1 + 888);
  v199 = *(_QWORD *)(v1 + 880);
  v204 = v5;
  v8 = *(_QWORD *)(v1 + 872);
  v219 = *(_QWORD *)(v1 + 864);
  v210 = *(_QWORD *)(v1 + 856);
  v213 = *(_QWORD *)(v1 + 848);
  *(_QWORD *)(v1 + 960) = *(_QWORD *)(*(_QWORD *)(v1 + 632)
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v9 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v9);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v1 + 968) = v10;
  v11 = v10(v2, v5);
  SFAirDropReceive.AskRequest.type.getter(v11);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v194 + 8);
  v13 = v6;
  v14 = v10;
  v15 = v12(v13, v199);
  v195 = SFAirDrop.TransferType.isPeerPayment.getter(v15);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v210 + 8);
  v17 = v16(v8, v213);
  v18 = CurrentValueSubject.value.getter(v17);
  SFAirDropReceive.Transfer.askRequest.getter(v18);
  v19 = v10(v3, v204);
  SFAirDropReceive.AskRequest.type.getter(v19);
  v20 = v12(v7, v199);
  v21 = SFAirDrop.TransferType.isLinks.getter(v20);
  v22 = v16(v219, v213);
  if ((v21 & 1) == 0)
  {
    v23 = (void (*)(uint64_t, uint64_t))v16;
    v24 = *(_QWORD *)(v1 + 944);
    v25 = v12;
    v26 = v14;
    v27 = *(_QWORD *)(v1 + 912);
    v28 = *(_QWORD *)(v1 + 904);
    v29 = *(_QWORD *)(v1 + 880);
    v30 = *(_QWORD *)(v1 + 872);
    v220 = *(_QWORD *)(v1 + 848);
    v31 = CurrentValueSubject.value.getter(v22);
    SFAirDropReceive.Transfer.askRequest.getter(v31);
    v32 = v24;
    v33 = v23;
    v34 = v26(v32, v27);
    SFAirDropReceive.AskRequest.type.getter(v34);
    v35 = v25(v28, v29);
    v36 = SFAirDrop.TransferType.isFiles.getter(v35);
    v23(v30, v220);
    if (((v36 | v195) & 1) == 0)
    {
      v82 = swift_retain_n(*(_QWORD *)(v1 + 632), 2);
      v83 = Logger.logObject.getter(v82);
      v84 = static os_log_type_t.default.getter(v83);
      if (os_log_type_enabled(v83, v84))
      {
        v85 = *(_QWORD *)(v1 + 944);
        v181 = *(_QWORD *)(v1 + 912);
        v86 = *(_QWORD *)(v1 + 904);
        v184 = *(_QWORD *)(v1 + 880);
        v186 = (void (*)(uint64_t, uint64_t))v25;
        v87 = *(_QWORD *)(v1 + 872);
        v201 = *(_QWORD *)(v1 + 848);
        v216 = *(_QWORD *)(v1 + 632);
        v88 = (uint8_t *)swift_slowAlloc(12, -1);
        v222 = swift_slowAlloc(32, -1);
        v225[0] = v222;
        *(_DWORD *)v88 = 136315138;
        v89 = CurrentValueSubject.value.getter(v222);
        SFAirDropReceive.Transfer.askRequest.getter(v89);
        v90 = v26(v85, v181);
        SFAirDropReceive.AskRequest.type.getter(v90);
        v186(v86, v184);
        v91 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        v92 = dispatch thunk of CustomStringConvertible.description.getter(v201, v91);
        v94 = v93;
        v33(v87, v201);
        *(_QWORD *)(v1 + 520) = sub_100228BD8(v92, (unint64_t)v94, v225);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 520, v190, v88 + 4);
        swift_bridgeObjectRelease(v94);
        swift_release_n(v216, 2);
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Ask open/move SKIP. {type: %s}", v88, 0xCu);
        swift_arrayDestroy(v222, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v222, -1, -1);
        swift_slowDealloc(v88, -1, -1);

        goto LABEL_21;
      }
      v106 = *(_QWORD *)(v1 + 632);

      v105 = v106;
LABEL_20:
      swift_release_n(v105, 2);
      goto LABEL_21;
    }
  }
  v37 = *(_QWORD *)(v1 + 632);
  v38 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(_QWORD *)(v1 + 976) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  v39 = v37 + v38;
  swift_beginAccess(v37 + v38, v1 + 456, 0, 0);
  sub_100244418(v39, v1 + 96);
  v40 = sub_100008384(&qword_1007C5E20);
  *(_QWORD *)(v1 + 984) = v40;
  v41 = sub_100008384(&qword_1007B6BF8);
  if (!swift_dynamicCast(v1 + 176, v1 + 96, v40, v41, 6))
  {
    v66 = *(_QWORD *)(v1 + 632);
    *(_OWORD *)(v1 + 176) = 0u;
    *(_OWORD *)(v1 + 192) = 0u;
    *(_QWORD *)(v1 + 208) = 0;
    sub_10000D0F0(v1 + 176, &qword_1007B6C00);
    v67 = swift_retain_n(v66, 2);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter(v68);
    v70 = os_log_type_enabled(v68, v69);
    v71 = *(_QWORD *)(v1 + 632);
    if (v70)
    {
      v72 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = swift_slowAlloc(32, -1);
      v225[0] = v73;
      *(_DWORD *)v72 = 136315138;
      sub_100244418(v39, v1 + 216);
      v74 = *(_QWORD *)(v1 + 240);
      v75 = sub_10023A834((_QWORD *)(v1 + 216), v74);
      DynamicType = swift_getDynamicType(v75, v74, 1);
      v77 = *(_QWORD *)(v1 + 248);
      sub_10022E75C((_QWORD *)(v1 + 216));
      *(_QWORD *)(v1 + 504) = DynamicType;
      *(_QWORD *)(v1 + 512) = v77;
      v78 = sub_100008384(&qword_1007B6C08);
      v79 = String.init<A>(describing:)(v1 + 504, v78);
      v81 = (const char *)v80;
      *(_QWORD *)(v1 + 528) = sub_100228BD8(v79, v80, v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v190, v1 + 536, v72 + 4);
      swift_bridgeObjectRelease(v81);
      swift_release_n(v71, 2);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Ask open/move SKIP. {handler: %s}", v72, 0xCu);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v72, -1, -1);

LABEL_21:
      v107 = *(const char **)(v1 + 616);
      v108 = *(_QWORD *)(v1 + 592);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 784) + 16))(*(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 624), *(_QWORD *)(v1 + 776));
      v109 = _s15ExchangeRequestVMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 1, 1, v109);
      swift_bridgeObjectRetain(v107);
      v178 = 0;
      goto LABEL_22;
    }

    v105 = v71;
    goto LABEL_20;
  }
  v42 = *(_QWORD *)(v1 + 624);
  v43 = *(double *)(v1 + 600);
  v214 = *(unsigned __int8 *)(v1 + 1159);
  v211 = (_QWORD *)(v1 + 56);
  sub_10026EE60((__int128 *)(v1 + 176), v1 + 56);
  *(_BYTE *)(v1 + 1156) = 0;
  sub_100244418(v39, v1 + 376);
  v44 = *(_QWORD *)(v1 + 400);
  v45 = *(_QWORD *)(v1 + 408);
  sub_10023A834((_QWORD *)(v1 + 376), v44);
  LOBYTE(v44) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
  *(_BYTE *)(v1 + 1160) = v44 & 1;
  sub_10022E75C((_QWORD *)(v1 + 376));
  sub_100244418(v39, v1 + 416);
  v46 = *(_QWORD *)(v1 + 440);
  v47 = *(_QWORD *)(v1 + 448);
  sub_10023A834((_QWORD *)(v1 + 416), v46);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
  v221 = (char *)(v1 + 1156);
  *(_BYTE *)(v1 + 1161) = v48 & 1;
  sub_10022E75C((_QWORD *)(v1 + 416));
  v49 = sub_100330BE4(v42, v43);
  v50 = *(_QWORD *)(v1 + 632);
  if ((v44 & 1) == 0 && ((v48 | v214) & v49 & 1) == 0)
  {
    v51 = v1 + 136;
    v52 = v1 + 296;
    v215 = (_QWORD *)(v1 + 336);
    v191 = v1 + 1136;
    v196 = v1 + 1132;
    v53 = Logger.logObject.getter(v49);
    v54 = static os_log_type_t.default.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v205 = v1 + 552;
      v55 = v1 + 1128;
      v56 = v1 + 1148;
      v57 = *(_QWORD *)(v1 + 600);
      v58 = v1;
      v59 = *(unsigned __int8 *)(v1 + 1159);
      v60 = swift_slowAlloc(30, -1);
      *(_DWORD *)v60 = 67109888;
      *(_DWORD *)(v58 + 1128) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v55, v196, v60 + 4);
      *(_WORD *)(v60 + 8) = 1024;
      *(_DWORD *)(v58 + 1148) = v48 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, v58 + 1152, v60 + 10);
      *(_WORD *)(v60 + 14) = 1024;
      *(_DWORD *)(v58 + 1136) = v59;
      v1 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v191, v58 + 1140, v60 + 16);
      *(_WORD *)(v60 + 20) = 2048;
      *(_QWORD *)(v58 + 552) = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v205, v58 + 560, v60 + 22);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Not auto-opening URLs {shouldEndAfterAutoOpen: %{BOOL}d, supportsAutoOpen: %{BOOL}d, requestedAutoOpen: %{BOOL}d, transferImportSeconds: %f}", (uint8_t *)v60, 0x1Eu);
      swift_slowDealloc(v60, -1, -1);
    }

    v61 = *(_QWORD *)(v1 + 984);
    sub_100244418(*(_QWORD *)(v1 + 632) + *(_QWORD *)(v1 + 976), v51);
    v62 = sub_100008384(&qword_1007C0438);
    if ((swift_dynamicCast(v52, v51, v61, v62, 6) & 1) != 0)
    {
      v63 = *(_QWORD *)(v1 + 616);
      sub_10026EE60((__int128 *)v52, v1 + 256);
      v64 = *(_QWORD *)(v1 + 280);
      v65 = *(_QWORD *)(v1 + 288);
      sub_10023A834((_QWORD *)(v1 + 256), v64);
      v200 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 8))(v63, v64, v65);
      sub_10022E75C((_QWORD *)(v1 + 256));
    }
    else
    {
      *(_QWORD *)(v52 + 32) = 0;
      *(_OWORD *)v52 = 0u;
      *(_OWORD *)(v52 + 16) = 0u;
      sub_10000D0F0(v52, &qword_1007C0440);
      v200 = 0;
    }
    v119 = v221[4];
    v207 = *(void (**)(uint64_t, uint64_t))(v1 + 968);
    v120 = *(_QWORD *)(v1 + 944);
    v121 = *(_QWORD *)(v1 + 912);
    sub_100244418(*(_QWORD *)(v1 + 632) + *(_QWORD *)(v1 + 976), (uint64_t)v215);
    v122 = *(_QWORD *)(v1 + 360);
    v123 = *(_QWORD *)(v1 + 368);
    v124 = sub_10023A834(v215, v122);
    CurrentValueSubject.value.getter(v124);
    v125 = sub_10047FDD4(v120, v119, *v221, v200 & 1, v122, v123);
    v207(v120, v121);
    sub_10022E75C(v215);
    if ((v125 & 1) != 0)
    {
      v126 = (_QWORD *)(v1 + 16);
      v208 = v1 + 480;
      v127 = *(_QWORD *)(v1 + 832);
      v128 = *(_QWORD *)(v1 + 784);
      v129 = *(_QWORD *)(v1 + 776);
      v130 = *(_QWORD *)(v1 + 624);
      *(_QWORD *)(v1 + 1040) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
      v131 = *v221;
      v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 16);
      *(_QWORD *)(v1 + 1048) = v132;
      v133 = v132(v127, v130, v129);
      v134 = Logger.logObject.getter(v133);
      v135 = static os_log_type_t.default.getter(v134);
      v136 = os_log_type_enabled(v134, v135);
      v137 = *(_QWORD *)(v1 + 832);
      v218 = (_QWORD *)(v1 + 16);
      v203 = (void (*)(uint64_t, uint64_t, uint64_t))v132;
      if (v136)
      {
        v138 = *(_QWORD *)(v1 + 824);
        v188 = *(_QWORD *)(v1 + 784);
        v139 = *(_QWORD *)(v1 + 776);
        v140 = swift_slowAlloc(18, -1);
        v141 = swift_slowAlloc(32, -1);
        v225[0] = v141;
        *(_DWORD *)v140 = 67109378;
        *(_DWORD *)(v1 + 1132) = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v196, v191, v140 + 4);
        *(_WORD *)(v140 + 8) = 2080;
        v132(v138, v137, v139);
        v142 = String.init<A>(describing:)(v138, v139);
        v144 = (const char *)v143;
        *(_QWORD *)(v1 + 576) = sub_100228BD8(v142, v143, v225);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 576, v1 + 584, v140 + 10);
        v145 = swift_bridgeObjectRelease(v144);
        v146 = *(void (**)(uint64_t, uint64_t, __n128))(v188 + 8);
        v147 = v139;
        v126 = (_QWORD *)(v1 + 16);
        v146(v137, v147, v145);
        _os_log_impl((void *)&_mh_execute_header, v134, v135, "Ask open/move START. {alreadyViewed: %{BOOL}d, destination: %s}", (uint8_t *)v140, 0x12u);
        swift_arrayDestroy(v141, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v141, -1, -1);
        swift_slowDealloc(v140, -1, -1);

      }
      else
      {
        v152 = v1;
        v153 = *(_QWORD *)(v1 + 784);
        v154 = *(_QWORD *)(v152 + 776);

        v146 = *(void (**)(uint64_t, uint64_t, __n128))(v153 + 8);
        v1 = v152;
        ((void (*)(uint64_t, uint64_t))v146)(v137, v154);
      }
      *(_QWORD *)(v1 + 1056) = v146;
      v155 = *(_QWORD *)(v1 + 928);
      v156 = *(_QWORD *)(v1 + 736);
      v157 = *(const char **)(v1 + 624);
      v158 = *(const char **)(v1 + 616);
      sub_100244418(*(_QWORD *)(v1 + 632) + *(_QWORD *)(v1 + 976), (uint64_t)v126);
      v159 = *(_QWORD *)(v1 + 40);
      v160 = *(_QWORD *)(v1 + 48);
      v161 = sub_10023A834(v126, v159);
      CurrentValueSubject.value.getter(v161);
      swift_beginAccess(v221, v208, 0, 0);
      sub_10047CEFC(v155, v158, *v221, v157, v159, v160, v156);
      v162 = *(void (**)(uint64_t, uint64_t))(v1 + 968);
      v224 = *(_QWORD *)(v1 + 944);
      v163 = *(_QWORD *)(v1 + 776);
      v164 = *(_QWORD *)(v1 + 728);
      v189 = *(_QWORD *)(v1 + 736);
      v193 = *(_QWORD *)(v1 + 712);
      v198 = *(_QWORD *)(v1 + 704);
      v209 = *(_QWORD *)(v1 + 912);
      v165 = *(_QWORD *)(v1 + 624);
      v166 = *(const char **)(v1 + 616);
      v167 = *(const char **)(v1 + 608);
      ((void (*)(_QWORD))v162)(*(_QWORD *)(v1 + 928));
      sub_10022E75C(v218);
      v168 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
      v169 = v168[12];
      v170 = v168[16];
      v171 = v164 + v168[20];
      v203(v164, v165, v163);
      *(_QWORD *)(v164 + v169) = v167;
      *(_QWORD *)(v164 + v170) = v166;
      v172 = sub_100008384(&qword_1007B5280);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v171, v189, v172);
      v173 = enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:);
      v174 = *(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 104);
      *(_QWORD *)(v1 + 1064) = v174;
      v174(v164, v173, v198);
      *(_QWORD *)&v175 = swift_bridgeObjectRetain(v167).n128_u64[0];
      swift_bridgeObjectRetain(v166, v175);
      sub_10053D3FC(v164, v224);
      v162(v224, v209);
      v176 = (_QWORD *)swift_task_alloc(dword_1007C044C);
      *(_QWORD *)(v1 + 1072) = v176;
      *v176 = v1;
      v176[1] = sub_100413184;
      return sub_100421AE8(*(_QWORD *)(v1 + 816), *(_QWORD *)(v1 + 696), *(_QWORD *)(v1 + 736), *(_QWORD *)(v1 + 624));
    }
    v149 = *(const char **)(v1 + 616);
    v150 = *(_QWORD *)(v1 + 592);
    v178 = *v221;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 784) + 16))(*(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 624), *(_QWORD *)(v1 + 776));
    v151 = _s15ExchangeRequestVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v150, 1, 1, v151);
    swift_bridgeObjectRetain(v149);
    sub_10022E75C(v211);
LABEL_22:
    v177 = *(_QWORD *)(v1 + 616);
    v110 = *(_QWORD *)(v1 + 936);
    v111 = *(_QWORD *)(v1 + 928);
    v112 = *(_QWORD *)(v1 + 904);
    v113 = *(_QWORD *)(v1 + 896);
    v114 = *(_QWORD *)(v1 + 872);
    v115 = *(_QWORD *)(v1 + 864);
    v116 = *(_QWORD *)(v1 + 840);
    v117 = *(_QWORD *)(v1 + 832);
    v118 = *(_QWORD *)(v1 + 824);
    v179 = *(_QWORD *)(v1 + 816);
    v180 = *(_QWORD *)(v1 + 808);
    v182 = *(_QWORD *)(v1 + 800);
    v183 = *(_QWORD *)(v1 + 792);
    v185 = *(_QWORD *)(v1 + 768);
    v187 = *(_QWORD *)(v1 + 760);
    v192 = *(_QWORD *)(v1 + 736);
    v197 = *(_QWORD *)(v1 + 728);
    v202 = *(_QWORD *)(v1 + 720);
    v206 = *(_QWORD *)(v1 + 696);
    v212 = *(_QWORD *)(v1 + 688);
    v217 = *(_QWORD *)(v1 + 664);
    v223 = *(_QWORD *)(v1 + 656);
    swift_task_dealloc(*(_QWORD *)(v1 + 944));
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v179);
    swift_task_dealloc(v180);
    swift_task_dealloc(v182);
    swift_task_dealloc(v183);
    swift_task_dealloc(v185);
    swift_task_dealloc(v187);
    swift_task_dealloc(v192);
    swift_task_dealloc(v197);
    swift_task_dealloc(v202);
    swift_task_dealloc(v206);
    swift_task_dealloc(v212);
    swift_task_dealloc(v217);
    swift_task_dealloc(v223);
    return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(v178, v177);
  }
  v95 = *(_QWORD *)(v50
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  v96 = *(_QWORD *)(v50
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10023A834((_QWORD *)(v50 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v95);
  v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v95, v96);
  if ((v97 & 1) != 0)
  {
    *(_QWORD *)(v1 + 992) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    v98 = Logger.logObject.getter(v97);
    v99 = static os_log_type_t.default.getter(v98);
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "Waiting for unlock before auto-opening...", v100, 2u);
      swift_slowDealloc(v100, -1, -1);
    }

    v101 = static AirDropActor.shared;
    v102 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v103 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 1000) = v103;
    *v103 = v1;
    v103[1] = sub_100412324;
    return withCheckedContinuation<A>(isolation:function:_:)(v103, v101, v102, 0xD00000000000005BLL, 0x800000010061ADA0, sub_1004239AC, *(_QWORD *)(v1 + 632), (char *)&type metadata for () + 8);
  }
  else
  {
    v148 = (_QWORD *)swift_task_alloc(dword_1007C0454);
    *(_QWORD *)(v1 + 1008) = v148;
    *v148 = v1;
    v148[1] = sub_100412458;
    return sub_1004211D4(*(_QWORD *)(v1 + 840), *(_QWORD *)(v1 + 608), *(_QWORD *)(v1 + 616), *(_QWORD *)(v1 + 624));
  }
}

uint64_t sub_100412324()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 952);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1000));
  return swift_task_switch(sub_10041237C, v1, 0);
}

uint64_t sub_10041237C(uint64_t a1)
{
  uint64_t *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t **v5;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Finished waiting for unlock", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = (uint64_t **)swift_task_alloc(dword_1007C0454);
  v1[126] = (uint64_t)v5;
  *v5 = v1;
  v5[1] = (uint64_t *)sub_100412458;
  return sub_1004211D4(v1[105], v1[76], v1[77], v1[78]);
}

uint64_t sub_100412458()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1008);
  *(_QWORD *)(*v1 + 1016) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100413BA4;
  else
    v4 = sub_1004124BC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 952), 0);
}

uint64_t sub_1004124BC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v1 + 1161);
    v5 = *(unsigned __int8 *)(v1 + 1160);
    v6 = *(_QWORD *)(v1 + 600);
    v7 = *(unsigned __int8 *)(v1 + 1159);
    v8 = swift_slowAlloc(30, -1);
    *(_DWORD *)v8 = 67109888;
    *(_DWORD *)(v1 + 1152) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1152, v1 + 1156, v8 + 4);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v1 + 1144) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1144, v1 + 1148, v8 + 10);
    *(_WORD *)(v8 + 14) = 1024;
    *(_DWORD *)(v1 + 1140) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1140, v1 + 1144, v8 + 16);
    *(_WORD *)(v8 + 20) = 2048;
    *(_QWORD *)(v1 + 568) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 568, v1 + 576, v8 + 22);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Opening autoOpen URLs {shouldEndAfterAutoOpen: %{BOOL}d, supportsAutoOpen: %{BOOL}d, requestedAutoOpen: %{BOOL}d, transferImportSeconds: %f}", (uint8_t *)v8, 0x1Eu);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v1 + 840);
  v10 = *(_QWORD *)(v1 + 616);

  v11 = *(_QWORD *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  sub_10023A834((_QWORD *)(v1 + 56), v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v10, v9, v11, v12);
  v13 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(_QWORD *)(v1 + 1024) = v13;
  *v13 = v1;
  v13[1] = sub_1004126A0;
  return SFProgressTask.finalValue.getter(v1 + 1158, *(_QWORD *)(v1 + 744));
}

uint64_t sub_1004126A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1024);
  *(_QWORD *)(*(_QWORD *)v1 + 1032) = v0;
  swift_task_dealloc(v3);
  v4 = v2[119];
  (*(void (**)(_QWORD, _QWORD))(v2[94] + 8))(v2[96], v2[93]);
  if (v0)
    v5 = sub_100414004;
  else
    v5 = sub_100412724;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100412724()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  __n128 v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(_QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  const char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  double v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  char v134;
  unsigned __int8 *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v1 = (char *)(v0 + 1156);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 8))(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 776));
  *(_BYTE *)(v0 + 1156) = *(_BYTE *)(v0 + 1158);
  v2 = *(_QWORD *)(v0 + 1032);
  v3 = *(_QWORD *)(v0 + 984);
  sub_100244418(*(_QWORD *)(v0 + 632) + *(_QWORD *)(v0 + 976), v0 + 136);
  v4 = sub_100008384(&qword_1007C0438);
  v128 = v2;
  v132 = (_QWORD *)(v0 + 56);
  if ((swift_dynamicCast(v0 + 296, v0 + 136, v3, v4, 6) & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 616);
    sub_10026EE60((__int128 *)(v0 + 296), v0 + 256);
    v6 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 288);
    sub_10023A834((_QWORD *)(v0 + 256), v6);
    v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v6, v7);
    sub_10022E75C((_QWORD *)(v0 + 256));
  }
  else
  {
    *(_QWORD *)(v0 + 328) = 0;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    sub_10000D0F0(v0 + 296, &qword_1007C0440);
    v134 = 0;
  }
  v8 = *(unsigned __int8 *)(v0 + 1160);
  v139 = *(void (**)(uint64_t, uint64_t))(v0 + 968);
  v9 = *(_QWORD *)(v0 + 944);
  v10 = *(_QWORD *)(v0 + 912);
  sub_100244418(*(_QWORD *)(v0 + 632) + *(_QWORD *)(v0 + 976), v0 + 336);
  v11 = *(_QWORD *)(v0 + 360);
  v12 = *(_QWORD *)(v0 + 368);
  v13 = sub_10023A834((_QWORD *)(v0 + 336), v11);
  CurrentValueSubject.value.getter(v13);
  v14 = sub_10047FDD4(v9, v8, *v1, v134 & 1, v11, v12);
  v139(v9, v10);
  sub_10022E75C((_QWORD *)(v0 + 336));
  if ((v14 & 1) == 0)
  {
    v37 = *(const char **)(v0 + 616);
    v38 = *(_QWORD *)(v0 + 592);
    v103 = *v1;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 16))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 776));
    v39 = _s15ExchangeRequestVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
    swift_bridgeObjectRetain(v37);
    sub_10022E75C(v132);
    v40 = *(_QWORD **)(v0 + 616);
LABEL_8:
    v101 = v40;
    v41 = *(_QWORD *)(v0 + 936);
    v42 = *(_QWORD *)(v0 + 928);
    v43 = *(_QWORD *)(v0 + 904);
    v44 = *(_QWORD *)(v0 + 896);
    v45 = *(_QWORD *)(v0 + 872);
    v46 = *(_QWORD *)(v0 + 864);
    v47 = *(_QWORD *)(v0 + 840);
    v48 = *(_QWORD *)(v0 + 832);
    v49 = *(_QWORD *)(v0 + 824);
    v105 = *(_QWORD *)(v0 + 816);
    v107 = *(_QWORD *)(v0 + 808);
    v109 = *(_QWORD *)(v0 + 800);
    v111 = *(_QWORD *)(v0 + 792);
    v113 = *(_QWORD *)(v0 + 768);
    v115 = *(_QWORD *)(v0 + 760);
    v119 = *(_QWORD *)(v0 + 736);
    v123 = *(_QWORD *)(v0 + 728);
    v125 = *(_QWORD *)(v0 + 720);
    v129 = *(_QWORD *)(v0 + 696);
    v133 = *(_QWORD *)(v0 + 688);
    v136 = *(_QWORD *)(v0 + 664);
    v141 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 944));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v105);
    swift_task_dealloc(v107);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v119);
    swift_task_dealloc(v123);
    swift_task_dealloc(v125);
    swift_task_dealloc(v129);
    swift_task_dealloc(v133);
    swift_task_dealloc(v136);
    swift_task_dealloc(v141);
    return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(v103, v101);
  }
  v15 = v0 + 16;
  v16 = *(_QWORD *)(v0 + 832);
  v17 = *(_QWORD *)(v0 + 784);
  v18 = *(_QWORD *)(v0 + 776);
  v19 = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(v0 + 1040) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v135 = (unsigned __int8 *)(v0 + 1156);
  v20 = *v1;
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v0 + 1048) = v21;
  v22 = v21(v16, v19, v18);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  v25 = os_log_type_enabled(v23, v24);
  v26 = *(_QWORD *)(v0 + 832);
  v140 = (_QWORD *)(v0 + 16);
  v122 = (void (*)(uint64_t, uint64_t, uint64_t))v21;
  if (v25)
  {
    v27 = *(_QWORD *)(v0 + 824);
    v118 = *(_QWORD *)(v0 + 784);
    v28 = *(_QWORD *)(v0 + 776);
    v29 = swift_slowAlloc(18, -1);
    v30 = swift_slowAlloc(32, -1);
    v143 = v30;
    *(_DWORD *)v29 = 67109378;
    *(_DWORD *)(v0 + 1132) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1132, v0 + 1136, v29 + 4);
    *(_WORD *)(v29 + 8) = 2080;
    v21(v27, v26, v28);
    v31 = String.init<A>(describing:)(v27, v28);
    v33 = (const char *)v32;
    *(_QWORD *)(v0 + 576) = sub_100228BD8(v31, v32, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 576, v0 + 584, v29 + 10);
    v34 = swift_bridgeObjectRelease(v33);
    v35 = *(void (**)(uint64_t, uint64_t, __n128))(v118 + 8);
    v35(v26, v28, v34);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Ask open/move START. {alreadyViewed: %{BOOL}d, destination: %s}", (uint8_t *)v29, 0x12u);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v36 = v29;
    v15 = v0 + 16;
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {
    v51 = *(_QWORD *)(v0 + 784);
    v52 = *(_QWORD *)(v0 + 776);

    v35 = *(void (**)(uint64_t, uint64_t, __n128))(v51 + 8);
    ((void (*)(uint64_t, uint64_t))v35)(v26, v52);
  }
  *(_QWORD *)(v0 + 1056) = v35;
  v53 = *(_QWORD *)(v0 + 928);
  v54 = *(_QWORD *)(v0 + 736);
  v55 = *(const char **)(v0 + 624);
  v56 = *(const char **)(v0 + 616);
  sub_100244418(*(_QWORD *)(v0 + 632) + *(_QWORD *)(v0 + 976), v15);
  v57 = (_QWORD *)v15;
  v58 = *(_QWORD *)(v0 + 40);
  v59 = *(_QWORD *)(v0 + 48);
  v60 = sub_10023A834(v57, v58);
  CurrentValueSubject.value.getter(v60);
  swift_beginAccess(v135, v0 + 480, 0, 0);
  sub_10047CEFC(v53, v56, *v135, v55, v58, v59, v54);
  v61 = *(void (**)(_QWORD))(v0 + 968);
  if (v128)
  {
    ((void (*)(_QWORD, _QWORD))v61)(*(_QWORD *)(v0 + 928), *(_QWORD *)(v0 + 912));
    sub_10022E75C(v140);
    v62 = *(_QWORD *)(v0 + 656);
    v63 = *(_QWORD *)(v0 + 640);
    *(_QWORD *)(v0 + 544) = v128;
    swift_errorRetain(v128);
    v64 = sub_100008384(&qword_1007B5A60);
    if ((swift_dynamicCast(v62, v0 + 544, v64, v63, 0) & 1) != 0)
    {
      v65 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
      if (v65 == enum case for SFAirDropReceive.Failure.declined(_:))
      {
        v66 = swift_errorRelease(v128);
        v67 = Logger.logObject.getter(v66);
        v68 = static os_log_type_t.default.getter(v67);
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v69 = 0;
          v70 = "Ask open/move END - Declined. Not opening or moving";
LABEL_19:
          _os_log_impl((void *)&_mh_execute_header, v67, v68, v70, v69, 2u);
          swift_slowDealloc(v69, -1, -1);
          goto LABEL_20;
        }
        goto LABEL_20;
      }
      if (v65 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
      {
        v85 = swift_errorRelease(v128);
        v67 = Logger.logObject.getter(v85);
        v68 = static os_log_type_t.default.getter(v67);
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v69 = 0;
          v70 = "Ask open/move END - Not handled. Not opening or moving";
          goto LABEL_19;
        }
LABEL_20:
        v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
        v87 = *(_QWORD *)(v0 + 776);
        v88 = *(_QWORD *)(v0 + 624);
        v89 = *(_QWORD *)(v0 + 592);
        v90 = *(_QWORD *)(v0 + 584);

        v86(v90, v88, v87);
        v91 = _s15ExchangeRequestVMa(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v89, 1, 1, v91);
        swift_errorRelease(*(_QWORD *)(v0 + 544));
        sub_10022E75C(v132);
        v103 = 0;
        v40 = _swiftEmptyArrayStorage;
        goto LABEL_8;
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
    }
    swift_errorRelease(*(_QWORD *)(v0 + 544));
    v92 = *(_QWORD *)(v0 + 944);
    v93 = *(_QWORD *)(v0 + 936);
    v94 = *(_QWORD *)(v0 + 928);
    v95 = *(_QWORD *)(v0 + 904);
    v96 = *(_QWORD *)(v0 + 896);
    v97 = *(_QWORD *)(v0 + 872);
    v98 = *(_QWORD *)(v0 + 864);
    v99 = *(_QWORD *)(v0 + 840);
    v100 = *(_QWORD *)(v0 + 832);
    v102 = *(_QWORD *)(v0 + 824);
    v104 = *(_QWORD *)(v0 + 816);
    v106 = *(_QWORD *)(v0 + 808);
    v108 = *(_QWORD *)(v0 + 800);
    v110 = *(_QWORD *)(v0 + 792);
    v112 = *(_QWORD *)(v0 + 768);
    v114 = *(_QWORD *)(v0 + 760);
    v117 = *(_QWORD *)(v0 + 736);
    v121 = *(_QWORD *)(v0 + 728);
    v124 = *(_QWORD *)(v0 + 720);
    v127 = *(_QWORD *)(v0 + 696);
    v131 = *(_QWORD *)(v0 + 688);
    v138 = *(_QWORD *)(v0 + 664);
    v142 = *(_QWORD *)(v0 + 656);
    sub_10022E75C(v132);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v102);
    swift_task_dealloc(v104);
    swift_task_dealloc(v106);
    swift_task_dealloc(v108);
    swift_task_dealloc(v110);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    swift_task_dealloc(v117);
    swift_task_dealloc(v121);
    swift_task_dealloc(v124);
    swift_task_dealloc(v127);
    swift_task_dealloc(v131);
    swift_task_dealloc(v138);
    swift_task_dealloc(v142);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v137 = *(_QWORD *)(v0 + 944);
    v71 = *(_QWORD *)(v0 + 776);
    v72 = *(_QWORD *)(v0 + 728);
    v116 = *(_QWORD *)(v0 + 736);
    v120 = *(_QWORD *)(v0 + 712);
    v126 = *(_QWORD *)(v0 + 704);
    v130 = *(_QWORD *)(v0 + 912);
    v73 = *(_QWORD *)(v0 + 624);
    v74 = *(const char **)(v0 + 616);
    v75 = *(const char **)(v0 + 608);
    v61(*(_QWORD *)(v0 + 928));
    sub_10022E75C(v140);
    v76 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
    v77 = v76[12];
    v78 = v76[16];
    v79 = v72 + v76[20];
    v122(v72, v73, v71);
    *(_QWORD *)(v72 + v77) = v75;
    *(_QWORD *)(v72 + v78) = v74;
    v80 = sub_100008384(&qword_1007B5280);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v79, v116, v80);
    v81 = enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:);
    v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 104);
    *(_QWORD *)(v0 + 1064) = v82;
    v82(v72, v81, v126);
    *(_QWORD *)&v83 = swift_bridgeObjectRetain(v75).n128_u64[0];
    swift_bridgeObjectRetain(v74, v83);
    sub_10053D3FC(v72, v137);
    ((void (*)(uint64_t, uint64_t))v61)(v137, v130);
    v84 = (_QWORD *)swift_task_alloc(dword_1007C044C);
    *(_QWORD *)(v0 + 1072) = v84;
    *v84 = v0;
    v84[1] = sub_100413184;
    return sub_100421AE8(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 624));
  }
}

uint64_t sub_100413184()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1072);
  *(_QWORD *)(*v1 + 1080) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100414478;
  else
    v4 = sub_1004131E8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 952), 0);
}

uint64_t sub_1004131E8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  __n128 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, __n128);
  uint64_t v20;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 1048))(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 776));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1056);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
    v4 = *(_QWORD *)(v0 + 824);
    v5 = *(_QWORD *)(v0 + 808);
    v6 = *(_QWORD *)(v0 + 776);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    v18(v4, v5, v6);
    v9 = String.init<A>(describing:)(v4, v6);
    v11 = (const char *)v10;
    *(_QWORD *)(v0 + 560) = sub_100228BD8(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568, v7 + 4);
    v12 = swift_bridgeObjectRelease(v11);
    v19(v5, v6, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask open/move END - accepted {destination: %s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1056);
    v14 = *(_QWORD *)(v0 + 808);
    v15 = *(_QWORD *)(v0 + 776);

    v13(v14, v15);
  }
  v16 = (_QWORD *)swift_task_alloc(dword_1007C0454);
  *(_QWORD *)(v0 + 1088) = v16;
  *v16 = v0;
  v16[1] = sub_1004133DC;
  return sub_1004211D4(*(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 816));
}

uint64_t sub_1004133DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1088);
  *(_QWORD *)(*v1 + 1096) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100414960;
  else
    v4 = sub_100413440;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 952), 0);
}

uint64_t sub_100413440()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  const char *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = (_BYTE *)(v0 + 1156);
  v2 = *(_QWORD *)(v0 + 792);
  v3 = *(_QWORD *)(v0 + 784);
  v4 = *(_QWORD *)(v0 + 776);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1048))(v2, *(_QWORD *)(v0 + 800), v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  if ((_DWORD)v5 == enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    v6 = *(uint64_t **)(v0 + 792);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 784) + 96))(v6, *(_QWORD *)(v0 + 776));
    v7 = *v6;
    v8 = (const char *)v6[1];
    if (v7 == 0xD000000000000034 && v8 == (const char *)0x80000001006133A0)
    {
      swift_bridgeObjectRelease((const char *)0x80000001006133A0);
      v9 = 0;
    }
    else
    {
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0xD000000000000034, 0x80000001006133A0, 0);
      swift_bridgeObjectRelease(v8);
      v9 = v10 ^ 1;
    }
  }
  else
  {
    if ((_DWORD)v5 != enum case for SFAirDropReceive.ItemDestination.noItem(_:))
    {
      v5 = (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 1056))(*(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 776));
      if (*v1 != 1)
      {
LABEL_14:
        v52 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1064);
        v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
        v57 = *(_QWORD *)(v0 + 944);
        v60 = *(_QWORD *)(v0 + 912);
        v62 = *(void (**)(uint64_t, uint64_t))(v0 + 968);
        v16 = *(_QWORD *)(v0 + 800);
        v17 = *(_QWORD *)(v0 + 776);
        v18 = *(_QWORD *)(v0 + 720);
        v19 = *(_QWORD *)(v0 + 704);
        v55 = *(_QWORD *)(v0 + 712);
        v20 = *(const char **)(v0 + 616);
        v21 = *(const char **)(v0 + 608);
        v22 = sub_100008384((uint64_t *)&unk_1007B5270);
        v23 = *(int *)(v22 + 48);
        v24 = *(int *)(v22 + 64);
        v15(v18, v16, v17);
        *(_QWORD *)(v18 + v23) = v21;
        *(_QWORD *)(v18 + v24) = v20;
        v52(v18, enum case for SFAirDropReceive.Transfer.State.opening(_:), v19);
        *(_QWORD *)&v25 = swift_bridgeObjectRetain(v21).n128_u64[0];
        swift_bridgeObjectRetain(v20, v25);
        sub_10053D3FC(v18, v57);
        v26 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        *(_QWORD *)(v0 + 1104) = v26;
        v26(v18, v19);
        v62(v57, v60);
        v27 = *(_QWORD *)(v0 + 80);
        v28 = *(_QWORD *)(v0 + 88);
        sub_10023A834((_QWORD *)(v0 + 56), v27);
        (*(void (**)(const char *, uint64_t, uint64_t, uint64_t))(v28 + 8))(v20, v16, v27, v28);
        v29 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
        *(_QWORD *)(v0 + 1112) = v29;
        *v29 = v0;
        v29[1] = sub_100413908;
        return SFProgressTask.finalValue.getter(v0 + 1157, *(_QWORD *)(v0 + 744));
      }
      v9 = 1;
LABEL_12:
      v11 = *(_QWORD *)(v0 + 688);
      v12 = *(_QWORD *)(v0 + 680);
      v13 = *(_QWORD *)(v0 + 672);
      static SFPlatform.macOS.getter(v5);
      v14 = static SFPlatform.isPlatform(_:)(v11);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      if ((v14 & 1) == 0)
        goto LABEL_15;
      goto LABEL_13;
    }
    v9 = 0;
  }
  if ((*v1 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  if ((v9 & 1) != 0)
    goto LABEL_14;
LABEL_15:
  v31 = *(_QWORD *)(v0 + 736);
  v32 = *(_QWORD *)(v0 + 728);
  v33 = *(_QWORD *)(v0 + 712);
  v34 = *(_QWORD *)(v0 + 704);
  (*(void (**)(_QWORD, _QWORD))(v0 + 1056))(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 776));
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  sub_10000D0F0(v31, &qword_1007B6BF0);
  v35 = *(_QWORD *)(v0 + 696);
  v36 = *(const char **)(v0 + 616);
  v37 = *(_QWORD *)(v0 + 592);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 32))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 776));
  sub_10022E718(v35, v37, &qword_1007C03A8);
  swift_bridgeObjectRetain(v36);
  sub_10022E75C((_QWORD *)(v0 + 56));
  v65 = *(_QWORD *)(v0 + 616);
  v38 = *(_QWORD *)(v0 + 936);
  v39 = *(_QWORD *)(v0 + 928);
  v40 = *(_QWORD *)(v0 + 904);
  v41 = *(_QWORD *)(v0 + 896);
  v42 = *(_QWORD *)(v0 + 872);
  v43 = *(_QWORD *)(v0 + 864);
  v44 = *(_QWORD *)(v0 + 840);
  v45 = *(_QWORD *)(v0 + 832);
  v46 = *(_QWORD *)(v0 + 824);
  v47 = *(_QWORD *)(v0 + 816);
  v48 = *(_QWORD *)(v0 + 808);
  v49 = *(_QWORD *)(v0 + 800);
  v50 = *(_QWORD *)(v0 + 792);
  v51 = *(_QWORD *)(v0 + 768);
  v53 = *(_QWORD *)(v0 + 760);
  v54 = *(_QWORD *)(v0 + 736);
  v56 = *(_QWORD *)(v0 + 728);
  v58 = *(_QWORD *)(v0 + 720);
  v59 = *(_QWORD *)(v0 + 696);
  v61 = *(_QWORD *)(v0 + 688);
  v63 = *(_QWORD *)(v0 + 664);
  v64 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 944));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(1, v65);
}

uint64_t sub_100413908()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1112);
  *(_QWORD *)(*(_QWORD *)v1 + 1120) = v0;
  swift_task_dealloc(v3);
  v4 = v2[119];
  (*(void (**)(_QWORD, _QWORD))(v2[94] + 8))(v2[95], v2[93]);
  if (v0)
    v5 = sub_100414E78;
  else
    v5 = sub_10041398C;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10041398C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  (*(void (**)(_QWORD, _QWORD))(v0 + 1056))(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 776));
  v1(v3, v4);
  sub_10000D0F0(v2, &qword_1007B6BF0);
  v32 = *(unsigned __int8 *)(v0 + 1157);
  v5 = *(_QWORD *)(v0 + 696);
  v6 = *(const char **)(v0 + 616);
  v7 = *(_QWORD *)(v0 + 592);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 32))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 776));
  sub_10022E718(v5, v7, &qword_1007C03A8);
  swift_bridgeObjectRetain(v6);
  sub_10022E75C((_QWORD *)(v0 + 56));
  v31 = *(_QWORD *)(v0 + 616);
  v8 = *(_QWORD *)(v0 + 936);
  v9 = *(_QWORD *)(v0 + 928);
  v10 = *(_QWORD *)(v0 + 904);
  v11 = *(_QWORD *)(v0 + 896);
  v12 = *(_QWORD *)(v0 + 872);
  v13 = *(_QWORD *)(v0 + 864);
  v14 = *(_QWORD *)(v0 + 840);
  v15 = *(_QWORD *)(v0 + 832);
  v16 = *(_QWORD *)(v0 + 824);
  v18 = *(_QWORD *)(v0 + 816);
  v19 = *(_QWORD *)(v0 + 808);
  v20 = *(_QWORD *)(v0 + 800);
  v21 = *(_QWORD *)(v0 + 792);
  v22 = *(_QWORD *)(v0 + 768);
  v23 = *(_QWORD *)(v0 + 760);
  v24 = *(_QWORD *)(v0 + 736);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 720);
  v27 = *(_QWORD *)(v0 + 696);
  v28 = *(_QWORD *)(v0 + 688);
  v29 = *(_QWORD *)(v0 + 664);
  v30 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 944));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(v32, v31);
}

uint64_t sub_100413BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 664);
  v3 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 536) = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (!swift_dynamicCast(v2, v0 + 536, v4, v3, 0))
    goto LABEL_7;
  if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 640)) != enum case for SFAirDropReceive.Failure.declined(_:))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 640));
LABEL_7:
    swift_errorRelease(*(_QWORD *)(v0 + 536));
    v25 = *(_QWORD *)(v0 + 944);
    v26 = *(_QWORD *)(v0 + 936);
    v27 = *(_QWORD *)(v0 + 928);
    v28 = *(_QWORD *)(v0 + 904);
    v29 = *(_QWORD *)(v0 + 896);
    v30 = *(_QWORD *)(v0 + 872);
    v31 = *(_QWORD *)(v0 + 864);
    v32 = *(_QWORD *)(v0 + 840);
    v33 = *(_QWORD *)(v0 + 832);
    v34 = *(_QWORD *)(v0 + 824);
    v35 = *(_QWORD *)(v0 + 816);
    v37 = *(_QWORD *)(v0 + 808);
    v39 = *(_QWORD *)(v0 + 800);
    v41 = *(_QWORD *)(v0 + 792);
    v43 = *(_QWORD *)(v0 + 768);
    v45 = *(_QWORD *)(v0 + 760);
    v47 = *(_QWORD *)(v0 + 736);
    v49 = *(_QWORD *)(v0 + 728);
    v51 = *(_QWORD *)(v0 + 720);
    v53 = *(_QWORD *)(v0 + 696);
    v55 = *(_QWORD *)(v0 + 688);
    v57 = *(_QWORD *)(v0 + 664);
    v59 = *(_QWORD *)(v0 + 656);
    sub_10022E75C((_QWORD *)(v0 + 56));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v5 = swift_errorRelease(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ask open/move END - Declined. Not opening or moving", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 784);
  v10 = *(_QWORD *)(v0 + 776);
  v11 = *(_QWORD *)(v0 + 624);
  v12 = *(_QWORD *)(v0 + 592);
  v13 = *(_QWORD *)(v0 + 584);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v11, v10);
  v14 = _s15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  swift_errorRelease(*(_QWORD *)(v0 + 536));
  sub_10022E75C((_QWORD *)(v0 + 56));
  v15 = *(_QWORD *)(v0 + 936);
  v16 = *(_QWORD *)(v0 + 928);
  v17 = *(_QWORD *)(v0 + 904);
  v18 = *(_QWORD *)(v0 + 896);
  v19 = *(_QWORD *)(v0 + 872);
  v20 = *(_QWORD *)(v0 + 864);
  v21 = *(_QWORD *)(v0 + 840);
  v22 = *(_QWORD *)(v0 + 832);
  v23 = *(_QWORD *)(v0 + 824);
  v36 = *(_QWORD *)(v0 + 816);
  v38 = *(_QWORD *)(v0 + 808);
  v40 = *(_QWORD *)(v0 + 800);
  v42 = *(_QWORD *)(v0 + 792);
  v44 = *(_QWORD *)(v0 + 768);
  v46 = *(_QWORD *)(v0 + 760);
  v48 = *(_QWORD *)(v0 + 736);
  v50 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v54 = *(_QWORD *)(v0 + 696);
  v56 = *(_QWORD *)(v0 + 688);
  v58 = *(_QWORD *)(v0 + 664);
  v60 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 944));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(0, _swiftEmptyArrayStorage);
}

uint64_t sub_100414004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 8))(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 776));
  v1 = *(_QWORD *)(v0 + 1032);
  v2 = *(_QWORD *)(v0 + 664);
  v3 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 536) = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (!swift_dynamicCast(v2, v0 + 536, v4, v3, 0))
    goto LABEL_7;
  if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 640)) != enum case for SFAirDropReceive.Failure.declined(_:))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 640));
LABEL_7:
    swift_errorRelease(*(_QWORD *)(v0 + 536));
    v25 = *(_QWORD *)(v0 + 944);
    v26 = *(_QWORD *)(v0 + 936);
    v27 = *(_QWORD *)(v0 + 928);
    v28 = *(_QWORD *)(v0 + 904);
    v29 = *(_QWORD *)(v0 + 896);
    v30 = *(_QWORD *)(v0 + 872);
    v31 = *(_QWORD *)(v0 + 864);
    v32 = *(_QWORD *)(v0 + 840);
    v33 = *(_QWORD *)(v0 + 832);
    v34 = *(_QWORD *)(v0 + 824);
    v35 = *(_QWORD *)(v0 + 816);
    v37 = *(_QWORD *)(v0 + 808);
    v39 = *(_QWORD *)(v0 + 800);
    v41 = *(_QWORD *)(v0 + 792);
    v43 = *(_QWORD *)(v0 + 768);
    v45 = *(_QWORD *)(v0 + 760);
    v47 = *(_QWORD *)(v0 + 736);
    v49 = *(_QWORD *)(v0 + 728);
    v51 = *(_QWORD *)(v0 + 720);
    v53 = *(_QWORD *)(v0 + 696);
    v55 = *(_QWORD *)(v0 + 688);
    v57 = *(_QWORD *)(v0 + 664);
    v59 = *(_QWORD *)(v0 + 656);
    sub_10022E75C((_QWORD *)(v0 + 56));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v5 = swift_errorRelease(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ask open/move END - Declined. Not opening or moving", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 784);
  v10 = *(_QWORD *)(v0 + 776);
  v11 = *(_QWORD *)(v0 + 624);
  v12 = *(_QWORD *)(v0 + 592);
  v13 = *(_QWORD *)(v0 + 584);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v11, v10);
  v14 = _s15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  swift_errorRelease(*(_QWORD *)(v0 + 536));
  sub_10022E75C((_QWORD *)(v0 + 56));
  v15 = *(_QWORD *)(v0 + 936);
  v16 = *(_QWORD *)(v0 + 928);
  v17 = *(_QWORD *)(v0 + 904);
  v18 = *(_QWORD *)(v0 + 896);
  v19 = *(_QWORD *)(v0 + 872);
  v20 = *(_QWORD *)(v0 + 864);
  v21 = *(_QWORD *)(v0 + 840);
  v22 = *(_QWORD *)(v0 + 832);
  v23 = *(_QWORD *)(v0 + 824);
  v36 = *(_QWORD *)(v0 + 816);
  v38 = *(_QWORD *)(v0 + 808);
  v40 = *(_QWORD *)(v0 + 800);
  v42 = *(_QWORD *)(v0 + 792);
  v44 = *(_QWORD *)(v0 + 768);
  v46 = *(_QWORD *)(v0 + 760);
  v48 = *(_QWORD *)(v0 + 736);
  v50 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v54 = *(_QWORD *)(v0 + 696);
  v56 = *(_QWORD *)(v0 + 688);
  v58 = *(_QWORD *)(v0 + 664);
  v60 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 944));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(0, _swiftEmptyArrayStorage);
}

uint64_t sub_100414478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 736);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 712) + 8))(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 704));
  sub_10000D0F0(v1, &qword_1007B6BF0);
  v2 = *(_QWORD *)(v0 + 1080);
  v3 = *(_QWORD *)(v0 + 656);
  v4 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 544) = v2;
  swift_errorRetain(v2);
  v5 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v3, v0 + 544, v5, v4, 0) & 1) != 0)
  {
    v6 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
    if (v6 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      v7 = swift_errorRelease(v2);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        v11 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v8, v9, v11, v10, 2u);
        swift_slowDealloc(v10, -1, -1);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
    if (v6 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      v12 = swift_errorRelease(v2);
      v8 = Logger.logObject.getter(v12);
      v9 = static os_log_type_t.default.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        v11 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }
LABEL_9:
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
      v14 = *(_QWORD *)(v0 + 776);
      v15 = *(_QWORD *)(v0 + 624);
      v16 = *(_QWORD *)(v0 + 592);
      v17 = *(_QWORD *)(v0 + 584);

      v13(v17, v15, v14);
      v18 = _s15ExchangeRequestVMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
      swift_errorRelease(*(_QWORD *)(v0 + 544));
      sub_10022E75C((_QWORD *)(v0 + 56));
      v19 = *(_QWORD *)(v0 + 936);
      v20 = *(_QWORD *)(v0 + 928);
      v21 = *(_QWORD *)(v0 + 904);
      v22 = *(_QWORD *)(v0 + 896);
      v23 = *(_QWORD *)(v0 + 872);
      v24 = *(_QWORD *)(v0 + 864);
      v25 = *(_QWORD *)(v0 + 840);
      v26 = *(_QWORD *)(v0 + 832);
      v27 = *(_QWORD *)(v0 + 824);
      v39 = *(_QWORD *)(v0 + 816);
      v41 = *(_QWORD *)(v0 + 808);
      v43 = *(_QWORD *)(v0 + 800);
      v45 = *(_QWORD *)(v0 + 792);
      v47 = *(_QWORD *)(v0 + 768);
      v49 = *(_QWORD *)(v0 + 760);
      v51 = *(_QWORD *)(v0 + 736);
      v53 = *(_QWORD *)(v0 + 728);
      v55 = *(_QWORD *)(v0 + 720);
      v57 = *(_QWORD *)(v0 + 696);
      v59 = *(_QWORD *)(v0 + 688);
      v61 = *(_QWORD *)(v0 + 664);
      v63 = *(_QWORD *)(v0 + 656);
      swift_task_dealloc(*(_QWORD *)(v0 + 944));
      swift_task_dealloc(v19);
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v39);
      swift_task_dealloc(v41);
      swift_task_dealloc(v43);
      swift_task_dealloc(v45);
      swift_task_dealloc(v47);
      swift_task_dealloc(v49);
      swift_task_dealloc(v51);
      swift_task_dealloc(v53);
      swift_task_dealloc(v55);
      swift_task_dealloc(v57);
      swift_task_dealloc(v59);
      swift_task_dealloc(v61);
      swift_task_dealloc(v63);
      return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(0, _swiftEmptyArrayStorage);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
  }
  swift_errorRelease(*(_QWORD *)(v0 + 544));
  v29 = *(_QWORD *)(v0 + 944);
  v30 = *(_QWORD *)(v0 + 936);
  v31 = *(_QWORD *)(v0 + 928);
  v32 = *(_QWORD *)(v0 + 904);
  v33 = *(_QWORD *)(v0 + 896);
  v34 = *(_QWORD *)(v0 + 872);
  v35 = *(_QWORD *)(v0 + 864);
  v36 = *(_QWORD *)(v0 + 840);
  v37 = *(_QWORD *)(v0 + 832);
  v38 = *(_QWORD *)(v0 + 824);
  v40 = *(_QWORD *)(v0 + 816);
  v42 = *(_QWORD *)(v0 + 808);
  v44 = *(_QWORD *)(v0 + 800);
  v46 = *(_QWORD *)(v0 + 792);
  v48 = *(_QWORD *)(v0 + 768);
  v50 = *(_QWORD *)(v0 + 760);
  v52 = *(_QWORD *)(v0 + 736);
  v54 = *(_QWORD *)(v0 + 728);
  v56 = *(_QWORD *)(v0 + 720);
  v58 = *(_QWORD *)(v0 + 696);
  v60 = *(_QWORD *)(v0 + 688);
  v62 = *(_QWORD *)(v0 + 664);
  v64 = *(_QWORD *)(v0 + 656);
  sub_10022E75C((_QWORD *)(v0 + 56));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100414960()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1056);
  v2 = *(_QWORD *)(v0 + 816);
  v3 = *(_QWORD *)(v0 + 776);
  v4 = *(_QWORD *)(v0 + 736);
  v5 = *(_QWORD *)(v0 + 728);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 704);
  sub_10000D0F0(*(_QWORD *)(v0 + 696), &qword_1007C03A8);
  v1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10000D0F0(v4, &qword_1007B6BF0);
  v8 = *(_QWORD *)(v0 + 1096);
  v9 = *(_QWORD *)(v0 + 656);
  v10 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 544) = v8;
  swift_errorRetain(v8);
  v11 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v9, v0 + 544, v11, v10, 0) & 1) != 0)
  {
    v12 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
    if (v12 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      v13 = swift_errorRelease(v8);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        v17 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
        swift_slowDealloc(v16, -1, -1);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
    if (v12 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      v18 = swift_errorRelease(v8);
      v14 = Logger.logObject.getter(v18);
      v15 = static os_log_type_t.default.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        v17 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }
LABEL_9:
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
      v20 = *(_QWORD *)(v0 + 776);
      v21 = *(_QWORD *)(v0 + 624);
      v22 = *(_QWORD *)(v0 + 592);
      v23 = *(_QWORD *)(v0 + 584);

      v19(v23, v21, v20);
      v24 = _s15ExchangeRequestVMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
      swift_errorRelease(*(_QWORD *)(v0 + 544));
      sub_10022E75C((_QWORD *)(v0 + 56));
      v25 = *(_QWORD *)(v0 + 936);
      v26 = *(_QWORD *)(v0 + 928);
      v27 = *(_QWORD *)(v0 + 904);
      v28 = *(_QWORD *)(v0 + 896);
      v29 = *(_QWORD *)(v0 + 872);
      v30 = *(_QWORD *)(v0 + 864);
      v31 = *(_QWORD *)(v0 + 840);
      v32 = *(_QWORD *)(v0 + 832);
      v33 = *(_QWORD *)(v0 + 824);
      v45 = *(_QWORD *)(v0 + 816);
      v47 = *(_QWORD *)(v0 + 808);
      v49 = *(_QWORD *)(v0 + 800);
      v51 = *(_QWORD *)(v0 + 792);
      v53 = *(_QWORD *)(v0 + 768);
      v55 = *(_QWORD *)(v0 + 760);
      v57 = *(_QWORD *)(v0 + 736);
      v59 = *(_QWORD *)(v0 + 728);
      v61 = *(_QWORD *)(v0 + 720);
      v63 = *(_QWORD *)(v0 + 696);
      v65 = *(_QWORD *)(v0 + 688);
      v67 = *(_QWORD *)(v0 + 664);
      v69 = *(_QWORD *)(v0 + 656);
      swift_task_dealloc(*(_QWORD *)(v0 + 944));
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v31);
      swift_task_dealloc(v32);
      swift_task_dealloc(v33);
      swift_task_dealloc(v45);
      swift_task_dealloc(v47);
      swift_task_dealloc(v49);
      swift_task_dealloc(v51);
      swift_task_dealloc(v53);
      swift_task_dealloc(v55);
      swift_task_dealloc(v57);
      swift_task_dealloc(v59);
      swift_task_dealloc(v61);
      swift_task_dealloc(v63);
      swift_task_dealloc(v65);
      swift_task_dealloc(v67);
      swift_task_dealloc(v69);
      return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(0, _swiftEmptyArrayStorage);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
  }
  swift_errorRelease(*(_QWORD *)(v0 + 544));
  v35 = *(_QWORD *)(v0 + 944);
  v36 = *(_QWORD *)(v0 + 936);
  v37 = *(_QWORD *)(v0 + 928);
  v38 = *(_QWORD *)(v0 + 904);
  v39 = *(_QWORD *)(v0 + 896);
  v40 = *(_QWORD *)(v0 + 872);
  v41 = *(_QWORD *)(v0 + 864);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 832);
  v44 = *(_QWORD *)(v0 + 824);
  v46 = *(_QWORD *)(v0 + 816);
  v48 = *(_QWORD *)(v0 + 808);
  v50 = *(_QWORD *)(v0 + 800);
  v52 = *(_QWORD *)(v0 + 792);
  v54 = *(_QWORD *)(v0 + 768);
  v56 = *(_QWORD *)(v0 + 760);
  v58 = *(_QWORD *)(v0 + 736);
  v60 = *(_QWORD *)(v0 + 728);
  v62 = *(_QWORD *)(v0 + 720);
  v64 = *(_QWORD *)(v0 + 696);
  v66 = *(_QWORD *)(v0 + 688);
  v68 = *(_QWORD *)(v0 + 664);
  v70 = *(_QWORD *)(v0 + 656);
  sub_10022E75C((_QWORD *)(v0 + 56));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100414E78()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
  v71 = (_QWORD *)(v0 + 56);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1056);
  v3 = *(_QWORD *)(v0 + 816);
  v4 = *(_QWORD *)(v0 + 776);
  v5 = *(_QWORD *)(v0 + 736);
  v6 = *(_QWORD *)(v0 + 728);
  v7 = *(_QWORD *)(v0 + 704);
  v8 = *(_QWORD *)(v0 + 696);
  v2(*(_QWORD *)(v0 + 800), v4);
  sub_10000D0F0(v8, &qword_1007C03A8);
  v2(v3, v4);
  v1(v6, v7);
  sub_10000D0F0(v5, &qword_1007B6BF0);
  v9 = *(_QWORD *)(v0 + 1120);
  v10 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 544) = v9;
  swift_errorRetain(v9);
  v12 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v10, v0 + 544, v12, v11, 0) & 1) != 0)
  {
    v13 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 88))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
    if (v13 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      v14 = swift_errorRelease(v9);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        v18 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v15, v16, v18, v17, 2u);
        swift_slowDealloc(v17, -1, -1);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
    if (v13 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      v19 = swift_errorRelease(v9);
      v15 = Logger.logObject.getter(v19);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        v18 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }
LABEL_9:
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
      v21 = *(_QWORD *)(v0 + 776);
      v22 = *(_QWORD *)(v0 + 624);
      v23 = *(_QWORD *)(v0 + 592);
      v24 = *(_QWORD *)(v0 + 584);

      v20(v24, v22, v21);
      v25 = _s15ExchangeRequestVMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 1, 1, v25);
      swift_errorRelease(*(_QWORD *)(v0 + 544));
      sub_10022E75C(v71);
      v26 = *(_QWORD *)(v0 + 936);
      v27 = *(_QWORD *)(v0 + 928);
      v28 = *(_QWORD *)(v0 + 904);
      v29 = *(_QWORD *)(v0 + 896);
      v30 = *(_QWORD *)(v0 + 872);
      v31 = *(_QWORD *)(v0 + 864);
      v32 = *(_QWORD *)(v0 + 840);
      v33 = *(_QWORD *)(v0 + 832);
      v34 = *(_QWORD *)(v0 + 824);
      v47 = *(_QWORD *)(v0 + 816);
      v49 = *(_QWORD *)(v0 + 808);
      v51 = *(_QWORD *)(v0 + 800);
      v53 = *(_QWORD *)(v0 + 792);
      v55 = *(_QWORD *)(v0 + 768);
      v57 = *(_QWORD *)(v0 + 760);
      v59 = *(_QWORD *)(v0 + 736);
      v61 = *(_QWORD *)(v0 + 728);
      v63 = *(_QWORD *)(v0 + 720);
      v65 = *(_QWORD *)(v0 + 696);
      v67 = *(_QWORD *)(v0 + 688);
      v69 = *(_QWORD *)(v0 + 664);
      v72 = *(_QWORD *)(v0 + 656);
      swift_task_dealloc(*(_QWORD *)(v0 + 944));
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v31);
      swift_task_dealloc(v32);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v47);
      swift_task_dealloc(v49);
      swift_task_dealloc(v51);
      swift_task_dealloc(v53);
      swift_task_dealloc(v55);
      swift_task_dealloc(v57);
      swift_task_dealloc(v59);
      swift_task_dealloc(v61);
      swift_task_dealloc(v63);
      swift_task_dealloc(v65);
      swift_task_dealloc(v67);
      swift_task_dealloc(v69);
      swift_task_dealloc(v72);
      return (*(uint64_t (**)(_QWORD, _QWORD *))(v0 + 8))(0, _swiftEmptyArrayStorage);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 640));
  }
  swift_errorRelease(*(_QWORD *)(v0 + 544));
  v36 = *(_QWORD *)(v0 + 944);
  v37 = *(_QWORD *)(v0 + 936);
  v38 = *(_QWORD *)(v0 + 928);
  v39 = *(_QWORD *)(v0 + 904);
  v40 = *(_QWORD *)(v0 + 896);
  v41 = *(_QWORD *)(v0 + 872);
  v42 = *(_QWORD *)(v0 + 864);
  v43 = *(_QWORD *)(v0 + 840);
  v44 = *(_QWORD *)(v0 + 832);
  v45 = *(_QWORD *)(v0 + 824);
  v46 = *(_QWORD *)(v0 + 816);
  v48 = *(_QWORD *)(v0 + 808);
  v50 = *(_QWORD *)(v0 + 800);
  v52 = *(_QWORD *)(v0 + 792);
  v54 = *(_QWORD *)(v0 + 768);
  v56 = *(_QWORD *)(v0 + 760);
  v58 = *(_QWORD *)(v0 + 736);
  v60 = *(_QWORD *)(v0 + 728);
  v62 = *(_QWORD *)(v0 + 720);
  v64 = *(_QWORD *)(v0 + 696);
  v66 = *(_QWORD *)(v0 + 688);
  v68 = *(_QWORD *)(v0 + 664);
  v70 = *(_QWORD *)(v0 + 656);
  sub_10022E75C(v71);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1004153A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v3[98] = v2;
  v3[97] = a2;
  v3[96] = a1;
  v4 = sub_100008384(&qword_1007BA3A8);
  v3[99] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C03E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[100] = swift_task_alloc(v5);
  v3[101] = swift_task_alloc(v5);
  v6 = type metadata accessor for SDAirDropServerConnection(0);
  v3[102] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[103] = v7;
  v3[104] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3[105] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[106] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[107] = swift_task_alloc(v10);
  v3[108] = swift_task_alloc(v10);
  v11 = sub_100008384(&qword_1007B6BF0);
  v3[109] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v3[110] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(_s16ExchangeResponseVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[111] = swift_task_alloc(v13);
  v3[112] = swift_task_alloc(v13);
  v3[113] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA320) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[114] = swift_task_alloc(v14);
  v3[115] = swift_task_alloc(v14);
  v3[116] = swift_task_alloc(v14);
  v3[117] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA300) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[118] = swift_task_alloc(v15);
  v3[119] = swift_task_alloc(v15);
  v3[120] = swift_task_alloc(v15);
  v3[121] = swift_task_alloc(v15);
  v3[122] = swift_task_alloc(v15);
  v3[123] = swift_task_alloc(v15);
  v3[124] = swift_task_alloc(v15);
  v3[125] = swift_task_alloc(v15);
  v16 = type metadata accessor for SFAirDrop.ContactInfo(0);
  v3[126] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[127] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[128] = swift_task_alloc(v18);
  v3[129] = swift_task_alloc(v18);
  v3[130] = swift_task_alloc(v18);
  v3[131] = swift_task_alloc(v18);
  v3[132] = swift_task_alloc(v18);
  v19 = type metadata accessor for SFAirDrop.TransferType(0);
  v3[133] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v3[134] = v20;
  v3[135] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[136] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v3[137] = v22;
  v3[138] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v3[139] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[140] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[141] = swift_task_alloc(v25);
  v3[142] = swift_task_alloc(v25);
  v3[143] = swift_task_alloc(v25);
  v3[144] = swift_task_alloc(v25);
  v3[145] = swift_task_alloc(v25);
  v3[146] = swift_task_alloc(v25);
  v3[147] = swift_task_alloc(v25);
  v3[148] = swift_task_alloc(v25);
  v3[149] = swift_task_alloc(v25);
  v3[150] = swift_task_alloc(v25);
  v3[151] = swift_task_alloc(v25);
  v3[152] = swift_task_alloc(v25);
  v3[153] = swift_task_alloc(v25);
  v3[154] = swift_task_alloc(v25);
  v3[155] = swift_task_alloc(v25);
  v3[156] = swift_task_alloc(v25);
  v26 = sub_100008384(&qword_1007C03A8);
  v3[157] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v26 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = _s15ExchangeRequestVMa(0);
  v3[158] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v3[159] = v28;
  v3[160] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v3[161] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v3[162] = v30;
  v3[163] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[164] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v3[165] = v32;
  v3[166] = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100008384(&qword_1007C03E8);
  v3[167] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v33 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100008384(&qword_1007C03F0);
  v3[168] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[169] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[170] = swift_task_alloc(v36);
  v3[171] = swift_task_alloc(v36);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v37 = static AirDropActor.shared;
  v3[172] = static AirDropActor.shared;
  return swift_task_switch(sub_1004158A0, v37, 0);
}

uint64_t sub_1004158A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v78)(void);
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD, _QWORD, uint64_t);
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  const char *v105;
  __n128 v106;
  uint64_t (*v107)(uint64_t, uint64_t, __n128);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  const char *v114;
  uint64_t v115;
  unint64_t v116;
  const char *v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t, __n128);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  const char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  const char *v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  const char *v187;
  __n128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  const char *v195;
  const char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  const char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  const char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  const char *v214;
  uint64_t v215;
  __n128 v216;
  char v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  const char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t (*v264)(uint64_t, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t (*v269)(uint64_t, uint64_t);
  uint64_t (*v270)(uint64_t, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  const char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  os_log_type_t v289;
  unint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(uint64_t, uint64_t);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  NSObject *v303;
  NSObject *v304;
  uint64_t (*v305)(uint64_t, uint64_t, __n128);
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t, uint64_t);
  unint64_t v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t (*v314)(uint64_t, uint64_t);
  void (*v315)(uint64_t, uint64_t);
  void (*v316)(uint64_t, uint64_t);
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  void (*v323)(uint64_t, _QWORD, uint64_t);
  os_log_type_t v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unsigned int (*v329)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v330;
  void (*v331)(uint64_t, uint64_t);
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t (*v337)(void);
  uint64_t (*v338)(uint64_t, _QWORD, _QWORD);
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void (*v342)(uint64_t, uint64_t);
  uint64_t v343[2];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 784)
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
  v2 = *(_QWORD *)(v0 + 1336);
  *(_QWORD *)(v0 + 1384) = v1;
  v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation, v0 + 544, 0, 0);
  sub_100221F28(v3, v2, &qword_1007C03E8);
  v4 = sub_100008384(&qword_1007C03F8);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    v6 = sub_10000D0F0(*(_QWORD *)(v0 + 1336), &qword_1007C03E8);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Exchange Contact Request SKIP - No contact request task", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = *(_QWORD *)(v0 + 1360);
    v11 = *(_QWORD *)(v0 + 1336);
    v12 = *(_QWORD *)(v0 + 1328);
    v13 = *(_QWORD *)(v0 + 1304);
    v14 = *(_QWORD *)(v0 + 1280);
    v15 = *(_QWORD *)(v0 + 1256);
    v16 = *(_QWORD *)(v0 + 1248);
    v17 = *(_QWORD *)(v0 + 1240);
    v18 = *(_QWORD *)(v0 + 1232);
    v232 = *(_QWORD *)(v0 + 1224);
    v233 = *(_QWORD *)(v0 + 1216);
    v234 = *(_QWORD *)(v0 + 1208);
    v235 = *(_QWORD *)(v0 + 1200);
    v236 = *(_QWORD *)(v0 + 1192);
    v237 = *(_QWORD *)(v0 + 1184);
    v238 = *(_QWORD *)(v0 + 1176);
    v239 = *(_QWORD *)(v0 + 1168);
    v240 = *(_QWORD *)(v0 + 1160);
    v241 = *(_QWORD *)(v0 + 1152);
    v242 = *(_QWORD *)(v0 + 1144);
    v243 = *(_QWORD *)(v0 + 1136);
    v244 = *(_QWORD *)(v0 + 1128);
    v245 = *(_QWORD *)(v0 + 1104);
    v246 = *(_QWORD *)(v0 + 1080);
    v247 = *(_QWORD *)(v0 + 1056);
    v248 = *(_QWORD *)(v0 + 1048);
    v249 = *(_QWORD *)(v0 + 1040);
    v250 = *(_QWORD *)(v0 + 1032);
    v251 = *(_QWORD *)(v0 + 1024);
    v252 = *(_QWORD *)(v0 + 1000);
    v253 = *(_QWORD *)(v0 + 992);
    v254 = *(_QWORD *)(v0 + 984);
    v256 = *(_QWORD *)(v0 + 976);
    v257 = *(_QWORD *)(v0 + 968);
    v258 = *(_QWORD *)(v0 + 960);
    v260 = *(_QWORD *)(v0 + 952);
    v263 = *(_QWORD *)(v0 + 944);
    v267 = *(_QWORD *)(v0 + 936);
    v271 = *(_QWORD *)(v0 + 928);
    v275 = *(_QWORD *)(v0 + 920);
    v278 = *(_QWORD *)(v0 + 912);
    v283 = *(_QWORD *)(v0 + 904);
    v288 = *(_QWORD *)(v0 + 896);
    v294 = *(_QWORD *)(v0 + 888);
    v298 = *(_QWORD *)(v0 + 880);
    v301 = *(_QWORD *)(v0 + 872);
    v307 = *(_QWORD *)(v0 + 864);
    v312 = *(_QWORD *)(v0 + 856);
    v319 = *(_QWORD *)(v0 + 832);
    v327 = *(_QWORD *)(v0 + 808);
    v334 = *(_QWORD *)(v0 + 800);
    v340 = *(_QWORD *)(v0 + 792);
    swift_task_dealloc(*(_QWORD *)(v0 + 1368));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v232);
    swift_task_dealloc(v233);
    swift_task_dealloc(v234);
    swift_task_dealloc(v235);
    swift_task_dealloc(v236);
    swift_task_dealloc(v237);
    swift_task_dealloc(v238);
    swift_task_dealloc(v239);
    swift_task_dealloc(v240);
    swift_task_dealloc(v241);
    swift_task_dealloc(v242);
    swift_task_dealloc(v243);
    swift_task_dealloc(v244);
    swift_task_dealloc(v245);
    swift_task_dealloc(v246);
    swift_task_dealloc(v247);
    swift_task_dealloc(v248);
    swift_task_dealloc(v249);
    swift_task_dealloc(v250);
    swift_task_dealloc(v251);
    swift_task_dealloc(v252);
    swift_task_dealloc(v253);
    swift_task_dealloc(v254);
    swift_task_dealloc(v256);
    swift_task_dealloc(v257);
    swift_task_dealloc(v258);
    swift_task_dealloc(v260);
    swift_task_dealloc(v263);
    swift_task_dealloc(v267);
    swift_task_dealloc(v271);
    swift_task_dealloc(v275);
    swift_task_dealloc(v278);
    swift_task_dealloc(v283);
    swift_task_dealloc(v288);
    swift_task_dealloc(v294);
    swift_task_dealloc(v298);
    swift_task_dealloc(v301);
    swift_task_dealloc(v307);
    swift_task_dealloc(v312);
    swift_task_dealloc(v319);
    swift_task_dealloc(v327);
    swift_task_dealloc(v334);
    swift_task_dealloc(v340);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 1368);
    v21 = *(_QWORD *)(v0 + 1360);
    v22 = *(_QWORD *)(v0 + 1352);
    v23 = *(_QWORD *)(v0 + 1344);
    v24 = *(_QWORD *)(v0 + 1336);
    SFProgressContinuation.task.getter(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20, v21, v23);
    *(_QWORD *)(v0 + 1392) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Exchange Contact START", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 1328);
    v30 = *(_QWORD *)(v0 + 1320);
    v31 = *(_QWORD *)(v0 + 1304);
    v32 = *(_QWORD *)(v0 + 1296);
    v33 = *(_QWORD *)(v0 + 1288);
    v34 = *(_QWORD *)(v0 + 1272);
    v335 = *(_QWORD *)(v0 + 1312);
    v341 = *(_QWORD *)(v0 + 1264);
    v35 = *(_QWORD *)(v0 + 768);

    v36 = enum case for SFAirDropReceive.Transfer.State.waitingForContactExchangeRequest(_:);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 104);
    *(_QWORD *)(v0 + 1400) = v37;
    v37(v31, v36, v33);
    sub_10053D3FC(v31, v29);
    v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    *(_QWORD *)(v0 + 1408) = v38;
    v38(v31, v33);
    v39 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    *(_QWORD *)(v0 + 1416) = v39;
    v39(v29, v335);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v40(v35, 1, v341) == 1)
    {
      v41 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
      *(_QWORD *)(v0 + 1424) = v41;
      *v41 = v0;
      v41[1] = sub_100416F68;
      return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1344));
    }
    else
    {
      v42 = *(_QWORD *)(v0 + 1264);
      v43 = *(_QWORD *)(v0 + 1256);
      sub_100221F28(*(_QWORD *)(v0 + 768), v43, &qword_1007C03A8);
      result = v40(v43, 1, v42);
      if ((_DWORD)result == 1)
      {
        __break(1u);
      }
      else
      {
        v295 = v0 + 720;
        v299 = v0 + 712;
        sub_100221DB4(*(_QWORD *)(v0 + 1256), *(_QWORD *)(v0 + 1280), _s15ExchangeRequestVMa);
        v44 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
        v45 = *(_QWORD *)(v0 + 1328);
        v46 = *(_QWORD *)(v0 + 1312);
        v47 = *(_QWORD *)(v0 + 1104);
        v302 = *(_QWORD *)(v0 + 1096);
        v308 = *(_QWORD *)(v0 + 1088);
        v48 = *(_QWORD *)(v0 + 1080);
        v313 = *(_QWORD *)(v0 + 1072);
        v320 = *(_QWORD *)(v0 + 1064);
        v328 = *(_QWORD *)(v0 + 1016);
        v336 = *(_QWORD *)(v0 + 1008);
        v49 = *(_QWORD *)(v0 + 1000);
        v50 = *(_QWORD *)(v0 + 784);
        v51 = sub_100478C4C(*(_QWORD *)(v0 + 1248));
        *(_QWORD *)(v0 + 1440) = *(_QWORD *)(v50
                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
        v52 = CurrentValueSubject.value.getter(v51);
        SFAirDropReceive.Transfer.askRequest.getter(v52);
        v53 = v44(v45, v46);
        SFAirDropReceive.AskRequest.type.getter(v53);
        v54 = v308;
        v55 = *(void (**)(uint64_t, uint64_t))(v302 + 8);
        *(_QWORD *)(v0 + 1448) = v55;
        v309 = v55;
        v56 = ((uint64_t (*)(uint64_t, uint64_t))v55)(v47, v54);
        *(_BYTE *)(v0 + 2008) = SFAirDrop.TransferType.isOnlyExchange.getter(v56) & 1;
        v57 = *(uint64_t (**)(uint64_t, uint64_t))(v313 + 8);
        *(_QWORD *)(v0 + 1456) = v57;
        v58 = v57(v48, v320);
        SFAirDrop.ContactRequest.contact.getter(v58);
        v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v328 + 48);
        *(_QWORD *)(v0 + 1464) = v59;
        if (v59(v49, 1, v336) == 1)
        {
          v60 = *(_QWORD *)(v0 + 1120);
          v61 = *(_QWORD *)(v0 + 1112);
          v62 = *(_QWORD *)(v0 + 912);
          v63 = *(_QWORD *)(v0 + 776);
          sub_10000D0F0(*(_QWORD *)(v0 + 1000), &qword_1007BA300);
          sub_100221F28(v63, v62, &qword_1007BA320);
          v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v62, 1, v61);
          v65 = *(_QWORD *)(v0 + 1144);
          v66 = *(_QWORD *)(v0 + 1120);
          v67 = *(_QWORD *)(v0 + 1112);
          v68 = *(_QWORD *)(v0 + 912);
          if (v64 == 1)
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v65, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v67);
            sub_10000D0F0(v68, &qword_1007BA320);
          }
          else
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 32))(v65, *(_QWORD *)(v0 + 912), v67);
          }
          v90 = *(_QWORD *)(v0 + 1144);
          v91 = *(_QWORD *)(v0 + 1128);
          v92 = *(_QWORD *)(v0 + 1112);
          v93 = *(_QWORD *)(v0 + 784);
          v94 = *(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 1120) + 16);
          v94(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1248), v92);
          v338 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))v94;
          v94(v91, v90, v92);
          v95 = swift_retain_n(v93, 2);
          v96 = Logger.logObject.getter(v95);
          v97 = static os_log_type_t.default.getter(v96);
          if (os_log_type_enabled(v96, v97))
          {
            v264 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
            v98 = *(_QWORD *)(v0 + 1328);
            v261 = *(_QWORD *)(v0 + 1312);
            v330 = v97;
            v99 = *(_QWORD *)(v0 + 1136);
            v290 = *(_QWORD *)(v0 + 1128);
            v255 = *(_QWORD *)(v0 + 1120);
            v100 = *(_QWORD *)(v0 + 1112);
            v315 = (void (*)(uint64_t, uint64_t))v57;
            v101 = *(_QWORD *)(v0 + 1104);
            v268 = *(_QWORD *)(v0 + 1088);
            v259 = *(_QWORD *)(v0 + 1080);
            v272 = *(_QWORD *)(v0 + 1064);
            v279 = *(_QWORD *)(v0 + 784);
            v304 = v96;
            v102 = swift_slowAlloc(52, -1);
            v322 = swift_slowAlloc(96, -1);
            v343[0] = v322;
            *(_DWORD *)v102 = 141559043;
            *(_QWORD *)(v0 + 712) = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v299, v295, v102 + 4);
            *(_WORD *)(v102 + 12) = 2081;
            v300 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
            v103 = dispatch thunk of CustomStringConvertible.description.getter(v100, v300);
            v105 = (const char *)v104;
            *(_QWORD *)(v0 + 592) = sub_100228BD8(v103, v104, v343);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600, v102 + 14);
            v106 = swift_bridgeObjectRelease(v105);
            v107 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v255 + 8);
            v108 = v107(v99, v100, v106);
            *(_WORD *)(v102 + 22) = 2080;
            v109 = CurrentValueSubject.value.getter(v108);
            SFAirDropReceive.Transfer.askRequest.getter(v109);
            v110 = v264(v98, v261);
            SFAirDropReceive.AskRequest.type.getter(v110);
            v309(v101, v268);
            v111 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
            v112 = dispatch thunk of CustomStringConvertible.description.getter(v272, v111);
            v114 = v113;
            v315(v259, v272);
            *(_QWORD *)(v0 + 600) = sub_100228BD8(v112, (unint64_t)v114, v343);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v0 + 608, v102 + 24);
            swift_bridgeObjectRelease(v114);
            swift_release_n(v279, 2);
            *(_WORD *)(v102 + 32) = 2160;
            *(_QWORD *)(v0 + 608) = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 608, v0 + 616, v102 + 34);
            *(_WORD *)(v102 + 42) = 2081;
            v115 = dispatch thunk of CustomStringConvertible.description.getter(v100, v300);
            v117 = (const char *)v116;
            *(_QWORD *)(v0 + 616) = sub_100228BD8(v115, v116, v343);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624, v102 + 44);
            v118 = swift_bridgeObjectRelease(v117);
            v107(v290, v100, v118);
            _os_log_impl((void *)&_mh_execute_header, v304, v330, "Exchange Contact END - Sender did not send contact {contactRequest: %{private,mask.hash}s, type: %s, contactToSend: %{private,mask.hash}s}", (uint8_t *)v102, 0x34u);
            swift_arrayDestroy(v322, 3, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v322, -1, -1);
            swift_slowDealloc(v102, -1, -1);

          }
          else
          {
            v123 = *(_QWORD *)(v0 + 1136);
            v124 = *(_QWORD *)(v0 + 1128);
            v125 = *(_QWORD *)(v0 + 1120);
            v126 = *(_QWORD *)(v0 + 1112);
            v127 = *(_QWORD *)(v0 + 784);

            v107 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v125 + 8);
            ((void (*)(uint64_t, uint64_t))v107)(v123, v126);
            swift_release_n(v127, 2);
            ((void (*)(uint64_t, uint64_t))v107)(v124, v126);
          }
          *(_QWORD *)(v0 + 1968) = v107;
          v128 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
          v129 = *(_QWORD *)(v0 + 1328);
          v130 = *(_QWORD *)(v0 + 1312);
          v131 = *(_QWORD *)(v0 + 1216);
          v132 = *(_QWORD *)(v0 + 888);
          v133 = *(_QWORD *)(v0 + 880);
          v134 = v338(v131, *(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1112));
          v135 = CurrentValueSubject.value.getter(v134);
          SFAirDropReceive.Transfer.id.getter(v135);
          v128(v129, v130);
          *(_QWORD *)(v0 + 96) = 0;
          *(_OWORD *)(v0 + 64) = 0u;
          *(_OWORD *)(v0 + 80) = 0u;
          *(_OWORD *)(v0 + 32) = 0u;
          *(_OWORD *)(v0 + 48) = 0u;
          *(_OWORD *)(v0 + 16) = 0u;
          sub_100478E78(v131, v133, v0 + 16, v132);
          v136 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
          *(_QWORD *)(v0 + 1976) = v136;
          *v136 = v0;
          v136[1] = sub_10041D7CC;
          return sub_10050B098(*(_QWORD *)(v0 + 888));
        }
        else
        {
          v329 = v59;
          v69 = *(_QWORD *)(v0 + 1248);
          v70 = *(_QWORD *)(v0 + 1240);
          v71 = *(_QWORD *)(v0 + 1120);
          v72 = *(_QWORD *)(v0 + 1112);
          v73 = *(_QWORD *)(v0 + 1056);
          v74 = *(_QWORD *)(v0 + 1008);
          v75 = *(_QWORD *)(v0 + 1000);
          v76 = *(_QWORD *)(v0 + 784);
          v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1016) + 32);
          *(_QWORD *)(v0 + 1472) = v77;
          v77(v73, v75, v74);
          v78 = *(uint64_t (**)(void))(v71 + 16);
          *(_QWORD *)(v0 + 1480) = v78;
          ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v70, v69, v72);
          v79 = swift_retain_n(v76, 2);
          v80 = Logger.logObject.getter(v79);
          v81 = static os_log_type_t.default.getter(v80);
          v82 = os_log_type_enabled(v80, v81);
          v83 = *(_QWORD *)(v0 + 1240);
          v337 = v78;
          if (v82)
          {
            v289 = v81;
            v303 = v80;
            v321 = v0 + 704;
            v84 = *(_QWORD *)(v0 + 1008);
            v85 = *(_QWORD *)(v0 + 992);
            v86 = swift_slowAlloc(32, -1);
            v284 = swift_slowAlloc(64, -1);
            v343[0] = v284;
            *(_DWORD *)v86 = 141558531;
            *(_QWORD *)(v0 + 720) = 1752392040;
            v87 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v295, v0 + 728, v86 + 4);
            *(_WORD *)(v86 + 12) = 2081;
            SFAirDrop.ContactRequest.contact.getter(v87);
            v314 = v57;
            if (v329(v85, 1, v84) == 1)
            {
              sub_10000D0F0(*(_QWORD *)(v0 + 992), &qword_1007BA300);
              v88 = (const char *)0x800000010061AD50;
              v89 = 0xD000000000000020;
            }
            else
            {
              v137 = *(_QWORD *)(v0 + 1016);
              v138 = *(_QWORD *)(v0 + 1008);
              v139 = *(_QWORD *)(v0 + 992);
              v140 = SFAirDrop.ContactInfo.description.getter();
              v88 = v141;
              (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v138);
              v89 = v140;
            }
            v142 = *(_QWORD *)(v0 + 1328);
            v265 = *(_QWORD *)(v0 + 1312);
            v269 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
            v143 = *(_QWORD *)(v0 + 1240);
            v144 = *(_QWORD *)(v0 + 1120);
            v145 = *(_QWORD *)(v0 + 1112);
            v146 = *(_QWORD *)(v0 + 1104);
            v147 = *(_QWORD *)(v0 + 1080);
            v273 = *(_QWORD *)(v0 + 1088);
            v276 = *(_QWORD *)(v0 + 1064);
            v296 = *(_QWORD *)(v0 + 784);
            *(_QWORD *)(v0 + 704) = sub_100228BD8(v89, (unint64_t)v88, v343);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v321, v299, v86 + 14);
            v148 = swift_bridgeObjectRelease(v88);
            v149 = v145;
            v122 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v144 + 8);
            v150 = v122(v143, v149, v148);
            *(_WORD *)(v86 + 22) = 2080;
            v151 = CurrentValueSubject.value.getter(v150);
            SFAirDropReceive.Transfer.askRequest.getter(v151);
            v152 = v269(v142, v265);
            SFAirDropReceive.AskRequest.type.getter(v152);
            v309(v146, v273);
            v153 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
            v154 = dispatch thunk of CustomStringConvertible.description.getter(v276, v153);
            v156 = v155;
            v57 = v314;
            v314(v147, v276);
            *(_QWORD *)(v0 + 696) = sub_100228BD8(v154, (unint64_t)v156, v343);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 696, v321, v86 + 24);
            swift_bridgeObjectRelease(v156);
            swift_release_n(v296, 2);
            _os_log_impl((void *)&_mh_execute_header, v303, v289, "Exchange Contact CONTINUE {senderContact: %{private,mask.hash}s, type: %s}", (uint8_t *)v86, 0x20u);
            swift_arrayDestroy(v284, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v284, -1, -1);
            swift_slowDealloc(v86, -1, -1);

            v78 = v337;
          }
          else
          {
            v119 = *(_QWORD *)(v0 + 1120);
            v120 = *(_QWORD *)(v0 + 1112);
            v121 = *(_QWORD *)(v0 + 784);

            v122 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v119 + 8);
            ((void (*)(uint64_t, uint64_t))v122)(v83, v120);
            swift_release_n(v121, 2);
          }
          *(_QWORD *)(v0 + 1488) = v122;
          v157 = *(_QWORD *)(v0 + 1120);
          v158 = *(_QWORD *)(v0 + 1112);
          v159 = *(_QWORD *)(v0 + 936);
          sub_100221F28(*(_QWORD *)(v0 + 776), v159, &qword_1007BA320);
          v160 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
          *(_QWORD *)(v0 + 1496) = v160;
          if (v160(v159, 1, v158) == 1)
          {
            sub_10000D0F0(*(_QWORD *)(v0 + 936), &qword_1007BA320);
            v323 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
            v331 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
            v161 = *(_QWORD *)(v0 + 1328);
            v339 = *(_QWORD *)(v0 + 1312);
            v342 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
            v162 = *(_QWORD *)(v0 + 1304);
            v163 = *(_QWORD *)(v0 + 1288);
            v164 = *(_QWORD *)(v0 + 1056);
            v165 = *(_QWORD *)(v0 + 1016);
            v166 = *(_QWORD *)(v0 + 1008);
            v167 = *(_QWORD *)(v0 + 872);
            sub_10041F8F0(v164, v167);
            v168 = v162 + *(int *)(sub_100008384((uint64_t *)&unk_1007BCFC0) + 48);
            v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
            *(_QWORD *)(v0 + 1608) = v169;
            v169(v162, v164, v166);
            v170 = sub_100008384(&qword_1007B5280);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v168, v167, v170);
            v323(v162, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v163);
            sub_10053D3FC(v162, v161);
            v331(v162, v163);
            v342(v161, v339);
            return swift_task_switch(sub_100418294, 0, 0);
          }
          else
          {
            v305 = v122;
            v171 = (_QWORD *)(v0 + 456);
            v172 = *(_QWORD *)(v0 + 1232);
            v173 = *(_QWORD *)(v0 + 1224);
            v174 = *(_QWORD *)(v0 + 1112);
            v175 = *(_QWORD *)(v0 + 784);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 1120) + 32))(v172, *(_QWORD *)(v0 + 936), v174);
            ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v173, v172, v174);
            v176 = swift_retain_n(v175, 2);
            v177 = Logger.logObject.getter(v176);
            v178 = static os_log_type_t.default.getter(v177);
            if (os_log_type_enabled(v177, v178))
            {
              v270 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
              v179 = *(_QWORD *)(v0 + 1328);
              v324 = v178;
              v180 = *(_QWORD *)(v0 + 1224);
              v316 = (void (*)(uint64_t, uint64_t))v57;
              v181 = *(_QWORD *)(v0 + 1112);
              v182 = *(_QWORD *)(v0 + 1104);
              v274 = *(_QWORD *)(v0 + 1088);
              v262 = *(_QWORD *)(v0 + 1080);
              v266 = *(_QWORD *)(v0 + 1312);
              v280 = *(_QWORD *)(v0 + 1064);
              v291 = *(_QWORD *)(v0 + 784);
              v183 = swift_slowAlloc(32, -1);
              v285 = swift_slowAlloc(64, -1);
              v343[0] = v285;
              *(_DWORD *)v183 = 141558531;
              *(_QWORD *)(v0 + 752) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 752, v0 + 760, v183 + 4);
              *(_WORD *)(v183 + 12) = 2081;
              v184 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
              v185 = dispatch thunk of CustomStringConvertible.description.getter(v181, v184);
              v187 = (const char *)v186;
              *(_QWORD *)(v0 + 760) = sub_100228BD8(v185, v186, v343);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 760, v0 + 768, v183 + 14);
              v188 = swift_bridgeObjectRelease(v187);
              v189 = v305(v180, v181, v188);
              *(_WORD *)(v183 + 22) = 2080;
              v190 = CurrentValueSubject.value.getter(v189);
              SFAirDropReceive.Transfer.askRequest.getter(v190);
              v191 = v270(v179, v266);
              SFAirDropReceive.AskRequest.type.getter(v191);
              v192 = v182;
              v171 = (_QWORD *)(v0 + 456);
              v309(v192, v274);
              v193 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
              v194 = dispatch thunk of CustomStringConvertible.description.getter(v280, v193);
              v196 = v195;
              v316(v262, v280);
              *(_QWORD *)(v0 + 744) = sub_100228BD8(v194, (unint64_t)v196, v343);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 752, v183 + 24);
              swift_bridgeObjectRelease(v196);
              swift_release_n(v291, 2);
              _os_log_impl((void *)&_mh_execute_header, v177, v324, "Exchange Contact CONTINUE. Respond to sender {contactToSend: %{private,mask.hash}s, type: %s}", (uint8_t *)v183, 0x20u);
              swift_arrayDestroy(v285, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v285, -1, -1);
              swift_slowDealloc(v183, -1, -1);

            }
            else
            {
              v198 = *(_QWORD *)(v0 + 1224);
              v199 = *(_QWORD *)(v0 + 1112);
              v200 = *(_QWORD *)(v0 + 784);

              ((void (*)(uint64_t, uint64_t))v305)(v198, v199);
              v197 = swift_release_n(v200, 2);
            }
            v201 = *(_QWORD *)(v0 + 1008);
            v202 = *(_QWORD *)(v0 + 984);
            SFAirDrop.ContactRequest.contact.getter(v197);
            if (v329(v202, 1, v201) == 1)
            {
              sub_10000D0F0(*(_QWORD *)(v0 + 984), &qword_1007BA300);
              v203 = 0;
              v204 = 0;
            }
            else
            {
              v205 = *(_QWORD *)(v0 + 1016);
              v206 = *(_QWORD *)(v0 + 1008);
              v207 = *(_QWORD *)(v0 + 984);
              v203 = SFAirDrop.ContactInfo.accountHandle.getter();
              v204 = v208;
              (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v207, v206);
            }
            v209 = *(_QWORD *)(v0 + 1232);
            v210 = *(_QWORD *)(v0 + 1216);
            v211 = *(_QWORD *)(v0 + 1120);
            v212 = *(_QWORD *)(v0 + 1112);
            sub_10038F828(v203, v204, v171);
            v213 = *(_QWORD *)(v0 + 456);
            v214 = *(const char **)(v0 + 464);
            v215 = *(_QWORD *)(v0 + 472);
            v325 = *(_QWORD *)(v0 + 496);
            v332 = *(_QWORD *)(v0 + 488);
            v310 = *(_QWORD *)(v0 + 512);
            v317 = *(_QWORD *)(v0 + 504);
            v286 = *(_QWORD *)(v0 + 520);
            v292 = *(_QWORD *)(v0 + 480);
            v277 = *(_QWORD *)(v0 + 536);
            v281 = *(const char **)(v0 + 528);
            v216 = swift_bridgeObjectRelease(v204);
            (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v211 + 104))(v210, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v212, v216);
            v217 = static SFAirDrop.ContactRequest.== infix(_:_:)(v209, v210);
            ((void (*)(uint64_t, uint64_t))v305)(v210, v212);
            if ((v217 & 1) != 0)
            {
              v213 = 0;
              v214 = 0;
              v215 = 0;
              v218 = 0;
              v219 = 0;
              v220 = 0;
              v221 = 0;
              v222 = 0;
              v223 = 0;
              v224 = 0;
              v225 = 0;
            }
            else
            {
              sub_10031B134((_QWORD *)(v0 + 456), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
              v223 = v286;
              v218 = v292;
              v220 = v325;
              v219 = v332;
              v222 = v310;
              v221 = v317;
              v225 = v277;
              v224 = v281;
            }
            v326 = v220;
            v333 = v219;
            v311 = v222;
            v318 = v221;
            *(_QWORD *)(v0 + 1584) = v225;
            *(_QWORD *)(v0 + 1576) = v224;
            *(_QWORD *)(v0 + 1568) = v223;
            *(_QWORD *)(v0 + 1560) = v222;
            *(_QWORD *)(v0 + 1552) = v221;
            *(_QWORD *)(v0 + 1544) = v220;
            *(_QWORD *)(v0 + 1536) = v219;
            *(_QWORD *)(v0 + 1528) = v218;
            *(_QWORD *)(v0 + 1520) = v215;
            *(_QWORD *)(v0 + 1512) = v214;
            *(_QWORD *)(v0 + 1504) = v213;
            v226 = *(_QWORD *)(v0 + 1328);
            v282 = v213;
            v287 = *(_QWORD *)(v0 + 1312);
            v293 = *(_QWORD *)(v0 + 1216);
            v297 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
            v306 = *(_QWORD *)(v0 + 904);
            v227 = *(_QWORD *)(v0 + 880);
            *(_QWORD *)(v0 + 104) = v213;
            *(_QWORD *)(v0 + 112) = v214;
            *(_QWORD *)(v0 + 120) = v215;
            *(_QWORD *)(v0 + 128) = v218;
            *(_QWORD *)(v0 + 136) = v219;
            *(_QWORD *)(v0 + 144) = v220;
            *(_QWORD *)(v0 + 152) = v221;
            *(_QWORD *)(v0 + 160) = v222;
            *(_QWORD *)(v0 + 168) = v223;
            *(_QWORD *)(v0 + 176) = v224;
            *(_QWORD *)(v0 + 184) = v225;
            v228 = v223;
            v229 = v337();
            v230 = CurrentValueSubject.value.getter(v229);
            SFAirDropReceive.Transfer.id.getter(v230);
            v297(v226, v287);
            sub_10031B004(v282, v214, v215, v218, v333, v326, v318, v311, v228, v224);
            sub_100478E78(v293, v227, v0 + 104, v306);
            v231 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
            *(_QWORD *)(v0 + 1592) = v231;
            *v231 = v0;
            v231[1] = sub_100418090;
            return sub_10050B098(*(_QWORD *)(v0 + 904));
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100416F68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1424);
  *(_QWORD *)(*v1 + 1432) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10041DBBC;
  else
    v4 = sub_100416FCC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1376), 0);
}

uint64_t sub_100416FCC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v35)(void);
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD, uint64_t);
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  __n128 v65;
  uint64_t (*v66)(uint64_t, uint64_t, __n128);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  const char *v73;
  uint64_t v74;
  unint64_t v75;
  const char *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  const char *v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  const char *v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  const char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  const char *v170;
  uint64_t v171;
  __n128 v172;
  char v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  const char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t (*v192)(uint64_t, uint64_t);
  uint64_t v193;
  uint64_t (*v194)(uint64_t, uint64_t);
  uint64_t v195;
  uint64_t (*v196)(uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  const char *v204;
  os_log_type_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  NSObject *v210;
  os_log_t v211;
  os_log_t v212;
  os_log_t v213;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  os_log_t logc;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  os_log_type_t typeb[8];
  os_log_type_t type[8];
  os_log_type_t typec[8];
  os_log_type_t typed;
  os_log_type_t typea[8];
  unint64_t typee;
  uint64_t v228;
  void (*v229)(uint64_t, uint64_t);
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t (*v233)(uint64_t, uint64_t);
  void (*v234)(uint64_t, uint64_t);
  void (*v235)(uint64_t, _QWORD, uint64_t);
  void (*v236)(uint64_t, uint64_t);
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  unsigned int (*v240)(_QWORD, _QWORD, _QWORD);
  uint64_t v241;
  void (*v242)(uint64_t, uint64_t);
  unsigned int (*v243)(_QWORD, _QWORD, _QWORD);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(void);
  os_log_type_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t (*v251)(uint64_t, _QWORD, _QWORD);
  uint64_t (*v252)(uint64_t, uint64_t, __n128);
  void (*v253)(uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255[2];

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
  log = (os_log_t)(v0 + 720);
  v218 = v0 + 712;
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1312);
  v4 = *(_QWORD *)(v0 + 1104);
  *(_QWORD *)typeb = *(_QWORD *)(v0 + 1096);
  v5 = *(_QWORD *)(v0 + 1080);
  v228 = *(_QWORD *)(v0 + 1088);
  v232 = *(_QWORD *)(v0 + 1072);
  v239 = *(_QWORD *)(v0 + 1064);
  v246 = *(_QWORD *)(v0 + 1016);
  v250 = *(_QWORD *)(v0 + 1008);
  v6 = *(_QWORD *)(v0 + 1000);
  v7 = *(_QWORD *)(v0 + 784);
  v8 = sub_100478C4C(*(_QWORD *)(v0 + 1248));
  *(_QWORD *)(v0 + 1440) = *(_QWORD *)(v7
                                     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v9 = CurrentValueSubject.value.getter(v8);
  SFAirDropReceive.Transfer.askRequest.getter(v9);
  v10 = v1(v2, v3);
  SFAirDropReceive.AskRequest.type.getter(v10);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)typeb + 8);
  *(_QWORD *)(v0 + 1448) = v11;
  v12 = v228;
  v229 = v11;
  v13 = ((uint64_t (*)(uint64_t, uint64_t))v11)(v4, v12);
  *(_BYTE *)(v0 + 2008) = SFAirDrop.TransferType.isOnlyExchange.getter(v13) & 1;
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v232 + 8);
  *(_QWORD *)(v0 + 1456) = v14;
  v15 = v14(v5, v239);
  SFAirDrop.ContactRequest.contact.getter(v15);
  v16 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v246 + 48);
  *(_QWORD *)(v0 + 1464) = v16;
  if (v16(v6, 1, v250) == 1)
  {
    v17 = *(_QWORD *)(v0 + 1120);
    v18 = *(_QWORD *)(v0 + 1112);
    v19 = *(_QWORD *)(v0 + 912);
    v20 = *(_QWORD *)(v0 + 776);
    sub_10000D0F0(*(_QWORD *)(v0 + 1000), &qword_1007BA300);
    sub_100221F28(v20, v19, &qword_1007BA320);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v18);
    v22 = *(_QWORD *)(v0 + 1144);
    v23 = *(_QWORD *)(v0 + 1120);
    v24 = *(_QWORD *)(v0 + 1112);
    v25 = *(_QWORD *)(v0 + 912);
    if (v21 == 1)
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v24);
      sub_10000D0F0(v25, &qword_1007BA320);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v22, *(_QWORD *)(v0 + 912), v24);
    }
    v47 = *(_QWORD *)(v0 + 1144);
    v48 = *(_QWORD *)(v0 + 1128);
    v49 = *(_QWORD *)(v0 + 1112);
    v50 = *(_QWORD *)(v0 + 784);
    v51 = *(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 1120) + 16);
    v51(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1248), v49);
    v251 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))v51;
    v51(v48, v47, v49);
    v52 = swift_retain_n(v50, 2);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v194 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
      v55 = *(_QWORD *)(v0 + 1328);
      v191 = *(_QWORD *)(v0 + 1312);
      v248 = v54;
      v56 = *(_QWORD *)(v0 + 1136);
      *(_QWORD *)typec = *(_QWORD *)(v0 + 1128);
      v188 = *(_QWORD *)(v0 + 1120);
      v57 = *(_QWORD *)(v0 + 1112);
      v58 = *(_QWORD *)(v0 + 1104);
      v59 = *(_QWORD *)(v0 + 1080);
      v197 = *(_QWORD *)(v0 + 1088);
      v200 = *(_QWORD *)(v0 + 1064);
      v206 = *(_QWORD *)(v0 + 784);
      v234 = (void (*)(uint64_t, uint64_t))v14;
      v60 = swift_slowAlloc(52, -1);
      v241 = swift_slowAlloc(96, -1);
      v255[0] = v241;
      *(_DWORD *)v60 = 141559043;
      *(_QWORD *)(v0 + 712) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v218, log, v60 + 4);
      *(_WORD *)(v60 + 12) = 2081;
      loga = v53;
      v219 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      v61 = v57;
      v62 = dispatch thunk of CustomStringConvertible.description.getter(v57, v219);
      v64 = (const char *)v63;
      *(_QWORD *)(v0 + 592) = sub_100228BD8(v62, v63, v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600, v60 + 14);
      v65 = swift_bridgeObjectRelease(v64);
      v66 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v188 + 8);
      v67 = v66(v56, v61, v65);
      *(_WORD *)(v60 + 22) = 2080;
      v68 = CurrentValueSubject.value.getter(v67);
      SFAirDropReceive.Transfer.askRequest.getter(v68);
      v69 = v194(v55, v191);
      SFAirDropReceive.AskRequest.type.getter(v69);
      v229(v58, v197);
      v70 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v71 = dispatch thunk of CustomStringConvertible.description.getter(v200, v70);
      v73 = v72;
      v234(v59, v200);
      *(_QWORD *)(v0 + 600) = sub_100228BD8(v71, (unint64_t)v73, v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v0 + 608, v60 + 24);
      swift_bridgeObjectRelease(v73);
      swift_release_n(v206, 2);
      *(_WORD *)(v60 + 32) = 2160;
      *(_QWORD *)(v0 + 608) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 608, v0 + 616, v60 + 34);
      *(_WORD *)(v60 + 42) = 2081;
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v61, v219);
      v76 = (const char *)v75;
      *(_QWORD *)(v0 + 616) = sub_100228BD8(v74, v75, v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624, v60 + 44);
      v77 = swift_bridgeObjectRelease(v76);
      v66(*(_QWORD *)typec, v61, v77);
      _os_log_impl((void *)&_mh_execute_header, loga, v248, "Exchange Contact END - Sender did not send contact {contactRequest: %{private,mask.hash}s, type: %s, contactToSend: %{private,mask.hash}s}", (uint8_t *)v60, 0x34u);
      swift_arrayDestroy(v241, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v241, -1, -1);
      swift_slowDealloc(v60, -1, -1);

    }
    else
    {
      v81 = *(_QWORD *)(v0 + 1136);
      v82 = *(_QWORD *)(v0 + 1128);
      v83 = *(_QWORD *)(v0 + 1120);
      v84 = *(_QWORD *)(v0 + 1112);
      v85 = *(_QWORD *)(v0 + 784);

      v66 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v83 + 8);
      ((void (*)(uint64_t, uint64_t))v66)(v81, v84);
      swift_release_n(v85, 2);
      ((void (*)(uint64_t, uint64_t))v66)(v82, v84);
    }
    *(_QWORD *)(v0 + 1968) = v66;
    v86 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    v87 = *(_QWORD *)(v0 + 1328);
    v88 = *(_QWORD *)(v0 + 1312);
    v89 = *(_QWORD *)(v0 + 1216);
    v90 = *(_QWORD *)(v0 + 888);
    v91 = *(_QWORD *)(v0 + 880);
    v92 = v251(v89, *(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1112));
    v93 = CurrentValueSubject.value.getter(v92);
    SFAirDropReceive.Transfer.id.getter(v93);
    v86(v87, v88);
    *(_QWORD *)(v0 + 96) = 0;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    sub_100478E78(v89, v91, v0 + 16, v90);
    v94 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
    *(_QWORD *)(v0 + 1976) = v94;
    *v94 = v0;
    v94[1] = sub_10041D7CC;
    return sub_10050B098(*(_QWORD *)(v0 + 888));
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 1248);
    v27 = *(_QWORD *)(v0 + 1240);
    v28 = *(_QWORD *)(v0 + 1120);
    v29 = *(_QWORD *)(v0 + 1112);
    v30 = *(_QWORD *)(v0 + 1056);
    v31 = *(_QWORD *)(v0 + 1008);
    v32 = *(_QWORD *)(v0 + 1000);
    v33 = *(_QWORD *)(v0 + 784);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1016) + 32);
    *(_QWORD *)(v0 + 1472) = v34;
    v34(v30, v32, v31);
    v35 = *(uint64_t (**)(void))(v28 + 16);
    *(_QWORD *)(v0 + 1480) = v35;
    v247 = v35;
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v27, v26, v29);
    v36 = swift_retain_n(v33, 2);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    v39 = os_log_type_enabled(v37, v38);
    v40 = *(_QWORD *)(v0 + 1240);
    if (v39)
    {
      v205 = v38;
      *(_QWORD *)type = v0 + 704;
      v41 = *(_QWORD *)(v0 + 1008);
      v42 = *(_QWORD *)(v0 + 992);
      v43 = swift_slowAlloc(32, -1);
      v202 = swift_slowAlloc(64, -1);
      v255[0] = v202;
      *(_DWORD *)v43 = 141558531;
      *(_QWORD *)(v0 + 720) = 1752392040;
      v44 = UnsafeMutableRawBufferPointer.copyMemory(from:)(log, v0 + 728, v43 + 4);
      *(_WORD *)(v43 + 12) = 2081;
      SFAirDrop.ContactRequest.contact.getter(v44);
      v233 = v14;
      v240 = v16;
      v210 = v37;
      if (v16(v42, 1, v41) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 992), &qword_1007BA300);
        v45 = (const char *)0x800000010061AD50;
        v46 = 0xD000000000000020;
      }
      else
      {
        v96 = *(_QWORD *)(v0 + 1016);
        v97 = *(_QWORD *)(v0 + 1008);
        v98 = *(_QWORD *)(v0 + 992);
        v99 = SFAirDrop.ContactInfo.description.getter();
        v45 = v100;
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v98, v97);
        v46 = v99;
      }
      v101 = *(_QWORD *)(v0 + 1328);
      v189 = *(_QWORD *)(v0 + 1312);
      v192 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
      v102 = *(_QWORD *)(v0 + 1240);
      v103 = *(_QWORD *)(v0 + 1120);
      v104 = *(_QWORD *)(v0 + 1112);
      v105 = *(_QWORD *)(v0 + 1104);
      v106 = *(_QWORD *)(v0 + 1080);
      v195 = *(_QWORD *)(v0 + 1088);
      v198 = *(_QWORD *)(v0 + 1064);
      logb = *(os_log_t *)(v0 + 784);
      *(_QWORD *)(v0 + 704) = sub_100228BD8(v46, (unint64_t)v45, v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(*(_QWORD *)type, v218, v43 + 14);
      v107 = swift_bridgeObjectRelease(v45);
      v252 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v103 + 8);
      v108 = v252(v102, v104, v107);
      *(_WORD *)(v43 + 22) = 2080;
      v109 = CurrentValueSubject.value.getter(v108);
      SFAirDropReceive.Transfer.askRequest.getter(v109);
      v110 = v192(v101, v189);
      SFAirDropReceive.AskRequest.type.getter(v110);
      v229(v105, v195);
      v111 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v112 = dispatch thunk of CustomStringConvertible.description.getter(v198, v111);
      v114 = v113;
      v14 = v233;
      v233(v106, v198);
      *(_QWORD *)(v0 + 696) = sub_100228BD8(v112, (unint64_t)v114, v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 696, *(_QWORD *)type, v43 + 24);
      swift_bridgeObjectRelease(v114);
      swift_release_n(logb, 2);
      _os_log_impl((void *)&_mh_execute_header, v210, v205, "Exchange Contact CONTINUE {senderContact: %{private,mask.hash}s, type: %s}", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy(v202, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v202, -1, -1);
      swift_slowDealloc(v43, -1, -1);

      v16 = v240;
    }
    else
    {
      v78 = *(_QWORD *)(v0 + 1120);
      v79 = *(_QWORD *)(v0 + 1112);
      v80 = *(_QWORD *)(v0 + 784);

      v252 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v78 + 8);
      ((void (*)(uint64_t, uint64_t))v252)(v40, v79);
      swift_release_n(v80, 2);
    }
    *(_QWORD *)(v0 + 1488) = v252;
    v115 = *(_QWORD *)(v0 + 1120);
    v116 = *(_QWORD *)(v0 + 1112);
    v117 = *(_QWORD *)(v0 + 936);
    sub_100221F28(*(_QWORD *)(v0 + 776), v117, &qword_1007BA320);
    v118 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
    *(_QWORD *)(v0 + 1496) = v118;
    if (v118(v117, 1, v116) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 936), &qword_1007BA320);
      v235 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
      v242 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
      v119 = *(_QWORD *)(v0 + 1328);
      v249 = *(_QWORD *)(v0 + 1312);
      v253 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
      v120 = *(_QWORD *)(v0 + 1304);
      v121 = *(_QWORD *)(v0 + 1288);
      v122 = *(_QWORD *)(v0 + 1056);
      v123 = *(_QWORD *)(v0 + 1016);
      v124 = *(_QWORD *)(v0 + 1008);
      v125 = *(_QWORD *)(v0 + 872);
      sub_10041F8F0(v122, v125);
      v126 = v120 + *(int *)(sub_100008384((uint64_t *)&unk_1007BCFC0) + 48);
      v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16);
      *(_QWORD *)(v0 + 1608) = v127;
      v127(v120, v122, v124);
      v128 = sub_100008384(&qword_1007B5280);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v125, v128);
      v235(v120, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v121);
      sub_10053D3FC(v120, v119);
      v242(v120, v121);
      v253(v119, v249);
      return swift_task_switch(sub_100418294, 0, 0);
    }
    else
    {
      v129 = *(_QWORD *)(v0 + 1232);
      v130 = *(_QWORD *)(v0 + 1224);
      v131 = *(_QWORD *)(v0 + 1112);
      v132 = *(_QWORD *)(v0 + 784);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 1120) + 32))(v129, *(_QWORD *)(v0 + 936), v131);
      ((void (*)(uint64_t, uint64_t, uint64_t))v247)(v130, v129, v131);
      v133 = swift_retain_n(v132, 2);
      v134 = Logger.logObject.getter(v133);
      v135 = static os_log_type_t.default.getter(v134);
      if (os_log_type_enabled(v134, v135))
      {
        v196 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
        v243 = v16;
        v136 = *(_QWORD *)(v0 + 1328);
        v193 = *(_QWORD *)(v0 + 1312);
        typed = v135;
        v137 = *(_QWORD *)(v0 + 1224);
        v236 = (void (*)(uint64_t, uint64_t))v14;
        v138 = *(_QWORD *)(v0 + 1112);
        v139 = *(_QWORD *)(v0 + 1104);
        v199 = *(_QWORD *)(v0 + 1088);
        v190 = *(_QWORD *)(v0 + 1080);
        v203 = *(_QWORD *)(v0 + 1064);
        v211 = *(os_log_t *)(v0 + 784);
        v140 = swift_slowAlloc(32, -1);
        v207 = swift_slowAlloc(64, -1);
        v255[0] = v207;
        *(_DWORD *)v140 = 141558531;
        *(_QWORD *)(v0 + 752) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 752, v0 + 760, v140 + 4);
        *(_WORD *)(v140 + 12) = 2081;
        v141 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
        v142 = dispatch thunk of CustomStringConvertible.description.getter(v138, v141);
        v144 = (const char *)v143;
        *(_QWORD *)(v0 + 760) = sub_100228BD8(v142, v143, v255);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 760, v0 + 768, v140 + 14);
        v145 = swift_bridgeObjectRelease(v144);
        v146 = v252(v137, v138, v145);
        *(_WORD *)(v140 + 22) = 2080;
        v147 = CurrentValueSubject.value.getter(v146);
        SFAirDropReceive.Transfer.askRequest.getter(v147);
        v148 = v136;
        v16 = v243;
        v149 = v196(v148, v193);
        SFAirDropReceive.AskRequest.type.getter(v149);
        v229(v139, v199);
        v150 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        v151 = dispatch thunk of CustomStringConvertible.description.getter(v203, v150);
        v153 = v152;
        v236(v190, v203);
        *(_QWORD *)(v0 + 744) = sub_100228BD8(v151, (unint64_t)v153, v255);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 752, v140 + 24);
        swift_bridgeObjectRelease(v153);
        swift_release_n(v211, 2);
        _os_log_impl((void *)&_mh_execute_header, v134, typed, "Exchange Contact CONTINUE. Respond to sender {contactToSend: %{private,mask.hash}s, type: %s}", (uint8_t *)v140, 0x20u);
        swift_arrayDestroy(v207, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v207, -1, -1);
        swift_slowDealloc(v140, -1, -1);

      }
      else
      {
        v155 = *(_QWORD *)(v0 + 1224);
        v156 = *(_QWORD *)(v0 + 1112);
        v157 = *(_QWORD *)(v0 + 784);

        ((void (*)(uint64_t, uint64_t))v252)(v155, v156);
        v154 = swift_release_n(v157, 2);
      }
      v158 = *(_QWORD *)(v0 + 1008);
      v159 = *(_QWORD *)(v0 + 984);
      SFAirDrop.ContactRequest.contact.getter(v154);
      if (v16(v159, 1, v158) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 984), &qword_1007BA300);
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v162 = *(_QWORD *)(v0 + 1016);
        v163 = *(_QWORD *)(v0 + 1008);
        v164 = *(_QWORD *)(v0 + 984);
        v160 = SFAirDrop.ContactInfo.accountHandle.getter();
        v161 = v165;
        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v164, v163);
      }
      v166 = *(_QWORD *)(v0 + 1232);
      v167 = *(_QWORD *)(v0 + 1216);
      v168 = *(_QWORD *)(v0 + 1120);
      v169 = *(_QWORD *)(v0 + 1112);
      sub_10038F828(v160, v161, (_QWORD *)(v0 + 456));
      v171 = *(_QWORD *)(v0 + 456);
      v170 = *(const char **)(v0 + 464);
      v208 = *(_QWORD *)(v0 + 480);
      v212 = *(os_log_t *)(v0 + 472);
      v237 = *(_QWORD *)(v0 + 496);
      v244 = *(_QWORD *)(v0 + 488);
      v230 = *(_QWORD *)(v0 + 504);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 512);
      v220 = *(_QWORD *)(v0 + 520);
      v201 = *(_QWORD *)(v0 + 536);
      v204 = *(const char **)(v0 + 528);
      v172 = swift_bridgeObjectRelease(v161);
      (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v168 + 104))(v167, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v169, v172);
      v173 = static SFAirDrop.ContactRequest.== infix(_:_:)(v166, v167);
      ((void (*)(uint64_t, uint64_t))v252)(v167, v169);
      if ((v173 & 1) != 0)
      {
        v171 = 0;
        v170 = 0;
        v174 = 0;
        v175 = 0;
        v176 = 0;
        v177 = 0;
        v178 = 0;
        v179 = 0;
        v180 = 0;
        v181 = 0;
        v182 = 0;
      }
      else
      {
        sub_10031B134((_QWORD *)(v0 + 456), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
        v175 = v208;
        v174 = (uint64_t)v212;
        v177 = v237;
        v176 = v244;
        v178 = v230;
        v179 = *(_QWORD *)typea;
        v180 = v220;
        v182 = v201;
        v181 = v204;
      }
      v221 = v180;
      v238 = v177;
      v245 = v176;
      v231 = v178;
      typee = v179;
      *(_QWORD *)(v0 + 1584) = v182;
      *(_QWORD *)(v0 + 1576) = v181;
      *(_QWORD *)(v0 + 1568) = v180;
      *(_QWORD *)(v0 + 1560) = v179;
      *(_QWORD *)(v0 + 1552) = v178;
      *(_QWORD *)(v0 + 1544) = v177;
      *(_QWORD *)(v0 + 1536) = v176;
      *(_QWORD *)(v0 + 1528) = v175;
      *(_QWORD *)(v0 + 1520) = v174;
      *(_QWORD *)(v0 + 1512) = v170;
      *(_QWORD *)(v0 + 1504) = v171;
      v183 = *(_QWORD *)(v0 + 1328);
      v209 = *(_QWORD *)(v0 + 1312);
      v213 = *(os_log_t *)(v0 + 1216);
      logc = *(os_log_t *)(v0 + 1416);
      v254 = *(_QWORD *)(v0 + 904);
      v184 = *(_QWORD *)(v0 + 880);
      *(_QWORD *)(v0 + 104) = v171;
      *(_QWORD *)(v0 + 112) = v170;
      *(_QWORD *)(v0 + 120) = v174;
      *(_QWORD *)(v0 + 128) = v175;
      *(_QWORD *)(v0 + 136) = v176;
      *(_QWORD *)(v0 + 144) = v177;
      *(_QWORD *)(v0 + 152) = v178;
      *(_QWORD *)(v0 + 160) = v179;
      *(_QWORD *)(v0 + 168) = v180;
      *(_QWORD *)(v0 + 176) = v181;
      *(_QWORD *)(v0 + 184) = v182;
      v185 = v247();
      v186 = CurrentValueSubject.value.getter(v185);
      SFAirDropReceive.Transfer.id.getter(v186);
      ((void (*)(uint64_t, uint64_t))logc)(v183, v209);
      sub_10031B004(v171, v170, v174, v175, v245, v238, v231, typee, v221, v181);
      sub_100478E78((uint64_t)v213, v184, v0 + 104, v254);
      v187 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
      *(_QWORD *)(v0 + 1592) = v187;
      *v187 = v0;
      v187[1] = sub_100418090;
      return sub_10050B098(*(_QWORD *)(v0 + 904));
    }
  }
}

uint64_t sub_100418090()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1592);
  *(_QWORD *)(*v1 + 1600) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10041E2B0;
  else
    v4 = sub_1004180F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1376), 0);
}

uint64_t sub_1004180F4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1232);
  v3 = *(_QWORD *)(v0 + 1112);
  v4 = *(_QWORD *)(v0 + 904);
  sub_10031B09C(*(_QWORD *)(v0 + 1504), *(const char **)(v0 + 1512), *(_QWORD *)(v0 + 1520), *(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1536), *(_QWORD *)(v0 + 1544), *(_QWORD *)(v0 + 1552), *(_QWORD *)(v0 + 1560), *(_QWORD *)(v0 + 1568), *(const char **)(v0 + 1576));
  sub_10031B134((_QWORD *)(v0 + 456), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v4, _s16ExchangeResponseVMa);
  v1(v2, v3);
  v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
  v5 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1312);
  v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
  v6 = *(_QWORD *)(v0 + 1304);
  v7 = *(_QWORD *)(v0 + 1288);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 872);
  sub_10041F8F0(v8, v11);
  v12 = v6 + *(int *)(sub_100008384((uint64_t *)&unk_1007BCFC0) + 48);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(_QWORD *)(v0 + 1608) = v13;
  v13(v6, v8, v10);
  v14 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v11, v14);
  v16(v6, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v7);
  sub_10053D3FC(v6, v5);
  v17(v6, v7);
  v19(v5, v18);
  return swift_task_switch(sub_100418294, 0, 0);
}

uint64_t sub_100418294()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[109];
  v2 = swift_task_alloc(32);
  v0[202] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[203] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[204] = v4;
  *v4 = v0;
  v4[1] = sub_10041833C;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[108], &unk_1007B6C10, v2, sub_1004233EC, v3, 0, 0, v0[105]);
}

uint64_t sub_10041833C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1632);
  *(_QWORD *)(*(_QWORD *)v1 + 1640) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004197F8;
    v5 = 0;
  }
  else
  {
    v6 = v2[203];
    v7 = v2[202];
    v8 = v2[172];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_1004183BC;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1004183BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void (*v24)(uint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  __n128 v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  const char *v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  void (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t);
  void (*v64)(uint64_t, _QWORD, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  const char *v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  _BOOL4 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  const char *v141;
  void (*v142)(uint64_t, uint64_t, __n128);
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  void (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  const char *v165;
  uint64_t v166;
  __n128 v167;
  char v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  const char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(void);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  const char *v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t, uint64_t);
  uint64_t v227;
  void (*v228)(uint64_t, _QWORD, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(uint64_t, uint64_t);
  void (*v234)(uint64_t, uint64_t);
  void (*v235)(uint64_t, uint64_t);
  uint64_t v236;
  void (*v237)(uint64_t, uint64_t);
  uint64_t v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  uint64_t v250;
  void (*v251)(uint64_t, uint64_t);
  uint64_t v252;
  void (*v253)(uint64_t, _QWORD, uint64_t);
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unsigned int (*v257)(uint64_t, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  void (*v260)(uint64_t, uint64_t);
  uint64_t (*v261)(uint64_t, uint64_t);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  char v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(uint64_t, uint64_t);
  unsigned int (*v278)(uint64_t, uint64_t, uint64_t);
  uint64_t v279;
  uint64_t v280;
  uint64_t v281[2];

  v264 = v0 + 2000;
  v1 = *(_QWORD *)(v0 + 864);
  v2 = *(_QWORD *)(v0 + 856);
  v3 = *(_QWORD *)(v0 + 848);
  v4 = *(_QWORD *)(v0 + 840);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v4);
  v5 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v6 = dispatch thunk of static Equatable.== infix(_:_:)(v1, v2, v4, v5);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 1648) = v7;
  v8 = v7(v2, v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 67109120;
    *(_DWORD *)(v0 + 1992) = (v6 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1992, v0 + 1996, v11 + 4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Exchange Contact CONTINUE. Accept permission {shouldAcceptSenderContact: %{BOOL}d}", v11, 8u);
    swift_slowDealloc(v11, -1, -1);
  }
  v271 = v6;
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 976);

  SFAirDrop.ContactRequest.contact.getter(v15);
  if (v12(v14, 1, v13) == 1)
  {
    v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
    v17 = *(_QWORD *)(v0 + 1248);
    v18 = *(_QWORD *)(v0 + 1192);
    v19 = *(_QWORD *)(v0 + 1112);
    sub_10000D0F0(*(_QWORD *)(v0 + 976), &qword_1007BA300);
    v20 = v16(v18, v17, v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
    if (v23)
    {
      v249 = *(unsigned __int8 *)(v0 + 2008);
      v25 = *(_QWORD *)(v0 + 1192);
      v26 = *(_QWORD *)(v0 + 1112);
      v27 = swift_slowAlloc(34, -1);
      v236 = swift_slowAlloc(32, -1);
      v281[0] = v236;
      *(_DWORD *)v27 = 141558787;
      *(_QWORD *)(v0 + 680) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 680, v0 + 688, v27 + 4);
      *(_WORD *)(v27 + 12) = 2081;
      v28 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v26, v28);
      v31 = (const char *)v30;
      *(_QWORD *)(v0 + 688) = sub_100228BD8(v29, v30, v281);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v0 + 696, v27 + 14);
      v32 = swift_bridgeObjectRelease(v31);
      v24(v25, v26, v32);
      *(_WORD *)(v27 + 22) = 1024;
      *(_DWORD *)(v0 + 2004) = (v271 & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2004, v0 + 2008, v27 + 24);
      *(_WORD *)(v27 + 28) = 1024;
      *(_DWORD *)(v0 + 2000) = v249;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v264, v0 + 2004, v27 + 30);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Exchange Contact IMPORT SKIP {contactRequest: %{private,mask.hash}s, shouldAcceptSenderContact: %{BOOL}d, isExchangeType: %{BOOL}d}", (uint8_t *)v27, 0x22u);
      swift_arrayDestroy(v236, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v236, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {
      v52 = *(_QWORD *)(v0 + 1192);
      v53 = *(_QWORD *)(v0 + 1112);

      ((void (*)(uint64_t, uint64_t))v24)(v52, v53);
    }
    *(_OWORD *)(v0 + 1816) = 0u;
    v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1496);
    v55 = *(_QWORD *)(v0 + 1112);
    v56 = *(_QWORD *)(v0 + 920);
    sub_100221F28(*(_QWORD *)(v0 + 776), v56, &qword_1007BA320);
    LODWORD(v55) = v54(v56, 1, v55);
    v57 = sub_10000D0F0(v56, &qword_1007BA320);
    if ((_DWORD)v55 == 1)
    {
      v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v59 = *(_QWORD *)(v0 + 1008);
      v60 = *(_QWORD *)(v0 + 968);
      SFAirDrop.ContactRequest.contact.getter(v57);
      if (v58(v60, 1, v59) == 1)
      {
        v61 = (uint64_t *)(v0 + 968);
      }
      else
      {
        v86 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
        v87 = *(_QWORD *)(v0 + 1008);
        v88 = *(_QWORD *)(v0 + 960);
        (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 1472))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 968), v87);
        sub_1003EF5A8(v88);
        if (v86(v88, 1, v87) != 1)
        {
          v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1608);
          v253 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
          v260 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
          v129 = *(_QWORD *)(v0 + 1328);
          v267 = *(_QWORD *)(v0 + 1312);
          v277 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
          v130 = *(_QWORD *)(v0 + 1304);
          v131 = *(_QWORD *)(v0 + 1288);
          v132 = *(_QWORD *)(v0 + 1032);
          v133 = *(_QWORD *)(v0 + 1024);
          v134 = *(_QWORD *)(v0 + 1008);
          v135 = *(_QWORD *)(v0 + 792);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1472))(v133, *(_QWORD *)(v0 + 960), v134);
          sub_100420578(v132, v133, v135);
          v136 = v130 + *(int *)(sub_100008384(&qword_1007BB628) + 48);
          v128(v130, v133, v134);
          v137 = sub_100008384((uint64_t *)&unk_1007BB630);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v136, v135, v137);
          v253(v130, enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:), v131);
          sub_10053D3FC(v130, v129);
          v260(v130, v131);
          v277(v129, v267);
          return swift_task_switch(sub_10041C49C, 0, 0);
        }
        v61 = (uint64_t *)(v0 + 960);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1016) + 8))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 1008));
      }
      v89 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
      v90 = *(_QWORD *)(v0 + 1248);
      v91 = *(_QWORD *)(v0 + 1160);
      v92 = *(_QWORD *)(v0 + 1112);
      sub_10000D0F0(*v61, &qword_1007BA300);
      v93 = v89(v91, v90, v92);
      v94 = Logger.logObject.getter(v93);
      v95 = static os_log_type_t.default.getter(v94);
      v96 = os_log_type_enabled(v94, v95);
      v97 = *(_QWORD *)(v0 + 1160);
      if (v96)
      {
        v257 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
        v98 = *(_QWORD *)(v0 + 1008);
        v99 = *(_QWORD *)(v0 + 952);
        v100 = swift_slowAlloc(22, -1);
        v101 = swift_slowAlloc(32, -1);
        v281[0] = v101;
        *(_DWORD *)v100 = 141558275;
        *(_QWORD *)(v0 + 640) = 1752392040;
        v102 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v100 + 4);
        *(_WORD *)(v100 + 12) = 2081;
        SFAirDrop.ContactRequest.contact.getter(v102);
        v274 = v101;
        if (v257(v99, 1, v98) == 1)
        {
          sub_10000D0F0(*(_QWORD *)(v0 + 952), &qword_1007BA300);
          v103 = (const char *)0x800000010061AD50;
          v104 = 0xD000000000000020;
        }
        else
        {
          v138 = *(_QWORD *)(v0 + 1016);
          v139 = *(_QWORD *)(v0 + 1008);
          v140 = *(_QWORD *)(v0 + 952);
          v104 = SFAirDrop.ContactInfo.description.getter();
          v103 = v141;
          (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v140, v139);
        }
        v142 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
        v143 = *(_QWORD *)(v0 + 1160);
        v144 = *(_QWORD *)(v0 + 1112);
        *(_QWORD *)(v0 + 648) = sub_100228BD8(v104, (unint64_t)v103, v281);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v100 + 14);
        v145 = swift_bridgeObjectRelease(v103);
        v142(v143, v144, v145);
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}", (uint8_t *)v100, 0x16u);
        swift_arrayDestroy(v274, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v274, -1, -1);
        swift_slowDealloc(v100, -1, -1);

      }
      else
      {
        v126 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
        v127 = *(_QWORD *)(v0 + 1112);

        v126(v97, v127);
      }
      v239 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
      (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 1120) + 104))(*(_QWORD *)(v0 + 1184));
      v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
      v228 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
      v233 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
      v147 = *(_QWORD *)(v0 + 1328);
      v246 = *(_QWORD *)(v0 + 1312);
      v148 = *(_QWORD *)(v0 + 1304);
      v149 = *(_QWORD *)(v0 + 1288);
      v150 = *(_QWORD *)(v0 + 1248);
      v151 = *(_QWORD *)(v0 + 1184);
      v152 = *(_QWORD *)(v0 + 1112);
      v268 = *(_QWORD *)(v0 + 1008);
      v278 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v254 = *(_QWORD *)(v0 + 944);
      v261 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
      v153 = v148 + *(int *)(sub_100008384(&qword_1007BB620) + 48);
      v146(v148, v150, v152);
      v146(v153, v151, v152);
      v228(v148, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v149);
      sub_10053D3FC(v148, v147);
      v233(v148, v149);
      v154 = v261(v147, v246);
      SFAirDrop.ContactRequest.contact.getter(v154);
      if (v278(v254, 1, v268) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 944), &qword_1007BA300);
        v155 = 0;
        v156 = 0;
      }
      else
      {
        v157 = *(_QWORD *)(v0 + 1016);
        v158 = *(_QWORD *)(v0 + 1008);
        v159 = *(_QWORD *)(v0 + 944);
        v155 = SFAirDrop.ContactInfo.accountHandle.getter();
        v156 = v160;
        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v159, v158);
      }
      v234 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
      v161 = *(_QWORD *)(v0 + 1216);
      v162 = *(_QWORD *)(v0 + 1184);
      v163 = *(_QWORD *)(v0 + 1120);
      v164 = *(_QWORD *)(v0 + 1112);
      sub_10038F828(v155, v156, (_QWORD *)(v0 + 368));
      v165 = *(const char **)(v0 + 376);
      v166 = *(_QWORD *)(v0 + 384);
      v224 = *(_QWORD *)(v0 + 392);
      v229 = *(_QWORD *)(v0 + 368);
      v269 = *(_QWORD *)(v0 + 408);
      v279 = *(_QWORD *)(v0 + 400);
      v255 = *(_QWORD *)(v0 + 424);
      v262 = *(_QWORD *)(v0 + 416);
      v247 = *(_QWORD *)(v0 + 432);
      v219 = *(_QWORD *)(v0 + 448);
      v221 = *(const char **)(v0 + 440);
      v167 = swift_bridgeObjectRelease(v156);
      (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v163 + 104))(v161, v239, v164, v167);
      v168 = static SFAirDrop.ContactRequest.== infix(_:_:)(v162, v161);
      v234(v161, v164);
      if ((v168 & 1) != 0)
      {
        v169 = 0;
        v165 = 0;
        v166 = 0;
        v170 = 0;
        v171 = 0;
        v172 = 0;
        v173 = 0;
        v174 = 0;
        v175 = 0;
        v176 = 0;
        v177 = 0;
      }
      else
      {
        sub_10031B134((_QWORD *)(v0 + 368), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
        v170 = v224;
        v169 = v229;
        v172 = v269;
        v171 = v279;
        v174 = v255;
        v173 = v262;
        v175 = v247;
        v177 = v219;
        v176 = v221;
      }
      v270 = v172;
      v280 = v171;
      v256 = v174;
      v263 = v173;
      *(_QWORD *)(v0 + 1944) = v177;
      *(_QWORD *)(v0 + 1936) = v176;
      *(_QWORD *)(v0 + 1928) = v175;
      *(_QWORD *)(v0 + 1920) = v174;
      *(_QWORD *)(v0 + 1912) = v173;
      *(_QWORD *)(v0 + 1904) = v172;
      *(_QWORD *)(v0 + 1896) = v171;
      *(_QWORD *)(v0 + 1888) = v170;
      *(_QWORD *)(v0 + 1880) = v166;
      *(_QWORD *)(v0 + 1872) = v165;
      *(_QWORD *)(v0 + 1864) = v169;
      v178 = v175;
      v248 = v175;
      v179 = *(uint64_t (**)(void))(v0 + 1480);
      v180 = *(_QWORD *)(v0 + 1328);
      v225 = *(_QWORD *)(v0 + 1312);
      v230 = *(_QWORD *)(v0 + 1216);
      v235 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
      v240 = *(_QWORD *)(v0 + 896);
      v181 = *(_QWORD *)(v0 + 880);
      *(_QWORD *)(v0 + 280) = v169;
      *(_QWORD *)(v0 + 288) = v165;
      *(_QWORD *)(v0 + 296) = v166;
      *(_QWORD *)(v0 + 304) = v170;
      *(_QWORD *)(v0 + 312) = v171;
      *(_QWORD *)(v0 + 320) = v172;
      *(_QWORD *)(v0 + 328) = v173;
      *(_QWORD *)(v0 + 336) = v174;
      *(_QWORD *)(v0 + 344) = v178;
      *(_QWORD *)(v0 + 352) = v176;
      *(_QWORD *)(v0 + 360) = v177;
      v182 = v179();
      v183 = CurrentValueSubject.value.getter(v182);
      SFAirDropReceive.Transfer.id.getter(v183);
      v235(v180, v225);
      sub_10031B004(v169, v165, v166, v170, v280, v270, v263, v256, v248, v176);
      sub_100478E78(v230, v181, v0 + 280, v240);
      v184 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
      *(_QWORD *)(v0 + 1952) = v184;
      *v184 = v0;
      v184[1] = sub_10041D024;
      return sub_10050B098(*(_QWORD *)(v0 + 896));
    }
    else
    {
      v71 = swift_retain_n(*(_QWORD *)(v0 + 784), 2);
      v72 = Logger.logObject.getter(v71);
      v73 = static os_log_type_t.default.getter(v72);
      if (os_log_type_enabled(v72, v73))
      {
        v74 = *(_QWORD *)(v0 + 1328);
        v222 = *(_QWORD *)(v0 + 1312);
        v226 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
        v75 = *(_QWORD *)(v0 + 1104);
        v231 = *(_QWORD *)(v0 + 1088);
        v237 = *(void (**)(uint64_t, uint64_t))(v0 + 1448);
        v76 = *(_QWORD *)(v0 + 1080);
        v77 = *(_QWORD *)(v0 + 1064);
        v243 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
        v250 = *(_QWORD *)(v0 + 784);
        v78 = (uint8_t *)swift_slowAlloc(12, -1);
        v273 = swift_slowAlloc(32, -1);
        v281[0] = v273;
        *(_DWORD *)v78 = 136315138;
        v79 = CurrentValueSubject.value.getter(v273);
        SFAirDropReceive.Transfer.askRequest.getter(v79);
        v80 = v226(v74, v222);
        SFAirDropReceive.AskRequest.type.getter(v80);
        v237(v75, v231);
        v81 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        v82 = dispatch thunk of CustomStringConvertible.description.getter(v77, v81);
        v84 = v83;
        v243(v76, v77);
        *(_QWORD *)(v0 + 672) = sub_100228BD8(v82, (unint64_t)v84, v281);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v0 + 680, v78 + 4);
        swift_bridgeObjectRelease(v84);
        swift_release_n(v250, 2);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}", v78, 0xCu);
        swift_arrayDestroy(v273, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v273, -1, -1);
        swift_slowDealloc(v78, -1, -1);

      }
      else
      {
        v105 = *(_QWORD *)(v0 + 784);

        v85 = swift_release_n(v105, 2);
      }
      v106 = Logger.logObject.getter(v85);
      v107 = static os_log_type_t.default.getter(v106);
      if (os_log_type_enabled(v106, v107))
      {
        v108 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v108 = 0;
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "Exchange Contact END", v108, 2u);
        swift_slowDealloc(v108, -1, -1);
      }
      v109 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
      v251 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
      v258 = *(_QWORD *)(v0 + 1352);
      v265 = *(_QWORD *)(v0 + 1344);
      v275 = *(_QWORD *)(v0 + 1368);
      v241 = *(_QWORD *)(v0 + 1248);
      v244 = *(_QWORD *)(v0 + 1280);
      v110 = *(_QWORD *)(v0 + 1112);
      v111 = *(_QWORD *)(v0 + 1056);
      v112 = *(_QWORD *)(v0 + 1016);
      v113 = *(_QWORD *)(v0 + 1008);
      v114 = *(_QWORD *)(v0 + 872);
      v115 = *(_QWORD *)(v0 + 864);
      v116 = *(_QWORD *)(v0 + 840);

      v109(v115, v116);
      sub_10000D0F0(v114, &qword_1007B6BF0);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v111, v113);
      v251(v241, v110);
      sub_1002443C8(v244, _s15ExchangeRequestVMa);
      (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v275, v265);
      v266 = *(_QWORD *)(v0 + 1816);
      v276 = *(_QWORD *)(v0 + 1824);
      v117 = *(_QWORD *)(v0 + 1360);
      v118 = *(_QWORD *)(v0 + 1336);
      v119 = *(_QWORD *)(v0 + 1328);
      v120 = *(_QWORD *)(v0 + 1304);
      v121 = *(_QWORD *)(v0 + 1280);
      v122 = *(_QWORD *)(v0 + 1256);
      v123 = *(_QWORD *)(v0 + 1248);
      v124 = *(_QWORD *)(v0 + 1240);
      v125 = *(_QWORD *)(v0 + 1232);
      v185 = *(_QWORD *)(v0 + 1224);
      v186 = *(_QWORD *)(v0 + 1216);
      v187 = *(_QWORD *)(v0 + 1208);
      v188 = *(_QWORD *)(v0 + 1200);
      v189 = *(_QWORD *)(v0 + 1192);
      v190 = *(_QWORD *)(v0 + 1184);
      v191 = *(_QWORD *)(v0 + 1176);
      v192 = *(_QWORD *)(v0 + 1168);
      v193 = *(_QWORD *)(v0 + 1160);
      v194 = *(_QWORD *)(v0 + 1152);
      v195 = *(_QWORD *)(v0 + 1144);
      v196 = *(_QWORD *)(v0 + 1136);
      v197 = *(_QWORD *)(v0 + 1128);
      v198 = *(_QWORD *)(v0 + 1104);
      v199 = *(_QWORD *)(v0 + 1080);
      v200 = *(_QWORD *)(v0 + 1056);
      v201 = *(_QWORD *)(v0 + 1048);
      v202 = *(_QWORD *)(v0 + 1040);
      v203 = *(_QWORD *)(v0 + 1032);
      v204 = *(_QWORD *)(v0 + 1024);
      v205 = *(_QWORD *)(v0 + 1000);
      v206 = *(_QWORD *)(v0 + 992);
      v207 = *(_QWORD *)(v0 + 984);
      v208 = *(_QWORD *)(v0 + 976);
      v209 = *(_QWORD *)(v0 + 968);
      v210 = *(_QWORD *)(v0 + 960);
      v211 = *(_QWORD *)(v0 + 952);
      v212 = *(_QWORD *)(v0 + 944);
      v213 = *(_QWORD *)(v0 + 936);
      v214 = *(_QWORD *)(v0 + 928);
      v215 = *(_QWORD *)(v0 + 920);
      v216 = *(_QWORD *)(v0 + 912);
      v217 = *(_QWORD *)(v0 + 904);
      v218 = *(_QWORD *)(v0 + 896);
      v220 = *(_QWORD *)(v0 + 888);
      v223 = *(_QWORD *)(v0 + 880);
      v227 = *(_QWORD *)(v0 + 872);
      v232 = *(_QWORD *)(v0 + 864);
      v238 = *(_QWORD *)(v0 + 856);
      v242 = *(_QWORD *)(v0 + 832);
      v245 = *(_QWORD *)(v0 + 808);
      v252 = *(_QWORD *)(v0 + 800);
      v259 = *(_QWORD *)(v0 + 792);
      swift_task_dealloc(*(_QWORD *)(v0 + 1368));
      swift_task_dealloc(v117);
      swift_task_dealloc(v118);
      swift_task_dealloc(v119);
      swift_task_dealloc(v120);
      swift_task_dealloc(v121);
      swift_task_dealloc(v122);
      swift_task_dealloc(v123);
      swift_task_dealloc(v124);
      swift_task_dealloc(v125);
      swift_task_dealloc(v185);
      swift_task_dealloc(v186);
      swift_task_dealloc(v187);
      swift_task_dealloc(v188);
      swift_task_dealloc(v189);
      swift_task_dealloc(v190);
      swift_task_dealloc(v191);
      swift_task_dealloc(v192);
      swift_task_dealloc(v193);
      swift_task_dealloc(v194);
      swift_task_dealloc(v195);
      swift_task_dealloc(v196);
      swift_task_dealloc(v197);
      swift_task_dealloc(v198);
      swift_task_dealloc(v199);
      swift_task_dealloc(v200);
      swift_task_dealloc(v201);
      swift_task_dealloc(v202);
      swift_task_dealloc(v203);
      swift_task_dealloc(v204);
      swift_task_dealloc(v205);
      swift_task_dealloc(v206);
      swift_task_dealloc(v207);
      swift_task_dealloc(v208);
      swift_task_dealloc(v209);
      swift_task_dealloc(v210);
      swift_task_dealloc(v211);
      swift_task_dealloc(v212);
      swift_task_dealloc(v213);
      swift_task_dealloc(v214);
      swift_task_dealloc(v215);
      swift_task_dealloc(v216);
      swift_task_dealloc(v217);
      swift_task_dealloc(v218);
      swift_task_dealloc(v220);
      swift_task_dealloc(v223);
      swift_task_dealloc(v227);
      swift_task_dealloc(v232);
      swift_task_dealloc(v238);
      swift_task_dealloc(v242);
      swift_task_dealloc(v245);
      swift_task_dealloc(v252);
      swift_task_dealloc(v259);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v266, v276);
    }
  }
  else
  {
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1608);
    v34 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 1040);
    v36 = *(_QWORD *)(v0 + 1008);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1472))(v34, *(_QWORD *)(v0 + 976), v36);
    v37 = v33(v35, v34, v36);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    v40 = os_log_type_enabled(v38, v39);
    v41 = *(_QWORD *)(v0 + 1040);
    v42 = *(_QWORD *)(v0 + 1016);
    v43 = *(_QWORD *)(v0 + 1008);
    if (v40)
    {
      v44 = swift_slowAlloc(28, -1);
      v45 = swift_slowAlloc(32, -1);
      v281[0] = v45;
      *(_DWORD *)v44 = 67109635;
      *(_DWORD *)(v0 + 1996) = (v271 & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1996, v264, v44 + 4);
      *(_WORD *)(v44 + 8) = 2160;
      *(_QWORD *)(v0 + 728) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 728, v0 + 736, v44 + 10);
      *(_WORD *)(v44 + 18) = 2081;
      v46 = sub_100220D78(&qword_1007C0410, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo);
      v47 = dispatch thunk of CustomStringConvertible.description.getter(v43, v46);
      v49 = (const char *)v48;
      *(_QWORD *)(v0 + 736) = sub_100228BD8(v47, v48, v281);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v44 + 20);
      v50 = swift_bridgeObjectRelease(v49);
      v51 = *(void (**)(uint64_t, uint64_t, __n128))(v42 + 8);
      v51(v41, v43, v50);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Exchange Contact CONTINUE. Importing contact {shouldAcceptSenderContact: %{BOOL}d, senderContact: %{private,mask.hash}s}", (uint8_t *)v44, 0x1Cu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      v51 = *(void (**)(uint64_t, uint64_t, __n128))(v42 + 8);
      ((void (*)(uint64_t, uint64_t))v51)(v41, v43);
    }
    *(_QWORD *)(v0 + 1656) = v51;
    v62 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
    v64 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
    v65 = *(_QWORD *)(v0 + 1328);
    v66 = *(_QWORD *)(v0 + 1312);
    v67 = *(_QWORD *)(v0 + 1304);
    v68 = *(_QWORD *)(v0 + 1288);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 1608))(v67, *(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1008));
    v64(v67, enum case for SFAirDropReceive.Transfer.State.importingReceivedContact(_:), v68);
    sub_10053D3FC(v67, v65);
    v63(v67, v68);
    v62(v65, v66);
    v272 = (char *)&dword_1007B9770 + dword_1007B9770;
    v69 = (_QWORD *)swift_task_alloc(unk_1007B9774);
    *(_QWORD *)(v0 + 1664) = v69;
    *v69 = v0;
    v69[1] = sub_100419BF0;
    return ((uint64_t (*)(_QWORD, _QWORD))v272)(*(_QWORD *)(v0 + 1048), *(unsigned __int8 *)(v0 + 2008));
  }
}

uint64_t sub_1004197F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[202];
  v2 = v0[172];
  swift_task_dealloc(v0[203]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100419844, v2, 0);
}

uint64_t sub_100419844()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1280);
  v3 = *(_QWORD *)(v0 + 1248);
  v4 = *(_QWORD *)(v0 + 1112);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1016);
  v7 = *(_QWORD *)(v0 + 1008);
  sub_10000D0F0(*(_QWORD *)(v0 + 872), &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v1(v3, v4);
  sub_1002443C8(v2, _s15ExchangeRequestVMa);
  v8 = *(_QWORD *)(v0 + 1368);
  v9 = *(_QWORD *)(v0 + 1360);
  v10 = *(_QWORD *)(v0 + 1336);
  v11 = *(_QWORD *)(v0 + 1328);
  v12 = *(_QWORD *)(v0 + 1304);
  v13 = *(_QWORD *)(v0 + 1280);
  v14 = *(_QWORD *)(v0 + 1256);
  v15 = *(_QWORD *)(v0 + 1248);
  v16 = *(_QWORD *)(v0 + 1240);
  v18 = *(_QWORD *)(v0 + 1232);
  v19 = *(_QWORD *)(v0 + 1224);
  v20 = *(_QWORD *)(v0 + 1216);
  v21 = *(_QWORD *)(v0 + 1208);
  v22 = *(_QWORD *)(v0 + 1200);
  v23 = *(_QWORD *)(v0 + 1192);
  v24 = *(_QWORD *)(v0 + 1184);
  v25 = *(_QWORD *)(v0 + 1176);
  v26 = *(_QWORD *)(v0 + 1168);
  v27 = *(_QWORD *)(v0 + 1160);
  v32 = *(_QWORD *)(v0 + 1136);
  v34 = *(_QWORD *)(v0 + 1128);
  v36 = *(_QWORD *)(v0 + 1104);
  v37 = *(_QWORD *)(v0 + 1080);
  v39 = *(_QWORD *)(v0 + 1056);
  v41 = *(_QWORD *)(v0 + 1048);
  v43 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1152);
  v29 = *(_QWORD *)(v0 + 1032);
  v30 = *(_QWORD *)(v0 + 1144);
  v31 = *(_QWORD *)(v0 + 1024);
  v33 = *(_QWORD *)(v0 + 1000);
  v35 = *(_QWORD *)(v0 + 992);
  v38 = *(_QWORD *)(v0 + 984);
  v40 = *(_QWORD *)(v0 + 976);
  v42 = *(_QWORD *)(v0 + 968);
  v44 = *(_QWORD *)(v0 + 960);
  v45 = *(_QWORD *)(v0 + 952);
  v46 = *(_QWORD *)(v0 + 944);
  v47 = *(_QWORD *)(v0 + 936);
  v48 = *(_QWORD *)(v0 + 928);
  v49 = *(_QWORD *)(v0 + 920);
  v50 = *(_QWORD *)(v0 + 912);
  v51 = *(_QWORD *)(v0 + 904);
  v52 = *(_QWORD *)(v0 + 896);
  v53 = *(_QWORD *)(v0 + 888);
  v54 = *(_QWORD *)(v0 + 880);
  v55 = *(_QWORD *)(v0 + 872);
  v56 = *(_QWORD *)(v0 + 864);
  v57 = *(_QWORD *)(v0 + 856);
  v58 = *(_QWORD *)(v0 + 832);
  v59 = *(_QWORD *)(v0 + 808);
  v60 = *(_QWORD *)(v0 + 800);
  v61 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v8, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100419BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 1664);
  v4[209] = a1;
  v4[210] = a2;
  v4[211] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10041B094;
  else
    v6 = sub_100419C64;
  return swift_task_switch(v6, v4[172], 0);
}

uint64_t sub_100419C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  const char *v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  __n128 v107;
  uint64_t (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  void (*v113)(uint64_t, uint64_t, __n128);
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  uint64_t v117;
  __n128 v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  uint8_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  const char *v148;
  void (*v149)(uint64_t, uint64_t, __n128);
  uint64_t v150;
  uint64_t v151;
  __n128 v152;
  void (*v153)(uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  const char *v172;
  uint64_t v173;
  uint64_t v174;
  __n128 v175;
  char v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  const char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(void);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  const char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  const char *v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  void (*v235)(uint64_t, _QWORD, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(uint64_t, uint64_t);
  void (*v241)(uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t (*v244)(uint64_t, uint64_t);
  uint64_t v245;
  unsigned int v246;
  void (*v247)(uint64_t, uint64_t);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void (*v251)(uint64_t, uint64_t);
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  void (*v264)(uint64_t, uint64_t);
  void (*v265)(uint64_t, uint64_t);
  uint64_t v266;
  void (*v267)(uint64_t, _QWORD, uint64_t);
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  unsigned int (*v273)(uint64_t, uint64_t, uint64_t);
  uint64_t v274;
  uint64_t v275;
  void (*v276)(uint64_t, uint64_t);
  uint64_t (*v277)(uint64_t, uint64_t);
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  const char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, uint64_t);
  unsigned int (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296[2];

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD *)(v0 + 816);
  v3 = *(_QWORD *)(v0 + 808);
  v4 = *(_QWORD *)(v0 + 1384) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess(v4, v0 + 568, 0, 0);
  sub_100221F28(v4, v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v5 = sub_10000D0F0(*(_QWORD *)(v0 + 808), &qword_1007C03E0);
LABEL_7:
    v27 = Logger.logObject.getter(v5);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Exchange Contact IDENTITY IMPORT SKIP. Not provided", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    goto LABEL_10;
  }
  v6 = *(_QWORD *)(v0 + 1280);
  v7 = *(_QWORD *)(v0 + 1264);
  sub_100221DB4(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 832), type metadata accessor for SDAirDropServerConnection);
  v8 = (uint64_t *)(v6 + *(int *)(v7 + 36));
  v9 = *v8;
  *(_QWORD *)(v0 + 1696) = *v8;
  v10 = (const char *)v8[1];
  *(_QWORD *)(v0 + 1704) = v10;
  v11 = v8[2];
  *(_QWORD *)(v0 + 1712) = v11;
  v12 = v8[3];
  *(_QWORD *)(v0 + 1720) = v12;
  v13 = v8[4];
  *(_QWORD *)(v0 + 1728) = v13;
  v14 = v8[5];
  *(_QWORD *)(v0 + 1736) = v14;
  v15 = v8[6];
  *(_QWORD *)(v0 + 1744) = v15;
  v16 = v8[7];
  *(_QWORD *)(v0 + 1752) = v16;
  v17 = v8[8];
  *(_QWORD *)(v0 + 1760) = v17;
  v18 = (const char *)v8[9];
  *(_QWORD *)(v0 + 1768) = v18;
  v19 = v8[10];
  *(_QWORD *)(v0 + 1776) = v19;
  v287 = v18;
  if (!v18)
  {
    v5 = sub_1002443C8(*(_QWORD *)(v0 + 832), type metadata accessor for SDAirDropServerConnection);
    goto LABEL_7;
  }
  v257 = v9;
  v263 = v12;
  v243 = v19;
  v248 = v17;
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1496);
  v21 = *(_QWORD *)(v0 + 1112);
  v22 = *(_QWORD *)(v0 + 928);
  sub_100221F28(*(_QWORD *)(v0 + 776), v22, &qword_1007BA320);
  v271 = v16;
  v280 = v15;
  if (v20(v22, 1, v21) == 1)
  {
    v23 = *(_QWORD *)(v0 + 928);
    v224 = v10;
    swift_bridgeObjectRetain(v10);
    v24 = v16;
    v25 = v11;
    sub_100244404(v11, v263);
    sub_10022E4A8(v13, v14);
    sub_10022E4A8(v15, v24);
    swift_bridgeObjectRetain(v287);
    v26 = sub_10000D0F0(v23, &qword_1007BA320);
LABEL_33:
    v255 = v14;
    v134 = v13;
    v135 = Logger.logObject.getter(v26);
    v136 = static os_log_type_t.default.getter(v135);
    if (os_log_type_enabled(v135, v136))
    {
      v137 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v137 = 0;
      _os_log_impl((void *)&_mh_execute_header, v135, v136, "Exchange Contact CONTINUE. Attempting identity import", v137, 2u);
      swift_slowDealloc(v137, -1, -1);
    }
    v138 = *(_QWORD *)(v0 + 1280);
    v139 = *(_QWORD *)(v0 + 1264);
    v227 = *(_QWORD *)(v0 + 832);
    v229 = *(_QWORD *)(v0 + 824);
    v232 = *(_QWORD *)(v0 + 816);
    v140 = *(_QWORD *)(v0 + 800);

    *(_QWORD *)(v0 + 192) = v257;
    *(_QWORD *)(v0 + 200) = v224;
    *(_QWORD *)(v0 + 208) = v25;
    *(_QWORD *)(v0 + 216) = v263;
    *(_QWORD *)(v0 + 224) = v134;
    *(_QWORD *)(v0 + 232) = v255;
    *(_QWORD *)(v0 + 240) = v280;
    *(_QWORD *)(v0 + 248) = v271;
    *(_QWORD *)(v0 + 256) = v248;
    *(_QWORD *)(v0 + 264) = v287;
    *(_QWORD *)(v0 + 272) = v243;
    v141 = (uint64_t *)(v138 + *(int *)(v139 + 32));
    v142 = *v141;
    *(_QWORD *)(v0 + 1784) = *v141;
    v143 = v141[1];
    *(_QWORD *)(v0 + 1792) = v143;
    sub_10042344C(v227, v140);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v229 + 56))(v140, 0, 1, v232);
    sub_10031B004(v257, v224, v25, v263, v134, v255, v280, v271, v248, v287);
    sub_100244404(v142, v143);
    v144 = (_QWORD *)swift_task_alloc(dword_1007C4A14);
    *(_QWORD *)(v0 + 1800) = v144;
    *v144 = v0;
    v144[1] = sub_10041B46C;
    return sub_10050B870(v0 + 192, v142, v143, *(_QWORD *)(v0 + 1672), *(_QWORD *)(v0 + 1680), *(_QWORD *)(v0 + 800));
  }
  v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
  v100 = *(_QWORD *)(v0 + 1208);
  v101 = *(_QWORD *)(v0 + 1200);
  v102 = v14;
  v103 = v13;
  v104 = *(_QWORD *)(v0 + 1120);
  v105 = *(_QWORD *)(v0 + 1112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v104 + 32))(v100, *(_QWORD *)(v0 + 928), v105);
  v99(v101, v100, v105);
  v106 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 88);
  v13 = v103;
  v14 = v102;
  LODWORD(v100) = v106(v101, v105);
  LODWORD(v101) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
  swift_bridgeObjectRetain(v10);
  sub_100244404(v11, v263);
  sub_10022E4A8(v13, v102);
  sub_10022E4A8(v280, v271);
  v107 = swift_bridgeObjectRetain(v287);
  v108 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1488);
  if ((_DWORD)v100 != (_DWORD)v101)
  {
    v25 = v11;
    v224 = v10;
    v132 = *(_QWORD *)(v0 + 1200);
    v133 = *(_QWORD *)(v0 + 1112);
    ((void (*)(_QWORD, uint64_t, __n128))v108)(*(_QWORD *)(v0 + 1208), v133, v107);
    v26 = v108(v132, v133);
    goto LABEL_33;
  }
  v109 = ((uint64_t (*)(_QWORD, _QWORD, __n128))v108)(*(_QWORD *)(v0 + 1200), *(_QWORD *)(v0 + 1112), v107);
  v110 = Logger.logObject.getter(v109);
  v111 = static os_log_type_t.default.getter(v110);
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v112 = 0;
    _os_log_impl((void *)&_mh_execute_header, v110, v111, "Exchange Contact IDENTITY IMPORT SKIP. User chose to only receive", v112, 2u);
    swift_slowDealloc(v112, -1, -1);
  }
  v113 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
  v114 = *(_QWORD *)(v0 + 1208);
  v115 = *(_QWORD *)(v0 + 1112);
  v116 = v110;
  v117 = *(_QWORD *)(v0 + 832);

  v118 = sub_10031B09C(v257, v10, v11, v263, v13, v102, v280, v271, v248, v287);
  v113(v114, v115, v118);
  v30 = sub_1002443C8(v117, type metadata accessor for SDAirDropServerConnection);
LABEL_10:
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Exchange Contact CONTINUE. Imported contact", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }
  v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v35 = *(_QWORD *)(v0 + 1048);
  v36 = *(_QWORD *)(v0 + 1008);

  v34(v35, v36);
  *(_OWORD *)(v0 + 1816) = *(_OWORD *)(v0 + 1672);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1496);
  v38 = *(_QWORD *)(v0 + 1112);
  v39 = *(_QWORD *)(v0 + 920);
  sub_100221F28(*(_QWORD *)(v0 + 776), v39, &qword_1007BA320);
  LODWORD(v38) = v37(v39, 1, v38);
  v40 = sub_10000D0F0(v39, &qword_1007BA320);
  if ((_DWORD)v38 == 1)
  {
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
    v42 = *(_QWORD *)(v0 + 1008);
    v43 = *(_QWORD *)(v0 + 968);
    SFAirDrop.ContactRequest.contact.getter(v40);
    if (v41(v43, 1, v42) == 1)
    {
      v44 = (uint64_t *)(v0 + 968);
    }
    else
    {
      v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v61 = *(_QWORD *)(v0 + 1008);
      v62 = *(_QWORD *)(v0 + 960);
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 1472))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 968), v61);
      sub_1003EF5A8(v62);
      if (v60(v62, 1, v61) != 1)
      {
        v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1608);
        v267 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
        v276 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
        v123 = *(_QWORD *)(v0 + 1328);
        v283 = *(_QWORD *)(v0 + 1312);
        v292 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
        v124 = *(_QWORD *)(v0 + 1304);
        v125 = *(_QWORD *)(v0 + 1288);
        v126 = *(_QWORD *)(v0 + 1032);
        v127 = *(_QWORD *)(v0 + 1024);
        v128 = *(_QWORD *)(v0 + 1008);
        v129 = *(_QWORD *)(v0 + 792);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1472))(v127, *(_QWORD *)(v0 + 960), v128);
        sub_100420578(v126, v127, v129);
        v130 = v124 + *(int *)(sub_100008384(&qword_1007BB628) + 48);
        v122(v124, v127, v128);
        v131 = sub_100008384((uint64_t *)&unk_1007BB630);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v130, v129, v131);
        v267(v124, enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:), v125);
        sub_10053D3FC(v124, v123);
        v276(v124, v125);
        v292(v123, v283);
        return swift_task_switch(sub_10041C49C, 0, 0);
      }
      v44 = (uint64_t *)(v0 + 960);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1016) + 8))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 1008));
    }
    v252 = (_QWORD *)(v0 + 368);
    v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
    v64 = *(_QWORD *)(v0 + 1248);
    v65 = *(_QWORD *)(v0 + 1160);
    v66 = *(_QWORD *)(v0 + 1112);
    sub_10000D0F0(*v44, &qword_1007BA300);
    v67 = v63(v65, v64, v66);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter(v68);
    if (os_log_type_enabled(v68, v69))
    {
      v273 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v70 = *(_QWORD *)(v0 + 1008);
      v71 = *(_QWORD *)(v0 + 952);
      v72 = swift_slowAlloc(22, -1);
      v73 = swift_slowAlloc(32, -1);
      v296[0] = v73;
      *(_DWORD *)v72 = 141558275;
      *(_QWORD *)(v0 + 640) = 1752392040;
      v74 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v72 + 4);
      *(_WORD *)(v72 + 12) = 2081;
      SFAirDrop.ContactRequest.contact.getter(v74);
      v289 = v73;
      if (v273(v71, 1, v70) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 952), &qword_1007BA300);
        v75 = (const char *)0x800000010061AD50;
        v76 = 0xD000000000000020;
      }
      else
      {
        v145 = *(_QWORD *)(v0 + 1016);
        v146 = *(_QWORD *)(v0 + 1008);
        v147 = *(_QWORD *)(v0 + 952);
        v76 = SFAirDrop.ContactInfo.description.getter();
        v75 = v148;
        (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v147, v146);
      }
      v149 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
      v150 = *(_QWORD *)(v0 + 1160);
      v151 = *(_QWORD *)(v0 + 1112);
      *(_QWORD *)(v0 + 648) = sub_100228BD8(v76, (unint64_t)v75, v296);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v72 + 14);
      v152 = swift_bridgeObjectRelease(v75);
      v149(v150, v151, v152);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy(v289, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v289, -1, -1);
      swift_slowDealloc(v72, -1, -1);

    }
    else
    {
      v119 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
      v120 = *(_QWORD *)(v0 + 1160);
      v121 = *(_QWORD *)(v0 + 1112);

      v119(v120, v121);
    }
    v246 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 1120) + 104))(*(_QWORD *)(v0 + 1184));
    v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
    v235 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
    v240 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
    v154 = *(_QWORD *)(v0 + 1328);
    v260 = *(_QWORD *)(v0 + 1312);
    v155 = *(_QWORD *)(v0 + 1304);
    v156 = *(_QWORD *)(v0 + 1288);
    v157 = *(_QWORD *)(v0 + 1248);
    v158 = *(_QWORD *)(v0 + 1184);
    v159 = *(_QWORD *)(v0 + 1112);
    v284 = *(_QWORD *)(v0 + 1008);
    v293 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
    v268 = *(_QWORD *)(v0 + 944);
    v277 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
    v160 = v155 + *(int *)(sub_100008384(&qword_1007BB620) + 48);
    v153(v155, v157, v159);
    v153(v160, v158, v159);
    v235(v155, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v156);
    sub_10053D3FC(v155, v154);
    v240(v155, v156);
    v161 = v277(v154, v260);
    SFAirDrop.ContactRequest.contact.getter(v161);
    if (v293(v268, 1, v284) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 944), &qword_1007BA300);
      v162 = 0;
      v163 = 0;
    }
    else
    {
      v164 = *(_QWORD *)(v0 + 1016);
      v165 = *(_QWORD *)(v0 + 1008);
      v166 = *(_QWORD *)(v0 + 944);
      v162 = SFAirDrop.ContactInfo.accountHandle.getter();
      v163 = v167;
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v166, v165);
    }
    v241 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v168 = *(_QWORD *)(v0 + 1216);
    v169 = *(_QWORD *)(v0 + 1184);
    v170 = *(_QWORD *)(v0 + 1120);
    v171 = *(_QWORD *)(v0 + 1112);
    sub_10038F828(v162, v163, v252);
    v173 = *(_QWORD *)(v0 + 368);
    v172 = *(const char **)(v0 + 376);
    v233 = *(_QWORD *)(v0 + 392);
    v236 = *(_QWORD *)(v0 + 384);
    v285 = *(_QWORD *)(v0 + 408);
    v294 = *(_QWORD *)(v0 + 400);
    v269 = *(_QWORD *)(v0 + 424);
    v278 = *(_QWORD *)(v0 + 416);
    v261 = *(_QWORD *)(v0 + 432);
    v174 = *(_QWORD *)(v0 + 448);
    v230 = *(const char **)(v0 + 440);
    v175 = swift_bridgeObjectRelease(v163);
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v170 + 104))(v168, v246, v171, v175);
    v176 = static SFAirDrop.ContactRequest.== infix(_:_:)(v169, v168);
    v241(v168, v171);
    if ((v176 & 1) != 0)
    {
      v173 = 0;
      v172 = 0;
      v177 = 0;
      v178 = 0;
      v179 = 0;
      v180 = 0;
      v181 = 0;
      v182 = 0;
      v183 = 0;
      v184 = 0;
      v185 = 0;
    }
    else
    {
      sub_10031B134(v252, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
      v185 = v174;
      v178 = v233;
      v177 = v236;
      v180 = v285;
      v179 = v294;
      v182 = v269;
      v181 = v278;
      v183 = v261;
      v184 = v230;
    }
    v286 = v180;
    v295 = v179;
    v270 = v182;
    v279 = v181;
    *(_QWORD *)(v0 + 1944) = v185;
    *(_QWORD *)(v0 + 1936) = v184;
    *(_QWORD *)(v0 + 1928) = v183;
    *(_QWORD *)(v0 + 1920) = v182;
    *(_QWORD *)(v0 + 1912) = v181;
    *(_QWORD *)(v0 + 1904) = v180;
    *(_QWORD *)(v0 + 1896) = v179;
    *(_QWORD *)(v0 + 1888) = v178;
    *(_QWORD *)(v0 + 1880) = v177;
    *(_QWORD *)(v0 + 1872) = v172;
    *(_QWORD *)(v0 + 1864) = v173;
    v186 = v183;
    v262 = v183;
    v187 = *(uint64_t (**)(void))(v0 + 1480);
    v188 = *(_QWORD *)(v0 + 1328);
    v237 = *(_QWORD *)(v0 + 1312);
    v242 = *(_QWORD *)(v0 + 1216);
    v247 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    v256 = *(_QWORD *)(v0 + 896);
    v189 = *(_QWORD *)(v0 + 880);
    *(_QWORD *)(v0 + 280) = v173;
    *(_QWORD *)(v0 + 288) = v172;
    *(_QWORD *)(v0 + 296) = v177;
    *(_QWORD *)(v0 + 304) = v178;
    *(_QWORD *)(v0 + 312) = v179;
    *(_QWORD *)(v0 + 320) = v180;
    *(_QWORD *)(v0 + 328) = v181;
    *(_QWORD *)(v0 + 336) = v182;
    *(_QWORD *)(v0 + 344) = v186;
    *(_QWORD *)(v0 + 352) = v184;
    *(_QWORD *)(v0 + 360) = v185;
    v190 = v187();
    v191 = CurrentValueSubject.value.getter(v190);
    SFAirDropReceive.Transfer.id.getter(v191);
    v247(v188, v237);
    sub_10031B004(v173, v172, v177, v178, v295, v286, v279, v270, v262, v184);
    sub_100478E78(v242, v189, v0 + 280, v256);
    v192 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
    *(_QWORD *)(v0 + 1952) = v192;
    *v192 = v0;
    v192[1] = sub_10041D024;
    return sub_10050B098(*(_QWORD *)(v0 + 896));
  }
  else
  {
    v45 = swift_retain_n(*(_QWORD *)(v0 + 784), 2);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v264 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
      v48 = *(_QWORD *)(v0 + 1328);
      v238 = *(_QWORD *)(v0 + 1312);
      v244 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
      v49 = *(_QWORD *)(v0 + 1104);
      v249 = *(_QWORD *)(v0 + 1088);
      v251 = *(void (**)(uint64_t, uint64_t))(v0 + 1448);
      v50 = *(_QWORD *)(v0 + 1080);
      v51 = *(_QWORD *)(v0 + 1064);
      v272 = *(_QWORD *)(v0 + 784);
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v288 = swift_slowAlloc(32, -1);
      v296[0] = v288;
      *(_DWORD *)v52 = 136315138;
      v53 = CurrentValueSubject.value.getter(v288);
      SFAirDropReceive.Transfer.askRequest.getter(v53);
      v54 = v244(v48, v238);
      SFAirDropReceive.AskRequest.type.getter(v54);
      v251(v49, v249);
      v55 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v56 = dispatch thunk of CustomStringConvertible.description.getter(v51, v55);
      v58 = v57;
      v264(v50, v51);
      *(_QWORD *)(v0 + 672) = sub_100228BD8(v56, (unint64_t)v58, v296);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v0 + 680, v52 + 4);
      swift_bridgeObjectRelease(v58);
      swift_release_n(v272, 2);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}", v52, 0xCu);
      swift_arrayDestroy(v288, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v288, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v77 = *(_QWORD *)(v0 + 784);

      v59 = swift_release_n(v77, 2);
    }
    v78 = Logger.logObject.getter(v59);
    v79 = static os_log_type_t.default.getter(v78);
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Exchange Contact END", v80, 2u);
      swift_slowDealloc(v80, -1, -1);
    }
    v81 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
    v265 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v274 = *(_QWORD *)(v0 + 1352);
    v281 = *(_QWORD *)(v0 + 1344);
    v290 = *(_QWORD *)(v0 + 1368);
    v253 = *(_QWORD *)(v0 + 1248);
    v258 = *(_QWORD *)(v0 + 1280);
    v82 = *(_QWORD *)(v0 + 1112);
    v83 = *(_QWORD *)(v0 + 1056);
    v84 = *(_QWORD *)(v0 + 1016);
    v85 = *(_QWORD *)(v0 + 1008);
    v86 = *(_QWORD *)(v0 + 872);
    v87 = *(_QWORD *)(v0 + 864);
    v88 = *(_QWORD *)(v0 + 840);

    v81(v87, v88);
    sub_10000D0F0(v86, &qword_1007B6BF0);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
    v265(v253, v82);
    sub_1002443C8(v258, _s15ExchangeRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v290, v281);
    v282 = *(_QWORD *)(v0 + 1816);
    v291 = *(_QWORD *)(v0 + 1824);
    v89 = *(_QWORD *)(v0 + 1360);
    v90 = *(_QWORD *)(v0 + 1336);
    v91 = *(_QWORD *)(v0 + 1328);
    v92 = *(_QWORD *)(v0 + 1304);
    v93 = *(_QWORD *)(v0 + 1280);
    v94 = *(_QWORD *)(v0 + 1256);
    v95 = *(_QWORD *)(v0 + 1248);
    v96 = *(_QWORD *)(v0 + 1240);
    v97 = *(_QWORD *)(v0 + 1232);
    v193 = *(_QWORD *)(v0 + 1224);
    v194 = *(_QWORD *)(v0 + 1216);
    v195 = *(_QWORD *)(v0 + 1208);
    v196 = *(_QWORD *)(v0 + 1200);
    v197 = *(_QWORD *)(v0 + 1192);
    v198 = *(_QWORD *)(v0 + 1184);
    v199 = *(_QWORD *)(v0 + 1176);
    v200 = *(_QWORD *)(v0 + 1168);
    v201 = *(_QWORD *)(v0 + 1160);
    v202 = *(_QWORD *)(v0 + 1152);
    v203 = *(_QWORD *)(v0 + 1144);
    v204 = *(_QWORD *)(v0 + 1136);
    v205 = *(_QWORD *)(v0 + 1128);
    v206 = *(_QWORD *)(v0 + 1104);
    v207 = *(_QWORD *)(v0 + 1080);
    v208 = *(_QWORD *)(v0 + 1056);
    v209 = *(_QWORD *)(v0 + 1048);
    v210 = *(_QWORD *)(v0 + 1040);
    v211 = *(_QWORD *)(v0 + 1032);
    v212 = *(_QWORD *)(v0 + 1024);
    v213 = *(_QWORD *)(v0 + 1000);
    v214 = *(_QWORD *)(v0 + 992);
    v215 = *(_QWORD *)(v0 + 984);
    v216 = *(_QWORD *)(v0 + 976);
    v217 = *(_QWORD *)(v0 + 968);
    v218 = *(_QWORD *)(v0 + 960);
    v219 = *(_QWORD *)(v0 + 952);
    v220 = *(_QWORD *)(v0 + 944);
    v221 = *(_QWORD *)(v0 + 936);
    v222 = *(_QWORD *)(v0 + 928);
    v223 = *(_QWORD *)(v0 + 920);
    v225 = *(_QWORD *)(v0 + 912);
    v226 = *(_QWORD *)(v0 + 904);
    v228 = *(_QWORD *)(v0 + 896);
    v231 = *(_QWORD *)(v0 + 888);
    v234 = *(_QWORD *)(v0 + 880);
    v239 = *(_QWORD *)(v0 + 872);
    v245 = *(_QWORD *)(v0 + 864);
    v250 = *(_QWORD *)(v0 + 856);
    v254 = *(_QWORD *)(v0 + 832);
    v259 = *(_QWORD *)(v0 + 808);
    v266 = *(_QWORD *)(v0 + 800);
    v275 = *(_QWORD *)(v0 + 792);
    swift_task_dealloc(*(_QWORD *)(v0 + 1368));
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v193);
    swift_task_dealloc(v194);
    swift_task_dealloc(v195);
    swift_task_dealloc(v196);
    swift_task_dealloc(v197);
    swift_task_dealloc(v198);
    swift_task_dealloc(v199);
    swift_task_dealloc(v200);
    swift_task_dealloc(v201);
    swift_task_dealloc(v202);
    swift_task_dealloc(v203);
    swift_task_dealloc(v204);
    swift_task_dealloc(v205);
    swift_task_dealloc(v206);
    swift_task_dealloc(v207);
    swift_task_dealloc(v208);
    swift_task_dealloc(v209);
    swift_task_dealloc(v210);
    swift_task_dealloc(v211);
    swift_task_dealloc(v212);
    swift_task_dealloc(v213);
    swift_task_dealloc(v214);
    swift_task_dealloc(v215);
    swift_task_dealloc(v216);
    swift_task_dealloc(v217);
    swift_task_dealloc(v218);
    swift_task_dealloc(v219);
    swift_task_dealloc(v220);
    swift_task_dealloc(v221);
    swift_task_dealloc(v222);
    swift_task_dealloc(v223);
    swift_task_dealloc(v225);
    swift_task_dealloc(v226);
    swift_task_dealloc(v228);
    swift_task_dealloc(v231);
    swift_task_dealloc(v234);
    swift_task_dealloc(v239);
    swift_task_dealloc(v245);
    swift_task_dealloc(v250);
    swift_task_dealloc(v254);
    swift_task_dealloc(v259);
    swift_task_dealloc(v266);
    swift_task_dealloc(v275);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v282, v291);
  }
}

uint64_t sub_10041B094()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v65 = *(_QWORD *)(v0 + 1280);
  v3 = *(_QWORD *)(v0 + 1248);
  v4 = *(_QWORD *)(v0 + 1112);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1008);
  v7 = *(_QWORD *)(v0 + 872);
  v8 = *(_QWORD *)(v0 + 864);
  v9 = *(_QWORD *)(v0 + 840);
  v1(*(_QWORD *)(v0 + 1048), v6);
  v2(v8, v9);
  sub_10000D0F0(v7, &qword_1007B6BF0);
  v1(v5, v6);
  v63(v3, v4);
  sub_1002443C8(v65, _s15ExchangeRequestVMa);
  v10 = *(_QWORD *)(v0 + 1368);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1336);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1304);
  v15 = *(_QWORD *)(v0 + 1280);
  v16 = *(_QWORD *)(v0 + 1256);
  v17 = *(_QWORD *)(v0 + 1248);
  v18 = *(_QWORD *)(v0 + 1240);
  v20 = *(_QWORD *)(v0 + 1232);
  v21 = *(_QWORD *)(v0 + 1224);
  v22 = *(_QWORD *)(v0 + 1216);
  v23 = *(_QWORD *)(v0 + 1208);
  v24 = *(_QWORD *)(v0 + 1200);
  v25 = *(_QWORD *)(v0 + 1192);
  v26 = *(_QWORD *)(v0 + 1184);
  v27 = *(_QWORD *)(v0 + 1176);
  v28 = *(_QWORD *)(v0 + 1168);
  v29 = *(_QWORD *)(v0 + 1160);
  v34 = *(_QWORD *)(v0 + 1136);
  v36 = *(_QWORD *)(v0 + 1128);
  v38 = *(_QWORD *)(v0 + 1104);
  v39 = *(_QWORD *)(v0 + 1080);
  v41 = *(_QWORD *)(v0 + 1056);
  v43 = *(_QWORD *)(v0 + 1048);
  v45 = *(_QWORD *)(v0 + 1040);
  v30 = *(_QWORD *)(v0 + 1152);
  v31 = *(_QWORD *)(v0 + 1032);
  v32 = *(_QWORD *)(v0 + 1144);
  v33 = *(_QWORD *)(v0 + 1024);
  v35 = *(_QWORD *)(v0 + 1000);
  v37 = *(_QWORD *)(v0 + 992);
  v40 = *(_QWORD *)(v0 + 984);
  v42 = *(_QWORD *)(v0 + 976);
  v44 = *(_QWORD *)(v0 + 968);
  v46 = *(_QWORD *)(v0 + 960);
  v47 = *(_QWORD *)(v0 + 952);
  v48 = *(_QWORD *)(v0 + 944);
  v49 = *(_QWORD *)(v0 + 936);
  v50 = *(_QWORD *)(v0 + 928);
  v51 = *(_QWORD *)(v0 + 920);
  v52 = *(_QWORD *)(v0 + 912);
  v53 = *(_QWORD *)(v0 + 904);
  v54 = *(_QWORD *)(v0 + 896);
  v55 = *(_QWORD *)(v0 + 888);
  v56 = *(_QWORD *)(v0 + 880);
  v57 = *(_QWORD *)(v0 + 872);
  v58 = *(_QWORD *)(v0 + 864);
  v59 = *(_QWORD *)(v0 + 856);
  v60 = *(_QWORD *)(v0 + 832);
  v61 = *(_QWORD *)(v0 + 808);
  v62 = *(_QWORD *)(v0 + 800);
  v64 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v10, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041B46C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const char *v7;
  unint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1800);
  v4 = *(_QWORD *)(*v1 + 800);
  *(_QWORD *)(*v1 + 1808) = v0;
  swift_task_dealloc(v3);
  sub_10000D0F0(v4, &qword_1007C03E0);
  v5 = *(_QWORD *)(v2 + 1792);
  v6 = *(_QWORD *)(v2 + 1784);
  v7 = *(const char **)(v2 + 1768);
  v18 = *(_QWORD *)(v2 + 1744);
  v19 = *(_QWORD *)(v2 + 1752);
  v17 = *(_QWORD *)(v2 + 1736);
  v15 = *(_QWORD *)(v2 + 1760);
  v16 = *(_QWORD *)(v2 + 1728);
  v8 = *(_QWORD *)(v2 + 1720);
  v9 = *(_QWORD *)(v2 + 1712);
  v10 = *(const char **)(v2 + 1704);
  v11 = *(_QWORD *)(v2 + 1696);
  if (v0)
  {
    v12 = *(_QWORD *)(v2 + 1376);
    swift_bridgeObjectRelease(*(const char **)(v2 + 1680));
    sub_100225AA0(v6, v5);
    sub_10031B09C(v11, v10, v9, v8, v16, v17, v18, v19, v15, v7);
    v13 = sub_10041E6BC;
  }
  else
  {
    v12 = *(_QWORD *)(v2 + 1376);
    sub_100225AA0(v6, v5);
    sub_10031B09C(v11, v10, v9, v8, v16, v17, v18, v19, v15, v7);
    v13 = sub_10041B5C4;
  }
  return swift_task_switch(v13, v12, 0);
}

uint64_t sub_10041B5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  void (*v88)(uint64_t, uint64_t, __n128);
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  const char *v111;
  uint64_t v112;
  __n128 v113;
  char v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(void);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, _QWORD, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t);
  void (*v179)(uint64_t, uint64_t);
  void (*v180)(uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  unsigned int v183;
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(uint64_t, uint64_t);
  void (*v194)(uint64_t, uint64_t);
  uint64_t v195;
  void (*v196)(uint64_t, _QWORD, uint64_t);
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(uint64_t, uint64_t);
  uint64_t (*v204)(uint64_t, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t);
  unsigned int (*v218)(uint64_t, uint64_t, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221[2];

  v1 = *(_QWORD *)(v0 + 832);
  sub_10031B09C(*(_QWORD *)(v0 + 1696), *(const char **)(v0 + 1704), *(_QWORD *)(v0 + 1712), *(_QWORD *)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(const char **)(v0 + 1768));
  v2 = sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Exchange Contact CONTINUE. Imported contact", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v7 = *(_QWORD *)(v0 + 1048);
  v8 = *(_QWORD *)(v0 + 1008);

  v6(v7, v8);
  *(_OWORD *)(v0 + 1816) = *(_OWORD *)(v0 + 1672);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1496);
  v10 = *(_QWORD *)(v0 + 1112);
  v11 = *(_QWORD *)(v0 + 920);
  sub_100221F28(*(_QWORD *)(v0 + 776), v11, &qword_1007BA320);
  LODWORD(v10) = v9(v11, 1, v10);
  v12 = sub_10000D0F0(v11, &qword_1007BA320);
  if ((_DWORD)v10 == 1)
  {
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
    v14 = *(_QWORD *)(v0 + 1008);
    v15 = *(_QWORD *)(v0 + 968);
    SFAirDrop.ContactRequest.contact.getter(v12);
    if (v13(v15, 1, v14) == 1)
    {
      v16 = (uint64_t *)(v0 + 968);
    }
    else
    {
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v33 = *(_QWORD *)(v0 + 1008);
      v34 = *(_QWORD *)(v0 + 960);
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 1472))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 968), v33);
      sub_1003EF5A8(v34);
      if (v32(v34, 1, v33) != 1)
      {
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1608);
        v196 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
        v203 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
        v75 = *(_QWORD *)(v0 + 1328);
        v209 = *(_QWORD *)(v0 + 1312);
        v217 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
        v76 = *(_QWORD *)(v0 + 1304);
        v77 = *(_QWORD *)(v0 + 1288);
        v78 = *(_QWORD *)(v0 + 1032);
        v79 = *(_QWORD *)(v0 + 1024);
        v80 = *(_QWORD *)(v0 + 1008);
        v81 = *(_QWORD *)(v0 + 792);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1472))(v79, *(_QWORD *)(v0 + 960), v80);
        sub_100420578(v78, v79, v81);
        v82 = v76 + *(int *)(sub_100008384(&qword_1007BB628) + 48);
        v74(v76, v79, v80);
        v83 = sub_100008384((uint64_t *)&unk_1007BB630);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v82, v81, v83);
        v196(v76, enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:), v77);
        sub_10053D3FC(v76, v75);
        v203(v76, v77);
        v217(v75, v209);
        return swift_task_switch(sub_10041C49C, 0, 0);
      }
      v16 = (uint64_t *)(v0 + 960);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1016) + 8))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 1008));
    }
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
    v36 = *(_QWORD *)(v0 + 1248);
    v37 = *(_QWORD *)(v0 + 1160);
    v38 = *(_QWORD *)(v0 + 1112);
    sub_10000D0F0(*v16, &qword_1007BA300);
    v39 = v35(v37, v36, v38);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
      v43 = *(_QWORD *)(v0 + 1008);
      v44 = *(_QWORD *)(v0 + 952);
      v45 = swift_slowAlloc(22, -1);
      v214 = swift_slowAlloc(32, -1);
      v221[0] = v214;
      *(_DWORD *)v45 = 141558275;
      *(_QWORD *)(v0 + 640) = 1752392040;
      v46 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v45 + 4);
      *(_WORD *)(v45 + 12) = 2081;
      SFAirDrop.ContactRequest.contact.getter(v46);
      if (v42(v44, 1, v43) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 952), &qword_1007BA300);
        v47 = (const char *)0x800000010061AD50;
        v48 = 0xD000000000000020;
      }
      else
      {
        v84 = *(_QWORD *)(v0 + 1016);
        v85 = *(_QWORD *)(v0 + 1008);
        v86 = *(_QWORD *)(v0 + 952);
        v48 = SFAirDrop.ContactInfo.description.getter();
        v47 = v87;
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v86, v85);
      }
      v88 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
      v89 = *(_QWORD *)(v0 + 1160);
      v90 = *(_QWORD *)(v0 + 1112);
      *(_QWORD *)(v0 + 648) = sub_100228BD8(v48, (unint64_t)v47, v221);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v45 + 14);
      v91 = swift_bridgeObjectRelease(v47);
      v88(v89, v90, v91);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy(v214, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v214, -1, -1);
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {
      v71 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
      v72 = *(_QWORD *)(v0 + 1160);
      v73 = *(_QWORD *)(v0 + 1112);

      v71(v72, v73);
    }
    v183 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 1120) + 104))(*(_QWORD *)(v0 + 1184));
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1480);
    v173 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1400);
    v178 = *(void (**)(uint64_t, uint64_t))(v0 + 1408);
    v93 = *(_QWORD *)(v0 + 1328);
    v190 = *(_QWORD *)(v0 + 1312);
    v94 = *(_QWORD *)(v0 + 1304);
    v95 = *(_QWORD *)(v0 + 1288);
    v96 = *(_QWORD *)(v0 + 1248);
    v97 = *(_QWORD *)(v0 + 1184);
    v98 = *(_QWORD *)(v0 + 1112);
    v210 = *(_QWORD *)(v0 + 1008);
    v218 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1464);
    v197 = *(_QWORD *)(v0 + 944);
    v204 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
    v99 = v94 + *(int *)(sub_100008384(&qword_1007BB620) + 48);
    v92(v94, v96, v98);
    v92(v99, v97, v98);
    v173(v94, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v95);
    sub_10053D3FC(v94, v93);
    v178(v94, v95);
    v100 = v204(v93, v190);
    SFAirDrop.ContactRequest.contact.getter(v100);
    if (v218(v197, 1, v210) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 944), &qword_1007BA300);
      v101 = 0;
      v102 = 0;
    }
    else
    {
      v103 = *(_QWORD *)(v0 + 1016);
      v104 = *(_QWORD *)(v0 + 1008);
      v105 = *(_QWORD *)(v0 + 944);
      v101 = SFAirDrop.ContactInfo.accountHandle.getter();
      v102 = v106;
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v104);
    }
    v179 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v107 = *(_QWORD *)(v0 + 1216);
    v108 = *(_QWORD *)(v0 + 1184);
    v109 = *(_QWORD *)(v0 + 1120);
    v110 = *(_QWORD *)(v0 + 1112);
    sub_10038F828(v101, v102, (_QWORD *)(v0 + 368));
    v111 = *(const char **)(v0 + 376);
    v112 = *(_QWORD *)(v0 + 384);
    v169 = *(_QWORD *)(v0 + 392);
    v174 = *(_QWORD *)(v0 + 368);
    v211 = *(_QWORD *)(v0 + 408);
    v219 = *(_QWORD *)(v0 + 400);
    v198 = *(_QWORD *)(v0 + 424);
    v205 = *(_QWORD *)(v0 + 416);
    v191 = *(_QWORD *)(v0 + 432);
    v165 = *(_QWORD *)(v0 + 448);
    v167 = *(const char **)(v0 + 440);
    v113 = swift_bridgeObjectRelease(v102);
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v109 + 104))(v107, v183, v110, v113);
    v114 = static SFAirDrop.ContactRequest.== infix(_:_:)(v108, v107);
    v179(v107, v110);
    if ((v114 & 1) != 0)
    {
      v115 = 0;
      v111 = 0;
      v112 = 0;
      v116 = 0;
      v117 = 0;
      v118 = 0;
      v119 = 0;
      v120 = 0;
      v121 = 0;
      v122 = 0;
      v123 = 0;
    }
    else
    {
      sub_10031B134((_QWORD *)(v0 + 368), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
      v116 = v169;
      v115 = v174;
      v118 = v211;
      v117 = v219;
      v120 = v198;
      v119 = v205;
      v121 = v191;
      v123 = v165;
      v122 = v167;
    }
    v212 = v118;
    v220 = v117;
    v199 = v120;
    v206 = v119;
    *(_QWORD *)(v0 + 1944) = v123;
    *(_QWORD *)(v0 + 1936) = v122;
    *(_QWORD *)(v0 + 1928) = v121;
    *(_QWORD *)(v0 + 1920) = v120;
    *(_QWORD *)(v0 + 1912) = v119;
    *(_QWORD *)(v0 + 1904) = v118;
    *(_QWORD *)(v0 + 1896) = v117;
    *(_QWORD *)(v0 + 1888) = v116;
    *(_QWORD *)(v0 + 1880) = v112;
    *(_QWORD *)(v0 + 1872) = v111;
    *(_QWORD *)(v0 + 1864) = v115;
    v124 = v121;
    v192 = v121;
    v125 = *(uint64_t (**)(void))(v0 + 1480);
    v126 = *(_QWORD *)(v0 + 1328);
    v170 = *(_QWORD *)(v0 + 1312);
    v175 = *(_QWORD *)(v0 + 1216);
    v180 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    v184 = *(_QWORD *)(v0 + 896);
    v127 = *(_QWORD *)(v0 + 880);
    *(_QWORD *)(v0 + 280) = v115;
    *(_QWORD *)(v0 + 288) = v111;
    *(_QWORD *)(v0 + 296) = v112;
    *(_QWORD *)(v0 + 304) = v116;
    *(_QWORD *)(v0 + 312) = v117;
    *(_QWORD *)(v0 + 320) = v118;
    *(_QWORD *)(v0 + 328) = v119;
    *(_QWORD *)(v0 + 336) = v120;
    *(_QWORD *)(v0 + 344) = v124;
    *(_QWORD *)(v0 + 352) = v122;
    *(_QWORD *)(v0 + 360) = v123;
    v128 = v125();
    v129 = CurrentValueSubject.value.getter(v128);
    SFAirDropReceive.Transfer.id.getter(v129);
    v180(v126, v170);
    sub_10031B004(v115, v111, v112, v116, v220, v212, v206, v199, v192, v122);
    sub_100478E78(v175, v127, v0 + 280, v184);
    v130 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
    *(_QWORD *)(v0 + 1952) = v130;
    *v130 = v0;
    v130[1] = sub_10041D024;
    return sub_10050B098(*(_QWORD *)(v0 + 896));
  }
  else
  {
    v17 = swift_retain_n(*(_QWORD *)(v0 + 784), 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v193 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
      v20 = *(_QWORD *)(v0 + 1328);
      v171 = *(_QWORD *)(v0 + 1312);
      v176 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1416);
      v21 = *(_QWORD *)(v0 + 1104);
      v181 = *(_QWORD *)(v0 + 1088);
      v185 = *(void (**)(uint64_t, uint64_t))(v0 + 1448);
      v22 = *(_QWORD *)(v0 + 1080);
      v23 = *(_QWORD *)(v0 + 1064);
      v200 = *(_QWORD *)(v0 + 784);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v213 = swift_slowAlloc(32, -1);
      v221[0] = v213;
      *(_DWORD *)v24 = 136315138;
      v25 = CurrentValueSubject.value.getter(v213);
      SFAirDropReceive.Transfer.askRequest.getter(v25);
      v26 = v176(v20, v171);
      SFAirDropReceive.AskRequest.type.getter(v26);
      v185(v21, v181);
      v27 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v23, v27);
      v30 = v29;
      v193(v22, v23);
      *(_QWORD *)(v0 + 672) = sub_100228BD8(v28, (unint64_t)v30, v221);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v0 + 680, v24 + 4);
      swift_bridgeObjectRelease(v30);
      swift_release_n(v200, 2);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}", v24, 0xCu);
      swift_arrayDestroy(v213, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v213, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {
      v49 = *(_QWORD *)(v0 + 784);

      v31 = swift_release_n(v49, 2);
    }
    v50 = Logger.logObject.getter(v31);
    v51 = static os_log_type_t.default.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Exchange Contact END", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
    }
    v53 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
    v194 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v201 = *(_QWORD *)(v0 + 1352);
    v207 = *(_QWORD *)(v0 + 1344);
    v215 = *(_QWORD *)(v0 + 1368);
    v186 = *(_QWORD *)(v0 + 1248);
    v188 = *(_QWORD *)(v0 + 1280);
    v54 = *(_QWORD *)(v0 + 1112);
    v55 = *(_QWORD *)(v0 + 1056);
    v56 = *(_QWORD *)(v0 + 1016);
    v57 = *(_QWORD *)(v0 + 1008);
    v58 = *(_QWORD *)(v0 + 872);
    v59 = *(_QWORD *)(v0 + 864);
    v60 = *(_QWORD *)(v0 + 840);

    v53(v59, v60);
    sub_10000D0F0(v58, &qword_1007B6BF0);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
    v194(v186, v54);
    sub_1002443C8(v188, _s15ExchangeRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v215, v207);
    v208 = *(_QWORD *)(v0 + 1816);
    v216 = *(_QWORD *)(v0 + 1824);
    v61 = *(_QWORD *)(v0 + 1360);
    v62 = *(_QWORD *)(v0 + 1336);
    v63 = *(_QWORD *)(v0 + 1328);
    v64 = *(_QWORD *)(v0 + 1304);
    v65 = *(_QWORD *)(v0 + 1280);
    v66 = *(_QWORD *)(v0 + 1256);
    v67 = *(_QWORD *)(v0 + 1248);
    v68 = *(_QWORD *)(v0 + 1240);
    v69 = *(_QWORD *)(v0 + 1232);
    v131 = *(_QWORD *)(v0 + 1224);
    v132 = *(_QWORD *)(v0 + 1216);
    v133 = *(_QWORD *)(v0 + 1208);
    v134 = *(_QWORD *)(v0 + 1200);
    v135 = *(_QWORD *)(v0 + 1192);
    v136 = *(_QWORD *)(v0 + 1184);
    v137 = *(_QWORD *)(v0 + 1176);
    v138 = *(_QWORD *)(v0 + 1168);
    v139 = *(_QWORD *)(v0 + 1160);
    v140 = *(_QWORD *)(v0 + 1152);
    v141 = *(_QWORD *)(v0 + 1144);
    v142 = *(_QWORD *)(v0 + 1136);
    v143 = *(_QWORD *)(v0 + 1128);
    v144 = *(_QWORD *)(v0 + 1104);
    v145 = *(_QWORD *)(v0 + 1080);
    v146 = *(_QWORD *)(v0 + 1056);
    v147 = *(_QWORD *)(v0 + 1048);
    v148 = *(_QWORD *)(v0 + 1040);
    v149 = *(_QWORD *)(v0 + 1032);
    v150 = *(_QWORD *)(v0 + 1024);
    v151 = *(_QWORD *)(v0 + 1000);
    v152 = *(_QWORD *)(v0 + 992);
    v153 = *(_QWORD *)(v0 + 984);
    v154 = *(_QWORD *)(v0 + 976);
    v155 = *(_QWORD *)(v0 + 968);
    v156 = *(_QWORD *)(v0 + 960);
    v157 = *(_QWORD *)(v0 + 952);
    v158 = *(_QWORD *)(v0 + 944);
    v159 = *(_QWORD *)(v0 + 936);
    v160 = *(_QWORD *)(v0 + 928);
    v161 = *(_QWORD *)(v0 + 920);
    v162 = *(_QWORD *)(v0 + 912);
    v163 = *(_QWORD *)(v0 + 904);
    v164 = *(_QWORD *)(v0 + 896);
    v166 = *(_QWORD *)(v0 + 888);
    v168 = *(_QWORD *)(v0 + 880);
    v172 = *(_QWORD *)(v0 + 872);
    v177 = *(_QWORD *)(v0 + 864);
    v182 = *(_QWORD *)(v0 + 856);
    v187 = *(_QWORD *)(v0 + 832);
    v189 = *(_QWORD *)(v0 + 808);
    v195 = *(_QWORD *)(v0 + 800);
    v202 = *(_QWORD *)(v0 + 792);
    swift_task_dealloc(*(_QWORD *)(v0 + 1368));
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v152);
    swift_task_dealloc(v153);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v163);
    swift_task_dealloc(v164);
    swift_task_dealloc(v166);
    swift_task_dealloc(v168);
    swift_task_dealloc(v172);
    swift_task_dealloc(v177);
    swift_task_dealloc(v182);
    swift_task_dealloc(v187);
    swift_task_dealloc(v189);
    swift_task_dealloc(v195);
    swift_task_dealloc(v202);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v208, v216);
  }
}

uint64_t sub_10041C49C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[99];
  v2 = swift_task_alloc(32);
  v0[229] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[230] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[231] = v4;
  *v4 = v0;
  v4[1] = sub_10041C544;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[147], &unk_1007BA3B8, v2, sub_10042341C, v3, 0, 0, v0[139]);
}

uint64_t sub_10041C544()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1848);
  *(_QWORD *)(*(_QWORD *)v1 + 1856) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10041CBC4;
    v5 = 0;
  }
  else
  {
    v6 = v2[230];
    v7 = v2[229];
    v8 = v2[172];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_10041C5C4;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10041C5C4()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  __n128 v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  const char *v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, _QWORD, uint64_t);
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  void (*v76)(uint64_t, uint64_t, __n128);
  void (*v77)(uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v80 = v0 + 46;
  v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[185];
  v2 = v0[148];
  v3 = v0[146];
  v4 = v0[139];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[140] + 32))(v2, v0[147], v4);
  v5 = v1(v3, v2, v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v76 = (void (*)(uint64_t, uint64_t, __n128))v0[186];
    v8 = v0[146];
    v9 = v0[139];
    v97 = v0[129];
    v89 = v0[126];
    v93 = v0[128];
    v81 = v0[99];
    v85 = v0[127];
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(32, -1);
    v101 = v11;
    *(_DWORD *)v10 = 141558275;
    v0[82] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 82, v0 + 83, v10 + 4);
    *(_WORD *)(v10 + 12) = 2081;
    v12 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v9, v12);
    v15 = (const char *)v14;
    v0[83] = sub_100228BD8(v13, v14, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 83, v0 + 84, v10 + 14);
    v16 = swift_bridgeObjectRelease(v15);
    v76(v8, v9, v16);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Exchange Contact CONTINUE. Share back permission {contactToSend: %{private,mask.hash}s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    sub_10000D0F0(v81, &qword_1007BA3A8);
    v17 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v17(v93, v89);
    v18 = v97;
    v19 = v89;
  }
  else
  {
    v20 = (void (*)(uint64_t, uint64_t))v0[186];
    v21 = v0[146];
    v22 = v0[139];
    v23 = v0[129];
    v24 = v0[128];
    v25 = v0[127];
    v26 = v0[126];
    v27 = v0[99];

    v20(v21, v22);
    sub_10000D0F0(v27, &qword_1007BA3A8);
    v17 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v17(v24, v26);
    v18 = v23;
    v19 = v26;
  }
  v17(v18, v19);
  v28 = (void (*)(uint64_t, uint64_t, uint64_t))v0[185];
  v98 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[183];
  v73 = (void (*)(uint64_t, _QWORD, uint64_t))v0[175];
  v77 = (void (*)(uint64_t, uint64_t))v0[176];
  v29 = v0[166];
  v30 = v0[163];
  v31 = v0[161];
  v32 = v0[156];
  v33 = v0[148];
  v34 = v0[139];
  v90 = (uint64_t (*)(uint64_t, uint64_t))v0[177];
  v94 = v0[126];
  v82 = v0[164];
  v86 = v0[118];
  v35 = v30 + *(int *)(sub_100008384(&qword_1007BB620) + 48);
  v28(v30, v32, v34);
  v28(v35, v33, v34);
  v73(v30, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v31);
  sub_10053D3FC(v30, v29);
  v77(v30, v31);
  v36 = v90(v29, v82);
  SFAirDrop.ContactRequest.contact.getter(v36);
  if (v98(v86, 1, v94) == 1)
  {
    sub_10000D0F0(v0[118], &qword_1007BA300);
    v37 = 0;
    v38 = 0;
  }
  else
  {
    v39 = v0[127];
    v40 = v0[126];
    v41 = v0[118];
    v37 = SFAirDrop.ContactInfo.accountHandle.getter();
    v38 = v42;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  v78 = (void (*)(uint64_t, uint64_t))v0[186];
  v43 = v0[152];
  v44 = v0[148];
  v45 = v0[140];
  v46 = v0[139];
  sub_10038F828(v37, v38, v80);
  v47 = (const char *)v0[47];
  v48 = v0[48];
  v71 = v0[49];
  v74 = v0[46];
  v99 = v0[50];
  v91 = v0[52];
  v95 = v0[51];
  v49 = v0[54];
  v83 = (const char *)v0[55];
  v87 = v0[53];
  v69 = v0[56];
  v50 = swift_bridgeObjectRelease(v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v45 + 104))(v43, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v46, v50);
  v51 = static SFAirDrop.ContactRequest.== infix(_:_:)(v44, v43);
  v78(v43, v46);
  if ((v51 & 1) != 0)
  {
    v52 = 0;
    v47 = 0;
    v48 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v56 = 0;
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v60 = 0;
  }
  else
  {
    sub_10031B134(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
    v58 = v49;
    v53 = v71;
    v52 = v74;
    v54 = v99;
    v56 = v91;
    v55 = v95;
    v59 = v83;
    v57 = v87;
    v60 = v69;
  }
  v100 = v54;
  v92 = v56;
  v96 = v55;
  v84 = v59;
  v88 = v57;
  v0[243] = v60;
  v0[242] = v59;
  v0[241] = v58;
  v0[240] = v57;
  v0[239] = v56;
  v0[238] = v55;
  v0[237] = v54;
  v0[236] = v53;
  v0[235] = v48;
  v0[234] = v47;
  v0[233] = v52;
  v61 = v59;
  v62 = (uint64_t (*)(void))v0[185];
  v63 = v0[166];
  v70 = v0[164];
  v72 = v0[152];
  v75 = (void (*)(uint64_t, uint64_t))v0[177];
  v79 = v0[112];
  v64 = v0[110];
  v0[35] = v52;
  v0[36] = v47;
  v0[37] = v48;
  v0[38] = v53;
  v0[39] = v54;
  v0[40] = v55;
  v0[41] = v56;
  v0[42] = v57;
  v0[43] = v58;
  v0[44] = v61;
  v0[45] = v60;
  v65 = v62();
  v66 = CurrentValueSubject.value.getter(v65);
  SFAirDropReceive.Transfer.id.getter(v66);
  v75(v63, v70);
  sub_10031B004(v52, v47, v48, v53, v100, v96, v92, v88, v58, v84);
  sub_100478E78(v72, v64, (uint64_t)(v0 + 35), v79);
  v67 = (_QWORD *)swift_task_alloc(dword_1007C4A1C);
  v0[244] = v67;
  *v67 = v0;
  v67[1] = sub_10041D024;
  return sub_10050B098(v0[112]);
}

uint64_t sub_10041CBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1840);
  v2 = *(_QWORD *)(v0 + 1832);
  v3 = *(_QWORD *)(v0 + 1376);
  swift_bridgeObjectRelease(*(const char **)(v0 + 1824));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10041CC24, v3, 0);
}

uint64_t sub_10041CC24()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v66 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v68 = *(_QWORD *)(v0 + 1280);
  v62 = *(_QWORD *)(v0 + 1112);
  v64 = *(_QWORD *)(v0 + 1248);
  v2 = *(_QWORD *)(v0 + 1056);
  v3 = *(_QWORD *)(v0 + 1032);
  v4 = *(_QWORD *)(v0 + 1024);
  v5 = *(_QWORD *)(v0 + 1016);
  v6 = *(_QWORD *)(v0 + 1008);
  v7 = *(_QWORD *)(v0 + 872);
  v8 = *(_QWORD *)(v0 + 864);
  v9 = *(_QWORD *)(v0 + 840);
  sub_10000D0F0(*(_QWORD *)(v0 + 792), &qword_1007BA3A8);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v3, v6);
  v1(v8, v9);
  sub_10000D0F0(v7, &qword_1007B6BF0);
  v10(v2, v6);
  v66(v64, v62);
  sub_1002443C8(v68, _s15ExchangeRequestVMa);
  v11 = *(_QWORD *)(v0 + 1368);
  v12 = *(_QWORD *)(v0 + 1360);
  v13 = *(_QWORD *)(v0 + 1336);
  v14 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1304);
  v16 = *(_QWORD *)(v0 + 1280);
  v17 = *(_QWORD *)(v0 + 1256);
  v18 = *(_QWORD *)(v0 + 1248);
  v19 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);
  v25 = *(_QWORD *)(v0 + 1200);
  v26 = *(_QWORD *)(v0 + 1192);
  v27 = *(_QWORD *)(v0 + 1184);
  v28 = *(_QWORD *)(v0 + 1176);
  v29 = *(_QWORD *)(v0 + 1168);
  v30 = *(_QWORD *)(v0 + 1160);
  v35 = *(_QWORD *)(v0 + 1136);
  v37 = *(_QWORD *)(v0 + 1128);
  v39 = *(_QWORD *)(v0 + 1104);
  v40 = *(_QWORD *)(v0 + 1080);
  v42 = *(_QWORD *)(v0 + 1056);
  v44 = *(_QWORD *)(v0 + 1048);
  v46 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1152);
  v32 = *(_QWORD *)(v0 + 1032);
  v33 = *(_QWORD *)(v0 + 1144);
  v34 = *(_QWORD *)(v0 + 1024);
  v36 = *(_QWORD *)(v0 + 1000);
  v38 = *(_QWORD *)(v0 + 992);
  v41 = *(_QWORD *)(v0 + 984);
  v43 = *(_QWORD *)(v0 + 976);
  v45 = *(_QWORD *)(v0 + 968);
  v47 = *(_QWORD *)(v0 + 960);
  v48 = *(_QWORD *)(v0 + 952);
  v49 = *(_QWORD *)(v0 + 944);
  v50 = *(_QWORD *)(v0 + 936);
  v51 = *(_QWORD *)(v0 + 928);
  v52 = *(_QWORD *)(v0 + 920);
  v53 = *(_QWORD *)(v0 + 912);
  v54 = *(_QWORD *)(v0 + 904);
  v55 = *(_QWORD *)(v0 + 896);
  v56 = *(_QWORD *)(v0 + 888);
  v57 = *(_QWORD *)(v0 + 880);
  v58 = *(_QWORD *)(v0 + 872);
  v59 = *(_QWORD *)(v0 + 864);
  v60 = *(_QWORD *)(v0 + 856);
  v61 = *(_QWORD *)(v0 + 832);
  v63 = *(_QWORD *)(v0 + 808);
  v65 = *(_QWORD *)(v0 + 800);
  v67 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v11, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041D024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1952);
  *(_QWORD *)(*v1 + 1960) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1376);
    swift_bridgeObjectRelease(*(const char **)(v2 + 1824));
    v5 = sub_10041EAE0;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 1376);
    v5 = sub_10041D098;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_10041D098()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  void (*v4)(uint64_t, uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v111 = (_QWORD *)(v0 + 368);
  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 1480))(*(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1112));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v108 = v2;
  if (os_log_type_enabled(v2, v3))
  {
    v83 = *(_OWORD *)(v0 + 1928);
    v89 = *(_QWORD *)(v0 + 1904);
    v92 = *(_QWORD *)(v0 + 1912);
    v85 = *(_QWORD *)(v0 + 1896);
    v79 = *(_QWORD *)(v0 + 1880);
    v81 = *(_QWORD *)(v0 + 1888);
    v75 = *(_QWORD *)(v0 + 1864);
    v77 = *(const char **)(v0 + 1872);
    v4 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1488);
    v100 = *(_QWORD *)(v0 + 1920);
    v104 = *(_QWORD *)(v0 + 1184);
    v5 = *(_QWORD *)(v0 + 1152);
    v6 = *(_QWORD *)(v0 + 1112);
    v96 = *(_QWORD *)(v0 + 896);
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(32, -1);
    v114 = v8;
    *(_DWORD *)v7 = 141558275;
    *(_QWORD *)(v0 + 624) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632, v7 + 4);
    *(_WORD *)(v7 + 12) = 2081;
    v9 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = (const char *)v11;
    *(_QWORD *)(v0 + 632) = sub_100228BD8(v10, v11, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640, v7 + 14);
    v13 = swift_bridgeObjectRelease(v12);
    v4(v5, v6, v13);
    _os_log_impl((void *)&_mh_execute_header, v108, v3, "Exchange Contact CONTINUE. Shared back {contactToSend: %{private,mask.hash}s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    sub_10031B09C(v75, v77, v79, v81, v85, v89, v92, v100, v83, *((const char **)&v83 + 1));
    sub_10031B134(v111, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_1002443C8(v96, _s16ExchangeResponseVMa);
    v14 = ((uint64_t (*)(uint64_t, uint64_t))v4)(v104, v6);
  }
  else
  {
    v87 = *(_OWORD *)(v0 + 1928);
    v90 = *(_QWORD *)(v0 + 1904);
    v93 = *(_QWORD *)(v0 + 1912);
    v15 = *(_QWORD *)(v0 + 1896);
    v16 = *(_QWORD *)(v0 + 1888);
    v17 = *(_QWORD *)(v0 + 1880);
    v18 = *(const char **)(v0 + 1872);
    v19 = *(_QWORD *)(v0 + 1864);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
    v101 = *(_QWORD *)(v0 + 1920);
    v105 = *(_QWORD *)(v0 + 1184);
    v21 = *(_QWORD *)(v0 + 1152);
    v22 = *(_QWORD *)(v0 + 1112);
    v97 = *(_QWORD *)(v0 + 896);

    v20(v21, v22);
    sub_10031B09C(v19, v18, v17, v16, v15, v90, v93, v101, v87, *((const char **)&v87 + 1));
    sub_10031B134(v111, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_1002443C8(v97, _s16ExchangeResponseVMa);
    v14 = ((uint64_t (*)(uint64_t, uint64_t))v20)(v105, v22);
  }
  v23 = Logger.logObject.getter(v14);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Exchange Contact END", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }
  v26 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v102 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v106 = *(_QWORD *)(v0 + 1352);
  v109 = *(_QWORD *)(v0 + 1344);
  v112 = *(_QWORD *)(v0 + 1368);
  v94 = *(_QWORD *)(v0 + 1248);
  v98 = *(_QWORD *)(v0 + 1280);
  v27 = *(_QWORD *)(v0 + 1112);
  v28 = *(_QWORD *)(v0 + 1056);
  v29 = *(_QWORD *)(v0 + 1016);
  v30 = *(_QWORD *)(v0 + 1008);
  v31 = *(_QWORD *)(v0 + 872);
  v32 = *(_QWORD *)(v0 + 864);
  v33 = *(_QWORD *)(v0 + 840);

  v26(v32, v33);
  sub_10000D0F0(v31, &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  v102(v94, v27);
  sub_1002443C8(v98, _s15ExchangeRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v112, v109);
  v110 = *(_QWORD *)(v0 + 1816);
  v113 = *(_QWORD *)(v0 + 1824);
  v34 = *(_QWORD *)(v0 + 1360);
  v35 = *(_QWORD *)(v0 + 1336);
  v36 = *(_QWORD *)(v0 + 1328);
  v37 = *(_QWORD *)(v0 + 1304);
  v38 = *(_QWORD *)(v0 + 1280);
  v39 = *(_QWORD *)(v0 + 1256);
  v40 = *(_QWORD *)(v0 + 1248);
  v41 = *(_QWORD *)(v0 + 1240);
  v42 = *(_QWORD *)(v0 + 1232);
  v44 = *(_QWORD *)(v0 + 1224);
  v45 = *(_QWORD *)(v0 + 1216);
  v46 = *(_QWORD *)(v0 + 1208);
  v47 = *(_QWORD *)(v0 + 1200);
  v48 = *(_QWORD *)(v0 + 1192);
  v49 = *(_QWORD *)(v0 + 1184);
  v50 = *(_QWORD *)(v0 + 1176);
  v51 = *(_QWORD *)(v0 + 1168);
  v52 = *(_QWORD *)(v0 + 1160);
  v53 = *(_QWORD *)(v0 + 1152);
  v54 = *(_QWORD *)(v0 + 1144);
  v55 = *(_QWORD *)(v0 + 1136);
  v56 = *(_QWORD *)(v0 + 1128);
  v57 = *(_QWORD *)(v0 + 1104);
  v58 = *(_QWORD *)(v0 + 1080);
  v59 = *(_QWORD *)(v0 + 1056);
  v60 = *(_QWORD *)(v0 + 1048);
  v61 = *(_QWORD *)(v0 + 1040);
  v62 = *(_QWORD *)(v0 + 1032);
  v63 = *(_QWORD *)(v0 + 1024);
  v64 = *(_QWORD *)(v0 + 1000);
  v65 = *(_QWORD *)(v0 + 992);
  v66 = *(_QWORD *)(v0 + 984);
  v67 = *(_QWORD *)(v0 + 976);
  v68 = *(_QWORD *)(v0 + 968);
  v69 = *(_QWORD *)(v0 + 960);
  v70 = *(_QWORD *)(v0 + 952);
  v71 = *(_QWORD *)(v0 + 944);
  v72 = *(_QWORD *)(v0 + 936);
  v73 = *(_QWORD *)(v0 + 928);
  v74 = *(_QWORD *)(v0 + 920);
  v76 = *(_QWORD *)(v0 + 912);
  v78 = *(_QWORD *)(v0 + 904);
  v80 = *(_QWORD *)(v0 + 896);
  v82 = *(_QWORD *)(v0 + 888);
  v84 = *(_QWORD *)(v0 + 880);
  v86 = *(_QWORD *)(v0 + 872);
  v88 = *(_QWORD *)(v0 + 864);
  v91 = *(_QWORD *)(v0 + 856);
  v95 = *(_QWORD *)(v0 + 832);
  v99 = *(_QWORD *)(v0 + 808);
  v103 = *(_QWORD *)(v0 + 800);
  v107 = *(_QWORD *)(v0 + 792);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  swift_task_dealloc(v95);
  swift_task_dealloc(v99);
  swift_task_dealloc(v103);
  swift_task_dealloc(v107);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v110, v113);
}

uint64_t sub_10041D7CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1976);
  *(_QWORD *)(*v1 + 1984) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10041DF10;
  else
    v4 = sub_10041D830;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1376), 0);
}

uint64_t sub_10041D830()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1968);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1352);
  v4 = *(_QWORD *)(v0 + 1344);
  v5 = *(_QWORD *)(v0 + 1280);
  v6 = *(_QWORD *)(v0 + 1248);
  v7 = *(_QWORD *)(v0 + 1144);
  v8 = *(_QWORD *)(v0 + 1112);
  sub_1002443C8(*(_QWORD *)(v0 + 888), _s16ExchangeResponseVMa);
  v1(v7, v8);
  v1(v6, v8);
  sub_1002443C8(v5, _s15ExchangeRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v9 = *(_QWORD *)(v0 + 1360);
  v10 = *(_QWORD *)(v0 + 1336);
  v11 = *(_QWORD *)(v0 + 1328);
  v12 = *(_QWORD *)(v0 + 1304);
  v13 = *(_QWORD *)(v0 + 1280);
  v14 = *(_QWORD *)(v0 + 1256);
  v15 = *(_QWORD *)(v0 + 1248);
  v16 = *(_QWORD *)(v0 + 1240);
  v17 = *(_QWORD *)(v0 + 1232);
  v19 = *(_QWORD *)(v0 + 1224);
  v20 = *(_QWORD *)(v0 + 1216);
  v21 = *(_QWORD *)(v0 + 1208);
  v22 = *(_QWORD *)(v0 + 1200);
  v23 = *(_QWORD *)(v0 + 1192);
  v24 = *(_QWORD *)(v0 + 1184);
  v25 = *(_QWORD *)(v0 + 1176);
  v26 = *(_QWORD *)(v0 + 1168);
  v27 = *(_QWORD *)(v0 + 1160);
  v28 = *(_QWORD *)(v0 + 1152);
  v29 = *(_QWORD *)(v0 + 1144);
  v30 = *(_QWORD *)(v0 + 1136);
  v31 = *(_QWORD *)(v0 + 1128);
  v32 = *(_QWORD *)(v0 + 1104);
  v33 = *(_QWORD *)(v0 + 1080);
  v34 = *(_QWORD *)(v0 + 1056);
  v35 = *(_QWORD *)(v0 + 1048);
  v36 = *(_QWORD *)(v0 + 1040);
  v37 = *(_QWORD *)(v0 + 1032);
  v38 = *(_QWORD *)(v0 + 1024);
  v39 = *(_QWORD *)(v0 + 1000);
  v40 = *(_QWORD *)(v0 + 992);
  v41 = *(_QWORD *)(v0 + 984);
  v42 = *(_QWORD *)(v0 + 976);
  v43 = *(_QWORD *)(v0 + 968);
  v44 = *(_QWORD *)(v0 + 960);
  v45 = *(_QWORD *)(v0 + 952);
  v46 = *(_QWORD *)(v0 + 944);
  v47 = *(_QWORD *)(v0 + 936);
  v48 = *(_QWORD *)(v0 + 928);
  v49 = *(_QWORD *)(v0 + 920);
  v50 = *(_QWORD *)(v0 + 912);
  v51 = *(_QWORD *)(v0 + 904);
  v52 = *(_QWORD *)(v0 + 896);
  v53 = *(_QWORD *)(v0 + 888);
  v54 = *(_QWORD *)(v0 + 880);
  v55 = *(_QWORD *)(v0 + 872);
  v56 = *(_QWORD *)(v0 + 864);
  v57 = *(_QWORD *)(v0 + 856);
  v58 = *(_QWORD *)(v0 + 832);
  v59 = *(_QWORD *)(v0 + 808);
  v60 = *(_QWORD *)(v0 + 800);
  v61 = *(_QWORD *)(v0 + 792);
  swift_task_dealloc(*(_QWORD *)(v0 + 1368));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_10041DBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 1368);
  v2 = *(_QWORD *)(v0 + 1360);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1304);
  v6 = *(_QWORD *)(v0 + 1280);
  v7 = *(_QWORD *)(v0 + 1256);
  v8 = *(_QWORD *)(v0 + 1248);
  v9 = *(_QWORD *)(v0 + 1240);
  v11 = *(_QWORD *)(v0 + 1232);
  v12 = *(_QWORD *)(v0 + 1224);
  v13 = *(_QWORD *)(v0 + 1216);
  v14 = *(_QWORD *)(v0 + 1208);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1192);
  v17 = *(_QWORD *)(v0 + 1184);
  v18 = *(_QWORD *)(v0 + 1176);
  v19 = *(_QWORD *)(v0 + 1168);
  v20 = *(_QWORD *)(v0 + 1160);
  v26 = *(_QWORD *)(v0 + 1136);
  v28 = *(_QWORD *)(v0 + 1128);
  v30 = *(_QWORD *)(v0 + 1104);
  v31 = *(_QWORD *)(v0 + 1080);
  v33 = *(_QWORD *)(v0 + 1056);
  v35 = *(_QWORD *)(v0 + 1048);
  v21 = *(_QWORD *)(v0 + 1040);
  v22 = *(_QWORD *)(v0 + 1152);
  v23 = *(_QWORD *)(v0 + 1032);
  v24 = *(_QWORD *)(v0 + 1144);
  v25 = *(_QWORD *)(v0 + 1024);
  v27 = *(_QWORD *)(v0 + 1000);
  v29 = *(_QWORD *)(v0 + 992);
  v32 = *(_QWORD *)(v0 + 984);
  v34 = *(_QWORD *)(v0 + 976);
  v36 = *(_QWORD *)(v0 + 968);
  v37 = *(_QWORD *)(v0 + 960);
  v38 = *(_QWORD *)(v0 + 952);
  v39 = *(_QWORD *)(v0 + 944);
  v40 = *(_QWORD *)(v0 + 936);
  v41 = *(_QWORD *)(v0 + 928);
  v42 = *(_QWORD *)(v0 + 920);
  v43 = *(_QWORD *)(v0 + 912);
  v44 = *(_QWORD *)(v0 + 904);
  v45 = *(_QWORD *)(v0 + 896);
  v46 = *(_QWORD *)(v0 + 888);
  v47 = *(_QWORD *)(v0 + 880);
  v48 = *(_QWORD *)(v0 + 872);
  v49 = *(_QWORD *)(v0 + 864);
  v50 = *(_QWORD *)(v0 + 856);
  v51 = *(_QWORD *)(v0 + 832);
  v52 = *(_QWORD *)(v0 + 808);
  v53 = *(_QWORD *)(v0 + 800);
  v54 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v1, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041DF10()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1968);
  v2 = *(_QWORD *)(v0 + 1280);
  v3 = *(_QWORD *)(v0 + 1248);
  v4 = *(_QWORD *)(v0 + 1144);
  v5 = *(_QWORD *)(v0 + 1112);
  sub_1002443C8(*(_QWORD *)(v0 + 888), _s16ExchangeResponseVMa);
  v1(v4, v5);
  v1(v3, v5);
  sub_1002443C8(v2, _s15ExchangeRequestVMa);
  v6 = *(_QWORD *)(v0 + 1368);
  v7 = *(_QWORD *)(v0 + 1360);
  v8 = *(_QWORD *)(v0 + 1336);
  v9 = *(_QWORD *)(v0 + 1328);
  v10 = *(_QWORD *)(v0 + 1304);
  v11 = *(_QWORD *)(v0 + 1280);
  v12 = *(_QWORD *)(v0 + 1256);
  v13 = *(_QWORD *)(v0 + 1248);
  v14 = *(_QWORD *)(v0 + 1240);
  v16 = *(_QWORD *)(v0 + 1232);
  v17 = *(_QWORD *)(v0 + 1224);
  v18 = *(_QWORD *)(v0 + 1216);
  v19 = *(_QWORD *)(v0 + 1208);
  v20 = *(_QWORD *)(v0 + 1200);
  v21 = *(_QWORD *)(v0 + 1192);
  v22 = *(_QWORD *)(v0 + 1184);
  v23 = *(_QWORD *)(v0 + 1176);
  v24 = *(_QWORD *)(v0 + 1168);
  v25 = *(_QWORD *)(v0 + 1160);
  v30 = *(_QWORD *)(v0 + 1136);
  v32 = *(_QWORD *)(v0 + 1128);
  v34 = *(_QWORD *)(v0 + 1104);
  v35 = *(_QWORD *)(v0 + 1080);
  v37 = *(_QWORD *)(v0 + 1056);
  v39 = *(_QWORD *)(v0 + 1048);
  v41 = *(_QWORD *)(v0 + 1040);
  v26 = *(_QWORD *)(v0 + 1152);
  v27 = *(_QWORD *)(v0 + 1032);
  v28 = *(_QWORD *)(v0 + 1144);
  v29 = *(_QWORD *)(v0 + 1024);
  v31 = *(_QWORD *)(v0 + 1000);
  v33 = *(_QWORD *)(v0 + 992);
  v36 = *(_QWORD *)(v0 + 984);
  v38 = *(_QWORD *)(v0 + 976);
  v40 = *(_QWORD *)(v0 + 968);
  v42 = *(_QWORD *)(v0 + 960);
  v43 = *(_QWORD *)(v0 + 952);
  v44 = *(_QWORD *)(v0 + 944);
  v45 = *(_QWORD *)(v0 + 936);
  v46 = *(_QWORD *)(v0 + 928);
  v47 = *(_QWORD *)(v0 + 920);
  v48 = *(_QWORD *)(v0 + 912);
  v49 = *(_QWORD *)(v0 + 904);
  v50 = *(_QWORD *)(v0 + 896);
  v51 = *(_QWORD *)(v0 + 888);
  v52 = *(_QWORD *)(v0 + 880);
  v53 = *(_QWORD *)(v0 + 872);
  v54 = *(_QWORD *)(v0 + 864);
  v55 = *(_QWORD *)(v0 + 856);
  v56 = *(_QWORD *)(v0 + 832);
  v57 = *(_QWORD *)(v0 + 808);
  v58 = *(_QWORD *)(v0 + 800);
  v59 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v6, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041E2B0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v63 = *(_QWORD *)(v0 + 1280);
  v2 = *(_QWORD *)(v0 + 1248);
  v3 = *(_QWORD *)(v0 + 1232);
  v4 = *(_QWORD *)(v0 + 1112);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1016);
  v7 = *(_QWORD *)(v0 + 1008);
  v8 = *(_QWORD *)(v0 + 904);
  sub_10031B09C(*(_QWORD *)(v0 + 1504), *(const char **)(v0 + 1512), *(_QWORD *)(v0 + 1520), *(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1536), *(_QWORD *)(v0 + 1544), *(_QWORD *)(v0 + 1552), *(_QWORD *)(v0 + 1560), *(_QWORD *)(v0 + 1568), *(const char **)(v0 + 1576));
  sub_10031B134((_QWORD *)(v0 + 456), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v8, _s16ExchangeResponseVMa);
  v1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v1(v2, v4);
  sub_1002443C8(v63, _s15ExchangeRequestVMa);
  v9 = *(_QWORD *)(v0 + 1368);
  v10 = *(_QWORD *)(v0 + 1360);
  v11 = *(_QWORD *)(v0 + 1336);
  v12 = *(_QWORD *)(v0 + 1328);
  v13 = *(_QWORD *)(v0 + 1304);
  v14 = *(_QWORD *)(v0 + 1280);
  v15 = *(_QWORD *)(v0 + 1256);
  v16 = *(_QWORD *)(v0 + 1248);
  v17 = *(_QWORD *)(v0 + 1240);
  v19 = *(_QWORD *)(v0 + 1232);
  v20 = *(_QWORD *)(v0 + 1224);
  v21 = *(_QWORD *)(v0 + 1216);
  v22 = *(_QWORD *)(v0 + 1208);
  v23 = *(_QWORD *)(v0 + 1200);
  v24 = *(_QWORD *)(v0 + 1192);
  v25 = *(_QWORD *)(v0 + 1184);
  v26 = *(_QWORD *)(v0 + 1176);
  v27 = *(_QWORD *)(v0 + 1168);
  v28 = *(_QWORD *)(v0 + 1160);
  v33 = *(_QWORD *)(v0 + 1136);
  v35 = *(_QWORD *)(v0 + 1128);
  v37 = *(_QWORD *)(v0 + 1104);
  v38 = *(_QWORD *)(v0 + 1080);
  v40 = *(_QWORD *)(v0 + 1056);
  v42 = *(_QWORD *)(v0 + 1048);
  v44 = *(_QWORD *)(v0 + 1040);
  v29 = *(_QWORD *)(v0 + 1152);
  v30 = *(_QWORD *)(v0 + 1032);
  v31 = *(_QWORD *)(v0 + 1144);
  v32 = *(_QWORD *)(v0 + 1024);
  v34 = *(_QWORD *)(v0 + 1000);
  v36 = *(_QWORD *)(v0 + 992);
  v39 = *(_QWORD *)(v0 + 984);
  v41 = *(_QWORD *)(v0 + 976);
  v43 = *(_QWORD *)(v0 + 968);
  v45 = *(_QWORD *)(v0 + 960);
  v46 = *(_QWORD *)(v0 + 952);
  v47 = *(_QWORD *)(v0 + 944);
  v48 = *(_QWORD *)(v0 + 936);
  v49 = *(_QWORD *)(v0 + 928);
  v50 = *(_QWORD *)(v0 + 920);
  v51 = *(_QWORD *)(v0 + 912);
  v52 = *(_QWORD *)(v0 + 904);
  v53 = *(_QWORD *)(v0 + 896);
  v54 = *(_QWORD *)(v0 + 888);
  v55 = *(_QWORD *)(v0 + 880);
  v56 = *(_QWORD *)(v0 + 872);
  v57 = *(_QWORD *)(v0 + 864);
  v58 = *(_QWORD *)(v0 + 856);
  v59 = *(_QWORD *)(v0 + 832);
  v60 = *(_QWORD *)(v0 + 808);
  v61 = *(_QWORD *)(v0 + 800);
  v62 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v9, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041E6BC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v65 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v67 = *(_QWORD *)(v0 + 1280);
  v61 = *(_QWORD *)(v0 + 1112);
  v63 = *(_QWORD *)(v0 + 1248);
  v3 = *(_QWORD *)(v0 + 1056);
  v4 = *(_QWORD *)(v0 + 1048);
  v5 = *(_QWORD *)(v0 + 1008);
  v6 = *(_QWORD *)(v0 + 872);
  v7 = *(_QWORD *)(v0 + 864);
  v8 = *(_QWORD *)(v0 + 840);
  v9 = *(_QWORD *)(v0 + 832);
  sub_10031B09C(*(_QWORD *)(v0 + 1696), *(const char **)(v0 + 1704), *(_QWORD *)(v0 + 1712), *(_QWORD *)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(const char **)(v0 + 1768));
  sub_1002443C8(v9, type metadata accessor for SDAirDropServerConnection);
  v1(v4, v5);
  v2(v7, v8);
  sub_10000D0F0(v6, &qword_1007B6BF0);
  v1(v3, v5);
  v65(v63, v61);
  sub_1002443C8(v67, _s15ExchangeRequestVMa);
  v10 = *(_QWORD *)(v0 + 1368);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1336);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1304);
  v15 = *(_QWORD *)(v0 + 1280);
  v16 = *(_QWORD *)(v0 + 1256);
  v17 = *(_QWORD *)(v0 + 1248);
  v18 = *(_QWORD *)(v0 + 1240);
  v20 = *(_QWORD *)(v0 + 1232);
  v21 = *(_QWORD *)(v0 + 1224);
  v22 = *(_QWORD *)(v0 + 1216);
  v23 = *(_QWORD *)(v0 + 1208);
  v24 = *(_QWORD *)(v0 + 1200);
  v25 = *(_QWORD *)(v0 + 1192);
  v26 = *(_QWORD *)(v0 + 1184);
  v27 = *(_QWORD *)(v0 + 1176);
  v28 = *(_QWORD *)(v0 + 1168);
  v29 = *(_QWORD *)(v0 + 1160);
  v34 = *(_QWORD *)(v0 + 1136);
  v36 = *(_QWORD *)(v0 + 1128);
  v38 = *(_QWORD *)(v0 + 1104);
  v39 = *(_QWORD *)(v0 + 1080);
  v41 = *(_QWORD *)(v0 + 1056);
  v43 = *(_QWORD *)(v0 + 1048);
  v45 = *(_QWORD *)(v0 + 1040);
  v30 = *(_QWORD *)(v0 + 1152);
  v31 = *(_QWORD *)(v0 + 1032);
  v32 = *(_QWORD *)(v0 + 1144);
  v33 = *(_QWORD *)(v0 + 1024);
  v35 = *(_QWORD *)(v0 + 1000);
  v37 = *(_QWORD *)(v0 + 992);
  v40 = *(_QWORD *)(v0 + 984);
  v42 = *(_QWORD *)(v0 + 976);
  v44 = *(_QWORD *)(v0 + 968);
  v46 = *(_QWORD *)(v0 + 960);
  v47 = *(_QWORD *)(v0 + 952);
  v48 = *(_QWORD *)(v0 + 944);
  v49 = *(_QWORD *)(v0 + 936);
  v50 = *(_QWORD *)(v0 + 928);
  v51 = *(_QWORD *)(v0 + 920);
  v52 = *(_QWORD *)(v0 + 912);
  v53 = *(_QWORD *)(v0 + 904);
  v54 = *(_QWORD *)(v0 + 896);
  v55 = *(_QWORD *)(v0 + 888);
  v56 = *(_QWORD *)(v0 + 880);
  v57 = *(_QWORD *)(v0 + 872);
  v58 = *(_QWORD *)(v0 + 864);
  v59 = *(_QWORD *)(v0 + 856);
  v60 = *(_QWORD *)(v0 + 832);
  v62 = *(_QWORD *)(v0 + 808);
  v64 = *(_QWORD *)(v0 + 800);
  v66 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v10, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041EAE0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  v65 = *(_QWORD *)(v0 + 1248);
  v67 = *(_QWORD *)(v0 + 1280);
  v3 = *(_QWORD *)(v0 + 1184);
  v4 = *(_QWORD *)(v0 + 1112);
  v59 = *(_QWORD *)(v0 + 1016);
  v61 = *(_QWORD *)(v0 + 1008);
  v63 = *(_QWORD *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 872);
  v7 = *(_QWORD *)(v0 + 864);
  v8 = *(_QWORD *)(v0 + 840);
  sub_10031B09C(*(_QWORD *)(v0 + 1864), *(const char **)(v0 + 1872), *(_QWORD *)(v0 + 1880), *(_QWORD *)(v0 + 1888), *(_QWORD *)(v0 + 1896), *(_QWORD *)(v0 + 1904), *(_QWORD *)(v0 + 1912), *(_QWORD *)(v0 + 1920), *(_QWORD *)(v0 + 1928), *(const char **)(v0 + 1936));
  sub_10031B134((_QWORD *)(v0 + 368), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v5, _s16ExchangeResponseVMa);
  v2(v3, v4);
  v1(v7, v8);
  sub_10000D0F0(v6, &qword_1007B6BF0);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v61);
  v2(v65, v4);
  sub_1002443C8(v67, _s15ExchangeRequestVMa);
  v9 = *(_QWORD *)(v0 + 1368);
  v10 = *(_QWORD *)(v0 + 1360);
  v11 = *(_QWORD *)(v0 + 1336);
  v12 = *(_QWORD *)(v0 + 1328);
  v13 = *(_QWORD *)(v0 + 1304);
  v14 = *(_QWORD *)(v0 + 1280);
  v15 = *(_QWORD *)(v0 + 1256);
  v16 = *(_QWORD *)(v0 + 1248);
  v17 = *(_QWORD *)(v0 + 1240);
  v19 = *(_QWORD *)(v0 + 1232);
  v20 = *(_QWORD *)(v0 + 1224);
  v21 = *(_QWORD *)(v0 + 1216);
  v22 = *(_QWORD *)(v0 + 1208);
  v23 = *(_QWORD *)(v0 + 1200);
  v24 = *(_QWORD *)(v0 + 1192);
  v25 = *(_QWORD *)(v0 + 1184);
  v26 = *(_QWORD *)(v0 + 1176);
  v27 = *(_QWORD *)(v0 + 1168);
  v28 = *(_QWORD *)(v0 + 1160);
  v33 = *(_QWORD *)(v0 + 1136);
  v35 = *(_QWORD *)(v0 + 1128);
  v37 = *(_QWORD *)(v0 + 1104);
  v38 = *(_QWORD *)(v0 + 1080);
  v40 = *(_QWORD *)(v0 + 1056);
  v42 = *(_QWORD *)(v0 + 1048);
  v44 = *(_QWORD *)(v0 + 1040);
  v29 = *(_QWORD *)(v0 + 1152);
  v30 = *(_QWORD *)(v0 + 1032);
  v31 = *(_QWORD *)(v0 + 1144);
  v32 = *(_QWORD *)(v0 + 1024);
  v34 = *(_QWORD *)(v0 + 1000);
  v36 = *(_QWORD *)(v0 + 992);
  v39 = *(_QWORD *)(v0 + 984);
  v41 = *(_QWORD *)(v0 + 976);
  v43 = *(_QWORD *)(v0 + 968);
  v45 = *(_QWORD *)(v0 + 960);
  v46 = *(_QWORD *)(v0 + 952);
  v47 = *(_QWORD *)(v0 + 944);
  v48 = *(_QWORD *)(v0 + 936);
  v49 = *(_QWORD *)(v0 + 928);
  v50 = *(_QWORD *)(v0 + 920);
  v51 = *(_QWORD *)(v0 + 912);
  v52 = *(_QWORD *)(v0 + 904);
  v53 = *(_QWORD *)(v0 + 896);
  v54 = *(_QWORD *)(v0 + 888);
  v55 = *(_QWORD *)(v0 + 880);
  v56 = *(_QWORD *)(v0 + 872);
  v57 = *(_QWORD *)(v0 + 864);
  v58 = *(_QWORD *)(v0 + 856);
  v60 = *(_QWORD *)(v0 + 832);
  v62 = *(_QWORD *)(v0 + 808);
  v64 = *(_QWORD *)(v0 + 800);
  v66 = *(_QWORD *)(v0 + 792);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(v9, *(_QWORD *)(v0 + 1344));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10041EF24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  __n128 v46;
  uint8_t *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint8_t *v52;
  uint8_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v59 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDrop.TransferType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v52 - v13;
  SFAirDropReceive.AskRequest.type.getter(v12);
  v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
  v57 = v7;
  v16 = v15(v14, v7);
  if ((_DWORD)v16 == enum case for SFAirDrop.TransferType.peerPayment(_:))
  {
    static SFPlatform.macOS.getter(v16);
    v17 = static SFPlatform.isPlatform(_:)(v6);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v17 & 1) != 0)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x800000010061AE60, "DaemoniOSLibrary/SDAirDropReceiveStateMachine+Runner.swift", 58, 2, 224, 0);
      __break(1u);
    }
    else
    {
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Verifying peerPayment support", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      v22 = objc_msgSend((id)objc_opt_self(SDNearbyPeerPaymentReceiverCoordinator), "verifyReceiverEligibility");
      if (v22)
      {
        v23 = v22;
        v24 = type metadata accessor for SFAirDropReceive.Failure(0);
        v25 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        swift_allocError(v24, v25, 0, 0);
        v27 = v26;
        v28 = v23;
        CodableError.init(_:)(v28);
        v29 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, enum case for SFAirDropReceive.Failure.unexpected(_:), v24);
        swift_willThrow(v29);

      }
      else
      {
        v49 = Logger.logObject.getter(0);
        v50 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v51 = 0;
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "Device supports peerPayment", v51, 2u);
          swift_slowDealloc(v51, -1, -1);
        }

      }
    }
  }
  else
  {
    v30 = v55;
    v31 = v56;
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16))(v55, a1, v56);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      LODWORD(v58) = v35;
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v54 = v37;
      v62 = v37;
      v53 = v36;
      *(_DWORD *)v36 = 136315138;
      v52 = v36 + 4;
      v38 = SFAirDropReceive.AskRequest.type.getter(v37);
      v39 = SFAirDrop.TransferType.description.getter(v38);
      v41 = v40;
      v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      v43 = v11;
      v44 = v30;
      v45 = v57;
      v42(v43, v57);
      v60 = sub_100228BD8(v39, (unint64_t)v41, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v52);
      v46 = swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v44, v31, v46);
      v47 = v53;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v58, "Transfer type %s is supported", v53, 0xCu);
      v48 = v54;
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v31);
      v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      v45 = v57;
    }
    v42(v14, v45);
  }
}

uint64_t sub_10041F440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10041F4A0, 0, 0);
}

uint64_t sub_10041F4A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[6] = v4;
  v5 = type metadata accessor for SFAirDrop.ContactRequest(0);
  *v4 = v0;
  v4[1] = sub_10041F550;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[2], &unk_1007C04F8, v2, sub_100424408, v3, 0, 0, v5);
}

uint64_t sub_10041F550()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10041F5D0, 0, 0);
  v5 = *(_QWORD *)(v3 + 32);
  swift_task_dealloc(*(_QWORD *)(v3 + 40));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10041F5D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041F60C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a2;
  v3 = sub_100008384(&qword_1007C04E8);
  v2[3] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[4] = v4;
  v2[5] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C04F0);
  v2[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[7] = v6;
  v2[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[9] = static AirDropActor.shared;
  return swift_task_switch(sub_10041F6D0, v7, 0);
}

uint64_t sub_10041F6D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0[2] + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)+ OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation, v3);
  SFProgressContinuation.task.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_10041F790;
  return SFProgressTask.finalValue.getter(v0 + 12, v0[3]);
}

uint64_t sub_10041F790()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(*v1 + 32);
  v4 = *(_QWORD *)(*v1 + 40);
  v6 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_10041F8B0;
  else
    v7 = sub_10041F81C;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 72), 0);
}

uint64_t sub_10041F81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for CancellationError(0);
  v2 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
  swift_allocError(v1, v2, 0, 0);
  v3 = CancellationError.init()();
  swift_willThrow(v3);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041F8B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041F8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  Swift::String v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  const char *object;
  __n128 v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t result;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t *);
  unsigned int v122;
  uint64_t (*v123)(char *, uint64_t);
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, char *, uint64_t);
  char *v144;
  void (*v145)(char *, char *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  unint64_t v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;

  v128 = a1;
  v138 = a2;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v137 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  __chkstk_darwin(v4);
  v134 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  __chkstk_darwin(v6);
  v132 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100008384(&qword_1007B5280);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v155 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v127 = *(_QWORD *)(v10 - 8);
  v150 = v10;
  __chkstk_darwin(v10);
  v144 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B5328);
  v153 = *(_QWORD *)(v12 - 8);
  v154 = v12;
  __chkstk_darwin(v12);
  v159 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v147 = *((_QWORD *)v143 - 1);
  __chkstk_darwin(v143);
  v124 = (uint64_t *)((char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v152 = *(_QWORD *)(v133 - 8);
  v15 = __chkstk_darwin(v133);
  v130 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v151 = (char *)&v117 - v17;
  v157 = type metadata accessor for SFAirDrop.TransferType(0);
  v146 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v20 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v24 = *(_QWORD *)(v23 - 8);
  v141 = v23;
  __chkstk_darwin(v23);
  v26 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100008384(&qword_1007BBD28);
  v27 = *(_QWORD *)(v149 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  v29 = __chkstk_darwin(v149);
  v156 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v117 - v30;
  v148 = (char *)&v117 - v30;
  v33 = SFProgressContinuation.init(_:initialProgress:file:line:)(0xD00000000000001ELL, 0x800000010061AD80, v32, 0xD00000000000006ALL, 0x800000010061ACE0, 429, (char *)&type metadata for () + 8, v10);
  v142 = *(_QWORD *)(v158 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v34 = CurrentValueSubject.value.getter(v33);
  SFAirDropReceive.Transfer.askRequest.getter(v34);
  v140 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  v35 = v140(v26, v23);
  SFAirDropReceive.AskRequest.type.getter(v35);
  v36 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  v37 = v36(v22, v139);
  v123 = v36;
  v38 = SFAirDrop.TransferType.isOnlyExchange.getter(v37);
  v158 = *(_QWORD *)(v146 + 8);
  ((void (*)(char *, uint64_t))v158)(v19, v157);
  v39 = 1885693259;
  if ((v38 & 1) == 0)
    v39 = 0x656E696C636544;
  v40 = 0xE700000000000000;
  if ((v38 & 1) != 0)
    v40 = 0xE400000000000000;
  v41 = v124;
  *v124 = v39;
  v41[1] = v40;
  v122 = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  v121 = *(void (**)(uint64_t *))(v147 + 104);
  v121(v41);
  v145 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v42 = v156;
  v43 = v31;
  v44 = v149;
  v145(v156, v43, v149);
  v45 = *(unsigned __int8 *)(v27 + 80);
  v129 = v28;
  v125 = ((v45 + 16) & ~v45) + v28;
  v46 = (v45 + 16) & ~v45;
  v126 = v46;
  v146 = v45;
  v147 = v45 | 7;
  v47 = swift_allocObject(&unk_1007284B0, v125, v45 | 7);
  v131 = v27;
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v48(v47 + v46, v42, v44);
  v49 = SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x656E696C636544, 0xE700000000000000, v41, 0, sub_100423570, v47);
  v50 = CurrentValueSubject.value.getter(v49);
  SFAirDropReceive.Transfer.askRequest.getter(v50);
  v51 = v140(v26, v141);
  SFAirDropReceive.AskRequest.type.getter(v51);
  v52 = v139;
  v53 = v36(v22, v139);
  LOBYTE(v47) = SFAirDrop.TransferType.isOnlyExchange.getter(v53);
  ((void (*)(char *, uint64_t))v158)(v19, v157);
  v54 = 0x747065636341;
  if ((v47 & 1) != 0)
    v54 = 0x6574656C6544;
  v55 = v41;
  *v41 = v54;
  v41[1] = 0xE600000000000000;
  ((void (*)(uint64_t *, _QWORD, _QWORD))v121)(v41, v122, v143);
  v56 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v144, enum case for SFAirDropReceive.ItemDestination.default(_:), v150);
  v57 = v156;
  v145(v156, v148, v44);
  v58 = swift_allocObject(&unk_1007284D8, v125, v147);
  v143 = v48;
  v48(v58 + v126, v57, v44);
  v59 = sub_100220D78(&qword_1007BBD30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v60 = sub_100220D78(&qword_1007BBD38, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v125 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  v126 = v60;
  v127 = v59;
  v61 = v56;
  v62 = v141;
  v63 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)(0x747065636341, 0xE600000000000000, v55, 0, 0, v144, sub_1004235EC, v58, v61, v59, v60, v125);
  v64 = CurrentValueSubject.value.getter(v63);
  SFAirDropReceive.Transfer.askRequest.getter(v64);
  v65 = v140;
  v66 = v140(v26, v62);
  SFAirDropReceive.AskRequest.type.getter(v66);
  v67 = v52;
  v68 = v52;
  v69 = v123;
  v70 = v123(v22, v68);
  LOBYTE(v58) = SFAirDrop.TransferType.isOnlyExchange.getter(v70);
  v71 = v157;
  v72 = ((uint64_t (*)(char *))v158)(v19);
  if ((v58 & 1) != 0)
  {
    v144 = (char *)0x8000000100615F60;
    v124 = (uint64_t *)0xD000000000000012;
  }
  else
  {
    v72 = SFAirDrop.ContactInfo.fullName.getter(v72);
    v124 = (uint64_t *)v72;
    v144 = v73;
  }
  v74 = CurrentValueSubject.value.getter(v72);
  SFAirDropReceive.Transfer.askRequest.getter(v74);
  v75 = v65(v26, v62);
  SFAirDropReceive.AskRequest.type.getter(v75);
  v76 = v69(v22, v67);
  v77 = SFAirDrop.TransferType.isOnlyExchange.getter(v76);
  v78 = ((uint64_t (*)(char *, uint64_t))v158)(v19, v71);
  v79 = v156;
  if ((v77 & 1) != 0)
  {
    v160 = SFAirDrop.ContactInfo.fullName.getter(v78);
    v161 = v80;
    v81._countAndFlagsBits = 10;
    v81._object = (void *)0xE100000000000000;
    String.append(_:)(v81);
    v82 = v118;
    SFAirDrop.ContactInfo.handle.getter();
    v83 = sub_100220D78(&qword_1007BA3F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    v84 = v120;
    v85._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v120, v83);
    object = (const char *)v85._object;
    String.append(_:)(v85);
    v87 = swift_bridgeObjectRelease(object);
    v78 = (*(uint64_t (**)(char *, uint64_t, __n128))(v119 + 8))(v82, v84, v87);
    v88 = v161;
    v157 = v160;
  }
  else
  {
    v157 = 0xD000000000000013;
    v88 = 0x8000000100615F80;
  }
  v89 = v154;
  v158 = ~v146;
  v90 = v132;
  v91 = UUID.init()(v78);
  v92 = v134;
  static Date.now.getter(v91);
  v93 = sub_100008384(&qword_1007B52B0);
  v94 = sub_100008384(&qword_1007B52B8);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(unsigned __int8 *)(v95 + 80);
  v97 = (v96 + 32) & ~v96;
  v98 = swift_allocObject(v93, v97 + *(_QWORD *)(v95 + 72), v96 | 7);
  *(_OWORD *)(v98 + 16) = xmmword_1005CD2A0;
  v99 = v98 + v97;
  sub_100008384(&qword_1007BA2B0);
  v100 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v153 + 16))(v99, v159, v89);
  UUID.init()(v100);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v95 + 104))(v99, enum case for SFAirDrop.AcceptAction.single<A>(_:), v94);
  v101 = v151;
  v102 = v130;
  v103 = v133;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v130, v151, v133);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)(v90, v92, v124, v144, v157, v88, v98, v102, 0, v150, v127, v126, v125);
  v104 = type metadata accessor for TaskPriority(0);
  v105 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v137, 1, 1, v104);
  v106 = v79;
  v107 = v79;
  v108 = v148;
  v109 = v149;
  v145(v107, v148, v149);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v110 = static AirDropActor.shared;
  v111 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v112 = (v146 + 32) & v158;
  v113 = swift_allocObject(&unk_100728500, v112 + v129, v147);
  *(_QWORD *)(v113 + 16) = v110;
  *(_QWORD *)(v113 + 24) = v111;
  v143(v113 + v112, v106, v109);
  swift_retain(v110);
  v114 = sub_100252B04(v105, (uint64_t)&unk_1007C0430, v113);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v159, v154);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v101, v103);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v108, v109);
  v115 = v138;
  (*(void (**)(uint64_t, char *, uint64_t))(v135 + 32))(v138, v155, v136);
  result = sub_100008384(&qword_1007B6BF0);
  *(_QWORD *)(v115 + *(int *)(result + 52)) = v114;
  return result;
}

uint64_t sub_100420578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  const char *object;
  Swift::String v50;
  uint64_t v51;
  unint64_t v52;
  Swift::String v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  const char *v58;
  __n128 v59;
  Swift::String v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t result;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;

  v118 = a2;
  v105 = a1;
  v116 = a3;
  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v113 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  __chkstk_darwin(v5);
  v110 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v108 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384((uint64_t *)&unk_1007BB630);
  v114 = *(_QWORD *)(v9 - 8);
  v115 = v9;
  __chkstk_darwin(v9);
  v111 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v104 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v98 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v103 = *(_QWORD *)(v12 - 8);
  v117 = v12;
  __chkstk_darwin(v12);
  v93 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007BA428);
  v122 = *(_QWORD *)(v14 - 8);
  v123 = v14;
  __chkstk_darwin(v14);
  v125 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v17 = *(_QWORD *)(v16 - 8);
  v102 = (void (*)(uint64_t, char *, uint64_t))v16;
  __chkstk_darwin(v16);
  v19 = (char **)((char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v121 = *(_QWORD *)(v107 - 8);
  v20 = __chkstk_darwin(v107);
  v106 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v124 = (char *)&v93 - v22;
  v23 = sub_100008384(&qword_1007BA430);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = __chkstk_darwin(v23);
  v27 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v93 - v28;
  v119 = (char *)&v93 - v28;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD00000000000001DLL, 0x8000000100615ED0, v30, 0xD00000000000006ALL, 0x800000010061ACE0, 454, (char *)&type metadata for () + 8, v12);
  *v19 = 0x776F4E20746F4ELL;
  v19[1] = 0xE700000000000000;
  v31 = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  v32 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 104);
  v32(v19, enum case for SFAirDrop.ButtonConfiguration.text(_:), v16);
  v120 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v120(v27, v29, v23);
  v33 = *(unsigned __int8 *)(v24 + 80);
  v100 = ~v33;
  v34 = (v33 + 16) & ~v33;
  v109 = v25;
  v35 = v34 + v25;
  v101 = v33;
  v36 = v33 | 7;
  v37 = swift_allocObject(&unk_100728438, v35, v33 | 7);
  v112 = v24;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v38(v37 + v34, v27, v23);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x776F4E20746F4ELL, 0xE700000000000000, v19, 0, sub_10042349C, v37);
  *v19 = 0x6572616853;
  v19[1] = 0xE500000000000000;
  v32(v19, v31, (uint64_t)v102);
  v39 = type metadata accessor for SFAirDrop.ContactInfo(0);
  v40 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v93, v118, v39);
  v41 = v117;
  (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v40, enum case for SFAirDrop.ContactRequest.contact(_:), v117);
  v97 = v27;
  v120(v27, v119, v23);
  v103 = v36;
  v42 = v36;
  v43 = v23;
  v44 = swift_allocObject(&unk_100728460, v35, v42);
  v102 = v38;
  v38(v44 + v34, v27, v23);
  v45 = sub_100220D78(&qword_1007BA438, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v96 = v45;
  v46 = sub_100220D78(&qword_1007BA440, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v95 = v46;
  v94 = sub_100220D78(&qword_1007BA448, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v47 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)(0x6572616853, 0xE500000000000000, v19, 0, 0, v40, sub_1004234C4, v44, v41, v45, v46, v94);
  v126 = 0x6977206572616853;
  v127 = 0xEB00000000206874;
  v48._countAndFlagsBits = SFAirDrop.ContactInfo.fullName.getter(v47);
  object = (const char *)v48._object;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(object);
  v50._countAndFlagsBits = 63;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  v105 = v126;
  v93 = (char *)v127;
  v126 = SFAirDrop.ContactInfo.fullName.getter(v51);
  v127 = v52;
  v53._countAndFlagsBits = 10272;
  v53._object = (void *)0xE200000000000000;
  String.append(_:)(v53);
  v54 = v98;
  SFAirDrop.ContactInfo.handle.getter();
  v55 = sub_100220D78(&qword_1007BA3F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
  v56 = v99;
  v57._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v99, v55);
  v58 = (const char *)v57._object;
  String.append(_:)(v57);
  v59 = swift_bridgeObjectRelease(v58);
  (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v54, v56, v59);
  v60._countAndFlagsBits = 41;
  v60._object = (void *)0xE100000000000000;
  String.append(_:)(v60);
  v61 = v126;
  v62 = v127;
  v63 = v108;
  v65 = UUID.init()(v64);
  v66 = v110;
  static Date.now.getter(v65);
  v67 = sub_100008384(&qword_1007BA450);
  v68 = sub_100008384(&qword_1007BA458);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(unsigned __int8 *)(v69 + 80);
  v71 = (v70 + 32) & ~v70;
  v72 = swift_allocObject(v67, v71 + *(_QWORD *)(v69 + 72), v70 | 7);
  *(_OWORD *)(v72 + 16) = xmmword_1005CD2A0;
  v73 = v72 + v71;
  sub_100008384(&qword_1007BA460);
  v74 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v122 + 16))(v72 + v71, v125, v123);
  v75 = (uint64_t)v113;
  UUID.init()(v74);
  v76 = v73;
  v77 = v111;
  v78 = v68;
  v79 = v107;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 104))(v76, enum case for SFAirDrop.AcceptAction.single<A>(_:), v78);
  v80 = v106;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v106, v124, v79);
  v81 = v63;
  v82 = v119;
  v83 = v62;
  v84 = v97;
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)(v81, v66, v105, v93, v61, v83, v72, v80, 0, v117, v96, v95, v94);
  v85 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v75, 1, 1, v85);
  v120(v84, v82, v43);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v86 = static AirDropActor.shared;
  v87 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v88 = (v101 + 32) & v100;
  v89 = swift_allocObject(&unk_100728488, v88 + v109, v103);
  *(_QWORD *)(v89 + 16) = v86;
  *(_QWORD *)(v89 + 24) = v87;
  v102(v89 + v88, v84, v43);
  swift_retain(v86);
  v90 = sub_100252C44(v75, (uint64_t)&unk_1007C0420, v89);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v125, v123);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v79);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v82, v43);
  v91 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v116, v77, v115);
  result = sub_100008384(&qword_1007BA3A8);
  *(_QWORD *)(v91 + *(int *)(result + 52)) = v90;
  return result;
}

uint64_t sub_100420F00(uint64_t a1, uint64_t (*a2)(_QWORD), unsigned int *a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v12 - v8, *a3, v6);
  v10 = sub_100008384(a4);
  SFProgressContinuation.finish(with:)(v9, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100420FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_100008384(&qword_1007BA478);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100421040, v7, 0);
}

uint64_t sub_100421040()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_100008384(&qword_1007BA430);
  SFProgressContinuation.task.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_100319224;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_1004210B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v4 = sub_100008384(&qword_1007C0458);
  v5 = __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v15[-v8 - 8];
  v10 = sub_100008384((uint64_t *)&unk_1007C5BB0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_10022E718((uint64_t)v9, (uint64_t)v7, &qword_1007C0458);
  v12 = a2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
  swift_beginAccess(v12, v15, 33, 0);
  sub_1004239B4((uint64_t)v7, v12);
  return swift_endAccess(v15);
}

uint64_t sub_1004211D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v5[26] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[27] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[28] = swift_task_alloc(v8);
  v5[29] = swift_task_alloc(v8);
  v5[30] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v5[31] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[32] = v10;
  v5[33] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v5[34] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[35] = v12;
  v5[36] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B6BF0);
  v5[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v14 = static AirDropActor.shared;
  v5[38] = static AirDropActor.shared;
  return swift_task_switch(sub_100421300, v14, 0);
}

uint64_t sub_100421300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 200)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess(v1, v0 + 136, 0, 0);
  sub_100244418(v1, v0 + 56);
  v2 = sub_100008384(&qword_1007C5E20);
  v3 = sub_100008384(&qword_1007C0460);
  if ((swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_10000D0F0(v0 + 96, &qword_1007C0468);
LABEL_8:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 16))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208));
    v17 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 232);
    v19 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 224);
    swift_task_dealloc(*(_QWORD *)(v0 + 296));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  sub_10026EE60((__int128 *)(v0 + 96), v0 + 16);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v4, v6, v7);
  if ((v8 & 1) == 0)
  {
    sub_10022E75C((_QWORD *)(v0 + 16));
    goto LABEL_8;
  }
  *(_QWORD *)(v0 + 312) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Ask open destination START", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }
  v12 = *(_QWORD *)(v0 + 184);

  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v13, v14);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 256);
  v37 = *(_QWORD *)(v0 + 248);
  v23 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 192);
  v26 = *(const char **)(v0 + 176);
  v25 = *(const char **)(v0 + 184);
  v27 = (int *)sub_100008384((uint64_t *)&unk_1007BB640);
  v28 = v27[12];
  v29 = v27[16];
  v34 = v22 + v27[20];
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  *(_QWORD *)(v0 + 320) = v30;
  v30(v22, v24, v35);
  *(_QWORD *)(v22 + v28) = v26;
  *(_QWORD *)(v22 + v29) = v25;
  v31 = sub_100008384(&qword_1007B5280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v34, v16, v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 104))(v22, enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:), v37);
  *(_QWORD *)&v32 = swift_bridgeObjectRetain(v26).n128_u64[0];
  swift_bridgeObjectRetain(v25, v32);
  sub_10053D3FC(v22, v15);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v22, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v39);
  return swift_task_switch(sub_1004216B0, 0, 0);
}

uint64_t sub_1004216B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[37];
  v2 = swift_task_alloc(32);
  v0[41] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[42] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[43] = v4;
  *v4 = v0;
  v4[1] = sub_100421758;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[30], &unk_1007C0470, v2, sub_100424404, v3, 0, 0, v0[26]);
}

uint64_t sub_100421758()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004217D4;
    v5 = 0;
  }
  else
  {
    v7 = v2[41];
    v6 = v2[42];
    v8 = v2[38];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_1004218BC;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1004217D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[41];
  v2 = v0[38];
  swift_task_dealloc(v0[42]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10042181C, v2, 0);
}

uint64_t sub_10042181C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10000D0F0(*(_QWORD *)(v0 + 296), &qword_1007B6BF0);
  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004218BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v23 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 208);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    v22 = *(_QWORD *)(v0 + 216);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v24 = v8;
    *(_DWORD *)v7 = 136315138;
    v21(v5, v4, v6);
    v9 = String.init<A>(describing:)(v5, v6);
    v11 = (const char *)v10;
    *(_QWORD *)(v0 + 160) = sub_100228BD8(v9, v10, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v7 + 4);
    v12 = swift_bridgeObjectRelease(v11);
    (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v4, v6, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask open destination END {destination: %s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    v13 = v23;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 296);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));

    v13 = v14;
  }
  sub_10000D0F0(v13, &qword_1007B6BF0);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  sub_10022E75C((_QWORD *)(v0 + 16));
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100421AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[12] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[13] = swift_task_alloc(v9);
  v5[14] = swift_task_alloc(v9);
  v10 = *(_QWORD *)(sub_100008384(&qword_1007B6BF0) - 8);
  v5[15] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v5[16] = v11;
  v5[17] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B68A0);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007C0478);
  v5[19] = v13;
  v5[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007C03E8);
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007C03F0);
  v5[22] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[23] = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v5[24] = v17;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[25] = swift_task_alloc(v18);
  v5[26] = swift_task_alloc(v18);
  v5[27] = swift_task_alloc(v18);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v19 = static AirDropActor.shared;
  v5[28] = static AirDropActor.shared;
  return swift_task_switch(sub_100421C80, v19, 0);
}

uint64_t sub_100421C80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0[21];
  v2 = *(_QWORD *)(v0[9] + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)
     + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess(v2, v0 + 2, 0, 0);
  sub_100221F28(v2, v1, &qword_1007C03E8);
  v3 = sub_100008384(&qword_1007C03F8);
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_10000D0F0(v0[21], &qword_1007C03E8);
    return swift_task_switch(sub_100422118, 0, 0);
  }
  else
  {
    v6 = v0[26];
    v7 = v0[27];
    v8 = v0[23];
    v9 = v0[21];
    v10 = v0[22];
    v11 = v0[17];
    v35 = v0[25];
    v36 = v0[16];
    v29 = v0[18];
    v30 = v0[15];
    v39 = v0[12];
    v40 = v0[24];
    v31 = v0[11];
    v33 = v0[10];
    v34 = v0[14];
    v41 = v0[9];
    v12 = v0[7];
    v32 = v0[8];
    SFProgressContinuation.task.getter(v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v13 = v7;
    v14 = v7;
    v15 = v10;
    v28 = v10;
    v38(v14, v6, v10);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
    sub_100221F28(v12, v11, &qword_1007B6BF0);
    v17 = *(unsigned __int8 *)(v30 + 80);
    v18 = (v17 + 16) & ~v17;
    v37 = swift_allocObject(&unk_100728528, v18 + v36, v17 | 7);
    v0[29] = v37;
    sub_10022E718(v11, v37 + v18, &qword_1007B6BF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v35, v13, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v32, v33);
    v19 = *(unsigned __int8 *)(v8 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = (v40 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = *(unsigned __int8 *)(v31 + 80);
    v23 = (v22 + v21 + 8) & ~v22;
    v24 = swift_allocObject(&unk_100728550, v23 + v39, v19 | v22 | 7);
    v0[30] = v24;
    v38(v24 + v20, v35, v28);
    *(_QWORD *)(v24 + v21) = v41;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
    v0[31] = v25;
    v25(v24 + v23, v34, v33);
    v26 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
    swift_retain(v41);
    v27 = (_QWORD *)swift_task_alloc(v26);
    v0[32] = v27;
    *v27 = v0;
    v27[1] = sub_100421F94;
    return concurrentRace<A>(priority:operation:against:)(v0[20], v0[18], &unk_1007C0490, v37, &unk_1007C04A0, v24, v0[19]);
  }
}

uint64_t sub_100421F94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  v5 = *(_QWORD *)(*v1 + 232);
  v4 = *(_QWORD *)(*v1 + 240);
  v6 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  sub_10000D0F0(v6, &qword_1007B68A0);
  swift_release(v4);
  swift_release(v5);
  if (v0)
    v7 = sub_1004223FC;
  else
    v7 = sub_100422030;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 224), 0);
}

uint64_t sub_100422030()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176));
  v7 = v2 + *(int *)(v3 + 48);
  v1(v6, v2, v4);
  sub_10022E718(v7, v5, &qword_1007C03A8);
  v8 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100422118()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = swift_task_alloc(32);
  v0[34] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[35] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[36] = v4;
  *v4 = v0;
  v4[1] = sub_1004221C0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[13], &unk_1007C0480, v2, sub_100424404, v3, 0, 0, v0[10]);
}

uint64_t sub_1004221C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100422310;
    v5 = 0;
  }
  else
  {
    v7 = v2[34];
    v6 = v2[35];
    v8 = v2[28];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_10042223C;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10042223C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  v2 = _s15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100422310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[34];
  v2 = v0[28];
  swift_task_dealloc(v0[35]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100422358, v2, 0);
}

uint64_t sub_100422358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004223FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004224B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100422548, 0, 0);
}

uint64_t sub_100422548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[8] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[9] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_1004225F0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[6], &unk_1007C04B0, v2, sub_100424404, v3, 0, 0, v0[4]);
}

uint64_t sub_1004225F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100422708;
    v5 = 0;
  }
  else
  {
    v7 = v2[8];
    v6 = v2[9];
    v8 = v2[7];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_10042266C;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_10042266C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v4 + *(int *)(sub_100008384(&qword_1007C0478) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  v6 = _s15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100422708()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[8];
  v2 = v0[7];
  swift_task_dealloc(v0[9]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100422750, v2, 0);
}

uint64_t sub_100422750()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100422784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a1;
  v5 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s15ExchangeRequestVMa(0);
  v4[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[10] = v8;
  v9 = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[11] = v9;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4[12] = static AirDropActor.shared;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v4[13] = v10;
  v11 = sub_100008384(&qword_1007C03F0);
  *v10 = v4;
  v10[1] = sub_100422884;
  return SFProgressTask.finalValue.getter(v9, v11);
}

uint64_t sub_100422884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v4 = sub_100422B2C;
  else
    v4 = sub_1004228E8;
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004228E8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD, _QWORD, _QWORD);
  unint64_t v13;
  const char *v14;
  const char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v1 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 16);
  v2 = v1(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v30 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_100220D78(&qword_1007C04A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    v10 = v5;
    v11 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v1;
    v14 = (const char *)v13;
    *(_QWORD *)(v0 + 16) = sub_100228BD8(v11, v13, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    v15 = v14;
    v1 = v12;
    v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v10, v6, v16);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Got contact exchange request before user chose to open/move, picking default destination: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v18 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v21 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v0 + 48);
  v26 = *(_QWORD *)(v0 + 24);
  v27 = v26 + *(int *)(sub_100008384(&qword_1007C0478) + 48);
  v1(v26, v25, v24);
  sub_100221DB4(v20, v27, _s15ExchangeRequestVMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v22);
  swift_task_dealloc(v20);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100422B2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100422B6C()
{
  uint64_t v0;

}

uint64_t sub_100422B98()
{
  uint64_t v0;

  v0 = sub_10053D2F0();

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100422BE8()
{
  return _s6RunnerCMa_0(0);
}

uint64_t _s6RunnerCMa_0(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007C0180, (uint64_t)&_s6RunnerCMn_0);
}

uint64_t sub_100422C04(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_1005D7F48;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 472);
}

uint64_t _s6RunnerC19PreAcceptRunResultsVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007C05D0, (uint64_t)&_s6RunnerC19PreAcceptRunResultsVMn);
}

uint64_t sub_100422C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100422C80, 0, 0);
}

uint64_t sub_100422C80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + *(int *)(sub_100008384(&qword_1007B6BF0) + 52));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[4] = v3;
  v4 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v5 = sub_100008384(&qword_1007B5A60);
  *v3 = v0;
  v3[1] = sub_100422D1C;
  return Task.value.getter(v0[2], v2, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_100422D1C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100422D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100422D7C, 0, 0);
}

uint64_t sub_100422D7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + *(int *)(sub_100008384(&qword_1007BA3A8) + 52));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[4] = v3;
  v4 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v5 = sub_100008384(&qword_1007B5A60);
  *v3 = v0;
  v3[1] = sub_100424400;
  return Task.value.getter(v0[2], v2, v4, v5, &protocol self-conformance witness table for Error);
}

void sub_100422E18(uint64_t a1)
{
  sub_100422E50(a1, &qword_1007B6BF0, &qword_1007B5280, (void (*)(_QWORD))&type metadata accessor for SFAirDropReceive.ItemDestination);
}

void sub_100422E34(uint64_t a1)
{
  sub_100422E50(a1, &qword_1007BA3A8, (uint64_t *)&unk_1007BB630, (void (*)(_QWORD))&type metadata accessor for SFAirDrop.ContactRequest);
}

void sub_100422E50(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  unint64_t v24;
  unint64_t v25;
  const char *v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v7 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(a2);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B40A0 != -1)
    swift_once(&qword_1007B40A0, sub_10042D020);
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007C07E8);
  v14 = sub_100221F28(a1, (uint64_t)v12, a2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v30 = v10;
    v18 = (uint8_t *)v17;
    v29 = swift_slowAlloc(32, -1);
    v35 = v29;
    v31 = a1;
    *(_DWORD *)v18 = 136315138;
    v28 = v18 + 4;
    v19 = sub_100008384(v32);
    SFAirDrop.PermissionRequest.id.getter(v19);
    v20 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v7, v20);
    v22 = v7;
    v23 = a4;
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v22);
    v34 = sub_100228BD8(v21, v25, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v28);
    v26 = (const char *)v25;
    a4 = v23;
    swift_bridgeObjectRelease(v26);
    sub_10000D0F0((uint64_t)v12, a2);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SDAirDropPermissionRequestTask[%s] was cancelled", v18, 0xCu);
    v27 = v29;
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_10000D0F0((uint64_t)v12, a2);
  }

  a4(0);
  sub_100008384(&qword_1007B5A60);
  Task.cancel()();
}

void sub_100423128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007BA398);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B40A0 != -1)
    swift_once(&qword_1007B40A0, sub_10042D020);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007C07E8);
  v10 = sub_100221F28(a1, (uint64_t)v8, &qword_1007BA398);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v24 = a1;
    v14 = (uint8_t *)v13;
    v23 = swift_slowAlloc(32, -1);
    v26 = v23;
    v21 = v3;
    *(_DWORD *)v14 = 136315138;
    v22 = v14 + 4;
    v15 = sub_100008384((uint64_t *)&unk_1007C3400);
    SFAirDrop.PermissionRequest.id.getter(v15);
    v16 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v2, v16);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    v25 = sub_100228BD8(v17, (unint64_t)v19, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v22);
    swift_bridgeObjectRelease(v19);
    sub_10000D0F0((uint64_t)v8, &qword_1007BA398);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropPermissionRequestTask[%s] was cancelled", v14, 0xCu);
    v20 = v23;
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_10000D0F0((uint64_t)v8, &qword_1007BA398);
  }

  sub_100008384(&qword_1007B5A60);
  Task.cancel()();
}

void sub_1004233EC()
{
  uint64_t v0;

  sub_100422E50(*(_QWORD *)(v0 + 16), &qword_1007B6BF0, &qword_1007B5280, (void (*)(_QWORD))&type metadata accessor for SFAirDropReceive.ItemDestination);
}

void sub_10042341C()
{
  uint64_t v0;

  sub_100422E50(*(_QWORD *)(v0 + 16), &qword_1007BA3A8, (uint64_t *)&unk_1007BB630, (void (*)(_QWORD))&type metadata accessor for SFAirDrop.ContactRequest);
}

uint64_t sub_10042344C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100423490()
{
  return sub_10031B818(&qword_1007BA430);
}

uint64_t sub_10042349C()
{
  return sub_10042358C(&qword_1007BA430, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDrop.ContactRequest, (unsigned int *)&enum case for SFAirDrop.ContactRequest.notNeeded(_:));
}

uint64_t sub_1004234B8()
{
  return sub_10031B818(&qword_1007BA430);
}

uint64_t sub_1004234C4(uint64_t a1)
{
  return sub_1004235F8(a1, &qword_1007BA430);
}

uint64_t sub_1004234D0()
{
  return sub_10031B3F0(&qword_1007BA430);
}

uint64_t sub_1004234DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007BA430) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1007C041C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_100420FA8(a1, v5, v6, v7);
}

uint64_t sub_100423564()
{
  return sub_10031B818(&qword_1007BBD28);
}

uint64_t sub_100423570()
{
  return sub_10042358C(&qword_1007BBD28, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDropReceive.ItemDestination, (unsigned int *)&enum case for SFAirDropReceive.ItemDestination.noItem(_:));
}

uint64_t sub_10042358C(uint64_t *a1, uint64_t (*a2)(_QWORD), unsigned int *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(a1) - 8) + 80);
  return sub_100420F00(v3 + ((v7 + 16) & ~v7), a2, a3, a1);
}

uint64_t sub_1004235E0()
{
  return sub_10031B818(&qword_1007BBD28);
}

uint64_t sub_1004235EC(uint64_t a1)
{
  return sub_1004235F8(a1, &qword_1007BBD28);
}

uint64_t sub_1004235F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100008384(a2);
  return SFProgressContinuation.finish(with:)(a1, v3);
}

uint64_t sub_10042363C()
{
  return sub_10031B3F0(&qword_1007BBD28);
}

uint64_t sub_100423648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007BBD28) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1007C042C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_1003549DC(a1, v5, v6, v7);
}

uint64_t sub_1004236D0(uint64_t a1, _QWORD *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD v44[5];

  v34 = a6;
  v37 = a5;
  v38 = a1;
  v32 = a3;
  v43 = a2;
  v40 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v36 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin(v11);
  v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v33 = *(_QWORD *)(v13 - 8);
  v14 = v33;
  __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v39 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_nearbyAgent) = a4;
  v20 = v32;
  *(_QWORD *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler) = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a1, v17);
  sub_100244418((uint64_t)v43, (uint64_t)v44);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v23 = v34;
  v22(v16, v34, v13);
  v24 = a4;
  v25 = v20;
  v26 = sub_100544E40((uint64_t)v19, v44, v37, (uint64_t)v16);
  *v10 = 0x662E657261757173;
  v10[1] = 0xEB000000006C6C69;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v36 + 104))(v10, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v40);
  v27 = swift_allocObject(&unk_1007285A0, 24, 7);
  swift_weakInit(v27 + 16, v26);
  swift_retain(v26);
  v28 = (uint64_t)v35;
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0xD000000000000017, 0x800000010061AE90, v10, 1, sub_100423EE0, v27);
  swift_retain(v26);
  sub_10053D7DC(v28, (uint64_t)v19);
  swift_release_n(v26, 2);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v23, v13);
  sub_10022E75C(v43);
  v29 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  v29(v38, v17);
  v29((uint64_t)v19, v17);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v28, v42);
  return v26;
}

uint64_t sub_1004239AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004210B4(a1, v1);
}

uint64_t sub_1004239B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007C0458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004239FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C0404);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100422C80, 0, 0);
}

uint64_t sub_100423A60()
{
  return sub_100423C80(&qword_1007B6BF0, &qword_1007B5280);
}

uint64_t sub_100423A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007B6BF0) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1007C048C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D098;
  return sub_1004224B0(a1, v5);
}

uint64_t sub_100423AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_100008384(&qword_1007C03F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100423BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007C03F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropReceive.ItemDestination(0) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1007C049C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D098;
  return sub_100422784(a1, v9, v10, v11);
}

uint64_t sub_100423C6C()
{
  return sub_100423C80(&qword_1007BA3A8, (uint64_t *)&unk_1007BB630);
}

uint64_t sub_100423C80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_100008384(a1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v6 | 7;
  v10 = v2 + v7;
  v11 = sub_100008384(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release(*(_QWORD *)(v10 + *(int *)(v4 + 52)));
  return swift_deallocObject(v2, v8, v9);
}

uint64_t sub_100423D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007BA3A8) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1007C04CC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D098;
  return sub_10041F440(a1, v5);
}

uint64_t sub_100423D7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007C04DC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D098;
  return sub_10041F60C(a1, v1);
}

uint64_t sub_100423DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C040C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100422D7C, 0, 0);
}

BOOL sub_100423E34()
{
  return MKBGetDeviceLockState(0) - 1 < 2;
}

uint64_t sub_100423E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C0404);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D12C;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100422C80, 0, 0);
}

uint64_t sub_100423EBC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100423EE0()
{
  uint64_t v0;

  return sub_1004020B4(v0);
}

uint64_t sub_100423EE8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100423F14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007C0564);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_10040223C(a1, v4, v5, v6);
}

uint64_t *sub_100423F80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for SFAirDropReceive.AskResponse(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100424028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100424084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100424100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_10042417C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004241F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100424274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100424280);
}

uint64_t sub_100424280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1004242F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100424300);
}

uint64_t sub_100424300(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10042437C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for SFAirDropReceive.AskResponse(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SFAirDropReceive.Transfer(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10042440C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C0610);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0610);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10042449C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1002741DC();
  v21[1] = v12;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  static DispatchQoS.unspecified.getter(v12);
  aBlock[0] = _swiftEmptyArrayStorage;
  v13 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v15 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000035, 0x800000010061AF40, v11, v8, v5, 0);
  *(_QWORD *)(v1 + 40) = v16;
  v17 = nw_path_monitor_create();
  *(_QWORD *)(v1 + 48) = v17;
  *(_BYTE *)(v1 + 56) = 2;
  nw_path_monitor_set_queue(v17, v16);
  aBlock[4] = sub_100424D1C;
  v23 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100424770;
  aBlock[3] = &unk_1007286A8;
  v18 = _Block_copy(aBlock);
  v19 = v23;
  swift_unknownObjectRetain(v17);
  swift_retain(v1);
  swift_release(v19);
  nw_path_monitor_set_update_handler(v17, v18);
  _Block_release(v18);
  swift_unknownObjectRelease(v17);
  return v1;
}

uint64_t sub_100424700(NSObject *a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  void (*v5)(uint64_t);
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  result = nw_path_get_status(a1);
  v4 = result;
  v5 = *(void (**)(uint64_t))(a2 + 16);
  if (v5)
    v6 = (_DWORD)result == 1;
  else
    v6 = 0;
  if (v6 && (*(_BYTE *)(a2 + 56) & 1) == 0)
  {
    v7 = *(_QWORD *)(a2 + 24);
    v8 = swift_retain(v7);
    v5(v8);
    result = sub_1002845F4((uint64_t)v5, v7);
  }
  *(_BYTE *)(a2 + 56) = v4 == 1;
  return result;
}

uint64_t sub_100424770(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1004247B8()
{
  return sub_100424954((uint64_t)sub_100424CF4, (uint64_t)&unk_100728658);
}

void sub_1004247CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  const char *v5;
  uint64_t v7;
  uint64_t v8;
  NSObject *oslog;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if (qword_1007B4098 != -1)
      swift_once(&qword_1007B4098, sub_10042440C);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007C0610);
    oslog = Logger.logObject.getter(v2);
    v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      v5 = "Network path monitor already started";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }
  }
  else
  {
    nw_path_monitor_start(*(nw_path_monitor_t *)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 1;
    if (qword_1007B4098 != -1)
      swift_once(&qword_1007B4098, sub_10042440C);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C0610);
    oslog = Logger.logObject.getter(v8);
    v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      v5 = "Network path monitor started";
      goto LABEL_10;
    }
  }

}

uint64_t sub_100424940()
{
  return sub_100424954((uint64_t)sub_100424D14, (uint64_t)&unk_100728680);
}

uint64_t sub_100424954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v2 + 40);
  aBlock[4] = a1;
  v22 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  v14 = swift_retain();
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100008384((uint64_t *)&unk_1007B6410);
  v17 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release(v22);
}

void sub_100424B18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *oslog;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    nw_path_monitor_cancel(*(nw_path_monitor_t *)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 0;
    if (qword_1007B4098 != -1)
      swift_once(&qword_1007B4098, sub_10042440C);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C0610);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      v6 = "Network path monitor stopped";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, v6, v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }
  }
  else
  {
    if (qword_1007B4098 != -1)
      swift_once(&qword_1007B4098, sub_10042440C);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C0610);
    oslog = Logger.logObject.getter(v8);
    v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      v6 = "Network path monitor already stopped";
      goto LABEL_10;
    }
  }

}

uint64_t sub_100424C88()
{
  uint64_t v0;

  sub_1002845F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 57, 7);
}

uint64_t type metadata accessor for SDPseudonymNetworkPathMonitor()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary29SDPseudonymNetworkPathMonitor);
}

uint64_t sub_100424CDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return sub_1002845F4(v4, v5);
}

void sub_100424CF4()
{
  uint64_t v0;

  sub_1004247CC(v0);
}

uint64_t sub_100424CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100424D0C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100424D14()
{
  uint64_t v0;

  sub_100424B18(v0);
}

uint64_t sub_100424D1C(NSObject *a1)
{
  uint64_t v1;

  return sub_100424700(a1, v1);
}

uint64_t sub_100424D34@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, const char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  const char *v61;
  _BYTE *v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  const char *v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  const char *v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  __n128 v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Swift::String v103;
  const char *object;
  __n128 v105;
  Swift::String v106;
  uint64_t v107;
  void (*v108)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[4];
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  _BYTE *v144;
  _BYTE *v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  const char *v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  void (*v156)(_BYTE *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  void (*v159)(_BYTE *, uint64_t, uint64_t);
  const char *v160;
  _BYTE *v161;
  uint64_t v162;
  _BYTE *v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE *v170;
  uint64_t v171;
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174[2];

  v157 = a6;
  v152 = a5;
  v153 = a4;
  v168 = a1;
  v10 = sub_100008384((uint64_t *)&unk_1007BDAD0);
  __chkstk_darwin(v10);
  v12 = &v131[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v150 = type metadata accessor for SFAirDropClient.Identifier(0);
  v148 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v149 = &v131[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100008384(&qword_1007C5E70);
  __chkstk_darwin(v14);
  v146 = &v131[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v143 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v141 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v145 = &v131[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v140 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v144 = &v131[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for Date(0);
  __chkstk_darwin(v18);
  v142 = &v131[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for SFAirDropSend.Transfer(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v155 = &v131[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __chkstk_darwin(v22);
  v163 = &v131[-v25];
  v154 = v26;
  __chkstk_darwin(v24);
  v164 = &v131[-v27];
  v171 = type metadata accessor for SFAirDropSend.Request(0);
  v162 = *(_QWORD *)(v171 - 8);
  v28 = __chkstk_darwin(v171);
  v170 = &v131[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v151 = v29;
  __chkstk_darwin(v28);
  v31 = &v131[-v30];
  v169 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v32 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v34 = &v131[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = type metadata accessor for Logger(0);
  v165 = *(_QWORD *)(v35 - 8);
  v166 = v35;
  v36 = __chkstk_darwin(v35);
  v161 = &v131[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v147 = v37;
  __chkstk_darwin(v36);
  v172 = &v131[-v38];
  v39 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v39);
  v41 = (id *)&v131[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v160 = a2;
  sub_100298F30((uint64_t)a2, (uint64_t)v41);
  v42 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v43 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42);
  v167 = v21;
  if (v43 == 1)
  {
    v136 = v20;
    v137 = a7;
    v138 = v12;
    v44 = sub_10000D0F0((uint64_t)v41, &qword_1007B7760);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v41, v42) == 3)
    {

      return sub_100425DC8(v168, v160, 0, 0, v157, a7);
    }
    v136 = v20;
    v137 = a7;
    v138 = v12;
    v44 = sub_10022E578((uint64_t)v41);
  }
  v135 = a3;
  v46 = v168;
  v47 = SFAirDropSend.Request.id.getter(v44);
  v48 = SFAirDrop.TransferIdentifier.stringValue.getter(v47);
  v50 = (const char *)v49;
  v51 = sub_1004312F0(8, v48, v49);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  swift_bridgeObjectRelease(v50);
  v58 = static String._fromSubstring(_:)(v51, v53, v55, v57);
  v60 = v59;
  v61 = v57;
  v62 = v34;
  swift_bridgeObjectRelease(v61);
  strcpy((char *)v174, "AirDrop.");
  BYTE1(v174[1]) = 0;
  WORD1(v174[1]) = 0;
  HIDWORD(v174[1]) = -402653184;
  v63._countAndFlagsBits = v58;
  v63._object = v60;
  String.append(_:)(v63);
  swift_bridgeObjectRelease((const char *)v60);
  Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, v174[0], v174[1]);
  v156 = *(void (**)(_BYTE *, uint64_t))(v32 + 8);
  v156(v34, v169);
  v64 = v162;
  v65 = v171;
  v159 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v162 + 16);
  v159(v31, v46, v171);
  v66 = v160;
  v67 = swift_bridgeObjectRetain_n(v160, 2);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.default.getter(v68);
  v70 = v69;
  if (os_log_type_enabled(v68, v69))
  {
    v71 = swift_slowAlloc(22, -1);
    v72 = swift_slowAlloc(64, -1);
    v133 = v72;
    v174[0] = v72;
    *(_DWORD *)v71 = 136315394;
    v132 = v70;
    v73 = SFAirDropSend.Request.id.getter(v72);
    v74 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v73);
    v76 = v75;
    v156(v62, v169);
    v173 = sub_100228BD8(v74, v76, v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, v174, v71 + 4);
    v77 = (const char *)v76;
    v66 = v160;
    v78 = swift_bridgeObjectRelease(v77);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v64 + 8))(v31, v65, v78);
    *(_WORD *)(v71 + 12) = 2080;
    v79 = sub_100220D78(&qword_1007B5490, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D1058);
    swift_bridgeObjectRetain(v66);
    v81 = Set.description.getter(v80, v42, v79);
    v83 = v82;
    swift_bridgeObjectRelease(v66);
    v173 = sub_100228BD8(v81, (unint64_t)v83, v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, v174, v71 + 14);
    swift_bridgeObjectRelease_n(v66, 2);
    swift_bridgeObjectRelease(v83);
    _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v132, "Send StateMachine START %s {initialEndpoints: %s}", (uint8_t *)v71, 0x16u);
    v84 = v133;
    swift_arrayDestroy(v133, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v71, -1, -1);

  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v31, v65);
    swift_bridgeObjectRelease_n(v66, 2);
  }
  v85 = v62;
  v134 = (uint64_t)v62;
  v86 = v168;
  v160 = (const char *)sub_100429838(v168, v66);
  v88 = v87;
  SFAirDropSend.Request.id.getter(v160);
  v89 = v170;
  v90 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v159)(v170, v86, v65);
  v91 = v142;
  static Date.now.getter(v90);
  v92 = v144;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v139 + 104))(v144, enum case for SFAirDropSend.Transfer.State.created(_:), v140);
  v93 = v145;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v141 + 104))(v145, enum case for SFAirDrop.DisplayPriority.normal(_:), v143);
  v94 = type metadata accessor for SFNWInterfaceType(0);
  v95 = v146;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v146, 1, 1, v94);
  v96 = v149;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v148 + 16))(v149, v157, v150);
  v97 = swift_bridgeObjectRetain(v152);
  v98 = v164;
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)(v85, v89, v160, v88, v91, v92, v93, v153, v97, v99, v95, v96);
  v174[0] = 0;
  v174[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease((const char *)v174[1]);
  strcpy((char *)v174, "AirDrop Send [");
  HIBYTE(v174[1]) = -18;
  SFAirDropSend.Request.id.getter(v100);
  v101 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v102 = v169;
  v103._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v169, v101);
  object = (const char *)v103._object;
  String.append(_:)(v103);
  v105 = swift_bridgeObjectRelease(object);
  ((void (*)(_BYTE *, uint64_t, __n128))v156)(v85, v102, v105);
  v106._countAndFlagsBits = 93;
  v106._object = (void *)0xE100000000000000;
  String.append(_:)(v106);
  v169 = v174[0];
  v160 = (const char *)v174[1];
  v107 = v167;
  v108 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v167 + 16);
  v109 = v136;
  v108(v163, v98, v136);
  v110 = v155;
  v108(v155, v98, v109);
  v159(v170, v86, v171);
  v111 = v165;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v165 + 16))(v161, v172, v166);
  sub_100221F28(v135, (uint64_t)v174, &qword_1007B8150);
  v112 = *(unsigned __int8 *)(v107 + 80);
  v113 = (v112 + 24) & ~v112;
  v114 = v162;
  v115 = *(unsigned __int8 *)(v162 + 80);
  v116 = (v154 + v115 + v113) & ~v115;
  v117 = *(unsigned __int8 *)(v111 + 80);
  v118 = (v151 + v117 + v116) & ~v117;
  v119 = (v147 + v118 + 7) & 0xFFFFFFFFFFFFFFF8;
  v120 = swift_allocObject(&unk_1007286E0, v119 + 40, v112 | v115 | v117 | 7);
  v121 = v158;
  *(_QWORD *)(v120 + 16) = v158;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v107 + 32))(v120 + v113, v110, v109);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v114 + 32))(v120 + v116, v170, v171);
  v123 = v165;
  v122 = v166;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v165 + 32))(v120 + v118, v161, v166);
  sub_100429C18((uint64_t)v174, v120 + v119);
  swift_retain(v121);
  v124 = v137;
  v125 = SFProgressTask.init(_:initialProgress:operation:file:line:)(v169, v160, v163, &unk_1007C07C0, v120, 0xD000000000000060, 0x800000010061B000, 59, v109, v109);
  v126 = v134;
  v127 = v164;
  SFAirDropSend.Transfer.id.getter(v125);
  v128 = sub_100008384(&qword_1007B6738);
  v129 = *(_QWORD *)(v128 - 8);
  v130 = (uint64_t)v138;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v129 + 16))(v138, v124, v128);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v130, 0, 1, v128);
  swift_beginAccess(v121 + 72, v174, 33, 0);
  sub_100394D98(v130, v126);
  swift_endAccess(v174);
  (*(void (**)(_BYTE *, uint64_t))(v167 + 8))(v127, v109);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v123 + 8))(v172, v122);
}

uint64_t sub_10042593C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B6738);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  swift_beginAccess(v1 + 72, &v54, 32, 0);
  v14 = *(_QWORD *)(v1 + 72);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_10045C244(a1), (v16 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v11, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v8 + 72) * v15, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    swift_endAccess(&v54);
    SFProgressTask.cancel(_:)(0, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  else
  {
    v18 = swift_endAccess(&v54);
    v19 = SFAirDrop.TransferIdentifier.stringValue.getter(v18);
    v21 = (const char *)v20;
    v22 = sub_1004312F0(8, v19, v20);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    swift_bridgeObjectRelease(v21);
    v29 = static String._fromSubstring(_:)(v22, v24, v26, v28);
    v31 = v30;
    swift_bridgeObjectRelease(v28);
    v54 = 0x2E706F7244726941;
    v55 = 0xE800000000000000;
    v32._countAndFlagsBits = v29;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease((const char *)v31);
    Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, v54, v55);
    v33 = swift_retain_n(v2, 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = swift_slowAlloc(32, -1);
      v54 = v51;
      *(_DWORD *)v36 = 136315138;
      v50 = v36 + 4;
      v37 = *(const char **)(v2 + 72);
      v38 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v39 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain(v37);
      v41 = Dictionary.Keys.description.getter(v40, v38, v7, v39);
      v43 = v42;
      swift_bridgeObjectRelease(v37);
      v56 = sub_100228BD8(v41, (unint64_t)v43, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v50);
      swift_release_n(v2, 2);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "No send transfer to cancel. Current transfer IDs: %s", v36, 0xCu);
      v44 = v51;
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {

      swift_release_n(v2, 2);
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v53);
    v45 = type metadata accessor for SFAirDropSend.Failure(0);
    v46 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v45, v46, 0, 0);
    v48 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, enum case for SFAirDropSend.Failure.badRequest(_:), v45);
    return swift_willThrow(v48);
  }
}

_QWORD *sub_100425D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = v5;
  v5[9] = &_swiftEmptyDictionarySingleton;
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  v7 = type metadata accessor for SDAirDropiOSHapticsManager();
  v8 = (_QWORD *)swift_allocObject(v7, 40, 7);
  v8[3] = 0;
  v8[4] = 0;
  v8[2] = 0;
  v6[7] = v8;
  v6[8] = &off_10071F208;
  swift_retain(v8);
  sub_1002738EC();
  swift_release(v8);
  return v6;
}

uint64_t sub_100425DC8@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  const char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  const char *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  const char *object;
  __n128 v89;
  Swift::String v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  const char *v107;
  _QWORD *v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  const char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(char *, uint64_t, uint64_t);
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  const char *v166;

  v141 = a5;
  v159 = a4;
  v160 = a3;
  v163 = a2;
  v148 = a1;
  v144 = a6;
  v6 = sub_100008384((uint64_t *)&unk_1007BDAD0);
  __chkstk_darwin(v6);
  v145 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for SFAirDropClient.Identifier(0);
  v136 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C5E70);
  __chkstk_darwin(v9);
  v135 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v134 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v132 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  __chkstk_darwin(v13);
  v129 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for SFAirDropSend.Transfer(0);
  v158 = *(_QWORD *)(v143 - 8);
  v15 = __chkstk_darwin(v143);
  v142 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v155 = (char *)&v123 - v18;
  v140 = v19;
  __chkstk_darwin(v17);
  v157 = (char *)&v123 - v20;
  v21 = type metadata accessor for SFAirDropSend.Request(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v151 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = v24;
  __chkstk_darwin(v23);
  v126 = (char *)&v123 - v25;
  v26 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v162 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for Logger(0);
  v154 = *(_QWORD *)(v156 - 8);
  v29 = __chkstk_darwin(v156);
  v150 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = v30;
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v123 - v32;
  v34 = SFAirDropSend.Request.id.getter(v31);
  v35 = SFAirDrop.TransferIdentifier.stringValue.getter(v34);
  v37 = (const char *)v36;
  v38 = sub_1004312F0(8, v35, v36);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  swift_bridgeObjectRelease(v37);
  v45 = static String._fromSubstring(_:)(v38, v40, v42, v44);
  v47 = v46;
  swift_bridgeObjectRelease(v44);
  v165 = 0x2E706F7244726941;
  v166 = (const char *)0xE800000000000000;
  v48._countAndFlagsBits = v45;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease((const char *)v47);
  Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, v165, v166);
  v49 = *(const char **)(v162 + 8);
  v147 = v26;
  v146 = v49;
  ((void (*)(char *, uint64_t))v49)(v28, v26);
  v152 = v22;
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v51 = v126;
  v52 = v148;
  v162 = v21;
  v149 = v50;
  ((void (*)(char *))v50)(v126);
  v53 = swift_bridgeObjectRetain_n(v163, 2);
  v153 = v33;
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.default.getter(v54);
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(22, -1);
    v57 = swift_slowAlloc(64, -1);
    v124 = v57;
    v165 = v57;
    *(_DWORD *)v56 = 136315394;
    v58 = SFAirDropSend.Request.id.getter(v57);
    v59 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v58);
    v61 = v60;
    ((void (*)(char *, uint64_t))v146)(v28, v147);
    v164 = sub_100228BD8(v59, (unint64_t)v61, &v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165, v56 + 4);
    v62 = swift_bridgeObjectRelease(v61);
    (*(void (**)(char *, uint64_t, __n128))(v152 + 8))(v51, v162, v62);
    *(_WORD *)(v56 + 12) = 2080;
    v63 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    v64 = sub_100220D78(&qword_1007B5490, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D1058);
    v65 = v163;
    swift_bridgeObjectRetain(v163);
    v67 = Set.description.getter(v66, v63, v64);
    v69 = v68;
    swift_bridgeObjectRelease(v65);
    v164 = sub_100228BD8(v67, (unint64_t)v69, &v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165, v56 + 14);
    swift_bridgeObjectRelease_n(v65, 2);
    v52 = v148;
    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Classroom Send StateMachine START %s {initialEndpoints: %s}", (uint8_t *)v56, 0x16u);
    v70 = v124;
    swift_arrayDestroy(v124, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v70, -1, -1);
    swift_slowDealloc(v56, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v152 + 8))(v51, v162);
    swift_bridgeObjectRelease_n(v163, 2);
  }
  v71 = v52;
  v126 = (char *)sub_100429838(v52, v163);
  v124 = v72;
  SFAirDropSend.Request.id.getter(v126);
  v73 = v151;
  v74 = v149(v151, v52, v162);
  v75 = v129;
  static Date.now.getter(v74);
  v76 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v132, enum case for SFAirDropSend.Transfer.State.created(_:), v128);
  v77 = v134;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v134, enum case for SFAirDrop.DisplayPriority.normal(_:), v131);
  v78 = type metadata accessor for SFNWInterfaceType(0);
  v79 = v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v135, 1, 1, v78);
  v80 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v137, v141, v138);
  v81 = swift_bridgeObjectRetain(v159);
  v82 = v157;
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)(v28, v73, v126, v124, v75, v76, v77, v160, v81, v83, v79, v80);
  v165 = 0;
  v166 = (const char *)0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v166);
  v165 = 0xD000000000000018;
  v166 = (const char *)0x800000010061B070;
  SFAirDropSend.Request.id.getter(v84);
  v85 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v125 = v28;
  v86 = v147;
  v87._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v147, v85);
  object = (const char *)v87._object;
  String.append(_:)(v87);
  v89 = swift_bridgeObjectRelease(object);
  ((void (*)(char *, uint64_t, __n128))v146)(v28, v86, v89);
  v90._countAndFlagsBits = 93;
  v90._object = (void *)0xE100000000000000;
  String.append(_:)(v90);
  v147 = v165;
  v146 = v166;
  v91 = v158;
  v92 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  v93 = v143;
  v92(v155, v82, v143);
  v94 = v142;
  v92(v142, v82, v93);
  v149(v73, v71, v162);
  v95 = v154;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v150, v153, v156);
  v96 = *(unsigned __int8 *)(v91 + 80);
  v97 = (v96 + 24) & ~v96;
  v98 = (v140 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
  v99 = v152;
  v100 = *(unsigned __int8 *)(v152 + 80);
  v101 = (v100 + v98 + 8) & ~v100;
  v102 = (v139 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
  v103 = *(unsigned __int8 *)(v95 + 80);
  v104 = (v103 + v102 + 16) & ~v103;
  v105 = swift_allocObject(&unk_100728708, v104 + v133, v96 | v100 | v103 | 7);
  *(_QWORD *)(v105 + 16) = v161;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v105 + v97, v94, v93);
  v106 = v162;
  v107 = v163;
  *(_QWORD *)(v105 + v98) = v163;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v105 + v101, v151, v106);
  v108 = (_QWORD *)(v105 + v102);
  v109 = v159;
  *v108 = v160;
  v108[1] = v109;
  v110 = v154;
  v111 = v156;
  (*(void (**)(uint64_t, char *, uint64_t))(v154 + 32))(v105 + v104, v150, v156);
  *(_QWORD *)&v112 = swift_bridgeObjectRetain(v107).n128_u64[0];
  swift_bridgeObjectRetain(v109, v112);
  v113 = v161;
  swift_retain(v161);
  v114 = v93;
  v115 = v144;
  v116 = SFProgressTask.init(_:initialProgress:operation:file:line:)(v147, v146, v155, &unk_1007C07D0, v105, 0xD000000000000060, 0x800000010061B000, 130, v93, v93);
  v117 = (uint64_t)v125;
  v118 = v157;
  SFAirDropSend.Transfer.id.getter(v116);
  v119 = sub_100008384(&qword_1007B6738);
  v120 = *(_QWORD *)(v119 - 8);
  v121 = (uint64_t)v145;
  (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v145, v115, v119);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v120 + 56))(v121, 0, 1, v119);
  swift_beginAccess(v113 + 72, &v165, 33, 0);
  sub_100394D98(v121, v117);
  swift_endAccess(&v165);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v118, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v153, v111);
}

uint64_t sub_10042690C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8[38] = a7;
  v8[39] = a8;
  v8[36] = a5;
  v8[37] = a6;
  v8[34] = a3;
  v8[35] = a4;
  v8[32] = a1;
  v8[33] = a2;
  v9 = type metadata accessor for SFAirDropClient.Identifier(0);
  v8[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007C5E70);
  v8[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v8[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v8[43] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[44] = v13;
  v8[45] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[46] = swift_task_alloc(v14);
  v8[47] = swift_task_alloc(v14);
  v15 = sub_100008384((uint64_t *)&unk_1007BDAD0);
  v8[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v8[49] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[50] = v17;
  v8[51] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v8[52] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[53] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[54] = swift_task_alloc(v20);
  v8[55] = swift_task_alloc(v20);
  v21 = type metadata accessor for Logger(0);
  v8[56] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[57] = v22;
  v8[58] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDropSend.Transfer(0);
  v8[59] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v8[60] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[61] = swift_task_alloc(v25);
  v8[62] = swift_task_alloc(v25);
  v26 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA300) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[63] = swift_task_alloc(v26);
  v8[64] = swift_task_alloc(v26);
  v27 = sub_100008384(&qword_1007C07D8);
  v8[65] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDropSend.Request(0);
  v8[66] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v8[67] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[68] = swift_task_alloc(v30);
  v8[69] = swift_task_alloc(v30);
  v8[70] = swift_task_alloc(v30);
  v8[71] = swift_task_alloc(v30);
  v8[72] = swift_task_alloc(v30);
  v8[73] = swift_task_alloc(v30);
  v8[74] = swift_task_alloc(v30);
  v8[75] = swift_task_alloc(v30);
  v8[76] = swift_task_alloc(v30);
  v31 = type metadata accessor for SFAirDrop.TransferType(0);
  v8[77] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v8[78] = v32;
  v8[79] = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v33 = static AirDropActor.shared;
  v8[80] = static AirDropActor.shared;
  return swift_task_switch(sub_100426C30, v33, 0);
}

uint64_t sub_100426C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  const char *v18;
  __n128 v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  const char *v74;
  __n128 v75;
  void (*v76)(uint64_t, uint64_t, __n128);
  uint64_t v77;
  _QWORD *v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  const char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  const char *v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(_QWORD, _QWORD, _QWORD);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb;
  os_log_type_t typec[8];
  os_log_type_t typed[8];
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t (*v213)(uint64_t, uint64_t, uint64_t);
  uint64_t v214;
  uint64_t v215[3];

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 624);
  v4 = *(_QWORD *)(v1 + 616);
  v5 = SFAirDropSend.Request.type.getter(a1);
  v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v1 + 648) = v7;
  v7(v2, v4);
  if ((v6 & 1) != 0)
    goto LABEL_5;
  v8 = *(_QWORD *)(v1 + 608);
  v9 = *(_QWORD *)(v1 + 536);
  v10 = *(_QWORD *)(v1 + 528);
  v11 = *(_QWORD *)(v1 + 296);
  v12 = *(_QWORD *)(v1 + 280);
  v14 = *(_QWORD *)(v12 + 56);
  v13 = *(_QWORD *)(v12 + 64);
  ObjectType = swift_getObjectType(v14);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v17 = v16(0, ObjectType, v13);
  v18 = (const char *)SFAirDropSend.Request.urls.getter(v17);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 16);
  v21 = v20(v8, v11, v10, v19);
  v22 = *(_QWORD *)(v1 + 608);
  if (v18)
  {
    v23 = (void (*)(uint64_t, uint64_t, uint64_t))v20;
    v24 = *(_QWORD *)(v1 + 592);
    v25 = *(_QWORD *)(v1 + 528);
    v26 = *(_QWORD *)(v1 + 296);
    v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 536) + 8);
    v27(*(_QWORD *)(v1 + 608), v25);
    v23(v24, v26, v25);
LABEL_4:
    v27(*(_QWORD *)(v1 + 592), *(_QWORD *)(v1 + 528));
    goto LABEL_5;
  }
  v209 = v13;
  v213 = v16;
  v206 = v14;
  v80 = *(_QWORD *)(v1 + 600);
  v81 = *(_QWORD *)(v1 + 528);
  v82 = *(_QWORD *)(v1 + 520);
  SFAirDropSend.Request.urlsPromise.getter(v21);
  v83 = sub_100008384(&qword_1007C07E0);
  v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v82, 1, v83);
  sub_10000D0F0(v82, &qword_1007C07D8);
  v85 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v80, v22, v81);
  v86 = *(_QWORD *)(v1 + 608);
  v87 = *(_QWORD *)(v1 + 600);
  v88 = *(_QWORD *)(v1 + 592);
  v89 = *(_QWORD *)(v1 + 536);
  v90 = *(_QWORD *)(v1 + 528);
  v91 = *(_QWORD *)(v1 + 296);
  v92 = v20;
  if (v84 == 1)
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v27(*(_QWORD *)(v1 + 600), *(_QWORD *)(v1 + 528));
    v27(v86, v90);
    v93 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v88, v91, v90);
  }
  else
  {
    v94 = (const char *)SFAirDropSend.Request.urlsMetadata.getter(v85);
    v27 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v27(v87, v90);
    v27(v86, v90);
    v95 = swift_bridgeObjectRelease(v94);
    v93 = v92(v88, v91, v90, v95);
    if (v94)
      goto LABEL_4;
  }
  v96 = *(_QWORD *)(v1 + 592);
  v97 = *(_QWORD *)(v1 + 528);
  v98 = SFAirDropSend.Request.customPayload.getter(v93);
  v100 = v99;
  v27(v96, v97);
  sub_100225AA0(v98, v100);
  if (v100 >> 60 != 15)
  {
LABEL_5:
    v28 = *(_QWORD *)(v1 + 584);
    v199 = v28;
    v212 = (uint64_t *)(v1 + 248);
    v29 = *(_QWORD *)(v1 + 504);
    v30 = *(_QWORD *)(v1 + 512);
    v31 = *(_QWORD *)(v1 + 496);
    v185 = v29;
    type = v31;
    v163 = *(_QWORD *)(v1 + 536);
    v165 = *(_QWORD *)(v1 + 480);
    v32 = *(_QWORD *)(v1 + 464);
    v167 = *(_QWORD *)(v1 + 528);
    v170 = *(_QWORD *)(v1 + 472);
    v175 = *(_QWORD *)(v1 + 456);
    v178 = *(_QWORD *)(v1 + 448);
    v182 = v32;
    v204 = *(_QWORD *)(v1 + 312);
    v33 = *(_QWORD *)(v1 + 296);
    v172 = *(_QWORD *)(v1 + 304);
    v35 = *(_QWORD **)(v1 + 280);
    v34 = *(_QWORD *)(v1 + 288);
    v194 = *(_QWORD *)(v1 + 272);
    v201 = *(_QWORD *)(v1 + 264);
    v36 = (void *)v35[3];
    sub_1003EF5A8(v30);
    v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(v163 + 16);
    *(_QWORD *)(v1 + 656) = v37;
    v38 = v167;
    v168 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v37;
    v37(v28, v33, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16))(v31, v34, v170);
    sub_100221F28(v30, v29, &qword_1007BA300);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v32, v172, v178);
    v39 = v35[7];
    *(_QWORD *)(v1 + 664) = v39;
    v40 = v35[8];
    *(_QWORD *)(v1 + 672) = v40;
    v41 = v35[5];
    v42 = (void *)v35[6];
    v43 = (void *)v35[2];
    v44 = (void *)v35[4];
    *(_QWORD *)(v1 + 680) = v44;
    objc_allocWithZone((Class)_s6RunnerCMa(0));
    swift_unknownObjectRetain(v39);
    v45 = v36;
    swift_retain(v41);
    v46 = v42;
    v47 = v43;
    v48 = v44;
    swift_retain(v194);
    v49 = sub_10031AA44((uint64_t)&_swiftEmptySetSingleton, v199, type, v185, v182, v39, v40, v45, v41, (void (**)(_QWORD, _QWORD))v46, v201, v194, v47, v48);
    *(_QWORD *)(v1 + 688) = v49;

    swift_release(v194);
    swift_release(v41);

    v50 = v1 + 56;
    swift_unknownObjectRelease(v39);
    sub_100221F28(v204, v1 + 56, &qword_1007B8150);
    if (*(_QWORD *)(v1 + 80))
    {
      v51 = sub_100008384((uint64_t *)&unk_1007BD940);
      v52 = type metadata accessor for SDAirDropDiscoveredPerson(0);
      if ((swift_dynamicCast(v1 + 184, v50, v51, v52, 6) & 1) != 0)
      {
        v53 = *(_QWORD *)(v1 + 184);
        v54 = v53 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID;
        v55 = v49;
        sub_100429310((uint64_t)v55, v54, (uint64_t)v48);

        swift_release(v53);
        v56 = v168(*(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 528));
LABEL_14:
        v62 = Logger.logObject.getter(v56);
        v63 = static os_log_type_t.default.getter(v62);
        v64 = os_log_type_enabled(v62, v63);
        v65 = *(_QWORD *)(v1 + 576);
        v66 = *(_QWORD *)(v1 + 536);
        v67 = *(_QWORD *)(v1 + 528);
        if (v64)
        {
          v68 = *(_QWORD *)(v1 + 440);
          *(_QWORD *)typea = *(_QWORD *)(v1 + 424);
          v195 = *(_QWORD *)(v1 + 416);
          v205 = *(_QWORD *)(v1 + 536);
          v69 = (uint8_t *)swift_slowAlloc(12, -1);
          v70 = swift_slowAlloc(32, -1);
          v215[0] = v70;
          *(_DWORD *)v69 = 136315138;
          v71 = SFAirDropSend.Request.id.getter(v70);
          v72 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v71);
          v74 = v73;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)typea + 8))(v68, v195);
          *(_QWORD *)(v1 + 240) = sub_100228BD8(v72, (unint64_t)v74, v215);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 240, v212, v69 + 4);
          v75 = swift_bridgeObjectRelease(v74);
          v76 = *(void (**)(uint64_t, uint64_t, __n128))(v205 + 8);
          v76(v65, v67, v75);
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "%s Starting to resolve endpoints", v69, 0xCu);
          swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v70, -1, -1);
          swift_slowDealloc(v69, -1, -1);

        }
        else
        {

          v76 = *(void (**)(uint64_t, uint64_t, __n128))(v66 + 8);
          v77 = ((uint64_t (*)(uint64_t, uint64_t))v76)(v65, v67);
        }
        *(_QWORD *)(v1 + 696) = v76;
        SFAirDropSend.Request.endpointID.getter(v77);
        v78 = (_QWORD *)swift_task_alloc(dword_1007BDAE4);
        *(_QWORD *)(v1 + 704) = v78;
        *v78 = v1;
        v78[1] = sub_10042794C;
        return sub_1003A27A0(*(_QWORD *)(v1 + 408));
      }
    }
    else
    {
      sub_10000D0F0(v50, &qword_1007B8150);
    }
    sub_100221F28(*(_QWORD *)(v1 + 312), v1 + 16, &qword_1007B8150);
    if (*(_QWORD *)(v1 + 40))
    {
      v57 = sub_100008384((uint64_t *)&unk_1007BD940);
      v58 = type metadata accessor for SDAirDropDiscoveredDevice(0);
      if ((swift_dynamicCast(v212, v1 + 16, v57, v58, 6) & 1) != 0)
      {
        v59 = *v212;
        v60 = *v212 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID;
        v61 = v49;
        sub_100429310((uint64_t)v61, v60, (uint64_t)v48);

        swift_release(v59);
      }
    }
    else
    {
      sub_10000D0F0(v1 + 16, &qword_1007B8150);
    }
    v56 = v168(*(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 528));
    goto LABEL_14;
  }
  v101 = type metadata accessor for SFAirDropSend.Failure(0);
  v102 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  v103 = swift_allocError(v101, v102, 0, 0);
  v105 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v101 - 8) + 104))(v104, enum case for SFAirDropSend.Failure.badRequest(_:), v101);
  swift_willThrow(v105);
  ((void (*)(_QWORD, _QWORD, _QWORD))v92)(*(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 528));
  swift_errorRetain(v103);
  v106 = swift_errorRetain(v103);
  v107 = Logger.logObject.getter(v106);
  v108 = static os_log_type_t.default.getter(v107);
  v109 = os_log_type_enabled(v107, v108);
  v110 = *(_QWORD *)(v1 + 544);
  v111 = *(_QWORD *)(v1 + 528);
  v112 = v213;
  if (v109)
  {
    v186 = *(_QWORD *)(v1 + 528);
    v113 = *(_QWORD *)(v1 + 440);
    v114 = *(_QWORD *)(v1 + 424);
    v179 = *(_QWORD *)(v1 + 416);
    v115 = swift_slowAlloc(22, -1);
    v196 = (uint64_t *)swift_slowAlloc(8, -1);
    v202 = swift_slowAlloc(32, -1);
    v215[0] = v202;
    *(_DWORD *)v115 = 136315394;
    typeb = v108;
    v116 = SFAirDropSend.Request.id.getter(v202);
    v117 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v116);
    v119 = v118;
    v120 = v113;
    v112 = v213;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v120, v179);
    *(_QWORD *)(v1 + 192) = sub_100228BD8(v117, (unint64_t)v119, v215);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 192, v1 + 200, v115 + 4);
    v121 = swift_bridgeObjectRelease(v119);
    ((void (*)(uint64_t, uint64_t, __n128))v27)(v110, v186, v121);
    *(_WORD *)(v115 + 12) = 2112;
    swift_errorRetain(v103);
    v122 = _swift_stdlib_bridgeErrorToNSError(v103);
    *(_QWORD *)(v1 + 144) = v122;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v115 + 14);
    *v196 = v122;
    swift_errorRelease(v103);
    swift_errorRelease(v103);
    _os_log_impl((void *)&_mh_execute_header, v107, typeb, "Send StateMachine FAILED %s {error: %@}", (uint8_t *)v115, 0x16u);
    v123 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v196, 1, v123);
    swift_slowDealloc(v196, -1, -1);
    swift_arrayDestroy(v202, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v202, -1, -1);
    swift_slowDealloc(v115, -1, -1);

  }
  else
  {

    v27(v110, v111);
    swift_errorRelease(v103);
    v124 = swift_errorRelease(v103);
  }
  v125 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 648);
  v126 = *(_QWORD *)(v1 + 632);
  v127 = *(_QWORD *)(v1 + 616);
  v128 = SFAirDropSend.Request.type.getter(v124);
  v129 = SFAirDrop.TransferType.isOnlyExchange.getter(v128);
  v130 = v125(v126, v127);
  if ((v129 & 1) == 0)
  {
    v131 = swift_getObjectType(v206);
    v130 = v112(4, v131, v209);
  }
  v197 = *(_QWORD *)(v1 + 584);
  v133 = *(_QWORD *)(v1 + 432);
  v132 = *(_QWORD *)(v1 + 440);
  v210 = *(_QWORD *)(v1 + 384);
  v135 = *(_QWORD *)(v1 + 360);
  v134 = *(_QWORD *)(v1 + 368);
  v173 = *(_QWORD *)(v1 + 352);
  v176 = *(_QWORD *)(v1 + 344);
  v136 = *(_QWORD *)(v1 + 328);
  v180 = *(_QWORD *)(v1 + 336);
  v183 = *(_QWORD *)(v1 + 376);
  v137 = *(_QWORD *)(v1 + 320);
  v207 = *(_QWORD *)(v1 + 280);
  v138 = SFAirDropSend.Transfer.id.getter(v130);
  v139 = SFAirDropSend.Transfer.sendRequest.getter(v138);
  v140 = SFAirDropSend.Transfer.receiverName.getter(v139);
  v187 = v141;
  *(_QWORD *)typec = v140;
  SFAirDropSend.Transfer.startDate.getter(v140);
  v142 = sub_100008384(&qword_1007B8858);
  v143 = SFAirDropSend.Transfer.id.getter(v142);
  SFAirDropSend.Transfer.startDate.getter(v143);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v133, v134);
  swift_errorRetain(v103);
  SFAirDropSend.Failure.init(_:)(v103);
  v144 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v173 + 104))(v135, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v176);
  v145 = SFAirDropSend.Transfer.displayPriority.getter(v144);
  v146 = SFAirDropSend.Transfer.bundleIdentifier.getter(v145);
  v148 = v147;
  v149 = type metadata accessor for SFNWInterfaceType(0);
  v150 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v136, 1, 1, v149);
  v151.n128_f64[0] = SFAirDropSend.Transfer.presenter.getter(v150);
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)(v132, v197, *(_QWORD *)typec, v187, v183, v135, v180, v146, v151, v148, v136, v137);
  v152 = swift_errorRelease(v103);
  SFAirDropSend.Transfer.id.getter(v152);
  v153 = sub_100008384(&qword_1007B6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v210, 1, 1, v153);
  swift_beginAccess(v207 + 72, v1 + 96, 33, 0);
  sub_100394D98(v210, v132);
  swift_endAccess(v1 + 96);
  v154 = *(_QWORD *)(v1 + 608);
  v155 = *(_QWORD *)(v1 + 600);
  v156 = *(_QWORD *)(v1 + 592);
  v157 = *(_QWORD *)(v1 + 584);
  v158 = *(_QWORD *)(v1 + 576);
  v159 = *(_QWORD *)(v1 + 568);
  v160 = *(_QWORD *)(v1 + 560);
  v161 = *(_QWORD *)(v1 + 552);
  v162 = *(_QWORD *)(v1 + 544);
  v164 = *(_QWORD *)(v1 + 520);
  v166 = *(_QWORD *)(v1 + 512);
  v169 = *(_QWORD *)(v1 + 504);
  v171 = *(_QWORD *)(v1 + 496);
  v174 = *(_QWORD *)(v1 + 488);
  v177 = *(_QWORD *)(v1 + 464);
  v181 = *(_QWORD *)(v1 + 440);
  v184 = *(_QWORD *)(v1 + 432);
  v188 = *(_QWORD *)(v1 + 408);
  *(_QWORD *)typed = *(_QWORD *)(v1 + 384);
  v198 = *(_QWORD *)(v1 + 376);
  v200 = *(_QWORD *)(v1 + 368);
  v203 = *(_QWORD *)(v1 + 360);
  v208 = *(_QWORD *)(v1 + 336);
  v211 = *(_QWORD *)(v1 + 328);
  v214 = *(_QWORD *)(v1 + 320);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v164);
  swift_task_dealloc(v166);
  swift_task_dealloc(v169);
  swift_task_dealloc(v171);
  swift_task_dealloc(v174);
  swift_task_dealloc(v177);
  swift_task_dealloc(v181);
  swift_task_dealloc(v184);
  swift_task_dealloc(v188);
  swift_task_dealloc(*(_QWORD *)typed);
  swift_task_dealloc(v198);
  swift_task_dealloc(v200);
  swift_task_dealloc(v203);
  swift_task_dealloc(v208);
  swift_task_dealloc(v211);
  swift_task_dealloc(v214);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10042794C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 704);
  v5 = *(_QWORD *)(*v2 + 640);
  v7 = *(_QWORD *)(*v2 + 400);
  v6 = *(_QWORD *)(*v2 + 408);
  v8 = *(_QWORD *)(*v2 + 392);
  *(_QWORD *)(v3 + 712) = a1;
  *(_QWORD *)(v3 + 720) = a2;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  return swift_task_switch(sub_1004279D0, v5, 0);
}

uint64_t sub_1004279D0()
{
  uint64_t v0;
  char v1;
  const char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  const char *v21;
  void (*v22)(uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  const char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  const char *v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  double v77;
  double v78;
  _QWORD *v79;
  const char *v81;
  void *v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, __n128);
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  _BOOL4 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  const char *v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t ObjectType;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  os_log_t v163;
  os_log_t v164;
  NSObject *v165;
  os_log_t v166;
  os_log_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, __n128);
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *log;
  NSObject *loga;
  os_log_t logb;
  uint64_t type;
  os_log_type_t typea;
  os_log_type_t typeb[8];
  os_log_type_t typec[8];
  os_log_type_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193[2];

  sub_100338698(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 712), *(_QWORD *)(*(_QWORD *)(v0 + 680) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser) != 0);
  v1 = static Task<>.isCancelled.getter();
  v2 = *(const char **)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  if ((v1 & 1) != 0)
  {
    *(_QWORD *)&v4 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 712)).n128_u64[0];
    swift_bridgeObjectRelease(v2, v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Transfer cancelled at resolve step", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    v9 = *(void **)(v0 + 688);
    v10 = *(_QWORD *)(v0 + 512);

    v11 = type metadata accessor for CancellationError(0);
    v12 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v13 = swift_allocError(v11, v12, 0, 0);
    v14 = CancellationError.init()();
    swift_willThrow(v14);

    v15 = v10;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 656))(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 528));
    swift_bridgeObjectRetain_n(v3, 2);
    v16 = swift_bridgeObjectRetain_n(v2, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 720);
    v21 = *(const char **)(v0 + 712);
    v22 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 696);
    v23 = *(_QWORD *)(v0 + 568);
    v24 = *(_QWORD *)(v0 + 528);
    if (v19)
    {
      v187 = *(_QWORD *)(v0 + 720);
      v25 = *(_QWORD *)(v0 + 440);
      v163 = *(os_log_t *)(v0 + 424);
      v168 = *(_QWORD *)(v0 + 416);
      v182 = v18;
      v26 = swift_slowAlloc(22, -1);
      type = swift_slowAlloc(64, -1);
      v193[0] = type;
      *(_DWORD *)v26 = 136315394;
      log = v17;
      v27 = SFAirDropSend.Request.id.getter(type);
      v28 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v27);
      v30 = v29;
      ((void (*)(uint64_t, uint64_t))v163[1].isa)(v25, v168);
      *(_QWORD *)(v0 + 224) = sub_100228BD8(v28, (unint64_t)v30, v193);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v26 + 4);
      v31 = swift_bridgeObjectRelease(v30);
      v22(v23, v24, v31);
      *(_WORD *)(v26 + 12) = 2080;
      v32 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      v33 = sub_100220D78(&qword_1007B5490, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D1058);
      swift_bridgeObjectRetain(v21);
      v35 = Set.description.getter(v34, v32, v33);
      v37 = v36;
      swift_bridgeObjectRelease(v21);
      *(_QWORD *)(v0 + 232) = sub_100228BD8(v35, (unint64_t)v37, v193);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v26 + 14);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease_n(v21, 2);
      swift_bridgeObjectRelease_n(v187, 2);
      _os_log_impl((void *)&_mh_execute_header, log, v182, "%s Resolved endpoints to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(type, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      ((void (*)(uint64_t, uint64_t))v22)(v23, v24);
      swift_bridgeObjectRelease_n(v21, 2);
      swift_bridgeObjectRelease_n(v20, 2);
    }
    v38 = *(_QWORD *)(v0 + 720);
    v39 = *(_QWORD *)(v0 + 712);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 656))(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 528));
    swift_bridgeObjectRetain_n(v39, 2);
    v40 = swift_bridgeObjectRetain_n(v38, 2);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    v43 = os_log_type_enabled(v41, v42);
    v44 = *(const char **)(v0 + 720);
    v45 = *(_QWORD *)(v0 + 712);
    v46 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 696);
    v47 = *(_QWORD *)(v0 + 560);
    v48 = *(_QWORD *)(v0 + 528);
    if (v43)
    {
      v183 = *(_QWORD *)(v0 + 712);
      v49 = *(_QWORD *)(v0 + 440);
      v160 = *(_QWORD *)(v0 + 424);
      v164 = *(os_log_t *)(v0 + 416);
      v50 = swift_slowAlloc(22, -1);
      v188 = swift_slowAlloc(64, -1);
      v193[0] = v188;
      *(_DWORD *)v50 = 136315394;
      typea = v42;
      loga = v41;
      v51 = SFAirDropSend.Request.id.getter(v188);
      v52 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v51);
      v54 = v53;
      (*(void (**)(uint64_t, os_log_t))(v160 + 8))(v49, v164);
      *(_QWORD *)(v0 + 208) = sub_100228BD8(v52, (unint64_t)v54, v193);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v50 + 4);
      v55 = swift_bridgeObjectRelease(v54);
      v46(v47, v48, v55);
      *(_WORD *)(v50 + 12) = 2080;
      v56 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      v57 = sub_100220D78(&qword_1007B5490, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D1058);
      swift_bridgeObjectRetain(v44);
      v59 = Set.description.getter(v58, v56, v57);
      v61 = v60;
      swift_bridgeObjectRelease(v44);
      *(_QWORD *)(v0 + 216) = sub_100228BD8(v59, (unint64_t)v61, v193);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v50 + 14);
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease_n(v183, 2);
      swift_bridgeObjectRelease_n(v44, 2);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "%s Resolved backup endpoints to %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v188, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v188, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      ((void (*)(uint64_t, uint64_t))v46)(v47, v48);
      swift_bridgeObjectRelease_n(v45, 2);
      swift_bridgeObjectRelease_n(v44, 2);
    }
    v62 = *(_QWORD *)(v0 + 712);
    if (*(_QWORD *)(v62 + 16))
    {
      v63 = *(const char **)(v0 + 720);
      v64 = *(_QWORD *)(v0 + 688);
      v65 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints;
      v66 = *(_QWORD *)(v64 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
      v67 = swift_retain(v66);
      CurrentValueSubject.value.getter(v67);
      swift_release(v66);
      v68 = *(_QWORD *)(v64 + v65);
      v69 = *(_QWORD *)(v0 + 152);
      swift_bridgeObjectRetain((const char *)v62);
      swift_retain(v68);
      v70 = (const char *)sub_100545E38(v62, v69);
      *(_QWORD *)(v0 + 160) = v70;
      CurrentValueSubject.send(_:)(v0 + 160);
      swift_release(v68);
      swift_bridgeObjectRelease(v70);
      v71 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints;
      v72 = *(_QWORD *)(v64 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
      v73 = swift_retain(v72);
      CurrentValueSubject.value.getter(v73);
      swift_release(v72);
      v74 = *(_QWORD *)(v64 + v71);
      v75 = *(_QWORD *)(v0 + 168);
      swift_bridgeObjectRetain(v63);
      swift_retain(v74);
      v76 = (const char *)sub_100545E38((uint64_t)v63, v75);
      *(_QWORD *)(v0 + 176) = v76;
      CurrentValueSubject.send(_:)(v0 + 176);
      swift_release(v74);
      *(_QWORD *)&v77 = swift_bridgeObjectRelease(v76).n128_u64[0];
      *(_QWORD *)&v78 = swift_bridgeObjectRelease((const char *)v62, v77).n128_u64[0];
      swift_bridgeObjectRelease(v63, v78);
      v79 = (_QWORD *)swift_task_alloc(dword_1007BA30C);
      *(_QWORD *)(v0 + 728) = v79;
      *v79 = v0;
      v79[1] = sub_1004287A4;
      return sub_1002FD5E8(*(_QWORD *)(v0 + 488));
    }
    v81 = *(const char **)(v0 + 720);
    v82 = *(void **)(v0 + 688);
    v83 = *(_QWORD *)(v0 + 512);
    *(_QWORD *)&v84 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 712)).n128_u64[0];
    swift_bridgeObjectRelease(v81, v84);
    v85 = type metadata accessor for SFAirDropSend.Failure(0);
    v86 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v13 = swift_allocError(v85, v86, 0, 0);
    *v87 = 0;
    v88 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v85 - 8) + 104))(v87, enum case for SFAirDropSend.Failure.resolveFailure(_:), v85);
    swift_willThrow(v88);

    v15 = v83;
  }
  sub_10000D0F0(v15, &qword_1007BA300);
  v89 = *(_QWORD *)(v0 + 672);
  v90 = *(_QWORD *)(v0 + 664);
  v91 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 696);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 656))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 528));
  swift_errorRetain(v13);
  v92 = swift_errorRetain(v13);
  v93 = Logger.logObject.getter(v92);
  v94 = static os_log_type_t.default.getter(v93);
  v95 = os_log_type_enabled(v93, v94);
  v96 = *(_QWORD *)(v0 + 544);
  v97 = *(_QWORD *)(v0 + 528);
  v191 = v13;
  if (v95)
  {
    v169 = v91;
    v98 = *(_QWORD *)(v0 + 440);
    v154 = *(_QWORD *)(v0 + 424);
    v157 = *(_QWORD *)(v0 + 416);
    v189 = v89;
    v99 = v13;
    v100 = swift_slowAlloc(22, -1);
    v172 = (uint64_t *)swift_slowAlloc(8, -1);
    v184 = swift_slowAlloc(32, -1);
    v193[0] = v184;
    *(_DWORD *)v100 = 136315394;
    v165 = v93;
    v101 = SFAirDropSend.Request.id.getter(v184);
    v102 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v101);
    v104 = v103;
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v98, v157);
    *(_QWORD *)(v0 + 192) = sub_100228BD8(v102, (unint64_t)v104, v193);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v100 + 4);
    v105 = swift_bridgeObjectRelease(v104);
    v169(v96, v97, v105);
    *(_WORD *)(v100 + 12) = 2112;
    swift_errorRetain(v99);
    v106 = _swift_stdlib_bridgeErrorToNSError(v99);
    *(_QWORD *)(v0 + 144) = v106;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v100 + 14);
    *v172 = v106;
    swift_errorRelease(v99);
    v107 = v99;
    v89 = v189;
    swift_errorRelease(v107);
    _os_log_impl((void *)&_mh_execute_header, v165, v94, "Send StateMachine FAILED %s {error: %@}", (uint8_t *)v100, 0x16u);
    v108 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v172, 1, v108);
    swift_slowDealloc(v172, -1, -1);
    swift_arrayDestroy(v184, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v184, -1, -1);
    swift_slowDealloc(v100, -1, -1);

  }
  else
  {

    ((void (*)(uint64_t, uint64_t))v91)(v96, v97);
    swift_errorRelease(v13);
    v109 = swift_errorRelease(v13);
  }
  v110 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 648);
  v111 = *(_QWORD *)(v0 + 632);
  v112 = *(_QWORD *)(v0 + 616);
  v113 = SFAirDropSend.Request.type.getter(v109);
  v114 = SFAirDrop.TransferType.isOnlyExchange.getter(v113);
  v115 = v110(v111, v112);
  if ((v114 & 1) == 0)
  {
    ObjectType = swift_getObjectType(v90);
    v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(4, ObjectType, v89);
  }
  v173 = *(_QWORD *)(v0 + 584);
  v118 = *(_QWORD *)(v0 + 432);
  v117 = *(_QWORD *)(v0 + 440);
  v185 = *(_QWORD *)(v0 + 384);
  v120 = *(_QWORD *)(v0 + 360);
  v119 = *(_QWORD *)(v0 + 368);
  v152 = *(_QWORD *)(v0 + 352);
  v155 = *(_QWORD *)(v0 + 344);
  v121 = *(_QWORD *)(v0 + 328);
  v158 = *(_QWORD *)(v0 + 336);
  v161 = *(_QWORD *)(v0 + 376);
  v122 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)typeb = *(_QWORD *)(v0 + 280);
  v123 = SFAirDropSend.Transfer.id.getter(v115);
  v124 = SFAirDropSend.Transfer.sendRequest.getter(v123);
  v125 = SFAirDropSend.Transfer.receiverName.getter(v124);
  v166 = v126;
  v170 = v125;
  SFAirDropSend.Transfer.startDate.getter(v125);
  v127 = sub_100008384(&qword_1007B8858);
  v128 = SFAirDropSend.Transfer.id.getter(v127);
  SFAirDropSend.Transfer.startDate.getter(v128);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v118, v119);
  swift_errorRetain(v191);
  SFAirDropSend.Failure.init(_:)(v191);
  v129 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v152 + 104))(v120, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v155);
  v130 = SFAirDropSend.Transfer.displayPriority.getter(v129);
  v131 = SFAirDropSend.Transfer.bundleIdentifier.getter(v130);
  v133 = v132;
  v134 = type metadata accessor for SFNWInterfaceType(0);
  v135 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v121, 1, 1, v134);
  v136.n128_f64[0] = SFAirDropSend.Transfer.presenter.getter(v135);
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)(v117, v173, v170, v166, v161, v120, v158, v131, v136, v133, v121, v122);
  v137 = swift_errorRelease(v191);
  SFAirDropSend.Transfer.id.getter(v137);
  v138 = sub_100008384(&qword_1007B6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v185, 1, 1, v138);
  swift_beginAccess(*(_QWORD *)typeb + 72, v0 + 96, 33, 0);
  sub_100394D98(v185, v117);
  swift_endAccess(v0 + 96);
  v139 = *(_QWORD *)(v0 + 608);
  v140 = *(_QWORD *)(v0 + 600);
  v141 = *(_QWORD *)(v0 + 592);
  v142 = *(_QWORD *)(v0 + 584);
  v143 = *(_QWORD *)(v0 + 576);
  v144 = *(_QWORD *)(v0 + 568);
  v145 = *(_QWORD *)(v0 + 560);
  v146 = *(_QWORD *)(v0 + 552);
  v147 = *(_QWORD *)(v0 + 544);
  v148 = *(_QWORD *)(v0 + 520);
  v149 = *(_QWORD *)(v0 + 512);
  v150 = *(_QWORD *)(v0 + 504);
  v151 = *(_QWORD *)(v0 + 496);
  v153 = *(_QWORD *)(v0 + 488);
  v156 = *(_QWORD *)(v0 + 464);
  v159 = *(_QWORD *)(v0 + 440);
  v162 = *(_QWORD *)(v0 + 432);
  v167 = *(os_log_t *)(v0 + 408);
  v171 = *(_QWORD *)(v0 + 384);
  v174 = *(_QWORD *)(v0 + 376);
  logb = *(os_log_t *)(v0 + 368);
  *(_QWORD *)typec = *(_QWORD *)(v0 + 360);
  v186 = *(_QWORD *)(v0 + 336);
  v190 = *(_QWORD *)(v0 + 328);
  v192 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v153);
  swift_task_dealloc(v156);
  swift_task_dealloc(v159);
  swift_task_dealloc(v162);
  swift_task_dealloc(v167);
  swift_task_dealloc(v171);
  swift_task_dealloc(v174);
  swift_task_dealloc(logb);
  swift_task_dealloc(*(_QWORD *)typec);
  swift_task_dealloc(v186);
  swift_task_dealloc(v190);
  swift_task_dealloc(v192);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004287A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 640);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 728));
  return swift_task_switch(sub_1004287FC, v1, 0);
}

uint64_t sub_1004287FC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 656))(*(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 528));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v56 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 696);
    v48 = *(_QWORD *)(v0 + 552);
    v53 = *(_QWORD *)(v0 + 528);
    v4 = *(_QWORD *)(v0 + 440);
    v46 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 416);
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v58 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = SFAirDropSend.Request.id.getter(v6);
    v8 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v7);
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v4, v50);
    *(_QWORD *)(v0 + 200) = sub_100228BD8(v8, (unint64_t)v10, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v5 + 4);
    v11 = swift_bridgeObjectRelease(v10);
    v56(v48, v53, v11);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine END %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
    v13 = *(_QWORD *)(v0 + 552);
    v14 = *(_QWORD *)(v0 + 528);

    v12(v13, v14);
  }
  v15 = *(void **)(v0 + 688);
  v16 = *(_QWORD *)(v0 + 512);
  v17 = *(_QWORD *)(v0 + 480);
  v18 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 472);
  v51 = *(_QWORD *)(v0 + 440);
  v20 = *(_QWORD *)(v0 + 384);
  v54 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 256);
  *(_BYTE *)(v0 + 736) = 1;
  v22 = CurrentValueSubject.send(completion:)(v0 + 736);
  sub_1002BD26C(v22);

  sub_10000D0F0(v16, &qword_1007BA300);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v18, v19);
  SFAirDropSend.Transfer.id.getter(v23);
  v24 = sub_100008384(&qword_1007B6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
  swift_beginAccess(v54 + 72, v0 + 120, 33, 0);
  sub_100394D98(v20, v51);
  swift_endAccess(v0 + 120);
  v25 = *(_QWORD *)(v0 + 608);
  v26 = *(_QWORD *)(v0 + 600);
  v27 = *(_QWORD *)(v0 + 592);
  v28 = *(_QWORD *)(v0 + 584);
  v29 = *(_QWORD *)(v0 + 576);
  v30 = *(_QWORD *)(v0 + 568);
  v31 = *(_QWORD *)(v0 + 560);
  v32 = *(_QWORD *)(v0 + 552);
  v33 = *(_QWORD *)(v0 + 544);
  v35 = *(_QWORD *)(v0 + 520);
  v36 = *(_QWORD *)(v0 + 512);
  v37 = *(_QWORD *)(v0 + 504);
  v38 = *(_QWORD *)(v0 + 496);
  v39 = *(_QWORD *)(v0 + 488);
  v40 = *(_QWORD *)(v0 + 464);
  v41 = *(_QWORD *)(v0 + 440);
  v42 = *(_QWORD *)(v0 + 432);
  v43 = *(_QWORD *)(v0 + 408);
  v44 = *(_QWORD *)(v0 + 384);
  v45 = *(_QWORD *)(v0 + 376);
  v47 = *(_QWORD *)(v0 + 368);
  v49 = *(_QWORD *)(v0 + 360);
  v52 = *(_QWORD *)(v0 + 336);
  v55 = *(_QWORD *)(v0 + 328);
  v57 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v52);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100428C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v8[14] = v22;
  v8[15] = v23;
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[8] = a3;
  v8[9] = a4;
  v8[6] = a1;
  v8[7] = a2;
  v9 = sub_100008384((uint64_t *)&unk_1007BDAD0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v8[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[18] = v11;
  v8[19] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v8[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[21] = v13;
  v8[22] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDropSend.Transfer(0);
  v8[23] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[24] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v16);
  v8[26] = swift_task_alloc(v16);
  v17 = type metadata accessor for SFAirDropSend.Request(0);
  v8[27] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[28] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[29] = swift_task_alloc(v19);
  v8[30] = swift_task_alloc(v19);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v20 = static AirDropActor.shared;
  v8[31] = static AirDropActor.shared;
  return swift_task_switch(sub_100428D70, v20, 0);
}

uint64_t sub_100428D70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0[30];
  v2 = v0[28];
  v17 = v0[27];
  v18 = v0[24];
  v19 = v0[26];
  v20 = v0[23];
  v23 = v0[22];
  v24 = v0[20];
  v21 = v0[21];
  v22 = v0[15];
  v26 = (const char *)v0[14];
  v3 = v0[12];
  v4 = v0[10];
  v27 = (char *)v0[11];
  v6 = v0[8];
  v5 = (_QWORD *)v0[9];
  v28 = v0[7];
  v29 = v0[13];
  v7 = v5[7];
  v8 = v5[8];
  ObjectType = swift_getObjectType(v7);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 16))(0, ObjectType, v8);
  v11 = v5 + 2;
  v10 = (void *)v5[2];
  v25 = (void *)v11[1];
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[32] = v12;
  v12(v1, v3, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v4, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v23, v22, v24);
  objc_allocWithZone((Class)_s15ClassroomRunnerCMa_0(0));
  swift_bridgeObjectRetain(v26);
  swift_unknownObjectRetain(v7);
  swift_retain(v6);
  v13 = v10;
  swift_bridgeObjectRetain(v27);
  v14 = v25;
  v0[33] = sub_1004FA178(v27, v14, v1, v29, (uint64_t)v26, v19, v7, v8, v28, v6, v13, v23);

  swift_release(v6);
  swift_unknownObjectRelease(v7);

  v15 = (_QWORD *)swift_task_alloc(dword_1007C4714);
  v0[34] = v15;
  *v15 = v0;
  v15[1] = sub_100428F48;
  return sub_1004F5DC4(v0[25]);
}

uint64_t sub_100428F48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  return swift_task_switch(sub_100428FA0, v1, 0);
}

uint64_t sub_100428FA0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 216));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v32 = *(_QWORD *)(v0 + 224);
    v34 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 136);
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v36 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = SFAirDropSend.Request.id.getter(v6);
    v8 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v7);
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v30);
    *(_QWORD *)(v0 + 40) = sub_100228BD8(v8, (unint64_t)v10, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v5 + 4);
    v11 = swift_bridgeObjectRelease(v10);
    (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v28, v34, v11);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine END %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    v13 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = *(void **)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 232);
  v33 = *(_QWORD *)(v0 + 208);
  v18 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v35 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 280) = 1;
  v22 = CurrentValueSubject.send(completion:)(v0 + 280);
  sub_1002BD26C(v22);

  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v16, v18);
  SFAirDropSend.Transfer.id.getter(v23);
  v24 = sub_100008384(&qword_1007B6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
  swift_beginAccess(v26 + 72, v0 + 16, 33, 0);
  sub_100394D98(v20, v19);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v16);
  swift_task_dealloc(v35);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100429284()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t sub_1004292D0()
{
  uint64_t v0;

  sub_100429284();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for SDAirDropSendStateMachine()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary25SDAirDropSendStateMachine);
}

void sub_100429310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  const char **v13;
  double v14;
  const char *v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  uint8_t *v31;
  uint64_t *v32;
  char isUniquelyReferenced_nonNull_native;
  const char *v34;
  __n128 v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  _BYTE v43[24];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v36 - v11;
  v13 = (const char **)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
  *(_QWORD *)&v14 = swift_beginAccess(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables, v43, 0, 0).n128_u64[0];
  v15 = *v13;
  swift_bridgeObjectRetain(v15, v14);
  v16 = sub_1004551A4(a2, (uint64_t)v15);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) != 0)
  {
    v40 = a3;
    if (qword_1007B3FD0 != -1)
      swift_once(&qword_1007B3FD0, sub_100398F4C);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007BD820);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v19 = v18(v12, a2, v6);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(12, -1);
      v38 = v18;
      v23 = (uint8_t *)v22;
      v37 = swift_slowAlloc(32, -1);
      v42[0] = v37;
      v39 = a1;
      *(_DWORD *)v23 = 136315138;
      v36 = v23 + 4;
      v24 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v25 = dispatch thunk of CustomStringConvertible.description.getter(v6, v24);
      v27 = (const char *)v26;
      v41 = sub_100228BD8(v25, v26, v42);
      a1 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v36);
      v28 = swift_bridgeObjectRelease(v27);
      v29 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v29(v12, v6, v28);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Adding delegate for connectable: %s", v23, 0xCu);
      v30 = v37;
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      v31 = v23;
      v18 = v38;
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      v29 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      ((void (*)(char *, uint64_t))v29)(v12, v6);
    }

    v18(v10, a2, v6);
    v32 = (uint64_t *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID);
    swift_beginAccess(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID, v42, 33, 0);
    swift_unknownObjectRetain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    v41 = *v32;
    *v32 = 0x8000000000000000;
    sub_100429630(a1, (uint64_t)v10, isUniquelyReferenced_nonNull_native, &v41);
    v34 = (const char *)*v32;
    *v32 = v41;
    v35 = swift_bridgeObjectRelease(v34);
    v29(v10, v6, v35);
    swift_endAccess(v42);
  }
}

uint64_t sub_100429630(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*a4;
  v14 = sub_10045C2DC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = (_QWORD *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (uint64_t *)(v20[7] + 16 * v14);
      result = swift_unknownObjectRelease(*v21);
      *v21 = a1;
      v21[1] = (uint64_t)&off_1007221F0;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10046F85C();
    goto LABEL_7;
  }
  sub_100467F30(v17, a3 & 1);
  v23 = sub_10045C2DC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = (_QWORD *)*a4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100429794(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100429794(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_QWORD *)(a4[7] + 16 * a1);
  *v11 = a3;
  v11[1] = &off_1007221F0;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_100429838(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100298F30((uint64_t)a2, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007B7760);
    if (qword_1007B3E40 != -1)
      swift_once(&qword_1007B3E40, sub_1002E9E0C);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007D8190);
    v11 = swift_bridgeObjectRetain_n(a2, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v24 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_100220D78(&qword_1007B5490, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D1058);
      swift_bridgeObjectRetain(a2);
      v18 = Set.description.getter(v17, v6, v16);
      v20 = v19;
      swift_bridgeObjectRelease(a2);
      v23 = sub_100228BD8(v18, (unint64_t)v20, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Could not find endpoint. Current endpoints: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
  else
  {
    sub_10022E5BC((uint64_t)v5, (uint64_t)v9);
    v21 = sub_10034A93C();
    sub_10022E578((uint64_t)v9);
  }
  return v21;
}

uint64_t sub_100429AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = type metadata accessor for SFAirDropSend.Transfer(0);
  v1 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v1 + 80);
  v2 = (v16 + 24) & ~v16;
  v3 = *(_QWORD *)(v1 + 64);
  v13 = type metadata accessor for SFAirDropSend.Request(0);
  v4 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v5 = (v2 + v3 + v15) & ~v15;
  v6 = *(_QWORD *)(v4 + 64);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v5 + v6 + v9) & ~v9;
  v11 = (*(_QWORD *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v2, v14);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v5, v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);
  if (*(_QWORD *)(v0 + v11 + 24))
    sub_10022E75C((_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 40, v16 | v15 | v9 | 7);
}

uint64_t sub_100429C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B8150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100429C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v8 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Transfer(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v3 + 16);
  v17 = v3 + v9;
  v18 = v3 + v12;
  v19 = v3 + v15;
  v20 = v3 + ((*(_QWORD *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)swift_task_alloc(dword_1007C07BC);
  *(_QWORD *)(v4 + 16) = v21;
  *v21 = v4;
  v21[1] = sub_10000D098;
  return sub_10042690C(a1, a2, a3, v16, v17, v18, v19, v20);
}

uint64_t sub_100429D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = type metadata accessor for SFAirDropSend.Transfer(0);
  v1 = *(_QWORD *)(v19 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = v4;
  v18 = type metadata accessor for SFAirDropSend.Request(0);
  v5 = *(_QWORD *)(v18 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  v8 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + v8 + 16) & ~v11;
  v16 = v12 + *(_QWORD *)(v10 + 64);
  v17 = v9;
  v13 = v2 | v6 | v11 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v19);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v15));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v18);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v17);
  return swift_deallocObject(v0, v16, v13);
}

uint64_t sub_100429E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v7 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Transfer(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v3 + 16);
  v14 = *(_QWORD *)(v3 + v9);
  v15 = *(_QWORD *)(v3 + v12);
  v16 = (_QWORD *)swift_task_alloc(dword_1007C07CC);
  *(_QWORD *)(v4 + 16) = v16;
  *v16 = v4;
  v16[1] = sub_10000D12C;
  return sub_100428C0C(a1, a2, a3, v13, v3 + v8, v14, v3 + v11, v15);
}

uint64_t sub_100429FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v6[32] = a5;
  v6[33] = v5;
  v6[30] = a3;
  v6[31] = a4;
  v6[28] = a1;
  v6[29] = a2;
  v7 = sub_100008384(&qword_1007B68A0);
  v6[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v6[35] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[36] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v6[37] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[38] = swift_task_alloc(v11);
  v6[39] = swift_task_alloc(v11);
  v12 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v6[40] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[41] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[42] = swift_task_alloc(v14);
  v6[43] = swift_task_alloc(v14);
  v6[44] = swift_task_alloc(v14);
  v6[45] = swift_task_alloc(v14);
  v15 = sub_100008384(&qword_1007BDAA0);
  v6[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007B5B20);
  v6[47] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v6[48] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v6[49] = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[50] = swift_task_alloc(v19);
  v6[51] = swift_task_alloc(v19);
  v6[52] = swift_task_alloc(v19);
  v20 = sub_100008384(&qword_1007BA068);
  v6[53] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v6[54] = v21;
  v6[55] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100008384(&qword_1007C5E70);
  v6[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100008384(&qword_1007BA140);
  v6[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008384(&qword_1007C0508);
  v6[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v24 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v6[59] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v6[60] = v26;
  v27 = *(_QWORD *)(v26 + 64);
  v6[61] = v27;
  v6[62] = swift_task_alloc((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v6[63] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v6[64] = v29;
  v6[65] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v6[66] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v6[67] = v31;
  v6[68] = swift_task_alloc((*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for UUID(0);
  v6[69] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v6[70] = v33;
  v34 = *(_QWORD *)(v33 - 8);
  v6[71] = v34;
  v35 = (*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[72] = swift_task_alloc(v35);
  v6[73] = swift_task_alloc(v35);
  v6[74] = swift_task_alloc(v35);
  v36 = type metadata accessor for SFPlatform(0);
  v6[75] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v6[76] = v37;
  v6[77] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SFAirDropClient.Identifier(0);
  v6[78] = v38;
  v39 = *(_QWORD *)(v38 - 8);
  v6[79] = v39;
  v40 = (*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[80] = swift_task_alloc(v40);
  v6[81] = swift_task_alloc(v40);
  v41 = type metadata accessor for Date(0);
  v6[82] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v6[83] = v42;
  v43 = (*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[84] = swift_task_alloc(v43);
  v6[85] = swift_task_alloc(v43);
  v44 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v6[86] = v44;
  v45 = *(_QWORD *)(v44 - 8);
  v6[87] = v45;
  v6[88] = swift_task_alloc((*(_QWORD *)(v45 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Logger(0);
  v6[89] = v46;
  v47 = *(_QWORD *)(v46 - 8);
  v6[90] = v47;
  v48 = (*(_QWORD *)(v47 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[91] = swift_task_alloc(v48);
  v6[92] = swift_task_alloc(v48);
  v6[93] = swift_task_alloc(v48);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v49 = static AirDropActor.shared;
  v6[94] = static AirDropActor.shared;
  return swift_task_switch(sub_10042A3CC, v49, 0);
}

uint64_t sub_10042A3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  char v38;
  unsigned int *v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 704);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 688);
  v4 = SFAirDropReceive.AskRequest.id.getter();
  v5 = SFAirDrop.TransferIdentifier.stringValue.getter(v4);
  v7 = v6;
  v8 = sub_1004312F0(8, v5, v6);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease(v7);
  v15 = static String._fromSubstring(_:)(v8, v10, v12, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, 0x2E706F7244726941, 0xE800000000000000);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v20 = static Date.now.getter(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "ClassroomReceive StateMachine PreChecks START", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }
  v24 = *(_QWORD *)(v0 + 264);

  Strong = swift_unknownObjectWeakLoadStrong(v24 + 16, v25);
  *(_QWORD *)(v0 + 760) = Strong;
  if (Strong)
  {
    v70 = *(_QWORD *)(v0 + 664);
    v72 = *(_QWORD *)(v0 + 672);
    v78 = *(_QWORD *)(v0 + 656);
    v80 = *(_QWORD *)(v0 + 680);
    v27 = *(_QWORD *)(v0 + 648);
    v101 = *(_QWORD *)(v0 + 640);
    v28 = *(_QWORD *)(v0 + 632);
    v29 = *(_QWORD *)(v0 + 624);
    v30 = *(_QWORD *)(v0 + 616);
    v31 = *(_QWORD *)(v0 + 608);
    v32 = *(_QWORD *)(v0 + 600);
    v105 = *(_QWORD *)(v0 + 552);
    v66 = *(_QWORD *)(v0 + 536);
    v67 = *(_QWORD *)(v0 + 544);
    v68 = *(_QWORD *)(v0 + 528);
    v76 = *(_QWORD *)(v0 + 512);
    v82 = *(_QWORD *)(v0 + 520);
    v84 = *(_QWORD *)(v0 + 504);
    v86 = *(_QWORD *)(v0 + 480);
    v91 = *(_QWORD *)(v0 + 496);
    v93 = *(_QWORD *)(v0 + 472);
    v33 = *(_QWORD *)(v0 + 456);
    v97 = *(_QWORD *)(v0 + 464);
    v99 = *(_QWORD *)(v0 + 448);
    v89 = *(_QWORD *)(v0 + 328);
    v95 = *(_QWORD *)(v0 + 320);
    v34 = *(_QWORD *)(v0 + 264);
    v74 = *(_QWORD *)(v0 + 240);
    v35 = *(_QWORD *)(v34 + 56);
    ObjectType = swift_getObjectType(*(_QWORD *)(v34 + 48));
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(3, ObjectType, v35);
    static SFPlatform.iOS.getter(v37);
    v38 = static SFPlatform.isPlatform(_:)(v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v39 = (unsigned int *)&enum case for SFAirDropClient.Identifier.airdropUI(_:);
    if ((v38 & 1) == 0)
      v39 = (unsigned int *)&enum case for SFAirDropClient.Identifier.daemon(_:);
    v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v27, *v39, v29);
    UUID.init()(v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v72, v80, v78);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v67, enum case for SFAirDropReceive.Transfer.State.created(_:), v68);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 104))(v82, enum case for SFAirDrop.DisplayPriority.normal(_:), v84);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
    *(_QWORD *)(v0 + 768) = v41;
    v41(v91, v74, v93);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v97, 1, 1, v95);
    v42 = type metadata accessor for SFAirDrop.DeclineAction(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v33, 1, 1, v42);
    v43 = type metadata accessor for SFNWInterfaceType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v99, 1, 1, v43);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v101, v27, v29);
    SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)(v105, v72, v67, v82, v91, 0, v97, 0, v33, v99, v101);
    type metadata accessor for SDAirDropContentHandlerFactory();
    v44 = (_QWORD *)swift_task_alloc(dword_1007C1C2C);
    *(_QWORD *)(v0 + 776) = v44;
    *v44 = v0;
    v44[1] = sub_10042AAA0;
    return sub_10047A540(v0 + 56, *(_QWORD *)(v0 + 592));
  }
  else
  {
    v46 = Logger.logObject.getter(0);
    v47 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "ClassroomReceive StateMachine PreChecks FAILED. Delegate is nil - returning .error", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }
    v49 = *(_QWORD *)(v0 + 744);
    v50 = *(_QWORD *)(v0 + 720);
    v51 = *(_QWORD *)(v0 + 712);
    v52 = *(_QWORD *)(v0 + 680);
    v53 = *(_QWORD *)(v0 + 664);
    v54 = *(_QWORD *)(v0 + 656);
    v55 = *(_QWORD *)(v0 + 328);
    v106 = *(_QWORD *)(v0 + 320);
    v56 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v56, enum case for SFAirDropReceive.AskResponse.error(_:), v106);
    v57 = *(_QWORD *)(v0 + 736);
    v58 = *(_QWORD *)(v0 + 728);
    v59 = *(_QWORD *)(v0 + 704);
    v60 = *(_QWORD *)(v0 + 680);
    v61 = *(_QWORD *)(v0 + 672);
    v62 = *(_QWORD *)(v0 + 648);
    v63 = *(_QWORD *)(v0 + 640);
    v64 = *(_QWORD *)(v0 + 616);
    v65 = *(_QWORD *)(v0 + 592);
    v69 = *(_QWORD *)(v0 + 584);
    v71 = *(_QWORD *)(v0 + 576);
    v73 = *(_QWORD *)(v0 + 552);
    v75 = *(_QWORD *)(v0 + 544);
    v77 = *(_QWORD *)(v0 + 520);
    v79 = *(_QWORD *)(v0 + 496);
    v81 = *(_QWORD *)(v0 + 464);
    v83 = *(_QWORD *)(v0 + 456);
    v85 = *(_QWORD *)(v0 + 448);
    v87 = *(_QWORD *)(v0 + 440);
    v88 = *(_QWORD *)(v0 + 416);
    v90 = *(_QWORD *)(v0 + 408);
    v92 = *(_QWORD *)(v0 + 400);
    v94 = *(_QWORD *)(v0 + 368);
    v96 = *(_QWORD *)(v0 + 360);
    v98 = *(_QWORD *)(v0 + 352);
    v100 = *(_QWORD *)(v0 + 344);
    v102 = *(_QWORD *)(v0 + 336);
    v103 = *(_QWORD *)(v0 + 312);
    v104 = *(_QWORD *)(v0 + 304);
    v107 = *(_QWORD *)(v0 + 272);
    swift_task_dealloc(*(_QWORD *)(v0 + 744));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    swift_task_dealloc(v81);
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v94);
    swift_task_dealloc(v96);
    swift_task_dealloc(v98);
    swift_task_dealloc(v100);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v104);
    swift_task_dealloc(v107);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10042AAA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 752);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 776));
  return swift_task_switch(sub_10042AAF8, v1, 0);
}

uint64_t sub_10042AAF8()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v1 = (__int128 *)(v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    v51 = *(_QWORD *)(v0 + 744);
    v49 = *(_QWORD *)(v0 + 736);
    v69 = *(_QWORD *)(v0 + 728);
    v2 = *(_QWORD *)(v0 + 720);
    v3 = *(_QWORD *)(v0 + 712);
    v4 = *(_QWORD *)(v0 + 592);
    v5 = *(_QWORD *)(v0 + 584);
    v62 = *(_QWORD *)(v0 + 576);
    v6 = *(_QWORD *)(v0 + 568);
    v7 = *(_QWORD *)(v0 + 560);
    v8 = *(_QWORD *)(v0 + 264);
    v57 = *(_QWORD *)(v0 + 248);
    v59 = *(_QWORD *)(v0 + 256);
    v55 = *(void **)(v0 + 232);
    sub_10026EE60(v1, v0 + 16);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v9(v5, v4, v7);
    sub_100244418(v0 + 16, v0 + 96);
    v64 = *(void **)(v8 + 32);
    v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v53(v49, v51, v3);
    v10 = _s15ClassroomRunnerCMa(0);
    v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    *(_QWORD *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine15ClassroomRunner_classroomHandler) = v55;
    v12 = (_QWORD *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine15ClassroomRunner_recordID);
    *v12 = v57;
    v12[1] = v59;
    v9(v62, v5, v7);
    sub_100244418(v0 + 96, v0 + 136);
    v53(v69, v49, v3);
    v13 = v55;
    swift_bridgeObjectRetain(v59);
    v14 = v64;
    v15 = sub_100544E40(v62, (_QWORD *)(v0 + 136), v14, v69);
    *(_QWORD *)(v0 + 784) = v15;

    v16 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    *(_QWORD *)(v0 + 792) = v16;
    v16(v49, v3);
    sub_10022E75C((_QWORD *)(v0 + 96));
    v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(_QWORD *)(v0 + 800) = v17;
    v17(v5, v7);
    v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
    *(_QWORD *)(v0 + 200) = v18;
    swift_retain(v18);
    v19 = sub_100008384(&qword_1007C5DB0);
    v20 = sub_100431C28();
    SFNoThrowAsyncSequence.init<A>(_:)(v0 + 200, v7, v19, v20);
    v80 = (char *)&dword_1007BA060 + dword_1007BA060;
    v21 = (_QWORD *)swift_task_alloc(unk_1007BA064);
    *(_QWORD *)(v0 + 808) = v21;
    *v21 = v0;
    v21[1] = sub_10042B084;
    return ((uint64_t (*)(_QWORD, _QWORD))v80)(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 440));
  }
  else
  {
    v23 = sub_10000D0F0((uint64_t)v1, &qword_1007C08C8);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "ClassroomReceive StateMachine PreChecks FAILED. Mixed types - returning .mixedTypes", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 760);
    v76 = *(_QWORD *)(v0 + 720);
    v78 = *(_QWORD *)(v0 + 712);
    v81 = *(_QWORD *)(v0 + 744);
    v28 = *(_QWORD *)(v0 + 664);
    v65 = *(_QWORD *)(v0 + 656);
    v67 = *(_QWORD *)(v0 + 680);
    v29 = *(_QWORD *)(v0 + 648);
    v30 = *(_QWORD *)(v0 + 632);
    v31 = *(_QWORD *)(v0 + 624);
    v32 = *(_QWORD *)(v0 + 592);
    v33 = *(_QWORD *)(v0 + 568);
    v34 = *(_QWORD *)(v0 + 560);
    v72 = *(_QWORD *)(v0 + 328);
    v74 = *(_QWORD *)(v0 + 320);
    v70 = *(_QWORD *)(v0 + 224);

    swift_unknownObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v67, v65);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v81, v78);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v72 + 104))(v70, enum case for SFAirDropReceive.AskResponse.mixedTypes(_:), v74);
    v35 = *(_QWORD *)(v0 + 736);
    v36 = *(_QWORD *)(v0 + 728);
    v37 = *(_QWORD *)(v0 + 704);
    v38 = *(_QWORD *)(v0 + 680);
    v39 = *(_QWORD *)(v0 + 672);
    v40 = *(_QWORD *)(v0 + 648);
    v41 = *(_QWORD *)(v0 + 640);
    v42 = *(_QWORD *)(v0 + 616);
    v43 = *(_QWORD *)(v0 + 592);
    v44 = *(_QWORD *)(v0 + 584);
    v45 = *(_QWORD *)(v0 + 576);
    v46 = *(_QWORD *)(v0 + 552);
    v47 = *(_QWORD *)(v0 + 544);
    v48 = *(_QWORD *)(v0 + 520);
    v50 = *(_QWORD *)(v0 + 496);
    v52 = *(_QWORD *)(v0 + 464);
    v54 = *(_QWORD *)(v0 + 456);
    v56 = *(_QWORD *)(v0 + 448);
    v58 = *(_QWORD *)(v0 + 440);
    v60 = *(_QWORD *)(v0 + 416);
    v61 = *(_QWORD *)(v0 + 408);
    v63 = *(_QWORD *)(v0 + 400);
    v66 = *(_QWORD *)(v0 + 368);
    v68 = *(_QWORD *)(v0 + 360);
    v71 = *(_QWORD *)(v0 + 352);
    v73 = *(_QWORD *)(v0 + 344);
    v75 = *(_QWORD *)(v0 + 336);
    v77 = *(_QWORD *)(v0 + 312);
    v79 = *(_QWORD *)(v0 + 304);
    v82 = *(_QWORD *)(v0 + 272);
    swift_task_dealloc(*(_QWORD *)(v0 + 744));
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v54);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10042B084(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 808);
  *(_QWORD *)(*v2 + 816) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 752);
  if (v1)
  {
    v7 = sub_10042C0CC;
  }
  else
  {
    *(_BYTE *)(v4 + 848) = a1 & 1;
    v7 = sub_10042B0FC;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10042B0FC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t (*v91)(_QWORD, _QWORD, _QWORD);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  _BOOL4 v104;
  uint64_t v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t);
  void (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(_QWORD, _QWORD, _QWORD);
  void (*v215)(uint64_t, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void (*v221)(uint64_t, uint64_t);
  void (*v222)(uint64_t, uint64_t);
  uint64_t v223;
  int v224;
  void (*v225)(uint64_t, uint64_t);
  void (*v226)(uint64_t, uint64_t);
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;

  v2 = *(unsigned __int8 *)(v1 + 848);
  v3 = Logger.logObject.getter(a1);
  v227 = (_QWORD *)(v1 + 16);
  if (v2 != 1)
  {
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v18, "ClassroomReceive StateMachine PreChecks FAILED. Delegate.shouldStart returned false - returning .decline", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v175 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
    v20 = *(_QWORD *)(v1 + 784);
    v21 = *(_QWORD *)(v1 + 760);
    v217 = *(_QWORD *)(v1 + 744);
    v221 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
    v211 = *(_QWORD *)(v1 + 712);
    v180 = *(_QWORD *)(v1 + 664);
    v185 = *(_QWORD *)(v1 + 656);
    v22 = *(_QWORD *)(v1 + 632);
    v165 = *(_QWORD *)(v1 + 624);
    v170 = *(_QWORD *)(v1 + 648);
    v23 = *(_QWORD *)(v1 + 592);
    v24 = *(_QWORD *)(v1 + 560);
    v26 = *(_QWORD *)(v1 + 432);
    v25 = *(_QWORD *)(v1 + 440);
    v27 = *(_QWORD *)(v1 + 424);
    v195 = *(_QWORD *)(v1 + 328);
    v200 = *(_QWORD *)(v1 + 680);
    v205 = *(_QWORD *)(v1 + 320);
    v190 = *(_QWORD *)(v1 + 224);

    swift_unknownObjectRelease(v21);
    swift_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10022E75C(v227);
    v175(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v170, v165);
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v200, v185);
    v221(v217, v211);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v195 + 104))(v190, enum case for SFAirDropReceive.AskResponse.decline(_:), v205);
    goto LABEL_16;
  }
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "ClassroomReceive StateMachine PreChecks END", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 232);

  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations);
  swift_beginAccess(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations, v1 + 176, 0, 0);
  v8 = *v7;
  if (!*(_QWORD *)(v8 + 16))
  {
    v28 = *(_QWORD *)(v1 + 368);
    v29 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
LABEL_13:
    v32 = sub_10000D0F0(*(_QWORD *)(v1 + 368), &qword_1007BDAA0);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Missing transfer continuation for classroom transfer", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }
    v176 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
    v36 = *(_QWORD *)(v1 + 784);
    v37 = *(_QWORD *)(v1 + 760);
    v218 = *(_QWORD *)(v1 + 744);
    v222 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
    v212 = *(_QWORD *)(v1 + 712);
    v181 = *(_QWORD *)(v1 + 664);
    v186 = *(_QWORD *)(v1 + 656);
    v38 = *(_QWORD *)(v1 + 632);
    v166 = *(_QWORD *)(v1 + 624);
    v171 = *(_QWORD *)(v1 + 648);
    v39 = *(_QWORD *)(v1 + 592);
    v40 = *(_QWORD *)(v1 + 560);
    v41 = *(_QWORD *)(v1 + 432);
    v42 = *(_QWORD *)(v1 + 440);
    v43 = *(_QWORD *)(v1 + 424);
    v196 = *(_QWORD *)(v1 + 328);
    v201 = *(_QWORD *)(v1 + 680);
    v206 = *(_QWORD *)(v1 + 320);
    v191 = *(_QWORD *)(v1 + 224);

    swift_unknownObjectRelease(v37);
    swift_release(v36);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    sub_10022E75C(v227);
    v176(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v171, v166);
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v201, v186);
    v222(v218, v212);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v196 + 104))(v191, enum case for SFAirDropReceive.AskResponse.error(_:), v206);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v1 + 248);
  v9 = *(_QWORD *)(v1 + 256);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  v11 = sub_10045C200(v10, v9);
  v12 = *(_QWORD *)(v1 + 368);
  if ((v13 & 1) != 0)
  {
    v14 = v11;
    v15 = *(_QWORD *)(v8 + 56);
    v16 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0);
    v17 = *(_QWORD *)(v16 - 8);
    sub_100244384(v15 + *(_QWORD *)(v17 + 72) * v14, v12, type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  }
  else
  {
    v16 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  }
  v30 = *(_QWORD *)(v1 + 368);
  v31 = *(_QWORD *)(v1 + 256);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v31);
  type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v30, 1, v16) == 1)
    goto LABEL_13;
  v55 = *(_QWORD *)(v1 + 408);
  v54 = *(_QWORD *)(v1 + 416);
  v57 = *(_QWORD *)(v1 + 376);
  v56 = *(_QWORD *)(v1 + 384);
  v58 = *(_QWORD *)(v1 + 368);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
  *(_QWORD *)(v1 + 824) = v59;
  v59(v55, v58, v57);
  sub_1002443C8(v58, type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32);
  *(_QWORD *)(v1 + 832) = v60;
  v61 = v60(v54, v55, v57);
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v64 = 0;
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "ClassroomReceive StateMachine PreAccept START", v64, 2u);
    swift_slowDealloc(v64, -1, -1);
  }

  if ((SFAirDropReceive.AskRequest.canAutoAccept.getter() & 1) != 0)
  {
    v65 = *(_QWORD *)(v1 + 360);
    v67 = *(_QWORD *)(v1 + 320);
    v66 = *(_QWORD *)(v1 + 328);
    v69 = *(_QWORD *)(v1 + 280);
    v68 = *(_QWORD *)(v1 + 288);
    sub_100008384(&qword_1007B68D0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v68 + 104))(v65, enum case for SFAirDropReceive.ItemDestination.default(_:), v69);
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(1, 0, 0xF000000000000000);
    LODWORD(v68) = enum case for SFAirDropReceive.AskResponse.accept(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v65, enum case for SFAirDropReceive.AskResponse.accept(_:), v67);
    v70 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 328) + 16);
    v71 = v70(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 320));
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.default.getter();
    v74 = os_log_type_enabled(v72, v73);
    v75 = *(_QWORD *)(v1 + 352);
    v77 = *(_QWORD *)(v1 + 320);
    v76 = *(_QWORD *)(v1 + 328);
    v224 = v68;
    if (v74)
    {
      v214 = v70;
      v78 = (uint8_t *)swift_slowAlloc(12, -1);
      v208 = swift_slowAlloc(32, -1);
      v229 = v208;
      *(_DWORD *)v78 = 136315138;
      v79 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
      v80 = dispatch thunk of CustomStringConvertible.description.getter(v77, v79);
      v82 = v81;
      *(_QWORD *)(v1 + 216) = sub_100228BD8(v80, v81, &v229);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 216, v1 + 224, v78 + 4);
      v83 = v82;
      v70 = v214;
      swift_bridgeObjectRelease(v83);
      v84 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v84(v75, v77);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "ClassroomReceive StateMachine PreAccept END {response: %s", v78, 0xCu);
      swift_arrayDestroy(v208, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v208, -1, -1);
      swift_slowDealloc(v78, -1, -1);

    }
    else
    {

      v84 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v84(v75, v77);
    }
    v86 = *(_QWORD *)(v1 + 344);
    v88 = *(_QWORD *)(v1 + 320);
    v87 = *(_QWORD *)(v1 + 328);
    v70(v86, *(_QWORD *)(v1 + 360), v88);
    v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 88))(v86, v88);
    v90 = *(_QWORD *)(v1 + 344);
    if (v89 == v224)
    {
      v91 = v70;
      v93 = *(_QWORD *)(v1 + 304);
      v92 = *(_QWORD *)(v1 + 312);
      v95 = *(_QWORD *)(v1 + 280);
      v94 = *(_QWORD *)(v1 + 288);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 328) + 96))(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 320));
      v96 = v90 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
      v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
      v97(v92, v90, v95);
      v98 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v96, v98);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v94 + 104))(v93, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v95);
      v99 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      LOBYTE(v92) = dispatch thunk of static Equatable.== infix(_:_:)(v92, v93, v95, v99);
      v100 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      v100(v93, v95);
      if ((v92 & 1) == 0)
      {
        v215 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 832);
        v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 824);
        v203 = *(_QWORD *)(v1 + 784);
        v173 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 768);
        v158 = *(_QWORD *)(v1 + 496);
        v188 = *(_QWORD *)(v1 + 480);
        v193 = *(_QWORD *)(v1 + 488);
        v225 = v100;
        v118 = *(_QWORD *)(v1 + 472);
        v168 = v118;
        v147 = *(_QWORD *)(v1 + 416);
        v119 = *(_QWORD *)(v1 + 400);
        v183 = *(_QWORD *)(v1 + 392);
        v120 = *(_QWORD *)(v1 + 376);
        v153 = *(_QWORD *)(v1 + 384);
        v122 = *(_QWORD *)(v1 + 304);
        v121 = *(_QWORD *)(v1 + 312);
        v163 = v122;
        v123 = *(_QWORD *)(v1 + 288);
        v178 = *(_QWORD *)(v1 + 296);
        v124 = *(_QWORD *)(v1 + 272);
        v144 = *(_QWORD *)(v1 + 280);
        v209 = v124;
        v198 = v97;
        v125 = *(_QWORD *)(v1 + 240);
        v115 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v124, 1, 1, v115);
        v150(v119, v147, v120);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v122, v121, v144);
        v173(v158, v125, v118);
        v126 = *(unsigned __int8 *)(v153 + 80);
        v127 = (v126 + 24) & ~v126;
        v128 = *(unsigned __int8 *)(v123 + 80);
        v129 = (v183 + v128 + v127) & ~v128;
        v130 = *(unsigned __int8 *)(v188 + 80);
        v131 = (v178 + v130 + v129) & ~v130;
        v132 = swift_allocObject(&unk_1007287C0, v131 + v193, v126 | v128 | v130 | 7);
        *(_QWORD *)(v132 + 16) = v203;
        v215(v132 + v127, v119, v120);
        v198(v132 + v129, v163, v144);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 32))(v132 + v131, v158, v168);
        v133 = _s10BaseRunnerC11FinishTokenVMa(0);
        swift_retain(v203);
        v117 = static Task<>.noThrow(priority:operation:)(v209, &unk_1007C0938, v132, v133);
        swift_release(v132);
        sub_10000D0F0(v209, &qword_1007B68A0);
        v225(v121, v144);
LABEL_33:
        v184 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
        v226 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
        v148 = *(_QWORD *)(v1 + 784);
        v134 = *(_QWORD *)(v1 + 760);
        v216 = *(_QWORD *)(v1 + 712);
        v220 = *(_QWORD *)(v1 + 744);
        v210 = *(_QWORD *)(v1 + 680);
        v194 = *(_QWORD *)(v1 + 664);
        v204 = *(_QWORD *)(v1 + 656);
        v164 = *(_QWORD *)(v1 + 624);
        v169 = *(_QWORD *)(v1 + 648);
        v159 = *(_QWORD *)(v1 + 592);
        v161 = *(_QWORD *)(v1 + 632);
        v154 = *(_QWORD *)(v1 + 440);
        v156 = *(_QWORD *)(v1 + 560);
        v145 = *(_QWORD *)(v1 + 432);
        v135 = *(_QWORD *)(v1 + 416);
        v151 = *(_QWORD *)(v1 + 424);
        v137 = *(_QWORD *)(v1 + 376);
        v136 = *(_QWORD *)(v1 + 384);
        v199 = *(_QWORD *)(v1 + 360);
        v189 = *(_QWORD *)(v1 + 320);
        v138 = *(_QWORD *)(v1 + 272);
        v174 = *(_QWORD *)(v1 + 224);
        v179 = *(_QWORD *)(v1 + 328);
        type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v138, 1, 1, v115);
        v139 = static AirDropActor.shared;
        v140 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
        v141 = (_QWORD *)swift_allocObject(&unk_100728798, 40, 7);
        v141[2] = v139;
        v141[3] = v140;
        v141[4] = v117;
        swift_retain(v117);
        swift_retain(v139);
        v142 = sub_100252EC0(v138, (uint64_t)&unk_1007C0928, (uint64_t)v141);
        swift_release(v142);
        swift_unknownObjectRelease(v134);
        swift_release(v148);
        swift_release(v117);
        (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v137);
        (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v154, v151);
        sub_10022E75C(v227);
        v184(v159, v156);
        (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v169, v164);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v210, v204);
        v226(v220, v216);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 32))(v174, v199, v189);
LABEL_16:
        v44 = *(_QWORD *)(v1 + 736);
        v45 = *(_QWORD *)(v1 + 728);
        v46 = *(_QWORD *)(v1 + 704);
        v47 = *(_QWORD *)(v1 + 680);
        v48 = *(_QWORD *)(v1 + 672);
        v49 = *(_QWORD *)(v1 + 648);
        v50 = *(_QWORD *)(v1 + 640);
        v51 = *(_QWORD *)(v1 + 616);
        v52 = *(_QWORD *)(v1 + 592);
        v143 = *(_QWORD *)(v1 + 584);
        v146 = *(_QWORD *)(v1 + 576);
        v149 = *(_QWORD *)(v1 + 552);
        v152 = *(_QWORD *)(v1 + 544);
        v155 = *(_QWORD *)(v1 + 520);
        v157 = *(_QWORD *)(v1 + 496);
        v160 = *(_QWORD *)(v1 + 464);
        v162 = *(_QWORD *)(v1 + 456);
        v167 = *(_QWORD *)(v1 + 448);
        v172 = *(_QWORD *)(v1 + 440);
        v177 = *(_QWORD *)(v1 + 416);
        v182 = *(_QWORD *)(v1 + 408);
        v187 = *(_QWORD *)(v1 + 400);
        v192 = *(_QWORD *)(v1 + 368);
        v197 = *(_QWORD *)(v1 + 360);
        v202 = *(_QWORD *)(v1 + 352);
        v207 = *(_QWORD *)(v1 + 344);
        v213 = *(_QWORD *)(v1 + 336);
        v219 = *(_QWORD *)(v1 + 312);
        v223 = *(_QWORD *)(v1 + 304);
        v228 = *(_QWORD *)(v1 + 272);
        swift_task_dealloc(*(_QWORD *)(v1 + 744));
        swift_task_dealloc(v44);
        swift_task_dealloc(v45);
        swift_task_dealloc(v46);
        swift_task_dealloc(v47);
        swift_task_dealloc(v48);
        swift_task_dealloc(v49);
        swift_task_dealloc(v50);
        swift_task_dealloc(v51);
        swift_task_dealloc(v52);
        swift_task_dealloc(v143);
        swift_task_dealloc(v146);
        swift_task_dealloc(v149);
        swift_task_dealloc(v152);
        swift_task_dealloc(v155);
        swift_task_dealloc(v157);
        swift_task_dealloc(v160);
        swift_task_dealloc(v162);
        swift_task_dealloc(v167);
        swift_task_dealloc(v172);
        swift_task_dealloc(v177);
        swift_task_dealloc(v182);
        swift_task_dealloc(v187);
        swift_task_dealloc(v192);
        swift_task_dealloc(v197);
        swift_task_dealloc(v202);
        swift_task_dealloc(v207);
        swift_task_dealloc(v213);
        swift_task_dealloc(v219);
        swift_task_dealloc(v223);
        swift_task_dealloc(v228);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
      v100(*(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 280));
      v101 = v91(*(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 320));
    }
    else
    {
      v84(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 320));
      v101 = v70(*(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 320));
    }
    v102 = Logger.logObject.getter(v101);
    v103 = static os_log_type_t.default.getter();
    v104 = os_log_type_enabled(v102, v103);
    v105 = *(_QWORD *)(v1 + 336);
    v106 = *(_QWORD *)(v1 + 320);
    if (v104)
    {
      v107 = (uint8_t *)swift_slowAlloc(12, -1);
      v108 = swift_slowAlloc(32, -1);
      v229 = v108;
      *(_DWORD *)v107 = 136315138;
      v109 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
      v110 = dispatch thunk of CustomStringConvertible.description.getter(v106, v109);
      v112 = v111;
      *(_QWORD *)(v1 + 208) = sub_100228BD8(v110, v111, &v229);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 208, v1 + 216, v107 + 4);
      swift_bridgeObjectRelease(v112);
      v84(v105, v106);
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "ClassroomReceive StateMachine PostAccept SKIPPED. {askResult.response: %s}", v107, 0xCu);
      swift_arrayDestroy(v108, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1, -1);
      swift_slowDealloc(v107, -1, -1);

    }
    else
    {

      v84(v105, v106);
    }
    v113 = *(_QWORD *)(v1 + 784);
    v114 = *(_QWORD *)(v1 + 272);
    v115 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v114, 1, 1, v115);
    v116 = _s10BaseRunnerC11FinishTokenVMa(0);
    swift_retain(v113);
    v117 = static Task<>.noThrow(priority:operation:)(v114, &unk_1007C0918, v113, v116);
    swift_release(v113);
    sub_10000D0F0(v114, &qword_1007B68A0);
    goto LABEL_33;
  }
  v85 = (_QWORD *)swift_task_alloc(dword_1007B6C1C);
  *(_QWORD *)(v1 + 840) = v85;
  *v85 = v1;
  v85[1] = sub_10042C418;
  return sub_1002742D8(*(_QWORD *)(v1 + 360));
}

uint64_t sub_10042C0CC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "ClassroomReceive StateMachine PreCheck FAILED. Delegate.shouldStart threw and error - returning .error", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v36 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
  v5 = *(_QWORD *)(v1 + 784);
  v6 = *(_QWORD *)(v1 + 760);
  v52 = *(_QWORD *)(v1 + 744);
  v54 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
  v50 = *(_QWORD *)(v1 + 712);
  v46 = *(_QWORD *)(v1 + 680);
  v38 = *(_QWORD *)(v1 + 664);
  v40 = *(_QWORD *)(v1 + 656);
  v7 = *(_QWORD *)(v1 + 632);
  v31 = *(_QWORD *)(v1 + 624);
  v33 = *(_QWORD *)(v1 + 648);
  v8 = *(_QWORD *)(v1 + 592);
  v9 = *(_QWORD *)(v1 + 560);
  v10 = *(_QWORD *)(v1 + 432);
  v11 = *(_QWORD *)(v1 + 440);
  v12 = *(_QWORD *)(v1 + 424);
  v44 = *(_QWORD *)(v1 + 328);
  v48 = *(_QWORD *)(v1 + 320);
  v42 = *(_QWORD *)(v1 + 224);
  swift_errorRelease(*(_QWORD *)(v1 + 816));

  swift_unknownObjectRelease(v6);
  swift_release(v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  sub_10022E75C((_QWORD *)(v1 + 16));
  v36(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v31);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v46, v40);
  v54(v52, v50);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v42, enum case for SFAirDropReceive.AskResponse.error(_:), v48);
  v13 = *(_QWORD *)(v1 + 736);
  v14 = *(_QWORD *)(v1 + 728);
  v15 = *(_QWORD *)(v1 + 704);
  v16 = *(_QWORD *)(v1 + 680);
  v17 = *(_QWORD *)(v1 + 672);
  v18 = *(_QWORD *)(v1 + 648);
  v19 = *(_QWORD *)(v1 + 640);
  v20 = *(_QWORD *)(v1 + 616);
  v21 = *(_QWORD *)(v1 + 592);
  v23 = *(_QWORD *)(v1 + 584);
  v24 = *(_QWORD *)(v1 + 576);
  v25 = *(_QWORD *)(v1 + 552);
  v26 = *(_QWORD *)(v1 + 544);
  v27 = *(_QWORD *)(v1 + 520);
  v28 = *(_QWORD *)(v1 + 496);
  v29 = *(_QWORD *)(v1 + 464);
  v30 = *(_QWORD *)(v1 + 456);
  v32 = *(_QWORD *)(v1 + 448);
  v34 = *(_QWORD *)(v1 + 440);
  v35 = *(_QWORD *)(v1 + 416);
  v37 = *(_QWORD *)(v1 + 408);
  v39 = *(_QWORD *)(v1 + 400);
  v41 = *(_QWORD *)(v1 + 368);
  v43 = *(_QWORD *)(v1 + 360);
  v45 = *(_QWORD *)(v1 + 352);
  v47 = *(_QWORD *)(v1 + 344);
  v49 = *(_QWORD *)(v1 + 336);
  v51 = *(_QWORD *)(v1 + 312);
  v53 = *(_QWORD *)(v1 + 304);
  v55 = *(_QWORD *)(v1 + 272);
  swift_task_dealloc(*(_QWORD *)(v1 + 744));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10042C418()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 752);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 840));
  return swift_task_switch(sub_10042C470, v1, 0);
}

uint64_t sub_10042C470()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  void (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;

  v1 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 328) + 16);
  v2 = v1(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 320));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 352);
    v6 = *(_QWORD *)(v0 + 320);
    v135 = *(_QWORD *)(v0 + 328);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v142 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 216) = sub_100228BD8(v10, v11, &v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v7 + 4);
    swift_bridgeObjectRelease(v12);
    v13 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
    v13(v5, v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "ClassroomReceive StateMachine PreAccept END {response: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v14 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 320);
    v16 = *(_QWORD *)(v0 + 328);

    v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 328);
  v1(v17, *(_QWORD *)(v0 + 360), v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v17, v18);
  v21 = *(_QWORD *)(v0 + 344);
  if (v20 == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    v22 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(_QWORD *)(v0 + 288);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 96))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 320));
    v26 = v21 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
    v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
    v139(v23, v21, v24);
    v27 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v22, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v24);
    v28 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    v29 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v22, v24, v28);
    v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v30(v22, v24);
    if ((v29 & 1) == 0)
    {
      v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
      v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
      v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
      v100 = *(_QWORD *)(v0 + 496);
      v122 = *(_QWORD *)(v0 + 488);
      v125 = *(_QWORD *)(v0 + 784);
      v119 = *(_QWORD *)(v0 + 480);
      v136 = v30;
      v48 = *(_QWORD *)(v0 + 472);
      v108 = v48;
      v85 = *(_QWORD *)(v0 + 416);
      v49 = *(_QWORD *)(v0 + 400);
      v116 = *(_QWORD *)(v0 + 392);
      v50 = *(_QWORD *)(v0 + 376);
      v94 = *(_QWORD *)(v0 + 384);
      v97 = v50;
      v52 = *(_QWORD *)(v0 + 304);
      v51 = *(_QWORD *)(v0 + 312);
      v105 = v52;
      v53 = *(_QWORD *)(v0 + 288);
      v113 = *(_QWORD *)(v0 + 296);
      v54 = *(_QWORD *)(v0 + 272);
      v55 = *(_QWORD *)(v0 + 280);
      v88 = *(_QWORD *)(v0 + 240);
      v45 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v54, 1, 1, v45);
      v91(v49, v85, v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v51, v55);
      v110(v100, v88, v48);
      v56 = *(unsigned __int8 *)(v94 + 80);
      v57 = (v56 + 24) & ~v56;
      v58 = *(unsigned __int8 *)(v53 + 80);
      v59 = (v116 + v58 + v57) & ~v58;
      v60 = *(unsigned __int8 *)(v119 + 80);
      v61 = (v113 + v60 + v59) & ~v60;
      v62 = swift_allocObject(&unk_1007287C0, v61 + v122, v56 | v58 | v60 | 7);
      *(_QWORD *)(v62 + 16) = v125;
      v130(v62 + v57, v49, v97);
      v139(v62 + v59, v105, v55);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32))(v62 + v61, v100, v108);
      v63 = _s10BaseRunnerC11FinishTokenVMa(0);
      swift_retain(v125);
      v47 = static Task<>.noThrow(priority:operation:)(v54, &unk_1007C0938, v62, v63);
      swift_release(v62);
      sub_10000D0F0(v54, &qword_1007B68A0);
      v136(v51, v55);
      goto LABEL_13;
    }
    v30(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
  }
  else
  {
    v13(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 320));
  }
  v31 = v1(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 320));
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  v34 = os_log_type_enabled(v32, v33);
  v35 = *(_QWORD *)(v0 + 336);
  v36 = *(_QWORD *)(v0 + 320);
  if (v34)
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v142 = v38;
    *(_DWORD *)v37 = 136315138;
    v39 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v40 = dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
    v42 = v41;
    *(_QWORD *)(v0 + 208) = sub_100228BD8(v40, v41, &v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v37 + 4);
    swift_bridgeObjectRelease(v42);
    v13(v35, v36);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "ClassroomReceive StateMachine PostAccept SKIPPED. {askResult.response: %s}", v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

    v13(v35, v36);
  }
  v43 = *(_QWORD *)(v0 + 784);
  v44 = *(_QWORD *)(v0 + 272);
  v45 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  v46 = _s10BaseRunnerC11FinishTokenVMa(0);
  swift_retain(v43);
  v47 = static Task<>.noThrow(priority:operation:)(v44, &unk_1007C0918, v43, v46);
  swift_release(v43);
  sub_10000D0F0(v44, &qword_1007B68A0);
LABEL_13:
  v117 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  v140 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
  v86 = *(_QWORD *)(v0 + 784);
  v64 = *(_QWORD *)(v0 + 760);
  v133 = *(_QWORD *)(v0 + 712);
  v137 = *(_QWORD *)(v0 + 744);
  v131 = *(_QWORD *)(v0 + 680);
  v123 = *(_QWORD *)(v0 + 664);
  v128 = *(_QWORD *)(v0 + 656);
  v103 = *(_QWORD *)(v0 + 624);
  v106 = *(_QWORD *)(v0 + 648);
  v98 = *(_QWORD *)(v0 + 592);
  v101 = *(_QWORD *)(v0 + 632);
  v92 = *(_QWORD *)(v0 + 440);
  v95 = *(_QWORD *)(v0 + 560);
  v83 = *(_QWORD *)(v0 + 432);
  v65 = *(_QWORD *)(v0 + 416);
  v89 = *(_QWORD *)(v0 + 424);
  v67 = *(_QWORD *)(v0 + 376);
  v66 = *(_QWORD *)(v0 + 384);
  v126 = *(_QWORD *)(v0 + 360);
  v120 = *(_QWORD *)(v0 + 320);
  v68 = *(_QWORD *)(v0 + 272);
  v111 = *(_QWORD *)(v0 + 224);
  v114 = *(_QWORD *)(v0 + 328);
  type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v68, 1, 1, v45);
  v69 = static AirDropActor.shared;
  v70 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v71 = (_QWORD *)swift_allocObject(&unk_100728798, 40, 7);
  v71[2] = v69;
  v71[3] = v70;
  v71[4] = v47;
  swift_retain(v47);
  swift_retain(v69);
  v72 = sub_100252EC0(v68, (uint64_t)&unk_1007C0928, (uint64_t)v71);
  swift_release(v72);
  swift_unknownObjectRelease(v64);
  swift_release(v86);
  swift_release(v47);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v92, v89);
  sub_10022E75C((_QWORD *)(v0 + 16));
  v117(v98, v95);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v106, v103);
  (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v131, v128);
  v140(v137, v133);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 32))(v111, v126, v120);
  v73 = *(_QWORD *)(v0 + 736);
  v74 = *(_QWORD *)(v0 + 728);
  v75 = *(_QWORD *)(v0 + 704);
  v76 = *(_QWORD *)(v0 + 680);
  v77 = *(_QWORD *)(v0 + 672);
  v78 = *(_QWORD *)(v0 + 648);
  v79 = *(_QWORD *)(v0 + 640);
  v80 = *(_QWORD *)(v0 + 616);
  v81 = *(_QWORD *)(v0 + 592);
  v84 = *(_QWORD *)(v0 + 584);
  v87 = *(_QWORD *)(v0 + 576);
  v90 = *(_QWORD *)(v0 + 552);
  v93 = *(_QWORD *)(v0 + 544);
  v96 = *(_QWORD *)(v0 + 520);
  v99 = *(_QWORD *)(v0 + 496);
  v102 = *(_QWORD *)(v0 + 464);
  v104 = *(_QWORD *)(v0 + 456);
  v107 = *(_QWORD *)(v0 + 448);
  v109 = *(_QWORD *)(v0 + 440);
  v112 = *(_QWORD *)(v0 + 416);
  v115 = *(_QWORD *)(v0 + 408);
  v118 = *(_QWORD *)(v0 + 400);
  v121 = *(_QWORD *)(v0 + 368);
  v124 = *(_QWORD *)(v0 + 360);
  v127 = *(_QWORD *)(v0 + 352);
  v129 = *(_QWORD *)(v0 + 344);
  v132 = *(_QWORD *)(v0 + 336);
  v134 = *(_QWORD *)(v0 + 312);
  v138 = *(_QWORD *)(v0 + 304);
  v141 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 744));
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v107);
  swift_task_dealloc(v109);
  swift_task_dealloc(v112);
  swift_task_dealloc(v115);
  swift_task_dealloc(v118);
  swift_task_dealloc(v121);
  swift_task_dealloc(v124);
  swift_task_dealloc(v127);
  swift_task_dealloc(v129);
  swift_task_dealloc(v132);
  swift_task_dealloc(v134);
  swift_task_dealloc(v138);
  swift_task_dealloc(v141);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10042CE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x10042CFA8);
}

int64_t sub_10042CFDC(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10042D020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C07E8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C07E8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10042D0B0(uint64_t a1)
{
  __int128 v1;
  uint64_t v2;
  _OWORD v4[2];

  v1 = *(_OWORD *)(a1 + 32);
  v4[0] = *(_OWORD *)(a1 + 16);
  v4[1] = v1;
  v2 = type metadata accessor for SFAirDrop.PermissionRequest(0, v4);
  return SFAirDrop.PermissionRequest.id.getter(v2);
}

_QWORD *sub_10042D0F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;

  v3 = v2;
  v3[3] = 0;
  swift_unknownObjectWeakInit(v3 + 2, 0);
  v3[4] = a1;
  v3[5] = a2;
  v6 = type metadata accessor for SDAirDropiOSHapticsManager();
  v7 = (_QWORD *)swift_allocObject(v6, 40, 7);
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = 0;
  v3[6] = v7;
  v3[7] = &off_10071F208;
  swift_retain(v7);
  sub_1002738EC();
  swift_release(v7);
  return v3;
}

uint64_t sub_10042D174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  v5 = sub_100008384(&qword_1007B68A0);
  v4[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v4[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[35] = v7;
  v4[36] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v4[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[38] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[39] = swift_task_alloc(v10);
  v4[40] = swift_task_alloc(v10);
  v11 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  v4[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[42] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v4[43] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[44] = swift_task_alloc(v14);
  v4[45] = swift_task_alloc(v14);
  v4[46] = swift_task_alloc(v14);
  v4[47] = swift_task_alloc(v14);
  v4[48] = swift_task_alloc(v14);
  v15 = sub_100008384(&qword_1007BA068);
  v4[49] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[50] = v16;
  v4[51] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008384(&qword_1007C5E70);
  v4[52] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384(&qword_1007BA140);
  v4[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008384(&qword_1007C0508);
  v4[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v4[55] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[56] = v21;
  v4[57] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v4[58] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v4[59] = v23;
  v4[60] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v4[61] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v4[62] = v25;
  v4[63] = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UUID(0);
  v4[64] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v4[65] = v27;
  v4[66] = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v4[67] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v4[68] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[69] = swift_task_alloc(v30);
  v4[70] = swift_task_alloc(v30);
  v4[71] = swift_task_alloc(v30);
  v31 = type metadata accessor for SFAirDropClient.Identifier(0);
  v4[72] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v4[73] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[74] = swift_task_alloc(v33);
  v4[75] = swift_task_alloc(v33);
  v4[76] = swift_task_alloc(v33);
  v34 = type metadata accessor for SFAirDrop.TransferType(0);
  v4[77] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v4[78] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[79] = swift_task_alloc(v36);
  v4[80] = swift_task_alloc(v36);
  v37 = type metadata accessor for Date(0);
  v4[81] = v37;
  v38 = *(_QWORD *)(v37 - 8);
  v4[82] = v38;
  v39 = (*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[83] = swift_task_alloc(v39);
  v4[84] = swift_task_alloc(v39);
  v40 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v4[85] = v40;
  v41 = *(_QWORD *)(v40 - 8);
  v4[86] = v41;
  v4[87] = swift_task_alloc((*(_QWORD *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Logger(0);
  v4[88] = v42;
  v43 = *(_QWORD *)(v42 - 8);
  v4[89] = v43;
  v44 = *(_QWORD *)(v43 + 64);
  v4[90] = v44;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[91] = swift_task_alloc(v45);
  v4[92] = swift_task_alloc(v45);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v46 = static AirDropActor.shared;
  v4[93] = static AirDropActor.shared;
  return swift_task_switch(sub_10042D55C, v46, 0);
}

uint64_t sub_10042D55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  _QWORD *v36;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(_QWORD);
  uint64_t v78;
  uint64_t v79;

  v1 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = SFAirDropReceive.AskRequest.id.getter();
  v5 = SFAirDrop.TransferIdentifier.stringValue.getter(v4);
  v7 = (const char *)v6;
  v8 = sub_1004312F0(8, v5, v6);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease(v7);
  v15 = static String._fromSubstring(_:)(v8, v10, v12, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease((const char *)v17);
  Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, 0x2E706F7244726941, 0xE800000000000000);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v20 = static Date.now.getter(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Receive StateMachine PreChecks START", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }
  v24 = *(_QWORD *)(v0 + 256);

  Strong = swift_unknownObjectWeakLoadStrong(v24 + 16, v25);
  *(_QWORD *)(v0 + 752) = Strong;
  if (Strong)
  {
    v27 = *(_QWORD *)(v0 + 640);
    v28 = *(_QWORD *)(v0 + 624);
    v29 = *(_QWORD *)(v0 + 616);
    v30 = SFAirDropReceive.AskRequest.type.getter(Strong);
    v31 = SFAirDrop.TransferType.isOnlyExchange.getter(v30);
    v32 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    *(_QWORD *)(v0 + 760) = v32;
    v32(v27, v29);
    if ((v31 & 1) == 0)
    {
      v33 = *(_QWORD *)(v0 + 256);
      v34 = *(_QWORD *)(v33 + 56);
      ObjectType = swift_getObjectType(*(_QWORD *)(v33 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(3, ObjectType, v34);
    }
    v77 = (uint64_t (*)(_QWORD))((char *)&dword_1007C08C0 + dword_1007C08C0);
    v36 = (_QWORD *)swift_task_alloc(unk_1007C08C4);
    *(_QWORD *)(v0 + 768) = v36;
    *v36 = v0;
    v36[1] = sub_10042DA2C;
    return v77(*(_QWORD *)(v0 + 248));
  }
  else
  {
    v38 = Logger.logObject.getter(0);
    v39 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Receive StateMachine PreChecks FAILED. Delegate is nil - returning .error", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }
    v41 = *(_QWORD *)(v0 + 736);
    v42 = *(_QWORD *)(v0 + 712);
    v43 = *(_QWORD *)(v0 + 704);
    v44 = *(_QWORD *)(v0 + 672);
    v45 = *(_QWORD *)(v0 + 656);
    v46 = *(_QWORD *)(v0 + 648);
    v47 = *(_QWORD *)(v0 + 280);
    v78 = *(_QWORD *)(v0 + 272);
    v48 = *(_QWORD *)(v0 + 232);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 104))(v48, enum case for SFAirDropReceive.AskResponse.error(_:), v78);
    v49 = *(_QWORD *)(v0 + 728);
    v50 = *(_QWORD *)(v0 + 696);
    v51 = *(_QWORD *)(v0 + 672);
    v52 = *(_QWORD *)(v0 + 664);
    v53 = *(_QWORD *)(v0 + 640);
    v54 = *(_QWORD *)(v0 + 632);
    v55 = *(_QWORD *)(v0 + 608);
    v56 = *(_QWORD *)(v0 + 600);
    v57 = *(_QWORD *)(v0 + 592);
    v58 = *(_QWORD *)(v0 + 568);
    v59 = *(_QWORD *)(v0 + 560);
    v60 = *(_QWORD *)(v0 + 552);
    v61 = *(_QWORD *)(v0 + 528);
    v62 = *(_QWORD *)(v0 + 504);
    v63 = *(_QWORD *)(v0 + 480);
    v64 = *(_QWORD *)(v0 + 456);
    v65 = *(_QWORD *)(v0 + 432);
    v66 = *(_QWORD *)(v0 + 424);
    v67 = *(_QWORD *)(v0 + 416);
    v68 = *(_QWORD *)(v0 + 408);
    v69 = *(_QWORD *)(v0 + 384);
    v70 = *(_QWORD *)(v0 + 376);
    v71 = *(_QWORD *)(v0 + 368);
    v72 = *(_QWORD *)(v0 + 360);
    v73 = *(_QWORD *)(v0 + 352);
    v74 = *(_QWORD *)(v0 + 320);
    v75 = *(_QWORD *)(v0 + 312);
    v76 = *(_QWORD *)(v0 + 288);
    v79 = *(_QWORD *)(v0 + 264);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10042DA2C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 768);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 744);
  *(_BYTE *)(*(_QWORD *)v1 + 848) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10042DA8C, v3, 0);
}

uint64_t sub_10042DA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 752) + 56, a2);
  v4 = *(_QWORD *)(v2 + 608);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v2 + 600);
    v7 = *(_QWORD *)(v2 + 584);
    v8 = *(_QWORD *)(v2 + 576);
    sub_10036B0C0(v6);
    swift_unknownObjectRelease(v5);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v4, v6, v8);
  }
  else
  {
    v9 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 584) + 104))(*(_QWORD *)(v2 + 608), enum case for SFAirDropClient.Identifier.daemon(_:), *(_QWORD *)(v2 + 576));
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 760);
  v11 = *(_QWORD *)(v2 + 640);
  v12 = *(_QWORD *)(v2 + 632);
  v13 = *(_QWORD *)(v2 + 624);
  v14 = *(_QWORD *)(v2 + 616);
  SFAirDropReceive.AskRequest.type.getter(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, enum case for SFAirDrop.TransferType.peerPayment(_:), v14);
  v15 = static SFAirDrop.TransferType.== infix(_:_:)(v11, v12);
  v10(v12, v14);
  v10(v11, v14);
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(v2 + 608);
    v17 = *(_QWORD *)(v2 + 584);
    v18 = *(_QWORD *)(v2 + 576);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, enum case for SFAirDropClient.Identifier.wallet(_:), v18);
  }
  v47 = *(unsigned __int8 *)(v2 + 848);
  v32 = *(_QWORD *)(v2 + 672);
  v19 = *(_QWORD *)(v2 + 664);
  v20 = *(_QWORD *)(v2 + 656);
  v21 = *(_QWORD *)(v2 + 648);
  v46 = *(_QWORD *)(v2 + 608);
  v43 = *(_QWORD *)(v2 + 584);
  v44 = *(_QWORD *)(v2 + 592);
  v45 = *(_QWORD *)(v2 + 576);
  v42 = *(_QWORD *)(v2 + 528);
  v22 = *(_QWORD *)(v2 + 504);
  v24 = *(_QWORD *)(v2 + 488);
  v23 = *(_QWORD *)(v2 + 496);
  v25 = *(_QWORD *)(v2 + 472);
  v33 = *(_QWORD *)(v2 + 480);
  v34 = *(_QWORD *)(v2 + 464);
  v35 = *(_QWORD *)(v2 + 448);
  v37 = *(_QWORD *)(v2 + 456);
  v38 = *(_QWORD *)(v2 + 440);
  v39 = *(_QWORD *)(v2 + 432);
  v40 = *(_QWORD *)(v2 + 424);
  v41 = *(_QWORD *)(v2 + 416);
  v26 = *(_QWORD *)(v2 + 248);
  v27 = *(_QWORD *)(v2 + 280);
  v36 = *(_QWORD *)(v2 + 272);
  (*(void (**)(void))(*(_QWORD *)(v2 + 520) + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v32, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for SFAirDropReceive.Transfer.State.created(_:), v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v33, enum case for SFAirDrop.DisplayPriority.normal(_:), v34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v37, v26, v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v39, 1, 1, v36);
  v28 = type metadata accessor for SFAirDrop.DeclineAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v40, 1, 1, v28);
  v29 = type metadata accessor for SFNWInterfaceType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v41, 1, 1, v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v46, v45);
  SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)(v42, v19, v22, v33, v37, v47, v39, 0, v40, v41, v44);
  type metadata accessor for SDAirDropContentHandlerFactory();
  v30 = (_QWORD *)swift_task_alloc(dword_1007C1C2C);
  *(_QWORD *)(v2 + 776) = v30;
  *v30 = v2;
  v30[1] = sub_10042DDDC;
  return sub_10047A540(v2 + 56, *(_QWORD *)(v2 + 568));
}

uint64_t sub_10042DDDC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 744);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 776));
  return swift_task_switch(sub_10042DE34, v1, 0);
}

uint64_t sub_10042DE34()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v1 = (__int128 *)(v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    v2 = *(_QWORD *)(v0 + 728);
    v3 = *(_QWORD *)(v0 + 712);
    v74 = *(_QWORD *)(v0 + 704);
    v77 = *(_QWORD *)(v0 + 736);
    v4 = *(_QWORD *)(v0 + 568);
    v5 = *(_QWORD *)(v0 + 560);
    v6 = *(_QWORD *)(v0 + 544);
    v7 = *(_QWORD *)(v0 + 536);
    v8 = *(_QWORD *)(v0 + 256);
    v83 = v5;
    v80 = *(void **)(v0 + 240);
    sub_10026EE60(v1, v0 + 16);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(_QWORD *)(v0 + 784) = v9;
    v9(v5, v4, v7);
    sub_100244418(v0 + 16, v0 + 96);
    v12 = v8 + 32;
    v10 = *(void **)(v8 + 32);
    v11 = *(void **)(v12 + 8);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    *(_QWORD *)(v0 + 792) = v13;
    v13(v2, v77, v74);
    v14 = _s6RunnerCMa_0(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = v80;
    v16 = v11;
    v17 = v10;
    v18 = sub_1004236D0(v83, (_QWORD *)(v0 + 96), v15, v16, v17, v2);
    *(_QWORD *)(v0 + 800) = v18;

    v19 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
    if (v20)
    {
      v21 = v19;
      v22 = v20;
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 752) + 56, v20);
      if (Strong)
      {
        v24 = Strong;
        v25 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
        swift_beginAccess(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, v0 + 176, 0, 0);
        sub_100244418(v25, v0 + 136);
        v26 = *(_QWORD *)(v0 + 160);
        v27 = *(_QWORD *)(v0 + 168);
        sub_10023A834((_QWORD *)(v0 + 136), v26);
        v28 = (*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t))(v27 + 104))(v21, v22, v26, v27);
        sub_10022E75C((_QWORD *)(v0 + 136));
        swift_unknownObjectRelease(v24);
        swift_bridgeObjectRelease(v22);
      }
      else
      {
        swift_bridgeObjectRelease(v22);
        v28 = 0;
      }
      *(_BYTE *)(v18 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept) = v28 & 1;
    }
    v51 = *(_QWORD *)(v0 + 536);
    v52 = *(_QWORD *)(v18 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
    *(_QWORD *)(v0 + 216) = v52;
    swift_retain(v52);
    v53 = sub_100008384(&qword_1007C5DB0);
    v54 = sub_100431C28();
    SFNoThrowAsyncSequence.init<A>(_:)(v0 + 216, v51, v53, v54);
    v88 = (char *)&dword_1007BA060 + dword_1007BA060;
    v55 = (_QWORD *)swift_task_alloc(unk_1007BA064);
    *(_QWORD *)(v0 + 808) = v55;
    *v55 = v0;
    v55[1] = sub_10042E3B0;
    return ((uint64_t (*)(_QWORD, _QWORD))v88)(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 408));
  }
  else
  {
    v29 = sub_10000D0F0((uint64_t)v1, &qword_1007C08C8);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Receive StateMachine PreChecks FAILED. Mixed types - returning .mixedTypes", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    v33 = *(_QWORD *)(v0 + 752);
    v81 = *(_QWORD *)(v0 + 712);
    v84 = *(_QWORD *)(v0 + 704);
    v86 = *(_QWORD *)(v0 + 736);
    v34 = *(_QWORD *)(v0 + 656);
    v68 = *(_QWORD *)(v0 + 648);
    v70 = *(_QWORD *)(v0 + 672);
    v35 = *(_QWORD *)(v0 + 608);
    v36 = *(_QWORD *)(v0 + 584);
    v37 = *(_QWORD *)(v0 + 576);
    v38 = *(_QWORD *)(v0 + 568);
    v39 = *(_QWORD *)(v0 + 544);
    v40 = *(_QWORD *)(v0 + 536);
    v75 = *(_QWORD *)(v0 + 280);
    v78 = *(_QWORD *)(v0 + 272);
    v72 = *(_QWORD *)(v0 + 232);

    swift_unknownObjectRelease(v33);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v70, v68);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v86, v84);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v72, enum case for SFAirDropReceive.AskResponse.mixedTypes(_:), v78);
    v41 = *(_QWORD *)(v0 + 728);
    v42 = *(_QWORD *)(v0 + 696);
    v43 = *(_QWORD *)(v0 + 672);
    v44 = *(_QWORD *)(v0 + 664);
    v45 = *(_QWORD *)(v0 + 640);
    v46 = *(_QWORD *)(v0 + 632);
    v47 = *(_QWORD *)(v0 + 608);
    v48 = *(_QWORD *)(v0 + 600);
    v49 = *(_QWORD *)(v0 + 592);
    v56 = *(_QWORD *)(v0 + 568);
    v57 = *(_QWORD *)(v0 + 560);
    v58 = *(_QWORD *)(v0 + 552);
    v59 = *(_QWORD *)(v0 + 528);
    v60 = *(_QWORD *)(v0 + 504);
    v61 = *(_QWORD *)(v0 + 480);
    v62 = *(_QWORD *)(v0 + 456);
    v63 = *(_QWORD *)(v0 + 432);
    v64 = *(_QWORD *)(v0 + 424);
    v65 = *(_QWORD *)(v0 + 416);
    v66 = *(_QWORD *)(v0 + 408);
    v67 = *(_QWORD *)(v0 + 384);
    v69 = *(_QWORD *)(v0 + 376);
    v71 = *(_QWORD *)(v0 + 368);
    v73 = *(_QWORD *)(v0 + 360);
    v76 = *(_QWORD *)(v0 + 352);
    v79 = *(_QWORD *)(v0 + 320);
    v82 = *(_QWORD *)(v0 + 312);
    v85 = *(_QWORD *)(v0 + 288);
    v87 = *(_QWORD *)(v0 + 264);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(v82);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10042E3B0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 808);
  *(_QWORD *)(*v2 + 816) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 744);
  if (v1)
  {
    v7 = sub_10042E898;
  }
  else
  {
    *(_BYTE *)(v4 + 849) = a1 & 1;
    v7 = sub_10042E428;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10042E428(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = *(unsigned __int8 *)(v1 + 849);
  v3 = Logger.logObject.getter(a1);
  v4 = v3;
  if (v2 == 1)
  {
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Receive StateMachine PreChecks END", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Receive StateMachine PreAccept START", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = (_QWORD *)swift_task_alloc(dword_1007C0504);
    *(_QWORD *)(v1 + 824) = v11;
    *v11 = v1;
    v11[1] = sub_10042EBE4;
    return sub_100402C54(*(_QWORD *)(v1 + 384));
  }
  else
  {
    v13 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled(v4, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v13, "Receive StateMachine PreChecks FAILED. Delegate.shouldStart returned false - returning .decline", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    v15 = *(_QWORD *)(v1 + 800);
    v16 = *(_QWORD *)(v1 + 752);
    v58 = *(_QWORD *)(v1 + 712);
    v60 = *(_QWORD *)(v1 + 704);
    v62 = *(_QWORD *)(v1 + 736);
    v54 = *(_QWORD *)(v1 + 672);
    v46 = *(_QWORD *)(v1 + 656);
    v48 = *(_QWORD *)(v1 + 648);
    v39 = *(_QWORD *)(v1 + 584);
    v42 = *(_QWORD *)(v1 + 576);
    v44 = *(_QWORD *)(v1 + 608);
    v17 = *(_QWORD *)(v1 + 568);
    v18 = *(_QWORD *)(v1 + 544);
    v19 = *(_QWORD *)(v1 + 536);
    v20 = *(_QWORD *)(v1 + 400);
    v21 = *(_QWORD *)(v1 + 408);
    v22 = *(_QWORD *)(v1 + 392);
    v52 = *(_QWORD *)(v1 + 280);
    v56 = *(_QWORD *)(v1 + 272);
    v50 = *(_QWORD *)(v1 + 232);

    swift_unknownObjectRelease(v16);
    swift_release(v15);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    sub_10022E75C((_QWORD *)(v1 + 16));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v42);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v54, v48);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v62, v60);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v50, enum case for SFAirDropReceive.AskResponse.decline(_:), v56);
    v23 = *(_QWORD *)(v1 + 728);
    v24 = *(_QWORD *)(v1 + 696);
    v25 = *(_QWORD *)(v1 + 672);
    v26 = *(_QWORD *)(v1 + 664);
    v27 = *(_QWORD *)(v1 + 640);
    v28 = *(_QWORD *)(v1 + 632);
    v29 = *(_QWORD *)(v1 + 608);
    v30 = *(_QWORD *)(v1 + 600);
    v31 = *(_QWORD *)(v1 + 592);
    v32 = *(_QWORD *)(v1 + 568);
    v33 = *(_QWORD *)(v1 + 560);
    v34 = *(_QWORD *)(v1 + 552);
    v35 = *(_QWORD *)(v1 + 528);
    v36 = *(_QWORD *)(v1 + 504);
    v37 = *(_QWORD *)(v1 + 480);
    v38 = *(_QWORD *)(v1 + 456);
    v40 = *(_QWORD *)(v1 + 432);
    v41 = *(_QWORD *)(v1 + 424);
    v43 = *(_QWORD *)(v1 + 416);
    v45 = *(_QWORD *)(v1 + 408);
    v47 = *(_QWORD *)(v1 + 384);
    v49 = *(_QWORD *)(v1 + 376);
    v51 = *(_QWORD *)(v1 + 368);
    v53 = *(_QWORD *)(v1 + 360);
    v55 = *(_QWORD *)(v1 + 352);
    v57 = *(_QWORD *)(v1 + 320);
    v59 = *(_QWORD *)(v1 + 312);
    v61 = *(_QWORD *)(v1 + 288);
    v63 = *(_QWORD *)(v1 + 264);
    swift_task_dealloc(*(_QWORD *)(v1 + 736));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10042E898(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PreCheck FAILED. Delegate.shouldStart threw and error - returning .error", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v1 + 800);
  v6 = *(_QWORD *)(v1 + 752);
  v49 = *(_QWORD *)(v1 + 712);
  v51 = *(_QWORD *)(v1 + 704);
  v53 = *(_QWORD *)(v1 + 736);
  v45 = *(_QWORD *)(v1 + 672);
  v37 = *(_QWORD *)(v1 + 656);
  v39 = *(_QWORD *)(v1 + 648);
  v35 = *(_QWORD *)(v1 + 608);
  v30 = *(_QWORD *)(v1 + 584);
  v32 = *(_QWORD *)(v1 + 576);
  v7 = *(_QWORD *)(v1 + 568);
  v8 = *(_QWORD *)(v1 + 544);
  v9 = *(_QWORD *)(v1 + 536);
  v10 = *(_QWORD *)(v1 + 400);
  v11 = *(_QWORD *)(v1 + 408);
  v12 = *(_QWORD *)(v1 + 392);
  v43 = *(_QWORD *)(v1 + 280);
  v47 = *(_QWORD *)(v1 + 272);
  v41 = *(_QWORD *)(v1 + 232);
  swift_errorRelease(*(_QWORD *)(v1 + 816));

  swift_unknownObjectRelease(v6);
  swift_release(v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  sub_10022E75C((_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v32);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v45, v39);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v53, v51);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v41, enum case for SFAirDropReceive.AskResponse.error(_:), v47);
  v13 = *(_QWORD *)(v1 + 728);
  v14 = *(_QWORD *)(v1 + 696);
  v15 = *(_QWORD *)(v1 + 672);
  v16 = *(_QWORD *)(v1 + 664);
  v17 = *(_QWORD *)(v1 + 640);
  v18 = *(_QWORD *)(v1 + 632);
  v19 = *(_QWORD *)(v1 + 608);
  v20 = *(_QWORD *)(v1 + 600);
  v21 = *(_QWORD *)(v1 + 592);
  v23 = *(_QWORD *)(v1 + 568);
  v24 = *(_QWORD *)(v1 + 560);
  v25 = *(_QWORD *)(v1 + 552);
  v26 = *(_QWORD *)(v1 + 528);
  v27 = *(_QWORD *)(v1 + 504);
  v28 = *(_QWORD *)(v1 + 480);
  v29 = *(_QWORD *)(v1 + 456);
  v31 = *(_QWORD *)(v1 + 432);
  v33 = *(_QWORD *)(v1 + 424);
  v34 = *(_QWORD *)(v1 + 416);
  v36 = *(_QWORD *)(v1 + 408);
  v38 = *(_QWORD *)(v1 + 384);
  v40 = *(_QWORD *)(v1 + 376);
  v42 = *(_QWORD *)(v1 + 368);
  v44 = *(_QWORD *)(v1 + 360);
  v46 = *(_QWORD *)(v1 + 352);
  v48 = *(_QWORD *)(v1 + 320);
  v50 = *(_QWORD *)(v1 + 312);
  v52 = *(_QWORD *)(v1 + 288);
  v54 = *(_QWORD *)(v1 + 264);
  swift_task_dealloc(*(_QWORD *)(v1 + 736));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10042EBE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 744);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 824));
  return swift_task_switch(sub_10042EC3C, v1, 0);
}

uint64_t sub_10042EC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  const char *v62;
  _QWORD *v63;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  os_log_type_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t);
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 368);
  sub_100244384(v1, *(_QWORD *)(v0 + 376), _s6RunnerC19PreAcceptRunResultsVMa);
  v3 = sub_100244384(v1, v2, _s6RunnerC19PreAcceptRunResultsVMa);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 504);
    v7 = *(_QWORD *)(v0 + 488);
    v148 = v5;
    v8 = *(_QWORD *)(v0 + 376);
    v142 = *(_QWORD *)(v0 + 368);
    v145 = *(_QWORD *)(v0 + 496);
    v9 = *(_QWORD *)(v0 + 272);
    v10 = swift_slowAlloc(22, -1);
    v152 = swift_slowAlloc(64, -1);
    v156 = v152;
    *(_DWORD *)v10 = 136315394;
    v11 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v9, v11);
    v14 = (const char *)v13;
    *(_QWORD *)(v0 + 200) = sub_100228BD8(v12, v13, &v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v10 + 4);
    swift_bridgeObjectRelease(v14);
    v15 = sub_1002443C8(v8, _s6RunnerC19PreAcceptRunResultsVMa);
    *(_WORD *)(v10 + 12) = 2080;
    SFAirDropReceive.Transfer.state.getter(v15);
    v16 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v7, v16);
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v6, v7);
    *(_QWORD *)(v0 + 208) = sub_100228BD8(v17, (unint64_t)v19, &v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v10 + 14);
    swift_bridgeObjectRelease(v19);
    sub_1002443C8(v142, _s6RunnerC19PreAcceptRunResultsVMa);
    _os_log_impl((void *)&_mh_execute_header, v4, v148, "Receive StateMachine PreAccept END {response: %s, transfer.state: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v152, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v152, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {
    v21 = *(_QWORD *)(v0 + 368);
    v20 = *(_QWORD *)(v0 + 376);

    sub_1002443C8(v20, _s6RunnerC19PreAcceptRunResultsVMa);
    sub_1002443C8(v21, _s6RunnerC19PreAcceptRunResultsVMa);
  }
  v22 = *(_QWORD *)(v0 + 384);
  v24 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 272);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(_QWORD *)(v0 + 832) = v26;
  v26(v23, v22, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) != enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    goto LABEL_9;
  }
  v149 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
  v27 = *(_QWORD *)(v0 + 568);
  v28 = *(_QWORD *)(v0 + 552);
  v29 = *(_QWORD *)(v0 + 536);
  v30 = *(_QWORD *)(v0 + 312);
  v31 = *(_QWORD *)(v0 + 320);
  v32 = *(_QWORD *)(v0 + 296);
  v33 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 96))(v34, *(_QWORD *)(v0 + 272));
  v35 = v34 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v31, v34, v32);
  v36 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v30, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v32);
  v37 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  LOBYTE(v31) = dispatch thunk of static Equatable.== infix(_:_:)(v31, v30, v32, v37);
  v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v38(v30, v32);
  v39 = v149(v28, v27, v29);
  v153 = v38;
  if ((v31 & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 544) + 8))(*(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 536));
    goto LABEL_14;
  }
  v150 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
  v40 = *(_QWORD *)(v0 + 640);
  v41 = *(_QWORD *)(v0 + 616);
  v42 = *(_QWORD *)(v0 + 552);
  v43 = *(_QWORD *)(v0 + 544);
  v44 = *(_QWORD *)(v0 + 536);
  v46 = *(_QWORD *)(v0 + 448);
  v45 = *(_QWORD *)(v0 + 456);
  v47 = *(_QWORD *)(v0 + 440);
  v48 = SFAirDropReceive.Transfer.askRequest.getter(v39);
  SFAirDropReceive.AskRequest.type.getter(v48);
  v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  v50 = SFAirDrop.TransferType.isOnlyExchange.getter(v49);
  v150(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  if ((v50 & 1) != 0)
  {
LABEL_14:
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 792);
    v66 = *(_QWORD *)(v0 + 736);
    v67 = *(_QWORD *)(v0 + 728);
    v68 = *(_QWORD *)(v0 + 712);
    v69 = *(_QWORD *)(v0 + 704);
    v70 = *(_QWORD *)(v0 + 384);
    v71 = *(_QWORD *)(v0 + 360);
    v121 = v71;
    v124 = *(_QWORD *)(v0 + 720);
    v72 = *(_QWORD *)(v0 + 336);
    v139 = *(_QWORD *)(v0 + 320);
    v133 = *(_QWORD *)(v0 + 800);
    v136 = *(_QWORD *)(v0 + 296);
    v73 = *(_QWORD *)(v0 + 264);
    v127 = *(_QWORD *)(v0 + 344);
    v130 = *(void **)(v0 + 240);
    v74 = type metadata accessor for TaskPriority(0);
    v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v146 = v74;
    v143(v73, 1, 1, v74);
    v65(v67, v66, v69);
    sub_100244384(v70, v71, _s6RunnerC19PreAcceptRunResultsVMa);
    v75 = *(unsigned __int8 *)(v68 + 80);
    v76 = (v75 + 16) & ~v75;
    v77 = (v124 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    v78 = *(unsigned __int8 *)(v72 + 80);
    v79 = (v78 + v77 + 8) & ~v78;
    v80 = (v127 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = swift_allocObject(&unk_100728770, v80 + 8, v75 | v78 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v81 + v76, v67, v69);
    *(_QWORD *)(v81 + v77) = v133;
    sub_100431E48(v121, v81 + v79);
    *(_QWORD *)(v81 + v80) = v130;
    v82 = _s10BaseRunnerC11FinishTokenVMa(0);
    v83 = v130;
    swift_retain(v133);
    v84 = static Task<>.noThrow(priority:operation:)(v73, &unk_1007C0900, v81, v82);
    swift_release(v81);
    sub_10000D0F0(v73, &qword_1007B68A0);
    v153(v139, v136);
    v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    v103 = *(_QWORD *)(v0 + 752);
    v105 = *(_QWORD *)(v0 + 800);
    v137 = *(_QWORD *)(v0 + 704);
    v140 = *(_QWORD *)(v0 + 736);
    v131 = *(_QWORD *)(v0 + 672);
    v134 = *(_QWORD *)(v0 + 712);
    v122 = *(_QWORD *)(v0 + 656);
    v125 = *(_QWORD *)(v0 + 648);
    v115 = *(_QWORD *)(v0 + 576);
    v117 = *(_QWORD *)(v0 + 608);
    v111 = *(_QWORD *)(v0 + 568);
    v113 = *(_QWORD *)(v0 + 584);
    v107 = *(_QWORD *)(v0 + 544);
    v109 = *(_QWORD *)(v0 + 536);
    v85 = *(_QWORD *)(v0 + 400);
    v86 = *(_QWORD *)(v0 + 408);
    v88 = *(_QWORD *)(v0 + 384);
    v87 = *(_QWORD *)(v0 + 392);
    v89 = *(_QWORD *)(v0 + 264);
    v128 = *(_QWORD *)(v0 + 272);
    v119 = *(_QWORD *)(v0 + 232);
    v143(v89, 1, 1, v146);
    v90 = static AirDropActor.shared;
    v91 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v92 = (_QWORD *)swift_allocObject(&unk_100728748, 40, 7);
    v92[2] = v90;
    v92[3] = v91;
    v92[4] = v84;
    swift_retain(v84);
    swift_retain(v90);
    v93 = sub_100252EC0(v89, (uint64_t)&unk_1007C08F0, (uint64_t)v92);
    swift_release(v93);
    swift_unknownObjectRelease(v103);
    swift_release(v105);
    swift_release(v84);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
    sub_10022E75C((_QWORD *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v111, v109);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v117, v115);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v131, v125);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v140, v137);
    v154(v119, v88, v128);
    sub_1002443C8(v88, _s6RunnerC19PreAcceptRunResultsVMa);
    v94 = *(_QWORD *)(v0 + 728);
    v95 = *(_QWORD *)(v0 + 696);
    v96 = *(_QWORD *)(v0 + 672);
    v97 = *(_QWORD *)(v0 + 664);
    v98 = *(_QWORD *)(v0 + 640);
    v99 = *(_QWORD *)(v0 + 632);
    v100 = *(_QWORD *)(v0 + 608);
    v101 = *(_QWORD *)(v0 + 600);
    v102 = *(_QWORD *)(v0 + 592);
    v104 = *(_QWORD *)(v0 + 568);
    v106 = *(_QWORD *)(v0 + 560);
    v108 = *(_QWORD *)(v0 + 552);
    v110 = *(_QWORD *)(v0 + 528);
    v112 = *(_QWORD *)(v0 + 504);
    v114 = *(_QWORD *)(v0 + 480);
    v116 = *(_QWORD *)(v0 + 456);
    v118 = *(_QWORD *)(v0 + 432);
    v120 = *(_QWORD *)(v0 + 424);
    v123 = *(_QWORD *)(v0 + 416);
    v126 = *(_QWORD *)(v0 + 408);
    v129 = *(_QWORD *)(v0 + 384);
    v132 = *(_QWORD *)(v0 + 376);
    v135 = *(_QWORD *)(v0 + 368);
    v138 = *(_QWORD *)(v0 + 360);
    v141 = *(_QWORD *)(v0 + 352);
    v144 = *(_QWORD *)(v0 + 320);
    v147 = *(_QWORD *)(v0 + 312);
    v151 = *(_QWORD *)(v0 + 288);
    v155 = *(_QWORD *)(v0 + 264);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v104);
    swift_task_dealloc(v106);
    swift_task_dealloc(v108);
    swift_task_dealloc(v110);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    swift_task_dealloc(v116);
    swift_task_dealloc(v118);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    swift_task_dealloc(v126);
    swift_task_dealloc(v129);
    swift_task_dealloc(v132);
    swift_task_dealloc(v135);
    swift_task_dealloc(v138);
    swift_task_dealloc(v141);
    swift_task_dealloc(v144);
    swift_task_dealloc(v147);
    swift_task_dealloc(v151);
    swift_task_dealloc(v155);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v153(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296));
LABEL_9:
  v51 = sub_100244384(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 352), _s6RunnerC19PreAcceptRunResultsVMa);
  v52 = Logger.logObject.getter(v51);
  v53 = static os_log_type_t.default.getter();
  v54 = os_log_type_enabled(v52, v53);
  v55 = *(_QWORD *)(v0 + 352);
  if (v54)
  {
    v56 = *(_QWORD *)(v0 + 272);
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v58 = swift_slowAlloc(32, -1);
    v156 = v58;
    *(_DWORD *)v57 = 136315138;
    v59 = sub_100220D78(&qword_1007C03B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v60 = dispatch thunk of CustomStringConvertible.description.getter(v56, v59);
    v62 = (const char *)v61;
    *(_QWORD *)(v0 + 224) = sub_100228BD8(v60, v61, &v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v57 + 4);
    swift_bridgeObjectRelease(v62);
    sub_1002443C8(v55, _s6RunnerC19PreAcceptRunResultsVMa);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Receive StateMachine PostAccept SKIPPED. {preResults.response: %s}", v57, 0xCu);
    swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);

  }
  else
  {

    sub_1002443C8(v55, _s6RunnerC19PreAcceptRunResultsVMa);
  }
  v63 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  *(_QWORD *)(v0 + 840) = v63;
  *v63 = v0;
  v63[1] = sub_10042F6E0;
  return sub_10054206C();
}

uint64_t sub_10042F6E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 744);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 840));
  return swift_task_switch(sub_10042F738, v1, 0);
}

uint64_t sub_10042F738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 800);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = type metadata accessor for TaskPriority(0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v5 = _s10BaseRunnerC11FinishTokenVMa(0);
  swift_retain(v1);
  v6 = static Task<>.noThrow(priority:operation:)(v2, &unk_1007C08E0, v1, v5);
  swift_release(v1);
  sub_10000D0F0(v2, &qword_1007B68A0);
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
  v28 = *(_QWORD *)(v0 + 752);
  v30 = *(_QWORD *)(v0 + 800);
  v54 = *(_QWORD *)(v0 + 712);
  v56 = *(_QWORD *)(v0 + 704);
  v58 = *(_QWORD *)(v0 + 736);
  v52 = *(_QWORD *)(v0 + 672);
  v46 = *(_QWORD *)(v0 + 656);
  v48 = *(_QWORD *)(v0 + 648);
  v40 = *(_QWORD *)(v0 + 576);
  v42 = *(_QWORD *)(v0 + 608);
  v36 = *(_QWORD *)(v0 + 568);
  v38 = *(_QWORD *)(v0 + 584);
  v32 = *(_QWORD *)(v0 + 544);
  v34 = *(_QWORD *)(v0 + 536);
  v7 = *(_QWORD *)(v0 + 400);
  v8 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 264);
  v50 = *(_QWORD *)(v0 + 272);
  v44 = *(_QWORD *)(v0 + 232);
  v4(v11, 1, 1, v3);
  v12 = static AirDropActor.shared;
  v13 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v14 = (_QWORD *)swift_allocObject(&unk_100728748, 40, 7);
  v14[2] = v12;
  v14[3] = v13;
  v14[4] = v6;
  swift_retain(v6);
  swift_retain(v12);
  v15 = sub_100252EC0(v11, (uint64_t)&unk_1007C08F0, (uint64_t)v14);
  swift_release(v15);
  swift_unknownObjectRelease(v28);
  swift_release(v30);
  swift_release(v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v10);
  sub_10022E75C((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v34);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v40);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v48);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v58, v56);
  v60(v44, v9, v50);
  sub_1002443C8(v9, _s6RunnerC19PreAcceptRunResultsVMa);
  v16 = *(_QWORD *)(v0 + 728);
  v17 = *(_QWORD *)(v0 + 696);
  v18 = *(_QWORD *)(v0 + 672);
  v19 = *(_QWORD *)(v0 + 664);
  v20 = *(_QWORD *)(v0 + 640);
  v21 = *(_QWORD *)(v0 + 632);
  v22 = *(_QWORD *)(v0 + 608);
  v23 = *(_QWORD *)(v0 + 600);
  v24 = *(_QWORD *)(v0 + 592);
  v26 = *(_QWORD *)(v0 + 568);
  v27 = *(_QWORD *)(v0 + 560);
  v29 = *(_QWORD *)(v0 + 552);
  v31 = *(_QWORD *)(v0 + 528);
  v33 = *(_QWORD *)(v0 + 504);
  v35 = *(_QWORD *)(v0 + 480);
  v37 = *(_QWORD *)(v0 + 456);
  v39 = *(_QWORD *)(v0 + 432);
  v41 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v45 = *(_QWORD *)(v0 + 408);
  v47 = *(_QWORD *)(v0 + 384);
  v49 = *(_QWORD *)(v0 + 376);
  v51 = *(_QWORD *)(v0 + 368);
  v53 = *(_QWORD *)(v0 + 360);
  v55 = *(_QWORD *)(v0 + 352);
  v57 = *(_QWORD *)(v0 + 320);
  v59 = *(_QWORD *)(v0 + 312);
  v61 = *(_QWORD *)(v0 + 288);
  v62 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042FB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v5[8] = a4;
  v5[9] = a5;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = type metadata accessor for SFAirDropReceive.Failure(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v5[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v5[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[14] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[15] = swift_task_alloc(v10);
  v5[16] = swift_task_alloc(v10);
  v11 = sub_100008384(&qword_1007B6BD8);
  v5[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[18] = v12;
  v5[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B5B20);
  v5[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[21] = v14;
  v5[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v5[23] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[24] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[25] = swift_task_alloc(v17);
  v5[26] = swift_task_alloc(v17);
  v5[27] = swift_task_alloc(v17);
  v5[28] = swift_task_alloc(v17);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v18 = static AirDropActor.shared;
  v5[29] = static AirDropActor.shared;
  return swift_task_switch(sub_10042FCA0, v18, 0);
}

uint64_t sub_10042FCA0(uint64_t a1)
{
  uint64_t *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v9;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PostAccept START", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = v1[21];
  v5 = v1[22];
  v7 = v1[20];
  v8 = v1[9];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v7);
  SFProgressContinuation.task.getter(v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v9 = (uint64_t **)swift_task_alloc(dword_1007C03A4);
  v1[30] = (uint64_t)v9;
  *v9 = v1;
  v9[1] = (uint64_t *)sub_10042FDC0;
  return sub_100408E2C(v1[28], v1[8]);
}

uint64_t sub_10042FDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 240));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_10042FE34, v1, 0);
}

uint64_t sub_10042FE34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int *v7;
  double v8;
  double v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = v1[16];
  v3 = v1[13];
  v4 = v1[14];
  SFAirDropReceive.Transfer.state.getter(a1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v5 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    v6 = v1[16];
    (*(void (**)(uint64_t, _QWORD))(v1[14] + 96))(v6, v1[13]);
    v7 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
    v1[31] = v7;
    *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v7[16] + 8)).n128_u64[0];
    *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v7[20]), v8).n128_u64[0];
    *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v7[24]), v9).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)(v6 + v7[28]), v10);
    v11 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v1[32] = v11;
    *v11 = v1;
    v11[1] = sub_100430068;
    v12 = 0;
  }
  else if (v5 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    v13 = v1[16];
    v15 = v1[11];
    v14 = v1[12];
    v16 = v1[10];
    (*(void (**)(uint64_t, _QWORD))(v1[14] + 96))(v13, v1[13]);
    v17 = sub_100008384(&qword_1007B9BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v13 + *(int *)(v17 + 48), v16);
    v18 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v19 = swift_allocError(v16, v18, 0, 0);
    v1[33] = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v14, v16);
    v21 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v1[34] = v21;
    *v21 = v1;
    v21[1] = sub_10043031C;
    v12 = v19;
  }
  else
  {
    v22 = type metadata accessor for CancellationError(0);
    v23 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v24 = swift_allocError(v22, v23, 0, 0);
    v1[35] = v24;
    CancellationError.init()();
    v25 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v1[36] = v25;
    *v25 = v1;
    v25[1] = sub_1004305DC;
    v12 = v24;
  }
  return sub_10050A37C(v12);
}

uint64_t sub_100430068()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  return swift_task_switch(sub_1004300C0, v1, 0);
}

uint64_t sub_1004300C0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  __n128 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 16))(v0[27], v0[28], v0[23]);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v24 = v0[27];
    v25 = v0[24];
    v26 = v0[23];
    v4 = v0[15];
    v23 = v0[14];
    v5 = v0[13];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v27 = v7;
    *(_DWORD *)v6 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v7);
    v8 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v9 = dispatch thunk of CustomStringConvertible.description.getter(v5, v8);
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v5);
    v0[4] = sub_100228BD8(v9, (unint64_t)v11, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5, v6 + 4);
    v12 = swift_bridgeObjectRelease(v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
    v13(v24, v26, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PostAccept END {transfer.state: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v14 = v0[27];
    v15 = v0[23];
    v16 = v0[24];

    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    ((void (*)(uint64_t, uint64_t))v13)(v14, v15);
  }
  v17 = v0[16];
  v18 = v17 + *(int *)(v0[31] + 48);
  v19 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);
  v0[37] = v13;
  v21 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  v0[38] = v21;
  *v21 = v0;
  v21[1] = sub_100430860;
  return sub_10054206C();
}

uint64_t sub_10043031C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10043037C, v2, 0);
}

uint64_t sub_10043037C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  __n128 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 16))(v0[26], v0[28], v0[23]);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v23 = v0[24];
    v24 = v0[23];
    v4 = v0[15];
    v21 = v0[26];
    v22 = v0[14];
    v5 = v0[13];
    v25 = v0[11];
    v26 = v0[10];
    v27 = v0[12];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v28 = v7;
    *(_DWORD *)v6 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v7);
    v8 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v9 = dispatch thunk of CustomStringConvertible.description.getter(v5, v8);
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v5);
    v0[3] = sub_100228BD8(v9, (unint64_t)v11, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v6 + 4);
    v12 = swift_bridgeObjectRelease(v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v23 + 8);
    v13(v21, v24, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PostAccept FAILED {transfer.state: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    v15 = v0[11];
    v14 = v0[12];
    v16 = v0[10];
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0[24] + 8);
    ((void (*)(_QWORD, _QWORD))v13)(v0[26], v0[23]);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = v0[16];
  v18 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v0[37] = v13;
  v19 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  v0[38] = v19;
  *v19 = v0;
  v19[1] = sub_100430860;
  return sub_10054206C();
}

uint64_t sub_1004305DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10043063C, v2, 0);
}

uint64_t sub_10043063C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  void (*v12)(uint64_t, uint64_t);
  __n128 v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 16))(v0[25], v0[28], v0[23]);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v21 = v0[25];
    v23 = v0[24];
    v24 = v0[23];
    v4 = v0[14];
    v5 = v0[15];
    v6 = v0[13];
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v25 = v22;
    *(_DWORD *)v7 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v22);
    v8 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v9 = dispatch thunk of CustomStringConvertible.description.getter(v6, v8);
    v11 = v10;
    v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v12(v5, v6);
    v0[2] = sub_100228BD8(v9, (unint64_t)v11, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v7 + 4);
    v13 = swift_bridgeObjectRelease(v11);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v23 + 8);
    v14(v21, v24, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PostAccept INCOMPLETE {transfer.state: %s}", v7, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v16 = v0[24];
    v15 = v0[25];
    v17 = v0[23];
    v18 = v0[14];

    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    ((void (*)(uint64_t, uint64_t))v14)(v15, v17);
    v12 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  }
  v12(v0[16], v0[13]);
  v0[37] = v14;
  v19 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  v0[38] = v19;
  *v19 = v0;
  v19[1] = sub_100430860;
  return sub_10054206C();
}

uint64_t sub_100430860()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 304));
  return swift_task_switch(sub_1004308B8, v1, 0);
}

uint64_t sub_1004308B8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v0 + 312) = 1;
  v8 = CurrentValueSubject.send(completion:)(v0 + 312);
  sub_1005432F8(v8);
  v9 = v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v10 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v9, v10);
  v11 = _s10BaseRunnerC11FinishTokenVMa(0);
  CurrentValueSubject.value.getter(v11);
  v1(v2, v5);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004309FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100430A64, static AirDropActor.shared, 0);
}

uint64_t sub_100430A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 32) = 1;
  v3 = CurrentValueSubject.send(completion:)(v0 + 32);
  sub_1005432F8(v3);
  v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v5 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v2, v4, v5);
  v6 = _s10BaseRunnerC11FinishTokenVMa(0);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100430B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = _s10BaseRunnerC11FinishTokenVMa(0);
  v7 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = v7;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4[3] = static AirDropActor.shared;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_100430BD0;
  return Task<>.value.getter(v7, a4, v6);
}

uint64_t sub_100430BD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  return swift_task_switch(sub_100432688, v1, 0);
}

uint64_t sub_100430C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100430C98, v6, 0);
}

uint64_t sub_100430C98(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t);

  SFAirDropReceive.AskRequest.canAutoAccept.getter(a1);
  v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007B6BC8 + dword_1007B6BC8);
  v2 = (_QWORD *)swift_task_alloc(unk_1007B6BCC);
  v1[8] = v2;
  *v2 = v1;
  v2[1] = sub_100430D04;
  return v4(v1[4], v1[5]);
}

uint64_t sub_100430D04()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  v2 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v4;
  v2[1] = sub_100430D68;
  return sub_10054206C();
}

uint64_t sub_100430D68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  return swift_task_switch(sub_100430DC0, v1, 0);
}

uint64_t sub_100430DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 80) = 1;
  v3 = CurrentValueSubject.send(completion:)(v0 + 80);
  sub_1005432F8(v3);
  v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v5 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v2, v4, v5);
  v6 = _s10BaseRunnerC11FinishTokenVMa(0);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100430E68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2[4] = static AirDropActor.shared;
  v3 = (_QWORD *)swift_task_alloc(dword_1007C5B9C);
  v2[5] = v3;
  *v3 = v2;
  v3[1] = sub_100430EEC;
  return sub_10054206C();
}

uint64_t sub_100430EEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_100430F40, v1, 0);
}

uint64_t sub_100430F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 48) = 1;
  v3 = CurrentValueSubject.send(completion:)(v0 + 48);
  sub_1005432F8(v3);
  v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v5 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v2, v4, v5);
  v6 = _s10BaseRunnerC11FinishTokenVMa(0);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100430FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = _s10BaseRunnerC11FinishTokenVMa(0);
  v7 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = v7;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4[3] = static AirDropActor.shared;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_1004310AC;
  return Task<>.value.getter(v7, a4, v6);
}

uint64_t sub_1004310AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  return swift_task_switch(sub_100431100, v1, 0);
}

uint64_t sub_100431100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1005441FC();
  sub_1002443C8(v1, _s10BaseRunnerC11FinishTokenVMa);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100431148()
{
  uint64_t v0;

  sub_100232F78(v0 + 16);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for SDAirDropReceiveStateMachine()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary28SDAirDropReceiveStateMachine);
}

uint64_t sub_1004311A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x100431204);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1004311BC + *((int *)qword_100431208 + (a4 >> 62))))(v5);
}

uint64_t sub_100431218(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_100431228 + *((int *)qword_1004312D0 + (a4 >> 62))))();
}

uint64_t sub_10043123C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x1004312C8);
  }
  return ((uint64_t (*)(void))((char *)&loc_100431278 + *((int *)qword_1004312E0 + a3)))();
}

uint64_t sub_1004312F0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

uint64_t sub_100431378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 72) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 80) = static AirDropActor.shared;
  return swift_task_switch(sub_1004313E4, v2, 0);
}

uint64_t sub_1004313E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  unint64_t v26;
  const char *v27;
  const char *v28;
  _QWORD *v29;
  _DWORD *v30;
  uint8_t *v31;
  uint8_t *buf;
  os_log_t log;
  NSObject *loga;
  uint64_t (*logb)(uint64_t);
  void *v36;
  Swift::String v37;
  Swift::String v38;

  v1 = SFAirDropReceive.AskRequest.previewImage.getter();
  *(_QWORD *)(v0 + 88) = v1;
  if (!v1)
    goto LABEL_4;
  v2 = (void *)v1;
  if ((SFAirDropReceive.AskRequest.senderIsMe.getter(v1) & 1) != 0)
  {

LABEL_4:
    if (qword_1007B40A0 != -1)
      swift_once(&qword_1007B40A0, sub_10042D020);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007C07E8);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Receive StateMachine PreChecks isPreviewSensitive SKIP. No previewImage or senderIsMe", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
LABEL_8:

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v10 = sub_1003B0844();
  v12 = v11;
  if (!v9)
  {
    if (qword_1007B40A0 != -1)
      swift_once(&qword_1007B40A0, sub_10042D020);
    v22 = type metadata accessor for Logger(0);
    sub_100221DF8(v22, (uint64_t)qword_1007C07E8);
    swift_bridgeObjectRetain(v12);
    v5 = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v24))
    {
      loga = v5;
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      buf = (uint8_t *)swift_slowAlloc(32, -1);
      v36 = buf;
      *(_DWORD *)v25 = 136315138;
      v30 = v25 + 4;
      v31 = v25;
      swift_bridgeObjectRetain(v12);
      v38._countAndFlagsBits = v10;
      v38._object = v12;
      v26 = sub_1003ABB94(v38, 0);
      v28 = v27;
      sub_10031B7F4(v10, (uint64_t)v12, 0);
      *(_QWORD *)(v0 + 64) = sub_100228BD8(v26, (unint64_t)v28, (uint64_t *)&v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v30);
      swift_bridgeObjectRelease(v28);
      sub_10031B7F4(v10, (uint64_t)v12, 0);
      sub_10031B7F4(v10, (uint64_t)v12, 0);
      v5 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, v24, "Receive StateMachine PreChecks isPreviewSensitive SKIP {userSafetyMode: %s}", v31, 0xCu);
      swift_arrayDestroy(buf, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(buf, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      sub_10031B7F4(v10, (uint64_t)v12, 0);
      sub_10031B7F4(v10, (uint64_t)v12, 0);
    }
    goto LABEL_8;
  }
  v13 = v9;
  if (qword_1007B40A0 != -1)
    swift_once(&qword_1007B40A0, sub_10042D020);
  v14 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 96) = sub_100221DF8(v14, (uint64_t)qword_1007C07E8);
  v15 = sub_10031B7DC(v10, (uint64_t)v12, v13);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    log = (os_log_t)swift_slowAlloc(32, -1);
    v36 = log;
    *(_DWORD *)v18 = 136315138;
    sub_10031B7DC(v10, (uint64_t)v12, v13);
    v37._countAndFlagsBits = v10;
    v37._object = v12;
    v19 = sub_1003ABB94(v37, v13);
    v21 = v20;
    sub_10031B7F4(v10, (uint64_t)v12, v13);
    *(_QWORD *)(v0 + 56) = sub_100228BD8(v19, (unint64_t)v21, (uint64_t *)&v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v18 + 4);
    swift_bridgeObjectRelease(v21);
    sub_10031B7F4(v10, (uint64_t)v12, v13);
    sub_10031B7F4(v10, (uint64_t)v12, v13);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Receive StateMachine PreChecks isPreviewSensitive START {userSafetyMode: %s}", v18, 0xCu);
    swift_arrayDestroy(log, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(log, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_10031B7F4(v10, (uint64_t)v12, v13);
    sub_10031B7F4(v10, (uint64_t)v12, v13);
  }

  logb = (uint64_t (*)(uint64_t))((char *)&dword_1007BDD80 + dword_1007BDD80);
  v29 = (_QWORD *)swift_task_alloc(unk_1007BDD84);
  *(_QWORD *)(v0 + 104) = v29;
  *v29 = v0;
  v29[1] = sub_100431908;
  return logb((uint64_t)v2);
}

uint64_t sub_100431908(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  *(_BYTE *)(v3 + 124) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100431A70;
  else
    v5 = sub_100431978;
  return swift_task_switch(v5, *(_QWORD *)(v3 + 80), 0);
}

uint64_t sub_100431978(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  void *v5;
  uint8_t *v6;
  NSObject *v7;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v1 + 124);
    v5 = *(void **)(v1 + 88);
    v6 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109120;
    *(_DWORD *)(v1 + 120) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 124, v6 + 4);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PreChecks isPreviewSensitive END {isPreviewSensitive: %{BOOL}d}", v6, 8u);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v7 = *(NSObject **)(v1 + 88);

    v2 = v7;
  }

  return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(unsigned __int8 *)(v1 + 124));
}

uint64_t sub_100431A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 112);

  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 112);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v5, v0 + 40, v0 + 16);
    v8 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v10 = (const char *)v9;
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v6 + 4);
    swift_bridgeObjectRelease(v10, v13);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Receive StateMachine PreChecks FAILED. Error analyzing preview - returning .error {error: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

unint64_t sub_100431C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007C08D0;
  if (!qword_1007C08D0)
  {
    v1 = sub_10021FF9C(&qword_1007C5DB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, &qword_1007C08D0);
  }
  return result;
}

uint64_t sub_100431C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007C08DC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D098;
  return sub_1004309FC(a1, v1);
}

uint64_t sub_100431CCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007C08EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_100430B0C(a1, v4, v5, v6);
}

uint64_t sub_100431D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5));
  v12 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v9, v12);
  v13 = v0 + v9 + *(int *)(v6 + 20);
  v14 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_100431E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6RunnerC19PreAcceptRunResultsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100431E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(_s6RunnerC19PreAcceptRunResultsVMa(0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = v1 + v8;
  v12 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_1007C08FC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10000D098;
  return sub_10042FB24(a1, v10, v9, v11, v12);
}

uint64_t sub_100431F60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007C0914);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D12C;
  return sub_100430E68(a1, v1);
}

uint64_t sub_100431FB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007C0924);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_100430FE8(a1, v4, v5, v6);
}

uint64_t sub_100432024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = sub_100008384(&qword_1007B5B20);
  v1 = *(_QWORD *)(v17 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v16 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v15 = v12 + *(_QWORD *)(v10 + 64);
  v13 = v2 | v6 | v11 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  return swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100432128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007B5B20) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for SFAirDropReceive.ItemDestination(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropReceive.AskRequest(0) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 16);
  v13 = v1 + v5;
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_1007C0934);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000D098;
  return sub_100430C24(a1, v12, v13, v14, v15);
}

uint64_t sub_100432204(uint64_t a1)
{
  __int128 v2;
  uint64_t result;
  unint64_t v4;
  _OWORD v5[2];

  v2 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v2;
  result = type metadata accessor for SFAirDrop.PermissionRequest(319, v5);
  if (v4 <= 0x3F)
  {
    *(_QWORD *)&v5[0] = *(_QWORD *)(result - 8) + 64;
    *((_QWORD *)&v5[0] + 1) = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 0, 2, v5, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_100432284(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_OWORD *)(a3 + 32);
    v12[0] = *(_OWORD *)(a3 + 16);
    v12[1] = v7;
    v8 = type metadata accessor for SFAirDrop.PermissionRequest(0, v12);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(a3 + 52);
    v10 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v10;
  }
  swift_retain(v10);
  return a1;
}

uint64_t sub_100432320(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  _OWORD v7[2];

  v4 = *(_OWORD *)(a2 + 32);
  v7[0] = *(_OWORD *)(a2 + 16);
  v7[1] = v4;
  v5 = type metadata accessor for SFAirDrop.PermissionRequest(0, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 52)));
}

uint64_t sub_10043237C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  v7 = type metadata accessor for SFAirDrop.PermissionRequest(0, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(a3 + 52);
  v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t sub_1004323F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];

  v6 = *(_OWORD *)(a3 + 32);
  v12[0] = *(_OWORD *)(a3 + 16);
  v12[1] = v6;
  v7 = type metadata accessor for SFAirDrop.PermissionRequest(0, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a1, a2, v7);
  v8 = *(int *)(a3 + 52);
  v9 = *(_QWORD *)(a2 + v8);
  v10 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t sub_100432470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD v9[2];

  v6 = *(_OWORD *)(a3 + 32);
  v9[0] = *(_OWORD *)(a3 + 16);
  v9[1] = v6;
  v7 = type metadata accessor for SFAirDrop.PermissionRequest(0, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_1004324E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  v7 = type metadata accessor for SFAirDrop.PermissionRequest(0, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a1, a2, v7);
  v8 = *(int *)(a3 + 52);
  v9 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release(v9);
  return a1;
}

uint64_t sub_100432558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100432564);
}

uint64_t sub_100432564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  _OWORD v11[2];

  v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  v7 = type metadata accessor for SFAirDrop.PermissionRequest(0, v11);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_1004325EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004325F8);
}

uint64_t sub_1004325F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __int128 v8;
  uint64_t result;
  uint64_t v10;
  _OWORD v11[2];

  v8 = *(_OWORD *)(a4 + 32);
  v11[0] = *(_OWORD *)(a4 + 16);
  v11[1] = v8;
  result = type metadata accessor for SFAirDrop.PermissionRequest(0, v11);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SDPermissionRequestTask(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for SDPermissionRequestTask);
}

uint64_t sub_10043268C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C09C0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C09C0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10043271C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10043280C, static AirDropActor.shared, 0);
}

uint64_t sub_10043280C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  NSString v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  NSString v29;
  NSString v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v44;
  os_log_type_t type[8];
  uint64_t (*v46)(_QWORD, unint64_t, _QWORD);

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v3, v2, v4, v8);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v15);
    if (v14)
    {
      v17 = 0;
    }
    else
    {
      v18 = SFAirDropReceive.AskRequest.files.getter(v16);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v44 = (const char *)v18;
        v20 = *(_QWORD *)(v1 + 80);
        v21 = v18 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        *(_QWORD *)type = *(_QWORD *)(v20 + 72);
        v46 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v20 + 16);
        while (1)
        {
          v22 = v46(*(_QWORD *)(v1 + 88), v21, *(_QWORD *)(v1 + 72));
          SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v22);
          v24 = v23;
          v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v24);
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v26);
          v28 = v27;
          v29 = String._bridgeToObjectiveC()();
          v30 = objc_msgSend(v29, "pathExtension", swift_bridgeObjectRelease(v28).n128_f64[0]);

          if (!v30)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0);
            v32 = v31;
            v30 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v32);
          }
          v33 = *(_QWORD *)(v1 + 88);
          v34 = *(_QWORD *)(v1 + 72);
          v35 = SFIsContact(v25, v30);

          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v33, v34);
          if ((v35 & 1) == 0)
            break;
          v21 += *(_QWORD *)type;
          if (!--v19)
          {
            swift_bridgeObjectRelease(v44);
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease(v44);
        v17 = 0;
      }
      else
      {
        swift_bridgeObjectRelease((const char *)v18);
LABEL_13:
        v36 = objc_allocWithZone((Class)LSApplicationRecord);
        v37 = sub_100528FF4(0xD00000000000001BLL, 0x800000010061B130, 1);
        v38 = *(_QWORD *)(v1 + 40);
        v39 = *(void **)(v38 + 16);
        *(_QWORD *)(v38 + 16) = v37;

        v17 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    v17 = 0;
  }
  v40 = *(_QWORD *)(v1 + 112);
  v41 = *(_QWORD *)(v1 + 88);
  v42 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v17);
}

uint64_t type metadata accessor for SDAirDropContentHandlerContacts()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary31SDAirDropContentHandlerContacts);
}

uint64_t sub_100432D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerContacts();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100432D68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C0A04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_10043271C(a1);
}

void sub_100432DBC(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x544341544E4F43;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xE700000000000000).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x544341544E4F43;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE700000000000000);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100433000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_100008384(&qword_1007C07D8);
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C07E0);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[8] = v6;
  v3[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDrop.TransferType(0);
  v3[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[11] = v8;
  v3[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004330B4, 0, 0);
}

uint64_t sub_1004330B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_QWORD *)(v1 + 88);
  v2 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = SFAirDropSend.Request.type.getter(a1);
  v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    v8 = _swiftEmptyArrayStorage;
LABEL_6:
    v14 = *(_QWORD *)(v1 + 72);
    v15 = *(_QWORD *)(v1 + 48);
    swift_task_dealloc(*(_QWORD *)(v1 + 96));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(v8);
  }
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 48);
  SFAirDropSend.Request.urlsPromise.getter(v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v12 = sub_100433400(*(_QWORD *)(v1 + 48));
    v13 = SFAirDropSend.Request.urls.getter(v12);
    if (v13)
    {
      v8 = (_QWORD *)v13;
      goto LABEL_6;
    }
    v22 = type metadata accessor for SFAirDropSend.Failure(0);
    v23 = sub_100321560();
    swift_allocError(v22, v23, 0, 0);
    v25 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, enum case for SFAirDropSend.Failure.badRequest(_:), v22);
    swift_willThrow(v25);
    v26 = *(_QWORD *)(v1 + 72);
    v27 = *(_QWORD *)(v1 + 48);
    swift_task_dealloc(*(_QWORD *)(v1 + 96));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v1 + 24);
    v17 = *(_QWORD *)(v1 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 64) + 32))(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
    v19 = sub_100008384(&qword_1007C0AC8);
    v20 = swift_allocObject(v19, 48, 7);
    *(_QWORD *)(v1 + 104) = v20;
    *(_OWORD *)(v20 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v20 + 32) = v18;
    *(_QWORD *)(v20 + 40) = v17;
    sub_100244404(v18, v17);
    v21 = (_QWORD *)swift_task_alloc(async function pointer to SFXPCBlock.dynamicallyCall(withArguments:)[1]);
    *(_QWORD *)(v1 + 112) = v21;
    *v21 = v1;
    v21[1] = sub_1004332C4;
    return SFXPCBlock.dynamicallyCall(withArguments:)(v1 + 16, v20, *(_QWORD *)(v1 + 56));
  }
}

uint64_t sub_1004332C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(const char **)(v2 + 104));
  if (v0)
    v4 = sub_10043339C;
  else
    v4 = sub_100433330;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100433330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10043339C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100433400(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007C07D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100433440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C0AD0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0AD0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004334D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004335C0, static AirDropActor.shared, 0);
}

uint64_t sub_1004335C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  const char *v27;
  NSString v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  NSString v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  os_log_t log;
  NSObject *loga;
  void (*v70)(uint64_t, uint64_t, __n128);
  uint64_t (*v71)(uint64_t);
  uint64_t *v72;
  os_log_type_t type[8];
  os_log_type_t typea;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = *(NSObject **)(v5 + 16);
  v10 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v9)(v3, v2, v4, v8);
  v11 = *(_QWORD *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 96);
  v13 = *(_QWORD *)(v1 + 104);
  if (v7)
  {
    v14 = SFAirDropReceive.AskRequest.urlItems.getter(v10);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = swift_bridgeObjectRelease((const char *)v14);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 8);
    v18 = v17(v11, v12, v16);
    if (v15)
    {
      v19 = 0;
    }
    else
    {
      log = v9;
      v70 = (void (*)(uint64_t, uint64_t, __n128))v17;
      v20 = SFAirDropReceive.AskRequest.files.getter(v18);
      v21 = v20;
      v75 = *(_QWORD *)(v20 + 16);
      if (v75)
      {
        v23 = *(_QWORD *)(v1 + 80);
        v22 = *(_QWORD *)(v1 + 88);
        v24 = *(_QWORD *)(v1 + 72);
        v71 = *(uint64_t (**)(uint64_t))(v23 + 16);
        *(_QWORD *)type = v20
                        + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        v25 = v71(v22);
        SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v25);
        v27 = v26;
        v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v27);
        LODWORD(v27) = SFIsCalendarEvent(v28);

        v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v29(v22, v24);
        if (!(_DWORD)v27)
        {
LABEL_11:
          swift_bridgeObjectRelease((const char *)v21);
          v19 = 0;
          goto LABEL_17;
        }
        v30 = *(_QWORD *)(v1 + 80);
        v31 = 1;
        while (v75 != v31)
        {
          if (v31 >= *(_QWORD *)(v21 + 16))
          {
            __break(1u);
            swift_once(&qword_1007B40B0, sub_100433440);
            v40 = *(_QWORD *)(v1 + 112);
            v41 = *(_QWORD *)(v1 + 96);
            v42 = *(_QWORD *)(v1 + 32);
            v43 = type metadata accessor for Logger(0);
            sub_100221DF8(v43, (uint64_t)qword_1007C0AD0);
            ((void (*)(uint64_t, uint64_t, uint64_t))log)(v40, v42, v41);
            swift_errorRetain(v21);
            v44 = swift_errorRetain(v21);
            v45 = Logger.logObject.getter(v44);
            v46 = static os_log_type_t.error.getter(v45);
            v47 = os_log_type_enabled(v45, v46);
            v48 = *(_QWORD *)(v1 + 112);
            v49 = *(_QWORD *)(v1 + 96);
            if (v47)
            {
              v51 = *(_QWORD *)(v1 + 56);
              v50 = *(_QWORD *)(v1 + 64);
              typea = v46;
              v52 = *(_QWORD *)(v1 + 48);
              v67 = *(_QWORD *)(v1 + 96);
              v53 = swift_slowAlloc(22, -1);
              v72 = (uint64_t *)swift_slowAlloc(8, -1);
              v76 = swift_slowAlloc(32, -1);
              v77 = v76;
              *(_DWORD *)v53 = 136315394;
              loga = v45;
              SFAirDropReceive.AskRequest.id.getter(v76);
              v54 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
              v55 = dispatch thunk of CustomStringConvertible.description.getter(v52, v54);
              v57 = v56;
              (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
              *(_QWORD *)(v1 + 16) = sub_100228BD8(v55, (unint64_t)v57, &v77);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v53 + 4);
              v58 = swift_bridgeObjectRelease(v57);
              v70(v48, v67, v58);
              *(_WORD *)(v53 + 12) = 2112;
              swift_errorRetain(v21);
              v59 = _swift_stdlib_bridgeErrorToNSError(v21);
              *(_QWORD *)(v1 + 24) = v59;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v53 + 14);
              *v72 = v59;
              swift_errorRelease(v21);
              swift_errorRelease(v21);
              _os_log_impl((void *)&_mh_execute_header, loga, typea, "Failed to get Calendar app for ask request %s: %@", (uint8_t *)v53, 0x16u);
              v60 = sub_100008384(&qword_1007B4C30);
              swift_arrayDestroy(v72, 1, v60);
              swift_slowDealloc(v72, -1, -1);
              swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v76, -1, -1);
              swift_slowDealloc(v53, -1, -1);

              swift_errorRelease(v21);
            }
            else
            {
              swift_errorRelease(v21);
              ((void (*)(uint64_t, uint64_t))v70)(v48, v49);
              swift_errorRelease(v21);
              swift_errorRelease(v21);

            }
            goto LABEL_16;
          }
          v32 = *(_QWORD *)(v1 + 88);
          v33 = *(_QWORD *)(v1 + 72);
          v34 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t))v71)(v32, *(_QWORD *)type + *(_QWORD *)(v30 + 72) * v31++, v33);
          SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v34);
          v36 = v35;
          v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v36);
          LOBYTE(v36) = SFIsCalendarEvent(v37);

          v29(v32, v33);
          if ((v36 & 1) == 0)
            goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease((const char *)v21);
      v38 = objc_allocWithZone((Class)LSApplicationRecord);
      v39 = sub_100528FF4(0xD000000000000013, 0x800000010061B230, 1);
      v61 = *(_QWORD *)(v1 + 40);
      v62 = *(void **)(v61 + 16);
      *(_QWORD *)(v61 + 16) = v39;

LABEL_16:
      v19 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    v19 = 0;
  }
LABEL_17:
  v63 = *(_QWORD *)(v1 + 112);
  v64 = *(_QWORD *)(v1 + 88);
  v65 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v19);
}

uint64_t sub_100433AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_100008384(&qword_1007BA4D0);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CodableError(0);
  v4[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[16] = v7;
  v4[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B9928);
  v4[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[19] = v9;
  v4[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v4[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[22] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[23] = swift_task_alloc(v12);
  v4[24] = swift_task_alloc(v12);
  v4[25] = swift_task_alloc(v12);
  v4[26] = swift_task_alloc(v12);
  v4[27] = swift_task_alloc(v12);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[28] = swift_task_alloc(v13);
  v4[29] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[30] = swift_task_alloc(v14);
  v4[31] = swift_task_alloc(v14);
  v4[32] = swift_task_alloc(v14);
  v4[33] = swift_task_alloc(v14);
  v4[34] = swift_task_alloc(v14);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100433CA4, static AirDropActor.shared, 0);
}

uint64_t sub_100433CA4()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  Class isa;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  const char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  const char *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void (*v109)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  int *v137;
  _OWORD *v138;
  id *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, __n128);
  uint64_t v151;
  uint64_t v152;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  os_log_t logc;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t, uint64_t, __n128);
  uint64_t v166;
  uint64_t v167[3];

  v134 = (uint64_t *)(v0 + 56);
  v135 = (uint64_t *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v147 = *(int **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 104);
  v140 = *(_QWORD *)(v0 + 152);
  v141 = *(_QWORD *)(v5 + 16);
  v6 = (int *)objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  v144 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v144(v2, 1, 1, v3);
  swift_bridgeObjectRetain((const char *)v5);
  v136 = 0;
  v7 = 0;
  v137 = v6;
  v138 = (_OWORD *)(v0 + 16);
  v139 = (id *)(v0 + 72);
  while (1)
  {
    if (v7 == v141)
    {
      v144(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 168));
      v161 = v141;
LABEL_6:
      v10 = *(_QWORD *)(v0 + 224);
      v11 = *(_QWORD *)(v0 + 144);
      sub_10000D0F0(*(_QWORD *)(v0 + 264), (uint64_t *)&unk_1007B5200);
      v12 = v140;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v10, 1, 1, v11);
      goto LABEL_9;
    }
    if (v7 >= v141)
      goto LABEL_49;
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v8, *(_QWORD *)(v0 + 104)+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v7, v9);
    v144(v8, 0, 1, v9);
    v161 = v7 + 1;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v8, 1, v9) == 1)
      goto LABEL_6;
    v13 = v6;
    v14 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 168);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v17(v14, *(_QWORD *)(v0 + 264), v16);
    v6 = v147;
    v18 = v15 + v147[12];
    v17(v18, v14, v16);
    v1 = (v136 + 1);
    if (__OFADD__(v136, 1))
      goto LABEL_50;
    v19 = *(_QWORD **)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 144);
    v22 = (char *)v19 + v147[12];
    *v19 = v136;
    v17((uint64_t)v22, v18, v20);
    v12 = v140;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v19, 0, 1, v21);
    ++v136;
    v6 = v13;
LABEL_9:
    v23 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 144);
    sub_10022E718(*(_QWORD *)(v0 + 224), v23, &qword_1007B9930);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v23, 1, v24) == 1)
      break;
    v25 = *(char **)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 200);
    v157 = *(_QWORD *)v25;
    (*(void (**)(uint64_t, char *, _QWORD))(v4 + 32))(v26, &v25[v147[12]], *(_QWORD *)(v0 + 168));
    v27 = Data.init(contentsOf:options:)(v26, 0);
    log = v28;
    isa = Data._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v6, "defaultCalendarForNewEvents");
    v31 = objc_msgSend(v6, "importICSData:intoCalendar:options:", isa, v30, 0);

    if (v31)
    {
      v164 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, (char *)&type metadata for Any + 8);

    }
    else
    {
      v164 = 0;
    }
    if (qword_1007B40B0 != -1)
      swift_once(&qword_1007B40B0, sub_100433440);
    v32 = *(_QWORD *)(v0 + 192);
    v33 = *(_QWORD *)(v0 + 200);
    v34 = *(_QWORD *)(v0 + 168);
    v35 = type metadata accessor for Logger(0);
    sub_100221DF8(v35, (uint64_t)qword_1007C0AD0);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v32, v33, v34);
    v1 = Logger.logObject.getter(v36);
    v37 = v4;
    v38 = static os_log_type_t.default.getter(v1);
    v39 = os_log_type_enabled(v1, v38);
    v40 = *(_QWORD *)(v0 + 192);
    v41 = *(_QWORD *)(v0 + 168);
    if (v39)
    {
      v42 = swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v167[0] = v43;
      *(_DWORD *)v42 = 136315138;
      v44 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v41, v44);
      v47 = (const char *)v46;
      *(_QWORD *)(v42 + 4) = sub_100228BD8(v45, v46, v167);
      v48 = swift_bridgeObjectRelease(v47);
      v150 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
      v150(v40, v41, v48);
      _os_log_impl((void *)&_mh_execute_header, v1, v38, "Calendar Events data was imported from %s", (uint8_t *)v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      v49 = v43;
      v6 = v137;
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      v150 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
      ((void (*)(_QWORD, _QWORD))v150)(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));
    }

    v4 = v37;
    v50 = *(_QWORD *)(v0 + 248);
    v51 = *(_QWORD *)(v0 + 168);
    sub_100330F1C(*(_QWORD *)(v0 + 272), v50);
    v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v50, 1, v51);
    v53 = *(_QWORD *)(v0 + 248);
    if (v52 != 1)
    {
      sub_100225AB4(v27, (unint64_t)log);
      swift_bridgeObjectRelease((const char *)v164);
      v54 = v53;
      v55 = (uint64_t *)&unk_1007B5200;
      goto LABEL_30;
    }
    sub_10000D0F0(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1007B5200);
    if (!v164)
    {
      *v138 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
LABEL_29:
      sub_100225AB4(v27, (unint64_t)log);
      v54 = v0 + 16;
      v55 = (uint64_t *)&unk_1007B6890;
LABEL_30:
      sub_10000D0F0(v54, v55);
      goto LABEL_31;
    }
    if (*(_QWORD *)(v164 + 16))
    {
      sub_10022E77C(v164 + 32, (uint64_t)v138);
    }
    else
    {
      *v138 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    swift_bridgeObjectRelease((const char *)v164, v134, v135);
    if (!*(_QWORD *)(v0 + 40))
      goto LABEL_29;
    v56 = sub_100434E60();
    if ((swift_dynamicCast(v139, v138, (char *)&type metadata for Any + 8, v56, 6) & 1) != 0)
    {
      v57 = *v139;
      v58 = objc_msgSend(*v139, "externalURL");
      if (v58)
      {
        v59 = v58;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v58);
        sub_100225AB4(v27, (unint64_t)log);

        v60 = 0;
      }
      else
      {
        sub_100225AB4(v27, (unint64_t)log);
        v60 = 1;
      }
      v64 = *(_QWORD *)(v0 + 272);
      v65 = *(_QWORD *)(v0 + 240);
      v1 = *(NSObject **)(v0 + 168);

      sub_10000D0F0(v64, (uint64_t *)&unk_1007B5200);
      v144(v65, v60, 1, (uint64_t)v1);
      sub_10022E718(v65, v64, (uint64_t *)&unk_1007B5200);
    }
    else
    {
      sub_100225AB4(v27, (unint64_t)log);
    }
LABEL_31:
    v7 = v161;
    if (__OFADD__(v157, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      swift_once(&qword_1007B40B0, sub_100433440);
      v70 = *(_QWORD *)(v0 + 200);
      v71 = *(_QWORD *)(v0 + 184);
      v72 = *(_QWORD *)(v0 + 168);
      v73 = type metadata accessor for Logger(0);
      sub_100221DF8(v73, (uint64_t)qword_1007C0AD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v71, v70, v72);
      swift_errorRetain(v1);
      v74 = swift_errorRetain(v1);
      v75 = Logger.logObject.getter(v74);
      v76 = static os_log_type_t.error.getter(v75);
      v77 = os_log_type_enabled(v75, v76);
      v78 = *(_QWORD *)(v0 + 184);
      v79 = v4;
      v80 = *(_QWORD *)(v0 + 168);
      if (v77)
      {
        v81 = swift_slowAlloc(22, -1);
        v158 = (uint64_t *)swift_slowAlloc(8, -1);
        v162 = swift_slowAlloc(32, -1);
        v167[0] = v162;
        *(_DWORD *)v81 = 136315394;
        loga = v75;
        v82 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v83 = dispatch thunk of CustomStringConvertible.description.getter(v80, v82);
        v85 = (const char *)v84;
        *v134 = sub_100228BD8(v83, v84, v167);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v134, v135, v81 + 4);
        v86 = swift_bridgeObjectRelease(v85);
        v165 = *(void (**)(uint64_t, uint64_t, __n128))(v79 + 8);
        v165(v78, v80, v86);
        *(_WORD *)(v81 + 12) = 2112;
        swift_errorRetain(v1);
        v87 = _swift_stdlib_bridgeErrorToNSError(v1);
        *v135 = v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, v139, v81 + 14);
        *v158 = v87;
        swift_errorRelease(v1);
        swift_errorRelease(v1);
        _os_log_impl((void *)&_mh_execute_header, loga, v76, "processCalendarEvents failed to load data for file: %s with error: %@", (uint8_t *)v81, 0x16u);
        v88 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v158, 1, v88);
        v6 = v137;
        swift_slowDealloc(v158, -1, -1);
        swift_arrayDestroy(v162, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v162, -1, -1);
        swift_slowDealloc(v81, -1, -1);

      }
      else
      {
        v165 = *(void (**)(uint64_t, uint64_t, __n128))(v79 + 8);
        ((void (*)(_QWORD, _QWORD))v165)(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
        swift_errorRelease(v1);
        swift_errorRelease(v1);

      }
      v104 = *(_QWORD *)(v0 + 120);
      v105 = *(_QWORD *)(v0 + 128);
      v106 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 48) = v1;
      swift_errorRetain(v1);
      v107 = sub_100008384(&qword_1007B5A60);
      v108 = swift_dynamicCast(v106, v0 + 48, v107, v104, 6);
      v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      if ((v108 & 1) != 0)
      {
        v111 = *(_QWORD *)(v0 + 128);
        v110 = *(_QWORD *)(v0 + 136);
        v112 = *(_QWORD *)(v0 + 112);
        v113 = *(_QWORD *)(v0 + 120);
        v109(v112, 0, 1, v113);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v110, v112, v113);
        v114 = type metadata accessor for SFAirDropReceive.Failure(0);
        v115 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        swift_allocError(v114, v115, 0, 0);
        v117 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v116, v110, v113);
        v118 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v114 - 8) + 104))(v117, enum case for SFAirDropReceive.Failure.unexpected(_:), v114);
        swift_willThrow(v118);

        swift_errorRelease(v1);
        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v113);
      }
      else
      {
        v119 = *(_QWORD *)(v0 + 112);
        v109(v119, 1, 1, *(_QWORD *)(v0 + 120));
        sub_10000D0F0(v119, &qword_1007BA4D0);
        v120 = type metadata accessor for SFAirDropReceive.Failure(0);
        v121 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        swift_allocError(v120, v121, 0, 0);
        v123 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v120 - 8) + 104))(v122, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v120);
        swift_willThrow(v123);

        swift_errorRelease(v1);
      }
      v125 = *(_QWORD *)(v0 + 264);
      v124 = *(_QWORD *)(v0 + 272);
      v127 = *(_QWORD *)(v0 + 248);
      v126 = *(_QWORD *)(v0 + 256);
      v128 = *(_QWORD *)(v0 + 232);
      v129 = *(_QWORD *)(v0 + 240);
      v131 = *(_QWORD *)(v0 + 216);
      v130 = *(_QWORD *)(v0 + 224);
      v132 = *(_QWORD *)(v0 + 200);
      v143 = *(_QWORD *)(v0 + 208);
      v146 = *(_QWORD *)(v0 + 192);
      v149 = *(_QWORD *)(v0 + 184);
      v152 = *(_QWORD *)(v0 + 160);
      logc = *(os_log_t *)(v0 + 136);
      v160 = *(_QWORD *)(v0 + 112);
      ((void (*)(uint64_t, _QWORD))v165)(v132, *(_QWORD *)(v0 + 168));
      sub_10000D0F0(v124, (uint64_t *)&unk_1007B5200);
      swift_task_dealloc(v124);
      swift_task_dealloc(v125);
      swift_task_dealloc(v126);
      swift_task_dealloc(v127);
      swift_task_dealloc(v129);
      swift_task_dealloc(v128);
      swift_task_dealloc(v130);
      swift_task_dealloc(v131);
      swift_task_dealloc(v143);
      swift_task_dealloc(v132);
      swift_task_dealloc(v146);
      swift_task_dealloc(v149);
      swift_task_dealloc(v152);
      swift_task_dealloc(logc);
      swift_task_dealloc(v160);
      v103 = *(uint64_t (**)(void))(v0 + 8);
      return v103();
    }
    v61 = *(_QWORD *)(v0 + 200);
    v62 = *(_QWORD *)(v0 + 168);
    v63 = *(void (**)(uint64_t *))(v0 + 88);
    *(double *)v167 = (double)(v157 + 1) / (double)(uint64_t)(v141 + 1);
    v63(v167);
    ((void (*)(uint64_t, uint64_t))v150)(v61, v62);
  }
  v66 = *(_QWORD *)(v0 + 272);
  v67 = *(_QWORD *)(v0 + 256);
  v68 = *(_QWORD *)(v0 + 168);
  swift_bridgeObjectRelease(*(const char **)(v0 + 104));
  sub_100330F1C(v66, v67);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v67, 1, v68) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1007B5200);
    v69 = _swiftEmptyArrayStorage;
  }
  else
  {
    v89 = *(_QWORD *)(v0 + 208);
    v90 = *(_QWORD *)(v0 + 168);
    v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v91(v89, *(_QWORD *)(v0 + 256), v90);
    v92 = sub_100008384(&qword_1007B5318);
    v93 = *(unsigned __int8 *)(v4 + 80);
    v94 = (v93 + 32) & ~v93;
    v69 = (_QWORD *)swift_allocObject(v92, v94 + *(_QWORD *)(v4 + 72), v93 | 7);
    *((_OWORD *)v69 + 1) = xmmword_1005CD2A0;
    v91((uint64_t)v69 + v94, v89, v90);
  }
  v96 = *(_QWORD *)(v0 + 264);
  v95 = *(_QWORD *)(v0 + 272);
  v98 = *(_QWORD *)(v0 + 248);
  v97 = *(_QWORD *)(v0 + 256);
  v100 = *(_QWORD *)(v0 + 232);
  v99 = *(_QWORD *)(v0 + 240);
  v101 = *(_QWORD *)(v0 + 224);
  v142 = *(_QWORD *)(v0 + 216);
  v145 = *(_QWORD *)(v0 + 208);
  v148 = *(_QWORD *)(v0 + 200);
  v151 = *(_QWORD *)(v0 + 192);
  logb = *(os_log_t *)(v0 + 184);
  v159 = *(_QWORD *)(v0 + 160);
  v163 = *(_QWORD *)(v0 + 136);
  v166 = *(_QWORD *)(v0 + 112);
  v102 = *(_QWORD **)(v0 + 80);

  sub_10000D0F0(v95, (uint64_t *)&unk_1007B5200);
  *v102 = v69;
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v142);
  swift_task_dealloc(v145);
  swift_task_dealloc(v148);
  swift_task_dealloc(v151);
  swift_task_dealloc(logb);
  swift_task_dealloc(v159);
  swift_task_dealloc(v163);
  swift_task_dealloc(v166);
  v103 = *(uint64_t (**)(void))(v0 + 8);
  return v103();
}

uint64_t type metadata accessor for SDAirDropContentHandlerCalendarEvents()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary37SDAirDropContentHandlerCalendarEvents);
}

uint64_t sub_100434A40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerCalendarEvents();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100434A74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C0B14);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1004334D0(a1);
}

uint64_t sub_100434AC8(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = 0;
  v2 = swift_allocObject(&unk_100728978, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRetain(a1);
  v3 = sub_100008384((uint64_t *)&unk_1007B6820);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000016, 0x800000010061B1A0, &v5, &unk_1007C0BE8, v2, 0xD00000000000006CLL, 0x800000010061B1C0, 61, &type metadata for Double, v3);
}

void sub_100434B88(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x5241444E454C4143;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xE800000000000000).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x5241444E454C4143;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE800000000000000);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100434DCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100434DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc(dword_1007C0BE4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D12C;
  return sub_100433AD8(a1, a2, a3, v8);
}

unint64_t sub_100434E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007C0BF0;
  if (!qword_1007C0BF0)
  {
    v1 = objc_opt_self(EKEvent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007C0BF0);
  }
  return result;
}

uint64_t *sub_100434E9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for CodableError(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100434F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for CodableError(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100434FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CodableError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_10043501C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CodableError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100435098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CodableError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100435114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CodableError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100435190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043519C);
}

uint64_t sub_10043519C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for CodableError(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100435210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043521C);
}

uint64_t sub_10043521C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for CodableError(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s12ErrorRequestVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C0C50;
  if (!qword_1007C0C50)
    return swift_getSingletonMetadata(a1, &_s12ErrorRequestVMn);
  return result;
}

uint64_t sub_1004352D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for SFAirDrop.TransferIdentifier(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CodableError(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100435358(char *a1, char *a2)
{
  return sub_1004A7FF0(*a1, *a2);
}

Swift::Int sub_100435364()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x726F727245;
  else
    v2 = 0x726566736E617254;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xEA00000000004449;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1004353E4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x726F727245;
  else
    v2 = 0x726566736E617254;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xEA00000000004449;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100435440()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x726F727245;
  else
    v2 = 0x726566736E617254;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xEA00000000004449;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1004354BC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071CC80, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100435518(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x726566736E617254;
  if (*v1)
    v2 = 0x726F727245;
  v3 = 0xEA00000000004449;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100435558()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F727245;
  else
    return 0x726566736E617254;
}

uint64_t sub_100435594@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071CC80, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1004355F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100435D10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043561C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100435D10();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100435644()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *v8;

  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v1 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 2108704;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  _s12ErrorRequestVMa(0);
  v5 = type metadata accessor for CodableError(0);
  v6 = sub_100220D78(&qword_1007C0C88, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  return 0xD000000000000010;
}

uint64_t sub_100435764(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_100008384(&qword_1007C0CA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_100435D10();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12ErrorRequestV10CodingKeysON, &_s12ErrorRequestV10CodingKeysON, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v13 = sub_100220D78(&qword_1007BD7A8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = v3 + *(int *)(_s12ErrorRequestVMa(0) + 20);
    v19 = 1;
    v15 = type metadata accessor for CodableError(0);
    v16 = sub_100220D78(&qword_1007C0CB0, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v14, &v19, v5, v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004358E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v26 = a2;
  v28 = type metadata accessor for CodableError(0);
  v25 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v4 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100008384(&qword_1007C0C90);
  v6 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s12ErrorRequestVMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_10023A834(a1, v12);
  v14 = sub_100435D10();
  v31 = v8;
  v15 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12ErrorRequestV10CodingKeysON, &_s12ErrorRequestV10CodingKeysON, v14, v12, v13);
  if (v15)
    return sub_10022E75C(a1);
  v16 = v6;
  v17 = (uint64_t)v11;
  v18 = a1;
  v19 = v27;
  v20 = v28;
  v35 = 0;
  v21 = sub_100220D78(&qword_1007BD798, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v35, v32, v30, v21);
  v33 = v4;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v17, v29, v30);
  v34 = 1;
  v22 = sub_100220D78(&qword_1007C0CA0, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v34, v32, v20, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v17 + *(int *)(v9 + 20), v19, v20);
  sub_100435D54(v17, v26);
  sub_10022E75C(v18);
  return sub_100435D98(v17);
}

uint64_t sub_100435BB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004358E8(a1, a2);
}

uint64_t sub_100435BCC(_QWORD *a1)
{
  return sub_100435764(a1);
}

uint64_t sub_100435BE0()
{
  Swift::String v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  const char *object;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  const char *v9;
  Swift::String v10;

  _StringGuts.grow(_:)(23);
  v0._object = (void *)0x800000010061B250;
  v0._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v0);
  v1 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v2);
  object = (const char *)v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 2108704;
  v5._object = (void *)0xE300000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for CodableError(0);
  v7 = sub_100220D78(&qword_1007C0C88, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v9 = (const char *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.append(_:)(v10);
  return 0;
}

unint64_t sub_100435D10()
{
  unint64_t result;

  result = qword_1007C0C98;
  if (!qword_1007C0C98)
  {
    result = swift_getWitnessTable(&unk_1005D8394, &_s12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C0C98);
  }
  return result;
}

uint64_t sub_100435D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12ErrorRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100435D98(uint64_t a1)
{
  uint64_t v2;

  v2 = _s12ErrorRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s12ErrorRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100435E20 + 4 * byte_1005D820D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100435E54 + 4 * byte_1005D8208[v4]))();
}

uint64_t sub_100435E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100435E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100435E64);
  return result;
}

uint64_t sub_100435E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100435E78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100435E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100435E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12ErrorRequestV10CodingKeysOMa()
{
  return &_s12ErrorRequestV10CodingKeysON;
}

unint64_t sub_100435EA4()
{
  unint64_t result;

  result = qword_1007C0CB8;
  if (!qword_1007C0CB8)
  {
    result = swift_getWitnessTable(&unk_1005D836C, &_s12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C0CB8);
  }
  return result;
}

unint64_t sub_100435EEC()
{
  unint64_t result;

  result = qword_1007C0CC0;
  if (!qword_1007C0CC0)
  {
    result = swift_getWitnessTable(&unk_1005D82A4, &_s12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C0CC0);
  }
  return result;
}

unint64_t sub_100435F34()
{
  unint64_t result;

  result = qword_1007C0CC8;
  if (!qword_1007C0CC8)
  {
    result = swift_getWitnessTable(&unk_1005D82CC, &_s12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C0CC8);
  }
  return result;
}

uint64_t sub_100435F78()
{
  void *v0;
  unint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(v0, "airdropHash1");
  v1 = sub_100436888();
  v2 = (const char *)FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  objc_msgSend(v0, "airdropHash2");
  v3 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_1003431E0(v3);
  objc_msgSend(v0, "airdropHash3");
  v4 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_1003431E0(v4);
  objc_msgSend(v0, "airdropHash4");
  v5 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_1003431E0(v5);
  v6 = sub_100474E80(v2);
  swift_bridgeObjectRelease(v2);
  return v6;
}

uint64_t sub_1004360A0(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  const char *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  Class v45;
  Class v46;
  unsigned __int8 v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  const char *v52;
  const char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  const char *v57;
  const char *v58;
  _DWORD *v60;
  _DWORD *v61;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t type;
  os_log_type_t typea;
  void *v66;
  uint64_t v67;
  NSObject *log;
  uint64_t v69;
  _BYTE v70[16];
  uint64_t v71;

  v3 = v2;
  v6 = sub_100435F78();
  v8 = v7;
  isa = Data._bridgeToObjectiveC()().super.isa;
  LODWORD(a1) = objc_msgSend(a1, "contactsContainsShortHashes:", isa);

  if ((_DWORD)a1)
  {
    if (qword_1007B40B8 != -1)
      swift_once(&qword_1007B40B8, sub_1004367F8);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007C0CD0);
    sub_10022E4A8(v6, v8);
    v11 = sub_10022E4A8(v6, v8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v71 = v15;
      *(_DWORD *)v14 = 136380675;
      sub_10038D14C(v6, v8);
      v17 = v16;
      v18 = sub_100008384((uint64_t *)&unk_1007BD6A0);
      v19 = sub_1002E7428();
      v20 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v18, v19);
      v22 = v21;
      swift_bridgeObjectRelease(v17);
      v69 = sub_100228BD8(v20, (unint64_t)v22, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v14 + 4);
      swift_bridgeObjectRelease(v22);
      sub_100225AB4(v6, v8);
      sub_100225AB4(v6, v8);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Device hashes %{private}s recognized", v14, 0xCu);
      v23 = 1;
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

LABEL_18:
      sub_100225AB4(v6, v8);
      return v23;
    }
    sub_100225AB4(v6, v8);
    sub_100225AB4(v6, v8);
    sub_100225AB4(v6, v8);

  }
  else
  {
    if (qword_1007B40B8 != -1)
      swift_once(&qword_1007B40B8, sub_1004367F8);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007C0CD0);
    sub_10022E4A8(v6, v8);
    v25 = sub_10022E4A8(v6, v8);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      type = swift_slowAlloc(32, -1);
      v71 = type;
      *(_DWORD *)v28 = 136380675;
      v60 = v28 + 4;
      buf = v28;
      sub_10038D14C(v6, v8);
      v30 = v29;
      v66 = a2;
      v31 = sub_100008384((uint64_t *)&unk_1007BD6A0);
      v32 = sub_1002E7428();
      v33 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v31, v32);
      v35 = v34;
      swift_bridgeObjectRelease(v30);
      v69 = sub_100228BD8(v33, v35, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v60);
      v36 = (const char *)v35;
      a2 = v66;
      swift_bridgeObjectRelease(v36);
      sub_100225AB4(v6, v8);
      sub_100225AB4(v6, v8);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Device hashes %{private}s unrecognized", buf, 0xCu);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(buf, -1, -1);
    }
    else
    {
      sub_100225AB4(v6, v8);
      sub_100225AB4(v6, v8);
    }

    v37 = objc_msgSend(v3, "airdropTempAuthTagData");
    v23 = (uint64_t)v37;
    if (!v37)
      goto LABEL_18;
    v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    v41 = objc_msgSend(v3, "btAddressData");
    v23 = (uint64_t)v41;
    if (!v41)
    {
      sub_100225AB4(v6, v8);
      sub_100225AB4(v38, v40);
      return v23;
    }
    v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    v45 = Data._bridgeToObjectiveC()().super.isa;
    v46 = Data._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(a2, "isTempAuthTagKnown:bluetoothAddressData:", v45, v46);

    if ((v47 & 1) == 0)
    {
      sub_100225AB4(v6, v8);
      sub_100225AB4(v42, v44);
      sub_100225AB4(v38, v40);
      return 0;
    }
    sub_10022E4A8(v38, v40);
    v48 = sub_10022E4A8(v38, v40);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      log = v49;
      typea = v50;
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v67 = swift_slowAlloc(32, -1);
      v71 = v67;
      *(_DWORD *)v51 = 136315138;
      v61 = v51 + 4;
      bufa = v51;
      sub_10038D14C(v38, v40);
      v53 = v52;
      v69 = (uint64_t)v52;
      v54 = sub_100008384((uint64_t *)&unk_1007BD6A0);
      v55 = sub_1002E7428();
      v56 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v54, v55);
      v58 = v57;
      swift_bridgeObjectRelease(v53);
      v69 = sub_100228BD8(v56, (unint64_t)v58, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v61);
      swift_bridgeObjectRelease(v58);
      sub_100225AB4(v38, v40);
      sub_100225AB4(v38, v40);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "Device temp auth tag %s recognized", bufa, 0xCu);
      v23 = 1;
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(bufa, -1, -1);
      sub_100225AB4(v42, v44);

      sub_100225AB4(v38, v40);
      sub_100225AB4(v6, v8);
      return v23;
    }
    sub_100225AB4(v6, v8);
    sub_100225AB4(v38, v40);
    sub_100225AB4(v38, v40);
    sub_100225AB4(v38, v40);
    sub_100225AB4(v42, v44);

  }
  return 1;
}

uint64_t sub_1004367F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C0CD0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0CD0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_100436888()
{
  unint64_t result;

  result = qword_1007C0CE8;
  if (!qword_1007C0CE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt16, &type metadata for UInt16);
    atomic_store(result, (unint64_t *)&qword_1007C0CE8);
  }
  return result;
}

void sub_1004368CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  double v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  const char *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v20 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  *(_QWORD *)&v6 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * i);
    v15 = *v14;
    v16 = (const char *)v14[1];
    swift_bridgeObjectRetain(v16, v6);
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_100227A68(0, v8[2] + 1, 1, v8);
    v18 = v8[2];
    v17 = v8[3];
    if (v18 >= v17 >> 1)
      v8 = sub_100227A68((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
    v8[2] = v18 + 1;
    v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v5)
        goto LABEL_27;
      v12 = *(_QWORD *)(v20 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v5)
          goto LABEL_27;
        v12 = *(_QWORD *)(v20 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v5)
            goto LABEL_27;
          v12 = *(_QWORD *)(v20 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

_QWORD *sub_100436AC4(int64_t *a1)
{
  int64_t v1;
  int64_t v2;
  int64_t v3;
  uint64_t v4;
  int64_t v5;
  _BOOL4 v6;
  BOOL v7;
  int64_t v8;
  BOOL v9;
  BOOL v10;
  void (*v13)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v14;
  _QWORD v16[3];

  v1 = 0;
  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a1;
  while (1)
  {
    v6 = v3 >= v5;
    if (v4 > 0)
      v6 = v5 >= v3;
    if (v6)
      break;
    v7 = __OFADD__(v5, v4);
    v5 += v4;
    if (v7)
      v5 = (v5 >> 63) ^ 0x8000000000000000;
    v7 = __OFADD__(v1++, 1);
    if (v7)
    {
      __break(1u);
      break;
    }
  }
  v16[2] = _swiftEmptyArrayStorage;
  sub_100229BA8(0, v1, 0);
  v13 = (void (*)(uint64_t *__return_ptr, _QWORD *))a1[3];
  v8 = a1[4];
  if (v1)
  {
    swift_retain(v8);
    v9 = v3 >= v2;
    if (v4 > 0)
      v9 = v2 >= v3;
    if (!v9)
    {
      v16[0] = v2;
      v13(&v14, v16);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x100436E98);
  }
  swift_retain(v8);
  v10 = v3 >= v2;
  if (v4 > 0)
    v10 = v2 >= v3;
  if (!v10)
  {
    v16[0] = v2;
    v13(&v14, v16);
    __asm { BR              X9 }
  }
  sub_100444F78((uint64_t)a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100436ED0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v2 = (_QWORD *)a2;
    else
      v2 = (_QWORD *)(a2 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain((const char *)a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v7 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        v8 = 0;
        v2 = _swiftEmptyArrayStorage;
        while (1)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a2);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v12 >= v11 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
          v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized Array._endMutation()(v13);
          v3 = _swiftEmptyArrayStorage;
          if ((unint64_t)_swiftEmptyArrayStorage >> 62)
          {
            if ((uint64_t)_swiftEmptyArrayStorage < 0)
              v16 = _swiftEmptyArrayStorage;
            else
              v16 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
            swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
            v17 = _CocoaArrayWrapper.endIndex.getter(v16);
            *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
            if (v17 > a1)
            {
LABEL_12:
              swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
              if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
                v2 = sub_10022882C(0, v2[2] + 1, 1, (uint64_t)v2);
              v15 = v2[2];
              v14 = v2[3];
              if (v15 >= v14 >> 1)
                v2 = sub_10022882C((_QWORD *)(v14 > 1), v15 + 1, 1, (uint64_t)v2);
              v2[2] = v15 + 1;
              v2[v15 + 4] = _swiftEmptyArrayStorage;
              *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
              v3 = _swiftEmptyArrayStorage;
            }
          }
          else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
          {
            goto LABEL_12;
          }
          if (v6 == ++v8)
            goto LABEL_37;
        }
      }
      v18 = 0;
      v2 = _swiftEmptyArrayStorage;
      while (1)
      {
        v19 = *(_QWORD *)(a2 + 8 * v18 + 32);
        v20 = swift_retain(v19);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v22 >= v21 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
        specialized Array._endMutation()(v23);
        v3 = _swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        {
          if ((uint64_t)_swiftEmptyArrayStorage < 0)
            v26 = _swiftEmptyArrayStorage;
          else
            v26 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
          v27 = _CocoaArrayWrapper.endIndex.getter(v26);
          *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
          if (v27 > a1)
          {
LABEL_28:
            swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
            if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
              v2 = sub_10022882C(0, v2[2] + 1, 1, (uint64_t)v2);
            v25 = v2[2];
            v24 = v2[3];
            if (v25 >= v24 >> 1)
              v2 = sub_10022882C((_QWORD *)(v24 > 1), v25 + 1, 1, (uint64_t)v2);
            v2[2] = v25 + 1;
            v2[v25 + 4] = _swiftEmptyArrayStorage;
            *(_QWORD *)&v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
            v3 = _swiftEmptyArrayStorage;
          }
        }
        else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
        {
          goto LABEL_28;
        }
        if (v6 == ++v18)
        {
LABEL_37:
          v28 = swift_bridgeObjectRelease((const char *)a2, v9).n128_u64[0];
          if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
            goto LABEL_38;
LABEL_48:
          if ((uint64_t)_swiftEmptyArrayStorage < 0)
            v31 = _swiftEmptyArrayStorage;
          else
            v31 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v28);
          v32 = _CocoaArrayWrapper.endIndex.getter(v31);
          v28 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
          if (!v32)
            goto LABEL_52;
LABEL_39:
          if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) != 0)
          {
LABEL_40:
            v30 = v2[2];
            v29 = v2[3];
            if (v30 >= v29 >> 1)
              v2 = sub_10022882C((_QWORD *)(v29 > 1), v30 + 1, 1, (uint64_t)v2);
            v2[2] = v30 + 1;
            v2[v30 + 4] = v3;
            return v2;
          }
LABEL_55:
          v2 = sub_10022882C(0, v2[2] + 1, 1, (uint64_t)v2);
          goto LABEL_40;
        }
      }
    }
  }
  v28 = swift_bridgeObjectRelease((const char *)a2, v7).n128_u64[0];
  v3 = _swiftEmptyArrayStorage;
  v2 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_48;
LABEL_38:
  if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_39;
LABEL_52:
  swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, *(double *)&v28);
  return v2;
}

uint64_t sub_1004372E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C0CF0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0CF0);
  if (qword_1007B3E90 != -1)
    swift_once(&qword_1007B3E90, sub_1002E9F5C);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8280);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100437374()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropContactHashManager()), "init");
  sub_1004373B0();
  qword_1007C0D08 = (uint64_t)v0;
}

void sub_1004373B0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  void (*v35)();
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for SFPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007C0CF0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HashManager: activate called", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  static SFPlatform.watchOS.getter(v11);
  v12 = static SFPlatform.isPlatform(_:)(v5);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v12 & 1) != 0)
  {
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "AirDrop hashes not needed for watchOS", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
  else
  {
    v17 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor];
    v18 = swift_allocObject(&unk_100728B98, 24, 7);
    *(_QWORD *)(v18 + 16) = v0;
    v35 = sub_100444D80;
    v36 = v18;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_10025BBB4;
    v34 = &unk_100728BB0;
    v19 = _Block_copy(&aBlock);
    v20 = v36;
    v21 = v1;
    swift_release(v20);
    objc_msgSend(v17, "setFirstUnlockHandler:", v19);
    _Block_release(v19);
    v22 = swift_allocObject(&unk_100728BE8, 24, 7);
    *(_QWORD *)(v22 + 16) = v21;
    v35 = sub_100444DA0;
    v36 = v22;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_10025BBB4;
    v34 = &unk_100728C00;
    v23 = _Block_copy(&aBlock);
    v24 = v36;
    v25 = v21;
    swift_release(v24);
    objc_msgSend(v17, "setPowerUnlimitedChangedHandler:", v23);
    _Block_release(v23);
    v35 = sub_1004388BC;
    v36 = 0;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_10025BBB4;
    v34 = &unk_100728C28;
    v26 = _Block_copy(&aBlock);
    objc_msgSend(v17, "setMeDeviceChangedHandler:", v26);
    _Block_release(v26);
    v27 = swift_allocObject(&unk_100728C60, 24, 7);
    *(_QWORD *)(v27 + 16) = v25;
    v35 = sub_100444DA8;
    v36 = v27;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_10025BBB4;
    v34 = &unk_100728C78;
    v28 = _Block_copy(&aBlock);
    v29 = v36;
    v30 = v25;
    swift_release(v29);
    objc_msgSend(v17, "activateWithCompletion:", v28);
    _Block_release(v28);
    sub_100443E54();
    sub_100444140();
  }
}

uint64_t sub_10043773C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "objectForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v9, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_100221E54((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = type metadata accessor for Date(0);
    v6 = swift_dynamicCast(a1, v10, (char *)&type metadata for Any + 8, v5, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007B6890);
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

char *sub_100437880(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  objc_class *ObjectType;
  objc_super v44;
  _QWORD *v45;

  v2 = v1;
  v42 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v40 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactUpdateCoalescer;
  v13 = objc_allocWithZone((Class)CUCoalescer);
  v14 = v2;
  *(_QWORD *)&v2[v12] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardUpdateCoalescer;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)CUCoalescer), "init");
  v16 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ;
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  v45 = _swiftEmptyArrayStorage;
  v17 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v19 = sub_10037B658((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v18, v19, v6, v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v40 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v41);
  v20 = v8;
  v21 = v42;
  *(_QWORD *)&v14[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000033, 0x800000010061B830, v11, v20, v5, 0);
  v22 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_bucket;
  v23 = objc_msgSend(objc_allocWithZone((Class)SFTokenBucket), "initWithBucketSize:tokenDurationSec:", 100, 1.0);
  v24 = objc_msgSend(objc_allocWithZone((Class)SFTokenBucketWithDups), "initWithBucket:dupHistoryLength:", v23, 100);

  *(_QWORD *)&v14[v22] = v24;
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated] = 0;
  v25 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactChangeBatchSize] = 1000;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction] = 0;
  v26 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  sub_100244418(v21 + 8, (uint64_t)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore]);
  v41 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB] = v41;
  v27 = *(_QWORD *)v21;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor] = *(_QWORD *)v21;
  v28 = *(void **)(v21 + 64);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter] = v28;
  v29 = *(void **)(v21 + 72);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_distributedNotificationCenter] = v29;
  sub_100445140((uint64_t *)v21, (uint64_t)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context]);
  swift_unknownObjectRetain(v41);
  swift_unknownObjectRetain(v27);
  v30 = v28;
  v31 = v29;

  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_100221DF8(v32, (uint64_t)qword_1007C0CF0);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "HashManager: init.", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

  v44.receiver = v14;
  v44.super_class = ObjectType;
  v37 = (char *)objc_msgSendSuper2(&v44, "init");
  objc_msgSend(*(id *)&v37[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor], "setDispatchQueue:", *(_QWORD *)&v37[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ]);
  sub_10044517C(v21);
  return v37;
}

void sub_100437D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD, uint64_t);
  id v9;
  void (*v10)(_QWORD *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(_QWORD *, uint64_t);
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD, uint64_t);
  id v19;
  uint8_t *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v5 = v6;
  v7 = enum case for DispatchPredicate.onQueue(_:);
  v8 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104);
  v8(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v9 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  v10 = *(void (**)(_QWORD *, uint64_t))(v3 + 8);
  v10(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007C0CF0);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    v34 = v2;
    v16 = v10;
    v17 = v7;
    v18 = v8;
    v19 = v9;
    v20 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HashManager: internal activate called", v15, 2u);
    v21 = v20;
    v9 = v19;
    v8 = v18;
    v7 = v17;
    v10 = v16;
    v2 = v34;
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor), "firstUnlocked");
  if ((_DWORD)v22)
  {
    v23 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) == 0)
    {
      sub_10043948C();
      *v5 = v9;
      v8(v5, v7, v2);
      v24 = v9;
      v25 = _dispatchPreconditionTest(_:)(v5);
      v10(v5, v2);
      if ((v25 & 1) != 0)
      {
        if ((*(_BYTE *)(v1 + v23) & 1) == 0)
        {
          sub_100439770(&OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactUpdateCoalescer, (uint64_t)&unk_100728D50, (uint64_t)sub_100444E08, (uint64_t)&unk_100728D68);
          sub_100439770(&OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardUpdateCoalescer, (uint64_t)&unk_100728D00, (uint64_t)sub_100444DE8, (uint64_t)&unk_100728D18);
        }
        sub_1004381E4(0);
        sub_100439924();
        v27 = Logger.logObject.getter(v26);
        v28 = static os_log_type_t.default.getter(v27);
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "HashManager: activated", v29, 2u);
          swift_slowDealloc(v29, -1, -1);
        }

        *(_BYTE *)(v1 + v23) = 1;
        sub_100438EAC();
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    v30 = Logger.logObject.getter(v22);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Device has not been unlocked. Don't activate hash manager.", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

  }
}

void sub_1004380EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor), "powerUnlimited"))
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007C0CF0);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Power handler called", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    sub_1004381E4(0);
  }
}

void sub_1004381E4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C0CF0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Hash update requested.", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Force rebuild requested", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  v19 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
  if (v19)
  {
    v20 = objc_msgSend(v19, "identifier");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v37 = 0;
  v38 = 0;
  v36 = 0;
  v24 = Logger.logObject.getter(v19);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Begin AirDropContactHashManager OSTransaction", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = os_transaction_create("AirDropContactHashManager");
  v28 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction;
  v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction];
  *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction] = v27;
  swift_unknownObjectRelease(v29);
  sub_10043D0CC(v2, a1 & 1, &v36, &v38, &v37, v21, v23);
  swift_bridgeObjectRelease(v23);
  v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] = 1;
  if (*(_QWORD *)&v2[v28])
  {
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Clearing AirDropContactHashManager OSTransaction", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    v34 = *(_QWORD *)&v2[v28];
    *(_QWORD *)&v2[v28] = 0;
    swift_unknownObjectRelease(v34);
  }
}

void sub_1004388BC()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C0CF0);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Device change handler called", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_100438988(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C0CF0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a2, v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  sub_100437D68();
}

void sub_100438A68()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v18 = 0;
  v4 = objc_msgSend(v0, "removeItemAtURL:error:", v2, &v18);

  if (v4)
  {
    v5 = v18;
  }
  else
  {
    v17 = v18;
    v6 = v18;
    v7 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v8);
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v9 = type metadata accessor for Logger(0);
    sub_100221DF8(v9, (uint64_t)qword_1007C0CF0);
    swift_errorRetain(v7);
    v10 = swift_errorRetain(v7);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412290;
      swift_errorRetain(v7);
      v15 = (void *)_swift_stdlib_bridgeErrorToNSError(v7);
      v18 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4);
      *v14 = v15;
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to delete url %@", v13, 0xCu);
      v16 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v14, 1, v16);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease(v7);
    }
    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);

    }
  }
}

void sub_100438CFC(const char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  NSString v16;
  uint64_t v17;

  v3 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C0CF0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a1, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "postNotificationName:object:", v16, 0);

}

void sub_100438EAC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  char v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (_QWORD *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  v7 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v7 & 1) != 0)
  {
    sub_100438CFC("Posting contacts hashes changed notification");
    sub_100438CFC("Posting meCard changed notification");
    v8 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler];
    if (v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler + 8] == 1)
    {
      v9 = swift_allocObject(&unk_100728CB0, 24, 7);
      *(_QWORD *)(v9 + 16) = v0;
      aBlock[4] = sub_100444DC8;
      v15 = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100439DD4;
      aBlock[3] = &unk_100728CC8;
      v10 = _Block_copy(aBlock);
      v11 = v15;
      v12 = v0;
      swift_release(v11);
      v13 = os_state_add_handler(v6, v10);
      _Block_release(v10);
      *(_QWORD *)v8 = v13;
      v8[8] = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10043905C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007C0CF0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Contact update coalescer fired", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    sub_1004381E4(0);
    sub_100438CFC("Posting contacts hashes changed notification");
  }
  else
  {
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HashManager: not activated yet.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
}

void sub_100439278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007C0CF0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "MeCard update coalescer fired", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    sub_100438CFC("Posting meCard changed notification");
  }
  else
  {
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HashManager: not activated yet.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
}

void sub_10043948C()
{
  uint64_t v0;
  char **v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, _QWORD *))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_5;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) != 0)
    return;
  v2 = (_QWORD *)objc_opt_self(NSUserDefaults);
  v1 = &selRef_setSupportsApproveIcon_;
  v8 = objc_msgSend(v2, "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v8, "integerForKey:", v9);

  if (v5 == (_QWORD *)3)
    return;
  if (qword_1007B40C0 != -1)
    goto LABEL_10;
LABEL_5:
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C0CF0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    *(_DWORD *)v14 = 134218240;
    v20 = (uint64_t)v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 4);
    *(_WORD *)(v14 + 12) = 2048;
    v20 = 3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Database version mismatch: %ld!=%ld. Clearing history token to rebuild database", (uint8_t *)v14, 0x16u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = objc_msgSend(v2, v1[361]);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setObject:forKey:", 0, v16);

  v17 = objc_msgSend(v2, v1[361]);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setInteger:forKey:", 3, v18);

}

void sub_100439770(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  double *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = v13;
  v15 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if ((v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated] & 1) == 0)
    {
      v16 = *(void **)&v4[*a1];
      objc_msgSend(v16, "setDispatchQueue:", v14);
      v17 = (double *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context];
      objc_msgSend(v16, "setMinDelay:", *(double *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context + 80]);
      objc_msgSend(v16, "setMaxDelay:", v17[11]);
      v18 = swift_allocObject(a2, 24, 7);
      *(_QWORD *)(v18 + 16) = v4;
      aBlock[4] = a3;
      v23 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10025BBB4;
      aBlock[3] = a4;
      v19 = _Block_copy(aBlock);
      v20 = v23;
      v21 = v4;
      swift_release(v20);
      objc_msgSend(v16, "setActionHandler:", v19);
      _Block_release(v19);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100439924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  NSString v10;
  uint64_t v11;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) == 0)
    {
      v7 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter);
      v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore);
      objc_msgSend(v7, "addObserver:selector:name:object:", v0, "contactStoreDidChange", *(_QWORD *)(*sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore), *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore + 24))+ 16), 0);
      objc_msgSend(v7, "addObserver:selector:name:object:", v0, "meCardDidChange", *(_QWORD *)(*sub_10023A834(v8, v8[3]) + 24), 0);
      v9 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_distributedNotificationCenter);
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "addObserver:selector:name:object:", v0, "cmfSyncAgentBlockListDidChange", v10, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100439AC4()
{
  const char *v0;
  const char *v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v12;

  sub_100439E1C();
  v1 = v0;
  v2 = (void *)objc_opt_self(NSPropertyListSerialization);
  v3 = String._bridgeToObjectiveC()();
  v12 = 0;
  v4 = objc_msgSend(v2, "dataWithPropertyList:format:options:error:", v3, 200, 0, &v12, swift_bridgeObjectRelease(v1).n128_f64[0]);

  v5 = v12;
  if (v4)
  {
    static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    __asm { BR              X10 }
  }
  v8 = v5;
  v9 = _convertNSErrorToError(_:)(v5);

  swift_willThrow(v10);
  swift_errorRelease(v9);
  return 0;
}

uint64_t sub_100439DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = v4(a2);
  swift_release(v3);
  return v5;
}

uint64_t sub_100439E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;
  const char *object;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Swift::String v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  Swift::String v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  Swift::String v56;
  const char *v57;
  Swift::String v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  v62 = v3;
  __chkstk_darwin(v2);
  v59 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v59 - v9;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char **)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  v17 = _dispatchPreconditionTest(_:)(v14);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    v60 = v8;
    v64 = 10;
    v65 = 0xE100000000000000;
    v19 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v20 = swift_allocObject(v19, 72, 7);
    v63 = xmmword_1005CD2A0;
    *(_OWORD *)(v20 + 16) = xmmword_1005CD2A0;
    v21 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated;
    v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated);
    v23 = sub_100299AB0();
    v24 = v23;
    v25 = 28526;
    if (v22)
      v25 = 7562617;
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = v23;
    if (v22)
      v26 = 0xE300000000000000;
    else
      v26 = 0xE200000000000000;
    *(_QWORD *)(v20 + 32) = v25;
    *(_QWORD *)(v20 + 40) = v26;
    v27._countAndFlagsBits = String.init(format:_:)(0xD000000000000024, 0x800000010061B690, v20);
    object = (const char *)v27._object;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(object);
    if (*(_BYTE *)(v1 + v21) == 1)
    {
      v29 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v29 + 16) = v63;
      v30 = 28526;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully))
      {
        v30 = 7562617;
        v31 = 0xE300000000000000;
      }
      else
      {
        v31 = 0xE200000000000000;
      }
      *(_QWORD *)(v29 + 56) = &type metadata for String;
      *(_QWORD *)(v29 + 64) = v24;
      *(_QWORD *)(v29 + 32) = v30;
      *(_QWORD *)(v29 + 40) = v31;
      v32._countAndFlagsBits = String.init(format:_:)(0xD000000000000024, 0x800000010061B6C0, v29);
      v33 = (const char *)v32._object;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(v33);
      v34 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v34 + 16) = v63;
      sub_10043773C((uint64_t)v10);
      v35 = v61;
      v36 = v62;
      v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      if (v37(v10, 1, v61))
      {
        sub_10000D0F0((uint64_t)v10, &qword_1007C4330);
        v38 = 0;
        v39 = 0;
      }
      else
      {
        v40 = v59;
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v59, v10, v35);
        v41 = sub_10000D0F0((uint64_t)v10, &qword_1007C4330);
        v38 = Date.description.getter(v41);
        v39 = v42;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v35);
      }
      v43 = 0x3E6C696E3CLL;
      *(_QWORD *)(v34 + 56) = &type metadata for String;
      *(_QWORD *)(v34 + 64) = v24;
      if (v39)
        v44 = v38;
      else
        v44 = 0x3E6C696E3CLL;
      v45 = 0xE500000000000000;
      if (v39)
        v45 = v39;
      *(_QWORD *)(v34 + 32) = v44;
      *(_QWORD *)(v34 + 40) = v45;
      v46._countAndFlagsBits = String.init(format:_:)(0xD000000000000024, 0x800000010061B6F0, v34);
      v47 = (const char *)v46._object;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(v47);
      v48 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v48 + 16) = v63;
      v49 = (uint64_t)v60;
      sub_10043773C((uint64_t)v60);
      if (v37((char *)v49, 1, v35))
      {
        sub_10000D0F0(v49, &qword_1007C4330);
        *(_QWORD *)(v48 + 56) = &type metadata for String;
        *(_QWORD *)(v48 + 64) = v24;
        v50 = 0xE500000000000000;
      }
      else
      {
        v51 = v62;
        v52 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v59, v49, v35);
        v53 = sub_10000D0F0(v49, &qword_1007C4330);
        v54 = Date.description.getter(v53);
        v50 = v55;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v35);
        *(_QWORD *)(v48 + 56) = &type metadata for String;
        *(_QWORD *)(v48 + 64) = v24;
        if (v50)
          v43 = v54;
        else
          v50 = 0xE500000000000000;
      }
      *(_QWORD *)(v48 + 32) = v43;
      *(_QWORD *)(v48 + 40) = v50;
      v56._countAndFlagsBits = String.init(format:_:)(0xD000000000000024, 0x800000010061B720, v48);
      v57 = (const char *)v56._object;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(v57);
      v58._countAndFlagsBits = 0xD000000000000027;
      v58._object = (void *)0x800000010061B750;
      String.append(_:)(v58);
    }
    return v64;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10043A3C4(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v36 = a1;
  v37 = a2;
  v7 = v4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100221DF8(v15, (uint64_t)qword_1007C0CF0);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    v35 = v10;
    v20 = v7;
    v21 = v8;
    v22 = v12;
    v23 = v11;
    v24 = a3;
    v25 = a4;
    v26 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v36, v19, 2u);
    v27 = v26;
    a4 = v25;
    a3 = v24;
    v11 = v23;
    v12 = v22;
    v8 = v21;
    v7 = v20;
    v10 = v35;
    swift_slowDealloc(v27, -1, -1);
  }

  v28 = swift_allocObject(v37, 24, 7);
  *(_QWORD *)(v28 + 16) = v7;
  aBlock[4] = a3;
  v41 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a4;
  v29 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v7);
  v39 = _swiftEmptyArrayStorage;
  v30 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100008384((uint64_t *)&unk_1007B6410);
  v32 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v31, v32, v8, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release(v41);
}

uint64_t sub_10043A6DC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(uint64_t, uint64_t);
  uint64_t result;
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);
  void (*v29)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v30;
  void *v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v41;
  Class isa;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  _BYTE *v51;

  v3 = v1;
  v47 = a1;
  v4 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v4);
  v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v51 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    if (qword_1007B40C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v48 = v8;
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Persist requested.", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
  ObjectType = swift_getObjectType(v21);
  v24 = *(void (**)(uint64_t, uint64_t))(v22 + 56);
  swift_unknownObjectRetain(v21);
  v24(ObjectType, v22);
  result = swift_unknownObjectRelease(v21);
  if (!v2)
  {
    v26 = v51;
    Date.init()(result);
    v27 = v48;
    v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 16);
    v28(v6, v26, v7);
    v29 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    v29(v6, 0, 1, v7);
    sub_1004449A8((uint64_t)v6);
    if ((v47 & 1) != 0)
    {
      v28(v6, v26, v7);
      v29(v6, 0, 1, v7);
      sub_1004449A8((uint64_t)v6);
    }
    v30 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor), "meDeviceIDSDeviceID");
    if (v30)
    {
      v31 = v30;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v34 = v33;

      v49 = v32;
      v50 = v34;
      v35 = sub_100221E10();
      v36 = StringProtocol.hash.getter(&type metadata for String, v35);
      swift_bridgeObjectRelease(v34);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v40 = 134217984;
        v27 = v48;
        v49 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v40 + 4);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Persist completed for deviceID hash %ld", v40, 0xCu);
        swift_slowDealloc(v40, -1, -1);
      }

      v41 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      isa = Int._bridgeToObjectiveC()().super.super.isa;
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v41, "setObject:forKey:", isa, v43);

      v26 = v51;
    }
    else
    {
      v43 = Logger.logObject.getter(0);
      v44 = static os_log_type_t.error.getter(v43);
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Missing deviceID hash", v45, 2u);
        swift_slowDealloc(v45, -1, -1);
      }
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8))(v26, v7);
  }
  return result;
}

void sub_10043ABB4(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, const char *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  const char *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;

  v45 = a4;
  v44 = a5;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t **)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v18 = type metadata accessor for SDContactChangeHistoryUpdateEvent();
    v19 = swift_dynamicCastClass(a1, v18);
    if (v19)
    {
      v20 = *(void **)(v19 + 16);
      swift_retain(a1);
      v21 = v20;
      v22 = v46;
      sub_10043AFB4(v21, a2, a6, a7);
      if (!v22)
      {

        swift_release(a1);
        swift_beginAccess(a3, v47, 1, 0);
        if (!__OFADD__(*a3, 1))
        {
          ++*a3;
          return;
        }
        goto LABEL_22;
      }
LABEL_8:
      swift_release(a1);

      return;
    }
    v23 = type metadata accessor for SDContactChangeHistoryAddEvent();
    v24 = swift_dynamicCastClass(a1, v23);
    if (v24)
    {
      v25 = *(void **)(v24 + 16);
      swift_retain(a1);
      v21 = v25;
      v26 = v46;
      sub_10043B234(v21, a2, a6, a7);
      if (v26)
        goto LABEL_8;

      swift_release(a1);
      v33 = v45;
      swift_beginAccess(v45, v47, 1, 0);
      v34 = *v33 + 1;
      if (!__OFADD__(*v33, 1))
      {
LABEL_19:
        *v33 = v34;
        return;
      }
      __break(1u);
    }
    else
    {
      v27 = type metadata accessor for SDContactChangeHistoryDeleteEvent();
      v28 = swift_dynamicCastClass(a1, v27);
      if (v28)
      {
        v29 = *(_QWORD *)(v28 + 16);
        v30 = *(const char **)(v28 + 24);
        swift_retain(a1);
        swift_bridgeObjectRetain(v30);
        v31 = v29;
        v32 = v46;
        sub_10043B4A4(v31, v30, a2, a6, a7);
        if (v32)
        {
          swift_release(a1);
          swift_bridgeObjectRelease(v30);
          return;
        }
        swift_bridgeObjectRelease(v30);
        swift_release(a1);
        v33 = v44;
        swift_beginAccess(v44, v47, 1, 0);
        v34 = *v33 + 1;
        if (__OFADD__(*v33, 1))
        {
          __break(1u);
          return;
        }
        goto LABEL_19;
      }
    }
    if (qword_1007B40C0 == -1)
      goto LABEL_16;
    goto LABEL_23;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_16:
  v35 = type metadata accessor for Logger(0);
  sub_100221DF8(v35, (uint64_t)qword_1007C0CF0);
  v36 = swift_retain_n(a1, 2);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v47[0] = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = _typeName(_:qualified:)(*a1, 0);
    v43 = (const char *)v42;
    v48 = sub_100228BD8(v41, v42, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v39 + 4);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unexpected event: %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
}

void sub_10043AFB4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  char v20;
  double v21;
  id v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;

  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v15 = objc_msgSend(a1, "identifier");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  if (a4)
  {
    if (v16 == a3 && v18 == a4)
    {
      swift_bridgeObjectRelease(v18);
      goto LABEL_13;
    }
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a3, a4, 0);
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v18).n128_u64[0];
    if ((v20 & 1) != 0)
    {
LABEL_13:
      if (qword_1007B40C0 == -1)
      {
LABEL_14:
        v26 = type metadata accessor for Logger(0);
        v27 = sub_100221DF8(v26, (uint64_t)qword_1007C0CF0);
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.default.getter(v28);
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Skip meCard change", v30, 2u);
          swift_slowDealloc(v30, -1, -1);
        }

        return;
      }
LABEL_19:
      swift_once(&qword_1007B40C0, sub_1004372E4);
      goto LABEL_14;
    }
  }
  else
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  v22 = objc_msgSend(a1, "identifier", v21);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  sub_10043B4A4(v23, v25, a2, a3, a4);
  swift_bridgeObjectRelease(v25);
  if (!v4)
    sub_10043B234(a1, a2, a3, a4);
}

void sub_10043B234(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  char v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void (*v27)(const char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;

  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v15 = objc_msgSend(a1, "identifier");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  if (a4)
  {
    if (v16 == a3 && v18 == a4)
    {
      swift_bridgeObjectRelease(v18);
      goto LABEL_13;
    }
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a3, a4, 0);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) != 0)
    {
LABEL_13:
      if (qword_1007B40C0 == -1)
      {
LABEL_14:
        v28 = type metadata accessor for Logger(0);
        v29 = sub_100221DF8(v28, (uint64_t)qword_1007C0CF0);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Skip meCard change", v32, 2u);
          swift_slowDealloc(v32, -1, -1);
        }

        return;
      }
LABEL_19:
      swift_once(&qword_1007B40C0, sub_1004372E4);
      goto LABEL_14;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v18);
  }
  sub_10043B6C8(a1);
  if (!v4)
  {
    v22 = v21;
    v23 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB;
    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
    v25 = *(_QWORD *)(v23 + 8);
    ObjectType = swift_getObjectType(v24);
    v27 = *(void (**)(const char *, uint64_t, uint64_t))(v25 + 24);
    swift_unknownObjectRetain(v24);
    v27(v22, ObjectType, v25);
    swift_bridgeObjectRelease(v22);
    swift_unknownObjectRelease(v24);
  }
}

void sub_10043B4A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t, const char *, uint64_t, uint64_t);
  uint64_t v26;

  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_7;
  }
  _s16DaemoniOSLibrary21SDXPCHelperImageCacheC5evict17contactIdentifierySS_tFZ_0(a1, a2);
  if (!a5 || (a1 != a4 || a2 != a5) && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0) & 1) == 0)
  {
    v21 = a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB;
    v22 = *(_QWORD *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
    v23 = *(_QWORD *)(v21 + 8);
    ObjectType = swift_getObjectType(v22);
    v25 = *(void (**)(uint64_t, const char *, uint64_t, uint64_t))(v23 + 32);
    swift_unknownObjectRetain(v22);
    v25(a1, a2, ObjectType, v23);
    swift_unknownObjectRelease(v22);
    return;
  }
  if (qword_1007B40C0 != -1)
    goto LABEL_12;
LABEL_7:
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Skip meCard change", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

}

void sub_10043B6C8(void *a1)
{
  uint64_t v1;
  id v3;
  const char *v4;
  const char *v5;
  const char *v6;
  unint64_t v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  unint64_t v13;
  const char *v14;
  const char *v15;
  id v16;
  void *v17;
  Swift::String v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  const char *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  const char *v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  const char **v46;
  const char *v47;
  const char *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  const char *v53;
  int64_t v54;
  const char *v55;
  const char **v56;
  const char *v57;
  NSString v58;
  id v59;
  const char *v60;
  uint64_t v61;
  const char *v62;
  const char *v63;
  NSString v64;
  id v65;
  uint64_t v66;
  const char *v67;
  const char *v68;
  int v69;
  char v70;
  char v71;
  char v72;
  unint64_t v73;
  double v74;
  unint64_t v75;
  unint64_t v76;
  const char *v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  const char *v82;
  int v83;
  int v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  const char *v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  const char *v103;
  const char *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t DynamicType;
  uint64_t v116;
  double v117;
  uint64_t v118;
  unint64_t v119;
  const char **v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  const char *v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  double v131;
  int64_t v132;
  const char *v133;
  const char **v134;
  uint64_t v135;
  const char *v136;
  const char *v137;
  const char *v138;
  int v139;
  int v140;
  unint64_t v141;
  unint64_t v142;
  const char *v143;
  unint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  const char *v148;
  int v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  unint64_t v155;
  unint64_t v156;
  _QWORD *v157;
  const char *v158;
  uint64_t v159;
  uint64_t v160;
  const char *v161;
  int v162;
  const char *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  const char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  const char *v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int64_t v187;
  char v188;
  unint64_t v189;
  uint64_t (*v190)(uint64_t, const char *, uint64_t, uint64_t, __n128);
  char v191;
  char v192;
  id v193;
  const char *v194;
  const char *v195;
  __int128 v196;
  __int128 v197;
  unsigned __int16 v198;
  unsigned __int8 v199;
  char v200;
  uint64_t v201;
  unint64_t v202;
  _QWORD *v203;

  v3 = objc_msgSend(a1, "identifier");
  v4 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v194 = v4;
  v195 = v6;
  v201 = 44;
  v202 = 0xE100000000000000;
  v7 = sub_100221E10();
  LOBYTE(v3) = StringProtocol.contains<A>(_:)(&v201, &type metadata for String, &type metadata for String, v7, v7);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = objc_msgSend(a1, "emailAddresses", v8);
    v160 = sub_100008384(&qword_1007B9790);
    v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v160);

    if (!((unint64_t)v1 >> 62))
    {
      v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v1 < 0)
    v42 = v1;
  else
    v42 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v42);
  swift_bridgeObjectRelease((const char *)v1);
LABEL_4:
  v193 = a1;
  v180 = v7;
  if (v10)
  {
    v194 = (const char *)_swiftEmptyArrayStorage;
    sub_100229940(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_115;
    }
    v11 = 0;
    v12 = v194;
    v13 = v1 & 0xC000000000000001;
    v14 = (const char *)v1;
    do
    {
      v15 = v12;
      if (v13)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v1);
      else
        v16 = *(id *)(v1 + 8 * v11 + 32);
      v17 = v16;
      v18 = String.init(_:)(objc_msgSend(v16, "value"));

      v12 = v15;
      v194 = v15;
      v19 = *((_QWORD *)v15 + 2);
      v20 = *((_QWORD *)v12 + 3);
      if (v19 >= v20 >> 1)
      {
        sub_100229940(v20 > 1, v19 + 1, 1);
        v12 = v194;
      }
      ++v11;
      *((_QWORD *)v12 + 2) = v19 + 1;
      *(Swift::String *)&v12[16 * v19 + 32] = v18;
      v1 = (uint64_t)v14;
    }
    while (v10 != v11);
    v175 = v12;
    v21 = swift_bridgeObjectRelease(v14).n128_u64[0];
    v7 = v180;
  }
  else
  {
    v21 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
    v175 = (const char *)_swiftEmptyArrayStorage;
  }
  v22 = objc_msgSend(a1, "instantMessageAddresses", *(double *)&v21);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v160);

  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_17;
LABEL_35:
    v41 = swift_bridgeObjectRelease((const char *)v23).n128_u64[0];
    v26 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  if (v23 < 0)
    v43 = v23;
  else
    v43 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v23);
  v24 = _CocoaArrayWrapper.endIndex.getter(v43);
  swift_bridgeObjectRelease((const char *)v23);
  if (!v24)
    goto LABEL_35;
LABEL_17:
  v201 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100229940(0, v24 & ~(v24 >> 63), 0);
  if (v24 < 0)
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  v25 = 0;
  v26 = (_QWORD *)v201;
  v186 = v23 & 0xC000000000000001;
  v27 = (const char *)v23;
  do
  {
    if (v186)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
    else
      v28 = *(id *)(v23 + 8 * v25 + 32);
    v29 = v28;
    v30 = objc_msgSend(v28, "value");
    v31 = objc_msgSend(v30, "username");

    v32 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v194 = v32;
    v195 = v34;
    v35 = String.init<A>(_:)(&v194, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    v37 = v36;

    v201 = (uint64_t)v26;
    v39 = v26[2];
    v38 = v26[3];
    if (v39 >= v38 >> 1)
    {
      sub_100229940(v38 > 1, v39 + 1, 1);
      v26 = (_QWORD *)v201;
    }
    ++v25;
    v26[2] = v39 + 1;
    v40 = &v26[2 * v39];
    v40[4] = v35;
    v40[5] = v37;
    v23 = (uint64_t)v27;
  }
  while (v24 != v25);
  v41 = swift_bridgeObjectRelease(v27).n128_u64[0];
  v7 = v180;
LABEL_36:
  v44 = v26[2];
  v45 = _swiftEmptyArrayStorage;
  if (v44)
  {
    v46 = (const char **)(v26 + 5);
    do
    {
      v47 = *(v46 - 1);
      v48 = *v46;
      v194 = v47;
      v195 = v48;
      v201 = 64;
      v202 = 0xE100000000000000;
      swift_bridgeObjectRetain(v48, *(double *)&v41);
      if ((StringProtocol.contains<A>(_:)(&v201, &type metadata for String, &type metadata for String, v7, v7) & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v45);
        v203 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100229940(0, v45[2] + 1, 1);
          v45 = v203;
        }
        v51 = v45[2];
        v50 = v45[3];
        if (v51 >= v50 >> 1)
        {
          sub_100229940(v50 > 1, v51 + 1, 1);
          v45 = v203;
        }
        v45[2] = v51 + 1;
        v52 = &v45[2 * v51];
        v52[4] = v47;
        v52[5] = v48;
        v7 = v180;
      }
      else
      {
        v41 = swift_bridgeObjectRelease(v48).n128_u64[0];
      }
      v46 += 2;
      --v44;
    }
    while (v44);
  }
  swift_bridgeObjectRelease((const char *)v26, *(double *)&v41);
  v194 = v175;
  sub_100343690((uint64_t)v45);
  v53 = v194;
  v54 = *((_QWORD *)v194 + 2);
  if (v54)
  {
    v201 = (uint64_t)_swiftEmptyArrayStorage;
    sub_100229B1C(0, v54, 0);
    v55 = (const char *)v201;
    v163 = v53;
    v56 = (const char **)(v53 + 40);
    while (1)
    {
      v187 = v54;
      v57 = *v56;
      swift_bridgeObjectRetain(*v56);
      v58 = String._bridgeToObjectiveC()();
      v59 = sub_10019CAC4(v58, 0);

      if (!v59)
        goto LABEL_117;
      v60 = v55;
      v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v63 = v62;

      v64 = String._bridgeToObjectiveC()();
      v65 = sub_10019CAC4(v64, 1);

      if (!v65)
        goto LABEL_118;
      v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      v68 = v67;

      sub_10038ABD0(v61, (uint64_t)v63, (uint64_t)&v194);
      v167 = v195;
      v171 = v194;
      v176 = v197;
      v181 = v196;
      v69 = v198 | (v199 << 16);
      v70 = v200;
      if (v61 == v66 && v63 == v68)
        break;
      v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v66, v68, 0);
      v73 = swift_bridgeObjectRelease(v63).n128_u64[0];
      if ((v72 & 1) == 0)
      {
        sub_10038ABD0(v66, (uint64_t)v68, (uint64_t)&v194);
        v63 = v195;
        v69 = v198 | (v199 << 16);
        v71 = v200;
        goto LABEL_56;
      }
      v71 = v70;
LABEL_57:
      v55 = v60;
      *(_QWORD *)&v74 = swift_bridgeObjectRelease(v57, *(double *)&v73).n128_u64[0];
      swift_bridgeObjectRelease(v68, v74);
      v201 = (uint64_t)v60;
      v76 = *((_QWORD *)v60 + 2);
      v75 = *((_QWORD *)v60 + 3);
      if (v76 >= v75 >> 1)
      {
        sub_100229B1C(v75 > 1, v76 + 1, 1);
        v55 = (const char *)v201;
      }
      v56 += 2;
      *((_QWORD *)v55 + 2) = v76 + 1;
      v77 = &v55[56 * v76];
      *((_QWORD *)v77 + 4) = v171;
      *((_QWORD *)v77 + 5) = v167;
      *((_OWORD *)v77 + 3) = v181;
      *((_OWORD *)v77 + 4) = v176;
      *((_BYTE *)v77 + 82) = BYTE2(v69);
      *((_WORD *)v77 + 40) = v69;
      *((_BYTE *)v77 + 83) = v71;
      v54 = v187 - 1;
      if (v187 == 1)
      {
        v78 = swift_bridgeObjectRelease(v163).n128_u64[0];
        goto LABEL_62;
      }
    }
    v68 = v63;
    v71 = v200;
LABEL_56:
    v73 = swift_bridgeObjectRelease(v57).n128_u64[0];
    v57 = v63;
    goto LABEL_57;
  }
  v78 = swift_bridgeObjectRelease(v194).n128_u64[0];
  v55 = (const char *)_swiftEmptyArrayStorage;
LABEL_62:
  v79 = *((_QWORD *)v55 + 2);
  v80 = _swiftEmptyArrayStorage;
  v158 = v55;
  if (v79)
  {
    v81 = v55 + 48;
    do
    {
      v82 = (const char *)*(v81 - 1);
      v182 = *(v81 - 2);
      v172 = v81[1];
      v177 = *v81;
      v164 = v81[3];
      v168 = v81[2];
      v83 = *((unsigned __int8 *)v81 + 34);
      v84 = *((unsigned __int16 *)v81 + 16);
      v188 = *((_BYTE *)v81 + 35);
      v85 = objc_msgSend(v193, "identifier", swift_bridgeObjectRetain(v82, *(double *)&v78).n128_f64[0]);
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
      v88 = v87;

      if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) != 0)
        v89 = v80;
      else
        v89 = sub_100228958(0, v80[2] + 1, 1, (uint64_t)v80);
      v91 = v89[2];
      v90 = v89[3];
      if (v91 >= v90 >> 1)
        v89 = sub_100228958((_QWORD *)(v90 > 1), v91 + 1, 1, (uint64_t)v89);
      v89[2] = v91 + 1;
      v92 = &v89[9 * v91];
      v92[4] = v86;
      v92[5] = v88;
      v92[6] = v182;
      v92[7] = v82;
      v92[8] = v177;
      v92[9] = v172;
      v92[10] = v168;
      v92[11] = v164;
      *((_BYTE *)v92 + 98) = (v84 | (v83 << 16)) >> 16;
      *((_WORD *)v92 + 48) = v84;
      *((_BYTE *)v92 + 99) = v188;
      v81 += 7;
      --v79;
      v80 = v89;
    }
    while (v79);
  }
  v165 = v80;
  v93 = objc_msgSend(v193, "phoneNumbers", swift_bridgeObjectRelease(v158, *(double *)&v78).n128_f64[0]);
  v94 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v93, v160);

  if (!((unint64_t)v94 >> 62))
  {
    v95 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v95)
      goto LABEL_73;
LABEL_86:
    swift_bridgeObjectRelease((const char *)v94);
    v97 = _swiftEmptyArrayStorage;
    goto LABEL_87;
  }
  if (v94 < 0)
    v112 = v94;
  else
    v112 = v94 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v94);
  v95 = _CocoaArrayWrapper.endIndex.getter(v112);
  swift_bridgeObjectRelease((const char *)v94);
  if (!v95)
    goto LABEL_86;
LABEL_73:
  v201 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100229940(0, v95 & ~(v95 >> 63), 0);
  if ((v95 & 0x8000000000000000) == 0)
  {
    v96 = 0;
    v97 = (_QWORD *)v201;
    v189 = v94 & 0xC000000000000001;
    v98 = (const char *)v94;
    do
    {
      if (v189)
        v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v96, v94);
      else
        v99 = *(id *)(v94 + 8 * v96 + 32);
      v100 = v99;
      v101 = objc_msgSend(v99, "value");
      v102 = objc_msgSend(v101, "stringValue");

      v103 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
      v105 = v104;

      v194 = v103;
      v195 = v105;
      v106 = String.init<A>(_:)(&v194, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v108 = v107;

      v201 = (uint64_t)v97;
      v110 = v97[2];
      v109 = v97[3];
      if (v110 >= v109 >> 1)
      {
        sub_100229940(v109 > 1, v110 + 1, 1);
        v97 = (_QWORD *)v201;
      }
      ++v96;
      v97[2] = v110 + 1;
      v111 = &v97[2 * v110];
      v111[4] = v106;
      v111[5] = v108;
      v94 = (uint64_t)v98;
    }
    while (v95 != v96);
    swift_bridgeObjectRelease(v98);
LABEL_87:
    sub_100244418(v159 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore, (uint64_t)&v194);
    v113 = *((_QWORD *)&v196 + 1);
    v114 = sub_10023A834(&v194, *((uint64_t *)&v196 + 1));
    DynamicType = swift_getDynamicType(v114, v113, 1);
    v116 = v197;
    sub_10022E75C(&v194);
    v118 = v97[2];
    if (v118)
    {
      v190 = *(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, __n128))(v116 + 40);
      v119 = swift_bridgeObjectRetain((const char *)v97).n128_u64[0];
      v120 = (const char **)(v97 + 5);
      v121 = _swiftEmptyArrayStorage;
      v183 = v116;
      do
      {
        v123 = (uint64_t)*(v120 - 1);
        v124 = *v120;
        v125 = swift_bridgeObjectRetain(*v120, *(double *)&v119);
        v126 = v190(v123, v124, DynamicType, v116, v125);
        v128 = v127;
        v119 = swift_bridgeObjectRelease(v124).n128_u64[0];
        if (v128)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v121) & 1) == 0)
            v121 = sub_100227A68(0, v121[2] + 1, 1, v121);
          v130 = v121[2];
          v129 = v121[3];
          if (v130 >= v129 >> 1)
            v121 = sub_100227A68((_QWORD *)(v129 > 1), v130 + 1, 1, v121);
          v121[2] = v130 + 1;
          v122 = &v121[2 * v130];
          v122[4] = v126;
          v122[5] = v128;
          v116 = v183;
        }
        v120 += 2;
        --v118;
      }
      while (v118);
      *(_QWORD *)&v117 = swift_bridgeObjectRelease((const char *)v97).n128_u64[0];
    }
    else
    {
      v121 = _swiftEmptyArrayStorage;
    }
    *(_QWORD *)&v131 = swift_bridgeObjectRelease((const char *)v97, v117).n128_u64[0];
    v132 = v121[2];
    if (v132)
    {
      v201 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100229B1C(0, v132, 0);
      v133 = (const char *)v201;
      v161 = (const char *)v121;
      v134 = (const char **)(v121 + 5);
      do
      {
        v135 = (uint64_t)*(v134 - 1);
        v136 = *v134;
        swift_bridgeObjectRetain(*v134);
        sub_10038ABD0(v135, (uint64_t)v136, (uint64_t)&v194);
        v137 = v194;
        v138 = v195;
        v184 = v196;
        v173 = v197;
        v178 = *((_QWORD *)&v196 + 1);
        v169 = *((_QWORD *)&v197 + 1);
        v139 = v199;
        v140 = v198;
        v191 = v200;
        swift_bridgeObjectRelease(v136);
        v201 = (uint64_t)v133;
        v142 = *((_QWORD *)v133 + 2);
        v141 = *((_QWORD *)v133 + 3);
        if (v142 >= v141 >> 1)
        {
          sub_100229B1C(v141 > 1, v142 + 1, 1);
          v133 = (const char *)v201;
        }
        v134 += 2;
        *((_QWORD *)v133 + 2) = v142 + 1;
        v143 = &v133[56 * v142];
        *((_QWORD *)v143 + 4) = v137;
        *((_QWORD *)v143 + 5) = v138;
        *((_QWORD *)v143 + 6) = v184;
        *((_QWORD *)v143 + 7) = v178;
        *((_QWORD *)v143 + 8) = v173;
        *((_QWORD *)v143 + 9) = v169;
        *((_BYTE *)v143 + 82) = (v140 | (v139 << 16)) >> 16;
        *((_WORD *)v143 + 40) = v140;
        *((_BYTE *)v143 + 83) = v191;
        --v132;
      }
      while (v132);
      v144 = swift_bridgeObjectRelease(v161).n128_u64[0];
      v145 = *((_QWORD *)v133 + 2);
      if (!v145)
        goto LABEL_113;
    }
    else
    {
      v144 = swift_bridgeObjectRelease((const char *)v121, v131).n128_u64[0];
      v133 = (const char *)_swiftEmptyArrayStorage;
      v145 = _swiftEmptyArrayStorage[2];
      if (!v145)
      {
LABEL_113:
        swift_bridgeObjectRelease(v133);
        return;
      }
    }
    v146 = v133 + 48;
    v147 = (uint64_t)v165;
    do
    {
      v148 = (const char *)*(v146 - 1);
      v185 = *(v146 - 2);
      v174 = v146[1];
      v179 = *v146;
      v166 = v146[3];
      v170 = v146[2];
      v162 = *((unsigned __int8 *)v146 + 34);
      v149 = *((unsigned __int16 *)v146 + 16);
      v192 = *((_BYTE *)v146 + 35);
      v150 = objc_msgSend(v193, "identifier", swift_bridgeObjectRetain(v148, *(double *)&v144).n128_f64[0]);
      v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
      v153 = v152;

      if ((swift_isUniquelyReferenced_nonNull_native(v147) & 1) != 0)
        v154 = (_QWORD *)v147;
      else
        v154 = sub_100228958(0, *(_QWORD *)(v147 + 16) + 1, 1, v147);
      v156 = v154[2];
      v155 = v154[3];
      if (v156 >= v155 >> 1)
        v154 = sub_100228958((_QWORD *)(v155 > 1), v156 + 1, 1, (uint64_t)v154);
      v154[2] = v156 + 1;
      v157 = &v154[9 * v156];
      v157[4] = v151;
      v157[5] = v153;
      v157[6] = v185;
      v157[7] = v148;
      v157[8] = v179;
      v157[9] = v174;
      v157[10] = v170;
      v157[11] = v166;
      *((_BYTE *)v157 + 98) = (v149 | (v162 << 16)) >> 16;
      *((_WORD *)v157 + 48) = v149;
      *((_BYTE *)v157 + 99) = v192;
      v146 += 7;
      --v145;
      v147 = (uint64_t)v154;
    }
    while (v145);
    goto LABEL_113;
  }
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
}

uint64_t sub_10043C4C0(uint64_t a1)
{
  double v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  double v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  const char *v58;
  __n128 v59;
  void (*v60)(char *, uint64_t, __n128);
  char *v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  __n128 v65;
  uint64_t result;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v4 = type metadata accessor for Calendar.Component(0);
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar(0);
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007C4330);
  v11 = __chkstk_darwin(v10);
  v77 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v69 - v13;
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v73 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v71 = (char *)&v69 - v20;
  v21 = __chkstk_darwin(v19);
  v74 = (char *)&v69 - v22;
  v23 = __chkstk_darwin(v21);
  v72 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  v80 = (char *)&v69 - v25;
  v26 = type metadata accessor for DispatchPredicate(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (uint64_t *)((char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v29 = v30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, enum case for DispatchPredicate.onQueue(_:), v26);
  v31 = v30;
  LOBYTE(v30) = _dispatchPreconditionTest(_:)(v29);
  (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_8;
  }
  sub_10043773C((uint64_t)v14);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v32(v14, 1, v15) == 1)
  {
    v33 = (uint64_t)v14;
LABEL_6:
    sub_10000D0F0(v33, &qword_1007C4330);
    v39 = 0;
    return v39 & 1;
  }
  v26 = v16;
  v34 = v80;
  v70 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
  v35 = v70(v80, v14, v15);
  static Calendar.current.getter(v35);
  v37 = v78;
  v36 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v6, enum case for Calendar.Component.day(_:), v79);
  v38 = v77;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v6, 14, v34, 0);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v36);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v76);
  v16 = v15;
  if (v32(v38, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v15);
    v33 = (uint64_t)v38;
    goto LABEL_6;
  }
  v9 = v34;
  v14 = v72;
  v40 = v70(v72, v38, v15);
  v41 = v74;
  Date.init()(v40);
  v42 = sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LODWORD(v79) = dispatch thunk of static Comparable.< infix(_:_:)(v41, v14, v15, v42);
  v1 = Date.timeIntervalSinceReferenceDate.getter();
  v2 = Date.timeIntervalSinceReferenceDate.getter();
  if (qword_1007B40C0 != -1)
    goto LABEL_17;
LABEL_8:
  v43 = type metadata accessor for Logger(0);
  sub_100221DF8(v43, (uint64_t)qword_1007C0CF0);
  v44 = v26;
  v45 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v46 = v71;
  v45(v71, v14, v16);
  v47 = v73;
  v48 = v9;
  v49 = ((uint64_t (*)(char *, char *, uint64_t))v45)(v73, v9, v16);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter(v50);
  if (!os_log_type_enabled(v50, v51))
  {

    v68 = *(void (**)(char *, uint64_t))(v44 + 8);
    v68(v47, v16);
    v68(v46, v16);
    v68(v74, v16);
    v68(v14, v16);
    v68(v48, v16);
    goto LABEL_14;
  }
  v52 = v1 - v2;
  v53 = v46;
  v54 = swift_slowAlloc(32, -1);
  v78 = swift_slowAlloc(64, -1);
  v82 = v78;
  *(_DWORD *)v54 = 136315650;
  v55 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v56 = dispatch thunk of CustomStringConvertible.description.getter(v16, v55);
  v58 = (const char *)v57;
  v81 = sub_100228BD8(v56, v57, &v82);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 4);
  v59 = swift_bridgeObjectRelease(v58);
  v60 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
  v60(v53, v16, v59);
  *(_WORD *)(v54 + 12) = 2080;
  v61 = v73;
  v62 = dispatch thunk of CustomStringConvertible.description.getter(v16, v55);
  v64 = (const char *)v63;
  v81 = sub_100228BD8(v62, v63, &v82);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 14);
  v65 = swift_bridgeObjectRelease(v64);
  result = ((uint64_t (*)(char *, uint64_t, __n128))v60)(v61, v16, v65);
  *(_WORD *)(v54 + 22) = 2048;
  if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v52 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v52 < 9.22337204e18)
  {
    v81 = (uint64_t)v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 24);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Next hash store rebuild: %s, last: %s, secs to next rebuild: %ld", (uint8_t *)v54, 0x20u);
    v67 = v78;
    swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v54, -1, -1);

    ((void (*)(char *, uint64_t))v60)(v74, v16);
    ((void (*)(char *, uint64_t))v60)(v72, v16);
    ((void (*)(char *, uint64_t))v60)(v80, v16);
LABEL_14:
    v39 = v79 ^ 1;
    return v39 & 1;
  }
LABEL_20:
  __break(1u);
  return result;
}

BOOL sub_10043CB88(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_100444AE0();
  if ((v3 & 1) != 0
    || (v4 = v2,
        (v5 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context), "meDeviceIDSDeviceID")) == 0))
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100221DF8(v18, (uint64_t)qword_1007C0CF0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Last deviceID hash not populated", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return 0;
  }
  else
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v23 = v7;
    v10 = sub_100221E10();
    v11 = StringProtocol.hash.getter(&type metadata for String, v10);
    swift_bridgeObjectRelease(v9, v23, v9);
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C0CF0);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      *(_DWORD *)v16 = 134218240;
      v23 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 4);
      *(_WORD *)(v16 + 12) = 2048;
      v23 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 14);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Comparing deviceID hashes %ld - %ld", (uint8_t *)v16, 0x16u);
      swift_slowDealloc(v16, -1, -1);
    }

    return v4 == v11;
  }
}

uint64_t sub_10043CDD8(int a1, _BYTE *a2)
{
  char v2;
  BOOL v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_8;
  }
  LODWORD(v9) = sub_10043C4C0((uint64_t)a2);
  v12 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
  v13 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8];
  ObjectType = swift_getObjectType(v12);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
  swift_unknownObjectRetain(v12);
  LOBYTE(v13) = v15(ObjectType, v13);
  swift_unknownObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
    v2 = 1;
    v3 = 1;
  }
  else
  {
    v3 = !sub_10043CB88((uint64_t)a2);
    v2 = 1;
    if (((a1 | v9) & 1) == 0 && !v3)
    {
      v3 = 0;
      LOBYTE(a1) = 0;
      v2 = a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] ^ 1;
    }
  }
  if (qword_1007B40C0 != -1)
    goto LABEL_13;
LABEL_8:
  v16 = type metadata accessor for Logger(0);
  sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
  v17 = a2;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(32, -1);
    *(_DWORD *)v20 = 67110144;
    v23 = v2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 4);
    *(_WORD *)(v20 + 8) = 1024;
    v23 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 10);
    *(_WORD *)(v20 + 14) = 1024;
    v23 = v9 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 16);
    *(_WORD *)(v20 + 20) = 1024;
    v23 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 22);
    *(_WORD *)(v20 + 26) = 1024;
    v23 = (*((_BYTE *)&v17->isa
           + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 28);

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Should regenerate database: %{BOOL}d (forceRebuild: %{BOOL}d rebuild due: %{BOOL}d storeRebuildRequired: %{BOOL}d hashesFailedToUpdate: %{BOOL}d", (uint8_t *)v20, 0x20u);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {

    v18 = v17;
  }

  return v2 & 1;
}

void sub_10043D0CC(char *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, const char *a7)
{
  uint64_t v7;
  char *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)();
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  void *v51;
  unint64_t v52;
  id v53;
  Class v54;
  NSString v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  void (*v68)(uint64_t, uint64_t);
  char *v69;
  char *v70;
  void *v71;
  void (*v72)(void *, char *);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(uint64_t, char *);
  uint64_t v90;
  void *v91;
  id v92;
  Class isa;
  NSString v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  char **v100;
  uint64_t v101;
  unint64_t v102;
  const char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  const char *v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)();
  uint64_t v120;
  char v121;

  v107 = a6;
  v108 = a7;
  v109 = a4;
  v110 = a5;
  v111 = a3;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v17 = swift_allocObject(&unk_100728B70, 24, 7);
    *(_QWORD *)(v17 + 16) = a1;
    v119 = sub_100444D50;
    v120 = v17;
    v18 = qword_1007B40C0;
    v8 = a1;
    if (v18 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B40C0, sub_1004372E4);
LABEL_3:
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100221DF8(v19, (uint64_t)qword_1007C0CF0);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Start updating hashes.", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = sub_10043CDD8(a2 & 1, v8);
  v121 = v24 & 1;
  if ((v24 & 1) != 0)
  {
    v25 = 0;
    v26 = 0xF000000000000000;
  }
  else
  {
    v24 = sub_100444888();
    v25 = v24;
    v26 = v27;
    if (v27 >> 60 != 15)
      goto LABEL_11;
  }
  v28 = Logger.logObject.getter(v24);
  v29 = static os_log_type_t.default.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "History token is nil. Will regenerate hash database", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

LABEL_11:
  sub_10023A834(&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore], *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore + 24]);
  v31 = sub_10049247C(v25, v26);
  if (v7)
  {
    sub_100225AA0(v25, v26);
    sub_1002845F4((uint64_t)v119, v120);

    return;
  }
  v34 = (const char *)v31;
  v105 = v32;
  v106 = v20;
  v104 = v33;
  v35 = (uint64_t)sub_100436ED0(1000, v31);
  v36 = v35;
  v37 = *(_QWORD *)(v35 + 16);
  if (v37)
  {
    if ((v121 & 1) != 0)
    {
      v38 = v119;
      if (v119)
      {
        v39 = v120;
        v40 = swift_retain(v120);
        ((void (*)(uint64_t))v38)(v40);
        sub_1002845F4((uint64_t)v38, v39);
        v35 = sub_1002845F4((uint64_t)v38, v39);
      }
      v119 = 0;
      v120 = 0;
    }
    v103 = v34;
    v101 = v25;
    v102 = v26;
    v61 = Logger.logObject.getter(v35);
    v62 = static os_log_type_t.default.getter(v61);
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Load hash db from disk", v63, 2u);
      swift_slowDealloc(v63, -1, -1);
    }

    v64 = (char **)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    v65 = *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    v66 = *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8];
    ObjectType = swift_getObjectType(v65);
    v68 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    swift_unknownObjectRetain(v65);
    v68(ObjectType, v66);

    swift_unknownObjectRelease(v65);
    v69 = *v64;
    v70 = v64[1];
    v71 = (void *)swift_getObjectType(*v64);
    v72 = (void (*)(void *, char *))*((_QWORD *)v70 + 5);
    swift_unknownObjectRetain(v69);
    v72(v71, v70);
    v100 = v64;
    swift_unknownObjectRelease(v69);
    v73 = 0;
    v74 = (uint64_t)v103;
    do
    {
      v75 = v73 + 1;
      if (__OFADD__(v73, 1))
      {
        __break(1u);
        goto LABEL_42;
      }
      v69 = *(char **)(v36 + 8 * v73 + 32);
      swift_bridgeObjectRetain(v69);
      v71 = objc_autoreleasePoolPush();
      sub_10043DE5C((unint64_t)v69, (uint64_t *)&v119, &v121, (uint64_t)v8, v111, v109, v110, v107, v108);
      objc_autoreleasePoolPop(v71);
      *(_QWORD *)&v76 = swift_bridgeObjectRelease(v69).n128_u64[0];
      ++v73;
    }
    while (v75 != v37);
    *(_QWORD *)&v77 = swift_bridgeObjectRelease((const char *)v36, v76).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v74, v77);
    v69 = (char *)Logger.logObject.getter(v78);
    LOBYTE(v71) = static os_log_type_t.default.getter(v69);
    if (os_log_type_enabled((os_log_t)v69, (os_log_type_t)v71))
    {
      v36 = swift_slowAlloc(42, -1);
      *(_DWORD *)v36 = 134218752;
      if (!((unint64_t)v74 >> 62))
      {
        v79 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_31:
        v80 = v101;
        swift_bridgeObjectRelease((const char *)v74);
        v117 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v36 + 4);
        swift_bridgeObjectRelease((const char *)v74);
        *(_WORD *)(v36 + 12) = 2048;
        v81 = v109;
        swift_beginAccess(v109, &v117, 0, 0);
        v115 = *v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v36 + 14);
        *(_WORD *)(v36 + 22) = 2048;
        v82 = v110;
        swift_beginAccess(v110, &v115, 0, 0);
        v113 = *v82;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v36 + 24);
        *(_WORD *)(v36 + 32) = 2048;
        v83 = v111;
        swift_beginAccess(v111, &v113, 0, 0);
        v112 = *v83;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113, v36 + 34);
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v69, (os_log_type_t)v71, "Processed %ld contact change events (add=%ld,delete=%ld,update=%ld)", (uint8_t *)v36, 0x2Au);
        swift_slowDealloc(v36, -1, -1);

        goto LABEL_36;
      }
LABEL_42:
      if (v74 < 0)
        v98 = v74;
      else
        v98 = v74 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v74);
      v79 = _CocoaArrayWrapper.endIndex.getter(v98);
      swift_bridgeObjectRelease((const char *)v74);
      goto LABEL_31;
    }

    swift_bridgeObjectRelease_n(v74, 2);
    v80 = v101;
LABEL_36:
    v86 = *v100;
    v87 = v100[1];
    v88 = swift_getObjectType(*v100);
    v89 = (void (*)(uint64_t, char *))*((_QWORD *)v87 + 6);
    swift_unknownObjectRetain(v86);
    v89(v88, v87);
    v90 = v105;
    swift_unknownObjectRelease(v86);
    v91 = (void *)objc_opt_self(NSUserDefaults);
    v52 = v104;
    sub_10022E4A8(v90, v104);
    v92 = objc_msgSend(v91, "standardUserDefaults");
    sub_10022E4A8(v90, v52);
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AB4(v90, v52);
    v94 = String._bridgeToObjectiveC()();
    objc_msgSend(v92, "setObject:forKey:", isa, v94);
    sub_100225AB4(v90, v52);

    v57 = Logger.logObject.getter(v95);
    v96 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v57, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v97 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v96, "Updating hashes completed.", v97, 2u);
      swift_slowDealloc(v97, -1, -1);
      sub_100225AA0(v80, v102);

      v60 = v90;
      goto LABEL_21;
    }
    sub_100225AB4(v90, v52);
    v84 = v80;
    v85 = v102;
LABEL_33:
    sub_100225AA0(v84, v85);

    goto LABEL_34;
  }

  *(_QWORD *)&v41 = swift_bridgeObjectRelease((const char *)v36).n128_u64[0];
  swift_bridgeObjectRelease(v34, v41);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter(v43);
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Load hash db from disk", v45, 2u);
    swift_slowDealloc(v45, -1, -1);
  }

  v46 = *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
  v47 = *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8];
  v48 = swift_getObjectType(v46);
  v49 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  swift_unknownObjectRetain(v46);
  v49(v48, v47);
  v50 = v105;

  swift_unknownObjectRelease(v46);
  v51 = (void *)objc_opt_self(NSUserDefaults);
  v52 = v104;
  sub_10022E4A8(v50, v104);
  v53 = objc_msgSend(v51, "standardUserDefaults");
  sub_10022E4A8(v50, v52);
  v54 = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(v50, v52);
  v55 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "setObject:forKey:", v54, v55);
  sub_100225AB4(v50, v52);

  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.default.getter(v57);
  if (!os_log_type_enabled(v57, v58))
  {
    sub_100225AB4(v50, v52);
    v84 = v25;
    v85 = v26;
    goto LABEL_33;
  }
  v59 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v59 = 0;
  _os_log_impl((void *)&_mh_execute_header, v57, v58, "No hash updates needed.", v59, 2u);
  swift_slowDealloc(v59, -1, -1);
  sub_100225AA0(v25, v26);

  v60 = v50;
LABEL_21:
  sub_100225AB4(v60, v52);
LABEL_34:
  sub_1002845F4((uint64_t)v119, v120);
}

void sub_10043DC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
  ObjectType = swift_getObjectType(v3);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 64);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  if (!v1)
  {
    v7 = type metadata accessor for SDAirDropHashStoreCDB();
    v8 = swift_allocObject(v7, 50, 7);
    v9 = sub_100221EDC(0, (unint64_t *)&qword_1007B42F0, NSData_ptr);
    v10 = objc_allocWithZone((Class)CUKeyValueStoreReader);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
    *(_QWORD *)(v8 + 16) = objc_msgSend(v10, "initWithKeyType:valueType:", ObjCClassFromMetadata, ObjCClassFromMetadata);
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v8 + 40) = &_swiftEmptySetSingleton;
    *(_WORD *)(v8 + 48) = 0;
    v12 = *v2;
    *v2 = v8;
    v2[1] = (uint64_t)&protocol witness table for SDAirDropHashStoreCDB;
    swift_retain(v8);
    swift_unknownObjectRelease(v12);
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007C0CF0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HashManager: database set.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    swift_release(v8);

  }
}

void sub_10043DE5C(unint64_t a1, uint64_t *a2, _BYTE *a3, uint64_t a4, _QWORD *a5, uint64_t *a6, uint64_t *a7, uint64_t a8, const char *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  const char *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint8_t *v62;
  uint64_t v63;
  _BYTE *v64;
  const char *v69;
  unint64_t v70;
  uint64_t v72;

  v10 = v9;
  v13 = a1;
  if (a1 >> 62)
    goto LABEL_35;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)&v15 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
  v64 = a3;
  while (v14)
  {
    v70 = v13 & 0xC000000000000001;
    v16 = 4;
    v63 = a4;
    v69 = (const char *)v13;
    while (1)
    {
      v17 = v16 - 4;
      if (!v70)
        break;
      v18 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v13);
      v19 = v16 - 3;
      if (__OFADD__(v17, 1))
        goto LABEL_34;
LABEL_11:
      v20 = type metadata accessor for SDContactChangeHistoryDropEverythingEvent();
      if (swift_dynamicCastClass(v18, v20))
      {
        if (qword_1007B40C0 != -1)
          swift_once(&qword_1007B40C0, sub_1004372E4);
        v21 = type metadata accessor for Logger(0);
        v22 = sub_100221DF8(v21, (uint64_t)qword_1007C0CF0);
        v23 = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.default.getter(v23);
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Change event is DropEverything. Request regenerate entire db.", v25, 2u);
          v26 = v25;
          v13 = (uint64_t)v69;
          swift_slowDealloc(v26, -1, -1);
        }

        v27 = (void (*)(uint64_t))*a2;
        if (*a2)
        {
          v28 = a2[1];
          v29 = swift_retain(v28);
          v27(v29);
          if (v10)
          {
            swift_bridgeObjectRelease((const char *)v13);
            sub_1002845F4((uint64_t)v27, v28);
            swift_release(v18);
            return;
          }
          swift_release(v18);
          sub_1002845F4((uint64_t)v27, v28);
        }
        else
        {
          swift_release(v18);
        }
        v43 = *a2;
        v44 = a2[1];
        *a2 = 0;
        a2[1] = 0;
        sub_1002845F4(v43, v44);
        *a3 = 1;
      }
      else
      {
        if (qword_1007B40C0 != -1)
          swift_once(&qword_1007B40C0, sub_1004372E4);
        v30 = type metadata accessor for Logger(0);
        sub_100221DF8(v30, (uint64_t)qword_1007C0CF0);
        v31 = swift_retain_n(v18, 2);
        v32 = Logger.logObject.getter(v31);
        v33 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = swift_slowAlloc(12, -1);
          v35 = v10;
          v36 = swift_slowAlloc(32, -1);
          v72 = v36;
          *(_DWORD *)v34 = 136315138;
          v37 = _typeName(_:qualified:)(*v18, 0);
          v39 = (const char *)v38;
          *(_QWORD *)(v34 + 4) = sub_100228BD8(v37, v38, &v72);
          swift_release_n(v18, 2);
          v40 = v39;
          a3 = v64;
          swift_bridgeObjectRelease(v40);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Processing event: %s", (uint8_t *)v34, 0xCu);
          swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
          v41 = v36;
          v10 = v35;
          swift_slowDealloc(v41, -1, -1);
          v42 = v34;
          a4 = v63;
          swift_slowDealloc(v42, -1, -1);

        }
        else
        {

          swift_release_n(v18, 2);
        }
        v13 = (uint64_t)v69;
        if (*a3 != 1
          || (v45 = type metadata accessor for SDContactChangeHistoryAddEvent(), swift_dynamicCastClass(v18, v45)))
        {
          sub_10043ABB4(v18, a4, a5, a6, a7, a8, a9);
          swift_release(v18);
          if (v10)
          {
            swift_bridgeObjectRelease(v69);
            return;
          }
        }
        else
        {
          v46 = swift_retain_n(v18, 2);
          v47 = Logger.logObject.getter(v46);
          v48 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v47, v48))
          {
            v49 = swift_slowAlloc(12, -1);
            v50 = swift_slowAlloc(32, -1);
            v72 = v50;
            *(_DWORD *)v49 = 136315138;
            v51 = _typeName(_:qualified:)(*v18, 0);
            v53 = (const char *)v52;
            *(_QWORD *)(v49 + 4) = sub_100228BD8(v51, v52, &v72);
            swift_release_n(v18, 2);
            v54 = v53;
            a3 = v64;
            swift_bridgeObjectRelease(v54);
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Unexpected change event %s when regenerating database", (uint8_t *)v49, 0xCu);
            swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
            v55 = v50;
            a4 = v63;
            swift_slowDealloc(v55, -1, -1);
            swift_slowDealloc(v49, -1, -1);
            swift_release(v18);

          }
          else
          {

            swift_release_n(v18, 3);
          }
          v13 = (uint64_t)v69;
        }
      }
      ++v16;
      if (v19 == v14)
        goto LABEL_39;
    }
    v18 = *(_QWORD **)(v13 + 8 * v16);
    swift_retain(v18);
    v19 = v16 - 3;
    if (!__OFADD__(v17, 1))
      goto LABEL_11;
LABEL_34:
    __break(1u);
LABEL_35:
    if (v13 < 0)
      v56 = v13;
    else
      v56 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v56);
    v64 = a3;
  }
LABEL_39:
  swift_bridgeObjectRelease((const char *)v13, v15);
  if (qword_1007B40C0 != -1)
    swift_once(&qword_1007B40C0, sub_1004372E4);
  v57 = type metadata accessor for Logger(0);
  v58 = sub_100221DF8(v57, (uint64_t)qword_1007C0CF0);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.default.getter(v59);
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "Persisting change event batch", v61, 2u);
    v62 = v61;
    a3 = v64;
    swift_slowDealloc(v62, -1, -1);
  }

  sub_10043A6DC(*a3);
}

_BYTE *sub_10043E460(_QWORD *a1, const char *a2)
{
  _BYTE *v2;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, const char *);
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  const char **v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  unint64_t v38;
  const char *v39;
  const char *v41;
  double v42;
  Swift::Int v43;
  Swift::Int v44;
  const char *v45;
  double v46;
  double v47;
  const char *v48;
  double v49;
  double v50;
  double v51;
  const char *v52;
  void *v53;
  void **v54;
  _QWORD *v55;
  _QWORD *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t ObjectType;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  int64_t v77;
  _QWORD *v78;
  const char *v79;
  const char **v80;
  uint64_t v81;
  const char *v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  double v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  const char *v94;
  double v95;
  double v96;
  uint64_t v97;
  id v98;
  const char *v99;
  _QWORD *v100;
  const char *v101;
  _BYTE *v102;
  _QWORD v103[2];
  _QWORD *v104;
  const char *v105;
  uint64_t v106;

  v101 = a2;
  v4 = (const char *)type metadata accessor for DispatchPredicate(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = v2;
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, const char *))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(char **)(v5 + 8);
  ((void (*)(_QWORD *, const char *))v13)(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  *v7 = v11;
  v10(v7, v9, v4);
  v14 = v11;
  v15 = _dispatchPreconditionTest(_:)(v7);
  ((void (*)(_QWORD *, const char *))v13)(v7, v4);
  if ((v15 & 1) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v102[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
  {
    v30 = sub_100444E44();
    v31 = swift_allocError(&type metadata for SDAirDropHashError, v30, 0, 0);
    *v32 = 0;
    swift_willThrow(v31);
    return v2;
  }
  v104 = a1;
  v105 = v101;
  v103[0] = 44;
  v103[1] = 0xE100000000000000;
  v16 = sub_100221E10();
  v17 = StringProtocol.components<A>(separatedBy:)(v103, &type metadata for String, &type metadata for String, v16, v16);
  v18 = v17;
  v19 = *(char **)(v17 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v19)
  {
    v20 = (const char **)(v17 + 40);
    v4 = (const char *)_swiftEmptyArrayStorage;
    do
    {
      v22 = (uint64_t)*(v20 - 1);
      v23 = *v20;
      v24 = swift_bridgeObjectRetain(*v20);
      v25 = Data.init(base64Encoded:options:)(v22, v23, 0, v24);
      v27 = v26;
      swift_bridgeObjectRelease(v23);
      if (v27 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = (const char *)sub_10022870C(0, *((_QWORD *)v4 + 2) + 1, 1, (uint64_t)v4);
        v29 = *((_QWORD *)v4 + 2);
        v28 = *((_QWORD *)v4 + 3);
        if (v29 >= v28 >> 1)
          v4 = (const char *)sub_10022870C((_QWORD *)(v28 > 1), v29 + 1, 1, (uint64_t)v4);
        *((_QWORD *)v4 + 2) = v29 + 1;
        v21 = &v4[16 * v29];
        *((_QWORD *)v21 + 4) = v25;
        *((_QWORD *)v21 + 5) = v27;
      }
      v20 += 2;
      --v19;
    }
    while (v19);
    v19 = *(char **)(v18 + 16);
  }
  else
  {
    v4 = (const char *)_swiftEmptyArrayStorage;
  }
  v13 = (char *)*((_QWORD *)v4 + 2);
  swift_bridgeObjectRelease((const char *)v18);
  v12 = v106;
  if (v13 != v19)
  {
    if (qword_1007B40C0 == -1)
    {
LABEL_18:
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100221DF8(v33, (uint64_t)qword_1007C0CF0);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Decoded base64 count test failed", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

      goto LABEL_21;
    }
LABEL_60:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_18;
  }
LABEL_21:
  if (v13)
  {
    v104 = v11;
    sub_100229B54(0, (int64_t)v13, 0);
    v101 = v4;
    __asm { BR              X9 }
  }
  v38 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v39 = (const char *)_swiftEmptyArrayStorage;
  if (*(_QWORD *)&v102[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo])
  {
    v41 = *(const char **)&v102[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo + 8];
    *(_QWORD *)&v42 = swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v38).n128_u64[0];
    swift_bridgeObjectRetain(v41, v42);
    v44 = sub_100443BBC(v43, (uint64_t)_swiftEmptyArrayStorage);
    v45 = v41;
    v39 = (const char *)_swiftEmptyArrayStorage;
    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
    *(_QWORD *)&v47 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, v46).n128_u64[0];
    if (*(_QWORD *)(v44 + 16))
    {
      v2 = *(_BYTE **)(v44 + 32);
      v48 = *(const char **)(v44 + 56);
      *(_QWORD *)&v49 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v44 + 40), v47).n128_u64[0];
      *(_QWORD *)&v50 = swift_bridgeObjectRetain(v48, v49).n128_u64[0];
      *(_QWORD *)&v51 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, v50).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v44, v51);
      return v2;
    }
    v38 = swift_bridgeObjectRelease((const char *)v44, v47).n128_u64[0];
  }
  v52 = (const char *)_swiftEmptyArrayStorage[2];
  if (v52)
  {
    v106 = v12;
    v53 = v102;
    v100 = &v102[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v38);
    v98 = v53;
    v99 = (const char *)_swiftEmptyArrayStorage;
    v54 = (void **)&_swiftEmptyArrayStorage[7];
    v55 = _swiftEmptyArrayStorage;
    do
    {
      v58 = (uint64_t)*(v54 - 1);
      v57 = *v54;
      v101 = v52;
      v102 = v57;
      v60 = (uint64_t)*(v54 - 3);
      v59 = (uint64_t)*(v54 - 2);
      v62 = (_BYTE *)*v100;
      v61 = v100[1];
      ObjectType = swift_getObjectType(*v100);
      v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v61 + 80);
      swift_unknownObjectRetain(v62);
      v65 = v58;
      v2 = v62;
      v66 = v106;
      v67 = v64(v60, v59, v65, v102, ObjectType, v61);
      v106 = v66;
      if (v66)
      {

        swift_bridgeObjectRelease((const char *)v55);
        swift_bridgeObjectRelease_n(v99, 2);
        swift_unknownObjectRelease(v62);
        return v2;
      }
      v71 = v67;
      v72 = v68;
      v73 = v69;
      v74 = v70;
      swift_unknownObjectRelease(v62);
      if (v72)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
          v55 = sub_100228A7C(0, v55[2] + 1, 1, (uint64_t)v55);
        v76 = v55[2];
        v75 = v55[3];
        if (v76 >= v75 >> 1)
          v55 = sub_100228A7C((_QWORD *)(v75 > 1), v76 + 1, 1, (uint64_t)v55);
        v55[2] = v76 + 1;
        v56 = &v55[4 * v76];
        v56[4] = v71;
        v56[5] = v72;
        v56[6] = v73;
        v56[7] = v74;
      }
      v54 += 4;
      v52 = v101 - 1;
    }
    while (v101 != (const char *)1);

    v39 = v99;
    v38 = swift_bridgeObjectRelease(v99).n128_u64[0];
  }
  else
  {
    v55 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v39, *(double *)&v38);
  v77 = v55[2];
  v78 = _swiftEmptyArrayStorage;
  if (v77)
  {
    v104 = _swiftEmptyArrayStorage;
    sub_100229940(0, v77, 0);
    v78 = v104;
    v79 = (const char *)v55;
    v80 = (const char **)(v55 + 5);
    do
    {
      v81 = (uint64_t)*(v80 - 1);
      v82 = *v80;
      v104 = v78;
      v84 = v78[2];
      v83 = v78[3];
      swift_bridgeObjectRetain(v82);
      if (v84 >= v83 >> 1)
      {
        sub_100229940(v83 > 1, v84 + 1, 1);
        v78 = v104;
      }
      v80 += 4;
      v78[2] = v84 + 1;
      v85 = &v78[2 * v84];
      v85[4] = v81;
      v85[5] = v82;
      --v77;
    }
    while (v77);
  }
  else
  {
    v79 = (const char *)v55;
  }
  v86 = sub_10022D31C((uint64_t)v78);
  *(_QWORD *)&v87 = swift_bridgeObjectRelease((const char *)v78).n128_u64[0];
  v88 = *(_QWORD *)(v86 + 16);
  swift_bridgeObjectRelease((const char *)v86, v87);
  if (v88 > 1)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v89 = type metadata accessor for Logger(0);
    v90 = sub_100221DF8(v89, (uint64_t)qword_1007C0CF0);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.default.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v93 = 134217984;
      v104 = (_QWORD *)v88;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v93 + 4);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "%ld contacts match this set of hashes", v93, 0xCu);
      swift_slowDealloc(v93, -1, -1);
    }

  }
  if (*((_QWORD *)v79 + 2))
  {
    v2 = (_BYTE *)*((_QWORD *)v79 + 4);
    v94 = (const char *)*((_QWORD *)v79 + 7);
    *(_QWORD *)&v95 = swift_bridgeObjectRetain((const char *)*((_QWORD *)v79 + 5)).n128_u64[0];
    *(_QWORD *)&v96 = swift_bridgeObjectRetain(v94, v95).n128_u64[0];
    swift_bridgeObjectRelease(v79, v96);
  }
  else
  {
    swift_bridgeObjectRelease(v79);
    return 0;
  }
  return v2;
}

void sub_10043ED80(uint64_t a1, const char *a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  int64_t v9;
  void (*v10)(char *, int64_t, uint64_t);
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  id v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char **v20;
  char *v21;
  char *v22;
  uint64_t v23;
  const char *v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  const char *v43;
  double v44;
  Swift::Int v45;
  Swift::Int v46;
  double v47;
  double v48;
  int64_t v49;
  _QWORD *v50;
  const char **v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  unint64_t v56;
  unint64_t v57;
  double v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  const char **v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  const char *v66;
  double v67;
  double v68;
  const char *v69;
  void *v70;
  void **v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t ObjectType;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t);
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  double v85;
  const char *v86;
  const char *v87;
  double v88;
  double v89;
  uint64_t v90;
  const char **v91;
  const char *v92;
  uint64_t v93;
  id v94;
  const char *v95;
  _QWORD *v96;
  const char *v97;
  _BYTE *v98;
  void (*v99)(char *, uint64_t);
  _QWORD *v100;
  const char *v101;
  const char *v102;
  _QWORD v103[2];
  const char *v104;

  v97 = a2;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v2;
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *(_QWORD *)v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(char *, int64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  *(_QWORD *)v7 = v11;
  v10(v7, v9, v4);
  v14 = v11;
  v15 = _dispatchPreconditionTest(_:)(v7);
  v13(v7, v4);
  if ((v15 & 1) == 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v98[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
  {
    v31 = sub_100444E44();
    v32 = swift_allocError(&type metadata for SDAirDropHashError, v31, 0, 0);
    *v33 = 0;
    swift_willThrow(v32);
    return;
  }
  v104 = (const char *)&_swiftEmptySetSingleton;
  v100 = (_QWORD *)a1;
  v101 = v97;
  v103[0] = 44;
  v103[1] = 0xE100000000000000;
  v16 = sub_100221E10();
  v17 = StringProtocol.components<A>(separatedBy:)(v103, &type metadata for String, &type metadata for String, v16, v16);
  v18 = v17;
  v19 = *(_QWORD *)(v17 + 16);
  v12 = (uint64_t)_swiftEmptyArrayStorage;
  if (v19)
  {
    v20 = (const char **)(v17 + 40);
    v21 = (char *)_swiftEmptyArrayStorage;
    v13 = v99;
    do
    {
      v23 = (uint64_t)*(v20 - 1);
      v24 = *v20;
      v25 = swift_bridgeObjectRetain(*v20);
      v26 = Data.init(base64Encoded:options:)(v23, v24, 0, v25);
      v28 = v27;
      swift_bridgeObjectRelease(v24);
      if (v28 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
          v21 = (char *)sub_10022870C(0, *((_QWORD *)v21 + 2) + 1, 1, (uint64_t)v21);
        v30 = *((_QWORD *)v21 + 2);
        v29 = *((_QWORD *)v21 + 3);
        if (v30 >= v29 >> 1)
          v21 = (char *)sub_10022870C((_QWORD *)(v29 > 1), v30 + 1, 1, (uint64_t)v21);
        *((_QWORD *)v21 + 2) = v30 + 1;
        v22 = &v21[16 * v30];
        *((_QWORD *)v22 + 4) = v26;
        *((_QWORD *)v22 + 5) = v28;
      }
      v20 += 2;
      --v19;
    }
    while (v19);
    v34 = *(_QWORD *)(v18 + 16);
    v12 = (uint64_t)_swiftEmptyArrayStorage;
    v7 = v21;
  }
  else
  {
    v34 = 0;
    v7 = (char *)_swiftEmptyArrayStorage;
    v13 = v99;
  }
  v9 = *((_QWORD *)v7 + 2);
  swift_bridgeObjectRelease((const char *)v18);
  if (v9 != v34)
  {
    if (qword_1007B40C0 == -1)
    {
LABEL_18:
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100221DF8(v35, (uint64_t)qword_1007C0CF0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Decoded base64 count test failed", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

      goto LABEL_21;
    }
LABEL_52:
    swift_once(&qword_1007B40C0, sub_1004372E4);
    goto LABEL_18;
  }
LABEL_21:
  if (v9)
  {
    v100 = (_QWORD *)v12;
    sub_100229B54(0, v9, 0);
    v97 = v7;
    v99 = (void (*)(char *, uint64_t))v9;
    __asm { BR              X9 }
  }
  v40 = swift_bridgeObjectRelease(v7).n128_u64[0];
  v41 = (const char *)_swiftEmptyArrayStorage;
  v42 = *(_QWORD *)&v98[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
  v95 = (const char *)_swiftEmptyArrayStorage;
  if (v42)
  {
    v43 = *(const char **)&v98[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo + 8];
    *(_QWORD *)&v44 = swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v40).n128_u64[0];
    swift_bridgeObjectRetain(v43, v44);
    v46 = sub_100443BBC(v45, (uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)&v47 = swift_bridgeObjectRelease(v43).n128_u64[0];
    *(_QWORD *)&v48 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, v47).n128_u64[0];
    v49 = *(_QWORD *)(v46 + 16);
    if (v49)
    {
      v99 = v13;
      v100 = (_QWORD *)v12;
      sub_100229B70(0, v49, 0);
      v50 = v100;
      v97 = (const char *)v46;
      v51 = (const char **)(v46 + 56);
      do
      {
        v52 = (uint64_t)*(v51 - 3);
        v53 = *(v51 - 2);
        v54 = (uint64_t)*(v51 - 1);
        v55 = *v51;
        v100 = v50;
        v57 = v50[2];
        v56 = v50[3];
        *(_QWORD *)&v58 = swift_bridgeObjectRetain(v53).n128_u64[0];
        swift_bridgeObjectRetain(v55, v58);
        if (v57 >= v56 >> 1)
        {
          sub_100229B70(v56 > 1, v57 + 1, 1);
          v50 = v100;
        }
        v50[2] = v57 + 1;
        v59 = &v50[4 * v57];
        v59[4] = v52;
        v59[5] = v53;
        v59[6] = v54;
        v59[7] = v55;
        v51 += 9;
        --v49;
      }
      while (v49);
      v60 = swift_bridgeObjectRelease(v97).n128_u64[0];
      v13 = v99;
      v61 = v50[2];
      if (!v61)
        goto LABEL_34;
    }
    else
    {
      v60 = swift_bridgeObjectRelease((const char *)v46, v48).n128_u64[0];
      v50 = _swiftEmptyArrayStorage;
      v61 = _swiftEmptyArrayStorage[2];
      if (!v61)
      {
LABEL_34:
        v40 = swift_bridgeObjectRelease((const char *)v50, *(double *)&v60).n128_u64[0];
        v41 = v95;
        goto LABEL_35;
      }
    }
    v62 = (const char **)(v50 + 7);
    do
    {
      v63 = (uint64_t)*(v62 - 3);
      v64 = *(v62 - 2);
      v65 = (uint64_t)*(v62 - 1);
      v66 = *v62;
      *(_QWORD *)&v67 = swift_bridgeObjectRetain(v64, *(double *)&v60).n128_u64[0];
      swift_bridgeObjectRetain(v66, v67);
      sub_10045F278((uint64_t *)&v100, v63, v64, v65, v66);
      *(_QWORD *)&v68 = swift_bridgeObjectRelease(v101).n128_u64[0];
      v60 = swift_bridgeObjectRelease(v102, v68).n128_u64[0];
      v62 += 4;
      --v61;
    }
    while (v61);
    goto LABEL_34;
  }
LABEL_35:
  v69 = (const char *)*((_QWORD *)v41 + 2);
  if (v69)
  {
    v70 = v98;
    v96 = &v98[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    swift_bridgeObjectRetain(v41, *(double *)&v40);
    v94 = v70;
    v71 = (void **)(v41 + 56);
    v72 = _swiftEmptyArrayStorage;
    while (1)
    {
      v97 = v69;
      v73 = (uint64_t)*(v71 - 1);
      v98 = *v71;
      v99 = v13;
      v75 = (uint64_t)*(v71 - 3);
      v74 = (uint64_t)*(v71 - 2);
      v77 = *v96;
      v76 = v96[1];
      ObjectType = swift_getObjectType(*v96);
      v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v76 + 88);
      swift_unknownObjectRetain(v77);
      v80 = v99;
      v81 = v79(v75, v74, v73, v98, ObjectType, v76);
      v13 = v80;
      if (v80)
        break;
      v82 = v81;
      swift_unknownObjectRelease(v77);
      if ((swift_isUniquelyReferenced_nonNull_native(v72) & 1) == 0)
        v72 = sub_100228B88(0, v72[2] + 1, 1, (uint64_t)v72);
      v84 = v72[2];
      v83 = v72[3];
      if (v84 >= v83 >> 1)
        v72 = sub_100228B88((_QWORD *)(v83 > 1), v84 + 1, 1, (uint64_t)v72);
      v71 += 4;
      v72[2] = v84 + 1;
      v72[v84 + 4] = v82;
      v69 = v97 - 1;
      if (v97 == (const char *)1)
      {

        v41 = v95;
        v40 = swift_bridgeObjectRelease(v95).n128_u64[0];
        goto LABEL_46;
      }
    }

    *(_QWORD *)&v85 = swift_bridgeObjectRelease((const char *)v72).n128_u64[0];
    v86 = v95;
    swift_bridgeObjectRelease(v95, v85);
    swift_unknownObjectRelease(v77);
    v87 = v104;
    *(_QWORD *)&v88 = swift_bridgeObjectRelease(v86).n128_u64[0];
    swift_bridgeObjectRelease(v87, v88);
  }
  else
  {
    v72 = _swiftEmptyArrayStorage;
LABEL_46:
    *(_QWORD *)&v89 = swift_bridgeObjectRelease(v41, *(double *)&v40, v94).n128_u64[0];
    v90 = v72[2];
    if (v90)
    {
      v91 = (const char **)(v72 + 4);
      do
      {
        v92 = *v91++;
        swift_bridgeObjectRetain(v92, v89);
        sub_100455F1C(v93);
        --v90;
      }
      while (v90);
    }
    swift_bridgeObjectRelease((const char *)v72, v89);
  }
}

uint64_t sub_10043F5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  id v9;
  char v10;
  uint64_t (*v11)(_QWORD *, uint64_t);
  uint64_t result;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  double v19;
  _BYTE *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v5 = v6;
  v7 = enum case for DispatchPredicate.onQueue(_:);
  v8 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v9 = v6;
  v10 = _dispatchPreconditionTest(_:)(v5);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8);
  result = v11(v5, v2);
  if ((v10 & 1) != 0)
  {
    *v5 = v9;
    v8(v5, v7, v2);
    v13 = v9;
    v14 = _dispatchPreconditionTest(_:)(v5);
    result = v11(v5, v2);
    if ((v14 & 1) != 0)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
      {
        v15 = v30;
        if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_bucket), "acquireTokenForIdentifier:", (unsigned __int16)v30))
        {
          if (*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo))
          {
            v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo + 8);
            v17 = *(_QWORD *)(v16 + 16);
            *(_QWORD *)&v19 = swift_bridgeObjectRetain((const char *)v16).n128_u64[0];
            if (v17)
            {
              v20 = v18 + 99;
              while ((*v20 & 1) != 0 || *(unsigned __int16 *)(v20 - 3) != (unsigned __int16)v15)
              {
                v20 += 72;
                if (!--v17)
                  goto LABEL_16;
              }
              swift_bridgeObjectRelease(v18, v19);
              v21 = 1;
              return v21 & 1;
            }
LABEL_16:
            swift_bridgeObjectRelease(v18, v19);
          }
          v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
          v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
          ObjectType = swift_getObjectType(v25);
          v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 112);
          swift_unknownObjectRetain(v25);
          v21 = v28(v15, ObjectType, v26);
          swift_unknownObjectRelease(v25);
          return v21 & 1;
        }
        v21 = 5;
      }
      else
      {
        v21 = 0;
      }
      v22 = sub_100444E44();
      v23 = swift_allocError(&type metadata for SDAirDropHashError, v22, 0, 0);
      *v24 = v21;
      swift_willThrow(v23);
      return v21 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10043F834(_QWORD *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  char v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  uint64_t result;
  id v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  const char *v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  double v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;

  v28 = a2;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  *v7 = v11;
  v10(v7, v9, v4);
  v15 = v11;
  v16 = _dispatchPreconditionTest(_:)(v7);
  result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
  {
    v17 = v29;
    v18 = sub_10043E460(a1, v28);
    if (!v17)
    {
      v21 = v19;
      if (v19)
      {
        v22 = (uint64_t)v18;
        *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
        swift_bridgeObjectRetain(v21, v23);
        v2 = sub_10043F9FC(v22, v21);
        swift_bridgeObjectRelease_n(v21, 2);
      }
      else
      {
        return 0;
      }
    }
  }
  else
  {
    v24 = sub_100444E44();
    v25 = swift_allocError(&type metadata for SDAirDropHashError, v24, 0, 0);
    *v26 = 0;
    swift_willThrow(v25);
  }
  return v2;
}

uint64_t sub_10043F9FC(uint64_t a1, const char *a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  char v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  uint64_t result;
  id v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v13(v7, v4);
  if ((v12 & 1) != 0)
  {
    *v7 = v11;
    v10(v7, v9, v4);
    v15 = v11;
    v16 = _dispatchPreconditionTest(_:)(v7);
    result = v13(v7, v4);
    if ((v16 & 1) != 0)
    {
      if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
      {
        v26 = sub_100444E44();
        v27 = swift_allocError(&type metadata for SDAirDropHashError, v26, 0, 0);
        *v28 = 0;
        swift_willThrow(v27);
        return (uint64_t)v2;
      }
      v17 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo;
      v18 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
      v19 = v31;
      if (v18)
      {
        v20 = objc_msgSend(v18, "identifier");
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        if (v21 == v19 && v23 == a2)
        {
          swift_bridgeObjectRelease(a2);
        }
        else
        {
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v19, a2, 0);
          swift_bridgeObjectRelease(v23);
          if ((v25 & 1) == 0)
            goto LABEL_10;
        }
        v2 = *(_BYTE **)&v2[v17];
        if (v2)
          v29 = v2;
        return (uint64_t)v2;
      }
LABEL_10:
      sub_10023A834(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore], *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore + 24]);
      return sub_1004925C8(v19, (unint64_t)a2);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10043FC14(uint64_t a1, const char *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  char v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  uint64_t result;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  const char *v21;
  char *v22;
  const char *v23;
  const char *v24;
  uint64_t (*v25)(_QWORD *, uint64_t);
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;

  v30 = a2;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  *v7 = v11;
  v10(v7, v9, v4);
  v15 = v11;
  v16 = _dispatchPreconditionTest(_:)(v7);
  result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] == 1)
  {
    v17 = v31;
    sub_10043ED80(a1, v30);
    if (!v17)
    {
      v19 = (const char *)v18;
      sub_1004368CC(v18);
      v21 = v20;
      swift_bridgeObjectRelease(v19);
      v22 = v2;
      sub_100443978((uint64_t)v21);
      v24 = v23;
      swift_bridgeObjectRelease(v21);

      sub_10022D3B0((uint64_t)v24);
      v13 = v25;
      swift_bridgeObjectRelease(v24);
    }
  }
  else
  {
    v26 = sub_100444E44();
    v27 = swift_allocError(&type metadata for SDAirDropHashError, v26, 0, 0);
    *v28 = 0;
    swift_willThrow(v27);
  }
  return (uint64_t)v13;
}

uint64_t sub_10043FDF0(_QWORD *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  char v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  uint64_t result;
  id v15;
  char v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;

  v24 = a2;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v7 = v8;
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v11 = v8;
  v12 = _dispatchPreconditionTest(_:)(v7);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  *v7 = v11;
  v10(v7, v9, v4);
  v15 = v11;
  v16 = _dispatchPreconditionTest(_:)(v7);
  result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
  {
    v17 = v25;
    sub_10043E460(a1, v24);
    if (!v17)
    {
      if (v18)
      {
        v2 = v19;
        swift_bridgeObjectRelease(v18);
      }
      else
      {
        return 0;
      }
    }
  }
  else
  {
    v20 = sub_100444E44();
    v21 = swift_allocError(&type metadata for SDAirDropHashError, v20, 0, 0);
    *v22 = 0;
    swift_willThrow(v21);
  }
  return v2;
}

id sub_10043FF90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  id v10;
  char v11;
  void (*v12)(_QWORD *, uint64_t);
  id v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v22 = a1;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = v2;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v6 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v7;
  v11 = _dispatchPreconditionTest(_:)(v6);
  v12 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v12(v6, v3);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  *v6 = v10;
  v9(v6, v8, v3);
  v13 = v10;
  v14 = _dispatchPreconditionTest(_:)(v6);
  v12(v6, v3);
  if ((v14 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x1004405B0);
  }
  if (*(_BYTE *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
    __asm { BR              X10 }
  v15 = sub_100444E44();
  v16 = swift_allocError(&type metadata for SDAirDropHashError, v15, 0, 0);
  *v17 = 0;
  swift_willThrow(v16);
  return v10;
}

uint64_t sub_1004405C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  id v10;
  char v11;
  void (*v12)(_QWORD *, uint64_t);
  id v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *v6 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v7;
  v11 = _dispatchPreconditionTest(_:)(v6);
  v12 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v12(v6, v3);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  *v6 = v10;
  v9(v6, v8, v3);
  v13 = v10;
  v14 = _dispatchPreconditionTest(_:)(v6);
  v12(v6, v3);
  if ((v14 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x100440908);
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
    __asm { BR              X11 }
  v15 = sub_100444E44();
  v16 = swift_allocError(&type metadata for SDAirDropHashError, v15, 0, 0);
  *v17 = 0;
  swift_willThrow(v16);
  return v18 & 1;
}

uint64_t sub_100440920@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a1;
  result = NSNotFound.getter();
  v7 = v5 + a2;
  if (__OFADD__(v5, a2))
  {
    __break(1u);
  }
  else if (v5 != result && v5 < v7)
  {
    *a3 = v5;
    a3[1] = v7;
    return result;
  }
  __break(1u);
  return result;
}

NSString *sub_100440970()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;
  NSString *v3;
  uint64_t v5;

  v0 = sub_100008384(&qword_1007B5390);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1005D8400;
  *(_QWORD *)(v1 + 32) = CNContactPhoneNumbersKey;
  *(_QWORD *)(v1 + 40) = CNContactEmailAddressesKey;
  v5 = v1;
  *(_QWORD *)(v1 + 48) = CNContactInstantMessageAddressesKey;
  specialized Array._endMutation()(v1);
  qword_1007C0D10 = v5;
  v2 = CNContactPhoneNumbersKey;
  v3 = CNContactEmailAddressesKey;
  return CNContactInstantMessageAddressesKey;
}

uint64_t sub_100440A0C()
{
  uint64_t v0;
  uint64_t inited;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;

  v0 = sub_100008384(&qword_1007C43F0);
  inited = swift_initStackObject(v0, &v25);
  *(_OWORD *)(inited + 16) = xmmword_1005D8410;
  v2 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "descriptorForRequiredKeysForStyle:", 0);
  *(_QWORD *)(inited + 56) = swift_getObjectType(v2);
  *(_QWORD *)(inited + 32) = v2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNamePrefixKey);
  *(_QWORD *)(inited + 88) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactGivenNameKey);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = v6;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactMiddleNameKey);
  *(_QWORD *)(inited + 152) = &type metadata for String;
  *(_QWORD *)(inited + 128) = v7;
  *(_QWORD *)(inited + 136) = v8;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactFamilyNameKey);
  *(_QWORD *)(inited + 184) = &type metadata for String;
  *(_QWORD *)(inited + 160) = v9;
  *(_QWORD *)(inited + 168) = v10;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPreviousFamilyNameKey);
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 192) = v11;
  *(_QWORD *)(inited + 200) = v12;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNameSuffixKey);
  *(_QWORD *)(inited + 248) = &type metadata for String;
  *(_QWORD *)(inited + 224) = v13;
  *(_QWORD *)(inited + 232) = v14;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNicknameKey);
  *(_QWORD *)(inited + 280) = &type metadata for String;
  *(_QWORD *)(inited + 256) = v15;
  *(_QWORD *)(inited + 264) = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactOrganizationNameKey);
  *(_QWORD *)(inited + 312) = &type metadata for String;
  *(_QWORD *)(inited + 288) = v17;
  *(_QWORD *)(inited + 296) = v18;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactTypeKey);
  *(_QWORD *)(inited + 344) = &type metadata for String;
  *(_QWORD *)(inited + 320) = v19;
  *(_QWORD *)(inited + 328) = v20;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPostalAddressesKey);
  *(_QWORD *)(inited + 376) = &type metadata for String;
  *(_QWORD *)(inited + 352) = v21;
  *(_QWORD *)(inited + 360) = v22;
  v23 = sub_10038D9F4(inited);
  swift_setDeallocating(inited);
  result = swift_arrayDestroy(inited + 32, 11, (char *)&type metadata for Any + 8);
  qword_1007C0D18 = (uint64_t)v23;
  return result;
}

void sub_100440BBC()
{
  qword_1007C0D20 = (uint64_t)_swiftEmptyArrayStorage;
}

void sub_100440BD0()
{
  qword_1007C0D28 = (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for SDAirDropContactHashManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary27SDAirDropContactHashManager);
}

uint64_t sub_100440DF8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  v11 = swift_allocObject(&unk_100728E18, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_10044509C;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100728E30;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  static DispatchQoS.unspecified.getter(a1);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

void sub_100440FE4(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  double v13;
  id v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  double v18;
  id v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  NSObject *oslog;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v4 = type metadata accessor for Logger(0);
    sub_100221DF8(v4, (uint64_t)qword_1007C0CF0);
    v5 = a2;
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(32, -1);
      v32 = swift_slowAlloc(96, -1);
      v36[0] = v32;
      *(_DWORD *)v8 = 136315650;
      v9 = objc_msgSend(v5, "givenName");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v34 = sub_100228BD8(v10, (unint64_t)v12, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 4);

      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
      *(_WORD *)(v8 + 12) = 2080;
      v14 = objc_msgSend(v5, "familyName", v13);
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v34 = sub_100228BD8(v15, (unint64_t)v17, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 14);

      *(_QWORD *)&v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
      *(_WORD *)(v8 + 22) = 2080;
      v19 = objc_msgSend(v5, "identifier", v18);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v34 = sub_100228BD8(v20, (unint64_t)v22, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 24);

      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Setting meCard (fn=%s,ln=%s,cid=%s)", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy(v32, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

    }
    sub_10043B6C8(v5);
    v27 = (_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo);
    v28 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo);
    v29 = v27[1];
    *v27 = v5;
    v27[1] = v30;
    v31 = v5;
    sub_1004450A4(v28, v29);
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100221DF8(v23, (uint64_t)qword_1007C0CF0);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "Not activated in setMeCard. Bailing.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

uint64_t sub_100441588@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, const char *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v22[3];
  _BYTE v23[8];
  uint64_t v24;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    result = sub_10043F834(a2, a3);
    if (v4)
    {
      if (qword_1007B40C0 != -1)
        swift_once(&qword_1007B40C0, sub_1004372E4);
      v7 = type metadata accessor for Logger(0);
      sub_100221DF8(v7, (uint64_t)qword_1007C0CF0);
      swift_errorRetain(v4);
      v8 = swift_errorRetain(v4);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter(v9);
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        v24 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_getErrorValue(v4, v23, v22);
        v13 = Error.localizedDescription.getter(v22[1], v22[2]);
        v15 = (const char *)v14;
        v21 = sub_100228BD8(v13, v14, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v11 + 4);
        swift_bridgeObjectRelease(v15);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error: failed to get contactForCombinedHash because (%s)", v11, 0xCu);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);

        swift_errorRelease(v4);
      }
      else
      {
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        swift_errorRelease(v4);

      }
      result = 0;
    }
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not activated in contactForCombinedHash. Bailing.", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    result = 0;
  }
  *a4 = result;
  return result;
}

void *sub_1004418E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  void *result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v22[3];
  _BYTE v23[8];
  uint64_t v24;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) != 1)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not activated in contactsForCombinedHash. Bailing.", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    goto LABEL_14;
  }
  result = (void *)sub_10043FC14(a2, a3);
  if (v4)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v7 = type metadata accessor for Logger(0);
    sub_100221DF8(v7, (uint64_t)qword_1007C0CF0);
    swift_errorRetain(v4);
    v8 = swift_errorRetain(v4);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v24 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_getErrorValue(v4, v23, v22);
      v13 = Error.localizedDescription.getter(v22[1], v22[2]);
      v15 = (const char *)v14;
      v21 = sub_100228BD8(v13, v14, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v11 + 4);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error: failed to get contactsForCombinedHash because (%s)", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
    }
    swift_errorRelease(v4);

LABEL_14:
    result = &_swiftEmptySetSingleton;
  }
  *a4 = result;
  return result;
}

void sub_100441D20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, const char *a5@<X4>, const char *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD v28[3];
  char v29[8];
  uint64_t v30;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    v10 = a4(a2, a3);
    if (!v7)
    {
      *a7 = v10;
      a7[1] = v11;
      return;
    }
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v12 = type metadata accessor for Logger(0);
    sub_100221DF8(v12, (uint64_t)qword_1007C0CF0);
    swift_errorRetain(v7);
    v13 = swift_errorRetain(v7);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v30 = v17;
      *(_DWORD *)v16 = 136315138;
      swift_getErrorValue(v7, v29, v28);
      v18 = Error.localizedDescription.getter(v28[1], v28[2]);
      v20 = (const char *)v19;
      v27 = sub_100228BD8(v18, v19, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v16 + 4);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, a6, v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      swift_errorRelease(v7);
    }
    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);

    }
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100221DF8(v22, (uint64_t)qword_1007C0CF0);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, a5, v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  *a7 = 0;
  a7[1] = 0;
}

void sub_1004420C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char v21;
  uint64_t v22;
  _QWORD v23[3];
  _BYTE v24[8];
  uint64_t v25;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    v6 = sub_1004405C8(a2, a3);
    if (v4)
    {
      if (qword_1007B40C0 != -1)
        swift_once(&qword_1007B40C0, sub_1004372E4);
      v7 = type metadata accessor for Logger(0);
      sub_100221DF8(v7, (uint64_t)qword_1007C0CF0);
      swift_errorRetain(v4);
      v8 = swift_errorRetain(v4);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter(v9);
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        v25 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_getErrorValue(v4, v24, v23);
        v13 = Error.localizedDescription.getter(v23[1], v23[2]);
        v15 = (const char *)v14;
        v22 = sub_100228BD8(v13, v14, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v11 + 4);
        swift_bridgeObjectRelease(v15);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Hash manager: failed to determine if contacts contain short hashes with error (%s)", v11, 0xCu);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);

        swift_errorRelease(v4);
      }
      else
      {
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        swift_errorRelease(v4);

      }
      v21 = 0;
    }
    else
    {
      v21 = v6 & 1;
    }
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007C0CF0);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not activated in contactsContainsShortHashes. Bailing.", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    v21 = 0;
  }
  *a4 = v21;
}

__n128 sub_10044243C()
{
  if (qword_1007B40D0 != -1)
    swift_once(&qword_1007B40D0, sub_100440970);
  qword_1007D8488 = qword_1007C0D10;
  return swift_bridgeObjectRetain((const char *)qword_1007C0D10);
}

void sub_1004424A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1007B40D0 != -1)
    swift_once(&qword_1007B40D0, sub_100440970);
  v0 = qword_1007C0D10;
  if (qword_1007B40D8 != -1)
    swift_once(&qword_1007B40D8, sub_100440A0C);
  v1 = qword_1007C0D18;
  swift_bridgeObjectRetain(v0);
  v2 = swift_bridgeObjectRetain(v1);
  sub_100342FAC(v2);
  if (qword_1007B40E0 != -1)
    swift_once(&qword_1007B40E0, sub_100440BBC);
  v3 = qword_1007C0D20;
  swift_bridgeObjectRetain(v0);
  v4 = swift_bridgeObjectRetain(v3);
  sub_100342FAC(v4);
  swift_bridgeObjectRelease(v0);
  if (qword_1007B40E8 != -1)
    swift_once(&qword_1007B40E8, sub_100440BD0);
  v5 = qword_1007C0D28;
  swift_bridgeObjectRetain(v0);
  v6 = swift_bridgeObjectRetain(v5);
  sub_100342FAC(v6);
  swift_bridgeObjectRelease(v0);
  qword_1007D8490 = v0;
}

Class sub_10044261C(uint64_t a1, uint64_t a2, _QWORD *a3, const char **a4, uint64_t a5)
{
  const char *v6;
  Class isa;

  if (*a3 != -1)
    swift_once(a3, a5);
  v6 = *a4;
  swift_bridgeObjectRetain(v6);
  sub_100008384((uint64_t *)&unk_1007C0E40);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

void sub_100442688(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007C0CF0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Database dump requested", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
    ObjectType = swift_getObjectType(v11);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 72);
    swift_unknownObjectRetain(v11);
    v15 = v14(a2, ObjectType, v12);
    swift_unknownObjectRelease(v11);
    v16 = v15 & 1;
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007C0CF0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Not activated in dumpDB. Bailing.", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v16 = 0;
  }
  *a3 = v16;
}

uint64_t sub_100442954()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  v9 = swift_allocObject(&unk_100728B20, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_100444D30;
  v18 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100728B38;
  v10 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_100008384((uint64_t *)&unk_1007B6410);
  v13 = sub_10037B658((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v18);
}

void sub_100442B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007C0CF0);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requesting hash database rebuild", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    sub_1004381E4(1);
  }
  else
  {
    if (qword_1007B40C0 != -1)
      swift_once(&qword_1007B40C0, sub_1004372E4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007C0CF0);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Not activated in rebuildDB. Bailing.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
}

uint64_t sub_100442D84(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  const char **v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  char *v28;
  const char *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v37[5];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  const char *v50[8];

  v44 = type metadata accessor for SHA256(0);
  v39 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SHA256Digest(0);
  v37[4] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37[3] = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.Encoding(0);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004434E8(a3);
  v50[0] = a1;
  swift_bridgeObjectRetain(a1);
  sub_100343690(v11);
  v12 = sub_10042CFDC(a3, (uint64_t)v50[0]);
  v16 = v15 >> 1;
  v17 = (v15 >> 1) - v14;
  if (__OFSUB__(v15 >> 1, v14))
  {
    __break(1u);
    goto LABEL_12;
  }
  v18 = v12;
  if (v17)
  {
    v19 = v13;
    v20 = v14;
    v49 = _swiftEmptyArrayStorage;
    sub_100229BC4(0, v17 & ~(v17 >> 63), 0);
    if ((v17 & 0x8000000000000000) == 0)
    {
      v37[0] = v18;
      v48 = 0;
      if (v20 <= v16)
        v21 = v16;
      else
        v21 = v20;
      v22 = v21 - v20;
      v23 = (_QWORD *)(v19 + 16 * v20);
      v37[2] = a2;
      v24 = (const char **)(v23 + 1);
      v43 = v7;
      if (v22)
      {
        v25 = *v23;
        v26 = *v24;
        v27 = swift_bridgeObjectRetain(*v24, v37[0]);
        v28 = v40;
        static String.Encoding.utf8.getter(v27);
        *(_QWORD *)&v45 = v26;
        v29 = (const char *)String.data(using:allowLossyConversion:)(v28, 0, v25, v26);
        v31 = v30;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v42);
        v50[6] = v29;
        v50[7] = v31;
        v32 = sub_100008384(&qword_1007B5220);
        Optional.unwrap(_:file:line:)(v50, sub_1004437CC, 0, "DaemoniOSLibrary/SDAirDropContactHashManager.swift", 50, 2, 1243, v32);
        sub_100225AA0((uint64_t)v29, (unint64_t)v31);
        v33 = (unint64_t)v50[1];
        v34 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
        dispatch thunk of HashFunction.init()(v44, v34);
        v35 = (char *)&loc_100443010 + *((int *)qword_1004433F8 + (v33 >> 62));
        v46 = v22;
        v47 = v17;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x1004433DCLL);
    }
LABEL_12:
    __break(1u);
  }
  swift_unknownObjectRelease(v12);
  v50[0] = (const char *)_swiftEmptyArrayStorage;
  sub_1004437E8();
  return sub_1004557D0(v50[0]);
}

uint64_t sub_1004434E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  const char **v9;
  void *v10;
  _QWORD *v11;
  char **v12;
  _QWORD *v13;
  const char *v14;
  id v15;
  NSString v16;
  char **v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  NSString v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;

  v2 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  result = __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1)
  {
    __break(1u);
  }
  else
  {
    v6 = sub_100229740((_QWORD *)1, a1);
    v7 = sub_100443AA0((uint64_t)v6, 0xD000000000000018, (const char *)0x800000010061B4F0);
    swift_release(v6);
    v8 = v7[2];
    v32 = (const char *)v7;
    if (v8)
    {
      v9 = (const char **)(v7 + 5);
      v10 = (void *)objc_opt_self(NSUserDefaults);
      v11 = _swiftEmptyArrayStorage;
      v12 = &selRef_setSupportsApproveIcon_;
      v35 = v10;
      while (1)
      {
        v36 = v11;
        v14 = *v9;
        swift_bridgeObjectRetain(*v9);
        v15 = objc_msgSend(v10, v12[361]);
        v16 = String._bridgeToObjectiveC()();
        v17 = v12;
        v18 = objc_msgSend(v15, "stringForKey:", v16);

        if (v18)
        {
          swift_bridgeObjectRelease(v14);
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          v22 = v21;

          v11 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
            v11 = sub_100227A68(0, v11[2] + 1, 1, v11);
          v12 = &selRef_setSupportsApproveIcon_;
          v24 = v11[2];
          v23 = v11[3];
          v25 = v24 + 1;
          if (v24 < v23 >> 1)
            goto LABEL_7;
        }
        else
        {
          v26 = UUID.init()(v19);
          v20 = UUID.uuidString.getter(v26);
          v22 = v27;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v34);
          v28 = objc_msgSend(v10, v17[361]);
          v29 = String._bridgeToObjectiveC()();
          v30 = String._bridgeToObjectiveC()();
          objc_msgSend(v28, "setObject:forKey:", v29, v30, swift_bridgeObjectRelease(v14).n128_f64[0]);

          v11 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
            v11 = sub_100227A68(0, v11[2] + 1, 1, v11);
          v24 = v11[2];
          v23 = v11[3];
          v25 = v24 + 1;
          v12 = &selRef_setSupportsApproveIcon_;
          if (v24 < v23 >> 1)
            goto LABEL_7;
        }
        v11 = sub_100227A68((_QWORD *)(v23 > 1), v25, 1, v11);
LABEL_7:
        v11[2] = v25;
        v13 = &v11[2 * v24];
        v13[4] = v20;
        v13[5] = v22;
        v9 += 2;
        --v8;
        v10 = v35;
        if (!v8)
          goto LABEL_5;
      }
    }
    v11 = _swiftEmptyArrayStorage;
LABEL_5:
    swift_bridgeObjectRelease(v32);
    return (uint64_t)v11;
  }
  return result;
}

